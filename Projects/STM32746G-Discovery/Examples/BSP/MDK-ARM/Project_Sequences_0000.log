/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0000.log
 *  Created     : 18:24:26 (09/03/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[18:24:26.930]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:24:26.930]  
[18:24:26.931]  <debugvars>
[18:24:26.931]    // Pre-defined
[18:24:26.931]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:24:26.931]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:24:26.931]    __dp=0x00000000
[18:24:26.931]    __ap=0x00000000
[18:24:26.932]    __traceout=0x00000001      (SWO Trace)
[18:24:26.932]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:24:26.932]    __FlashAddr=0x00000000
[18:24:26.932]    __FlashLen=0x00000000
[18:24:26.932]    __FlashArg=0x00000000
[18:24:26.932]    __FlashOp=0x00000000
[18:24:26.932]    __Result=0x00000000
[18:24:26.933]    
[18:24:26.933]    // User-defined
[18:24:26.933]    DbgMCU_CR=0x00000007
[18:24:26.933]    DbgMCU_APB1_Fz=0x00000000
[18:24:26.933]    DbgMCU_APB2_Fz=0x00000000
[18:24:26.933]    TraceClk_Pin=0x00040002
[18:24:26.933]    TraceD0_Pin=0x00040003
[18:24:26.933]    TraceD1_Pin=0x00040004
[18:24:26.934]    TraceD2_Pin=0x00040005
[18:24:26.934]    TraceD3_Pin=0x00040006
[18:24:26.934]  </debugvars>
[18:24:26.934]  
[18:24:26.934]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:24:26.934]    <block atomic="false" info="">
[18:24:26.934]      Sequence("CheckID");
[18:24:26.935]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:24:26.935]          <block atomic="false" info="">
[18:24:26.935]            __var pidr1 = 0;
[18:24:26.935]              // -> [pidr1 <= 0x00000000]
[18:24:26.935]            __var pidr2 = 0;
[18:24:26.935]              // -> [pidr2 <= 0x00000000]
[18:24:26.935]            __var jep106id = 0;
[18:24:26.935]              // -> [jep106id <= 0x00000000]
[18:24:26.936]            __var ROMTableBase = 0;
[18:24:26.936]              // -> [ROMTableBase <= 0x00000000]
[18:24:26.936]            __ap = 0;      // AHB-AP
[18:24:26.936]              // -> [__ap <= 0x00000000]
[18:24:26.936]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:24:26.936]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.937]              // -> [ROMTableBase <= 0xE00FD000]
[18:24:26.937]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:24:26.937]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.937]              // -> [pidr1 <= 0x00000004]
[18:24:26.937]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:24:26.938]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.938]              // -> [pidr2 <= 0x0000001A]
[18:24:26.938]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:24:26.939]              // -> [jep106id <= 0x00000020]
[18:24:26.939]          </block>
[18:24:26.939]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:24:26.939]            // if-block "jep106id != 0x20"
[18:24:26.939]              // =>  FALSE
[18:24:26.939]            // skip if-block "jep106id != 0x20"
[18:24:26.939]          </control>
[18:24:26.940]        </sequence>
[18:24:26.940]    </block>
[18:24:26.940]  </sequence>
[18:24:26.940]  
[18:24:26.955]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:24:26.955]  
[18:24:26.955]  <debugvars>
[18:24:26.955]    // Pre-defined
[18:24:26.956]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:24:26.956]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:24:26.956]    __dp=0x00000000
[18:24:26.956]    __ap=0x00000000
[18:24:26.957]    __traceout=0x00000001      (SWO Trace)
[18:24:26.957]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:24:26.957]    __FlashAddr=0x00000000
[18:24:26.957]    __FlashLen=0x00000000
[18:24:26.957]    __FlashArg=0x00000000
[18:24:26.958]    __FlashOp=0x00000000
[18:24:26.958]    __Result=0x00000000
[18:24:26.958]    
[18:24:26.958]    // User-defined
[18:24:26.958]    DbgMCU_CR=0x00000007
[18:24:26.958]    DbgMCU_APB1_Fz=0x00000000
[18:24:26.958]    DbgMCU_APB2_Fz=0x00000000
[18:24:26.959]    TraceClk_Pin=0x00040002
[18:24:26.959]    TraceD0_Pin=0x00040003
[18:24:26.959]    TraceD1_Pin=0x00040004
[18:24:26.959]    TraceD2_Pin=0x00040005
[18:24:26.959]    TraceD3_Pin=0x00040006
[18:24:26.960]  </debugvars>
[18:24:26.960]  
[18:24:26.960]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:24:26.960]    <block atomic="false" info="">
[18:24:26.960]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:24:26.961]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.961]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:24:26.962]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.962]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:24:26.962]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.962]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:24:26.963]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.963]    </block>
[18:24:26.963]  </sequence>
[18:24:26.964]  
[18:24:26.981]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[18:24:26.981]  
[18:24:26.981]  <debugvars>
[18:24:26.981]    // Pre-defined
[18:24:26.982]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:24:26.982]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:24:26.982]    __dp=0x00000000
[18:24:26.982]    __ap=0x00000000
[18:24:26.982]    __traceout=0x00000001      (SWO Trace)
[18:24:26.983]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:24:26.983]    __FlashAddr=0x00000000
[18:24:26.983]    __FlashLen=0x00000000
[18:24:26.983]    __FlashArg=0x00000000
[18:24:26.983]    __FlashOp=0x00000000
[18:24:26.983]    __Result=0x00000000
[18:24:26.984]    
[18:24:26.984]    // User-defined
[18:24:26.984]    DbgMCU_CR=0x00000007
[18:24:26.984]    DbgMCU_APB1_Fz=0x00000000
[18:24:26.984]    DbgMCU_APB2_Fz=0x00000000
[18:24:26.984]    TraceClk_Pin=0x00040002
[18:24:26.985]    TraceD0_Pin=0x00040003
[18:24:26.985]    TraceD1_Pin=0x00040004
[18:24:26.985]    TraceD2_Pin=0x00040005
[18:24:26.985]    TraceD3_Pin=0x00040006
[18:24:26.985]  </debugvars>
[18:24:26.986]  
[18:24:26.986]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:24:26.986]    <block atomic="false" info="">
[18:24:26.986]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:24:26.986]        // -> [traceSWO <= 0x00000001]
[18:24:26.986]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:24:26.987]        // -> [traceTPIU <= 0x00000000]
[18:24:26.987]    </block>
[18:24:26.987]    <control if="traceSWO" while="" timeout="0" info="">
[18:24:26.987]      // if-block "traceSWO"
[18:24:26.987]        // =>  TRUE
[18:24:26.987]      <block atomic="false" info="">
[18:24:26.988]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:24:26.988]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:24:26.988]            <block atomic="false" info="">
[18:24:26.988]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:24:26.988]                // -> [dbgmcu_val <= 0x00000000]
[18:24:26.988]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:24:26.988]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:24:26.989]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:24:26.989]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.989]                // -> [dbgmcu_val <= 0x00000007]
[18:24:26.989]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:24:26.990]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:24:26.990]              Sequence("ConfigureTraceSWOPin");
[18:24:26.990]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:24:26.990]                  <block atomic="false" info="">
[18:24:26.990]                    __var pin     = 0;
[18:24:26.990]                      // -> [pin <= 0x00000000]
[18:24:26.990]                    __var port    = 0;
[18:24:26.991]                      // -> [port <= 0x00000000]
[18:24:26.991]                    __var portAdr = 0;
[18:24:26.991]                      // -> [portAdr <= 0x00000000]
[18:24:26.991]                    __var pos     = 0;
[18:24:26.991]                      // -> [pos <= 0x00000000]
[18:24:26.991]                    __var SWO_Pin = 0x00010003;          // PB3
[18:24:26.991]                      // -> [SWO_Pin <= 0x00010003]
[18:24:26.991]                  </block>
[18:24:26.992]                  <block atomic="false" info="configure SWO">
[18:24:26.992]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:24:26.992]                      // -> [pin <= 0x00000003]
[18:24:26.992]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:24:26.992]                      // -> [port <= 0x00000001]
[18:24:26.992]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:24:26.992]                      // -> [portAdr <= 0x40020400]
[18:24:26.992]                    pos = pin * 2;
[18:24:26.992]                      // -> [pos <= 0x00000006]
[18:24:26.993]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:24:26.993]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.993]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.994]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:24:26.994]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.994]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.995]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:24:26.995]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.995]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.996]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:24:26.996]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.996]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.997]                  </block>
[18:24:26.997]                  <control if="pin <  8" while="" timeout="0" info="">
[18:24:26.997]                    // if-block "pin <  8"
[18:24:26.997]                      // =>  TRUE
[18:24:26.997]                    <block atomic="false" info="">
[18:24:26.997]                      pos = ((pin    ) & 7) * 4;
[18:24:26.997]                        // -> [pos <= 0x0000000C]
[18:24:26.998]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:24:26.998]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.998]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:26.999]                    </block>
[18:24:26.999]                    // end if-block "pin <  8"
[18:24:26.999]                  </control>
[18:24:26.999]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:24:26.999]                    // if-block "pin >= 8"
[18:24:26.999]                      // =>  FALSE
[18:24:26.999]                    // skip if-block "pin >= 8"
[18:24:26.999]                  </control>
[18:24:27.000]                </sequence>
[18:24:27.000]            </block>
[18:24:27.000]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:24:27.000]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:24:27.000]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.001]            </block>
[18:24:27.001]          </sequence>
[18:24:27.001]      </block>
[18:24:27.001]      // end if-block "traceSWO"
[18:24:27.001]    </control>
[18:24:27.001]    <control if="traceTPIU" while="" timeout="0" info="">
[18:24:27.001]      // if-block "traceTPIU"
[18:24:27.002]        // =>  FALSE
[18:24:27.002]      // skip if-block "traceTPIU"
[18:24:27.002]    </control>
[18:24:27.002]  </sequence>
[18:24:27.002]  
[18:24:27.006]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:24:27.006]  
[18:24:27.006]  <debugvars>
[18:24:27.006]    // Pre-defined
[18:24:27.006]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:24:27.007]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:24:27.007]    __dp=0x00000000
[18:24:27.007]    __ap=0x00000000
[18:24:27.007]    __traceout=0x00000001      (SWO Trace)
[18:24:27.007]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:24:27.007]    __FlashAddr=0x00000000
[18:24:27.007]    __FlashLen=0x00000000
[18:24:27.007]    __FlashArg=0x00000000
[18:24:27.008]    __FlashOp=0x00000000
[18:24:27.008]    __Result=0x00000000
[18:24:27.008]    
[18:24:27.008]    // User-defined
[18:24:27.008]    DbgMCU_CR=0x00000007
[18:24:27.008]    DbgMCU_APB1_Fz=0x00000000
[18:24:27.008]    DbgMCU_APB2_Fz=0x00000000
[18:24:27.008]    TraceClk_Pin=0x00040002
[18:24:27.008]    TraceD0_Pin=0x00040003
[18:24:27.008]    TraceD1_Pin=0x00040004
[18:24:27.009]    TraceD2_Pin=0x00040005
[18:24:27.009]    TraceD3_Pin=0x00040006
[18:24:27.009]  </debugvars>
[18:24:27.009]  
[18:24:27.009]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:24:27.009]    <block atomic="false" info="">
[18:24:27.009]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:24:27.009]        // -> [traceSWO <= 0x00000001]
[18:24:27.010]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:24:27.010]        // -> [traceTPIU <= 0x00000000]
[18:24:27.010]    </block>
[18:24:27.010]    <control if="traceSWO" while="" timeout="0" info="">
[18:24:27.010]      // if-block "traceSWO"
[18:24:27.010]        // =>  TRUE
[18:24:27.010]      <block atomic="false" info="">
[18:24:27.010]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:24:27.011]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:24:27.011]            <block atomic="false" info="">
[18:24:27.011]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:24:27.011]                // -> [dbgmcu_val <= 0x00000000]
[18:24:27.011]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:24:27.011]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:24:27.011]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:24:27.012]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.012]                // -> [dbgmcu_val <= 0x00000007]
[18:24:27.012]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:24:27.012]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:24:27.012]              Sequence("ConfigureTraceSWOPin");
[18:24:27.012]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:24:27.012]                  <block atomic="false" info="">
[18:24:27.012]                    __var pin     = 0;
[18:24:27.013]                      // -> [pin <= 0x00000000]
[18:24:27.013]                    __var port    = 0;
[18:24:27.013]                      // -> [port <= 0x00000000]
[18:24:27.013]                    __var portAdr = 0;
[18:24:27.013]                      // -> [portAdr <= 0x00000000]
[18:24:27.013]                    __var pos     = 0;
[18:24:27.013]                      // -> [pos <= 0x00000000]
[18:24:27.013]                    __var SWO_Pin = 0x00010003;          // PB3
[18:24:27.013]                      // -> [SWO_Pin <= 0x00010003]
[18:24:27.014]                  </block>
[18:24:27.014]                  <block atomic="false" info="configure SWO">
[18:24:27.014]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:24:27.014]                      // -> [pin <= 0x00000003]
[18:24:27.014]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:24:27.014]                      // -> [port <= 0x00000001]
[18:24:27.014]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:24:27.015]                      // -> [portAdr <= 0x40020400]
[18:24:27.015]                    pos = pin * 2;
[18:24:27.015]                      // -> [pos <= 0x00000006]
[18:24:27.015]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:24:27.015]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.016]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.016]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:24:27.016]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.017]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.017]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:24:27.017]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.018]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.018]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:24:27.018]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.019]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.019]                  </block>
[18:24:27.019]                  <control if="pin <  8" while="" timeout="0" info="">
[18:24:27.019]                    // if-block "pin <  8"
[18:24:27.019]                      // =>  TRUE
[18:24:27.019]                    <block atomic="false" info="">
[18:24:27.020]                      pos = ((pin    ) & 7) * 4;
[18:24:27.020]                        // -> [pos <= 0x0000000C]
[18:24:27.020]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:24:27.020]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.021]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.021]                    </block>
[18:24:27.021]                    // end if-block "pin <  8"
[18:24:27.021]                  </control>
[18:24:27.021]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:24:27.021]                    // if-block "pin >= 8"
[18:24:27.021]                      // =>  FALSE
[18:24:27.021]                    // skip if-block "pin >= 8"
[18:24:27.022]                  </control>
[18:24:27.022]                </sequence>
[18:24:27.022]            </block>
[18:24:27.022]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:24:27.022]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:24:27.022]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.023]            </block>
[18:24:27.023]          </sequence>
[18:24:27.023]      </block>
[18:24:27.023]      // end if-block "traceSWO"
[18:24:27.023]    </control>
[18:24:27.023]    <control if="traceTPIU" while="" timeout="0" info="">
[18:24:27.023]      // if-block "traceTPIU"
[18:24:27.023]        // =>  FALSE
[18:24:27.023]      // skip if-block "traceTPIU"
[18:24:27.024]    </control>
[18:24:27.024]  </sequence>
[18:24:27.024]  
[18:24:27.235]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:24:27.235]  
[18:24:27.235]  <debugvars>
[18:24:27.235]    // Pre-defined
[18:24:27.236]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:24:27.236]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:24:27.236]    __dp=0x00000000
[18:24:27.236]    __ap=0x00000000
[18:24:27.236]    __traceout=0x00000001      (SWO Trace)
[18:24:27.236]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:24:27.236]    __FlashAddr=0x00000000
[18:24:27.236]    __FlashLen=0x00000000
[18:24:27.236]    __FlashArg=0x00000000
[18:24:27.236]    __FlashOp=0x00000000
[18:24:27.237]    __Result=0x00000000
[18:24:27.237]    
[18:24:27.237]    // User-defined
[18:24:27.237]    DbgMCU_CR=0x00000007
[18:24:27.237]    DbgMCU_APB1_Fz=0x00000000
[18:24:27.237]    DbgMCU_APB2_Fz=0x00000000
[18:24:27.237]    TraceClk_Pin=0x00040002
[18:24:27.237]    TraceD0_Pin=0x00040003
[18:24:27.238]    TraceD1_Pin=0x00040004
[18:24:27.238]    TraceD2_Pin=0x00040005
[18:24:27.238]    TraceD3_Pin=0x00040006
[18:24:27.238]  </debugvars>
[18:24:27.238]  
[18:24:27.238]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:24:27.239]    <block atomic="false" info="">
[18:24:27.239]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:24:27.239]        // -> [traceSWO <= 0x00000001]
[18:24:27.239]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:24:27.239]        // -> [traceTPIU <= 0x00000000]
[18:24:27.239]    </block>
[18:24:27.239]    <control if="traceSWO" while="" timeout="0" info="">
[18:24:27.240]      // if-block "traceSWO"
[18:24:27.240]        // =>  TRUE
[18:24:27.240]      <block atomic="false" info="">
[18:24:27.240]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:24:27.240]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:24:27.240]            <block atomic="false" info="">
[18:24:27.240]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:24:27.240]                // -> [dbgmcu_val <= 0x00000000]
[18:24:27.241]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:24:27.241]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:24:27.241]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:24:27.241]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.241]                // -> [dbgmcu_val <= 0x00000007]
[18:24:27.242]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:24:27.242]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:24:27.242]              Sequence("ConfigureTraceSWOPin");
[18:24:27.242]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:24:27.242]                  <block atomic="false" info="">
[18:24:27.242]                    __var pin     = 0;
[18:24:27.242]                      // -> [pin <= 0x00000000]
[18:24:27.242]                    __var port    = 0;
[18:24:27.243]                      // -> [port <= 0x00000000]
[18:24:27.243]                    __var portAdr = 0;
[18:24:27.243]                      // -> [portAdr <= 0x00000000]
[18:24:27.243]                    __var pos     = 0;
[18:24:27.243]                      // -> [pos <= 0x00000000]
[18:24:27.243]                    __var SWO_Pin = 0x00010003;          // PB3
[18:24:27.243]                      // -> [SWO_Pin <= 0x00010003]
[18:24:27.243]                  </block>
[18:24:27.243]                  <block atomic="false" info="configure SWO">
[18:24:27.244]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:24:27.244]                      // -> [pin <= 0x00000003]
[18:24:27.244]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:24:27.244]                      // -> [port <= 0x00000001]
[18:24:27.244]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:24:27.244]                      // -> [portAdr <= 0x40020400]
[18:24:27.244]                    pos = pin * 2;
[18:24:27.244]                      // -> [pos <= 0x00000006]
[18:24:27.244]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:24:27.245]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.245]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.245]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:24:27.246]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.246]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.246]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:24:27.247]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.247]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.247]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:24:27.248]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.248]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.248]                  </block>
[18:24:27.249]                  <control if="pin <  8" while="" timeout="0" info="">
[18:24:27.249]                    // if-block "pin <  8"
[18:24:27.249]                      // =>  TRUE
[18:24:27.249]                    <block atomic="false" info="">
[18:24:27.249]                      pos = ((pin    ) & 7) * 4;
[18:24:27.249]                        // -> [pos <= 0x0000000C]
[18:24:27.249]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:24:27.250]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.250]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.250]                    </block>
[18:24:27.250]                    // end if-block "pin <  8"
[18:24:27.250]                  </control>
[18:24:27.250]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:24:27.251]                    // if-block "pin >= 8"
[18:24:27.251]                      // =>  FALSE
[18:24:27.251]                    // skip if-block "pin >= 8"
[18:24:27.251]                  </control>
[18:24:27.251]                </sequence>
[18:24:27.251]            </block>
[18:24:27.251]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:24:27.251]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:24:27.252]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:24:27.252]            </block>
[18:24:27.252]          </sequence>
[18:24:27.252]      </block>
[18:24:27.252]      // end if-block "traceSWO"
[18:24:27.252]    </control>
[18:24:27.253]    <control if="traceTPIU" while="" timeout="0" info="">
[18:24:27.253]      // if-block "traceTPIU"
[18:24:27.253]        // =>  FALSE
[18:24:27.253]      // skip if-block "traceTPIU"
[18:24:27.253]    </control>
[18:24:27.253]  </sequence>
[18:24:27.253]  
[18:41:26.690]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[18:41:26.690]  
[18:41:26.690]  <debugvars>
[18:41:26.691]    // Pre-defined
[18:41:26.691]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:41:26.691]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:41:26.692]    __dp=0x00000000
[18:41:26.692]    __ap=0x00000000
[18:41:26.692]    __traceout=0x00000001      (SWO Trace)
[18:41:26.692]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:41:26.693]    __FlashAddr=0x00000000
[18:41:26.693]    __FlashLen=0x00000000
[18:41:26.693]    __FlashArg=0x00000000
[18:41:26.693]    __FlashOp=0x00000000
[18:41:26.693]    __Result=0x00000000
[18:41:26.694]    
[18:41:26.694]    // User-defined
[18:41:26.694]    DbgMCU_CR=0x00000007
[18:41:26.694]    DbgMCU_APB1_Fz=0x00000000
[18:41:26.694]    DbgMCU_APB2_Fz=0x00000000
[18:41:26.694]    TraceClk_Pin=0x00040002
[18:41:26.694]    TraceD0_Pin=0x00040003
[18:41:26.695]    TraceD1_Pin=0x00040004
[18:41:26.695]    TraceD2_Pin=0x00040005
[18:41:26.695]    TraceD3_Pin=0x00040006
[18:41:26.695]  </debugvars>
[18:41:26.695]  
[18:41:26.695]  <sequence name="TraceStop" Pname="" disable="false" info="">
[18:41:26.695]    <block atomic="false" info="">
[18:41:26.695]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[18:41:26.696]        // -> [traceSWO <= 0x00000001]
[18:41:26.696]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[18:41:26.696]        // -> [traceTPIU <= 0x00000000]
[18:41:26.696]    </block>
[18:41:26.696]    <control if="traceSWO" while="" timeout="0" info="">
[18:41:26.696]      // if-block "traceSWO"
[18:41:26.696]        // =>  TRUE
[18:41:26.696]      <block atomic="false" info="">
[18:41:26.696]        Sequence("DisableTraceSWO");
[18:41:26.697]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[18:41:26.697]            <block atomic="false" info="">
[18:41:26.697]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:41:26.697]                // -> [dbgmcu_val <= 0x00000000]
[18:41:26.697]            </block>
[18:41:26.697]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[18:41:26.697]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[18:41:26.698]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:41:26.698]                // -> [dbgmcu_val <= 0x00000007]
[18:41:26.698]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[18:41:26.698]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:26.699]            </block>
[18:41:26.699]          </sequence>
[18:41:26.699]      </block>
[18:41:26.699]      // end if-block "traceSWO"
[18:41:26.699]    </control>
[18:41:26.699]    <control if="traceTPIU" while="" timeout="0" info="">
[18:41:26.699]      // if-block "traceTPIU"
[18:41:26.699]        // =>  FALSE
[18:41:26.700]      // skip if-block "traceTPIU"
[18:41:26.700]    </control>
[18:41:26.700]  </sequence>
[18:41:26.700]  
[18:41:29.154]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:41:29.154]  
[18:41:29.154]  <debugvars>
[18:41:29.154]    // Pre-defined
[18:41:29.154]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:41:29.155]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:41:29.155]    __dp=0x00000000
[18:41:29.155]    __ap=0x00000000
[18:41:29.155]    __traceout=0x00000001      (SWO Trace)
[18:41:29.155]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:41:29.155]    __FlashAddr=0x00000000
[18:41:29.156]    __FlashLen=0x00000000
[18:41:29.156]    __FlashArg=0x00000000
[18:41:29.156]    __FlashOp=0x00000000
[18:41:29.156]    __Result=0x00000000
[18:41:29.156]    
[18:41:29.156]    // User-defined
[18:41:29.156]    DbgMCU_CR=0x00000007
[18:41:29.156]    DbgMCU_APB1_Fz=0x00000000
[18:41:29.157]    DbgMCU_APB2_Fz=0x00000000
[18:41:29.157]    TraceClk_Pin=0x00040002
[18:41:29.157]    TraceD0_Pin=0x00040003
[18:41:29.157]    TraceD1_Pin=0x00040004
[18:41:29.157]    TraceD2_Pin=0x00040005
[18:41:29.157]    TraceD3_Pin=0x00040006
[18:41:29.157]  </debugvars>
[18:41:29.158]  
[18:41:29.158]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:41:29.158]    <block atomic="false" info="">
[18:41:29.158]      Sequence("CheckID");
[18:41:29.158]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:41:29.158]          <block atomic="false" info="">
[18:41:29.158]            __var pidr1 = 0;
[18:41:29.158]              // -> [pidr1 <= 0x00000000]
[18:41:29.159]            __var pidr2 = 0;
[18:41:29.159]              // -> [pidr2 <= 0x00000000]
[18:41:29.159]            __var jep106id = 0;
[18:41:29.159]              // -> [jep106id <= 0x00000000]
[18:41:29.159]            __var ROMTableBase = 0;
[18:41:29.159]              // -> [ROMTableBase <= 0x00000000]
[18:41:29.159]            __ap = 0;      // AHB-AP
[18:41:29.159]              // -> [__ap <= 0x00000000]
[18:41:29.159]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:41:29.160]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.160]              // -> [ROMTableBase <= 0xE00FD000]
[18:41:29.160]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:41:29.161]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.161]              // -> [pidr1 <= 0x00000004]
[18:41:29.161]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:41:29.161]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.161]              // -> [pidr2 <= 0x0000001A]
[18:41:29.162]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:41:29.162]              // -> [jep106id <= 0x00000020]
[18:41:29.162]          </block>
[18:41:29.162]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:41:29.162]            // if-block "jep106id != 0x20"
[18:41:29.162]              // =>  FALSE
[18:41:29.162]            // skip if-block "jep106id != 0x20"
[18:41:29.162]          </control>
[18:41:29.163]        </sequence>
[18:41:29.163]    </block>
[18:41:29.163]  </sequence>
[18:41:29.163]  
[18:41:29.178]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:41:29.178]  
[18:41:29.178]  <debugvars>
[18:41:29.178]    // Pre-defined
[18:41:29.178]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:41:29.178]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:41:29.178]    __dp=0x00000000
[18:41:29.179]    __ap=0x00000000
[18:41:29.179]    __traceout=0x00000001      (SWO Trace)
[18:41:29.179]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:41:29.179]    __FlashAddr=0x00000000
[18:41:29.179]    __FlashLen=0x00000000
[18:41:29.179]    __FlashArg=0x00000000
[18:41:29.179]    __FlashOp=0x00000000
[18:41:29.179]    __Result=0x00000000
[18:41:29.180]    
[18:41:29.180]    // User-defined
[18:41:29.180]    DbgMCU_CR=0x00000007
[18:41:29.180]    DbgMCU_APB1_Fz=0x00000000
[18:41:29.180]    DbgMCU_APB2_Fz=0x00000000
[18:41:29.180]    TraceClk_Pin=0x00040002
[18:41:29.180]    TraceD0_Pin=0x00040003
[18:41:29.180]    TraceD1_Pin=0x00040004
[18:41:29.180]    TraceD2_Pin=0x00040005
[18:41:29.180]    TraceD3_Pin=0x00040006
[18:41:29.181]  </debugvars>
[18:41:29.181]  
[18:41:29.181]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:41:29.181]    <block atomic="false" info="">
[18:41:29.181]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:41:29.182]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.182]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:41:29.182]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.182]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:41:29.183]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.183]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:41:29.183]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.183]    </block>
[18:41:29.183]  </sequence>
[18:41:29.184]  
[18:41:29.199]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[18:41:29.199]  
[18:41:29.200]  <debugvars>
[18:41:29.200]    // Pre-defined
[18:41:29.200]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:41:29.200]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:41:29.200]    __dp=0x00000000
[18:41:29.200]    __ap=0x00000000
[18:41:29.201]    __traceout=0x00000001      (SWO Trace)
[18:41:29.201]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:41:29.201]    __FlashAddr=0x00000000
[18:41:29.201]    __FlashLen=0x00000000
[18:41:29.201]    __FlashArg=0x00000000
[18:41:29.201]    __FlashOp=0x00000000
[18:41:29.201]    __Result=0x00000000
[18:41:29.201]    
[18:41:29.201]    // User-defined
[18:41:29.202]    DbgMCU_CR=0x00000007
[18:41:29.202]    DbgMCU_APB1_Fz=0x00000000
[18:41:29.202]    DbgMCU_APB2_Fz=0x00000000
[18:41:29.202]    TraceClk_Pin=0x00040002
[18:41:29.202]    TraceD0_Pin=0x00040003
[18:41:29.202]    TraceD1_Pin=0x00040004
[18:41:29.202]    TraceD2_Pin=0x00040005
[18:41:29.202]    TraceD3_Pin=0x00040006
[18:41:29.203]  </debugvars>
[18:41:29.203]  
[18:41:29.203]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:41:29.203]    <block atomic="false" info="">
[18:41:29.203]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:41:29.203]        // -> [traceSWO <= 0x00000001]
[18:41:29.203]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:41:29.203]        // -> [traceTPIU <= 0x00000000]
[18:41:29.204]    </block>
[18:41:29.204]    <control if="traceSWO" while="" timeout="0" info="">
[18:41:29.204]      // if-block "traceSWO"
[18:41:29.204]        // =>  TRUE
[18:41:29.204]      <block atomic="false" info="">
[18:41:29.204]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:41:29.204]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:41:29.204]            <block atomic="false" info="">
[18:41:29.204]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:41:29.205]                // -> [dbgmcu_val <= 0x00000000]
[18:41:29.205]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:41:29.205]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:41:29.205]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:41:29.205]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.205]                // -> [dbgmcu_val <= 0x00000007]
[18:41:29.205]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:41:29.206]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:41:29.206]              Sequence("ConfigureTraceSWOPin");
[18:41:29.206]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:41:29.206]                  <block atomic="false" info="">
[18:41:29.206]                    __var pin     = 0;
[18:41:29.206]                      // -> [pin <= 0x00000000]
[18:41:29.207]                    __var port    = 0;
[18:41:29.207]                      // -> [port <= 0x00000000]
[18:41:29.207]                    __var portAdr = 0;
[18:41:29.207]                      // -> [portAdr <= 0x00000000]
[18:41:29.207]                    __var pos     = 0;
[18:41:29.207]                      // -> [pos <= 0x00000000]
[18:41:29.207]                    __var SWO_Pin = 0x00010003;          // PB3
[18:41:29.207]                      // -> [SWO_Pin <= 0x00010003]
[18:41:29.207]                  </block>
[18:41:29.208]                  <block atomic="false" info="configure SWO">
[18:41:29.208]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:41:29.208]                      // -> [pin <= 0x00000003]
[18:41:29.208]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:41:29.208]                      // -> [port <= 0x00000001]
[18:41:29.208]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:41:29.208]                      // -> [portAdr <= 0x40020400]
[18:41:29.208]                    pos = pin * 2;
[18:41:29.209]                      // -> [pos <= 0x00000006]
[18:41:29.209]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:41:29.209]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.210]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.210]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:41:29.210]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.211]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.211]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:41:29.211]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.212]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.212]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:41:29.212]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.213]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.213]                  </block>
[18:41:29.213]                  <control if="pin <  8" while="" timeout="0" info="">
[18:41:29.213]                    // if-block "pin <  8"
[18:41:29.213]                      // =>  TRUE
[18:41:29.213]                    <block atomic="false" info="">
[18:41:29.213]                      pos = ((pin    ) & 7) * 4;
[18:41:29.213]                        // -> [pos <= 0x0000000C]
[18:41:29.213]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:41:29.214]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.214]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.214]                    </block>
[18:41:29.214]                    // end if-block "pin <  8"
[18:41:29.215]                  </control>
[18:41:29.215]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:41:29.215]                    // if-block "pin >= 8"
[18:41:29.215]                      // =>  FALSE
[18:41:29.215]                    // skip if-block "pin >= 8"
[18:41:29.215]                  </control>
[18:41:29.216]                </sequence>
[18:41:29.216]            </block>
[18:41:29.216]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:41:29.216]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:41:29.216]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.217]            </block>
[18:41:29.217]          </sequence>
[18:41:29.217]      </block>
[18:41:29.217]      // end if-block "traceSWO"
[18:41:29.217]    </control>
[18:41:29.217]    <control if="traceTPIU" while="" timeout="0" info="">
[18:41:29.217]      // if-block "traceTPIU"
[18:41:29.217]        // =>  FALSE
[18:41:29.217]      // skip if-block "traceTPIU"
[18:41:29.218]    </control>
[18:41:29.218]  </sequence>
[18:41:29.218]  
[18:41:29.222]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:41:29.222]  
[18:41:29.222]  <debugvars>
[18:41:29.222]    // Pre-defined
[18:41:29.222]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:41:29.222]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:41:29.222]    __dp=0x00000000
[18:41:29.222]    __ap=0x00000000
[18:41:29.222]    __traceout=0x00000001      (SWO Trace)
[18:41:29.223]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:41:29.223]    __FlashAddr=0x00000000
[18:41:29.223]    __FlashLen=0x00000000
[18:41:29.223]    __FlashArg=0x00000000
[18:41:29.223]    __FlashOp=0x00000000
[18:41:29.223]    __Result=0x00000000
[18:41:29.223]    
[18:41:29.223]    // User-defined
[18:41:29.223]    DbgMCU_CR=0x00000007
[18:41:29.224]    DbgMCU_APB1_Fz=0x00000000
[18:41:29.224]    DbgMCU_APB2_Fz=0x00000000
[18:41:29.224]    TraceClk_Pin=0x00040002
[18:41:29.224]    TraceD0_Pin=0x00040003
[18:41:29.224]    TraceD1_Pin=0x00040004
[18:41:29.224]    TraceD2_Pin=0x00040005
[18:41:29.224]    TraceD3_Pin=0x00040006
[18:41:29.224]  </debugvars>
[18:41:29.225]  
[18:41:29.225]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:41:29.225]    <block atomic="false" info="">
[18:41:29.225]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:41:29.225]        // -> [traceSWO <= 0x00000001]
[18:41:29.225]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:41:29.225]        // -> [traceTPIU <= 0x00000000]
[18:41:29.225]    </block>
[18:41:29.226]    <control if="traceSWO" while="" timeout="0" info="">
[18:41:29.226]      // if-block "traceSWO"
[18:41:29.226]        // =>  TRUE
[18:41:29.226]      <block atomic="false" info="">
[18:41:29.226]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:41:29.226]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:41:29.226]            <block atomic="false" info="">
[18:41:29.226]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:41:29.226]                // -> [dbgmcu_val <= 0x00000000]
[18:41:29.227]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:41:29.227]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:41:29.227]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:41:29.227]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.227]                // -> [dbgmcu_val <= 0x00000007]
[18:41:29.227]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:41:29.228]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:41:29.228]              Sequence("ConfigureTraceSWOPin");
[18:41:29.228]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:41:29.228]                  <block atomic="false" info="">
[18:41:29.228]                    __var pin     = 0;
[18:41:29.228]                      // -> [pin <= 0x00000000]
[18:41:29.228]                    __var port    = 0;
[18:41:29.228]                      // -> [port <= 0x00000000]
[18:41:29.229]                    __var portAdr = 0;
[18:41:29.229]                      // -> [portAdr <= 0x00000000]
[18:41:29.229]                    __var pos     = 0;
[18:41:29.229]                      // -> [pos <= 0x00000000]
[18:41:29.229]                    __var SWO_Pin = 0x00010003;          // PB3
[18:41:29.229]                      // -> [SWO_Pin <= 0x00010003]
[18:41:29.229]                  </block>
[18:41:29.229]                  <block atomic="false" info="configure SWO">
[18:41:29.229]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:41:29.230]                      // -> [pin <= 0x00000003]
[18:41:29.230]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:41:29.230]                      // -> [port <= 0x00000001]
[18:41:29.230]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:41:29.230]                      // -> [portAdr <= 0x40020400]
[18:41:29.230]                    pos = pin * 2;
[18:41:29.230]                      // -> [pos <= 0x00000006]
[18:41:29.230]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:41:29.231]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.231]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.231]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:41:29.232]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.232]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.232]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:41:29.233]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.233]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.233]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:41:29.234]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.234]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.234]                  </block>
[18:41:29.234]                  <control if="pin <  8" while="" timeout="0" info="">
[18:41:29.235]                    // if-block "pin <  8"
[18:41:29.235]                      // =>  TRUE
[18:41:29.235]                    <block atomic="false" info="">
[18:41:29.235]                      pos = ((pin    ) & 7) * 4;
[18:41:29.235]                        // -> [pos <= 0x0000000C]
[18:41:29.235]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:41:29.236]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.236]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.236]                    </block>
[18:41:29.236]                    // end if-block "pin <  8"
[18:41:29.236]                  </control>
[18:41:29.236]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:41:29.237]                    // if-block "pin >= 8"
[18:41:29.237]                      // =>  FALSE
[18:41:29.237]                    // skip if-block "pin >= 8"
[18:41:29.237]                  </control>
[18:41:29.237]                </sequence>
[18:41:29.237]            </block>
[18:41:29.237]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:41:29.237]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:41:29.238]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.238]            </block>
[18:41:29.238]          </sequence>
[18:41:29.238]      </block>
[18:41:29.238]      // end if-block "traceSWO"
[18:41:29.238]    </control>
[18:41:29.238]    <control if="traceTPIU" while="" timeout="0" info="">
[18:41:29.239]      // if-block "traceTPIU"
[18:41:29.239]        // =>  FALSE
[18:41:29.239]      // skip if-block "traceTPIU"
[18:41:29.239]    </control>
[18:41:29.239]  </sequence>
[18:41:29.239]  
[18:41:29.455]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:41:29.455]  
[18:41:29.455]  <debugvars>
[18:41:29.455]    // Pre-defined
[18:41:29.455]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:41:29.456]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:41:29.456]    __dp=0x00000000
[18:41:29.456]    __ap=0x00000000
[18:41:29.456]    __traceout=0x00000001      (SWO Trace)
[18:41:29.456]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:41:29.456]    __FlashAddr=0x00000000
[18:41:29.457]    __FlashLen=0x00000000
[18:41:29.457]    __FlashArg=0x00000000
[18:41:29.457]    __FlashOp=0x00000000
[18:41:29.457]    __Result=0x00000000
[18:41:29.457]    
[18:41:29.457]    // User-defined
[18:41:29.457]    DbgMCU_CR=0x00000007
[18:41:29.457]    DbgMCU_APB1_Fz=0x00000000
[18:41:29.457]    DbgMCU_APB2_Fz=0x00000000
[18:41:29.457]    TraceClk_Pin=0x00040002
[18:41:29.458]    TraceD0_Pin=0x00040003
[18:41:29.458]    TraceD1_Pin=0x00040004
[18:41:29.458]    TraceD2_Pin=0x00040005
[18:41:29.458]    TraceD3_Pin=0x00040006
[18:41:29.458]  </debugvars>
[18:41:29.458]  
[18:41:29.458]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:41:29.458]    <block atomic="false" info="">
[18:41:29.459]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:41:29.459]        // -> [traceSWO <= 0x00000001]
[18:41:29.459]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:41:29.459]        // -> [traceTPIU <= 0x00000000]
[18:41:29.459]    </block>
[18:41:29.459]    <control if="traceSWO" while="" timeout="0" info="">
[18:41:29.459]      // if-block "traceSWO"
[18:41:29.459]        // =>  TRUE
[18:41:29.459]      <block atomic="false" info="">
[18:41:29.460]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:41:29.460]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:41:29.460]            <block atomic="false" info="">
[18:41:29.460]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:41:29.460]                // -> [dbgmcu_val <= 0x00000000]
[18:41:29.460]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:41:29.460]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:41:29.460]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:41:29.461]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.461]                // -> [dbgmcu_val <= 0x00000007]
[18:41:29.461]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:41:29.461]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:41:29.461]              Sequence("ConfigureTraceSWOPin");
[18:41:29.461]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:41:29.461]                  <block atomic="false" info="">
[18:41:29.462]                    __var pin     = 0;
[18:41:29.462]                      // -> [pin <= 0x00000000]
[18:41:29.462]                    __var port    = 0;
[18:41:29.462]                      // -> [port <= 0x00000000]
[18:41:29.462]                    __var portAdr = 0;
[18:41:29.462]                      // -> [portAdr <= 0x00000000]
[18:41:29.462]                    __var pos     = 0;
[18:41:29.462]                      // -> [pos <= 0x00000000]
[18:41:29.462]                    __var SWO_Pin = 0x00010003;          // PB3
[18:41:29.463]                      // -> [SWO_Pin <= 0x00010003]
[18:41:29.463]                  </block>
[18:41:29.463]                  <block atomic="false" info="configure SWO">
[18:41:29.463]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:41:29.463]                      // -> [pin <= 0x00000003]
[18:41:29.463]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:41:29.463]                      // -> [port <= 0x00000001]
[18:41:29.463]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:41:29.463]                      // -> [portAdr <= 0x40020400]
[18:41:29.464]                    pos = pin * 2;
[18:41:29.464]                      // -> [pos <= 0x00000006]
[18:41:29.464]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:41:29.464]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.465]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.465]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:41:29.465]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.466]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.466]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:41:29.466]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.467]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.467]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:41:29.467]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.468]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.468]                  </block>
[18:41:29.468]                  <control if="pin <  8" while="" timeout="0" info="">
[18:41:29.468]                    // if-block "pin <  8"
[18:41:29.468]                      // =>  TRUE
[18:41:29.468]                    <block atomic="false" info="">
[18:41:29.468]                      pos = ((pin    ) & 7) * 4;
[18:41:29.468]                        // -> [pos <= 0x0000000C]
[18:41:29.469]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:41:29.469]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.469]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.469]                    </block>
[18:41:29.470]                    // end if-block "pin <  8"
[18:41:29.470]                  </control>
[18:41:29.470]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:41:29.470]                    // if-block "pin >= 8"
[18:41:29.470]                      // =>  FALSE
[18:41:29.470]                    // skip if-block "pin >= 8"
[18:41:29.470]                  </control>
[18:41:29.470]                </sequence>
[18:41:29.471]            </block>
[18:41:29.471]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:41:29.471]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:41:29.471]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:41:29.471]            </block>
[18:41:29.471]          </sequence>
[18:41:29.471]      </block>
[18:41:29.472]      // end if-block "traceSWO"
[18:41:29.472]    </control>
[18:41:29.472]    <control if="traceTPIU" while="" timeout="0" info="">
[18:41:29.472]      // if-block "traceTPIU"
[18:41:29.472]        // =>  FALSE
[18:41:29.472]      // skip if-block "traceTPIU"
[18:41:29.472]    </control>
[18:41:29.472]  </sequence>
[18:41:29.473]  
[18:43:01.792]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:43:01.792]  
[18:43:01.792]  <debugvars>
[18:43:01.793]    // Pre-defined
[18:43:01.793]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:43:01.793]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:43:01.793]    __dp=0x00000000
[18:43:01.793]    __ap=0x00000000
[18:43:01.793]    __traceout=0x00000001      (SWO Trace)
[18:43:01.794]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:43:01.794]    __FlashAddr=0x00000000
[18:43:01.794]    __FlashLen=0x00000000
[18:43:01.794]    __FlashArg=0x00000000
[18:43:01.794]    __FlashOp=0x00000000
[18:43:01.795]    __Result=0x00000000
[18:43:01.795]    
[18:43:01.795]    // User-defined
[18:43:01.795]    DbgMCU_CR=0x00000007
[18:43:01.795]    DbgMCU_APB1_Fz=0x00000000
[18:43:01.795]    DbgMCU_APB2_Fz=0x00000000
[18:43:01.795]    TraceClk_Pin=0x00040002
[18:43:01.796]    TraceD0_Pin=0x00040003
[18:43:01.796]    TraceD1_Pin=0x00040004
[18:43:01.796]    TraceD2_Pin=0x00040005
[18:43:01.796]    TraceD3_Pin=0x00040006
[18:43:01.796]  </debugvars>
[18:43:01.796]  
[18:43:01.797]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:43:01.797]    <block atomic="false" info="">
[18:43:01.797]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:43:01.797]        // -> [traceSWO <= 0x00000001]
[18:43:01.797]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:43:01.797]        // -> [traceTPIU <= 0x00000000]
[18:43:01.798]    </block>
[18:43:01.798]    <control if="traceSWO" while="" timeout="0" info="">
[18:43:01.798]      // if-block "traceSWO"
[18:43:01.798]        // =>  TRUE
[18:43:01.798]      <block atomic="false" info="">
[18:43:01.798]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:43:01.799]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:43:01.799]            <block atomic="false" info="">
[18:43:01.799]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:43:01.799]                // -> [dbgmcu_val <= 0x00000000]
[18:43:01.799]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:43:01.799]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:43:01.799]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:43:01.800]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.800]                // -> [dbgmcu_val <= 0x00000007]
[18:43:01.800]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:43:01.800]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:43:01.800]              Sequence("ConfigureTraceSWOPin");
[18:43:01.800]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:43:01.801]                  <block atomic="false" info="">
[18:43:01.801]                    __var pin     = 0;
[18:43:01.801]                      // -> [pin <= 0x00000000]
[18:43:01.801]                    __var port    = 0;
[18:43:01.801]                      // -> [port <= 0x00000000]
[18:43:01.801]                    __var portAdr = 0;
[18:43:01.801]                      // -> [portAdr <= 0x00000000]
[18:43:01.801]                    __var pos     = 0;
[18:43:01.801]                      // -> [pos <= 0x00000000]
[18:43:01.802]                    __var SWO_Pin = 0x00010003;          // PB3
[18:43:01.802]                      // -> [SWO_Pin <= 0x00010003]
[18:43:01.802]                  </block>
[18:43:01.802]                  <block atomic="false" info="configure SWO">
[18:43:01.802]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:43:01.802]                      // -> [pin <= 0x00000003]
[18:43:01.802]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:43:01.802]                      // -> [port <= 0x00000001]
[18:43:01.803]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:43:01.803]                      // -> [portAdr <= 0x40020400]
[18:43:01.803]                    pos = pin * 2;
[18:43:01.803]                      // -> [pos <= 0x00000006]
[18:43:01.803]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:43:01.803]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.804]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.804]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:43:01.804]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.805]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.805]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:43:01.805]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.806]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.806]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:43:01.806]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.807]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.807]                  </block>
[18:43:01.807]                  <control if="pin <  8" while="" timeout="0" info="">
[18:43:01.807]                    // if-block "pin <  8"
[18:43:01.807]                      // =>  TRUE
[18:43:01.807]                    <block atomic="false" info="">
[18:43:01.807]                      pos = ((pin    ) & 7) * 4;
[18:43:01.808]                        // -> [pos <= 0x0000000C]
[18:43:01.808]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:43:01.808]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.808]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.809]                    </block>
[18:43:01.809]                    // end if-block "pin <  8"
[18:43:01.809]                  </control>
[18:43:01.809]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:43:01.809]                    // if-block "pin >= 8"
[18:43:01.809]                      // =>  FALSE
[18:43:01.809]                    // skip if-block "pin >= 8"
[18:43:01.809]                  </control>
[18:43:01.809]                </sequence>
[18:43:01.810]            </block>
[18:43:01.810]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:43:01.810]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:43:01.810]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:01.810]            </block>
[18:43:01.810]          </sequence>
[18:43:01.811]      </block>
[18:43:01.811]      // end if-block "traceSWO"
[18:43:01.811]    </control>
[18:43:01.811]    <control if="traceTPIU" while="" timeout="0" info="">
[18:43:01.811]      // if-block "traceTPIU"
[18:43:01.811]        // =>  FALSE
[18:43:01.811]      // skip if-block "traceTPIU"
[18:43:01.811]    </control>
[18:43:01.811]  </sequence>
[18:43:01.812]  
[18:43:27.672]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:43:27.672]  
[18:43:27.673]  <debugvars>
[18:43:27.673]    // Pre-defined
[18:43:27.673]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:43:27.673]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:43:27.674]    __dp=0x00000000
[18:43:27.674]    __ap=0x00000000
[18:43:27.674]    __traceout=0x00000001      (SWO Trace)
[18:43:27.674]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:43:27.674]    __FlashAddr=0x00000000
[18:43:27.674]    __FlashLen=0x00000000
[18:43:27.674]    __FlashArg=0x00000000
[18:43:27.675]    __FlashOp=0x00000000
[18:43:27.675]    __Result=0x00000000
[18:43:27.675]    
[18:43:27.675]    // User-defined
[18:43:27.675]    DbgMCU_CR=0x00000007
[18:43:27.675]    DbgMCU_APB1_Fz=0x00000000
[18:43:27.675]    DbgMCU_APB2_Fz=0x00000000
[18:43:27.676]    TraceClk_Pin=0x00040002
[18:43:27.676]    TraceD0_Pin=0x00040003
[18:43:27.676]    TraceD1_Pin=0x00040004
[18:43:27.676]    TraceD2_Pin=0x00040005
[18:43:27.676]    TraceD3_Pin=0x00040006
[18:43:27.676]  </debugvars>
[18:43:27.676]  
[18:43:27.677]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:43:27.677]    <block atomic="false" info="">
[18:43:27.677]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:43:27.677]        // -> [traceSWO <= 0x00000001]
[18:43:27.677]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:43:27.677]        // -> [traceTPIU <= 0x00000000]
[18:43:27.677]    </block>
[18:43:27.678]    <control if="traceSWO" while="" timeout="0" info="">
[18:43:27.678]      // if-block "traceSWO"
[18:43:27.678]        // =>  TRUE
[18:43:27.678]      <block atomic="false" info="">
[18:43:27.678]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:43:27.678]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:43:27.678]            <block atomic="false" info="">
[18:43:27.678]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:43:27.679]                // -> [dbgmcu_val <= 0x00000000]
[18:43:27.679]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:43:27.679]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:43:27.679]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:43:27.679]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.680]                // -> [dbgmcu_val <= 0x00000007]
[18:43:27.680]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:43:27.680]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:43:27.680]              Sequence("ConfigureTraceSWOPin");
[18:43:27.680]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:43:27.680]                  <block atomic="false" info="">
[18:43:27.680]                    __var pin     = 0;
[18:43:27.680]                      // -> [pin <= 0x00000000]
[18:43:27.680]                    __var port    = 0;
[18:43:27.681]                      // -> [port <= 0x00000000]
[18:43:27.681]                    __var portAdr = 0;
[18:43:27.681]                      // -> [portAdr <= 0x00000000]
[18:43:27.681]                    __var pos     = 0;
[18:43:27.681]                      // -> [pos <= 0x00000000]
[18:43:27.681]                    __var SWO_Pin = 0x00010003;          // PB3
[18:43:27.681]                      // -> [SWO_Pin <= 0x00010003]
[18:43:27.681]                  </block>
[18:43:27.681]                  <block atomic="false" info="configure SWO">
[18:43:27.682]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:43:27.682]                      // -> [pin <= 0x00000003]
[18:43:27.682]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:43:27.682]                      // -> [port <= 0x00000001]
[18:43:27.682]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:43:27.682]                      // -> [portAdr <= 0x40020400]
[18:43:27.682]                    pos = pin * 2;
[18:43:27.682]                      // -> [pos <= 0x00000006]
[18:43:27.682]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:43:27.683]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.683]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.683]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:43:27.684]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.684]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.684]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:43:27.685]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.685]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.685]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:43:27.686]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.686]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.686]                  </block>
[18:43:27.686]                  <control if="pin <  8" while="" timeout="0" info="">
[18:43:27.686]                    // if-block "pin <  8"
[18:43:27.687]                      // =>  TRUE
[18:43:27.687]                    <block atomic="false" info="">
[18:43:27.687]                      pos = ((pin    ) & 7) * 4;
[18:43:27.687]                        // -> [pos <= 0x0000000C]
[18:43:27.687]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:43:27.687]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.688]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.688]                    </block>
[18:43:27.688]                    // end if-block "pin <  8"
[18:43:27.688]                  </control>
[18:43:27.688]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:43:27.688]                    // if-block "pin >= 8"
[18:43:27.689]                      // =>  FALSE
[18:43:27.689]                    // skip if-block "pin >= 8"
[18:43:27.689]                  </control>
[18:43:27.689]                </sequence>
[18:43:27.689]            </block>
[18:43:27.689]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:43:27.689]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:43:27.690]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:27.690]            </block>
[18:43:27.690]          </sequence>
[18:43:27.690]      </block>
[18:43:27.690]      // end if-block "traceSWO"
[18:43:27.690]    </control>
[18:43:27.690]    <control if="traceTPIU" while="" timeout="0" info="">
[18:43:27.691]      // if-block "traceTPIU"
[18:43:27.691]        // =>  FALSE
[18:43:27.691]      // skip if-block "traceTPIU"
[18:43:27.691]    </control>
[18:43:27.691]  </sequence>
[18:43:27.691]  
[18:43:52.439]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:43:52.439]  
[18:43:52.439]  <debugvars>
[18:43:52.439]    // Pre-defined
[18:43:52.439]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:43:52.440]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:43:52.440]    __dp=0x00000000
[18:43:52.440]    __ap=0x00000000
[18:43:52.440]    __traceout=0x00000001      (SWO Trace)
[18:43:52.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:43:52.441]    __FlashAddr=0x00000000
[18:43:52.441]    __FlashLen=0x00000000
[18:43:52.441]    __FlashArg=0x00000000
[18:43:52.441]    __FlashOp=0x00000000
[18:43:52.441]    __Result=0x00000000
[18:43:52.442]    
[18:43:52.442]    // User-defined
[18:43:52.442]    DbgMCU_CR=0x00000007
[18:43:52.442]    DbgMCU_APB1_Fz=0x00000000
[18:43:52.442]    DbgMCU_APB2_Fz=0x00000000
[18:43:52.442]    TraceClk_Pin=0x00040002
[18:43:52.442]    TraceD0_Pin=0x00040003
[18:43:52.442]    TraceD1_Pin=0x00040004
[18:43:52.443]    TraceD2_Pin=0x00040005
[18:43:52.443]    TraceD3_Pin=0x00040006
[18:43:52.443]  </debugvars>
[18:43:52.443]  
[18:43:52.443]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:43:52.443]    <block atomic="false" info="">
[18:43:52.443]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:43:52.443]        // -> [traceSWO <= 0x00000001]
[18:43:52.444]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:43:52.444]        // -> [traceTPIU <= 0x00000000]
[18:43:52.444]    </block>
[18:43:52.444]    <control if="traceSWO" while="" timeout="0" info="">
[18:43:52.444]      // if-block "traceSWO"
[18:43:52.444]        // =>  TRUE
[18:43:52.444]      <block atomic="false" info="">
[18:43:52.444]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:43:52.445]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:43:52.445]            <block atomic="false" info="">
[18:43:52.445]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:43:52.445]                // -> [dbgmcu_val <= 0x00000000]
[18:43:52.445]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:43:52.445]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:43:52.445]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:43:52.446]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.446]                // -> [dbgmcu_val <= 0x00000007]
[18:43:52.446]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:43:52.446]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:43:52.446]              Sequence("ConfigureTraceSWOPin");
[18:43:52.446]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:43:52.447]                  <block atomic="false" info="">
[18:43:52.447]                    __var pin     = 0;
[18:43:52.447]                      // -> [pin <= 0x00000000]
[18:43:52.447]                    __var port    = 0;
[18:43:52.447]                      // -> [port <= 0x00000000]
[18:43:52.447]                    __var portAdr = 0;
[18:43:52.447]                      // -> [portAdr <= 0x00000000]
[18:43:52.447]                    __var pos     = 0;
[18:43:52.447]                      // -> [pos <= 0x00000000]
[18:43:52.448]                    __var SWO_Pin = 0x00010003;          // PB3
[18:43:52.448]                      // -> [SWO_Pin <= 0x00010003]
[18:43:52.448]                  </block>
[18:43:52.448]                  <block atomic="false" info="configure SWO">
[18:43:52.448]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:43:52.448]                      // -> [pin <= 0x00000003]
[18:43:52.448]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:43:52.448]                      // -> [port <= 0x00000001]
[18:43:52.449]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:43:52.449]                      // -> [portAdr <= 0x40020400]
[18:43:52.449]                    pos = pin * 2;
[18:43:52.449]                      // -> [pos <= 0x00000006]
[18:43:52.449]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:43:52.449]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.450]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.450]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:43:52.450]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.451]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.451]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:43:52.451]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.452]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.452]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:43:52.452]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.453]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.453]                  </block>
[18:43:52.453]                  <control if="pin <  8" while="" timeout="0" info="">
[18:43:52.453]                    // if-block "pin <  8"
[18:43:52.453]                      // =>  TRUE
[18:43:52.453]                    <block atomic="false" info="">
[18:43:52.453]                      pos = ((pin    ) & 7) * 4;
[18:43:52.453]                        // -> [pos <= 0x0000000C]
[18:43:52.453]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:43:52.454]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.454]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.454]                    </block>
[18:43:52.455]                    // end if-block "pin <  8"
[18:43:52.455]                  </control>
[18:43:52.455]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:43:52.455]                    // if-block "pin >= 8"
[18:43:52.455]                      // =>  FALSE
[18:43:52.455]                    // skip if-block "pin >= 8"
[18:43:52.455]                  </control>
[18:43:52.455]                </sequence>
[18:43:52.455]            </block>
[18:43:52.456]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:43:52.456]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:43:52.456]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:43:52.456]            </block>
[18:43:52.456]          </sequence>
[18:43:52.456]      </block>
[18:43:52.457]      // end if-block "traceSWO"
[18:43:52.457]    </control>
[18:43:52.457]    <control if="traceTPIU" while="" timeout="0" info="">
[18:43:52.457]      // if-block "traceTPIU"
[18:43:52.457]        // =>  FALSE
[18:43:52.457]      // skip if-block "traceTPIU"
[18:43:52.457]    </control>
[18:43:52.457]  </sequence>
[18:43:52.458]  
[18:44:00.647]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[18:44:00.647]  
[18:44:00.647]  <debugvars>
[18:44:00.648]    // Pre-defined
[18:44:00.648]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:44:00.648]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:44:00.648]    __dp=0x00000000
[18:44:00.649]    __ap=0x00000000
[18:44:00.649]    __traceout=0x00000001      (SWO Trace)
[18:44:00.649]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:44:00.649]    __FlashAddr=0x00000000
[18:44:00.650]    __FlashLen=0x00000000
[18:44:00.650]    __FlashArg=0x00000000
[18:44:00.650]    __FlashOp=0x00000000
[18:44:00.650]    __Result=0x00000000
[18:44:00.650]    
[18:44:00.650]    // User-defined
[18:44:00.651]    DbgMCU_CR=0x00000007
[18:44:00.651]    DbgMCU_APB1_Fz=0x00000000
[18:44:00.651]    DbgMCU_APB2_Fz=0x00000000
[18:44:00.651]    TraceClk_Pin=0x00040002
[18:44:00.651]    TraceD0_Pin=0x00040003
[18:44:00.652]    TraceD1_Pin=0x00040004
[18:44:00.652]    TraceD2_Pin=0x00040005
[18:44:00.652]    TraceD3_Pin=0x00040006
[18:44:00.652]  </debugvars>
[18:44:00.652]  
[18:44:00.653]  <sequence name="TraceStop" Pname="" disable="false" info="">
[18:44:00.653]    <block atomic="false" info="">
[18:44:00.653]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[18:44:00.653]        // -> [traceSWO <= 0x00000001]
[18:44:00.653]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[18:44:00.654]        // -> [traceTPIU <= 0x00000000]
[18:44:00.654]    </block>
[18:44:00.654]    <control if="traceSWO" while="" timeout="0" info="">
[18:44:00.654]      // if-block "traceSWO"
[18:44:00.654]        // =>  TRUE
[18:44:00.655]      <block atomic="false" info="">
[18:44:00.655]        Sequence("DisableTraceSWO");
[18:44:00.655]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[18:44:00.655]            <block atomic="false" info="">
[18:44:00.655]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:44:00.656]                // -> [dbgmcu_val <= 0x00000000]
[18:44:00.656]            </block>
[18:44:00.656]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[18:44:00.656]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[18:44:00.657]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:44:00.657]                // -> [dbgmcu_val <= 0x00000007]
[18:44:00.657]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[18:44:00.658]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:00.658]            </block>
[18:44:00.658]          </sequence>
[18:44:00.658]      </block>
[18:44:00.658]      // end if-block "traceSWO"
[18:44:00.658]    </control>
[18:44:00.659]    <control if="traceTPIU" while="" timeout="0" info="">
[18:44:00.659]      // if-block "traceTPIU"
[18:44:00.659]        // =>  FALSE
[18:44:00.659]      // skip if-block "traceTPIU"
[18:44:00.659]    </control>
[18:44:00.659]  </sequence>
[18:44:00.660]  
[18:44:02.889]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:44:02.889]  
[18:44:02.889]  <debugvars>
[18:44:02.890]    // Pre-defined
[18:44:02.890]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:44:02.890]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:44:02.890]    __dp=0x00000000
[18:44:02.891]    __ap=0x00000000
[18:44:02.891]    __traceout=0x00000001      (SWO Trace)
[18:44:02.891]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:44:02.891]    __FlashAddr=0x00000000
[18:44:02.891]    __FlashLen=0x00000000
[18:44:02.892]    __FlashArg=0x00000000
[18:44:02.892]    __FlashOp=0x00000000
[18:44:02.892]    __Result=0x00000000
[18:44:02.892]    
[18:44:02.892]    // User-defined
[18:44:02.892]    DbgMCU_CR=0x00000007
[18:44:02.893]    DbgMCU_APB1_Fz=0x00000000
[18:44:02.893]    DbgMCU_APB2_Fz=0x00000000
[18:44:02.893]    TraceClk_Pin=0x00040002
[18:44:02.893]    TraceD0_Pin=0x00040003
[18:44:02.893]    TraceD1_Pin=0x00040004
[18:44:02.893]    TraceD2_Pin=0x00040005
[18:44:02.894]    TraceD3_Pin=0x00040006
[18:44:02.894]  </debugvars>
[18:44:02.894]  
[18:44:02.894]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:44:02.894]    <block atomic="false" info="">
[18:44:02.895]      Sequence("CheckID");
[18:44:02.895]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:44:02.895]          <block atomic="false" info="">
[18:44:02.895]            __var pidr1 = 0;
[18:44:02.895]              // -> [pidr1 <= 0x00000000]
[18:44:02.896]            __var pidr2 = 0;
[18:44:02.896]              // -> [pidr2 <= 0x00000000]
[18:44:02.896]            __var jep106id = 0;
[18:44:02.896]              // -> [jep106id <= 0x00000000]
[18:44:02.896]            __var ROMTableBase = 0;
[18:44:02.896]              // -> [ROMTableBase <= 0x00000000]
[18:44:02.897]            __ap = 0;      // AHB-AP
[18:44:02.897]              // -> [__ap <= 0x00000000]
[18:44:02.897]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:44:02.897]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.897]              // -> [ROMTableBase <= 0xE00FD000]
[18:44:02.898]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:44:02.898]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.898]              // -> [pidr1 <= 0x00000004]
[18:44:02.899]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:44:02.899]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.899]              // -> [pidr2 <= 0x0000001A]
[18:44:02.899]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:44:02.900]              // -> [jep106id <= 0x00000020]
[18:44:02.900]          </block>
[18:44:02.900]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:44:02.900]            // if-block "jep106id != 0x20"
[18:44:02.900]              // =>  FALSE
[18:44:02.900]            // skip if-block "jep106id != 0x20"
[18:44:02.900]          </control>
[18:44:02.901]        </sequence>
[18:44:02.901]    </block>
[18:44:02.901]  </sequence>
[18:44:02.901]  
[18:44:02.916]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:44:02.916]  
[18:44:02.916]  <debugvars>
[18:44:02.917]    // Pre-defined
[18:44:02.917]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:44:02.917]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:44:02.917]    __dp=0x00000000
[18:44:02.917]    __ap=0x00000000
[18:44:02.918]    __traceout=0x00000001      (SWO Trace)
[18:44:02.918]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:44:02.918]    __FlashAddr=0x00000000
[18:44:02.918]    __FlashLen=0x00000000
[18:44:02.918]    __FlashArg=0x00000000
[18:44:02.919]    __FlashOp=0x00000000
[18:44:02.919]    __Result=0x00000000
[18:44:02.919]    
[18:44:02.919]    // User-defined
[18:44:02.919]    DbgMCU_CR=0x00000007
[18:44:02.919]    DbgMCU_APB1_Fz=0x00000000
[18:44:02.920]    DbgMCU_APB2_Fz=0x00000000
[18:44:02.920]    TraceClk_Pin=0x00040002
[18:44:02.920]    TraceD0_Pin=0x00040003
[18:44:02.920]    TraceD1_Pin=0x00040004
[18:44:02.920]    TraceD2_Pin=0x00040005
[18:44:02.920]    TraceD3_Pin=0x00040006
[18:44:02.921]  </debugvars>
[18:44:02.921]  
[18:44:02.921]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:44:02.921]    <block atomic="false" info="">
[18:44:02.921]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:44:02.922]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.922]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:44:02.923]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.923]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:44:02.923]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.924]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:44:02.924]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.924]    </block>
[18:44:02.924]  </sequence>
[18:44:02.925]  
[18:44:02.941]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[18:44:02.941]  
[18:44:02.941]  <debugvars>
[18:44:02.941]    // Pre-defined
[18:44:02.942]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:44:02.942]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:44:02.942]    __dp=0x00000000
[18:44:02.942]    __ap=0x00000000
[18:44:02.942]    __traceout=0x00000001      (SWO Trace)
[18:44:02.942]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:44:02.943]    __FlashAddr=0x00000000
[18:44:02.943]    __FlashLen=0x00000000
[18:44:02.943]    __FlashArg=0x00000000
[18:44:02.943]    __FlashOp=0x00000000
[18:44:02.943]    __Result=0x00000000
[18:44:02.943]    
[18:44:02.943]    // User-defined
[18:44:02.943]    DbgMCU_CR=0x00000007
[18:44:02.944]    DbgMCU_APB1_Fz=0x00000000
[18:44:02.944]    DbgMCU_APB2_Fz=0x00000000
[18:44:02.944]    TraceClk_Pin=0x00040002
[18:44:02.944]    TraceD0_Pin=0x00040003
[18:44:02.944]    TraceD1_Pin=0x00040004
[18:44:02.944]    TraceD2_Pin=0x00040005
[18:44:02.944]    TraceD3_Pin=0x00040006
[18:44:02.945]  </debugvars>
[18:44:02.945]  
[18:44:02.945]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:44:02.945]    <block atomic="false" info="">
[18:44:02.945]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:44:02.945]        // -> [traceSWO <= 0x00000001]
[18:44:02.945]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:44:02.946]        // -> [traceTPIU <= 0x00000000]
[18:44:02.946]    </block>
[18:44:02.946]    <control if="traceSWO" while="" timeout="0" info="">
[18:44:02.946]      // if-block "traceSWO"
[18:44:02.946]        // =>  TRUE
[18:44:02.946]      <block atomic="false" info="">
[18:44:02.946]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:44:02.947]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:44:02.947]            <block atomic="false" info="">
[18:44:02.947]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:44:02.947]                // -> [dbgmcu_val <= 0x00000000]
[18:44:02.947]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:44:02.947]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:44:02.947]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:44:02.948]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.948]                // -> [dbgmcu_val <= 0x00000007]
[18:44:02.948]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:44:02.948]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:44:02.948]              Sequence("ConfigureTraceSWOPin");
[18:44:02.948]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:44:02.948]                  <block atomic="false" info="">
[18:44:02.948]                    __var pin     = 0;
[18:44:02.949]                      // -> [pin <= 0x00000000]
[18:44:02.949]                    __var port    = 0;
[18:44:02.949]                      // -> [port <= 0x00000000]
[18:44:02.949]                    __var portAdr = 0;
[18:44:02.949]                      // -> [portAdr <= 0x00000000]
[18:44:02.949]                    __var pos     = 0;
[18:44:02.949]                      // -> [pos <= 0x00000000]
[18:44:02.949]                    __var SWO_Pin = 0x00010003;          // PB3
[18:44:02.949]                      // -> [SWO_Pin <= 0x00010003]
[18:44:02.950]                  </block>
[18:44:02.950]                  <block atomic="false" info="configure SWO">
[18:44:02.950]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:44:02.950]                      // -> [pin <= 0x00000003]
[18:44:02.950]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:44:02.950]                      // -> [port <= 0x00000001]
[18:44:02.950]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:44:02.950]                      // -> [portAdr <= 0x40020400]
[18:44:02.950]                    pos = pin * 2;
[18:44:02.951]                      // -> [pos <= 0x00000006]
[18:44:02.951]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:44:02.951]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.952]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.952]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:44:02.952]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.953]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.953]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:44:02.953]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.953]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.954]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:44:02.954]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.955]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.955]                  </block>
[18:44:02.955]                  <control if="pin <  8" while="" timeout="0" info="">
[18:44:02.955]                    // if-block "pin <  8"
[18:44:02.955]                      // =>  TRUE
[18:44:02.955]                    <block atomic="false" info="">
[18:44:02.955]                      pos = ((pin    ) & 7) * 4;
[18:44:02.955]                        // -> [pos <= 0x0000000C]
[18:44:02.955]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:44:02.956]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.956]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.956]                    </block>
[18:44:02.956]                    // end if-block "pin <  8"
[18:44:02.957]                  </control>
[18:44:02.957]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:44:02.957]                    // if-block "pin >= 8"
[18:44:02.957]                      // =>  FALSE
[18:44:02.957]                    // skip if-block "pin >= 8"
[18:44:02.957]                  </control>
[18:44:02.957]                </sequence>
[18:44:02.958]            </block>
[18:44:02.958]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:44:02.958]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:44:02.958]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.958]            </block>
[18:44:02.958]          </sequence>
[18:44:02.958]      </block>
[18:44:02.959]      // end if-block "traceSWO"
[18:44:02.959]    </control>
[18:44:02.959]    <control if="traceTPIU" while="" timeout="0" info="">
[18:44:02.959]      // if-block "traceTPIU"
[18:44:02.959]        // =>  FALSE
[18:44:02.959]      // skip if-block "traceTPIU"
[18:44:02.959]    </control>
[18:44:02.959]  </sequence>
[18:44:02.960]  
[18:44:02.963]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:44:02.963]  
[18:44:02.963]  <debugvars>
[18:44:02.963]    // Pre-defined
[18:44:02.964]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:44:02.964]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:44:02.964]    __dp=0x00000000
[18:44:02.964]    __ap=0x00000000
[18:44:02.964]    __traceout=0x00000001      (SWO Trace)
[18:44:02.965]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:44:02.965]    __FlashAddr=0x00000000
[18:44:02.965]    __FlashLen=0x00000000
[18:44:02.965]    __FlashArg=0x00000000
[18:44:02.965]    __FlashOp=0x00000000
[18:44:02.965]    __Result=0x00000000
[18:44:02.966]    
[18:44:02.966]    // User-defined
[18:44:02.966]    DbgMCU_CR=0x00000007
[18:44:02.966]    DbgMCU_APB1_Fz=0x00000000
[18:44:02.966]    DbgMCU_APB2_Fz=0x00000000
[18:44:02.966]    TraceClk_Pin=0x00040002
[18:44:02.966]    TraceD0_Pin=0x00040003
[18:44:02.966]    TraceD1_Pin=0x00040004
[18:44:02.967]    TraceD2_Pin=0x00040005
[18:44:02.967]    TraceD3_Pin=0x00040006
[18:44:02.967]  </debugvars>
[18:44:02.967]  
[18:44:02.967]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:44:02.967]    <block atomic="false" info="">
[18:44:02.967]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:44:02.967]        // -> [traceSWO <= 0x00000001]
[18:44:02.967]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:44:02.968]        // -> [traceTPIU <= 0x00000000]
[18:44:02.968]    </block>
[18:44:02.968]    <control if="traceSWO" while="" timeout="0" info="">
[18:44:02.968]      // if-block "traceSWO"
[18:44:02.968]        // =>  TRUE
[18:44:02.968]      <block atomic="false" info="">
[18:44:02.968]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:44:02.968]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:44:02.969]            <block atomic="false" info="">
[18:44:02.969]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:44:02.969]                // -> [dbgmcu_val <= 0x00000000]
[18:44:02.969]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:44:02.969]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:44:02.969]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:44:02.970]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.970]                // -> [dbgmcu_val <= 0x00000007]
[18:44:02.970]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:44:02.970]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:44:02.970]              Sequence("ConfigureTraceSWOPin");
[18:44:02.970]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:44:02.970]                  <block atomic="false" info="">
[18:44:02.970]                    __var pin     = 0;
[18:44:02.971]                      // -> [pin <= 0x00000000]
[18:44:02.971]                    __var port    = 0;
[18:44:02.971]                      // -> [port <= 0x00000000]
[18:44:02.971]                    __var portAdr = 0;
[18:44:02.971]                      // -> [portAdr <= 0x00000000]
[18:44:02.971]                    __var pos     = 0;
[18:44:02.971]                      // -> [pos <= 0x00000000]
[18:44:02.972]                    __var SWO_Pin = 0x00010003;          // PB3
[18:44:02.972]                      // -> [SWO_Pin <= 0x00010003]
[18:44:02.972]                  </block>
[18:44:02.972]                  <block atomic="false" info="configure SWO">
[18:44:02.972]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:44:02.972]                      // -> [pin <= 0x00000003]
[18:44:02.972]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:44:02.972]                      // -> [port <= 0x00000001]
[18:44:02.973]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:44:02.973]                      // -> [portAdr <= 0x40020400]
[18:44:02.973]                    pos = pin * 2;
[18:44:02.973]                      // -> [pos <= 0x00000006]
[18:44:02.973]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:44:02.974]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.974]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.974]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:44:02.975]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.975]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.975]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:44:02.976]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.976]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.976]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:44:02.977]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.977]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.977]                  </block>
[18:44:02.977]                  <control if="pin <  8" while="" timeout="0" info="">
[18:44:02.977]                    // if-block "pin <  8"
[18:44:02.978]                      // =>  TRUE
[18:44:02.978]                    <block atomic="false" info="">
[18:44:02.978]                      pos = ((pin    ) & 7) * 4;
[18:44:02.978]                        // -> [pos <= 0x0000000C]
[18:44:02.978]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:44:02.979]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.979]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.979]                    </block>
[18:44:02.979]                    // end if-block "pin <  8"
[18:44:02.979]                  </control>
[18:44:02.979]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:44:02.979]                    // if-block "pin >= 8"
[18:44:02.979]                      // =>  FALSE
[18:44:02.979]                    // skip if-block "pin >= 8"
[18:44:02.979]                  </control>
[18:44:02.979]                </sequence>
[18:44:02.980]            </block>
[18:44:02.980]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:44:02.980]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:44:02.980]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:02.980]            </block>
[18:44:02.980]          </sequence>
[18:44:02.981]      </block>
[18:44:02.981]      // end if-block "traceSWO"
[18:44:02.981]    </control>
[18:44:02.981]    <control if="traceTPIU" while="" timeout="0" info="">
[18:44:02.981]      // if-block "traceTPIU"
[18:44:02.981]        // =>  FALSE
[18:44:02.981]      // skip if-block "traceTPIU"
[18:44:02.981]    </control>
[18:44:02.981]  </sequence>
[18:44:02.982]  
[18:44:03.194]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:44:03.194]  
[18:44:03.194]  <debugvars>
[18:44:03.194]    // Pre-defined
[18:44:03.194]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:44:03.195]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:44:03.195]    __dp=0x00000000
[18:44:03.195]    __ap=0x00000000
[18:44:03.195]    __traceout=0x00000001      (SWO Trace)
[18:44:03.195]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:44:03.195]    __FlashAddr=0x00000000
[18:44:03.195]    __FlashLen=0x00000000
[18:44:03.195]    __FlashArg=0x00000000
[18:44:03.196]    __FlashOp=0x00000000
[18:44:03.196]    __Result=0x00000000
[18:44:03.196]    
[18:44:03.196]    // User-defined
[18:44:03.196]    DbgMCU_CR=0x00000007
[18:44:03.196]    DbgMCU_APB1_Fz=0x00000000
[18:44:03.196]    DbgMCU_APB2_Fz=0x00000000
[18:44:03.196]    TraceClk_Pin=0x00040002
[18:44:03.197]    TraceD0_Pin=0x00040003
[18:44:03.197]    TraceD1_Pin=0x00040004
[18:44:03.197]    TraceD2_Pin=0x00040005
[18:44:03.197]    TraceD3_Pin=0x00040006
[18:44:03.197]  </debugvars>
[18:44:03.197]  
[18:44:03.197]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:44:03.198]    <block atomic="false" info="">
[18:44:03.198]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:44:03.198]        // -> [traceSWO <= 0x00000001]
[18:44:03.198]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:44:03.198]        // -> [traceTPIU <= 0x00000000]
[18:44:03.198]    </block>
[18:44:03.198]    <control if="traceSWO" while="" timeout="0" info="">
[18:44:03.198]      // if-block "traceSWO"
[18:44:03.199]        // =>  TRUE
[18:44:03.199]      <block atomic="false" info="">
[18:44:03.199]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:44:03.199]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:44:03.199]            <block atomic="false" info="">
[18:44:03.199]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:44:03.200]                // -> [dbgmcu_val <= 0x00000000]
[18:44:03.200]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:44:03.200]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:44:03.200]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:44:03.201]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.201]                // -> [dbgmcu_val <= 0x00000007]
[18:44:03.201]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:44:03.201]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:44:03.201]              Sequence("ConfigureTraceSWOPin");
[18:44:03.201]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:44:03.202]                  <block atomic="false" info="">
[18:44:03.202]                    __var pin     = 0;
[18:44:03.202]                      // -> [pin <= 0x00000000]
[18:44:03.202]                    __var port    = 0;
[18:44:03.202]                      // -> [port <= 0x00000000]
[18:44:03.202]                    __var portAdr = 0;
[18:44:03.203]                      // -> [portAdr <= 0x00000000]
[18:44:03.203]                    __var pos     = 0;
[18:44:03.203]                      // -> [pos <= 0x00000000]
[18:44:03.203]                    __var SWO_Pin = 0x00010003;          // PB3
[18:44:03.203]                      // -> [SWO_Pin <= 0x00010003]
[18:44:03.203]                  </block>
[18:44:03.203]                  <block atomic="false" info="configure SWO">
[18:44:03.203]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:44:03.203]                      // -> [pin <= 0x00000003]
[18:44:03.204]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:44:03.204]                      // -> [port <= 0x00000001]
[18:44:03.204]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:44:03.204]                      // -> [portAdr <= 0x40020400]
[18:44:03.204]                    pos = pin * 2;
[18:44:03.204]                      // -> [pos <= 0x00000006]
[18:44:03.204]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:44:03.205]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.205]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.206]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:44:03.206]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.207]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.207]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:44:03.207]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.208]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.208]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:44:03.208]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.209]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.209]                  </block>
[18:44:03.209]                  <control if="pin <  8" while="" timeout="0" info="">
[18:44:03.209]                    // if-block "pin <  8"
[18:44:03.209]                      // =>  TRUE
[18:44:03.209]                    <block atomic="false" info="">
[18:44:03.209]                      pos = ((pin    ) & 7) * 4;
[18:44:03.210]                        // -> [pos <= 0x0000000C]
[18:44:03.210]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:44:03.210]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.211]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.211]                    </block>
[18:44:03.211]                    // end if-block "pin <  8"
[18:44:03.211]                  </control>
[18:44:03.211]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:44:03.211]                    // if-block "pin >= 8"
[18:44:03.211]                      // =>  FALSE
[18:44:03.212]                    // skip if-block "pin >= 8"
[18:44:03.212]                  </control>
[18:44:03.212]                </sequence>
[18:44:03.212]            </block>
[18:44:03.212]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:44:03.212]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:44:03.213]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:44:03.213]            </block>
[18:44:03.213]          </sequence>
[18:44:03.213]      </block>
[18:44:03.213]      // end if-block "traceSWO"
[18:44:03.213]    </control>
[18:44:03.213]    <control if="traceTPIU" while="" timeout="0" info="">
[18:44:03.214]      // if-block "traceTPIU"
[18:44:03.214]        // =>  FALSE
[18:44:03.214]      // skip if-block "traceTPIU"
[18:44:03.214]    </control>
[18:44:03.214]  </sequence>
[18:44:03.214]  
[18:49:00.697]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[18:49:00.697]  
[18:49:00.698]  <debugvars>
[18:49:00.698]    // Pre-defined
[18:49:00.698]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:49:00.698]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:49:00.699]    __dp=0x00000000
[18:49:00.699]    __ap=0x00000000
[18:49:00.699]    __traceout=0x00000001      (SWO Trace)
[18:49:00.699]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:49:00.699]    __FlashAddr=0x00000000
[18:49:00.700]    __FlashLen=0x00000000
[18:49:00.700]    __FlashArg=0x00000000
[18:49:00.700]    __FlashOp=0x00000000
[18:49:00.700]    __Result=0x00000000
[18:49:00.700]    
[18:49:00.700]    // User-defined
[18:49:00.701]    DbgMCU_CR=0x00000007
[18:49:00.701]    DbgMCU_APB1_Fz=0x00000000
[18:49:00.701]    DbgMCU_APB2_Fz=0x00000000
[18:49:00.701]    TraceClk_Pin=0x00040002
[18:49:00.701]    TraceD0_Pin=0x00040003
[18:49:00.702]    TraceD1_Pin=0x00040004
[18:49:00.702]    TraceD2_Pin=0x00040005
[18:49:00.702]    TraceD3_Pin=0x00040006
[18:49:00.702]  </debugvars>
[18:49:00.702]  
[18:49:00.703]  <sequence name="TraceStop" Pname="" disable="false" info="">
[18:49:00.703]    <block atomic="false" info="">
[18:49:00.703]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[18:49:00.703]        // -> [traceSWO <= 0x00000001]
[18:49:00.703]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[18:49:00.703]        // -> [traceTPIU <= 0x00000000]
[18:49:00.704]    </block>
[18:49:00.704]    <control if="traceSWO" while="" timeout="0" info="">
[18:49:00.704]      // if-block "traceSWO"
[18:49:00.704]        // =>  TRUE
[18:49:00.704]      <block atomic="false" info="">
[18:49:00.704]        Sequence("DisableTraceSWO");
[18:49:00.705]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[18:49:00.705]            <block atomic="false" info="">
[18:49:00.705]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:49:00.705]                // -> [dbgmcu_val <= 0x00000000]
[18:49:00.705]            </block>
[18:49:00.705]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[18:49:00.705]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[18:49:00.706]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:49:00.706]                // -> [dbgmcu_val <= 0x00000007]
[18:49:00.706]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[18:49:00.707]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:49:00.707]            </block>
[18:49:00.707]          </sequence>
[18:49:00.707]      </block>
[18:49:00.707]      // end if-block "traceSWO"
[18:49:00.707]    </control>
[18:49:00.708]    <control if="traceTPIU" while="" timeout="0" info="">
[18:49:00.708]      // if-block "traceTPIU"
[18:49:00.708]        // =>  FALSE
[18:49:00.708]      // skip if-block "traceTPIU"
[18:49:00.708]    </control>
[18:49:00.708]  </sequence>
[18:49:00.708]  
[18:52:14.535]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:52:14.535]  
[18:52:14.535]  <debugvars>
[18:52:14.535]    // Pre-defined
[18:52:14.535]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:14.535]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:52:14.536]    __dp=0x00000000
[18:52:14.536]    __ap=0x00000000
[18:52:14.536]    __traceout=0x00000001      (SWO Trace)
[18:52:14.536]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:14.536]    __FlashAddr=0x00000000
[18:52:14.536]    __FlashLen=0x00000000
[18:52:14.536]    __FlashArg=0x00000000
[18:52:14.537]    __FlashOp=0x00000000
[18:52:14.537]    __Result=0x00000000
[18:52:14.537]    
[18:52:14.537]    // User-defined
[18:52:14.537]    DbgMCU_CR=0x00000007
[18:52:14.537]    DbgMCU_APB1_Fz=0x00000000
[18:52:14.537]    DbgMCU_APB2_Fz=0x00000000
[18:52:14.537]    TraceClk_Pin=0x00040002
[18:52:14.537]    TraceD0_Pin=0x00040003
[18:52:14.537]    TraceD1_Pin=0x00040004
[18:52:14.538]    TraceD2_Pin=0x00040005
[18:52:14.538]    TraceD3_Pin=0x00040006
[18:52:14.538]  </debugvars>
[18:52:14.538]  
[18:52:14.538]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:52:14.538]    <block atomic="false" info="">
[18:52:14.538]      Sequence("CheckID");
[18:52:14.539]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:52:14.539]          <block atomic="false" info="">
[18:52:14.539]            __var pidr1 = 0;
[18:52:14.539]              // -> [pidr1 <= 0x00000000]
[18:52:14.539]            __var pidr2 = 0;
[18:52:14.539]              // -> [pidr2 <= 0x00000000]
[18:52:14.539]            __var jep106id = 0;
[18:52:14.539]              // -> [jep106id <= 0x00000000]
[18:52:14.539]            __var ROMTableBase = 0;
[18:52:14.540]              // -> [ROMTableBase <= 0x00000000]
[18:52:14.540]            __ap = 0;      // AHB-AP
[18:52:14.540]              // -> [__ap <= 0x00000000]
[18:52:14.540]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:52:14.540]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.540]              // -> [ROMTableBase <= 0xE00FD000]
[18:52:14.540]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:52:14.541]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.541]              // -> [pidr1 <= 0x00000004]
[18:52:14.541]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:52:14.542]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.542]              // -> [pidr2 <= 0x0000001A]
[18:52:14.542]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:52:14.542]              // -> [jep106id <= 0x00000020]
[18:52:14.542]          </block>
[18:52:14.542]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:52:14.542]            // if-block "jep106id != 0x20"
[18:52:14.542]              // =>  FALSE
[18:52:14.543]            // skip if-block "jep106id != 0x20"
[18:52:14.543]          </control>
[18:52:14.543]        </sequence>
[18:52:14.543]    </block>
[18:52:14.543]  </sequence>
[18:52:14.543]  
[18:52:14.558]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:52:14.558]  
[18:52:14.558]  <debugvars>
[18:52:14.558]    // Pre-defined
[18:52:14.558]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:14.558]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:52:14.558]    __dp=0x00000000
[18:52:14.559]    __ap=0x00000000
[18:52:14.559]    __traceout=0x00000001      (SWO Trace)
[18:52:14.559]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:14.559]    __FlashAddr=0x00000000
[18:52:14.559]    __FlashLen=0x00000000
[18:52:14.559]    __FlashArg=0x00000000
[18:52:14.559]    __FlashOp=0x00000000
[18:52:14.559]    __Result=0x00000000
[18:52:14.560]    
[18:52:14.560]    // User-defined
[18:52:14.560]    DbgMCU_CR=0x00000007
[18:52:14.560]    DbgMCU_APB1_Fz=0x00000000
[18:52:14.560]    DbgMCU_APB2_Fz=0x00000000
[18:52:14.560]    TraceClk_Pin=0x00040002
[18:52:14.560]    TraceD0_Pin=0x00040003
[18:52:14.560]    TraceD1_Pin=0x00040004
[18:52:14.560]    TraceD2_Pin=0x00040005
[18:52:14.560]    TraceD3_Pin=0x00040006
[18:52:14.561]  </debugvars>
[18:52:14.561]  
[18:52:14.561]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:52:14.561]    <block atomic="false" info="">
[18:52:14.561]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:52:14.562]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.562]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:52:14.562]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.562]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:52:14.563]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.563]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:52:14.563]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:14.563]    </block>
[18:52:14.564]  </sequence>
[18:52:14.564]  
[19:18:25.972]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:18:25.972]  
[19:18:25.984]  <debugvars>
[19:18:25.984]    // Pre-defined
[19:18:25.984]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:25.984]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:18:25.985]    __dp=0x00000000
[19:18:25.985]    __ap=0x00000000
[19:18:25.985]    __traceout=0x00000001      (SWO Trace)
[19:18:25.985]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:25.985]    __FlashAddr=0x00000000
[19:18:25.986]    __FlashLen=0x00000000
[19:18:25.986]    __FlashArg=0x00000000
[19:18:25.986]    __FlashOp=0x00000000
[19:18:25.986]    __Result=0x00000000
[19:18:25.987]    
[19:18:25.987]    // User-defined
[19:18:25.987]    DbgMCU_CR=0x00000007
[19:18:25.987]    DbgMCU_APB1_Fz=0x00000000
[19:18:25.987]    DbgMCU_APB2_Fz=0x00000000
[19:18:25.987]    TraceClk_Pin=0x00040002
[19:18:25.987]    TraceD0_Pin=0x00040003
[19:18:25.988]    TraceD1_Pin=0x00040004
[19:18:25.988]    TraceD2_Pin=0x00040005
[19:18:25.988]    TraceD3_Pin=0x00040006
[19:18:25.988]  </debugvars>
[19:18:25.988]  
[19:18:25.988]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:18:25.989]    <block atomic="false" info="">
[19:18:25.989]      Sequence("CheckID");
[19:18:25.989]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:18:25.989]          <block atomic="false" info="">
[19:18:25.989]            __var pidr1 = 0;
[19:18:25.989]              // -> [pidr1 <= 0x00000000]
[19:18:25.989]            __var pidr2 = 0;
[19:18:25.990]              // -> [pidr2 <= 0x00000000]
[19:18:25.990]            __var jep106id = 0;
[19:18:25.990]              // -> [jep106id <= 0x00000000]
[19:18:25.990]            __var ROMTableBase = 0;
[19:18:25.990]              // -> [ROMTableBase <= 0x00000000]
[19:18:25.990]            __ap = 0;      // AHB-AP
[19:18:25.990]              // -> [__ap <= 0x00000000]
[19:18:25.990]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:18:25.991]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:18:25.991]              // -> [ROMTableBase <= 0xE00FD000]
[19:18:25.991]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:18:25.992]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:18:25.992]              // -> [pidr1 <= 0x00000004]
[19:18:25.992]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:18:25.992]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:18:25.992]              // -> [pidr2 <= 0x0000001A]
[19:18:25.992]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:18:25.993]              // -> [jep106id <= 0x00000020]
[19:18:25.993]          </block>
[19:18:25.993]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:18:25.993]            // if-block "jep106id != 0x20"
[19:18:25.993]              // =>  FALSE
[19:18:25.993]            // skip if-block "jep106id != 0x20"
[19:18:25.993]          </control>
[19:18:25.993]        </sequence>
[19:18:25.993]    </block>
[19:18:25.993]  </sequence>
[19:18:25.994]  
[19:18:26.009]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:18:26.009]  
[19:18:26.009]  <debugvars>
[19:18:26.009]    // Pre-defined
[19:18:26.010]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:26.010]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:18:26.010]    __dp=0x00000000
[19:18:26.010]    __ap=0x00000000
[19:18:26.011]    __traceout=0x00000001      (SWO Trace)
[19:18:26.011]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:26.011]    __FlashAddr=0x00000000
[19:18:26.011]    __FlashLen=0x00000000
[19:18:26.012]    __FlashArg=0x00000000
[19:18:26.012]    __FlashOp=0x00000000
[19:18:26.012]    __Result=0x00000000
[19:18:26.012]    
[19:18:26.012]    // User-defined
[19:18:26.012]    DbgMCU_CR=0x00000007
[19:18:26.013]    DbgMCU_APB1_Fz=0x00000000
[19:18:26.013]    DbgMCU_APB2_Fz=0x00000000
[19:18:26.013]    TraceClk_Pin=0x00040002
[19:18:26.013]    TraceD0_Pin=0x00040003
[19:18:26.013]    TraceD1_Pin=0x00040004
[19:18:26.013]    TraceD2_Pin=0x00040005
[19:18:26.014]    TraceD3_Pin=0x00040006
[19:18:26.014]  </debugvars>
[19:18:26.014]  
[19:18:26.014]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:18:26.014]    <block atomic="false" info="">
[19:18:26.015]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:18:26.015]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:26.015]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:18:26.016]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:26.016]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:18:26.017]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:26.017]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:18:26.017]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:26.017]    </block>
[19:18:26.018]  </sequence>
[19:18:26.018]  
[19:18:56.561]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:18:56.561]  
[19:18:56.561]  <debugvars>
[19:18:56.562]    // Pre-defined
[19:18:56.562]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:56.562]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:56.562]    __dp=0x00000000
[19:18:56.562]    __ap=0x00000000
[19:18:56.562]    __traceout=0x00000001      (SWO Trace)
[19:18:56.563]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:56.563]    __FlashAddr=0x00000000
[19:18:56.563]    __FlashLen=0x00000000
[19:18:56.563]    __FlashArg=0x00000000
[19:18:56.563]    __FlashOp=0x00000000
[19:18:56.564]    __Result=0x00000000
[19:18:56.564]    
[19:18:56.564]    // User-defined
[19:18:56.564]    DbgMCU_CR=0x00000007
[19:18:56.564]    DbgMCU_APB1_Fz=0x00000000
[19:18:56.564]    DbgMCU_APB2_Fz=0x00000000
[19:18:56.565]    TraceClk_Pin=0x00040002
[19:18:56.565]    TraceD0_Pin=0x00040003
[19:18:56.565]    TraceD1_Pin=0x00040004
[19:18:56.565]    TraceD2_Pin=0x00040005
[19:18:56.565]    TraceD3_Pin=0x00040006
[19:18:56.566]  </debugvars>
[19:18:56.566]  
[19:18:56.566]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:18:56.566]    <block atomic="false" info="">
[19:18:56.566]      Sequence("CheckID");
[19:18:56.566]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:18:56.567]          <block atomic="false" info="">
[19:18:56.567]            __var pidr1 = 0;
[19:18:56.567]              // -> [pidr1 <= 0x00000000]
[19:18:56.567]            __var pidr2 = 0;
[19:18:56.567]              // -> [pidr2 <= 0x00000000]
[19:18:56.567]            __var jep106id = 0;
[19:18:56.568]              // -> [jep106id <= 0x00000000]
[19:18:56.568]            __var ROMTableBase = 0;
[19:18:56.568]              // -> [ROMTableBase <= 0x00000000]
[19:18:56.568]            __ap = 0;      // AHB-AP
[19:18:56.568]              // -> [__ap <= 0x00000000]
[19:18:56.569]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:18:56.569]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.569]              // -> [ROMTableBase <= 0xE00FD000]
[19:18:56.569]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:18:56.570]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.570]              // -> [pidr1 <= 0x00000004]
[19:18:56.570]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:18:56.571]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.571]              // -> [pidr2 <= 0x0000001A]
[19:18:56.571]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:18:56.571]              // -> [jep106id <= 0x00000020]
[19:18:56.571]          </block>
[19:18:56.571]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:18:56.572]            // if-block "jep106id != 0x20"
[19:18:56.572]              // =>  FALSE
[19:18:56.572]            // skip if-block "jep106id != 0x20"
[19:18:56.572]          </control>
[19:18:56.572]        </sequence>
[19:18:56.572]    </block>
[19:18:56.573]  </sequence>
[19:18:56.573]  
[19:18:56.588]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:18:56.588]  
[19:18:56.588]  <debugvars>
[19:18:56.588]    // Pre-defined
[19:18:56.588]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:56.589]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:56.589]    __dp=0x00000000
[19:18:56.589]    __ap=0x00000000
[19:18:56.589]    __traceout=0x00000001      (SWO Trace)
[19:18:56.589]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:56.590]    __FlashAddr=0x00000000
[19:18:56.590]    __FlashLen=0x00000000
[19:18:56.590]    __FlashArg=0x00000000
[19:18:56.590]    __FlashOp=0x00000000
[19:18:56.590]    __Result=0x00000000
[19:18:56.591]    
[19:18:56.591]    // User-defined
[19:18:56.591]    DbgMCU_CR=0x00000007
[19:18:56.591]    DbgMCU_APB1_Fz=0x00000000
[19:18:56.591]    DbgMCU_APB2_Fz=0x00000000
[19:18:56.591]    TraceClk_Pin=0x00040002
[19:18:56.592]    TraceD0_Pin=0x00040003
[19:18:56.592]    TraceD1_Pin=0x00040004
[19:18:56.592]    TraceD2_Pin=0x00040005
[19:18:56.592]    TraceD3_Pin=0x00040006
[19:18:56.592]  </debugvars>
[19:18:56.593]  
[19:18:56.593]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:18:56.593]    <block atomic="false" info="">
[19:18:56.593]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:18:56.594]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.594]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:18:56.595]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.595]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:18:56.595]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.595]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:18:56.596]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.596]    </block>
[19:18:56.596]  </sequence>
[19:18:56.596]  
[19:18:56.613]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:18:56.613]  
[19:18:56.613]  <debugvars>
[19:18:56.613]    // Pre-defined
[19:18:56.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:56.613]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:56.613]    __dp=0x00000000
[19:18:56.614]    __ap=0x00000000
[19:18:56.614]    __traceout=0x00000001      (SWO Trace)
[19:18:56.614]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:56.614]    __FlashAddr=0x00000000
[19:18:56.614]    __FlashLen=0x00000000
[19:18:56.615]    __FlashArg=0x00000000
[19:18:56.615]    __FlashOp=0x00000000
[19:18:56.615]    __Result=0x00000000
[19:18:56.615]    
[19:18:56.615]    // User-defined
[19:18:56.615]    DbgMCU_CR=0x00000007
[19:18:56.615]    DbgMCU_APB1_Fz=0x00000000
[19:18:56.616]    DbgMCU_APB2_Fz=0x00000000
[19:18:56.616]    TraceClk_Pin=0x00040002
[19:18:56.616]    TraceD0_Pin=0x00040003
[19:18:56.616]    TraceD1_Pin=0x00040004
[19:18:56.616]    TraceD2_Pin=0x00040005
[19:18:56.616]    TraceD3_Pin=0x00040006
[19:18:56.617]  </debugvars>
[19:18:56.617]  
[19:18:56.617]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:18:56.617]    <block atomic="false" info="">
[19:18:56.617]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:18:56.617]        // -> [traceSWO <= 0x00000001]
[19:18:56.617]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:18:56.617]        // -> [traceTPIU <= 0x00000000]
[19:18:56.617]    </block>
[19:18:56.617]    <control if="traceSWO" while="" timeout="0" info="">
[19:18:56.617]      // if-block "traceSWO"
[19:18:56.617]        // =>  TRUE
[19:18:56.618]      <block atomic="false" info="">
[19:18:56.618]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:18:56.618]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:18:56.618]            <block atomic="false" info="">
[19:18:56.618]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:18:56.618]                // -> [dbgmcu_val <= 0x00000000]
[19:18:56.619]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:18:56.619]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:18:56.619]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:18:56.619]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.620]                // -> [dbgmcu_val <= 0x00000007]
[19:18:56.620]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:18:56.620]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:18:56.620]              Sequence("ConfigureTraceSWOPin");
[19:18:56.620]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:18:56.620]                  <block atomic="false" info="">
[19:18:56.620]                    __var pin     = 0;
[19:18:56.621]                      // -> [pin <= 0x00000000]
[19:18:56.621]                    __var port    = 0;
[19:18:56.621]                      // -> [port <= 0x00000000]
[19:18:56.621]                    __var portAdr = 0;
[19:18:56.621]                      // -> [portAdr <= 0x00000000]
[19:18:56.621]                    __var pos     = 0;
[19:18:56.621]                      // -> [pos <= 0x00000000]
[19:18:56.622]                    __var SWO_Pin = 0x00010003;          // PB3
[19:18:56.622]                      // -> [SWO_Pin <= 0x00010003]
[19:18:56.622]                  </block>
[19:18:56.622]                  <block atomic="false" info="configure SWO">
[19:18:56.622]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:18:56.622]                      // -> [pin <= 0x00000003]
[19:18:56.622]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:18:56.622]                      // -> [port <= 0x00000001]
[19:18:56.622]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:18:56.623]                      // -> [portAdr <= 0x40020400]
[19:18:56.623]                    pos = pin * 2;
[19:18:56.623]                      // -> [pos <= 0x00000006]
[19:18:56.623]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:18:56.623]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.624]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.624]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:18:56.624]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.625]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.625]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:18:56.625]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.626]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.626]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:18:56.626]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.627]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.627]                  </block>
[19:18:56.627]                  <control if="pin <  8" while="" timeout="0" info="">
[19:18:56.627]                    // if-block "pin <  8"
[19:18:56.627]                      // =>  TRUE
[19:18:56.628]                    <block atomic="false" info="">
[19:18:56.628]                      pos = ((pin    ) & 7) * 4;
[19:18:56.628]                        // -> [pos <= 0x0000000C]
[19:18:56.628]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:18:56.628]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.629]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.629]                    </block>
[19:18:56.629]                    // end if-block "pin <  8"
[19:18:56.629]                  </control>
[19:18:56.629]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:18:56.629]                    // if-block "pin >= 8"
[19:18:56.630]                      // =>  FALSE
[19:18:56.630]                    // skip if-block "pin >= 8"
[19:18:56.630]                  </control>
[19:18:56.630]                </sequence>
[19:18:56.630]            </block>
[19:18:56.630]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:18:56.630]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:18:56.631]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.631]            </block>
[19:18:56.631]          </sequence>
[19:18:56.631]      </block>
[19:18:56.631]      // end if-block "traceSWO"
[19:18:56.632]    </control>
[19:18:56.632]    <control if="traceTPIU" while="" timeout="0" info="">
[19:18:56.632]      // if-block "traceTPIU"
[19:18:56.632]        // =>  FALSE
[19:18:56.632]      // skip if-block "traceTPIU"
[19:18:56.632]    </control>
[19:18:56.632]  </sequence>
[19:18:56.633]  
[19:18:56.636]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:18:56.636]  
[19:18:56.636]  <debugvars>
[19:18:56.637]    // Pre-defined
[19:18:56.637]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:56.637]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:56.637]    __dp=0x00000000
[19:18:56.637]    __ap=0x00000000
[19:18:56.637]    __traceout=0x00000001      (SWO Trace)
[19:18:56.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:56.638]    __FlashAddr=0x00000000
[19:18:56.638]    __FlashLen=0x00000000
[19:18:56.638]    __FlashArg=0x00000000
[19:18:56.638]    __FlashOp=0x00000000
[19:18:56.638]    __Result=0x00000000
[19:18:56.639]    
[19:18:56.639]    // User-defined
[19:18:56.639]    DbgMCU_CR=0x00000007
[19:18:56.639]    DbgMCU_APB1_Fz=0x00000000
[19:18:56.639]    DbgMCU_APB2_Fz=0x00000000
[19:18:56.639]    TraceClk_Pin=0x00040002
[19:18:56.640]    TraceD0_Pin=0x00040003
[19:18:56.640]    TraceD1_Pin=0x00040004
[19:18:56.640]    TraceD2_Pin=0x00040005
[19:18:56.640]    TraceD3_Pin=0x00040006
[19:18:56.640]  </debugvars>
[19:18:56.640]  
[19:18:56.640]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:18:56.641]    <block atomic="false" info="">
[19:18:56.641]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:18:56.641]        // -> [traceSWO <= 0x00000001]
[19:18:56.641]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:18:56.641]        // -> [traceTPIU <= 0x00000000]
[19:18:56.641]    </block>
[19:18:56.642]    <control if="traceSWO" while="" timeout="0" info="">
[19:18:56.642]      // if-block "traceSWO"
[19:18:56.642]        // =>  TRUE
[19:18:56.642]      <block atomic="false" info="">
[19:18:56.642]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:18:56.642]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:18:56.642]            <block atomic="false" info="">
[19:18:56.643]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:18:56.643]                // -> [dbgmcu_val <= 0x00000000]
[19:18:56.643]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:18:56.643]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:18:56.643]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:18:56.644]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.644]                // -> [dbgmcu_val <= 0x00000007]
[19:18:56.644]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:18:56.644]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:18:56.644]              Sequence("ConfigureTraceSWOPin");
[19:18:56.644]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:18:56.644]                  <block atomic="false" info="">
[19:18:56.644]                    __var pin     = 0;
[19:18:56.645]                      // -> [pin <= 0x00000000]
[19:18:56.645]                    __var port    = 0;
[19:18:56.645]                      // -> [port <= 0x00000000]
[19:18:56.645]                    __var portAdr = 0;
[19:18:56.645]                      // -> [portAdr <= 0x00000000]
[19:18:56.645]                    __var pos     = 0;
[19:18:56.645]                      // -> [pos <= 0x00000000]
[19:18:56.645]                    __var SWO_Pin = 0x00010003;          // PB3
[19:18:56.645]                      // -> [SWO_Pin <= 0x00010003]
[19:18:56.646]                  </block>
[19:18:56.646]                  <block atomic="false" info="configure SWO">
[19:18:56.646]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:18:56.646]                      // -> [pin <= 0x00000003]
[19:18:56.646]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:18:56.646]                      // -> [port <= 0x00000001]
[19:18:56.646]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:18:56.646]                      // -> [portAdr <= 0x40020400]
[19:18:56.647]                    pos = pin * 2;
[19:18:56.647]                      // -> [pos <= 0x00000006]
[19:18:56.647]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:18:56.647]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.648]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.648]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:18:56.648]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.649]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.649]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:18:56.649]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.650]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.650]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:18:56.650]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.651]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.651]                  </block>
[19:18:56.651]                  <control if="pin <  8" while="" timeout="0" info="">
[19:18:56.651]                    // if-block "pin <  8"
[19:18:56.651]                      // =>  TRUE
[19:18:56.651]                    <block atomic="false" info="">
[19:18:56.651]                      pos = ((pin    ) & 7) * 4;
[19:18:56.651]                        // -> [pos <= 0x0000000C]
[19:18:56.651]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:18:56.652]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.652]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.652]                    </block>
[19:18:56.652]                    // end if-block "pin <  8"
[19:18:56.653]                  </control>
[19:18:56.653]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:18:56.653]                    // if-block "pin >= 8"
[19:18:56.653]                      // =>  FALSE
[19:18:56.653]                    // skip if-block "pin >= 8"
[19:18:56.653]                  </control>
[19:18:56.653]                </sequence>
[19:18:56.653]            </block>
[19:18:56.653]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:18:56.654]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:18:56.654]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.654]            </block>
[19:18:56.654]          </sequence>
[19:18:56.654]      </block>
[19:18:56.654]      // end if-block "traceSWO"
[19:18:56.655]    </control>
[19:18:56.655]    <control if="traceTPIU" while="" timeout="0" info="">
[19:18:56.655]      // if-block "traceTPIU"
[19:18:56.655]        // =>  FALSE
[19:18:56.655]      // skip if-block "traceTPIU"
[19:18:56.655]    </control>
[19:18:56.655]  </sequence>
[19:18:56.655]  
[19:18:56.870]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:18:56.870]  
[19:18:56.870]  <debugvars>
[19:18:56.871]    // Pre-defined
[19:18:56.871]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:56.871]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:56.871]    __dp=0x00000000
[19:18:56.871]    __ap=0x00000000
[19:18:56.871]    __traceout=0x00000001      (SWO Trace)
[19:18:56.872]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:56.872]    __FlashAddr=0x00000000
[19:18:56.872]    __FlashLen=0x00000000
[19:18:56.872]    __FlashArg=0x00000000
[19:18:56.872]    __FlashOp=0x00000000
[19:18:56.872]    __Result=0x00000000
[19:18:56.872]    
[19:18:56.872]    // User-defined
[19:18:56.873]    DbgMCU_CR=0x00000007
[19:18:56.873]    DbgMCU_APB1_Fz=0x00000000
[19:18:56.873]    DbgMCU_APB2_Fz=0x00000000
[19:18:56.873]    TraceClk_Pin=0x00040002
[19:18:56.873]    TraceD0_Pin=0x00040003
[19:18:56.873]    TraceD1_Pin=0x00040004
[19:18:56.873]    TraceD2_Pin=0x00040005
[19:18:56.874]    TraceD3_Pin=0x00040006
[19:18:56.874]  </debugvars>
[19:18:56.874]  
[19:18:56.874]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:18:56.874]    <block atomic="false" info="">
[19:18:56.874]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:18:56.874]        // -> [traceSWO <= 0x00000001]
[19:18:56.875]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:18:56.875]        // -> [traceTPIU <= 0x00000000]
[19:18:56.875]    </block>
[19:18:56.875]    <control if="traceSWO" while="" timeout="0" info="">
[19:18:56.875]      // if-block "traceSWO"
[19:18:56.875]        // =>  TRUE
[19:18:56.875]      <block atomic="false" info="">
[19:18:56.876]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:18:56.876]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:18:56.876]            <block atomic="false" info="">
[19:18:56.876]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:18:56.876]                // -> [dbgmcu_val <= 0x00000000]
[19:18:56.877]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:18:56.877]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:18:56.877]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:18:56.877]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.877]                // -> [dbgmcu_val <= 0x00000007]
[19:18:56.878]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:18:56.878]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:18:56.878]              Sequence("ConfigureTraceSWOPin");
[19:18:56.878]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:18:56.878]                  <block atomic="false" info="">
[19:18:56.878]                    __var pin     = 0;
[19:18:56.878]                      // -> [pin <= 0x00000000]
[19:18:56.878]                    __var port    = 0;
[19:18:56.879]                      // -> [port <= 0x00000000]
[19:18:56.879]                    __var portAdr = 0;
[19:18:56.879]                      // -> [portAdr <= 0x00000000]
[19:18:56.879]                    __var pos     = 0;
[19:18:56.879]                      // -> [pos <= 0x00000000]
[19:18:56.879]                    __var SWO_Pin = 0x00010003;          // PB3
[19:18:56.879]                      // -> [SWO_Pin <= 0x00010003]
[19:18:56.879]                  </block>
[19:18:56.880]                  <block atomic="false" info="configure SWO">
[19:18:56.880]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:18:56.880]                      // -> [pin <= 0x00000003]
[19:18:56.880]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:18:56.880]                      // -> [port <= 0x00000001]
[19:18:56.880]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:18:56.880]                      // -> [portAdr <= 0x40020400]
[19:18:56.880]                    pos = pin * 2;
[19:18:56.880]                      // -> [pos <= 0x00000006]
[19:18:56.881]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:18:56.881]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.882]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.882]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:18:56.882]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.882]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.883]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:18:56.883]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.883]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.884]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:18:56.884]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.884]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.885]                  </block>
[19:18:56.885]                  <control if="pin <  8" while="" timeout="0" info="">
[19:18:56.885]                    // if-block "pin <  8"
[19:18:56.885]                      // =>  TRUE
[19:18:56.885]                    <block atomic="false" info="">
[19:18:56.885]                      pos = ((pin    ) & 7) * 4;
[19:18:56.885]                        // -> [pos <= 0x0000000C]
[19:18:56.885]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:18:56.886]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.886]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.886]                    </block>
[19:18:56.886]                    // end if-block "pin <  8"
[19:18:56.887]                  </control>
[19:18:56.887]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:18:56.887]                    // if-block "pin >= 8"
[19:18:56.887]                      // =>  FALSE
[19:18:56.887]                    // skip if-block "pin >= 8"
[19:18:56.887]                  </control>
[19:18:56.887]                </sequence>
[19:18:56.887]            </block>
[19:18:56.887]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:18:56.888]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:18:56.888]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:56.888]            </block>
[19:18:56.888]          </sequence>
[19:18:56.888]      </block>
[19:18:56.888]      // end if-block "traceSWO"
[19:18:56.889]    </control>
[19:18:56.889]    <control if="traceTPIU" while="" timeout="0" info="">
[19:18:56.889]      // if-block "traceTPIU"
[19:18:56.889]        // =>  FALSE
[19:18:56.889]      // skip if-block "traceTPIU"
[19:18:56.889]    </control>
[19:18:56.889]  </sequence>
[19:18:56.889]  
[19:21:20.285]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:21:20.285]  
[19:21:20.286]  <debugvars>
[19:21:20.286]    // Pre-defined
[19:21:20.286]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:20.287]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:20.287]    __dp=0x00000000
[19:21:20.287]    __ap=0x00000000
[19:21:20.287]    __traceout=0x00000001      (SWO Trace)
[19:21:20.288]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:20.288]    __FlashAddr=0x00000000
[19:21:20.288]    __FlashLen=0x00000000
[19:21:20.288]    __FlashArg=0x00000000
[19:21:20.288]    __FlashOp=0x00000000
[19:21:20.289]    __Result=0x00000000
[19:21:20.289]    
[19:21:20.289]    // User-defined
[19:21:20.289]    DbgMCU_CR=0x00000007
[19:21:20.289]    DbgMCU_APB1_Fz=0x00000000
[19:21:20.289]    DbgMCU_APB2_Fz=0x00000000
[19:21:20.290]    TraceClk_Pin=0x00040002
[19:21:20.290]    TraceD0_Pin=0x00040003
[19:21:20.290]    TraceD1_Pin=0x00040004
[19:21:20.290]    TraceD2_Pin=0x00040005
[19:21:20.290]    TraceD3_Pin=0x00040006
[19:21:20.290]  </debugvars>
[19:21:20.291]  
[19:21:20.291]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:21:20.291]    <block atomic="false" info="">
[19:21:20.291]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:21:20.291]        // -> [traceSWO <= 0x00000001]
[19:21:20.292]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:21:20.292]        // -> [traceTPIU <= 0x00000000]
[19:21:20.292]    </block>
[19:21:20.292]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:20.292]      // if-block "traceSWO"
[19:21:20.292]        // =>  TRUE
[19:21:20.293]      <block atomic="false" info="">
[19:21:20.293]        Sequence("DisableTraceSWO");
[19:21:20.293]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:21:20.293]            <block atomic="false" info="">
[19:21:20.293]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:20.294]                // -> [dbgmcu_val <= 0x00000000]
[19:21:20.294]            </block>
[19:21:20.294]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:20.294]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:21:20.295]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:20.295]                // -> [dbgmcu_val <= 0x00000007]
[19:21:20.295]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:21:20.296]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:20.296]            </block>
[19:21:20.296]          </sequence>
[19:21:20.296]      </block>
[19:21:20.296]      // end if-block "traceSWO"
[19:21:20.296]    </control>
[19:21:20.297]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:20.297]      // if-block "traceTPIU"
[19:21:20.297]        // =>  FALSE
[19:21:20.297]      // skip if-block "traceTPIU"
[19:21:20.297]    </control>
[19:21:20.297]  </sequence>
[19:21:20.298]  
[19:39:40.748]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:39:40.748]  
[19:39:40.748]  <debugvars>
[19:39:40.749]    // Pre-defined
[19:39:40.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:40.749]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:39:40.749]    __dp=0x00000000
[19:39:40.749]    __ap=0x00000000
[19:39:40.750]    __traceout=0x00000001      (SWO Trace)
[19:39:40.750]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:40.750]    __FlashAddr=0x00000000
[19:39:40.750]    __FlashLen=0x00000000
[19:39:40.750]    __FlashArg=0x00000000
[19:39:40.750]    __FlashOp=0x00000000
[19:39:40.751]    __Result=0x00000000
[19:39:40.751]    
[19:39:40.751]    // User-defined
[19:39:40.751]    DbgMCU_CR=0x00000007
[19:39:40.751]    DbgMCU_APB1_Fz=0x00000000
[19:39:40.751]    DbgMCU_APB2_Fz=0x00000000
[19:39:40.751]    TraceClk_Pin=0x00040002
[19:39:40.752]    TraceD0_Pin=0x00040003
[19:39:40.752]    TraceD1_Pin=0x00040004
[19:39:40.752]    TraceD2_Pin=0x00040005
[19:39:40.752]    TraceD3_Pin=0x00040006
[19:39:40.752]  </debugvars>
[19:39:40.752]  
[19:39:40.753]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:39:40.753]    <block atomic="false" info="">
[19:39:40.753]      Sequence("CheckID");
[19:39:40.753]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:39:40.753]          <block atomic="false" info="">
[19:39:40.753]            __var pidr1 = 0;
[19:39:40.754]              // -> [pidr1 <= 0x00000000]
[19:39:40.754]            __var pidr2 = 0;
[19:39:40.754]              // -> [pidr2 <= 0x00000000]
[19:39:40.754]            __var jep106id = 0;
[19:39:40.754]              // -> [jep106id <= 0x00000000]
[19:39:40.754]            __var ROMTableBase = 0;
[19:39:40.755]              // -> [ROMTableBase <= 0x00000000]
[19:39:40.755]            __ap = 0;      // AHB-AP
[19:39:40.755]              // -> [__ap <= 0x00000000]
[19:39:40.755]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:39:40.755]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.756]              // -> [ROMTableBase <= 0xE00FD000]
[19:39:40.756]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:39:40.756]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.756]              // -> [pidr1 <= 0x00000004]
[19:39:40.757]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:39:40.757]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.757]              // -> [pidr2 <= 0x0000001A]
[19:39:40.757]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:39:40.758]              // -> [jep106id <= 0x00000020]
[19:39:40.758]          </block>
[19:39:40.758]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:39:40.758]            // if-block "jep106id != 0x20"
[19:39:40.758]              // =>  FALSE
[19:39:40.758]            // skip if-block "jep106id != 0x20"
[19:39:40.758]          </control>
[19:39:40.758]        </sequence>
[19:39:40.759]    </block>
[19:39:40.759]  </sequence>
[19:39:40.759]  
[19:39:40.774]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:39:40.774]  
[19:39:40.774]  <debugvars>
[19:39:40.774]    // Pre-defined
[19:39:40.775]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:40.775]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:39:40.775]    __dp=0x00000000
[19:39:40.775]    __ap=0x00000000
[19:39:40.775]    __traceout=0x00000001      (SWO Trace)
[19:39:40.775]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:40.776]    __FlashAddr=0x00000000
[19:39:40.776]    __FlashLen=0x00000000
[19:39:40.776]    __FlashArg=0x00000000
[19:39:40.776]    __FlashOp=0x00000000
[19:39:40.776]    __Result=0x00000000
[19:39:40.776]    
[19:39:40.776]    // User-defined
[19:39:40.777]    DbgMCU_CR=0x00000007
[19:39:40.777]    DbgMCU_APB1_Fz=0x00000000
[19:39:40.777]    DbgMCU_APB2_Fz=0x00000000
[19:39:40.777]    TraceClk_Pin=0x00040002
[19:39:40.777]    TraceD0_Pin=0x00040003
[19:39:40.777]    TraceD1_Pin=0x00040004
[19:39:40.778]    TraceD2_Pin=0x00040005
[19:39:40.778]    TraceD3_Pin=0x00040006
[19:39:40.778]  </debugvars>
[19:39:40.778]  
[19:39:40.778]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:39:40.778]    <block atomic="false" info="">
[19:39:40.779]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:39:40.779]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.779]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:39:40.780]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.780]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:39:40.781]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.781]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:39:40.781]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:40.781]    </block>
[19:39:40.782]  </sequence>
[19:39:40.782]  
[19:42:15.642]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:42:15.642]  
[19:42:15.642]  <debugvars>
[19:42:15.642]    // Pre-defined
[19:42:15.642]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:42:15.643]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:42:15.643]    __dp=0x00000000
[19:42:15.643]    __ap=0x00000000
[19:42:15.643]    __traceout=0x00000001      (SWO Trace)
[19:42:15.643]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:42:15.643]    __FlashAddr=0x00000000
[19:42:15.644]    __FlashLen=0x00000000
[19:42:15.644]    __FlashArg=0x00000000
[19:42:15.644]    __FlashOp=0x00000000
[19:42:15.644]    __Result=0x00000000
[19:42:15.644]    
[19:42:15.644]    // User-defined
[19:42:15.644]    DbgMCU_CR=0x00000007
[19:42:15.644]    DbgMCU_APB1_Fz=0x00000000
[19:42:15.645]    DbgMCU_APB2_Fz=0x00000000
[19:42:15.645]    TraceClk_Pin=0x00040002
[19:42:15.645]    TraceD0_Pin=0x00040003
[19:42:15.645]    TraceD1_Pin=0x00040004
[19:42:15.645]    TraceD2_Pin=0x00040005
[19:42:15.645]    TraceD3_Pin=0x00040006
[19:42:15.645]  </debugvars>
[19:42:15.646]  
[19:42:15.646]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:42:15.646]    <block atomic="false" info="">
[19:42:15.646]      Sequence("CheckID");
[19:42:15.646]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:42:15.646]          <block atomic="false" info="">
[19:42:15.646]            __var pidr1 = 0;
[19:42:15.647]              // -> [pidr1 <= 0x00000000]
[19:42:15.647]            __var pidr2 = 0;
[19:42:15.647]              // -> [pidr2 <= 0x00000000]
[19:42:15.647]            __var jep106id = 0;
[19:42:15.647]              // -> [jep106id <= 0x00000000]
[19:42:15.647]            __var ROMTableBase = 0;
[19:42:15.647]              // -> [ROMTableBase <= 0x00000000]
[19:42:15.648]            __ap = 0;      // AHB-AP
[19:42:15.648]              // -> [__ap <= 0x00000000]
[19:42:15.648]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:42:15.648]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.648]              // -> [ROMTableBase <= 0xE00FD000]
[19:42:15.648]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:42:15.649]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.649]              // -> [pidr1 <= 0x00000004]
[19:42:15.649]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:42:15.650]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.650]              // -> [pidr2 <= 0x0000001A]
[19:42:15.650]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:42:15.650]              // -> [jep106id <= 0x00000020]
[19:42:15.650]          </block>
[19:42:15.650]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:42:15.651]            // if-block "jep106id != 0x20"
[19:42:15.651]              // =>  FALSE
[19:42:15.651]            // skip if-block "jep106id != 0x20"
[19:42:15.651]          </control>
[19:42:15.651]        </sequence>
[19:42:15.651]    </block>
[19:42:15.651]  </sequence>
[19:42:15.651]  
[19:42:15.666]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:42:15.666]  
[19:42:15.667]  <debugvars>
[19:42:15.667]    // Pre-defined
[19:42:15.667]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:42:15.667]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:42:15.667]    __dp=0x00000000
[19:42:15.667]    __ap=0x00000000
[19:42:15.668]    __traceout=0x00000001      (SWO Trace)
[19:42:15.668]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:42:15.668]    __FlashAddr=0x00000000
[19:42:15.668]    __FlashLen=0x00000000
[19:42:15.668]    __FlashArg=0x00000000
[19:42:15.669]    __FlashOp=0x00000000
[19:42:15.669]    __Result=0x00000000
[19:42:15.669]    
[19:42:15.669]    // User-defined
[19:42:15.669]    DbgMCU_CR=0x00000007
[19:42:15.669]    DbgMCU_APB1_Fz=0x00000000
[19:42:15.670]    DbgMCU_APB2_Fz=0x00000000
[19:42:15.670]    TraceClk_Pin=0x00040002
[19:42:15.670]    TraceD0_Pin=0x00040003
[19:42:15.670]    TraceD1_Pin=0x00040004
[19:42:15.670]    TraceD2_Pin=0x00040005
[19:42:15.670]    TraceD3_Pin=0x00040006
[19:42:15.671]  </debugvars>
[19:42:15.671]  
[19:42:15.671]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:42:15.671]    <block atomic="false" info="">
[19:42:15.671]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:42:15.672]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.672]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:42:15.673]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.673]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:42:15.673]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.673]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:42:15.674]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:42:15.674]    </block>
[19:42:15.674]  </sequence>
[19:42:15.675]  
[19:44:30.183]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:44:30.183]  
[19:44:30.184]  <debugvars>
[19:44:30.184]    // Pre-defined
[19:44:30.184]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:44:30.184]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:44:30.184]    __dp=0x00000000
[19:44:30.185]    __ap=0x00000000
[19:44:30.185]    __traceout=0x00000001      (SWO Trace)
[19:44:30.185]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:44:30.185]    __FlashAddr=0x00000000
[19:44:30.185]    __FlashLen=0x00000000
[19:44:30.185]    __FlashArg=0x00000000
[19:44:30.186]    __FlashOp=0x00000000
[19:44:30.186]    __Result=0x00000000
[19:44:30.186]    
[19:44:30.186]    // User-defined
[19:44:30.186]    DbgMCU_CR=0x00000007
[19:44:30.186]    DbgMCU_APB1_Fz=0x00000000
[19:44:30.187]    DbgMCU_APB2_Fz=0x00000000
[19:44:30.187]    TraceClk_Pin=0x00040002
[19:44:30.187]    TraceD0_Pin=0x00040003
[19:44:30.187]    TraceD1_Pin=0x00040004
[19:44:30.187]    TraceD2_Pin=0x00040005
[19:44:30.187]    TraceD3_Pin=0x00040006
[19:44:30.188]  </debugvars>
[19:44:30.188]  
[19:44:30.188]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:44:30.188]    <block atomic="false" info="">
[19:44:30.188]      Sequence("CheckID");
[19:44:30.188]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:44:30.189]          <block atomic="false" info="">
[19:44:30.189]            __var pidr1 = 0;
[19:44:30.189]              // -> [pidr1 <= 0x00000000]
[19:44:30.189]            __var pidr2 = 0;
[19:44:30.189]              // -> [pidr2 <= 0x00000000]
[19:44:30.189]            __var jep106id = 0;
[19:44:30.190]              // -> [jep106id <= 0x00000000]
[19:44:30.190]            __var ROMTableBase = 0;
[19:44:30.190]              // -> [ROMTableBase <= 0x00000000]
[19:44:30.190]            __ap = 0;      // AHB-AP
[19:44:30.190]              // -> [__ap <= 0x00000000]
[19:44:30.190]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:44:30.190]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.191]              // -> [ROMTableBase <= 0xE00FD000]
[19:44:30.191]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:44:30.191]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.191]              // -> [pidr1 <= 0x00000004]
[19:44:30.192]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:44:30.192]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.192]              // -> [pidr2 <= 0x0000001A]
[19:44:30.193]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:44:30.193]              // -> [jep106id <= 0x00000020]
[19:44:30.193]          </block>
[19:44:30.193]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:44:30.193]            // if-block "jep106id != 0x20"
[19:44:30.193]              // =>  FALSE
[19:44:30.193]            // skip if-block "jep106id != 0x20"
[19:44:30.194]          </control>
[19:44:30.194]        </sequence>
[19:44:30.194]    </block>
[19:44:30.194]  </sequence>
[19:44:30.194]  
[19:44:30.210]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:44:30.210]  
[19:44:30.210]  <debugvars>
[19:44:30.210]    // Pre-defined
[19:44:30.210]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:44:30.211]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:44:30.211]    __dp=0x00000000
[19:44:30.211]    __ap=0x00000000
[19:44:30.211]    __traceout=0x00000001      (SWO Trace)
[19:44:30.211]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:44:30.211]    __FlashAddr=0x00000000
[19:44:30.212]    __FlashLen=0x00000000
[19:44:30.212]    __FlashArg=0x00000000
[19:44:30.212]    __FlashOp=0x00000000
[19:44:30.212]    __Result=0x00000000
[19:44:30.212]    
[19:44:30.212]    // User-defined
[19:44:30.213]    DbgMCU_CR=0x00000007
[19:44:30.213]    DbgMCU_APB1_Fz=0x00000000
[19:44:30.213]    DbgMCU_APB2_Fz=0x00000000
[19:44:30.213]    TraceClk_Pin=0x00040002
[19:44:30.213]    TraceD0_Pin=0x00040003
[19:44:30.213]    TraceD1_Pin=0x00040004
[19:44:30.214]    TraceD2_Pin=0x00040005
[19:44:30.214]    TraceD3_Pin=0x00040006
[19:44:30.214]  </debugvars>
[19:44:30.214]  
[19:44:30.214]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:44:30.214]    <block atomic="false" info="">
[19:44:30.214]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:44:30.215]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.215]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:44:30.216]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.216]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:44:30.216]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.217]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:44:30.217]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:44:30.217]    </block>
[19:44:30.217]  </sequence>
[19:44:30.217]  
[19:45:50.605]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:45:50.605]  
[19:45:50.605]  <debugvars>
[19:45:50.605]    // Pre-defined
[19:45:50.606]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:45:50.606]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:45:50.606]    __dp=0x00000000
[19:45:50.606]    __ap=0x00000000
[19:45:50.606]    __traceout=0x00000001      (SWO Trace)
[19:45:50.607]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:45:50.607]    __FlashAddr=0x00000000
[19:45:50.607]    __FlashLen=0x00000000
[19:45:50.607]    __FlashArg=0x00000000
[19:45:50.607]    __FlashOp=0x00000000
[19:45:50.607]    __Result=0x00000000
[19:45:50.608]    
[19:45:50.608]    // User-defined
[19:45:50.608]    DbgMCU_CR=0x00000007
[19:45:50.608]    DbgMCU_APB1_Fz=0x00000000
[19:45:50.608]    DbgMCU_APB2_Fz=0x00000000
[19:45:50.608]    TraceClk_Pin=0x00040002
[19:45:50.608]    TraceD0_Pin=0x00040003
[19:45:50.609]    TraceD1_Pin=0x00040004
[19:45:50.609]    TraceD2_Pin=0x00040005
[19:45:50.609]    TraceD3_Pin=0x00040006
[19:45:50.609]  </debugvars>
[19:45:50.609]  
[19:45:50.609]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:45:50.610]    <block atomic="false" info="">
[19:45:50.610]      Sequence("CheckID");
[19:45:50.610]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:45:50.610]          <block atomic="false" info="">
[19:45:50.610]            __var pidr1 = 0;
[19:45:50.610]              // -> [pidr1 <= 0x00000000]
[19:45:50.611]            __var pidr2 = 0;
[19:45:50.611]              // -> [pidr2 <= 0x00000000]
[19:45:50.611]            __var jep106id = 0;
[19:45:50.611]              // -> [jep106id <= 0x00000000]
[19:45:50.611]            __var ROMTableBase = 0;
[19:45:50.611]              // -> [ROMTableBase <= 0x00000000]
[19:45:50.611]            __ap = 0;      // AHB-AP
[19:45:50.612]              // -> [__ap <= 0x00000000]
[19:45:50.612]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:45:50.612]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.612]              // -> [ROMTableBase <= 0xE00FD000]
[19:45:50.613]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:45:50.613]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.613]              // -> [pidr1 <= 0x00000004]
[19:45:50.613]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:45:50.614]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.614]              // -> [pidr2 <= 0x0000001A]
[19:45:50.614]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:45:50.614]              // -> [jep106id <= 0x00000020]
[19:45:50.614]          </block>
[19:45:50.615]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:45:50.615]            // if-block "jep106id != 0x20"
[19:45:50.615]              // =>  FALSE
[19:45:50.615]            // skip if-block "jep106id != 0x20"
[19:45:50.615]          </control>
[19:45:50.615]        </sequence>
[19:45:50.615]    </block>
[19:45:50.615]  </sequence>
[19:45:50.616]  
[19:45:50.631]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:45:50.631]  
[19:45:50.631]  <debugvars>
[19:45:50.631]    // Pre-defined
[19:45:50.631]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:45:50.631]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:45:50.632]    __dp=0x00000000
[19:45:50.632]    __ap=0x00000000
[19:45:50.632]    __traceout=0x00000001      (SWO Trace)
[19:45:50.632]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:45:50.632]    __FlashAddr=0x00000000
[19:45:50.633]    __FlashLen=0x00000000
[19:45:50.633]    __FlashArg=0x00000000
[19:45:50.633]    __FlashOp=0x00000000
[19:45:50.633]    __Result=0x00000000
[19:45:50.633]    
[19:45:50.633]    // User-defined
[19:45:50.634]    DbgMCU_CR=0x00000007
[19:45:50.634]    DbgMCU_APB1_Fz=0x00000000
[19:45:50.634]    DbgMCU_APB2_Fz=0x00000000
[19:45:50.634]    TraceClk_Pin=0x00040002
[19:45:50.634]    TraceD0_Pin=0x00040003
[19:45:50.634]    TraceD1_Pin=0x00040004
[19:45:50.635]    TraceD2_Pin=0x00040005
[19:45:50.635]    TraceD3_Pin=0x00040006
[19:45:50.635]  </debugvars>
[19:45:50.635]  
[19:45:50.635]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:45:50.635]    <block atomic="false" info="">
[19:45:50.636]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:45:50.636]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.636]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:45:50.637]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.637]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:45:50.638]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.638]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:45:50.639]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:50.639]    </block>
[19:45:50.639]  </sequence>
[19:45:50.639]  
[19:46:42.842]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:46:42.842]  
[19:46:42.843]  <debugvars>
[19:46:42.843]    // Pre-defined
[19:46:42.843]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:42.843]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:46:42.843]    __dp=0x00000000
[19:46:42.844]    __ap=0x00000000
[19:46:42.844]    __traceout=0x00000001      (SWO Trace)
[19:46:42.844]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:42.844]    __FlashAddr=0x00000000
[19:46:42.844]    __FlashLen=0x00000000
[19:46:42.844]    __FlashArg=0x00000000
[19:46:42.845]    __FlashOp=0x00000000
[19:46:42.845]    __Result=0x00000000
[19:46:42.845]    
[19:46:42.845]    // User-defined
[19:46:42.845]    DbgMCU_CR=0x00000007
[19:46:42.845]    DbgMCU_APB1_Fz=0x00000000
[19:46:42.846]    DbgMCU_APB2_Fz=0x00000000
[19:46:42.846]    TraceClk_Pin=0x00040002
[19:46:42.846]    TraceD0_Pin=0x00040003
[19:46:42.846]    TraceD1_Pin=0x00040004
[19:46:42.846]    TraceD2_Pin=0x00040005
[19:46:42.846]    TraceD3_Pin=0x00040006
[19:46:42.847]  </debugvars>
[19:46:42.847]  
[19:46:42.847]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:46:42.847]    <block atomic="false" info="">
[19:46:42.847]      Sequence("CheckID");
[19:46:42.847]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:46:42.848]          <block atomic="false" info="">
[19:46:42.848]            __var pidr1 = 0;
[19:46:42.848]              // -> [pidr1 <= 0x00000000]
[19:46:42.848]            __var pidr2 = 0;
[19:46:42.848]              // -> [pidr2 <= 0x00000000]
[19:46:42.848]            __var jep106id = 0;
[19:46:42.849]              // -> [jep106id <= 0x00000000]
[19:46:42.849]            __var ROMTableBase = 0;
[19:46:42.849]              // -> [ROMTableBase <= 0x00000000]
[19:46:42.849]            __ap = 0;      // AHB-AP
[19:46:42.849]              // -> [__ap <= 0x00000000]
[19:46:42.849]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:46:42.850]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.850]              // -> [ROMTableBase <= 0xE00FD000]
[19:46:42.850]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:46:42.851]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.851]              // -> [pidr1 <= 0x00000004]
[19:46:42.851]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:46:42.852]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.852]              // -> [pidr2 <= 0x0000001A]
[19:46:42.852]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:46:42.852]              // -> [jep106id <= 0x00000020]
[19:46:42.852]          </block>
[19:46:42.852]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:46:42.852]            // if-block "jep106id != 0x20"
[19:46:42.853]              // =>  FALSE
[19:46:42.853]            // skip if-block "jep106id != 0x20"
[19:46:42.853]          </control>
[19:46:42.853]        </sequence>
[19:46:42.853]    </block>
[19:46:42.853]  </sequence>
[19:46:42.853]  
[19:46:42.868]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:46:42.868]  
[19:46:42.868]  <debugvars>
[19:46:42.869]    // Pre-defined
[19:46:42.869]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:42.869]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:46:42.869]    __dp=0x00000000
[19:46:42.869]    __ap=0x00000000
[19:46:42.869]    __traceout=0x00000001      (SWO Trace)
[19:46:42.870]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:42.870]    __FlashAddr=0x00000000
[19:46:42.870]    __FlashLen=0x00000000
[19:46:42.870]    __FlashArg=0x00000000
[19:46:42.870]    __FlashOp=0x00000000
[19:46:42.870]    __Result=0x00000000
[19:46:42.871]    
[19:46:42.871]    // User-defined
[19:46:42.871]    DbgMCU_CR=0x00000007
[19:46:42.871]    DbgMCU_APB1_Fz=0x00000000
[19:46:42.871]    DbgMCU_APB2_Fz=0x00000000
[19:46:42.871]    TraceClk_Pin=0x00040002
[19:46:42.871]    TraceD0_Pin=0x00040003
[19:46:42.872]    TraceD1_Pin=0x00040004
[19:46:42.872]    TraceD2_Pin=0x00040005
[19:46:42.872]    TraceD3_Pin=0x00040006
[19:46:42.872]  </debugvars>
[19:46:42.872]  
[19:46:42.873]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:46:42.873]    <block atomic="false" info="">
[19:46:42.873]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:46:42.873]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.874]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:46:42.874]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.874]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:46:42.875]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.875]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:46:42.876]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:42.876]    </block>
[19:46:42.876]  </sequence>
[19:46:42.876]  
[19:49:40.529]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:49:40.529]  
[19:49:40.530]  <debugvars>
[19:49:40.530]    // Pre-defined
[19:49:40.530]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:40.530]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:49:40.530]    __dp=0x00000000
[19:49:40.531]    __ap=0x00000000
[19:49:40.531]    __traceout=0x00000001      (SWO Trace)
[19:49:40.531]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:40.531]    __FlashAddr=0x00000000
[19:49:40.531]    __FlashLen=0x00000000
[19:49:40.532]    __FlashArg=0x00000000
[19:49:40.532]    __FlashOp=0x00000000
[19:49:40.532]    __Result=0x00000000
[19:49:40.532]    
[19:49:40.532]    // User-defined
[19:49:40.532]    DbgMCU_CR=0x00000007
[19:49:40.532]    DbgMCU_APB1_Fz=0x00000000
[19:49:40.533]    DbgMCU_APB2_Fz=0x00000000
[19:49:40.533]    TraceClk_Pin=0x00040002
[19:49:40.533]    TraceD0_Pin=0x00040003
[19:49:40.533]    TraceD1_Pin=0x00040004
[19:49:40.533]    TraceD2_Pin=0x00040005
[19:49:40.533]    TraceD3_Pin=0x00040006
[19:49:40.534]  </debugvars>
[19:49:40.534]  
[19:49:40.534]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:49:40.534]    <block atomic="false" info="">
[19:49:40.534]      Sequence("CheckID");
[19:49:40.534]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:49:40.535]          <block atomic="false" info="">
[19:49:40.535]            __var pidr1 = 0;
[19:49:40.535]              // -> [pidr1 <= 0x00000000]
[19:49:40.535]            __var pidr2 = 0;
[19:49:40.535]              // -> [pidr2 <= 0x00000000]
[19:49:40.535]            __var jep106id = 0;
[19:49:40.535]              // -> [jep106id <= 0x00000000]
[19:49:40.536]            __var ROMTableBase = 0;
[19:49:40.536]              // -> [ROMTableBase <= 0x00000000]
[19:49:40.536]            __ap = 0;      // AHB-AP
[19:49:40.536]              // -> [__ap <= 0x00000000]
[19:49:40.536]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:49:40.536]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.537]              // -> [ROMTableBase <= 0xE00FD000]
[19:49:40.537]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:49:40.537]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.537]              // -> [pidr1 <= 0x00000004]
[19:49:40.538]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:49:40.538]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.538]              // -> [pidr2 <= 0x0000001A]
[19:49:40.538]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:49:40.538]              // -> [jep106id <= 0x00000020]
[19:49:40.539]          </block>
[19:49:40.539]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:49:40.539]            // if-block "jep106id != 0x20"
[19:49:40.539]              // =>  FALSE
[19:49:40.539]            // skip if-block "jep106id != 0x20"
[19:49:40.539]          </control>
[19:49:40.540]        </sequence>
[19:49:40.540]    </block>
[19:49:40.540]  </sequence>
[19:49:40.540]  
[19:49:40.554]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:49:40.554]  
[19:49:40.555]  <debugvars>
[19:49:40.555]    // Pre-defined
[19:49:40.555]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:40.555]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:49:40.555]    __dp=0x00000000
[19:49:40.556]    __ap=0x00000000
[19:49:40.556]    __traceout=0x00000001      (SWO Trace)
[19:49:40.556]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:40.556]    __FlashAddr=0x00000000
[19:49:40.556]    __FlashLen=0x00000000
[19:49:40.557]    __FlashArg=0x00000000
[19:49:40.557]    __FlashOp=0x00000000
[19:49:40.557]    __Result=0x00000000
[19:49:40.557]    
[19:49:40.557]    // User-defined
[19:49:40.558]    DbgMCU_CR=0x00000007
[19:49:40.558]    DbgMCU_APB1_Fz=0x00000000
[19:49:40.558]    DbgMCU_APB2_Fz=0x00000000
[19:49:40.558]    TraceClk_Pin=0x00040002
[19:49:40.558]    TraceD0_Pin=0x00040003
[19:49:40.558]    TraceD1_Pin=0x00040004
[19:49:40.559]    TraceD2_Pin=0x00040005
[19:49:40.559]    TraceD3_Pin=0x00040006
[19:49:40.559]  </debugvars>
[19:49:40.559]  
[19:49:40.559]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:49:40.560]    <block atomic="false" info="">
[19:49:40.560]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:49:40.560]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.561]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:49:40.561]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.561]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:49:40.562]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.562]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:49:40.563]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:40.563]    </block>
[19:49:40.563]  </sequence>
[19:49:40.563]  
[19:57:18.443]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:57:18.443]  
[19:57:18.444]  <debugvars>
[19:57:18.444]    // Pre-defined
[19:57:18.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:18.444]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:57:18.444]    __dp=0x00000000
[19:57:18.445]    __ap=0x00000000
[19:57:18.445]    __traceout=0x00000001      (SWO Trace)
[19:57:18.445]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:18.445]    __FlashAddr=0x00000000
[19:57:18.445]    __FlashLen=0x00000000
[19:57:18.445]    __FlashArg=0x00000000
[19:57:18.446]    __FlashOp=0x00000000
[19:57:18.446]    __Result=0x00000000
[19:57:18.446]    
[19:57:18.446]    // User-defined
[19:57:18.446]    DbgMCU_CR=0x00000007
[19:57:18.446]    DbgMCU_APB1_Fz=0x00000000
[19:57:18.446]    DbgMCU_APB2_Fz=0x00000000
[19:57:18.447]    TraceClk_Pin=0x00040002
[19:57:18.447]    TraceD0_Pin=0x00040003
[19:57:18.447]    TraceD1_Pin=0x00040004
[19:57:18.447]    TraceD2_Pin=0x00040005
[19:57:18.447]    TraceD3_Pin=0x00040006
[19:57:18.447]  </debugvars>
[19:57:18.448]  
[19:57:18.448]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:57:18.448]    <block atomic="false" info="">
[19:57:18.448]      Sequence("CheckID");
[19:57:18.448]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:57:18.448]          <block atomic="false" info="">
[19:57:18.448]            __var pidr1 = 0;
[19:57:18.449]              // -> [pidr1 <= 0x00000000]
[19:57:18.449]            __var pidr2 = 0;
[19:57:18.449]              // -> [pidr2 <= 0x00000000]
[19:57:18.449]            __var jep106id = 0;
[19:57:18.449]              // -> [jep106id <= 0x00000000]
[19:57:18.449]            __var ROMTableBase = 0;
[19:57:18.449]              // -> [ROMTableBase <= 0x00000000]
[19:57:18.449]            __ap = 0;      // AHB-AP
[19:57:18.450]              // -> [__ap <= 0x00000000]
[19:57:18.450]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:57:18.450]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.450]              // -> [ROMTableBase <= 0xE00FD000]
[19:57:18.450]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:57:18.451]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.451]              // -> [pidr1 <= 0x00000004]
[19:57:18.451]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:57:18.452]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.452]              // -> [pidr2 <= 0x0000001A]
[19:57:18.452]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:57:18.452]              // -> [jep106id <= 0x00000020]
[19:57:18.452]          </block>
[19:57:18.452]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:57:18.452]            // if-block "jep106id != 0x20"
[19:57:18.452]              // =>  FALSE
[19:57:18.453]            // skip if-block "jep106id != 0x20"
[19:57:18.453]          </control>
[19:57:18.453]        </sequence>
[19:57:18.453]    </block>
[19:57:18.453]  </sequence>
[19:57:18.453]  
[19:57:18.468]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:57:18.468]  
[19:57:18.469]  <debugvars>
[19:57:18.469]    // Pre-defined
[19:57:18.469]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:18.469]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:57:18.469]    __dp=0x00000000
[19:57:18.469]    __ap=0x00000000
[19:57:18.469]    __traceout=0x00000001      (SWO Trace)
[19:57:18.470]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:18.470]    __FlashAddr=0x00000000
[19:57:18.470]    __FlashLen=0x00000000
[19:57:18.470]    __FlashArg=0x00000000
[19:57:18.470]    __FlashOp=0x00000000
[19:57:18.470]    __Result=0x00000000
[19:57:18.471]    
[19:57:18.471]    // User-defined
[19:57:18.471]    DbgMCU_CR=0x00000007
[19:57:18.471]    DbgMCU_APB1_Fz=0x00000000
[19:57:18.471]    DbgMCU_APB2_Fz=0x00000000
[19:57:18.471]    TraceClk_Pin=0x00040002
[19:57:18.471]    TraceD0_Pin=0x00040003
[19:57:18.471]    TraceD1_Pin=0x00040004
[19:57:18.472]    TraceD2_Pin=0x00040005
[19:57:18.472]    TraceD3_Pin=0x00040006
[19:57:18.472]  </debugvars>
[19:57:18.472]  
[19:57:18.472]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:57:18.472]    <block atomic="false" info="">
[19:57:18.472]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:57:18.473]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.473]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:57:18.474]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.474]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:57:18.474]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.474]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:57:18.475]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:18.475]    </block>
[19:57:18.475]  </sequence>
[19:57:18.475]  
[19:57:49.159]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:57:49.159]  
[19:57:49.159]  <debugvars>
[19:57:49.159]    // Pre-defined
[19:57:49.159]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:49.160]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:49.160]    __dp=0x00000000
[19:57:49.160]    __ap=0x00000000
[19:57:49.160]    __traceout=0x00000001      (SWO Trace)
[19:57:49.160]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:49.160]    __FlashAddr=0x00000000
[19:57:49.160]    __FlashLen=0x00000000
[19:57:49.161]    __FlashArg=0x00000000
[19:57:49.161]    __FlashOp=0x00000000
[19:57:49.161]    __Result=0x00000000
[19:57:49.161]    
[19:57:49.161]    // User-defined
[19:57:49.161]    DbgMCU_CR=0x00000007
[19:57:49.161]    DbgMCU_APB1_Fz=0x00000000
[19:57:49.161]    DbgMCU_APB2_Fz=0x00000000
[19:57:49.161]    TraceClk_Pin=0x00040002
[19:57:49.162]    TraceD0_Pin=0x00040003
[19:57:49.162]    TraceD1_Pin=0x00040004
[19:57:49.162]    TraceD2_Pin=0x00040005
[19:57:49.162]    TraceD3_Pin=0x00040006
[19:57:49.162]  </debugvars>
[19:57:49.162]  
[19:57:49.162]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:57:49.162]    <block atomic="false" info="">
[19:57:49.162]      Sequence("CheckID");
[19:57:49.163]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:57:49.163]          <block atomic="false" info="">
[19:57:49.163]            __var pidr1 = 0;
[19:57:49.163]              // -> [pidr1 <= 0x00000000]
[19:57:49.163]            __var pidr2 = 0;
[19:57:49.163]              // -> [pidr2 <= 0x00000000]
[19:57:49.163]            __var jep106id = 0;
[19:57:49.163]              // -> [jep106id <= 0x00000000]
[19:57:49.163]            __var ROMTableBase = 0;
[19:57:49.164]              // -> [ROMTableBase <= 0x00000000]
[19:57:49.164]            __ap = 0;      // AHB-AP
[19:57:49.164]              // -> [__ap <= 0x00000000]
[19:57:49.164]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:57:49.164]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.164]              // -> [ROMTableBase <= 0xE00FD000]
[19:57:49.165]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:57:49.165]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.165]              // -> [pidr1 <= 0x00000004]
[19:57:49.165]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:57:49.166]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.166]              // -> [pidr2 <= 0x0000001A]
[19:57:49.166]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:57:49.166]              // -> [jep106id <= 0x00000020]
[19:57:49.166]          </block>
[19:57:49.166]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:57:49.167]            // if-block "jep106id != 0x20"
[19:57:49.167]              // =>  FALSE
[19:57:49.167]            // skip if-block "jep106id != 0x20"
[19:57:49.167]          </control>
[19:57:49.167]        </sequence>
[19:57:49.167]    </block>
[19:57:49.167]  </sequence>
[19:57:49.167]  
[19:57:49.182]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:57:49.182]  
[19:57:49.182]  <debugvars>
[19:57:49.183]    // Pre-defined
[19:57:49.183]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:49.183]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:49.183]    __dp=0x00000000
[19:57:49.183]    __ap=0x00000000
[19:57:49.183]    __traceout=0x00000001      (SWO Trace)
[19:57:49.183]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:49.183]    __FlashAddr=0x00000000
[19:57:49.184]    __FlashLen=0x00000000
[19:57:49.184]    __FlashArg=0x00000000
[19:57:49.184]    __FlashOp=0x00000000
[19:57:49.184]    __Result=0x00000000
[19:57:49.184]    
[19:57:49.184]    // User-defined
[19:57:49.184]    DbgMCU_CR=0x00000007
[19:57:49.184]    DbgMCU_APB1_Fz=0x00000000
[19:57:49.184]    DbgMCU_APB2_Fz=0x00000000
[19:57:49.185]    TraceClk_Pin=0x00040002
[19:57:49.185]    TraceD0_Pin=0x00040003
[19:57:49.185]    TraceD1_Pin=0x00040004
[19:57:49.185]    TraceD2_Pin=0x00040005
[19:57:49.185]    TraceD3_Pin=0x00040006
[19:57:49.185]  </debugvars>
[19:57:49.185]  
[19:57:49.186]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:57:49.186]    <block atomic="false" info="">
[19:57:49.186]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:57:49.186]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.186]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:57:49.187]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.187]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:57:49.187]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.188]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:57:49.188]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.188]    </block>
[19:57:49.188]  </sequence>
[19:57:49.188]  
[19:57:49.204]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:57:49.204]  
[19:57:49.205]  <debugvars>
[19:57:49.205]    // Pre-defined
[19:57:49.205]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:49.205]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:49.205]    __dp=0x00000000
[19:57:49.205]    __ap=0x00000000
[19:57:49.205]    __traceout=0x00000001      (SWO Trace)
[19:57:49.205]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:49.205]    __FlashAddr=0x00000000
[19:57:49.206]    __FlashLen=0x00000000
[19:57:49.206]    __FlashArg=0x00000000
[19:57:49.206]    __FlashOp=0x00000000
[19:57:49.206]    __Result=0x00000000
[19:57:49.206]    
[19:57:49.206]    // User-defined
[19:57:49.206]    DbgMCU_CR=0x00000007
[19:57:49.206]    DbgMCU_APB1_Fz=0x00000000
[19:57:49.207]    DbgMCU_APB2_Fz=0x00000000
[19:57:49.207]    TraceClk_Pin=0x00040002
[19:57:49.207]    TraceD0_Pin=0x00040003
[19:57:49.207]    TraceD1_Pin=0x00040004
[19:57:49.207]    TraceD2_Pin=0x00040005
[19:57:49.207]    TraceD3_Pin=0x00040006
[19:57:49.207]  </debugvars>
[19:57:49.207]  
[19:57:49.207]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:49.208]    <block atomic="false" info="">
[19:57:49.208]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:49.208]        // -> [traceSWO <= 0x00000001]
[19:57:49.208]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:49.208]        // -> [traceTPIU <= 0x00000000]
[19:57:49.208]    </block>
[19:57:49.208]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:49.208]      // if-block "traceSWO"
[19:57:49.209]        // =>  TRUE
[19:57:49.209]      <block atomic="false" info="">
[19:57:49.209]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:49.209]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:49.209]            <block atomic="false" info="">
[19:57:49.209]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:49.209]                // -> [dbgmcu_val <= 0x00000000]
[19:57:49.209]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:49.209]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:49.209]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:49.210]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.210]                // -> [dbgmcu_val <= 0x00000007]
[19:57:49.210]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:49.210]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:49.210]              Sequence("ConfigureTraceSWOPin");
[19:57:49.210]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:49.211]                  <block atomic="false" info="">
[19:57:49.211]                    __var pin     = 0;
[19:57:49.211]                      // -> [pin <= 0x00000000]
[19:57:49.211]                    __var port    = 0;
[19:57:49.211]                      // -> [port <= 0x00000000]
[19:57:49.211]                    __var portAdr = 0;
[19:57:49.211]                      // -> [portAdr <= 0x00000000]
[19:57:49.211]                    __var pos     = 0;
[19:57:49.212]                      // -> [pos <= 0x00000000]
[19:57:49.212]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:49.212]                      // -> [SWO_Pin <= 0x00010003]
[19:57:49.212]                  </block>
[19:57:49.212]                  <block atomic="false" info="configure SWO">
[19:57:49.212]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:49.212]                      // -> [pin <= 0x00000003]
[19:57:49.212]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:49.212]                      // -> [port <= 0x00000001]
[19:57:49.213]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:49.213]                      // -> [portAdr <= 0x40020400]
[19:57:49.213]                    pos = pin * 2;
[19:57:49.213]                      // -> [pos <= 0x00000006]
[19:57:49.213]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:49.213]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.214]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.214]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:49.214]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.215]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.215]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:49.216]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.216]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.216]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:49.216]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.217]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.217]                  </block>
[19:57:49.217]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:49.217]                    // if-block "pin <  8"
[19:57:49.217]                      // =>  TRUE
[19:57:49.218]                    <block atomic="false" info="">
[19:57:49.218]                      pos = ((pin    ) & 7) * 4;
[19:57:49.218]                        // -> [pos <= 0x0000000C]
[19:57:49.218]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:49.218]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.219]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.219]                    </block>
[19:57:49.219]                    // end if-block "pin <  8"
[19:57:49.219]                  </control>
[19:57:49.219]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:49.219]                    // if-block "pin >= 8"
[19:57:49.219]                      // =>  FALSE
[19:57:49.220]                    // skip if-block "pin >= 8"
[19:57:49.220]                  </control>
[19:57:49.220]                </sequence>
[19:57:49.220]            </block>
[19:57:49.220]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:49.220]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:49.220]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.221]            </block>
[19:57:49.221]          </sequence>
[19:57:49.221]      </block>
[19:57:49.221]      // end if-block "traceSWO"
[19:57:49.221]    </control>
[19:57:49.221]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:49.222]      // if-block "traceTPIU"
[19:57:49.222]        // =>  FALSE
[19:57:49.222]      // skip if-block "traceTPIU"
[19:57:49.222]    </control>
[19:57:49.222]  </sequence>
[19:57:49.222]  
[19:57:49.226]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:57:49.226]  
[19:57:49.226]  <debugvars>
[19:57:49.226]    // Pre-defined
[19:57:49.226]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:49.226]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:49.227]    __dp=0x00000000
[19:57:49.227]    __ap=0x00000000
[19:57:49.227]    __traceout=0x00000001      (SWO Trace)
[19:57:49.227]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:49.227]    __FlashAddr=0x00000000
[19:57:49.227]    __FlashLen=0x00000000
[19:57:49.227]    __FlashArg=0x00000000
[19:57:49.227]    __FlashOp=0x00000000
[19:57:49.228]    __Result=0x00000000
[19:57:49.228]    
[19:57:49.228]    // User-defined
[19:57:49.228]    DbgMCU_CR=0x00000007
[19:57:49.228]    DbgMCU_APB1_Fz=0x00000000
[19:57:49.228]    DbgMCU_APB2_Fz=0x00000000
[19:57:49.228]    TraceClk_Pin=0x00040002
[19:57:49.228]    TraceD0_Pin=0x00040003
[19:57:49.228]    TraceD1_Pin=0x00040004
[19:57:49.229]    TraceD2_Pin=0x00040005
[19:57:49.229]    TraceD3_Pin=0x00040006
[19:57:49.229]  </debugvars>
[19:57:49.229]  
[19:57:49.229]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:49.229]    <block atomic="false" info="">
[19:57:49.229]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:49.229]        // -> [traceSWO <= 0x00000001]
[19:57:49.230]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:49.230]        // -> [traceTPIU <= 0x00000000]
[19:57:49.230]    </block>
[19:57:49.230]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:49.230]      // if-block "traceSWO"
[19:57:49.230]        // =>  TRUE
[19:57:49.230]      <block atomic="false" info="">
[19:57:49.231]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:49.231]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:49.231]            <block atomic="false" info="">
[19:57:49.231]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:49.231]                // -> [dbgmcu_val <= 0x00000000]
[19:57:49.231]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:49.231]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:49.231]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:49.232]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.232]                // -> [dbgmcu_val <= 0x00000007]
[19:57:49.232]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:49.232]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:49.232]              Sequence("ConfigureTraceSWOPin");
[19:57:49.232]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:49.233]                  <block atomic="false" info="">
[19:57:49.233]                    __var pin     = 0;
[19:57:49.233]                      // -> [pin <= 0x00000000]
[19:57:49.233]                    __var port    = 0;
[19:57:49.233]                      // -> [port <= 0x00000000]
[19:57:49.233]                    __var portAdr = 0;
[19:57:49.233]                      // -> [portAdr <= 0x00000000]
[19:57:49.233]                    __var pos     = 0;
[19:57:49.233]                      // -> [pos <= 0x00000000]
[19:57:49.234]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:49.234]                      // -> [SWO_Pin <= 0x00010003]
[19:57:49.234]                  </block>
[19:57:49.234]                  <block atomic="false" info="configure SWO">
[19:57:49.234]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:49.234]                      // -> [pin <= 0x00000003]
[19:57:49.234]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:49.234]                      // -> [port <= 0x00000001]
[19:57:49.234]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:49.235]                      // -> [portAdr <= 0x40020400]
[19:57:49.235]                    pos = pin * 2;
[19:57:49.235]                      // -> [pos <= 0x00000006]
[19:57:49.235]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:49.235]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.236]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.236]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:49.236]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.237]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.237]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:49.237]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.238]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.238]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:49.238]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.239]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.239]                  </block>
[19:57:49.239]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:49.239]                    // if-block "pin <  8"
[19:57:49.239]                      // =>  TRUE
[19:57:49.239]                    <block atomic="false" info="">
[19:57:49.239]                      pos = ((pin    ) & 7) * 4;
[19:57:49.239]                        // -> [pos <= 0x0000000C]
[19:57:49.239]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:49.240]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.240]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.240]                    </block>
[19:57:49.241]                    // end if-block "pin <  8"
[19:57:49.241]                  </control>
[19:57:49.241]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:49.241]                    // if-block "pin >= 8"
[19:57:49.241]                      // =>  FALSE
[19:57:49.241]                    // skip if-block "pin >= 8"
[19:57:49.241]                  </control>
[19:57:49.241]                </sequence>
[19:57:49.241]            </block>
[19:57:49.242]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:49.242]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:49.242]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.242]            </block>
[19:57:49.242]          </sequence>
[19:57:49.242]      </block>
[19:57:49.243]      // end if-block "traceSWO"
[19:57:49.243]    </control>
[19:57:49.243]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:49.243]      // if-block "traceTPIU"
[19:57:49.243]        // =>  FALSE
[19:57:49.243]      // skip if-block "traceTPIU"
[19:57:49.243]    </control>
[19:57:49.243]  </sequence>
[19:57:49.243]  
[19:57:49.456]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:57:49.456]  
[19:57:49.456]  <debugvars>
[19:57:49.457]    // Pre-defined
[19:57:49.457]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:49.457]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:49.457]    __dp=0x00000000
[19:57:49.457]    __ap=0x00000000
[19:57:49.457]    __traceout=0x00000001      (SWO Trace)
[19:57:49.458]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:49.458]    __FlashAddr=0x00000000
[19:57:49.458]    __FlashLen=0x00000000
[19:57:49.458]    __FlashArg=0x00000000
[19:57:49.458]    __FlashOp=0x00000000
[19:57:49.458]    __Result=0x00000000
[19:57:49.459]    
[19:57:49.459]    // User-defined
[19:57:49.459]    DbgMCU_CR=0x00000007
[19:57:49.459]    DbgMCU_APB1_Fz=0x00000000
[19:57:49.459]    DbgMCU_APB2_Fz=0x00000000
[19:57:49.459]    TraceClk_Pin=0x00040002
[19:57:49.459]    TraceD0_Pin=0x00040003
[19:57:49.459]    TraceD1_Pin=0x00040004
[19:57:49.459]    TraceD2_Pin=0x00040005
[19:57:49.460]    TraceD3_Pin=0x00040006
[19:57:49.460]  </debugvars>
[19:57:49.460]  
[19:57:49.460]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:49.460]    <block atomic="false" info="">
[19:57:49.460]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:49.460]        // -> [traceSWO <= 0x00000001]
[19:57:49.460]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:49.461]        // -> [traceTPIU <= 0x00000000]
[19:57:49.461]    </block>
[19:57:49.461]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:49.461]      // if-block "traceSWO"
[19:57:49.461]        // =>  TRUE
[19:57:49.461]      <block atomic="false" info="">
[19:57:49.461]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:49.461]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:49.461]            <block atomic="false" info="">
[19:57:49.462]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:49.462]                // -> [dbgmcu_val <= 0x00000000]
[19:57:49.462]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:49.462]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:49.462]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:49.462]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.463]                // -> [dbgmcu_val <= 0x00000007]
[19:57:49.463]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:49.463]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:49.463]              Sequence("ConfigureTraceSWOPin");
[19:57:49.463]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:49.463]                  <block atomic="false" info="">
[19:57:49.463]                    __var pin     = 0;
[19:57:49.463]                      // -> [pin <= 0x00000000]
[19:57:49.464]                    __var port    = 0;
[19:57:49.464]                      // -> [port <= 0x00000000]
[19:57:49.464]                    __var portAdr = 0;
[19:57:49.464]                      // -> [portAdr <= 0x00000000]
[19:57:49.464]                    __var pos     = 0;
[19:57:49.464]                      // -> [pos <= 0x00000000]
[19:57:49.464]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:49.464]                      // -> [SWO_Pin <= 0x00010003]
[19:57:49.464]                  </block>
[19:57:49.465]                  <block atomic="false" info="configure SWO">
[19:57:49.465]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:49.465]                      // -> [pin <= 0x00000003]
[19:57:49.465]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:49.465]                      // -> [port <= 0x00000001]
[19:57:49.465]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:49.465]                      // -> [portAdr <= 0x40020400]
[19:57:49.465]                    pos = pin * 2;
[19:57:49.466]                      // -> [pos <= 0x00000006]
[19:57:49.466]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:49.466]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.467]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.467]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:49.467]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.468]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.468]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:49.468]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.469]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.469]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:49.469]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.470]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.470]                  </block>
[19:57:49.470]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:49.470]                    // if-block "pin <  8"
[19:57:49.470]                      // =>  TRUE
[19:57:49.471]                    <block atomic="false" info="">
[19:57:49.471]                      pos = ((pin    ) & 7) * 4;
[19:57:49.471]                        // -> [pos <= 0x0000000C]
[19:57:49.471]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:49.472]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.472]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.472]                    </block>
[19:57:49.472]                    // end if-block "pin <  8"
[19:57:49.472]                  </control>
[19:57:49.472]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:49.473]                    // if-block "pin >= 8"
[19:57:49.473]                      // =>  FALSE
[19:57:49.473]                    // skip if-block "pin >= 8"
[19:57:49.473]                  </control>
[19:57:49.473]                </sequence>
[19:57:49.473]            </block>
[19:57:49.473]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:49.473]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:49.474]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:49.474]            </block>
[19:57:49.474]          </sequence>
[19:57:49.474]      </block>
[19:57:49.474]      // end if-block "traceSWO"
[19:57:49.474]    </control>
[19:57:49.474]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:49.475]      // if-block "traceTPIU"
[19:57:49.475]        // =>  FALSE
[19:57:49.475]      // skip if-block "traceTPIU"
[19:57:49.475]    </control>
[19:57:49.475]  </sequence>
[19:57:49.475]  
[19:59:22.483]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:59:22.483]  
[19:59:22.484]  <debugvars>
[19:59:22.484]    // Pre-defined
[19:59:22.485]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:59:22.485]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:59:22.485]    __dp=0x00000000
[19:59:22.485]    __ap=0x00000000
[19:59:22.486]    __traceout=0x00000001      (SWO Trace)
[19:59:22.486]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:59:22.487]    __FlashAddr=0x00000000
[19:59:22.487]    __FlashLen=0x00000000
[19:59:22.487]    __FlashArg=0x00000000
[19:59:22.487]    __FlashOp=0x00000000
[19:59:22.487]    __Result=0x00000000
[19:59:22.488]    
[19:59:22.488]    // User-defined
[19:59:22.488]    DbgMCU_CR=0x00000007
[19:59:22.488]    DbgMCU_APB1_Fz=0x00000000
[19:59:22.488]    DbgMCU_APB2_Fz=0x00000000
[19:59:22.488]    TraceClk_Pin=0x00040002
[19:59:22.488]    TraceD0_Pin=0x00040003
[19:59:22.489]    TraceD1_Pin=0x00040004
[19:59:22.489]    TraceD2_Pin=0x00040005
[19:59:22.489]    TraceD3_Pin=0x00040006
[19:59:22.489]  </debugvars>
[19:59:22.489]  
[19:59:22.489]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:59:22.489]    <block atomic="false" info="">
[19:59:22.489]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:59:22.490]        // -> [traceSWO <= 0x00000001]
[19:59:22.490]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:59:22.490]        // -> [traceTPIU <= 0x00000000]
[19:59:22.490]    </block>
[19:59:22.490]    <control if="traceSWO" while="" timeout="0" info="">
[19:59:22.490]      // if-block "traceSWO"
[19:59:22.490]        // =>  TRUE
[19:59:22.490]      <block atomic="false" info="">
[19:59:22.490]        Sequence("DisableTraceSWO");
[19:59:22.491]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:59:22.491]            <block atomic="false" info="">
[19:59:22.491]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:59:22.491]                // -> [dbgmcu_val <= 0x00000000]
[19:59:22.491]            </block>
[19:59:22.491]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:59:22.491]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:59:22.492]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:59:22.492]                // -> [dbgmcu_val <= 0x00000007]
[19:59:22.492]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:59:22.492]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:59:22.492]            </block>
[19:59:22.493]          </sequence>
[19:59:22.493]      </block>
[19:59:22.493]      // end if-block "traceSWO"
[19:59:22.493]    </control>
[19:59:22.493]    <control if="traceTPIU" while="" timeout="0" info="">
[19:59:22.493]      // if-block "traceTPIU"
[19:59:22.493]        // =>  FALSE
[19:59:22.493]      // skip if-block "traceTPIU"
[19:59:22.493]    </control>
[19:59:22.494]  </sequence>
[19:59:22.494]  
[20:01:52.953]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:01:52.953]  
[20:01:52.953]  <debugvars>
[20:01:52.954]    // Pre-defined
[20:01:52.954]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:01:52.954]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:01:52.954]    __dp=0x00000000
[20:01:52.955]    __ap=0x00000000
[20:01:52.955]    __traceout=0x00000001      (SWO Trace)
[20:01:52.955]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:01:52.955]    __FlashAddr=0x00000000
[20:01:52.955]    __FlashLen=0x00000000
[20:01:52.956]    __FlashArg=0x00000000
[20:01:52.956]    __FlashOp=0x00000000
[20:01:52.956]    __Result=0x00000000
[20:01:52.956]    
[20:01:52.956]    // User-defined
[20:01:52.956]    DbgMCU_CR=0x00000007
[20:01:52.956]    DbgMCU_APB1_Fz=0x00000000
[20:01:52.957]    DbgMCU_APB2_Fz=0x00000000
[20:01:52.957]    TraceClk_Pin=0x00040002
[20:01:52.957]    TraceD0_Pin=0x00040003
[20:01:52.957]    TraceD1_Pin=0x00040004
[20:01:52.957]    TraceD2_Pin=0x00040005
[20:01:52.957]    TraceD3_Pin=0x00040006
[20:01:52.958]  </debugvars>
[20:01:52.958]  
[20:01:52.958]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:01:52.958]    <block atomic="false" info="">
[20:01:52.958]      Sequence("CheckID");
[20:01:52.958]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:01:52.958]          <block atomic="false" info="">
[20:01:52.959]            __var pidr1 = 0;
[20:01:52.959]              // -> [pidr1 <= 0x00000000]
[20:01:52.959]            __var pidr2 = 0;
[20:01:52.959]              // -> [pidr2 <= 0x00000000]
[20:01:52.959]            __var jep106id = 0;
[20:01:52.959]              // -> [jep106id <= 0x00000000]
[20:01:52.960]            __var ROMTableBase = 0;
[20:01:52.960]              // -> [ROMTableBase <= 0x00000000]
[20:01:52.960]            __ap = 0;      // AHB-AP
[20:01:52.960]              // -> [__ap <= 0x00000000]
[20:01:52.960]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:01:52.961]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.961]              // -> [ROMTableBase <= 0xE00FD000]
[20:01:52.961]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:01:52.962]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.962]              // -> [pidr1 <= 0x00000004]
[20:01:52.962]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:01:52.963]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.963]              // -> [pidr2 <= 0x0000001A]
[20:01:52.963]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:01:52.963]              // -> [jep106id <= 0x00000020]
[20:01:52.963]          </block>
[20:01:52.963]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:01:52.963]            // if-block "jep106id != 0x20"
[20:01:52.963]              // =>  FALSE
[20:01:52.964]            // skip if-block "jep106id != 0x20"
[20:01:52.964]          </control>
[20:01:52.964]        </sequence>
[20:01:52.964]    </block>
[20:01:52.964]  </sequence>
[20:01:52.964]  
[20:01:52.979]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:01:52.979]  
[20:01:52.979]  <debugvars>
[20:01:52.979]    // Pre-defined
[20:01:52.980]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:01:52.980]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:01:52.980]    __dp=0x00000000
[20:01:52.980]    __ap=0x00000000
[20:01:52.981]    __traceout=0x00000001      (SWO Trace)
[20:01:52.981]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:01:52.981]    __FlashAddr=0x00000000
[20:01:52.981]    __FlashLen=0x00000000
[20:01:52.981]    __FlashArg=0x00000000
[20:01:52.982]    __FlashOp=0x00000000
[20:01:52.982]    __Result=0x00000000
[20:01:52.982]    
[20:01:52.982]    // User-defined
[20:01:52.982]    DbgMCU_CR=0x00000007
[20:01:52.982]    DbgMCU_APB1_Fz=0x00000000
[20:01:52.983]    DbgMCU_APB2_Fz=0x00000000
[20:01:52.983]    TraceClk_Pin=0x00040002
[20:01:52.983]    TraceD0_Pin=0x00040003
[20:01:52.983]    TraceD1_Pin=0x00040004
[20:01:52.983]    TraceD2_Pin=0x00040005
[20:01:52.983]    TraceD3_Pin=0x00040006
[20:01:52.984]  </debugvars>
[20:01:52.984]  
[20:01:52.984]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:01:52.984]    <block atomic="false" info="">
[20:01:52.984]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:01:52.985]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.985]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:01:52.986]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.986]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:01:52.986]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.986]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:01:52.987]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:01:52.987]    </block>
[20:01:52.987]  </sequence>
[20:01:52.987]  
[20:02:57.919]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:02:57.919]  
[20:02:57.919]  <debugvars>
[20:02:57.919]    // Pre-defined
[20:02:57.919]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:02:57.920]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:02:57.920]    __dp=0x00000000
[20:02:57.920]    __ap=0x00000000
[20:02:57.920]    __traceout=0x00000001      (SWO Trace)
[20:02:57.920]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:02:57.920]    __FlashAddr=0x00000000
[20:02:57.921]    __FlashLen=0x00000000
[20:02:57.921]    __FlashArg=0x00000000
[20:02:57.921]    __FlashOp=0x00000000
[20:02:57.921]    __Result=0x00000000
[20:02:57.921]    
[20:02:57.921]    // User-defined
[20:02:57.921]    DbgMCU_CR=0x00000007
[20:02:57.922]    DbgMCU_APB1_Fz=0x00000000
[20:02:57.922]    DbgMCU_APB2_Fz=0x00000000
[20:02:57.922]    TraceClk_Pin=0x00040002
[20:02:57.922]    TraceD0_Pin=0x00040003
[20:02:57.922]    TraceD1_Pin=0x00040004
[20:02:57.922]    TraceD2_Pin=0x00040005
[20:02:57.923]    TraceD3_Pin=0x00040006
[20:02:57.923]  </debugvars>
[20:02:57.923]  
[20:02:57.923]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:02:57.923]    <block atomic="false" info="">
[20:02:57.923]      Sequence("CheckID");
[20:02:57.924]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:02:57.924]          <block atomic="false" info="">
[20:02:57.924]            __var pidr1 = 0;
[20:02:57.924]              // -> [pidr1 <= 0x00000000]
[20:02:57.924]            __var pidr2 = 0;
[20:02:57.925]              // -> [pidr2 <= 0x00000000]
[20:02:57.925]            __var jep106id = 0;
[20:02:57.925]              // -> [jep106id <= 0x00000000]
[20:02:57.925]            __var ROMTableBase = 0;
[20:02:57.925]              // -> [ROMTableBase <= 0x00000000]
[20:02:57.925]            __ap = 0;      // AHB-AP
[20:02:57.925]              // -> [__ap <= 0x00000000]
[20:02:57.926]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:02:57.926]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.926]              // -> [ROMTableBase <= 0xE00FD000]
[20:02:57.926]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:02:57.927]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.927]              // -> [pidr1 <= 0x00000004]
[20:02:57.927]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:02:57.928]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.928]              // -> [pidr2 <= 0x0000001A]
[20:02:57.928]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:02:57.928]              // -> [jep106id <= 0x00000020]
[20:02:57.928]          </block>
[20:02:57.928]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:02:57.928]            // if-block "jep106id != 0x20"
[20:02:57.928]              // =>  FALSE
[20:02:57.928]            // skip if-block "jep106id != 0x20"
[20:02:57.929]          </control>
[20:02:57.929]        </sequence>
[20:02:57.929]    </block>
[20:02:57.929]  </sequence>
[20:02:57.929]  
[20:02:57.944]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:02:57.944]  
[20:02:57.945]  <debugvars>
[20:02:57.945]    // Pre-defined
[20:02:57.945]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:02:57.945]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:02:57.945]    __dp=0x00000000
[20:02:57.945]    __ap=0x00000000
[20:02:57.946]    __traceout=0x00000001      (SWO Trace)
[20:02:57.946]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:02:57.946]    __FlashAddr=0x00000000
[20:02:57.946]    __FlashLen=0x00000000
[20:02:57.946]    __FlashArg=0x00000000
[20:02:57.946]    __FlashOp=0x00000000
[20:02:57.947]    __Result=0x00000000
[20:02:57.947]    
[20:02:57.947]    // User-defined
[20:02:57.947]    DbgMCU_CR=0x00000007
[20:02:57.947]    DbgMCU_APB1_Fz=0x00000000
[20:02:57.947]    DbgMCU_APB2_Fz=0x00000000
[20:02:57.947]    TraceClk_Pin=0x00040002
[20:02:57.947]    TraceD0_Pin=0x00040003
[20:02:57.948]    TraceD1_Pin=0x00040004
[20:02:57.948]    TraceD2_Pin=0x00040005
[20:02:57.948]    TraceD3_Pin=0x00040006
[20:02:57.948]  </debugvars>
[20:02:57.948]  
[20:02:57.949]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:02:57.949]    <block atomic="false" info="">
[20:02:57.949]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:02:57.949]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.949]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:02:57.950]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.950]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:02:57.951]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.951]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:02:57.951]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.951]    </block>
[20:02:57.952]  </sequence>
[20:02:57.952]  
[20:02:57.968]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:02:57.968]  
[20:02:57.968]  <debugvars>
[20:02:57.969]    // Pre-defined
[20:02:57.969]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:02:57.969]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:02:57.969]    __dp=0x00000000
[20:02:57.969]    __ap=0x00000000
[20:02:57.970]    __traceout=0x00000001      (SWO Trace)
[20:02:57.970]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:02:57.970]    __FlashAddr=0x00000000
[20:02:57.970]    __FlashLen=0x00000000
[20:02:57.970]    __FlashArg=0x00000000
[20:02:57.970]    __FlashOp=0x00000000
[20:02:57.971]    __Result=0x00000000
[20:02:57.971]    
[20:02:57.971]    // User-defined
[20:02:57.971]    DbgMCU_CR=0x00000007
[20:02:57.971]    DbgMCU_APB1_Fz=0x00000000
[20:02:57.971]    DbgMCU_APB2_Fz=0x00000000
[20:02:57.971]    TraceClk_Pin=0x00040002
[20:02:57.972]    TraceD0_Pin=0x00040003
[20:02:57.972]    TraceD1_Pin=0x00040004
[20:02:57.972]    TraceD2_Pin=0x00040005
[20:02:57.972]    TraceD3_Pin=0x00040006
[20:02:57.972]  </debugvars>
[20:02:57.972]  
[20:02:57.973]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:02:57.973]    <block atomic="false" info="">
[20:02:57.973]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:02:57.973]        // -> [traceSWO <= 0x00000001]
[20:02:57.973]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:02:57.974]        // -> [traceTPIU <= 0x00000000]
[20:02:57.974]    </block>
[20:02:57.974]    <control if="traceSWO" while="" timeout="0" info="">
[20:02:57.974]      // if-block "traceSWO"
[20:02:57.974]        // =>  TRUE
[20:02:57.974]      <block atomic="false" info="">
[20:02:57.975]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:02:57.975]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:02:57.975]            <block atomic="false" info="">
[20:02:57.975]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:02:57.975]                // -> [dbgmcu_val <= 0x00000000]
[20:02:57.975]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:02:57.975]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:02:57.976]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:02:57.976]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.976]                // -> [dbgmcu_val <= 0x00000007]
[20:02:57.976]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:02:57.976]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:02:57.977]              Sequence("ConfigureTraceSWOPin");
[20:02:57.977]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:02:57.977]                  <block atomic="false" info="">
[20:02:57.977]                    __var pin     = 0;
[20:02:57.977]                      // -> [pin <= 0x00000000]
[20:02:57.977]                    __var port    = 0;
[20:02:57.977]                      // -> [port <= 0x00000000]
[20:02:57.977]                    __var portAdr = 0;
[20:02:57.978]                      // -> [portAdr <= 0x00000000]
[20:02:57.978]                    __var pos     = 0;
[20:02:57.978]                      // -> [pos <= 0x00000000]
[20:02:57.978]                    __var SWO_Pin = 0x00010003;          // PB3
[20:02:57.978]                      // -> [SWO_Pin <= 0x00010003]
[20:02:57.978]                  </block>
[20:02:57.978]                  <block atomic="false" info="configure SWO">
[20:02:57.979]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:02:57.979]                      // -> [pin <= 0x00000003]
[20:02:57.979]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:02:57.979]                      // -> [port <= 0x00000001]
[20:02:57.979]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:02:57.979]                      // -> [portAdr <= 0x40020400]
[20:02:57.979]                    pos = pin * 2;
[20:02:57.980]                      // -> [pos <= 0x00000006]
[20:02:57.980]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:02:57.980]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.981]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.981]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:02:57.981]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.982]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.982]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:02:57.982]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.983]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.983]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:02:57.983]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.984]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.984]                  </block>
[20:02:57.984]                  <control if="pin <  8" while="" timeout="0" info="">
[20:02:57.984]                    // if-block "pin <  8"
[20:02:57.984]                      // =>  TRUE
[20:02:57.984]                    <block atomic="false" info="">
[20:02:57.984]                      pos = ((pin    ) & 7) * 4;
[20:02:57.984]                        // -> [pos <= 0x0000000C]
[20:02:57.985]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:02:57.985]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.985]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.986]                    </block>
[20:02:57.986]                    // end if-block "pin <  8"
[20:02:57.986]                  </control>
[20:02:57.986]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:02:57.986]                    // if-block "pin >= 8"
[20:02:57.986]                      // =>  FALSE
[20:02:57.986]                    // skip if-block "pin >= 8"
[20:02:57.987]                  </control>
[20:02:57.987]                </sequence>
[20:02:57.987]            </block>
[20:02:57.987]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:02:57.987]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:02:57.988]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:57.988]            </block>
[20:02:57.988]          </sequence>
[20:02:57.988]      </block>
[20:02:57.988]      // end if-block "traceSWO"
[20:02:57.988]    </control>
[20:02:57.989]    <control if="traceTPIU" while="" timeout="0" info="">
[20:02:57.989]      // if-block "traceTPIU"
[20:02:57.989]        // =>  FALSE
[20:02:57.989]      // skip if-block "traceTPIU"
[20:02:57.989]    </control>
[20:02:57.989]  </sequence>
[20:02:57.989]  
[20:02:57.993]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:02:57.993]  
[20:02:57.993]  <debugvars>
[20:02:57.993]    // Pre-defined
[20:02:57.994]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:02:57.994]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:02:57.994]    __dp=0x00000000
[20:02:57.994]    __ap=0x00000000
[20:02:57.994]    __traceout=0x00000001      (SWO Trace)
[20:02:57.994]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:02:57.995]    __FlashAddr=0x00000000
[20:02:57.995]    __FlashLen=0x00000000
[20:02:57.995]    __FlashArg=0x00000000
[20:02:57.995]    __FlashOp=0x00000000
[20:02:57.995]    __Result=0x00000000
[20:02:57.995]    
[20:02:57.995]    // User-defined
[20:02:57.996]    DbgMCU_CR=0x00000007
[20:02:57.996]    DbgMCU_APB1_Fz=0x00000000
[20:02:57.996]    DbgMCU_APB2_Fz=0x00000000
[20:02:57.996]    TraceClk_Pin=0x00040002
[20:02:57.996]    TraceD0_Pin=0x00040003
[20:02:57.996]    TraceD1_Pin=0x00040004
[20:02:57.997]    TraceD2_Pin=0x00040005
[20:02:57.997]    TraceD3_Pin=0x00040006
[20:02:57.997]  </debugvars>
[20:02:57.997]  
[20:02:57.997]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:02:57.997]    <block atomic="false" info="">
[20:02:57.998]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:02:57.998]        // -> [traceSWO <= 0x00000001]
[20:02:57.998]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:02:57.998]        // -> [traceTPIU <= 0x00000000]
[20:02:57.998]    </block>
[20:02:57.998]    <control if="traceSWO" while="" timeout="0" info="">
[20:02:57.999]      // if-block "traceSWO"
[20:02:57.999]        // =>  TRUE
[20:02:57.999]      <block atomic="false" info="">
[20:02:57.999]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:02:57.999]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:02:57.999]            <block atomic="false" info="">
[20:02:57.999]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:02:58.000]                // -> [dbgmcu_val <= 0x00000000]
[20:02:58.000]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:02:58.000]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:02:58.000]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:02:58.001]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.001]                // -> [dbgmcu_val <= 0x00000007]
[20:02:58.001]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:02:58.001]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:02:58.001]              Sequence("ConfigureTraceSWOPin");
[20:02:58.001]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:02:58.001]                  <block atomic="false" info="">
[20:02:58.001]                    __var pin     = 0;
[20:02:58.002]                      // -> [pin <= 0x00000000]
[20:02:58.002]                    __var port    = 0;
[20:02:58.002]                      // -> [port <= 0x00000000]
[20:02:58.002]                    __var portAdr = 0;
[20:02:58.002]                      // -> [portAdr <= 0x00000000]
[20:02:58.002]                    __var pos     = 0;
[20:02:58.002]                      // -> [pos <= 0x00000000]
[20:02:58.002]                    __var SWO_Pin = 0x00010003;          // PB3
[20:02:58.003]                      // -> [SWO_Pin <= 0x00010003]
[20:02:58.003]                  </block>
[20:02:58.003]                  <block atomic="false" info="configure SWO">
[20:02:58.003]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:02:58.003]                      // -> [pin <= 0x00000003]
[20:02:58.003]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:02:58.003]                      // -> [port <= 0x00000001]
[20:02:58.003]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:02:58.003]                      // -> [portAdr <= 0x40020400]
[20:02:58.004]                    pos = pin * 2;
[20:02:58.004]                      // -> [pos <= 0x00000006]
[20:02:58.004]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:02:58.004]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.005]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.005]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:02:58.005]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.005]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.005]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:02:58.005]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.006]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.006]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:02:58.006]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.007]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.007]                  </block>
[20:02:58.007]                  <control if="pin <  8" while="" timeout="0" info="">
[20:02:58.007]                    // if-block "pin <  8"
[20:02:58.007]                      // =>  TRUE
[20:02:58.007]                    <block atomic="false" info="">
[20:02:58.008]                      pos = ((pin    ) & 7) * 4;
[20:02:58.008]                        // -> [pos <= 0x0000000C]
[20:02:58.008]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:02:58.008]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.010]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.010]                    </block>
[20:02:58.010]                    // end if-block "pin <  8"
[20:02:58.010]                  </control>
[20:02:58.010]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:02:58.010]                    // if-block "pin >= 8"
[20:02:58.010]                      // =>  FALSE
[20:02:58.010]                    // skip if-block "pin >= 8"
[20:02:58.010]                  </control>
[20:02:58.010]                </sequence>
[20:02:58.010]            </block>
[20:02:58.010]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:02:58.011]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:02:58.011]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.011]            </block>
[20:02:58.011]          </sequence>
[20:02:58.011]      </block>
[20:02:58.012]      // end if-block "traceSWO"
[20:02:58.012]    </control>
[20:02:58.012]    <control if="traceTPIU" while="" timeout="0" info="">
[20:02:58.012]      // if-block "traceTPIU"
[20:02:58.012]        // =>  FALSE
[20:02:58.012]      // skip if-block "traceTPIU"
[20:02:58.012]    </control>
[20:02:58.013]  </sequence>
[20:02:58.013]  
[20:02:58.227]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:02:58.227]  
[20:02:58.228]  <debugvars>
[20:02:58.228]    // Pre-defined
[20:02:58.228]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:02:58.228]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:02:58.228]    __dp=0x00000000
[20:02:58.229]    __ap=0x00000000
[20:02:58.229]    __traceout=0x00000001      (SWO Trace)
[20:02:58.229]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:02:58.229]    __FlashAddr=0x00000000
[20:02:58.229]    __FlashLen=0x00000000
[20:02:58.230]    __FlashArg=0x00000000
[20:02:58.230]    __FlashOp=0x00000000
[20:02:58.230]    __Result=0x00000000
[20:02:58.230]    
[20:02:58.230]    // User-defined
[20:02:58.230]    DbgMCU_CR=0x00000007
[20:02:58.230]    DbgMCU_APB1_Fz=0x00000000
[20:02:58.231]    DbgMCU_APB2_Fz=0x00000000
[20:02:58.231]    TraceClk_Pin=0x00040002
[20:02:58.231]    TraceD0_Pin=0x00040003
[20:02:58.231]    TraceD1_Pin=0x00040004
[20:02:58.231]    TraceD2_Pin=0x00040005
[20:02:58.232]    TraceD3_Pin=0x00040006
[20:02:58.232]  </debugvars>
[20:02:58.232]  
[20:02:58.232]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:02:58.232]    <block atomic="false" info="">
[20:02:58.233]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:02:58.233]        // -> [traceSWO <= 0x00000001]
[20:02:58.233]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:02:58.233]        // -> [traceTPIU <= 0x00000000]
[20:02:58.233]    </block>
[20:02:58.234]    <control if="traceSWO" while="" timeout="0" info="">
[20:02:58.234]      // if-block "traceSWO"
[20:02:58.234]        // =>  TRUE
[20:02:58.234]      <block atomic="false" info="">
[20:02:58.234]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:02:58.234]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:02:58.235]            <block atomic="false" info="">
[20:02:58.235]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:02:58.235]                // -> [dbgmcu_val <= 0x00000000]
[20:02:58.235]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:02:58.235]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:02:58.235]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:02:58.236]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.236]                // -> [dbgmcu_val <= 0x00000007]
[20:02:58.236]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:02:58.236]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:02:58.237]              Sequence("ConfigureTraceSWOPin");
[20:02:58.237]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:02:58.237]                  <block atomic="false" info="">
[20:02:58.237]                    __var pin     = 0;
[20:02:58.237]                      // -> [pin <= 0x00000000]
[20:02:58.237]                    __var port    = 0;
[20:02:58.237]                      // -> [port <= 0x00000000]
[20:02:58.238]                    __var portAdr = 0;
[20:02:58.238]                      // -> [portAdr <= 0x00000000]
[20:02:58.238]                    __var pos     = 0;
[20:02:58.238]                      // -> [pos <= 0x00000000]
[20:02:58.238]                    __var SWO_Pin = 0x00010003;          // PB3
[20:02:58.238]                      // -> [SWO_Pin <= 0x00010003]
[20:02:58.238]                  </block>
[20:02:58.239]                  <block atomic="false" info="configure SWO">
[20:02:58.239]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:02:58.239]                      // -> [pin <= 0x00000003]
[20:02:58.239]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:02:58.239]                      // -> [port <= 0x00000001]
[20:02:58.239]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:02:58.239]                      // -> [portAdr <= 0x40020400]
[20:02:58.240]                    pos = pin * 2;
[20:02:58.240]                      // -> [pos <= 0x00000006]
[20:02:58.240]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:02:58.240]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.241]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.241]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:02:58.241]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.242]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.242]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:02:58.242]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.243]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.243]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:02:58.243]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.244]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.244]                  </block>
[20:02:58.244]                  <control if="pin <  8" while="" timeout="0" info="">
[20:02:58.244]                    // if-block "pin <  8"
[20:02:58.244]                      // =>  TRUE
[20:02:58.244]                    <block atomic="false" info="">
[20:02:58.244]                      pos = ((pin    ) & 7) * 4;
[20:02:58.245]                        // -> [pos <= 0x0000000C]
[20:02:58.245]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:02:58.245]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.246]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.246]                    </block>
[20:02:58.246]                    // end if-block "pin <  8"
[20:02:58.246]                  </control>
[20:02:58.246]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:02:58.246]                    // if-block "pin >= 8"
[20:02:58.246]                      // =>  FALSE
[20:02:58.246]                    // skip if-block "pin >= 8"
[20:02:58.246]                  </control>
[20:02:58.247]                </sequence>
[20:02:58.247]            </block>
[20:02:58.247]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:02:58.247]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:02:58.247]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:02:58.247]            </block>
[20:02:58.248]          </sequence>
[20:02:58.248]      </block>
[20:02:58.248]      // end if-block "traceSWO"
[20:02:58.248]    </control>
[20:02:58.248]    <control if="traceTPIU" while="" timeout="0" info="">
[20:02:58.248]      // if-block "traceTPIU"
[20:02:58.248]        // =>  FALSE
[20:02:58.249]      // skip if-block "traceTPIU"
[20:02:58.249]    </control>
[20:02:58.249]  </sequence>
[20:02:58.249]  
[20:04:29.034]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:04:29.034]  
[20:04:29.034]  <debugvars>
[20:04:29.034]    // Pre-defined
[20:04:29.035]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:04:29.035]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:04:29.035]    __dp=0x00000000
[20:04:29.035]    __ap=0x00000000
[20:04:29.035]    __traceout=0x00000001      (SWO Trace)
[20:04:29.035]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:04:29.035]    __FlashAddr=0x00000000
[20:04:29.035]    __FlashLen=0x00000000
[20:04:29.036]    __FlashArg=0x00000000
[20:04:29.036]    __FlashOp=0x00000000
[20:04:29.036]    __Result=0x00000000
[20:04:29.036]    
[20:04:29.036]    // User-defined
[20:04:29.036]    DbgMCU_CR=0x00000007
[20:04:29.036]    DbgMCU_APB1_Fz=0x00000000
[20:04:29.037]    DbgMCU_APB2_Fz=0x00000000
[20:04:29.037]    TraceClk_Pin=0x00040002
[20:04:29.037]    TraceD0_Pin=0x00040003
[20:04:29.037]    TraceD1_Pin=0x00040004
[20:04:29.037]    TraceD2_Pin=0x00040005
[20:04:29.037]    TraceD3_Pin=0x00040006
[20:04:29.037]  </debugvars>
[20:04:29.037]  
[20:04:29.037]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:04:29.038]    <block atomic="false" info="">
[20:04:29.038]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:04:29.038]        // -> [traceSWO <= 0x00000001]
[20:04:29.038]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:04:29.038]        // -> [traceTPIU <= 0x00000000]
[20:04:29.038]    </block>
[20:04:29.038]    <control if="traceSWO" while="" timeout="0" info="">
[20:04:29.038]      // if-block "traceSWO"
[20:04:29.039]        // =>  TRUE
[20:04:29.039]      <block atomic="false" info="">
[20:04:29.039]        Sequence("DisableTraceSWO");
[20:04:29.039]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:04:29.039]            <block atomic="false" info="">
[20:04:29.039]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:04:29.039]                // -> [dbgmcu_val <= 0x00000000]
[20:04:29.039]            </block>
[20:04:29.039]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:04:29.040]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:04:29.040]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:04:29.040]                // -> [dbgmcu_val <= 0x00000007]
[20:04:29.040]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:04:29.041]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:04:29.041]            </block>
[20:04:29.041]          </sequence>
[20:04:29.041]      </block>
[20:04:29.041]      // end if-block "traceSWO"
[20:04:29.041]    </control>
[20:04:29.042]    <control if="traceTPIU" while="" timeout="0" info="">
[20:04:29.042]      // if-block "traceTPIU"
[20:04:29.042]        // =>  FALSE
[20:04:29.042]      // skip if-block "traceTPIU"
[20:04:29.042]    </control>
[20:04:29.042]  </sequence>
[20:04:29.042]  
[20:06:50.464]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:06:50.464]  
[20:06:50.464]  <debugvars>
[20:06:50.465]    // Pre-defined
[20:06:50.465]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:06:50.465]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:06:50.465]    __dp=0x00000000
[20:06:50.465]    __ap=0x00000000
[20:06:50.466]    __traceout=0x00000001      (SWO Trace)
[20:06:50.466]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:06:50.466]    __FlashAddr=0x00000000
[20:06:50.466]    __FlashLen=0x00000000
[20:06:50.466]    __FlashArg=0x00000000
[20:06:50.467]    __FlashOp=0x00000000
[20:06:50.467]    __Result=0x00000000
[20:06:50.467]    
[20:06:50.467]    // User-defined
[20:06:50.467]    DbgMCU_CR=0x00000007
[20:06:50.467]    DbgMCU_APB1_Fz=0x00000000
[20:06:50.468]    DbgMCU_APB2_Fz=0x00000000
[20:06:50.468]    TraceClk_Pin=0x00040002
[20:06:50.468]    TraceD0_Pin=0x00040003
[20:06:50.468]    TraceD1_Pin=0x00040004
[20:06:50.468]    TraceD2_Pin=0x00040005
[20:06:50.468]    TraceD3_Pin=0x00040006
[20:06:50.469]  </debugvars>
[20:06:50.469]  
[20:06:50.469]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:06:50.469]    <block atomic="false" info="">
[20:06:50.469]      Sequence("CheckID");
[20:06:50.470]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:06:50.470]          <block atomic="false" info="">
[20:06:50.470]            __var pidr1 = 0;
[20:06:50.470]              // -> [pidr1 <= 0x00000000]
[20:06:50.470]            __var pidr2 = 0;
[20:06:50.470]              // -> [pidr2 <= 0x00000000]
[20:06:50.471]            __var jep106id = 0;
[20:06:50.471]              // -> [jep106id <= 0x00000000]
[20:06:50.471]            __var ROMTableBase = 0;
[20:06:50.471]              // -> [ROMTableBase <= 0x00000000]
[20:06:50.471]            __ap = 0;      // AHB-AP
[20:06:50.472]              // -> [__ap <= 0x00000000]
[20:06:50.472]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:06:50.472]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.472]              // -> [ROMTableBase <= 0xE00FD000]
[20:06:50.472]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:06:50.473]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.473]              // -> [pidr1 <= 0x00000004]
[20:06:50.473]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:06:50.474]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.474]              // -> [pidr2 <= 0x0000001A]
[20:06:50.474]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:06:50.474]              // -> [jep106id <= 0x00000020]
[20:06:50.474]          </block>
[20:06:50.474]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:06:50.475]            // if-block "jep106id != 0x20"
[20:06:50.475]              // =>  FALSE
[20:06:50.475]            // skip if-block "jep106id != 0x20"
[20:06:50.475]          </control>
[20:06:50.475]        </sequence>
[20:06:50.475]    </block>
[20:06:50.476]  </sequence>
[20:06:50.476]  
[20:06:50.490]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:06:50.490]  
[20:06:50.490]  <debugvars>
[20:06:50.491]    // Pre-defined
[20:06:50.491]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:06:50.491]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:06:50.491]    __dp=0x00000000
[20:06:50.491]    __ap=0x00000000
[20:06:50.491]    __traceout=0x00000001      (SWO Trace)
[20:06:50.492]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:06:50.492]    __FlashAddr=0x00000000
[20:06:50.492]    __FlashLen=0x00000000
[20:06:50.492]    __FlashArg=0x00000000
[20:06:50.492]    __FlashOp=0x00000000
[20:06:50.493]    __Result=0x00000000
[20:06:50.493]    
[20:06:50.493]    // User-defined
[20:06:50.493]    DbgMCU_CR=0x00000007
[20:06:50.493]    DbgMCU_APB1_Fz=0x00000000
[20:06:50.494]    DbgMCU_APB2_Fz=0x00000000
[20:06:50.494]    TraceClk_Pin=0x00040002
[20:06:50.494]    TraceD0_Pin=0x00040003
[20:06:50.494]    TraceD1_Pin=0x00040004
[20:06:50.494]    TraceD2_Pin=0x00040005
[20:06:50.494]    TraceD3_Pin=0x00040006
[20:06:50.495]  </debugvars>
[20:06:50.495]  
[20:06:50.495]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:06:50.495]    <block atomic="false" info="">
[20:06:50.495]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:06:50.496]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.496]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:06:50.497]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.497]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:06:50.497]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.498]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:06:50.498]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:06:50.498]    </block>
[20:06:50.499]  </sequence>
[20:06:50.499]  
[20:08:25.136]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:08:25.136]  
[20:08:25.136]  <debugvars>
[20:08:25.136]    // Pre-defined
[20:08:25.136]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:08:25.136]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:08:25.137]    __dp=0x00000000
[20:08:25.137]    __ap=0x00000000
[20:08:25.137]    __traceout=0x00000001      (SWO Trace)
[20:08:25.137]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:08:25.137]    __FlashAddr=0x00000000
[20:08:25.137]    __FlashLen=0x00000000
[20:08:25.138]    __FlashArg=0x00000000
[20:08:25.138]    __FlashOp=0x00000000
[20:08:25.138]    __Result=0x00000000
[20:08:25.138]    
[20:08:25.138]    // User-defined
[20:08:25.138]    DbgMCU_CR=0x00000007
[20:08:25.138]    DbgMCU_APB1_Fz=0x00000000
[20:08:25.139]    DbgMCU_APB2_Fz=0x00000000
[20:08:25.139]    TraceClk_Pin=0x00040002
[20:08:25.139]    TraceD0_Pin=0x00040003
[20:08:25.139]    TraceD1_Pin=0x00040004
[20:08:25.139]    TraceD2_Pin=0x00040005
[20:08:25.139]    TraceD3_Pin=0x00040006
[20:08:25.140]  </debugvars>
[20:08:25.140]  
[20:08:25.140]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:08:25.140]    <block atomic="false" info="">
[20:08:25.140]      Sequence("CheckID");
[20:08:25.140]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:08:25.141]          <block atomic="false" info="">
[20:08:25.141]            __var pidr1 = 0;
[20:08:25.141]              // -> [pidr1 <= 0x00000000]
[20:08:25.141]            __var pidr2 = 0;
[20:08:25.141]              // -> [pidr2 <= 0x00000000]
[20:08:25.142]            __var jep106id = 0;
[20:08:25.142]              // -> [jep106id <= 0x00000000]
[20:08:25.142]            __var ROMTableBase = 0;
[20:08:25.142]              // -> [ROMTableBase <= 0x00000000]
[20:08:25.142]            __ap = 0;      // AHB-AP
[20:08:25.142]              // -> [__ap <= 0x00000000]
[20:08:25.142]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:08:25.143]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.143]              // -> [ROMTableBase <= 0xE00FD000]
[20:08:25.143]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:08:25.144]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.144]              // -> [pidr1 <= 0x00000004]
[20:08:25.144]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:08:25.145]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.145]              // -> [pidr2 <= 0x0000001A]
[20:08:25.145]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:08:25.145]              // -> [jep106id <= 0x00000020]
[20:08:25.145]          </block>
[20:08:25.145]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:08:25.145]            // if-block "jep106id != 0x20"
[20:08:25.146]              // =>  FALSE
[20:08:25.146]            // skip if-block "jep106id != 0x20"
[20:08:25.146]          </control>
[20:08:25.146]        </sequence>
[20:08:25.146]    </block>
[20:08:25.146]  </sequence>
[20:08:25.146]  
[20:08:25.161]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:08:25.161]  
[20:08:25.161]  <debugvars>
[20:08:25.162]    // Pre-defined
[20:08:25.162]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:08:25.162]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:08:25.162]    __dp=0x00000000
[20:08:25.162]    __ap=0x00000000
[20:08:25.162]    __traceout=0x00000001      (SWO Trace)
[20:08:25.163]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:08:25.163]    __FlashAddr=0x00000000
[20:08:25.163]    __FlashLen=0x00000000
[20:08:25.163]    __FlashArg=0x00000000
[20:08:25.163]    __FlashOp=0x00000000
[20:08:25.163]    __Result=0x00000000
[20:08:25.164]    
[20:08:25.164]    // User-defined
[20:08:25.164]    DbgMCU_CR=0x00000007
[20:08:25.164]    DbgMCU_APB1_Fz=0x00000000
[20:08:25.164]    DbgMCU_APB2_Fz=0x00000000
[20:08:25.164]    TraceClk_Pin=0x00040002
[20:08:25.164]    TraceD0_Pin=0x00040003
[20:08:25.165]    TraceD1_Pin=0x00040004
[20:08:25.165]    TraceD2_Pin=0x00040005
[20:08:25.165]    TraceD3_Pin=0x00040006
[20:08:25.165]  </debugvars>
[20:08:25.165]  
[20:08:25.166]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:08:25.166]    <block atomic="false" info="">
[20:08:25.166]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:08:25.166]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.167]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:08:25.167]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.167]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:08:25.168]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.168]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:08:25.168]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:08:25.168]    </block>
[20:08:25.169]  </sequence>
[20:08:25.169]  
[20:11:29.095]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:11:29.095]  
[20:11:29.096]  <debugvars>
[20:11:29.096]    // Pre-defined
[20:11:29.096]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:11:29.096]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:11:29.096]    __dp=0x00000000
[20:11:29.096]    __ap=0x00000000
[20:11:29.096]    __traceout=0x00000001      (SWO Trace)
[20:11:29.096]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:11:29.097]    __FlashAddr=0x00000000
[20:11:29.097]    __FlashLen=0x00000000
[20:11:29.097]    __FlashArg=0x00000000
[20:11:29.097]    __FlashOp=0x00000000
[20:11:29.097]    __Result=0x00000000
[20:11:29.097]    
[20:11:29.097]    // User-defined
[20:11:29.097]    DbgMCU_CR=0x00000007
[20:11:29.097]    DbgMCU_APB1_Fz=0x00000000
[20:11:29.097]    DbgMCU_APB2_Fz=0x00000000
[20:11:29.098]    TraceClk_Pin=0x00040002
[20:11:29.098]    TraceD0_Pin=0x00040003
[20:11:29.098]    TraceD1_Pin=0x00040004
[20:11:29.098]    TraceD2_Pin=0x00040005
[20:11:29.098]    TraceD3_Pin=0x00040006
[20:11:29.098]  </debugvars>
[20:11:29.098]  
[20:11:29.098]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:11:29.098]    <block atomic="false" info="">
[20:11:29.099]      Sequence("CheckID");
[20:11:29.099]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:11:29.099]          <block atomic="false" info="">
[20:11:29.099]            __var pidr1 = 0;
[20:11:29.099]              // -> [pidr1 <= 0x00000000]
[20:11:29.099]            __var pidr2 = 0;
[20:11:29.099]              // -> [pidr2 <= 0x00000000]
[20:11:29.099]            __var jep106id = 0;
[20:11:29.100]              // -> [jep106id <= 0x00000000]
[20:11:29.100]            __var ROMTableBase = 0;
[20:11:29.100]              // -> [ROMTableBase <= 0x00000000]
[20:11:29.100]            __ap = 0;      // AHB-AP
[20:11:29.100]              // -> [__ap <= 0x00000000]
[20:11:29.100]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:11:29.100]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.101]              // -> [ROMTableBase <= 0xE00FD000]
[20:11:29.101]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:11:29.101]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.101]              // -> [pidr1 <= 0x00000004]
[20:11:29.102]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:11:29.102]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.102]              // -> [pidr2 <= 0x0000001A]
[20:11:29.102]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:11:29.102]              // -> [jep106id <= 0x00000020]
[20:11:29.102]          </block>
[20:11:29.103]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:11:29.103]            // if-block "jep106id != 0x20"
[20:11:29.103]              // =>  FALSE
[20:11:29.103]            // skip if-block "jep106id != 0x20"
[20:11:29.103]          </control>
[20:11:29.103]        </sequence>
[20:11:29.103]    </block>
[20:11:29.103]  </sequence>
[20:11:29.104]  
[20:11:29.118]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:11:29.118]  
[20:11:29.118]  <debugvars>
[20:11:29.119]    // Pre-defined
[20:11:29.119]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:11:29.119]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:11:29.119]    __dp=0x00000000
[20:11:29.119]    __ap=0x00000000
[20:11:29.119]    __traceout=0x00000001      (SWO Trace)
[20:11:29.119]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:11:29.119]    __FlashAddr=0x00000000
[20:11:29.120]    __FlashLen=0x00000000
[20:11:29.120]    __FlashArg=0x00000000
[20:11:29.120]    __FlashOp=0x00000000
[20:11:29.120]    __Result=0x00000000
[20:11:29.120]    
[20:11:29.120]    // User-defined
[20:11:29.120]    DbgMCU_CR=0x00000007
[20:11:29.120]    DbgMCU_APB1_Fz=0x00000000
[20:11:29.120]    DbgMCU_APB2_Fz=0x00000000
[20:11:29.120]    TraceClk_Pin=0x00040002
[20:11:29.121]    TraceD0_Pin=0x00040003
[20:11:29.121]    TraceD1_Pin=0x00040004
[20:11:29.121]    TraceD2_Pin=0x00040005
[20:11:29.121]    TraceD3_Pin=0x00040006
[20:11:29.121]  </debugvars>
[20:11:29.121]  
[20:11:29.121]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:11:29.122]    <block atomic="false" info="">
[20:11:29.122]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:11:29.122]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.122]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:11:29.123]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.123]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:11:29.124]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.124]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:11:29.124]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:29.124]    </block>
[20:11:29.124]  </sequence>
[20:11:29.125]  
[20:15:11.132]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:15:11.132]  
[20:15:11.132]  <debugvars>
[20:15:11.132]    // Pre-defined
[20:15:11.132]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:15:11.133]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:15:11.133]    __dp=0x00000000
[20:15:11.133]    __ap=0x00000000
[20:15:11.133]    __traceout=0x00000001      (SWO Trace)
[20:15:11.133]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:15:11.134]    __FlashAddr=0x00000000
[20:15:11.134]    __FlashLen=0x00000000
[20:15:11.134]    __FlashArg=0x00000000
[20:15:11.134]    __FlashOp=0x00000000
[20:15:11.134]    __Result=0x00000000
[20:15:11.134]    
[20:15:11.134]    // User-defined
[20:15:11.135]    DbgMCU_CR=0x00000007
[20:15:11.135]    DbgMCU_APB1_Fz=0x00000000
[20:15:11.135]    DbgMCU_APB2_Fz=0x00000000
[20:15:11.135]    TraceClk_Pin=0x00040002
[20:15:11.135]    TraceD0_Pin=0x00040003
[20:15:11.136]    TraceD1_Pin=0x00040004
[20:15:11.136]    TraceD2_Pin=0x00040005
[20:15:11.136]    TraceD3_Pin=0x00040006
[20:15:11.136]  </debugvars>
[20:15:11.136]  
[20:15:11.136]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:15:11.137]    <block atomic="false" info="">
[20:15:11.137]      Sequence("CheckID");
[20:15:11.137]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:15:11.137]          <block atomic="false" info="">
[20:15:11.137]            __var pidr1 = 0;
[20:15:11.137]              // -> [pidr1 <= 0x00000000]
[20:15:11.138]            __var pidr2 = 0;
[20:15:11.138]              // -> [pidr2 <= 0x00000000]
[20:15:11.138]            __var jep106id = 0;
[20:15:11.138]              // -> [jep106id <= 0x00000000]
[20:15:11.138]            __var ROMTableBase = 0;
[20:15:11.138]              // -> [ROMTableBase <= 0x00000000]
[20:15:11.139]            __ap = 0;      // AHB-AP
[20:15:11.139]              // -> [__ap <= 0x00000000]
[20:15:11.139]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:15:11.139]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.139]              // -> [ROMTableBase <= 0xE00FD000]
[20:15:11.140]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:15:11.140]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.140]              // -> [pidr1 <= 0x00000004]
[20:15:11.141]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:15:11.141]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.141]              // -> [pidr2 <= 0x0000001A]
[20:15:11.141]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:15:11.142]              // -> [jep106id <= 0x00000020]
[20:15:11.142]          </block>
[20:15:11.142]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:15:11.142]            // if-block "jep106id != 0x20"
[20:15:11.142]              // =>  FALSE
[20:15:11.142]            // skip if-block "jep106id != 0x20"
[20:15:11.142]          </control>
[20:15:11.142]        </sequence>
[20:15:11.143]    </block>
[20:15:11.143]  </sequence>
[20:15:11.143]  
[20:15:11.158]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:15:11.158]  
[20:15:11.158]  <debugvars>
[20:15:11.158]    // Pre-defined
[20:15:11.159]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:15:11.159]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:15:11.159]    __dp=0x00000000
[20:15:11.159]    __ap=0x00000000
[20:15:11.159]    __traceout=0x00000001      (SWO Trace)
[20:15:11.160]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:15:11.160]    __FlashAddr=0x00000000
[20:15:11.160]    __FlashLen=0x00000000
[20:15:11.160]    __FlashArg=0x00000000
[20:15:11.160]    __FlashOp=0x00000000
[20:15:11.161]    __Result=0x00000000
[20:15:11.161]    
[20:15:11.161]    // User-defined
[20:15:11.161]    DbgMCU_CR=0x00000007
[20:15:11.161]    DbgMCU_APB1_Fz=0x00000000
[20:15:11.161]    DbgMCU_APB2_Fz=0x00000000
[20:15:11.161]    TraceClk_Pin=0x00040002
[20:15:11.161]    TraceD0_Pin=0x00040003
[20:15:11.162]    TraceD1_Pin=0x00040004
[20:15:11.162]    TraceD2_Pin=0x00040005
[20:15:11.162]    TraceD3_Pin=0x00040006
[20:15:11.162]  </debugvars>
[20:15:11.162]  
[20:15:11.162]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:15:11.163]    <block atomic="false" info="">
[20:15:11.163]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:15:11.163]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.163]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:15:11.164]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.164]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:15:11.165]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.165]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:15:11.165]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:11.166]    </block>
[20:15:11.166]  </sequence>
[20:15:11.166]  
[20:24:27.317]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:24:27.317]  
[20:24:27.317]  <debugvars>
[20:24:27.318]    // Pre-defined
[20:24:27.318]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:27.318]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:24:27.318]    __dp=0x00000000
[20:24:27.318]    __ap=0x00000000
[20:24:27.319]    __traceout=0x00000001      (SWO Trace)
[20:24:27.319]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:27.319]    __FlashAddr=0x00000000
[20:24:27.319]    __FlashLen=0x00000000
[20:24:27.319]    __FlashArg=0x00000000
[20:24:27.319]    __FlashOp=0x00000000
[20:24:27.320]    __Result=0x00000000
[20:24:27.320]    
[20:24:27.320]    // User-defined
[20:24:27.320]    DbgMCU_CR=0x00000007
[20:24:27.320]    DbgMCU_APB1_Fz=0x00000000
[20:24:27.320]    DbgMCU_APB2_Fz=0x00000000
[20:24:27.321]    TraceClk_Pin=0x00040002
[20:24:27.321]    TraceD0_Pin=0x00040003
[20:24:27.321]    TraceD1_Pin=0x00040004
[20:24:27.321]    TraceD2_Pin=0x00040005
[20:24:27.321]    TraceD3_Pin=0x00040006
[20:24:27.322]  </debugvars>
[20:24:27.322]  
[20:24:27.322]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:24:27.322]    <block atomic="false" info="">
[20:24:27.322]      Sequence("CheckID");
[20:24:27.322]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:24:27.323]          <block atomic="false" info="">
[20:24:27.323]            __var pidr1 = 0;
[20:24:27.323]              // -> [pidr1 <= 0x00000000]
[20:24:27.323]            __var pidr2 = 0;
[20:24:27.323]              // -> [pidr2 <= 0x00000000]
[20:24:27.323]            __var jep106id = 0;
[20:24:27.323]              // -> [jep106id <= 0x00000000]
[20:24:27.324]            __var ROMTableBase = 0;
[20:24:27.324]              // -> [ROMTableBase <= 0x00000000]
[20:24:27.324]            __ap = 0;      // AHB-AP
[20:24:27.324]              // -> [__ap <= 0x00000000]
[20:24:27.324]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:24:27.324]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.325]              // -> [ROMTableBase <= 0xE00FD000]
[20:24:27.325]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:24:27.325]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.325]              // -> [pidr1 <= 0x00000004]
[20:24:27.326]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:24:27.326]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.326]              // -> [pidr2 <= 0x0000001A]
[20:24:27.326]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:24:27.326]              // -> [jep106id <= 0x00000020]
[20:24:27.327]          </block>
[20:24:27.327]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:24:27.327]            // if-block "jep106id != 0x20"
[20:24:27.327]              // =>  FALSE
[20:24:27.327]            // skip if-block "jep106id != 0x20"
[20:24:27.327]          </control>
[20:24:27.327]        </sequence>
[20:24:27.328]    </block>
[20:24:27.328]  </sequence>
[20:24:27.328]  
[20:24:27.343]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:24:27.343]  
[20:24:27.344]  <debugvars>
[20:24:27.344]    // Pre-defined
[20:24:27.344]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:27.344]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:24:27.344]    __dp=0x00000000
[20:24:27.345]    __ap=0x00000000
[20:24:27.345]    __traceout=0x00000001      (SWO Trace)
[20:24:27.345]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:27.345]    __FlashAddr=0x00000000
[20:24:27.345]    __FlashLen=0x00000000
[20:24:27.345]    __FlashArg=0x00000000
[20:24:27.346]    __FlashOp=0x00000000
[20:24:27.346]    __Result=0x00000000
[20:24:27.346]    
[20:24:27.346]    // User-defined
[20:24:27.346]    DbgMCU_CR=0x00000007
[20:24:27.346]    DbgMCU_APB1_Fz=0x00000000
[20:24:27.346]    DbgMCU_APB2_Fz=0x00000000
[20:24:27.347]    TraceClk_Pin=0x00040002
[20:24:27.347]    TraceD0_Pin=0x00040003
[20:24:27.347]    TraceD1_Pin=0x00040004
[20:24:27.347]    TraceD2_Pin=0x00040005
[20:24:27.348]    TraceD3_Pin=0x00040006
[20:24:27.348]  </debugvars>
[20:24:27.348]  
[20:24:27.348]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:24:27.348]    <block atomic="false" info="">
[20:24:27.348]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:24:27.349]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.349]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:24:27.350]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.350]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:24:27.350]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.351]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:24:27.351]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:27.351]    </block>
[20:24:27.351]  </sequence>
[20:24:27.352]  
[20:29:23.060]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:29:23.060]  
[20:29:23.060]  <debugvars>
[20:29:23.060]    // Pre-defined
[20:29:23.060]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:29:23.060]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:29:23.061]    __dp=0x00000000
[20:29:23.061]    __ap=0x00000000
[20:29:23.061]    __traceout=0x00000001      (SWO Trace)
[20:29:23.061]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:29:23.062]    __FlashAddr=0x00000000
[20:29:23.062]    __FlashLen=0x00000000
[20:29:23.062]    __FlashArg=0x00000000
[20:29:23.062]    __FlashOp=0x00000000
[20:29:23.063]    __Result=0x00000000
[20:29:23.063]    
[20:29:23.063]    // User-defined
[20:29:23.063]    DbgMCU_CR=0x00000007
[20:29:23.063]    DbgMCU_APB1_Fz=0x00000000
[20:29:23.064]    DbgMCU_APB2_Fz=0x00000000
[20:29:23.064]    TraceClk_Pin=0x00040002
[20:29:23.064]    TraceD0_Pin=0x00040003
[20:29:23.064]    TraceD1_Pin=0x00040004
[20:29:23.064]    TraceD2_Pin=0x00040005
[20:29:23.065]    TraceD3_Pin=0x00040006
[20:29:23.065]  </debugvars>
[20:29:23.065]  
[20:29:23.065]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:29:23.065]    <block atomic="false" info="">
[20:29:23.065]      Sequence("CheckID");
[20:29:23.066]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:29:23.066]          <block atomic="false" info="">
[20:29:23.066]            __var pidr1 = 0;
[20:29:23.066]              // -> [pidr1 <= 0x00000000]
[20:29:23.066]            __var pidr2 = 0;
[20:29:23.066]              // -> [pidr2 <= 0x00000000]
[20:29:23.067]            __var jep106id = 0;
[20:29:23.067]              // -> [jep106id <= 0x00000000]
[20:29:23.067]            __var ROMTableBase = 0;
[20:29:23.067]              // -> [ROMTableBase <= 0x00000000]
[20:29:23.067]            __ap = 0;      // AHB-AP
[20:29:23.067]              // -> [__ap <= 0x00000000]
[20:29:23.067]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:29:23.068]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.068]              // -> [ROMTableBase <= 0xE00FD000]
[20:29:23.068]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:29:23.069]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.069]              // -> [pidr1 <= 0x00000004]
[20:29:23.069]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:29:23.069]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.069]              // -> [pidr2 <= 0x0000001A]
[20:29:23.070]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:29:23.070]              // -> [jep106id <= 0x00000020]
[20:29:23.070]          </block>
[20:29:23.070]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:29:23.070]            // if-block "jep106id != 0x20"
[20:29:23.070]              // =>  FALSE
[20:29:23.070]            // skip if-block "jep106id != 0x20"
[20:29:23.071]          </control>
[20:29:23.071]        </sequence>
[20:29:23.071]    </block>
[20:29:23.071]  </sequence>
[20:29:23.071]  
[20:29:23.086]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:29:23.086]  
[20:29:23.087]  <debugvars>
[20:29:23.087]    // Pre-defined
[20:29:23.087]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:29:23.087]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:29:23.087]    __dp=0x00000000
[20:29:23.087]    __ap=0x00000000
[20:29:23.088]    __traceout=0x00000001      (SWO Trace)
[20:29:23.088]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:29:23.088]    __FlashAddr=0x00000000
[20:29:23.088]    __FlashLen=0x00000000
[20:29:23.088]    __FlashArg=0x00000000
[20:29:23.088]    __FlashOp=0x00000000
[20:29:23.089]    __Result=0x00000000
[20:29:23.089]    
[20:29:23.089]    // User-defined
[20:29:23.089]    DbgMCU_CR=0x00000007
[20:29:23.089]    DbgMCU_APB1_Fz=0x00000000
[20:29:23.089]    DbgMCU_APB2_Fz=0x00000000
[20:29:23.089]    TraceClk_Pin=0x00040002
[20:29:23.090]    TraceD0_Pin=0x00040003
[20:29:23.090]    TraceD1_Pin=0x00040004
[20:29:23.090]    TraceD2_Pin=0x00040005
[20:29:23.090]    TraceD3_Pin=0x00040006
[20:29:23.090]  </debugvars>
[20:29:23.090]  
[20:29:23.091]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:29:23.091]    <block atomic="false" info="">
[20:29:23.091]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:29:23.092]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.092]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:29:23.092]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.092]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:29:23.093]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.093]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:29:23.094]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:29:23.094]    </block>
[20:29:23.094]  </sequence>
[20:29:23.094]  
[20:32:14.686]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:32:14.686]  
[20:32:14.686]  <debugvars>
[20:32:14.686]    // Pre-defined
[20:32:14.686]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:32:14.686]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:32:14.687]    __dp=0x00000000
[20:32:14.687]    __ap=0x00000000
[20:32:14.687]    __traceout=0x00000001      (SWO Trace)
[20:32:14.687]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:32:14.687]    __FlashAddr=0x00000000
[20:32:14.687]    __FlashLen=0x00000000
[20:32:14.687]    __FlashArg=0x00000000
[20:32:14.687]    __FlashOp=0x00000000
[20:32:14.688]    __Result=0x00000000
[20:32:14.688]    
[20:32:14.688]    // User-defined
[20:32:14.688]    DbgMCU_CR=0x00000007
[20:32:14.688]    DbgMCU_APB1_Fz=0x00000000
[20:32:14.688]    DbgMCU_APB2_Fz=0x00000000
[20:32:14.688]    TraceClk_Pin=0x00040002
[20:32:14.688]    TraceD0_Pin=0x00040003
[20:32:14.688]    TraceD1_Pin=0x00040004
[20:32:14.689]    TraceD2_Pin=0x00040005
[20:32:14.689]    TraceD3_Pin=0x00040006
[20:32:14.689]  </debugvars>
[20:32:14.689]  
[20:32:14.689]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:32:14.689]    <block atomic="false" info="">
[20:32:14.689]      Sequence("CheckID");
[20:32:14.690]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:32:14.690]          <block atomic="false" info="">
[20:32:14.690]            __var pidr1 = 0;
[20:32:14.690]              // -> [pidr1 <= 0x00000000]
[20:32:14.690]            __var pidr2 = 0;
[20:32:14.690]              // -> [pidr2 <= 0x00000000]
[20:32:14.690]            __var jep106id = 0;
[20:32:14.690]              // -> [jep106id <= 0x00000000]
[20:32:14.690]            __var ROMTableBase = 0;
[20:32:14.691]              // -> [ROMTableBase <= 0x00000000]
[20:32:14.691]            __ap = 0;      // AHB-AP
[20:32:14.691]              // -> [__ap <= 0x00000000]
[20:32:14.691]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:32:14.691]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.691]              // -> [ROMTableBase <= 0xE00FD000]
[20:32:14.691]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:32:14.692]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.692]              // -> [pidr1 <= 0x00000004]
[20:32:14.692]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:32:14.693]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.693]              // -> [pidr2 <= 0x0000001A]
[20:32:14.693]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:32:14.693]              // -> [jep106id <= 0x00000020]
[20:32:14.693]          </block>
[20:32:14.693]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:32:14.693]            // if-block "jep106id != 0x20"
[20:32:14.693]              // =>  FALSE
[20:32:14.694]            // skip if-block "jep106id != 0x20"
[20:32:14.694]          </control>
[20:32:14.694]        </sequence>
[20:32:14.694]    </block>
[20:32:14.694]  </sequence>
[20:32:14.694]  
[20:32:14.709]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:32:14.709]  
[20:32:14.709]  <debugvars>
[20:32:14.709]    // Pre-defined
[20:32:14.709]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:32:14.709]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:32:14.709]    __dp=0x00000000
[20:32:14.709]    __ap=0x00000000
[20:32:14.709]    __traceout=0x00000001      (SWO Trace)
[20:32:14.710]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:32:14.710]    __FlashAddr=0x00000000
[20:32:14.710]    __FlashLen=0x00000000
[20:32:14.710]    __FlashArg=0x00000000
[20:32:14.710]    __FlashOp=0x00000000
[20:32:14.710]    __Result=0x00000000
[20:32:14.710]    
[20:32:14.710]    // User-defined
[20:32:14.710]    DbgMCU_CR=0x00000007
[20:32:14.711]    DbgMCU_APB1_Fz=0x00000000
[20:32:14.711]    DbgMCU_APB2_Fz=0x00000000
[20:32:14.711]    TraceClk_Pin=0x00040002
[20:32:14.711]    TraceD0_Pin=0x00040003
[20:32:14.711]    TraceD1_Pin=0x00040004
[20:32:14.711]    TraceD2_Pin=0x00040005
[20:32:14.711]    TraceD3_Pin=0x00040006
[20:32:14.711]  </debugvars>
[20:32:14.712]  
[20:32:14.712]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:32:14.712]    <block atomic="false" info="">
[20:32:14.712]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:32:14.713]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.713]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:32:14.714]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.714]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:32:14.714]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.714]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:32:14.715]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:14.715]    </block>
[20:32:14.715]  </sequence>
[20:32:14.715]  
[20:33:43.169]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:33:43.169]  
[20:33:43.169]  <debugvars>
[20:33:43.169]    // Pre-defined
[20:33:43.170]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:33:43.170]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:33:43.170]    __dp=0x00000000
[20:33:43.170]    __ap=0x00000000
[20:33:43.170]    __traceout=0x00000001      (SWO Trace)
[20:33:43.170]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:33:43.171]    __FlashAddr=0x00000000
[20:33:43.171]    __FlashLen=0x00000000
[20:33:43.171]    __FlashArg=0x00000000
[20:33:43.171]    __FlashOp=0x00000000
[20:33:43.171]    __Result=0x00000000
[20:33:43.171]    
[20:33:43.171]    // User-defined
[20:33:43.172]    DbgMCU_CR=0x00000007
[20:33:43.172]    DbgMCU_APB1_Fz=0x00000000
[20:33:43.172]    DbgMCU_APB2_Fz=0x00000000
[20:33:43.172]    TraceClk_Pin=0x00040002
[20:33:43.172]    TraceD0_Pin=0x00040003
[20:33:43.172]    TraceD1_Pin=0x00040004
[20:33:43.172]    TraceD2_Pin=0x00040005
[20:33:43.173]    TraceD3_Pin=0x00040006
[20:33:43.173]  </debugvars>
[20:33:43.173]  
[20:33:43.173]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:33:43.173]    <block atomic="false" info="">
[20:33:43.173]      Sequence("CheckID");
[20:33:43.174]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:33:43.174]          <block atomic="false" info="">
[20:33:43.174]            __var pidr1 = 0;
[20:33:43.174]              // -> [pidr1 <= 0x00000000]
[20:33:43.174]            __var pidr2 = 0;
[20:33:43.174]              // -> [pidr2 <= 0x00000000]
[20:33:43.174]            __var jep106id = 0;
[20:33:43.175]              // -> [jep106id <= 0x00000000]
[20:33:43.175]            __var ROMTableBase = 0;
[20:33:43.175]              // -> [ROMTableBase <= 0x00000000]
[20:33:43.175]            __ap = 0;      // AHB-AP
[20:33:43.175]              // -> [__ap <= 0x00000000]
[20:33:43.175]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:33:43.176]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.176]              // -> [ROMTableBase <= 0xE00FD000]
[20:33:43.176]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:33:43.177]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.177]              // -> [pidr1 <= 0x00000004]
[20:33:43.177]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:33:43.177]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.178]              // -> [pidr2 <= 0x0000001A]
[20:33:43.178]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:33:43.178]              // -> [jep106id <= 0x00000020]
[20:33:43.178]          </block>
[20:33:43.178]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:33:43.178]            // if-block "jep106id != 0x20"
[20:33:43.178]              // =>  FALSE
[20:33:43.179]            // skip if-block "jep106id != 0x20"
[20:33:43.179]          </control>
[20:33:43.179]        </sequence>
[20:33:43.179]    </block>
[20:33:43.179]  </sequence>
[20:33:43.179]  
[20:33:43.194]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:33:43.194]  
[20:33:43.194]  <debugvars>
[20:33:43.194]    // Pre-defined
[20:33:43.195]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:33:43.195]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:33:43.195]    __dp=0x00000000
[20:33:43.195]    __ap=0x00000000
[20:33:43.195]    __traceout=0x00000001      (SWO Trace)
[20:33:43.195]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:33:43.196]    __FlashAddr=0x00000000
[20:33:43.196]    __FlashLen=0x00000000
[20:33:43.196]    __FlashArg=0x00000000
[20:33:43.196]    __FlashOp=0x00000000
[20:33:43.196]    __Result=0x00000000
[20:33:43.197]    
[20:33:43.197]    // User-defined
[20:33:43.197]    DbgMCU_CR=0x00000007
[20:33:43.197]    DbgMCU_APB1_Fz=0x00000000
[20:33:43.197]    DbgMCU_APB2_Fz=0x00000000
[20:33:43.197]    TraceClk_Pin=0x00040002
[20:33:43.198]    TraceD0_Pin=0x00040003
[20:33:43.198]    TraceD1_Pin=0x00040004
[20:33:43.198]    TraceD2_Pin=0x00040005
[20:33:43.198]    TraceD3_Pin=0x00040006
[20:33:43.198]  </debugvars>
[20:33:43.199]  
[20:33:43.199]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:33:43.199]    <block atomic="false" info="">
[20:33:43.199]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:33:43.200]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.200]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:33:43.201]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.201]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:33:43.201]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.201]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:33:43.202]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:43.202]    </block>
[20:33:43.202]  </sequence>
[20:33:43.203]  
[20:35:01.581]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:35:01.581]  
[20:35:01.581]  <debugvars>
[20:35:01.582]    // Pre-defined
[20:35:01.582]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:01.582]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:35:01.582]    __dp=0x00000000
[20:35:01.582]    __ap=0x00000000
[20:35:01.583]    __traceout=0x00000001      (SWO Trace)
[20:35:01.583]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:01.583]    __FlashAddr=0x00000000
[20:35:01.583]    __FlashLen=0x00000000
[20:35:01.583]    __FlashArg=0x00000000
[20:35:01.584]    __FlashOp=0x00000000
[20:35:01.584]    __Result=0x00000000
[20:35:01.584]    
[20:35:01.584]    // User-defined
[20:35:01.584]    DbgMCU_CR=0x00000007
[20:35:01.584]    DbgMCU_APB1_Fz=0x00000000
[20:35:01.584]    DbgMCU_APB2_Fz=0x00000000
[20:35:01.585]    TraceClk_Pin=0x00040002
[20:35:01.585]    TraceD0_Pin=0x00040003
[20:35:01.585]    TraceD1_Pin=0x00040004
[20:35:01.585]    TraceD2_Pin=0x00040005
[20:35:01.585]    TraceD3_Pin=0x00040006
[20:35:01.585]  </debugvars>
[20:35:01.586]  
[20:35:01.586]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:35:01.586]    <block atomic="false" info="">
[20:35:01.586]      Sequence("CheckID");
[20:35:01.586]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:35:01.586]          <block atomic="false" info="">
[20:35:01.587]            __var pidr1 = 0;
[20:35:01.587]              // -> [pidr1 <= 0x00000000]
[20:35:01.587]            __var pidr2 = 0;
[20:35:01.587]              // -> [pidr2 <= 0x00000000]
[20:35:01.587]            __var jep106id = 0;
[20:35:01.587]              // -> [jep106id <= 0x00000000]
[20:35:01.587]            __var ROMTableBase = 0;
[20:35:01.588]              // -> [ROMTableBase <= 0x00000000]
[20:35:01.588]            __ap = 0;      // AHB-AP
[20:35:01.588]              // -> [__ap <= 0x00000000]
[20:35:01.588]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:35:01.589]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.589]              // -> [ROMTableBase <= 0xE00FD000]
[20:35:01.589]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:35:01.589]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.590]              // -> [pidr1 <= 0x00000004]
[20:35:01.590]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:35:01.590]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.590]              // -> [pidr2 <= 0x0000001A]
[20:35:01.590]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:35:01.591]              // -> [jep106id <= 0x00000020]
[20:35:01.591]          </block>
[20:35:01.591]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:35:01.591]            // if-block "jep106id != 0x20"
[20:35:01.591]              // =>  FALSE
[20:35:01.591]            // skip if-block "jep106id != 0x20"
[20:35:01.591]          </control>
[20:35:01.592]        </sequence>
[20:35:01.592]    </block>
[20:35:01.592]  </sequence>
[20:35:01.592]  
[20:35:01.606]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:35:01.606]  
[20:35:01.606]  <debugvars>
[20:35:01.606]    // Pre-defined
[20:35:01.606]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:01.607]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:35:01.607]    __dp=0x00000000
[20:35:01.607]    __ap=0x00000000
[20:35:01.607]    __traceout=0x00000001      (SWO Trace)
[20:35:01.607]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:01.607]    __FlashAddr=0x00000000
[20:35:01.608]    __FlashLen=0x00000000
[20:35:01.608]    __FlashArg=0x00000000
[20:35:01.608]    __FlashOp=0x00000000
[20:35:01.608]    __Result=0x00000000
[20:35:01.608]    
[20:35:01.608]    // User-defined
[20:35:01.608]    DbgMCU_CR=0x00000007
[20:35:01.609]    DbgMCU_APB1_Fz=0x00000000
[20:35:01.609]    DbgMCU_APB2_Fz=0x00000000
[20:35:01.609]    TraceClk_Pin=0x00040002
[20:35:01.609]    TraceD0_Pin=0x00040003
[20:35:01.609]    TraceD1_Pin=0x00040004
[20:35:01.610]    TraceD2_Pin=0x00040005
[20:35:01.610]    TraceD3_Pin=0x00040006
[20:35:01.610]  </debugvars>
[20:35:01.610]  
[20:35:01.610]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:35:01.610]    <block atomic="false" info="">
[20:35:01.611]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:35:01.611]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.611]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:35:01.612]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.612]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:35:01.613]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.613]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:35:01.613]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.613]    </block>
[20:35:01.614]  </sequence>
[20:35:01.614]  
[20:35:01.631]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:35:01.631]  
[20:35:01.631]  <debugvars>
[20:35:01.631]    // Pre-defined
[20:35:01.631]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:01.631]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:35:01.631]    __dp=0x00000000
[20:35:01.632]    __ap=0x00000000
[20:35:01.632]    __traceout=0x00000001      (SWO Trace)
[20:35:01.632]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:01.632]    __FlashAddr=0x00000000
[20:35:01.632]    __FlashLen=0x00000000
[20:35:01.633]    __FlashArg=0x00000000
[20:35:01.633]    __FlashOp=0x00000000
[20:35:01.633]    __Result=0x00000000
[20:35:01.633]    
[20:35:01.633]    // User-defined
[20:35:01.633]    DbgMCU_CR=0x00000007
[20:35:01.633]    DbgMCU_APB1_Fz=0x00000000
[20:35:01.633]    DbgMCU_APB2_Fz=0x00000000
[20:35:01.634]    TraceClk_Pin=0x00040002
[20:35:01.634]    TraceD0_Pin=0x00040003
[20:35:01.634]    TraceD1_Pin=0x00040004
[20:35:01.634]    TraceD2_Pin=0x00040005
[20:35:01.634]    TraceD3_Pin=0x00040006
[20:35:01.634]  </debugvars>
[20:35:01.635]  
[20:35:01.635]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:35:01.635]    <block atomic="false" info="">
[20:35:01.635]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:35:01.635]        // -> [traceSWO <= 0x00000001]
[20:35:01.635]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:35:01.636]        // -> [traceTPIU <= 0x00000000]
[20:35:01.636]    </block>
[20:35:01.636]    <control if="traceSWO" while="" timeout="0" info="">
[20:35:01.636]      // if-block "traceSWO"
[20:35:01.636]        // =>  TRUE
[20:35:01.636]      <block atomic="false" info="">
[20:35:01.636]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:35:01.637]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:35:01.637]            <block atomic="false" info="">
[20:35:01.637]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:35:01.637]                // -> [dbgmcu_val <= 0x00000000]
[20:35:01.637]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:35:01.637]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:35:01.637]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:35:01.638]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.638]                // -> [dbgmcu_val <= 0x00000007]
[20:35:01.638]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:35:01.638]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:35:01.638]              Sequence("ConfigureTraceSWOPin");
[20:35:01.638]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:35:01.639]                  <block atomic="false" info="">
[20:35:01.639]                    __var pin     = 0;
[20:35:01.639]                      // -> [pin <= 0x00000000]
[20:35:01.639]                    __var port    = 0;
[20:35:01.639]                      // -> [port <= 0x00000000]
[20:35:01.639]                    __var portAdr = 0;
[20:35:01.639]                      // -> [portAdr <= 0x00000000]
[20:35:01.639]                    __var pos     = 0;
[20:35:01.639]                      // -> [pos <= 0x00000000]
[20:35:01.640]                    __var SWO_Pin = 0x00010003;          // PB3
[20:35:01.640]                      // -> [SWO_Pin <= 0x00010003]
[20:35:01.640]                  </block>
[20:35:01.640]                  <block atomic="false" info="configure SWO">
[20:35:01.640]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:35:01.640]                      // -> [pin <= 0x00000003]
[20:35:01.640]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:35:01.640]                      // -> [port <= 0x00000001]
[20:35:01.640]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:35:01.641]                      // -> [portAdr <= 0x40020400]
[20:35:01.641]                    pos = pin * 2;
[20:35:01.641]                      // -> [pos <= 0x00000006]
[20:35:01.641]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:35:01.642]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.642]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.642]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:35:01.643]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.643]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.643]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:35:01.644]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.644]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.644]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:35:01.645]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.645]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.645]                  </block>
[20:35:01.645]                  <control if="pin <  8" while="" timeout="0" info="">
[20:35:01.646]                    // if-block "pin <  8"
[20:35:01.646]                      // =>  TRUE
[20:35:01.646]                    <block atomic="false" info="">
[20:35:01.646]                      pos = ((pin    ) & 7) * 4;
[20:35:01.646]                        // -> [pos <= 0x0000000C]
[20:35:01.646]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:35:01.647]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.647]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.647]                    </block>
[20:35:01.648]                    // end if-block "pin <  8"
[20:35:01.648]                  </control>
[20:35:01.648]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:35:01.648]                    // if-block "pin >= 8"
[20:35:01.648]                      // =>  FALSE
[20:35:01.648]                    // skip if-block "pin >= 8"
[20:35:01.648]                  </control>
[20:35:01.648]                </sequence>
[20:35:01.649]            </block>
[20:35:01.649]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:35:01.649]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:35:01.649]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.649]            </block>
[20:35:01.649]          </sequence>
[20:35:01.649]      </block>
[20:35:01.650]      // end if-block "traceSWO"
[20:35:01.650]    </control>
[20:35:01.650]    <control if="traceTPIU" while="" timeout="0" info="">
[20:35:01.650]      // if-block "traceTPIU"
[20:35:01.650]        // =>  FALSE
[20:35:01.650]      // skip if-block "traceTPIU"
[20:35:01.650]    </control>
[20:35:01.651]  </sequence>
[20:35:01.651]  
[20:35:01.654]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:35:01.654]  
[20:35:01.655]  <debugvars>
[20:35:01.655]    // Pre-defined
[20:35:01.655]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:01.655]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:35:01.655]    __dp=0x00000000
[20:35:01.656]    __ap=0x00000000
[20:35:01.656]    __traceout=0x00000001      (SWO Trace)
[20:35:01.656]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:01.656]    __FlashAddr=0x00000000
[20:35:01.656]    __FlashLen=0x00000000
[20:35:01.657]    __FlashArg=0x00000000
[20:35:01.657]    __FlashOp=0x00000000
[20:35:01.657]    __Result=0x00000000
[20:35:01.657]    
[20:35:01.657]    // User-defined
[20:35:01.657]    DbgMCU_CR=0x00000007
[20:35:01.658]    DbgMCU_APB1_Fz=0x00000000
[20:35:01.658]    DbgMCU_APB2_Fz=0x00000000
[20:35:01.658]    TraceClk_Pin=0x00040002
[20:35:01.658]    TraceD0_Pin=0x00040003
[20:35:01.658]    TraceD1_Pin=0x00040004
[20:35:01.658]    TraceD2_Pin=0x00040005
[20:35:01.659]    TraceD3_Pin=0x00040006
[20:35:01.659]  </debugvars>
[20:35:01.659]  
[20:35:01.659]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:35:01.659]    <block atomic="false" info="">
[20:35:01.660]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:35:01.660]        // -> [traceSWO <= 0x00000001]
[20:35:01.660]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:35:01.660]        // -> [traceTPIU <= 0x00000000]
[20:35:01.660]    </block>
[20:35:01.660]    <control if="traceSWO" while="" timeout="0" info="">
[20:35:01.660]      // if-block "traceSWO"
[20:35:01.660]        // =>  TRUE
[20:35:01.661]      <block atomic="false" info="">
[20:35:01.661]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:35:01.661]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:35:01.661]            <block atomic="false" info="">
[20:35:01.661]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:35:01.661]                // -> [dbgmcu_val <= 0x00000000]
[20:35:01.662]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:35:01.662]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:35:01.662]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:35:01.663]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.663]                // -> [dbgmcu_val <= 0x00000007]
[20:35:01.663]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:35:01.663]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:35:01.663]              Sequence("ConfigureTraceSWOPin");
[20:35:01.663]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:35:01.663]                  <block atomic="false" info="">
[20:35:01.663]                    __var pin     = 0;
[20:35:01.664]                      // -> [pin <= 0x00000000]
[20:35:01.664]                    __var port    = 0;
[20:35:01.664]                      // -> [port <= 0x00000000]
[20:35:01.664]                    __var portAdr = 0;
[20:35:01.664]                      // -> [portAdr <= 0x00000000]
[20:35:01.664]                    __var pos     = 0;
[20:35:01.665]                      // -> [pos <= 0x00000000]
[20:35:01.665]                    __var SWO_Pin = 0x00010003;          // PB3
[20:35:01.665]                      // -> [SWO_Pin <= 0x00010003]
[20:35:01.665]                  </block>
[20:35:01.665]                  <block atomic="false" info="configure SWO">
[20:35:01.665]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:35:01.665]                      // -> [pin <= 0x00000003]
[20:35:01.666]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:35:01.666]                      // -> [port <= 0x00000001]
[20:35:01.666]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:35:01.666]                      // -> [portAdr <= 0x40020400]
[20:35:01.666]                    pos = pin * 2;
[20:35:01.666]                      // -> [pos <= 0x00000006]
[20:35:01.666]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:35:01.667]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.667]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.667]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:35:01.668]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.668]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.668]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:35:01.669]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.669]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.669]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:35:01.670]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.670]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.670]                  </block>
[20:35:01.671]                  <control if="pin <  8" while="" timeout="0" info="">
[20:35:01.671]                    // if-block "pin <  8"
[20:35:01.671]                      // =>  TRUE
[20:35:01.671]                    <block atomic="false" info="">
[20:35:01.671]                      pos = ((pin    ) & 7) * 4;
[20:35:01.671]                        // -> [pos <= 0x0000000C]
[20:35:01.671]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:35:01.672]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.672]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.672]                    </block>
[20:35:01.673]                    // end if-block "pin <  8"
[20:35:01.673]                  </control>
[20:35:01.673]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:35:01.673]                    // if-block "pin >= 8"
[20:35:01.673]                      // =>  FALSE
[20:35:01.673]                    // skip if-block "pin >= 8"
[20:35:01.673]                  </control>
[20:35:01.673]                </sequence>
[20:35:01.674]            </block>
[20:35:01.674]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:35:01.674]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:35:01.674]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.674]            </block>
[20:35:01.675]          </sequence>
[20:35:01.675]      </block>
[20:35:01.675]      // end if-block "traceSWO"
[20:35:01.675]    </control>
[20:35:01.675]    <control if="traceTPIU" while="" timeout="0" info="">
[20:35:01.675]      // if-block "traceTPIU"
[20:35:01.675]        // =>  FALSE
[20:35:01.675]      // skip if-block "traceTPIU"
[20:35:01.676]    </control>
[20:35:01.676]  </sequence>
[20:35:01.676]  
[20:35:01.888]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:35:01.888]  
[20:35:01.888]  <debugvars>
[20:35:01.888]    // Pre-defined
[20:35:01.889]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:01.889]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:35:01.889]    __dp=0x00000000
[20:35:01.889]    __ap=0x00000000
[20:35:01.889]    __traceout=0x00000001      (SWO Trace)
[20:35:01.890]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:01.890]    __FlashAddr=0x00000000
[20:35:01.890]    __FlashLen=0x00000000
[20:35:01.890]    __FlashArg=0x00000000
[20:35:01.890]    __FlashOp=0x00000000
[20:35:01.891]    __Result=0x00000000
[20:35:01.891]    
[20:35:01.891]    // User-defined
[20:35:01.891]    DbgMCU_CR=0x00000007
[20:35:01.891]    DbgMCU_APB1_Fz=0x00000000
[20:35:01.891]    DbgMCU_APB2_Fz=0x00000000
[20:35:01.892]    TraceClk_Pin=0x00040002
[20:35:01.892]    TraceD0_Pin=0x00040003
[20:35:01.892]    TraceD1_Pin=0x00040004
[20:35:01.892]    TraceD2_Pin=0x00040005
[20:35:01.893]    TraceD3_Pin=0x00040006
[20:35:01.893]  </debugvars>
[20:35:01.893]  
[20:35:01.893]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:35:01.893]    <block atomic="false" info="">
[20:35:01.893]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:35:01.894]        // -> [traceSWO <= 0x00000001]
[20:35:01.894]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:35:01.894]        // -> [traceTPIU <= 0x00000000]
[20:35:01.894]    </block>
[20:35:01.894]    <control if="traceSWO" while="" timeout="0" info="">
[20:35:01.895]      // if-block "traceSWO"
[20:35:01.895]        // =>  TRUE
[20:35:01.895]      <block atomic="false" info="">
[20:35:01.895]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:35:01.895]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:35:01.895]            <block atomic="false" info="">
[20:35:01.896]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:35:01.896]                // -> [dbgmcu_val <= 0x00000000]
[20:35:01.896]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:35:01.896]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:35:01.896]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:35:01.897]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.897]                // -> [dbgmcu_val <= 0x00000007]
[20:35:01.897]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:35:01.897]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:35:01.897]              Sequence("ConfigureTraceSWOPin");
[20:35:01.898]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:35:01.898]                  <block atomic="false" info="">
[20:35:01.898]                    __var pin     = 0;
[20:35:01.898]                      // -> [pin <= 0x00000000]
[20:35:01.898]                    __var port    = 0;
[20:35:01.899]                      // -> [port <= 0x00000000]
[20:35:01.899]                    __var portAdr = 0;
[20:35:01.899]                      // -> [portAdr <= 0x00000000]
[20:35:01.899]                    __var pos     = 0;
[20:35:01.899]                      // -> [pos <= 0x00000000]
[20:35:01.899]                    __var SWO_Pin = 0x00010003;          // PB3
[20:35:01.900]                      // -> [SWO_Pin <= 0x00010003]
[20:35:01.900]                  </block>
[20:35:01.900]                  <block atomic="false" info="configure SWO">
[20:35:01.900]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:35:01.900]                      // -> [pin <= 0x00000003]
[20:35:01.900]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:35:01.901]                      // -> [port <= 0x00000001]
[20:35:01.901]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:35:01.901]                      // -> [portAdr <= 0x40020400]
[20:35:01.901]                    pos = pin * 2;
[20:35:01.901]                      // -> [pos <= 0x00000006]
[20:35:01.901]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:35:01.902]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.902]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.903]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:35:01.903]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.904]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.904]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:35:01.904]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.905]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.905]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:35:01.905]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.906]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.906]                  </block>
[20:35:01.906]                  <control if="pin <  8" while="" timeout="0" info="">
[20:35:01.906]                    // if-block "pin <  8"
[20:35:01.907]                      // =>  TRUE
[20:35:01.907]                    <block atomic="false" info="">
[20:35:01.907]                      pos = ((pin    ) & 7) * 4;
[20:35:01.907]                        // -> [pos <= 0x0000000C]
[20:35:01.907]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:35:01.908]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.908]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.908]                    </block>
[20:35:01.909]                    // end if-block "pin <  8"
[20:35:01.909]                  </control>
[20:35:01.909]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:35:01.909]                    // if-block "pin >= 8"
[20:35:01.909]                      // =>  FALSE
[20:35:01.909]                    // skip if-block "pin >= 8"
[20:35:01.910]                  </control>
[20:35:01.910]                </sequence>
[20:35:01.910]            </block>
[20:35:01.910]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:35:01.910]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:35:01.911]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:01.911]            </block>
[20:35:01.911]          </sequence>
[20:35:01.911]      </block>
[20:35:01.911]      // end if-block "traceSWO"
[20:35:01.911]    </control>
[20:35:01.912]    <control if="traceTPIU" while="" timeout="0" info="">
[20:35:01.912]      // if-block "traceTPIU"
[20:35:01.912]        // =>  FALSE
[20:35:01.912]      // skip if-block "traceTPIU"
[20:35:01.912]    </control>
[20:35:01.912]  </sequence>
[20:35:01.913]  
[20:35:43.550]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:35:43.550]  
[20:35:43.550]  <debugvars>
[20:35:43.551]    // Pre-defined
[20:35:43.551]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:43.551]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:35:43.551]    __dp=0x00000000
[20:35:43.551]    __ap=0x00000000
[20:35:43.552]    __traceout=0x00000001      (SWO Trace)
[20:35:43.552]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:43.552]    __FlashAddr=0x00000000
[20:35:43.552]    __FlashLen=0x00000000
[20:35:43.552]    __FlashArg=0x00000000
[20:35:43.552]    __FlashOp=0x00000000
[20:35:43.552]    __Result=0x00000000
[20:35:43.553]    
[20:35:43.553]    // User-defined
[20:35:43.553]    DbgMCU_CR=0x00000007
[20:35:43.553]    DbgMCU_APB1_Fz=0x00000000
[20:35:43.553]    DbgMCU_APB2_Fz=0x00000000
[20:35:43.553]    TraceClk_Pin=0x00040002
[20:35:43.553]    TraceD0_Pin=0x00040003
[20:35:43.553]    TraceD1_Pin=0x00040004
[20:35:43.554]    TraceD2_Pin=0x00040005
[20:35:43.554]    TraceD3_Pin=0x00040006
[20:35:43.554]  </debugvars>
[20:35:43.554]  
[20:35:43.554]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:35:43.554]    <block atomic="false" info="">
[20:35:43.554]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:35:43.555]        // -> [traceSWO <= 0x00000001]
[20:35:43.555]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:35:43.555]        // -> [traceTPIU <= 0x00000000]
[20:35:43.555]    </block>
[20:35:43.555]    <control if="traceSWO" while="" timeout="0" info="">
[20:35:43.555]      // if-block "traceSWO"
[20:35:43.555]        // =>  TRUE
[20:35:43.555]      <block atomic="false" info="">
[20:35:43.556]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:35:43.556]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:35:43.556]            <block atomic="false" info="">
[20:35:43.556]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:35:43.556]                // -> [dbgmcu_val <= 0x00000000]
[20:35:43.556]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:35:43.556]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:35:43.556]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:35:43.557]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.557]                // -> [dbgmcu_val <= 0x00000007]
[20:35:43.557]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:35:43.557]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:35:43.558]              Sequence("ConfigureTraceSWOPin");
[20:35:43.558]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:35:43.558]                  <block atomic="false" info="">
[20:35:43.558]                    __var pin     = 0;
[20:35:43.558]                      // -> [pin <= 0x00000000]
[20:35:43.558]                    __var port    = 0;
[20:35:43.558]                      // -> [port <= 0x00000000]
[20:35:43.558]                    __var portAdr = 0;
[20:35:43.558]                      // -> [portAdr <= 0x00000000]
[20:35:43.559]                    __var pos     = 0;
[20:35:43.559]                      // -> [pos <= 0x00000000]
[20:35:43.559]                    __var SWO_Pin = 0x00010003;          // PB3
[20:35:43.559]                      // -> [SWO_Pin <= 0x00010003]
[20:35:43.559]                  </block>
[20:35:43.559]                  <block atomic="false" info="configure SWO">
[20:35:43.559]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:35:43.559]                      // -> [pin <= 0x00000003]
[20:35:43.559]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:35:43.560]                      // -> [port <= 0x00000001]
[20:35:43.560]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:35:43.560]                      // -> [portAdr <= 0x40020400]
[20:35:43.560]                    pos = pin * 2;
[20:35:43.560]                      // -> [pos <= 0x00000006]
[20:35:43.560]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:35:43.561]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.561]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.561]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:35:43.561]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.562]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.562]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:35:43.562]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.563]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.563]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:35:43.563]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.564]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.564]                  </block>
[20:35:43.564]                  <control if="pin <  8" while="" timeout="0" info="">
[20:35:43.564]                    // if-block "pin <  8"
[20:35:43.564]                      // =>  TRUE
[20:35:43.564]                    <block atomic="false" info="">
[20:35:43.565]                      pos = ((pin    ) & 7) * 4;
[20:35:43.565]                        // -> [pos <= 0x0000000C]
[20:35:43.565]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:35:43.565]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.566]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.566]                    </block>
[20:35:43.566]                    // end if-block "pin <  8"
[20:35:43.566]                  </control>
[20:35:43.566]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:35:43.566]                    // if-block "pin >= 8"
[20:35:43.567]                      // =>  FALSE
[20:35:43.567]                    // skip if-block "pin >= 8"
[20:35:43.567]                  </control>
[20:35:43.567]                </sequence>
[20:35:43.567]            </block>
[20:35:43.567]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:35:43.567]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:35:43.568]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:43.568]            </block>
[20:35:43.568]          </sequence>
[20:35:43.568]      </block>
[20:35:43.568]      // end if-block "traceSWO"
[20:35:43.568]    </control>
[20:35:43.568]    <control if="traceTPIU" while="" timeout="0" info="">
[20:35:43.568]      // if-block "traceTPIU"
[20:35:43.569]        // =>  FALSE
[20:35:43.569]      // skip if-block "traceTPIU"
[20:35:43.569]    </control>
[20:35:43.569]  </sequence>
[20:35:43.569]  
[20:37:55.878]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:37:55.878]  
[20:37:55.878]  <debugvars>
[20:37:55.878]    // Pre-defined
[20:37:55.878]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:55.878]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:37:55.879]    __dp=0x00000000
[20:37:55.879]    __ap=0x00000000
[20:37:55.879]    __traceout=0x00000001      (SWO Trace)
[20:37:55.879]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:55.879]    __FlashAddr=0x00000000
[20:37:55.879]    __FlashLen=0x00000000
[20:37:55.880]    __FlashArg=0x00000000
[20:37:55.880]    __FlashOp=0x00000000
[20:37:55.880]    __Result=0x00000000
[20:37:55.880]    
[20:37:55.880]    // User-defined
[20:37:55.880]    DbgMCU_CR=0x00000007
[20:37:55.880]    DbgMCU_APB1_Fz=0x00000000
[20:37:55.881]    DbgMCU_APB2_Fz=0x00000000
[20:37:55.881]    TraceClk_Pin=0x00040002
[20:37:55.881]    TraceD0_Pin=0x00040003
[20:37:55.881]    TraceD1_Pin=0x00040004
[20:37:55.881]    TraceD2_Pin=0x00040005
[20:37:55.881]    TraceD3_Pin=0x00040006
[20:37:55.882]  </debugvars>
[20:37:55.882]  
[20:37:55.882]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:37:55.882]    <block atomic="false" info="">
[20:37:55.882]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:37:55.882]        // -> [traceSWO <= 0x00000001]
[20:37:55.883]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:37:55.883]        // -> [traceTPIU <= 0x00000000]
[20:37:55.883]    </block>
[20:37:55.883]    <control if="traceSWO" while="" timeout="0" info="">
[20:37:55.883]      // if-block "traceSWO"
[20:37:55.883]        // =>  TRUE
[20:37:55.884]      <block atomic="false" info="">
[20:37:55.884]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:37:55.884]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:37:55.884]            <block atomic="false" info="">
[20:37:55.884]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:37:55.884]                // -> [dbgmcu_val <= 0x00000000]
[20:37:55.884]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:37:55.885]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:37:55.885]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:37:55.885]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.885]                // -> [dbgmcu_val <= 0x00000007]
[20:37:55.886]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:37:55.886]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:37:55.886]              Sequence("ConfigureTraceSWOPin");
[20:37:55.886]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:37:55.886]                  <block atomic="false" info="">
[20:37:55.886]                    __var pin     = 0;
[20:37:55.887]                      // -> [pin <= 0x00000000]
[20:37:55.887]                    __var port    = 0;
[20:37:55.887]                      // -> [port <= 0x00000000]
[20:37:55.887]                    __var portAdr = 0;
[20:37:55.887]                      // -> [portAdr <= 0x00000000]
[20:37:55.887]                    __var pos     = 0;
[20:37:55.887]                      // -> [pos <= 0x00000000]
[20:37:55.888]                    __var SWO_Pin = 0x00010003;          // PB3
[20:37:55.888]                      // -> [SWO_Pin <= 0x00010003]
[20:37:55.888]                  </block>
[20:37:55.888]                  <block atomic="false" info="configure SWO">
[20:37:55.888]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:37:55.888]                      // -> [pin <= 0x00000003]
[20:37:55.889]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:37:55.889]                      // -> [port <= 0x00000001]
[20:37:55.889]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:37:55.889]                      // -> [portAdr <= 0x40020400]
[20:37:55.889]                    pos = pin * 2;
[20:37:55.889]                      // -> [pos <= 0x00000006]
[20:37:55.889]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:37:55.890]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.890]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.890]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:37:55.891]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.891]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.892]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:37:55.892]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.893]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.893]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:37:55.893]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.894]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.894]                  </block>
[20:37:55.894]                  <control if="pin <  8" while="" timeout="0" info="">
[20:37:55.894]                    // if-block "pin <  8"
[20:37:55.894]                      // =>  TRUE
[20:37:55.894]                    <block atomic="false" info="">
[20:37:55.894]                      pos = ((pin    ) & 7) * 4;
[20:37:55.895]                        // -> [pos <= 0x0000000C]
[20:37:55.895]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:37:55.895]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.895]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.896]                    </block>
[20:37:55.896]                    // end if-block "pin <  8"
[20:37:55.896]                  </control>
[20:37:55.896]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:37:55.896]                    // if-block "pin >= 8"
[20:37:55.896]                      // =>  FALSE
[20:37:55.896]                    // skip if-block "pin >= 8"
[20:37:55.896]                  </control>
[20:37:55.897]                </sequence>
[20:37:55.897]            </block>
[20:37:55.897]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:37:55.897]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:37:55.897]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:55.897]            </block>
[20:37:55.898]          </sequence>
[20:37:55.898]      </block>
[20:37:55.898]      // end if-block "traceSWO"
[20:37:55.898]    </control>
[20:37:55.898]    <control if="traceTPIU" while="" timeout="0" info="">
[20:37:55.898]      // if-block "traceTPIU"
[20:37:55.898]        // =>  FALSE
[20:37:55.898]      // skip if-block "traceTPIU"
[20:37:55.898]    </control>
[20:37:55.899]  </sequence>
[20:37:55.899]  
[20:38:04.836]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:38:04.836]  
[20:38:04.837]  <debugvars>
[20:38:04.837]    // Pre-defined
[20:38:04.837]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:04.838]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:04.838]    __dp=0x00000000
[20:38:04.838]    __ap=0x00000000
[20:38:04.838]    __traceout=0x00000001      (SWO Trace)
[20:38:04.838]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:04.839]    __FlashAddr=0x00000000
[20:38:04.839]    __FlashLen=0x00000000
[20:38:04.839]    __FlashArg=0x00000000
[20:38:04.839]    __FlashOp=0x00000000
[20:38:04.840]    __Result=0x00000000
[20:38:04.840]    
[20:38:04.840]    // User-defined
[20:38:04.840]    DbgMCU_CR=0x00000007
[20:38:04.840]    DbgMCU_APB1_Fz=0x00000000
[20:38:04.841]    DbgMCU_APB2_Fz=0x00000000
[20:38:04.841]    TraceClk_Pin=0x00040002
[20:38:04.841]    TraceD0_Pin=0x00040003
[20:38:04.841]    TraceD1_Pin=0x00040004
[20:38:04.841]    TraceD2_Pin=0x00040005
[20:38:04.842]    TraceD3_Pin=0x00040006
[20:38:04.842]  </debugvars>
[20:38:04.842]  
[20:38:04.842]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:38:04.842]    <block atomic="false" info="">
[20:38:04.843]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:38:04.843]        // -> [traceSWO <= 0x00000001]
[20:38:04.843]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:38:04.843]        // -> [traceTPIU <= 0x00000000]
[20:38:04.843]    </block>
[20:38:04.844]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:04.844]      // if-block "traceSWO"
[20:38:04.844]        // =>  TRUE
[20:38:04.844]      <block atomic="false" info="">
[20:38:04.844]        Sequence("DisableTraceSWO");
[20:38:04.844]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:38:04.845]            <block atomic="false" info="">
[20:38:04.845]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:04.845]                // -> [dbgmcu_val <= 0x00000000]
[20:38:04.845]            </block>
[20:38:04.845]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:04.846]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:38:04.846]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:04.847]                // -> [dbgmcu_val <= 0x00000007]
[20:38:04.847]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:38:04.847]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:04.847]            </block>
[20:38:04.847]          </sequence>
[20:38:04.848]      </block>
[20:38:04.848]      // end if-block "traceSWO"
[20:38:04.848]    </control>
[20:38:04.848]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:04.848]      // if-block "traceTPIU"
[20:38:04.848]        // =>  FALSE
[20:38:04.848]      // skip if-block "traceTPIU"
[20:38:04.849]    </control>
[20:38:04.849]  </sequence>
[20:38:04.849]  
[20:38:22.661]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:38:22.661]  
[20:38:22.661]  <debugvars>
[20:38:22.662]    // Pre-defined
[20:38:22.662]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:22.662]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:38:22.662]    __dp=0x00000000
[20:38:22.663]    __ap=0x00000000
[20:38:22.663]    __traceout=0x00000001      (SWO Trace)
[20:38:22.663]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:22.663]    __FlashAddr=0x00000000
[20:38:22.663]    __FlashLen=0x00000000
[20:38:22.663]    __FlashArg=0x00000000
[20:38:22.664]    __FlashOp=0x00000000
[20:38:22.664]    __Result=0x00000000
[20:38:22.664]    
[20:38:22.664]    // User-defined
[20:38:22.664]    DbgMCU_CR=0x00000007
[20:38:22.664]    DbgMCU_APB1_Fz=0x00000000
[20:38:22.665]    DbgMCU_APB2_Fz=0x00000000
[20:38:22.665]    TraceClk_Pin=0x00040002
[20:38:22.665]    TraceD0_Pin=0x00040003
[20:38:22.665]    TraceD1_Pin=0x00040004
[20:38:22.665]    TraceD2_Pin=0x00040005
[20:38:22.666]    TraceD3_Pin=0x00040006
[20:38:22.666]  </debugvars>
[20:38:22.666]  
[20:38:22.666]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:38:22.666]    <block atomic="false" info="">
[20:38:22.667]      Sequence("CheckID");
[20:38:22.667]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:38:22.667]          <block atomic="false" info="">
[20:38:22.667]            __var pidr1 = 0;
[20:38:22.667]              // -> [pidr1 <= 0x00000000]
[20:38:22.668]            __var pidr2 = 0;
[20:38:22.668]              // -> [pidr2 <= 0x00000000]
[20:38:22.668]            __var jep106id = 0;
[20:38:22.668]              // -> [jep106id <= 0x00000000]
[20:38:22.668]            __var ROMTableBase = 0;
[20:38:22.668]              // -> [ROMTableBase <= 0x00000000]
[20:38:22.669]            __ap = 0;      // AHB-AP
[20:38:22.669]              // -> [__ap <= 0x00000000]
[20:38:22.669]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:38:22.669]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.670]              // -> [ROMTableBase <= 0xE00FD000]
[20:38:22.670]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:38:22.670]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.670]              // -> [pidr1 <= 0x00000004]
[20:38:22.671]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:38:22.671]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.671]              // -> [pidr2 <= 0x0000001A]
[20:38:22.672]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:38:22.672]              // -> [jep106id <= 0x00000020]
[20:38:22.672]          </block>
[20:38:22.672]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:38:22.672]            // if-block "jep106id != 0x20"
[20:38:22.672]              // =>  FALSE
[20:38:22.673]            // skip if-block "jep106id != 0x20"
[20:38:22.673]          </control>
[20:38:22.673]        </sequence>
[20:38:22.673]    </block>
[20:38:22.673]  </sequence>
[20:38:22.673]  
[20:38:22.688]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:38:22.688]  
[20:38:22.688]  <debugvars>
[20:38:22.689]    // Pre-defined
[20:38:22.689]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:22.689]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:38:22.689]    __dp=0x00000000
[20:38:22.689]    __ap=0x00000000
[20:38:22.690]    __traceout=0x00000001      (SWO Trace)
[20:38:22.690]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:22.690]    __FlashAddr=0x00000000
[20:38:22.690]    __FlashLen=0x00000000
[20:38:22.690]    __FlashArg=0x00000000
[20:38:22.690]    __FlashOp=0x00000000
[20:38:22.690]    __Result=0x00000000
[20:38:22.691]    
[20:38:22.691]    // User-defined
[20:38:22.691]    DbgMCU_CR=0x00000007
[20:38:22.691]    DbgMCU_APB1_Fz=0x00000000
[20:38:22.691]    DbgMCU_APB2_Fz=0x00000000
[20:38:22.691]    TraceClk_Pin=0x00040002
[20:38:22.691]    TraceD0_Pin=0x00040003
[20:38:22.692]    TraceD1_Pin=0x00040004
[20:38:22.692]    TraceD2_Pin=0x00040005
[20:38:22.692]    TraceD3_Pin=0x00040006
[20:38:22.692]  </debugvars>
[20:38:22.692]  
[20:38:22.692]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:38:22.692]    <block atomic="false" info="">
[20:38:22.693]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:38:22.693]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.693]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:38:22.694]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.694]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:38:22.694]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.695]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:38:22.695]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:22.695]    </block>
[20:38:22.695]  </sequence>
[20:38:22.696]  
[20:38:53.296]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:38:53.296]  
[20:38:53.296]  <debugvars>
[20:38:53.296]    // Pre-defined
[20:38:53.296]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:53.296]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:53.297]    __dp=0x00000000
[20:38:53.297]    __ap=0x00000000
[20:38:53.297]    __traceout=0x00000001      (SWO Trace)
[20:38:53.297]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:53.297]    __FlashAddr=0x00000000
[20:38:53.298]    __FlashLen=0x00000000
[20:38:53.298]    __FlashArg=0x00000000
[20:38:53.298]    __FlashOp=0x00000000
[20:38:53.298]    __Result=0x00000000
[20:38:53.298]    
[20:38:53.298]    // User-defined
[20:38:53.299]    DbgMCU_CR=0x00000007
[20:38:53.299]    DbgMCU_APB1_Fz=0x00000000
[20:38:53.299]    DbgMCU_APB2_Fz=0x00000000
[20:38:53.299]    TraceClk_Pin=0x00040002
[20:38:53.299]    TraceD0_Pin=0x00040003
[20:38:53.300]    TraceD1_Pin=0x00040004
[20:38:53.300]    TraceD2_Pin=0x00040005
[20:38:53.300]    TraceD3_Pin=0x00040006
[20:38:53.300]  </debugvars>
[20:38:53.300]  
[20:38:53.300]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:38:53.301]    <block atomic="false" info="">
[20:38:53.301]      Sequence("CheckID");
[20:38:53.301]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:38:53.301]          <block atomic="false" info="">
[20:38:53.301]            __var pidr1 = 0;
[20:38:53.301]              // -> [pidr1 <= 0x00000000]
[20:38:53.301]            __var pidr2 = 0;
[20:38:53.302]              // -> [pidr2 <= 0x00000000]
[20:38:53.302]            __var jep106id = 0;
[20:38:53.302]              // -> [jep106id <= 0x00000000]
[20:38:53.302]            __var ROMTableBase = 0;
[20:38:53.302]              // -> [ROMTableBase <= 0x00000000]
[20:38:53.302]            __ap = 0;      // AHB-AP
[20:38:53.303]              // -> [__ap <= 0x00000000]
[20:38:53.303]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:38:53.303]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.303]              // -> [ROMTableBase <= 0xE00FD000]
[20:38:53.303]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:38:53.304]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.304]              // -> [pidr1 <= 0x00000004]
[20:38:53.304]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:38:53.305]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.305]              // -> [pidr2 <= 0x0000001A]
[20:38:53.305]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:38:53.305]              // -> [jep106id <= 0x00000020]
[20:38:53.305]          </block>
[20:38:53.305]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:38:53.305]            // if-block "jep106id != 0x20"
[20:38:53.306]              // =>  FALSE
[20:38:53.306]            // skip if-block "jep106id != 0x20"
[20:38:53.306]          </control>
[20:38:53.306]        </sequence>
[20:38:53.306]    </block>
[20:38:53.306]  </sequence>
[20:38:53.306]  
[20:38:53.321]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:38:53.321]  
[20:38:53.321]  <debugvars>
[20:38:53.321]    // Pre-defined
[20:38:53.321]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:53.321]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:53.321]    __dp=0x00000000
[20:38:53.322]    __ap=0x00000000
[20:38:53.322]    __traceout=0x00000001      (SWO Trace)
[20:38:53.322]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:53.322]    __FlashAddr=0x00000000
[20:38:53.322]    __FlashLen=0x00000000
[20:38:53.323]    __FlashArg=0x00000000
[20:38:53.323]    __FlashOp=0x00000000
[20:38:53.323]    __Result=0x00000000
[20:38:53.323]    
[20:38:53.323]    // User-defined
[20:38:53.323]    DbgMCU_CR=0x00000007
[20:38:53.323]    DbgMCU_APB1_Fz=0x00000000
[20:38:53.324]    DbgMCU_APB2_Fz=0x00000000
[20:38:53.324]    TraceClk_Pin=0x00040002
[20:38:53.324]    TraceD0_Pin=0x00040003
[20:38:53.324]    TraceD1_Pin=0x00040004
[20:38:53.324]    TraceD2_Pin=0x00040005
[20:38:53.325]    TraceD3_Pin=0x00040006
[20:38:53.325]  </debugvars>
[20:38:53.325]  
[20:38:53.325]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:38:53.325]    <block atomic="false" info="">
[20:38:53.325]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:38:53.326]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.326]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:38:53.327]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.327]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:38:53.327]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.328]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:38:53.328]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.328]    </block>
[20:38:53.328]  </sequence>
[20:38:53.329]  
[20:38:53.345]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:38:53.345]  
[20:38:53.345]  <debugvars>
[20:38:53.345]    // Pre-defined
[20:38:53.345]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:53.346]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:53.346]    __dp=0x00000000
[20:38:53.346]    __ap=0x00000000
[20:38:53.346]    __traceout=0x00000001      (SWO Trace)
[20:38:53.346]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:53.346]    __FlashAddr=0x00000000
[20:38:53.347]    __FlashLen=0x00000000
[20:38:53.347]    __FlashArg=0x00000000
[20:38:53.347]    __FlashOp=0x00000000
[20:38:53.347]    __Result=0x00000000
[20:38:53.347]    
[20:38:53.347]    // User-defined
[20:38:53.347]    DbgMCU_CR=0x00000007
[20:38:53.348]    DbgMCU_APB1_Fz=0x00000000
[20:38:53.348]    DbgMCU_APB2_Fz=0x00000000
[20:38:53.348]    TraceClk_Pin=0x00040002
[20:38:53.348]    TraceD0_Pin=0x00040003
[20:38:53.348]    TraceD1_Pin=0x00040004
[20:38:53.348]    TraceD2_Pin=0x00040005
[20:38:53.349]    TraceD3_Pin=0x00040006
[20:38:53.349]  </debugvars>
[20:38:53.349]  
[20:38:53.349]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:38:53.349]    <block atomic="false" info="">
[20:38:53.350]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:38:53.350]        // -> [traceSWO <= 0x00000001]
[20:38:53.350]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:38:53.350]        // -> [traceTPIU <= 0x00000000]
[20:38:53.350]    </block>
[20:38:53.350]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:53.351]      // if-block "traceSWO"
[20:38:53.351]        // =>  TRUE
[20:38:53.351]      <block atomic="false" info="">
[20:38:53.351]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:38:53.351]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:38:53.351]            <block atomic="false" info="">
[20:38:53.352]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:53.352]                // -> [dbgmcu_val <= 0x00000000]
[20:38:53.352]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:38:53.352]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:38:53.352]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:38:53.353]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.353]                // -> [dbgmcu_val <= 0x00000007]
[20:38:53.353]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:38:53.353]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:38:53.353]              Sequence("ConfigureTraceSWOPin");
[20:38:53.353]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:38:53.354]                  <block atomic="false" info="">
[20:38:53.354]                    __var pin     = 0;
[20:38:53.354]                      // -> [pin <= 0x00000000]
[20:38:53.354]                    __var port    = 0;
[20:38:53.354]                      // -> [port <= 0x00000000]
[20:38:53.354]                    __var portAdr = 0;
[20:38:53.354]                      // -> [portAdr <= 0x00000000]
[20:38:53.355]                    __var pos     = 0;
[20:38:53.355]                      // -> [pos <= 0x00000000]
[20:38:53.355]                    __var SWO_Pin = 0x00010003;          // PB3
[20:38:53.355]                      // -> [SWO_Pin <= 0x00010003]
[20:38:53.355]                  </block>
[20:38:53.355]                  <block atomic="false" info="configure SWO">
[20:38:53.355]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:38:53.356]                      // -> [pin <= 0x00000003]
[20:38:53.356]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:38:53.356]                      // -> [port <= 0x00000001]
[20:38:53.356]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:38:53.356]                      // -> [portAdr <= 0x40020400]
[20:38:53.356]                    pos = pin * 2;
[20:38:53.356]                      // -> [pos <= 0x00000006]
[20:38:53.357]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:38:53.357]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.357]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.358]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:38:53.358]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.359]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.359]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:38:53.359]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.360]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.360]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:38:53.360]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.361]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.361]                  </block>
[20:38:53.361]                  <control if="pin <  8" while="" timeout="0" info="">
[20:38:53.361]                    // if-block "pin <  8"
[20:38:53.361]                      // =>  TRUE
[20:38:53.361]                    <block atomic="false" info="">
[20:38:53.362]                      pos = ((pin    ) & 7) * 4;
[20:38:53.362]                        // -> [pos <= 0x0000000C]
[20:38:53.362]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:38:53.362]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.363]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.363]                    </block>
[20:38:53.363]                    // end if-block "pin <  8"
[20:38:53.363]                  </control>
[20:38:53.363]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:38:53.363]                    // if-block "pin >= 8"
[20:38:53.363]                      // =>  FALSE
[20:38:53.364]                    // skip if-block "pin >= 8"
[20:38:53.364]                  </control>
[20:38:53.364]                </sequence>
[20:38:53.364]            </block>
[20:38:53.364]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:53.364]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:38:53.365]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.365]            </block>
[20:38:53.365]          </sequence>
[20:38:53.365]      </block>
[20:38:53.365]      // end if-block "traceSWO"
[20:38:53.365]    </control>
[20:38:53.365]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:53.365]      // if-block "traceTPIU"
[20:38:53.366]        // =>  FALSE
[20:38:53.366]      // skip if-block "traceTPIU"
[20:38:53.366]    </control>
[20:38:53.366]  </sequence>
[20:38:53.366]  
[20:38:53.370]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:38:53.370]  
[20:38:53.370]  <debugvars>
[20:38:53.370]    // Pre-defined
[20:38:53.370]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:53.370]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:53.371]    __dp=0x00000000
[20:38:53.371]    __ap=0x00000000
[20:38:53.371]    __traceout=0x00000001      (SWO Trace)
[20:38:53.371]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:53.371]    __FlashAddr=0x00000000
[20:38:53.371]    __FlashLen=0x00000000
[20:38:53.371]    __FlashArg=0x00000000
[20:38:53.372]    __FlashOp=0x00000000
[20:38:53.372]    __Result=0x00000000
[20:38:53.372]    
[20:38:53.372]    // User-defined
[20:38:53.372]    DbgMCU_CR=0x00000007
[20:38:53.372]    DbgMCU_APB1_Fz=0x00000000
[20:38:53.372]    DbgMCU_APB2_Fz=0x00000000
[20:38:53.373]    TraceClk_Pin=0x00040002
[20:38:53.373]    TraceD0_Pin=0x00040003
[20:38:53.373]    TraceD1_Pin=0x00040004
[20:38:53.373]    TraceD2_Pin=0x00040005
[20:38:53.373]    TraceD3_Pin=0x00040006
[20:38:53.373]  </debugvars>
[20:38:53.373]  
[20:38:53.374]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:38:53.374]    <block atomic="false" info="">
[20:38:53.374]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:38:53.374]        // -> [traceSWO <= 0x00000001]
[20:38:53.374]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:38:53.374]        // -> [traceTPIU <= 0x00000000]
[20:38:53.375]    </block>
[20:38:53.375]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:53.375]      // if-block "traceSWO"
[20:38:53.375]        // =>  TRUE
[20:38:53.375]      <block atomic="false" info="">
[20:38:53.375]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:38:53.375]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:38:53.376]            <block atomic="false" info="">
[20:38:53.376]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:53.376]                // -> [dbgmcu_val <= 0x00000000]
[20:38:53.376]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:38:53.376]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:38:53.376]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:38:53.377]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.377]                // -> [dbgmcu_val <= 0x00000007]
[20:38:53.377]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:38:53.377]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:38:53.377]              Sequence("ConfigureTraceSWOPin");
[20:38:53.377]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:38:53.377]                  <block atomic="false" info="">
[20:38:53.377]                    __var pin     = 0;
[20:38:53.377]                      // -> [pin <= 0x00000000]
[20:38:53.378]                    __var port    = 0;
[20:38:53.378]                      // -> [port <= 0x00000000]
[20:38:53.378]                    __var portAdr = 0;
[20:38:53.378]                      // -> [portAdr <= 0x00000000]
[20:38:53.378]                    __var pos     = 0;
[20:38:53.378]                      // -> [pos <= 0x00000000]
[20:38:53.378]                    __var SWO_Pin = 0x00010003;          // PB3
[20:38:53.378]                      // -> [SWO_Pin <= 0x00010003]
[20:38:53.378]                  </block>
[20:38:53.379]                  <block atomic="false" info="configure SWO">
[20:38:53.379]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:38:53.379]                      // -> [pin <= 0x00000003]
[20:38:53.379]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:38:53.379]                      // -> [port <= 0x00000001]
[20:38:53.379]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:38:53.379]                      // -> [portAdr <= 0x40020400]
[20:38:53.379]                    pos = pin * 2;
[20:38:53.379]                      // -> [pos <= 0x00000006]
[20:38:53.380]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:38:53.380]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.380]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.380]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:38:53.381]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.381]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.381]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:38:53.382]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.382]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.382]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:38:53.383]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.383]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.383]                  </block>
[20:38:53.383]                  <control if="pin <  8" while="" timeout="0" info="">
[20:38:53.383]                    // if-block "pin <  8"
[20:38:53.384]                      // =>  TRUE
[20:38:53.384]                    <block atomic="false" info="">
[20:38:53.384]                      pos = ((pin    ) & 7) * 4;
[20:38:53.384]                        // -> [pos <= 0x0000000C]
[20:38:53.384]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:38:53.384]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.385]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.385]                    </block>
[20:38:53.385]                    // end if-block "pin <  8"
[20:38:53.385]                  </control>
[20:38:53.385]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:38:53.385]                    // if-block "pin >= 8"
[20:38:53.385]                      // =>  FALSE
[20:38:53.386]                    // skip if-block "pin >= 8"
[20:38:53.386]                  </control>
[20:38:53.386]                </sequence>
[20:38:53.386]            </block>
[20:38:53.386]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:53.386]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:38:53.387]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.387]            </block>
[20:38:53.387]          </sequence>
[20:38:53.387]      </block>
[20:38:53.387]      // end if-block "traceSWO"
[20:38:53.387]    </control>
[20:38:53.387]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:53.387]      // if-block "traceTPIU"
[20:38:53.387]        // =>  FALSE
[20:38:53.388]      // skip if-block "traceTPIU"
[20:38:53.388]    </control>
[20:38:53.388]  </sequence>
[20:38:53.388]  
[20:38:53.601]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:38:53.601]  
[20:38:53.602]  <debugvars>
[20:38:53.602]    // Pre-defined
[20:38:53.602]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:53.602]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:53.602]    __dp=0x00000000
[20:38:53.602]    __ap=0x00000000
[20:38:53.603]    __traceout=0x00000001      (SWO Trace)
[20:38:53.603]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:53.603]    __FlashAddr=0x00000000
[20:38:53.603]    __FlashLen=0x00000000
[20:38:53.603]    __FlashArg=0x00000000
[20:38:53.604]    __FlashOp=0x00000000
[20:38:53.604]    __Result=0x00000000
[20:38:53.604]    
[20:38:53.604]    // User-defined
[20:38:53.604]    DbgMCU_CR=0x00000007
[20:38:53.604]    DbgMCU_APB1_Fz=0x00000000
[20:38:53.604]    DbgMCU_APB2_Fz=0x00000000
[20:38:53.605]    TraceClk_Pin=0x00040002
[20:38:53.605]    TraceD0_Pin=0x00040003
[20:38:53.605]    TraceD1_Pin=0x00040004
[20:38:53.605]    TraceD2_Pin=0x00040005
[20:38:53.605]    TraceD3_Pin=0x00040006
[20:38:53.606]  </debugvars>
[20:38:53.606]  
[20:38:53.606]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:38:53.606]    <block atomic="false" info="">
[20:38:53.606]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:38:53.607]        // -> [traceSWO <= 0x00000001]
[20:38:53.607]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:38:53.607]        // -> [traceTPIU <= 0x00000000]
[20:38:53.607]    </block>
[20:38:53.607]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:53.608]      // if-block "traceSWO"
[20:38:53.608]        // =>  TRUE
[20:38:53.608]      <block atomic="false" info="">
[20:38:53.608]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:38:53.608]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:38:53.608]            <block atomic="false" info="">
[20:38:53.609]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:53.609]                // -> [dbgmcu_val <= 0x00000000]
[20:38:53.609]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:38:53.609]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:38:53.609]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:38:53.610]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.610]                // -> [dbgmcu_val <= 0x00000007]
[20:38:53.610]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:38:53.610]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:38:53.610]              Sequence("ConfigureTraceSWOPin");
[20:38:53.611]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:38:53.611]                  <block atomic="false" info="">
[20:38:53.611]                    __var pin     = 0;
[20:38:53.611]                      // -> [pin <= 0x00000000]
[20:38:53.611]                    __var port    = 0;
[20:38:53.611]                      // -> [port <= 0x00000000]
[20:38:53.612]                    __var portAdr = 0;
[20:38:53.612]                      // -> [portAdr <= 0x00000000]
[20:38:53.612]                    __var pos     = 0;
[20:38:53.612]                      // -> [pos <= 0x00000000]
[20:38:53.612]                    __var SWO_Pin = 0x00010003;          // PB3
[20:38:53.612]                      // -> [SWO_Pin <= 0x00010003]
[20:38:53.613]                  </block>
[20:38:53.613]                  <block atomic="false" info="configure SWO">
[20:38:53.613]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:38:53.613]                      // -> [pin <= 0x00000003]
[20:38:53.613]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:38:53.613]                      // -> [port <= 0x00000001]
[20:38:53.614]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:38:53.614]                      // -> [portAdr <= 0x40020400]
[20:38:53.614]                    pos = pin * 2;
[20:38:53.614]                      // -> [pos <= 0x00000006]
[20:38:53.614]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:38:53.615]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.615]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.615]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:38:53.616]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.616]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.616]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:38:53.617]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.617]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.617]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:38:53.618]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.618]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:53.618]                  </block>
[20:38:53.618]                  <control if="pin <  8" while="" timeout="0" info="">
[20:38:53.658]                    // if-block "pin <  8"
[20:38:53.659]                      // =>  TRUE
[20:38:54.152]                    <block atomic="false" info="">
[20:38:54.153]                      pos = ((pin    ) & 7) * 4;
[20:38:54.153]                        // -> [pos <= 0x0000000C]
[20:38:54.153]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:38:54.154]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:54.154]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:54.154]                    </block>
[20:38:54.154]                    // end if-block "pin <  8"
[20:38:54.154]                  </control>
[20:38:54.155]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:38:54.155]                    // if-block "pin >= 8"
[20:38:54.155]                      // =>  FALSE
[20:38:54.155]                    // skip if-block "pin >= 8"
[20:38:54.155]                  </control>
[20:38:54.155]                </sequence>
[20:38:54.155]            </block>
[20:38:54.162]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:54.163]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:38:54.163]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:54.164]            </block>
[20:38:54.164]          </sequence>
[20:38:54.164]      </block>
[20:38:54.164]      // end if-block "traceSWO"
[20:38:54.164]    </control>
[20:38:54.164]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:54.165]      // if-block "traceTPIU"
[20:38:54.165]        // =>  FALSE
[20:38:54.165]      // skip if-block "traceTPIU"
[20:38:54.165]    </control>
[20:38:54.165]  </sequence>
[20:38:54.165]  
[20:41:07.013]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:41:07.013]  
[20:41:07.013]  <debugvars>
[20:41:07.014]    // Pre-defined
[20:41:07.014]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:41:07.014]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:41:07.014]    __dp=0x00000000
[20:41:07.014]    __ap=0x00000000
[20:41:07.015]    __traceout=0x00000001      (SWO Trace)
[20:41:07.015]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:41:07.015]    __FlashAddr=0x00000000
[20:41:07.015]    __FlashLen=0x00000000
[20:41:07.015]    __FlashArg=0x00000000
[20:41:07.016]    __FlashOp=0x00000000
[20:41:07.016]    __Result=0x00000000
[20:41:07.016]    
[20:41:07.016]    // User-defined
[20:41:07.016]    DbgMCU_CR=0x00000007
[20:41:07.016]    DbgMCU_APB1_Fz=0x00000000
[20:41:07.017]    DbgMCU_APB2_Fz=0x00000000
[20:41:07.017]    TraceClk_Pin=0x00040002
[20:41:07.017]    TraceD0_Pin=0x00040003
[20:41:07.017]    TraceD1_Pin=0x00040004
[20:41:07.017]    TraceD2_Pin=0x00040005
[20:41:07.018]    TraceD3_Pin=0x00040006
[20:41:07.018]  </debugvars>
[20:41:07.018]  
[20:41:07.018]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:41:07.018]    <block atomic="false" info="">
[20:41:07.019]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:41:07.019]        // -> [traceSWO <= 0x00000001]
[20:41:07.019]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:41:07.019]        // -> [traceTPIU <= 0x00000000]
[20:41:07.019]    </block>
[20:41:07.019]    <control if="traceSWO" while="" timeout="0" info="">
[20:41:07.020]      // if-block "traceSWO"
[20:41:07.020]        // =>  TRUE
[20:41:07.020]      <block atomic="false" info="">
[20:41:07.020]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:41:07.020]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:41:07.021]            <block atomic="false" info="">
[20:41:07.021]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:41:07.021]                // -> [dbgmcu_val <= 0x00000000]
[20:41:07.021]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:41:07.021]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:41:07.021]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:41:07.022]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.022]                // -> [dbgmcu_val <= 0x00000007]
[20:41:07.022]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:41:07.022]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:41:07.023]              Sequence("ConfigureTraceSWOPin");
[20:41:07.023]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:41:07.023]                  <block atomic="false" info="">
[20:41:07.023]                    __var pin     = 0;
[20:41:07.023]                      // -> [pin <= 0x00000000]
[20:41:07.024]                    __var port    = 0;
[20:41:07.024]                      // -> [port <= 0x00000000]
[20:41:07.024]                    __var portAdr = 0;
[20:41:07.024]                      // -> [portAdr <= 0x00000000]
[20:41:07.024]                    __var pos     = 0;
[20:41:07.024]                      // -> [pos <= 0x00000000]
[20:41:07.025]                    __var SWO_Pin = 0x00010003;          // PB3
[20:41:07.025]                      // -> [SWO_Pin <= 0x00010003]
[20:41:07.025]                  </block>
[20:41:07.025]                  <block atomic="false" info="configure SWO">
[20:41:07.025]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:41:07.026]                      // -> [pin <= 0x00000003]
[20:41:07.026]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:41:07.026]                      // -> [port <= 0x00000001]
[20:41:07.026]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:41:07.026]                      // -> [portAdr <= 0x40020400]
[20:41:07.026]                    pos = pin * 2;
[20:41:07.027]                      // -> [pos <= 0x00000006]
[20:41:07.027]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:41:07.027]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.028]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.028]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:41:07.028]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.029]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.029]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:41:07.030]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.030]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.030]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:41:07.031]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.031]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.032]                  </block>
[20:41:07.032]                  <control if="pin <  8" while="" timeout="0" info="">
[20:41:07.032]                    // if-block "pin <  8"
[20:41:07.032]                      // =>  TRUE
[20:41:07.032]                    <block atomic="false" info="">
[20:41:07.033]                      pos = ((pin    ) & 7) * 4;
[20:41:07.033]                        // -> [pos <= 0x0000000C]
[20:41:07.033]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:41:07.034]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.034]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.034]                    </block>
[20:41:07.034]                    // end if-block "pin <  8"
[20:41:07.035]                  </control>
[20:41:07.035]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:41:07.035]                    // if-block "pin >= 8"
[20:41:07.035]                      // =>  FALSE
[20:41:07.035]                    // skip if-block "pin >= 8"
[20:41:07.036]                  </control>
[20:41:07.036]                </sequence>
[20:41:07.036]            </block>
[20:41:07.036]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:41:07.036]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:41:07.037]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:07.037]            </block>
[20:41:07.037]          </sequence>
[20:41:07.037]      </block>
[20:41:07.037]      // end if-block "traceSWO"
[20:41:07.037]    </control>
[20:41:07.038]    <control if="traceTPIU" while="" timeout="0" info="">
[20:41:07.038]      // if-block "traceTPIU"
[20:41:07.038]        // =>  FALSE
[20:41:07.038]      // skip if-block "traceTPIU"
[20:41:07.038]    </control>
[20:41:07.038]  </sequence>
[20:41:07.039]  
[20:41:52.557]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:41:52.557]  
[20:41:52.557]  <debugvars>
[20:41:52.558]    // Pre-defined
[20:41:52.558]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:41:52.558]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:41:52.558]    __dp=0x00000000
[20:41:52.558]    __ap=0x00000000
[20:41:52.558]    __traceout=0x00000001      (SWO Trace)
[20:41:52.559]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:41:52.559]    __FlashAddr=0x00000000
[20:41:52.559]    __FlashLen=0x00000000
[20:41:52.559]    __FlashArg=0x00000000
[20:41:52.559]    __FlashOp=0x00000000
[20:41:52.560]    __Result=0x00000000
[20:41:52.560]    
[20:41:52.560]    // User-defined
[20:41:52.560]    DbgMCU_CR=0x00000007
[20:41:52.560]    DbgMCU_APB1_Fz=0x00000000
[20:41:52.560]    DbgMCU_APB2_Fz=0x00000000
[20:41:52.560]    TraceClk_Pin=0x00040002
[20:41:52.561]    TraceD0_Pin=0x00040003
[20:41:52.561]    TraceD1_Pin=0x00040004
[20:41:52.561]    TraceD2_Pin=0x00040005
[20:41:52.561]    TraceD3_Pin=0x00040006
[20:41:52.561]  </debugvars>
[20:41:52.562]  
[20:41:52.562]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:41:52.562]    <block atomic="false" info="">
[20:41:52.562]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:41:52.562]        // -> [traceSWO <= 0x00000001]
[20:41:52.562]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:41:52.563]        // -> [traceTPIU <= 0x00000000]
[20:41:52.563]    </block>
[20:41:52.563]    <control if="traceSWO" while="" timeout="0" info="">
[20:41:52.563]      // if-block "traceSWO"
[20:41:52.563]        // =>  TRUE
[20:41:52.563]      <block atomic="false" info="">
[20:41:52.564]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:41:52.564]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:41:52.564]            <block atomic="false" info="">
[20:41:52.564]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:41:52.564]                // -> [dbgmcu_val <= 0x00000000]
[20:41:52.564]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:41:52.565]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:41:52.565]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:41:52.565]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.566]                // -> [dbgmcu_val <= 0x00000007]
[20:41:52.566]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:41:52.566]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:41:52.566]              Sequence("ConfigureTraceSWOPin");
[20:41:52.566]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:41:52.566]                  <block atomic="false" info="">
[20:41:52.567]                    __var pin     = 0;
[20:41:52.567]                      // -> [pin <= 0x00000000]
[20:41:52.567]                    __var port    = 0;
[20:41:52.567]                      // -> [port <= 0x00000000]
[20:41:52.567]                    __var portAdr = 0;
[20:41:52.567]                      // -> [portAdr <= 0x00000000]
[20:41:52.567]                    __var pos     = 0;
[20:41:52.568]                      // -> [pos <= 0x00000000]
[20:41:52.568]                    __var SWO_Pin = 0x00010003;          // PB3
[20:41:52.568]                      // -> [SWO_Pin <= 0x00010003]
[20:41:52.568]                  </block>
[20:41:52.568]                  <block atomic="false" info="configure SWO">
[20:41:52.568]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:41:52.569]                      // -> [pin <= 0x00000003]
[20:41:52.569]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:41:52.569]                      // -> [port <= 0x00000001]
[20:41:52.569]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:41:52.569]                      // -> [portAdr <= 0x40020400]
[20:41:52.569]                    pos = pin * 2;
[20:41:52.569]                      // -> [pos <= 0x00000006]
[20:41:52.570]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:41:52.570]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.570]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.571]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:41:52.571]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.572]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.572]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:41:52.572]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.573]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.573]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:41:52.573]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.574]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.574]                  </block>
[20:41:52.574]                  <control if="pin <  8" while="" timeout="0" info="">
[20:41:52.574]                    // if-block "pin <  8"
[20:41:52.574]                      // =>  TRUE
[20:41:52.574]                    <block atomic="false" info="">
[20:41:52.575]                      pos = ((pin    ) & 7) * 4;
[20:41:52.575]                        // -> [pos <= 0x0000000C]
[20:41:52.575]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:41:52.575]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.576]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.576]                    </block>
[20:41:52.576]                    // end if-block "pin <  8"
[20:41:52.576]                  </control>
[20:41:52.577]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:41:52.577]                    // if-block "pin >= 8"
[20:41:52.577]                      // =>  FALSE
[20:41:52.577]                    // skip if-block "pin >= 8"
[20:41:52.577]                  </control>
[20:41:52.577]                </sequence>
[20:41:52.577]            </block>
[20:41:52.578]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:41:52.578]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:41:52.578]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:52.578]            </block>
[20:41:52.578]          </sequence>
[20:41:52.578]      </block>
[20:41:52.579]      // end if-block "traceSWO"
[20:41:52.579]    </control>
[20:41:52.579]    <control if="traceTPIU" while="" timeout="0" info="">
[20:41:52.579]      // if-block "traceTPIU"
[20:41:52.579]        // =>  FALSE
[20:41:52.579]      // skip if-block "traceTPIU"
[20:41:52.579]    </control>
[20:41:52.580]  </sequence>
[20:41:52.580]  
[20:43:11.692]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:43:11.692]  
[20:43:11.693]  <debugvars>
[20:43:11.693]    // Pre-defined
[20:43:11.693]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:11.693]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:11.694]    __dp=0x00000000
[20:43:11.694]    __ap=0x00000000
[20:43:11.694]    __traceout=0x00000001      (SWO Trace)
[20:43:11.694]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:11.694]    __FlashAddr=0x00000000
[20:43:11.695]    __FlashLen=0x00000000
[20:43:11.695]    __FlashArg=0x00000000
[20:43:11.695]    __FlashOp=0x00000000
[20:43:11.695]    __Result=0x00000000
[20:43:11.695]    
[20:43:11.695]    // User-defined
[20:43:11.695]    DbgMCU_CR=0x00000007
[20:43:11.696]    DbgMCU_APB1_Fz=0x00000000
[20:43:11.696]    DbgMCU_APB2_Fz=0x00000000
[20:43:11.696]    TraceClk_Pin=0x00040002
[20:43:11.696]    TraceD0_Pin=0x00040003
[20:43:11.696]    TraceD1_Pin=0x00040004
[20:43:11.697]    TraceD2_Pin=0x00040005
[20:43:11.697]    TraceD3_Pin=0x00040006
[20:43:11.697]  </debugvars>
[20:43:11.697]  
[20:43:11.697]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:43:11.697]    <block atomic="false" info="">
[20:43:11.698]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:43:11.698]        // -> [traceSWO <= 0x00000001]
[20:43:11.698]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:43:11.698]        // -> [traceTPIU <= 0x00000000]
[20:43:11.698]    </block>
[20:43:11.698]    <control if="traceSWO" while="" timeout="0" info="">
[20:43:11.699]      // if-block "traceSWO"
[20:43:11.699]        // =>  TRUE
[20:43:11.699]      <block atomic="false" info="">
[20:43:11.699]        Sequence("DisableTraceSWO");
[20:43:11.699]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:43:11.700]            <block atomic="false" info="">
[20:43:11.700]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:43:11.700]                // -> [dbgmcu_val <= 0x00000000]
[20:43:11.700]            </block>
[20:43:11.700]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:43:11.700]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:43:11.701]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:43:11.701]                // -> [dbgmcu_val <= 0x00000007]
[20:43:11.701]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:43:11.702]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:11.702]            </block>
[20:43:11.702]          </sequence>
[20:43:11.702]      </block>
[20:43:11.702]      // end if-block "traceSWO"
[20:43:11.702]    </control>
[20:43:11.703]    <control if="traceTPIU" while="" timeout="0" info="">
[20:43:11.703]      // if-block "traceTPIU"
[20:43:11.703]        // =>  FALSE
[20:43:11.703]      // skip if-block "traceTPIU"
[20:43:11.703]    </control>
[20:43:11.703]  </sequence>
[20:43:11.703]  
[20:45:01.309]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:45:01.309]  
[20:45:01.309]  <debugvars>
[20:45:01.309]    // Pre-defined
[20:45:01.310]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:01.310]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:45:01.310]    __dp=0x00000000
[20:45:01.310]    __ap=0x00000000
[20:45:01.311]    __traceout=0x00000001      (SWO Trace)
[20:45:01.311]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:01.311]    __FlashAddr=0x00000000
[20:45:01.311]    __FlashLen=0x00000000
[20:45:01.311]    __FlashArg=0x00000000
[20:45:01.312]    __FlashOp=0x00000000
[20:45:01.312]    __Result=0x00000000
[20:45:01.312]    
[20:45:01.312]    // User-defined
[20:45:01.312]    DbgMCU_CR=0x00000007
[20:45:01.312]    DbgMCU_APB1_Fz=0x00000000
[20:45:01.312]    DbgMCU_APB2_Fz=0x00000000
[20:45:01.313]    TraceClk_Pin=0x00040002
[20:45:01.313]    TraceD0_Pin=0x00040003
[20:45:01.313]    TraceD1_Pin=0x00040004
[20:45:01.313]    TraceD2_Pin=0x00040005
[20:45:01.313]    TraceD3_Pin=0x00040006
[20:45:01.313]  </debugvars>
[20:45:01.314]  
[20:45:01.314]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:45:01.314]    <block atomic="false" info="">
[20:45:01.314]      Sequence("CheckID");
[20:45:01.314]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:45:01.315]          <block atomic="false" info="">
[20:45:01.315]            __var pidr1 = 0;
[20:45:01.315]              // -> [pidr1 <= 0x00000000]
[20:45:01.315]            __var pidr2 = 0;
[20:45:01.315]              // -> [pidr2 <= 0x00000000]
[20:45:01.315]            __var jep106id = 0;
[20:45:01.315]              // -> [jep106id <= 0x00000000]
[20:45:01.316]            __var ROMTableBase = 0;
[20:45:01.316]              // -> [ROMTableBase <= 0x00000000]
[20:45:01.316]            __ap = 0;      // AHB-AP
[20:45:01.316]              // -> [__ap <= 0x00000000]
[20:45:01.316]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:45:01.317]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.317]              // -> [ROMTableBase <= 0xE00FD000]
[20:45:01.317]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:45:01.317]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.318]              // -> [pidr1 <= 0x00000004]
[20:45:01.318]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:45:01.318]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.318]              // -> [pidr2 <= 0x0000001A]
[20:45:01.318]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:45:01.318]              // -> [jep106id <= 0x00000020]
[20:45:01.319]          </block>
[20:45:01.319]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:45:01.319]            // if-block "jep106id != 0x20"
[20:45:01.319]              // =>  FALSE
[20:45:01.319]            // skip if-block "jep106id != 0x20"
[20:45:01.319]          </control>
[20:45:01.319]        </sequence>
[20:45:01.320]    </block>
[20:45:01.320]  </sequence>
[20:45:01.320]  
[20:45:01.335]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:45:01.335]  
[20:45:01.335]  <debugvars>
[20:45:01.335]    // Pre-defined
[20:45:01.335]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:01.336]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:45:01.336]    __dp=0x00000000
[20:45:01.336]    __ap=0x00000000
[20:45:01.336]    __traceout=0x00000001      (SWO Trace)
[20:45:01.336]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:01.337]    __FlashAddr=0x00000000
[20:45:01.337]    __FlashLen=0x00000000
[20:45:01.337]    __FlashArg=0x00000000
[20:45:01.337]    __FlashOp=0x00000000
[20:45:01.337]    __Result=0x00000000
[20:45:01.338]    
[20:45:01.338]    // User-defined
[20:45:01.338]    DbgMCU_CR=0x00000007
[20:45:01.338]    DbgMCU_APB1_Fz=0x00000000
[20:45:01.338]    DbgMCU_APB2_Fz=0x00000000
[20:45:01.338]    TraceClk_Pin=0x00040002
[20:45:01.339]    TraceD0_Pin=0x00040003
[20:45:01.339]    TraceD1_Pin=0x00040004
[20:45:01.339]    TraceD2_Pin=0x00040005
[20:45:01.339]    TraceD3_Pin=0x00040006
[20:45:01.339]  </debugvars>
[20:45:01.339]  
[20:45:01.340]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:45:01.340]    <block atomic="false" info="">
[20:45:01.340]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:45:01.341]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.341]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:45:01.341]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.342]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:45:01.342]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.342]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:45:01.343]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:01.343]    </block>
[20:45:01.343]  </sequence>
[20:45:01.344]  
[20:45:31.749]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:45:31.749]  
[20:45:31.749]  <debugvars>
[20:45:31.749]    // Pre-defined
[20:45:31.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:31.750]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:31.750]    __dp=0x00000000
[20:45:31.750]    __ap=0x00000000
[20:45:31.750]    __traceout=0x00000001      (SWO Trace)
[20:45:31.750]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:31.750]    __FlashAddr=0x00000000
[20:45:31.751]    __FlashLen=0x00000000
[20:45:31.751]    __FlashArg=0x00000000
[20:45:31.751]    __FlashOp=0x00000000
[20:45:31.751]    __Result=0x00000000
[20:45:31.751]    
[20:45:31.751]    // User-defined
[20:45:31.752]    DbgMCU_CR=0x00000007
[20:45:31.752]    DbgMCU_APB1_Fz=0x00000000
[20:45:31.752]    DbgMCU_APB2_Fz=0x00000000
[20:45:31.752]    TraceClk_Pin=0x00040002
[20:45:31.752]    TraceD0_Pin=0x00040003
[20:45:31.752]    TraceD1_Pin=0x00040004
[20:45:31.753]    TraceD2_Pin=0x00040005
[20:45:31.753]    TraceD3_Pin=0x00040006
[20:45:31.753]  </debugvars>
[20:45:31.753]  
[20:45:31.753]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:45:31.753]    <block atomic="false" info="">
[20:45:31.754]      Sequence("CheckID");
[20:45:31.754]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:45:31.754]          <block atomic="false" info="">
[20:45:31.754]            __var pidr1 = 0;
[20:45:31.754]              // -> [pidr1 <= 0x00000000]
[20:45:31.754]            __var pidr2 = 0;
[20:45:31.755]              // -> [pidr2 <= 0x00000000]
[20:45:31.755]            __var jep106id = 0;
[20:45:31.755]              // -> [jep106id <= 0x00000000]
[20:45:31.755]            __var ROMTableBase = 0;
[20:45:31.755]              // -> [ROMTableBase <= 0x00000000]
[20:45:31.755]            __ap = 0;      // AHB-AP
[20:45:31.756]              // -> [__ap <= 0x00000000]
[20:45:31.756]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:45:31.756]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.756]              // -> [ROMTableBase <= 0xE00FD000]
[20:45:31.756]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:45:31.757]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.757]              // -> [pidr1 <= 0x00000004]
[20:45:31.757]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:45:31.758]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.758]              // -> [pidr2 <= 0x0000001A]
[20:45:31.758]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:45:31.758]              // -> [jep106id <= 0x00000020]
[20:45:31.758]          </block>
[20:45:31.758]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:45:31.759]            // if-block "jep106id != 0x20"
[20:45:31.759]              // =>  FALSE
[20:45:31.759]            // skip if-block "jep106id != 0x20"
[20:45:31.759]          </control>
[20:45:31.759]        </sequence>
[20:45:31.759]    </block>
[20:45:31.759]  </sequence>
[20:45:31.760]  
[20:45:31.774]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:45:31.774]  
[20:45:31.774]  <debugvars>
[20:45:31.775]    // Pre-defined
[20:45:31.775]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:31.775]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:31.775]    __dp=0x00000000
[20:45:31.775]    __ap=0x00000000
[20:45:31.776]    __traceout=0x00000001      (SWO Trace)
[20:45:31.776]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:31.776]    __FlashAddr=0x00000000
[20:45:31.776]    __FlashLen=0x00000000
[20:45:31.776]    __FlashArg=0x00000000
[20:45:31.777]    __FlashOp=0x00000000
[20:45:31.777]    __Result=0x00000000
[20:45:31.777]    
[20:45:31.777]    // User-defined
[20:45:31.777]    DbgMCU_CR=0x00000007
[20:45:31.777]    DbgMCU_APB1_Fz=0x00000000
[20:45:31.777]    DbgMCU_APB2_Fz=0x00000000
[20:45:31.778]    TraceClk_Pin=0x00040002
[20:45:31.778]    TraceD0_Pin=0x00040003
[20:45:31.778]    TraceD1_Pin=0x00040004
[20:45:31.778]    TraceD2_Pin=0x00040005
[20:45:31.778]    TraceD3_Pin=0x00040006
[20:45:31.779]  </debugvars>
[20:45:31.779]  
[20:45:31.779]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:45:31.779]    <block atomic="false" info="">
[20:45:31.779]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:45:31.780]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.780]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:45:31.780]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.781]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:45:31.781]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.781]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:45:31.782]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.782]    </block>
[20:45:31.782]  </sequence>
[20:45:31.782]  
[20:45:31.798]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:45:31.798]  
[20:45:31.799]  <debugvars>
[20:45:31.799]    // Pre-defined
[20:45:31.799]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:31.799]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:31.799]    __dp=0x00000000
[20:45:31.800]    __ap=0x00000000
[20:45:31.800]    __traceout=0x00000001      (SWO Trace)
[20:45:31.800]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:31.800]    __FlashAddr=0x00000000
[20:45:31.801]    __FlashLen=0x00000000
[20:45:31.801]    __FlashArg=0x00000000
[20:45:31.801]    __FlashOp=0x00000000
[20:45:31.801]    __Result=0x00000000
[20:45:31.801]    
[20:45:31.801]    // User-defined
[20:45:31.802]    DbgMCU_CR=0x00000007
[20:45:31.802]    DbgMCU_APB1_Fz=0x00000000
[20:45:31.802]    DbgMCU_APB2_Fz=0x00000000
[20:45:31.802]    TraceClk_Pin=0x00040002
[20:45:31.802]    TraceD0_Pin=0x00040003
[20:45:31.803]    TraceD1_Pin=0x00040004
[20:45:31.803]    TraceD2_Pin=0x00040005
[20:45:31.803]    TraceD3_Pin=0x00040006
[20:45:31.803]  </debugvars>
[20:45:31.803]  
[20:45:31.803]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:45:31.804]    <block atomic="false" info="">
[20:45:31.804]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:45:31.804]        // -> [traceSWO <= 0x00000001]
[20:45:31.804]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:45:31.804]        // -> [traceTPIU <= 0x00000000]
[20:45:31.805]    </block>
[20:45:31.805]    <control if="traceSWO" while="" timeout="0" info="">
[20:45:31.805]      // if-block "traceSWO"
[20:45:31.805]        // =>  TRUE
[20:45:31.805]      <block atomic="false" info="">
[20:45:31.805]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:45:31.805]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:45:31.806]            <block atomic="false" info="">
[20:45:31.806]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:45:31.806]                // -> [dbgmcu_val <= 0x00000000]
[20:45:31.806]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:45:31.806]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:45:31.806]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:45:31.807]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.807]                // -> [dbgmcu_val <= 0x00000007]
[20:45:31.807]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:45:31.808]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:45:31.808]              Sequence("ConfigureTraceSWOPin");
[20:45:31.808]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:45:31.808]                  <block atomic="false" info="">
[20:45:31.808]                    __var pin     = 0;
[20:45:31.808]                      // -> [pin <= 0x00000000]
[20:45:31.809]                    __var port    = 0;
[20:45:31.809]                      // -> [port <= 0x00000000]
[20:45:31.809]                    __var portAdr = 0;
[20:45:31.809]                      // -> [portAdr <= 0x00000000]
[20:45:31.809]                    __var pos     = 0;
[20:45:31.810]                      // -> [pos <= 0x00000000]
[20:45:31.810]                    __var SWO_Pin = 0x00010003;          // PB3
[20:45:31.810]                      // -> [SWO_Pin <= 0x00010003]
[20:45:31.810]                  </block>
[20:45:31.810]                  <block atomic="false" info="configure SWO">
[20:45:31.810]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:45:31.811]                      // -> [pin <= 0x00000003]
[20:45:31.811]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:45:31.811]                      // -> [port <= 0x00000001]
[20:45:31.811]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:45:31.811]                      // -> [portAdr <= 0x40020400]
[20:45:31.811]                    pos = pin * 2;
[20:45:31.812]                      // -> [pos <= 0x00000006]
[20:45:31.812]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:45:31.812]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.813]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.813]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:45:31.813]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.814]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.814]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:45:31.814]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.815]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.815]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:45:31.815]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.816]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.816]                  </block>
[20:45:31.816]                  <control if="pin <  8" while="" timeout="0" info="">
[20:45:31.816]                    // if-block "pin <  8"
[20:45:31.817]                      // =>  TRUE
[20:45:31.817]                    <block atomic="false" info="">
[20:45:31.817]                      pos = ((pin    ) & 7) * 4;
[20:45:31.817]                        // -> [pos <= 0x0000000C]
[20:45:31.817]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:45:31.818]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.818]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.818]                    </block>
[20:45:31.818]                    // end if-block "pin <  8"
[20:45:31.818]                  </control>
[20:45:31.819]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:45:31.819]                    // if-block "pin >= 8"
[20:45:31.819]                      // =>  FALSE
[20:45:31.819]                    // skip if-block "pin >= 8"
[20:45:31.819]                  </control>
[20:45:31.819]                </sequence>
[20:45:31.819]            </block>
[20:45:31.820]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:45:31.820]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:45:31.820]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.820]            </block>
[20:45:31.820]          </sequence>
[20:45:31.821]      </block>
[20:45:31.821]      // end if-block "traceSWO"
[20:45:31.821]    </control>
[20:45:31.821]    <control if="traceTPIU" while="" timeout="0" info="">
[20:45:31.821]      // if-block "traceTPIU"
[20:45:31.821]        // =>  FALSE
[20:45:31.821]      // skip if-block "traceTPIU"
[20:45:31.822]    </control>
[20:45:31.822]  </sequence>
[20:45:31.822]  
[20:45:31.825]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:45:31.825]  
[20:45:31.826]  <debugvars>
[20:45:31.826]    // Pre-defined
[20:45:31.826]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:31.826]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:31.827]    __dp=0x00000000
[20:45:31.827]    __ap=0x00000000
[20:45:31.827]    __traceout=0x00000001      (SWO Trace)
[20:45:31.827]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:31.827]    __FlashAddr=0x00000000
[20:45:31.827]    __FlashLen=0x00000000
[20:45:31.828]    __FlashArg=0x00000000
[20:45:31.828]    __FlashOp=0x00000000
[20:45:31.828]    __Result=0x00000000
[20:45:31.828]    
[20:45:31.828]    // User-defined
[20:45:31.829]    DbgMCU_CR=0x00000007
[20:45:31.829]    DbgMCU_APB1_Fz=0x00000000
[20:45:31.829]    DbgMCU_APB2_Fz=0x00000000
[20:45:31.829]    TraceClk_Pin=0x00040002
[20:45:31.829]    TraceD0_Pin=0x00040003
[20:45:31.829]    TraceD1_Pin=0x00040004
[20:45:31.830]    TraceD2_Pin=0x00040005
[20:45:31.830]    TraceD3_Pin=0x00040006
[20:45:31.830]  </debugvars>
[20:45:31.830]  
[20:45:31.830]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:45:31.830]    <block atomic="false" info="">
[20:45:31.830]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:45:31.830]        // -> [traceSWO <= 0x00000001]
[20:45:31.831]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:45:31.831]        // -> [traceTPIU <= 0x00000000]
[20:45:31.831]    </block>
[20:45:31.831]    <control if="traceSWO" while="" timeout="0" info="">
[20:45:31.831]      // if-block "traceSWO"
[20:45:31.831]        // =>  TRUE
[20:45:31.831]      <block atomic="false" info="">
[20:45:31.832]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:45:31.832]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:45:31.832]            <block atomic="false" info="">
[20:45:31.832]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:45:31.832]                // -> [dbgmcu_val <= 0x00000000]
[20:45:31.832]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:45:31.832]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:45:31.832]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:45:31.833]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.833]                // -> [dbgmcu_val <= 0x00000007]
[20:45:31.833]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:45:31.833]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:45:31.833]              Sequence("ConfigureTraceSWOPin");
[20:45:31.834]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:45:31.834]                  <block atomic="false" info="">
[20:45:31.834]                    __var pin     = 0;
[20:45:31.834]                      // -> [pin <= 0x00000000]
[20:45:31.834]                    __var port    = 0;
[20:45:31.834]                      // -> [port <= 0x00000000]
[20:45:31.834]                    __var portAdr = 0;
[20:45:31.834]                      // -> [portAdr <= 0x00000000]
[20:45:31.834]                    __var pos     = 0;
[20:45:31.834]                      // -> [pos <= 0x00000000]
[20:45:31.835]                    __var SWO_Pin = 0x00010003;          // PB3
[20:45:31.835]                      // -> [SWO_Pin <= 0x00010003]
[20:45:31.835]                  </block>
[20:45:31.835]                  <block atomic="false" info="configure SWO">
[20:45:31.835]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:45:31.835]                      // -> [pin <= 0x00000003]
[20:45:31.835]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:45:31.836]                      // -> [port <= 0x00000001]
[20:45:31.836]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:45:31.836]                      // -> [portAdr <= 0x40020400]
[20:45:31.836]                    pos = pin * 2;
[20:45:31.836]                      // -> [pos <= 0x00000006]
[20:45:31.836]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:45:31.837]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.837]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.837]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:45:31.837]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.838]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.838]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:45:31.838]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.839]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.839]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:45:31.839]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.840]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.840]                  </block>
[20:45:31.840]                  <control if="pin <  8" while="" timeout="0" info="">
[20:45:31.840]                    // if-block "pin <  8"
[20:45:31.840]                      // =>  TRUE
[20:45:31.840]                    <block atomic="false" info="">
[20:45:31.840]                      pos = ((pin    ) & 7) * 4;
[20:45:31.841]                        // -> [pos <= 0x0000000C]
[20:45:31.841]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:45:31.841]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.841]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.842]                    </block>
[20:45:31.842]                    // end if-block "pin <  8"
[20:45:31.842]                  </control>
[20:45:31.842]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:45:31.842]                    // if-block "pin >= 8"
[20:45:31.842]                      // =>  FALSE
[20:45:31.842]                    // skip if-block "pin >= 8"
[20:45:31.842]                  </control>
[20:45:31.842]                </sequence>
[20:45:31.843]            </block>
[20:45:31.843]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:45:31.843]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:45:31.843]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:31.843]            </block>
[20:45:31.844]          </sequence>
[20:45:31.844]      </block>
[20:45:31.844]      // end if-block "traceSWO"
[20:45:31.844]    </control>
[20:45:31.844]    <control if="traceTPIU" while="" timeout="0" info="">
[20:45:31.844]      // if-block "traceTPIU"
[20:45:31.845]        // =>  FALSE
[20:45:31.845]      // skip if-block "traceTPIU"
[20:45:31.845]    </control>
[20:45:31.845]  </sequence>
[20:45:31.845]  
[20:45:32.055]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:45:32.055]  
[20:45:32.055]  <debugvars>
[20:45:32.055]    // Pre-defined
[20:45:32.056]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:32.056]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:32.056]    __dp=0x00000000
[20:45:32.056]    __ap=0x00000000
[20:45:32.056]    __traceout=0x00000001      (SWO Trace)
[20:45:32.056]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:32.057]    __FlashAddr=0x00000000
[20:45:32.057]    __FlashLen=0x00000000
[20:45:32.057]    __FlashArg=0x00000000
[20:45:32.057]    __FlashOp=0x00000000
[20:45:32.057]    __Result=0x00000000
[20:45:32.058]    
[20:45:32.058]    // User-defined
[20:45:32.058]    DbgMCU_CR=0x00000007
[20:45:32.058]    DbgMCU_APB1_Fz=0x00000000
[20:45:32.058]    DbgMCU_APB2_Fz=0x00000000
[20:45:32.058]    TraceClk_Pin=0x00040002
[20:45:32.059]    TraceD0_Pin=0x00040003
[20:45:32.059]    TraceD1_Pin=0x00040004
[20:45:32.059]    TraceD2_Pin=0x00040005
[20:45:32.059]    TraceD3_Pin=0x00040006
[20:45:32.059]  </debugvars>
[20:45:32.060]  
[20:45:32.060]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:45:32.060]    <block atomic="false" info="">
[20:45:32.060]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:45:32.060]        // -> [traceSWO <= 0x00000001]
[20:45:32.060]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:45:32.061]        // -> [traceTPIU <= 0x00000000]
[20:45:32.061]    </block>
[20:45:32.061]    <control if="traceSWO" while="" timeout="0" info="">
[20:45:32.061]      // if-block "traceSWO"
[20:45:32.061]        // =>  TRUE
[20:45:32.062]      <block atomic="false" info="">
[20:45:32.062]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:45:32.062]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:45:32.062]            <block atomic="false" info="">
[20:45:32.062]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:45:32.062]                // -> [dbgmcu_val <= 0x00000000]
[20:45:32.063]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:45:32.063]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:45:32.063]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:45:32.063]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.064]                // -> [dbgmcu_val <= 0x00000007]
[20:45:32.064]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:45:32.064]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:45:32.064]              Sequence("ConfigureTraceSWOPin");
[20:45:32.064]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:45:32.064]                  <block atomic="false" info="">
[20:45:32.064]                    __var pin     = 0;
[20:45:32.065]                      // -> [pin <= 0x00000000]
[20:45:32.065]                    __var port    = 0;
[20:45:32.065]                      // -> [port <= 0x00000000]
[20:45:32.065]                    __var portAdr = 0;
[20:45:32.065]                      // -> [portAdr <= 0x00000000]
[20:45:32.065]                    __var pos     = 0;
[20:45:32.066]                      // -> [pos <= 0x00000000]
[20:45:32.066]                    __var SWO_Pin = 0x00010003;          // PB3
[20:45:32.066]                      // -> [SWO_Pin <= 0x00010003]
[20:45:32.066]                  </block>
[20:45:32.066]                  <block atomic="false" info="configure SWO">
[20:45:32.066]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:45:32.067]                      // -> [pin <= 0x00000003]
[20:45:32.067]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:45:32.067]                      // -> [port <= 0x00000001]
[20:45:32.067]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:45:32.067]                      // -> [portAdr <= 0x40020400]
[20:45:32.067]                    pos = pin * 2;
[20:45:32.067]                      // -> [pos <= 0x00000006]
[20:45:32.068]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:45:32.068]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.068]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.068]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:45:32.069]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.069]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.070]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:45:32.070]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.070]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.070]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:45:32.071]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.071]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.071]                  </block>
[20:45:32.072]                  <control if="pin <  8" while="" timeout="0" info="">
[20:45:32.072]                    // if-block "pin <  8"
[20:45:32.072]                      // =>  TRUE
[20:45:32.072]                    <block atomic="false" info="">
[20:45:32.072]                      pos = ((pin    ) & 7) * 4;
[20:45:32.072]                        // -> [pos <= 0x0000000C]
[20:45:32.072]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:45:32.073]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.073]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.073]                    </block>
[20:45:32.074]                    // end if-block "pin <  8"
[20:45:32.074]                  </control>
[20:45:32.074]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:45:32.074]                    // if-block "pin >= 8"
[20:45:32.074]                      // =>  FALSE
[20:45:32.074]                    // skip if-block "pin >= 8"
[20:45:32.074]                  </control>
[20:45:32.074]                </sequence>
[20:45:32.075]            </block>
[20:45:32.075]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:45:32.075]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:45:32.075]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:32.076]            </block>
[20:45:32.076]          </sequence>
[20:45:32.076]      </block>
[20:45:32.076]      // end if-block "traceSWO"
[20:45:32.076]    </control>
[20:45:32.076]    <control if="traceTPIU" while="" timeout="0" info="">
[20:45:32.077]      // if-block "traceTPIU"
[20:45:32.077]        // =>  FALSE
[20:45:32.077]      // skip if-block "traceTPIU"
[20:45:32.077]    </control>
[20:45:32.077]  </sequence>
[20:45:32.077]  
[20:46:40.247]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:46:40.247]  
[20:46:40.248]  <debugvars>
[20:46:40.248]    // Pre-defined
[20:46:40.248]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:46:40.249]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:46:40.249]    __dp=0x00000000
[20:46:40.249]    __ap=0x00000000
[20:46:40.249]    __traceout=0x00000001      (SWO Trace)
[20:46:40.249]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:46:40.250]    __FlashAddr=0x00000000
[20:46:40.250]    __FlashLen=0x00000000
[20:46:40.250]    __FlashArg=0x00000000
[20:46:40.250]    __FlashOp=0x00000000
[20:46:40.250]    __Result=0x00000000
[20:46:40.251]    
[20:46:40.251]    // User-defined
[20:46:40.251]    DbgMCU_CR=0x00000007
[20:46:40.251]    DbgMCU_APB1_Fz=0x00000000
[20:46:40.251]    DbgMCU_APB2_Fz=0x00000000
[20:46:40.251]    TraceClk_Pin=0x00040002
[20:46:40.252]    TraceD0_Pin=0x00040003
[20:46:40.252]    TraceD1_Pin=0x00040004
[20:46:40.252]    TraceD2_Pin=0x00040005
[20:46:40.252]    TraceD3_Pin=0x00040006
[20:46:40.252]  </debugvars>
[20:46:40.253]  
[20:46:40.253]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:46:40.253]    <block atomic="false" info="">
[20:46:40.253]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:46:40.253]        // -> [traceSWO <= 0x00000001]
[20:46:40.254]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:46:40.254]        // -> [traceTPIU <= 0x00000000]
[20:46:40.254]    </block>
[20:46:40.254]    <control if="traceSWO" while="" timeout="0" info="">
[20:46:40.254]      // if-block "traceSWO"
[20:46:40.254]        // =>  TRUE
[20:46:40.254]      <block atomic="false" info="">
[20:46:40.255]        Sequence("DisableTraceSWO");
[20:46:40.255]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:46:40.255]            <block atomic="false" info="">
[20:46:40.255]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:46:40.255]                // -> [dbgmcu_val <= 0x00000000]
[20:46:40.256]            </block>
[20:46:40.256]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:46:40.256]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:46:40.256]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:46:40.257]                // -> [dbgmcu_val <= 0x00000007]
[20:46:40.257]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:46:40.257]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:46:40.257]            </block>
[20:46:40.258]          </sequence>
[20:46:40.258]      </block>
[20:46:40.258]      // end if-block "traceSWO"
[20:46:40.258]    </control>
[20:46:40.258]    <control if="traceTPIU" while="" timeout="0" info="">
[20:46:40.258]      // if-block "traceTPIU"
[20:46:40.259]        // =>  FALSE
[20:46:40.259]      // skip if-block "traceTPIU"
[20:46:40.259]    </control>
[20:46:40.259]  </sequence>
[20:46:40.259]  
[20:47:45.671]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:47:45.671]  
[20:47:45.733]  <debugvars>
[20:47:45.733]    // Pre-defined
[20:47:45.734]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:47:45.735]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:47:45.735]    __dp=0x00000000
[20:47:45.738]    __ap=0x00000000
[20:47:45.738]    __traceout=0x00000001      (SWO Trace)
[20:47:45.739]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:47:45.739]    __FlashAddr=0x00000000
[20:47:45.740]    __FlashLen=0x00000000
[20:47:45.740]    __FlashArg=0x00000000
[20:47:45.741]    __FlashOp=0x00000000
[20:47:45.742]    __Result=0x00000000
[20:47:45.742]    
[20:47:45.742]    // User-defined
[20:47:45.743]    DbgMCU_CR=0x00000007
[20:47:45.743]    DbgMCU_APB1_Fz=0x00000000
[20:47:45.744]    DbgMCU_APB2_Fz=0x00000000
[20:47:45.744]    TraceClk_Pin=0x00040002
[20:47:45.745]    TraceD0_Pin=0x00040003
[20:47:45.745]    TraceD1_Pin=0x00040004
[20:47:45.745]    TraceD2_Pin=0x00040005
[20:47:45.745]    TraceD3_Pin=0x00040006
[20:47:45.745]  </debugvars>
[20:47:45.746]  
[20:47:45.746]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:47:45.746]    <block atomic="false" info="">
[20:47:45.746]      Sequence("CheckID");
[20:47:45.746]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:47:45.747]          <block atomic="false" info="">
[20:47:45.747]            __var pidr1 = 0;
[20:47:45.747]              // -> [pidr1 <= 0x00000000]
[20:47:45.747]            __var pidr2 = 0;
[20:47:45.747]              // -> [pidr2 <= 0x00000000]
[20:47:45.748]            __var jep106id = 0;
[20:47:45.748]              // -> [jep106id <= 0x00000000]
[20:47:45.748]            __var ROMTableBase = 0;
[20:47:45.748]              // -> [ROMTableBase <= 0x00000000]
[20:47:45.748]            __ap = 0;      // AHB-AP
[20:47:45.748]              // -> [__ap <= 0x00000000]
[20:47:45.749]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:47:45.749]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.749]              // -> [ROMTableBase <= 0xE00FD000]
[20:47:45.750]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:47:45.750]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.750]              // -> [pidr1 <= 0x00000004]
[20:47:45.750]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:47:45.751]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.751]              // -> [pidr2 <= 0x0000001A]
[20:47:45.752]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:47:45.752]              // -> [jep106id <= 0x00000020]
[20:47:45.752]          </block>
[20:47:45.752]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:47:45.752]            // if-block "jep106id != 0x20"
[20:47:45.752]              // =>  FALSE
[20:47:45.753]            // skip if-block "jep106id != 0x20"
[20:47:45.753]          </control>
[20:47:45.753]        </sequence>
[20:47:45.753]    </block>
[20:47:45.753]  </sequence>
[20:47:45.754]  
[20:47:45.768]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:47:45.768]  
[20:47:45.768]  <debugvars>
[20:47:45.769]    // Pre-defined
[20:47:45.769]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:47:45.769]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:47:45.769]    __dp=0x00000000
[20:47:45.769]    __ap=0x00000000
[20:47:45.769]    __traceout=0x00000001      (SWO Trace)
[20:47:45.770]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:47:45.770]    __FlashAddr=0x00000000
[20:47:45.770]    __FlashLen=0x00000000
[20:47:45.770]    __FlashArg=0x00000000
[20:47:45.770]    __FlashOp=0x00000000
[20:47:45.771]    __Result=0x00000000
[20:47:45.771]    
[20:47:45.771]    // User-defined
[20:47:45.771]    DbgMCU_CR=0x00000007
[20:47:45.771]    DbgMCU_APB1_Fz=0x00000000
[20:47:45.771]    DbgMCU_APB2_Fz=0x00000000
[20:47:45.771]    TraceClk_Pin=0x00040002
[20:47:45.771]    TraceD0_Pin=0x00040003
[20:47:45.772]    TraceD1_Pin=0x00040004
[20:47:45.772]    TraceD2_Pin=0x00040005
[20:47:45.772]    TraceD3_Pin=0x00040006
[20:47:45.772]  </debugvars>
[20:47:45.772]  
[20:47:45.772]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:47:45.772]    <block atomic="false" info="">
[20:47:45.773]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:47:45.773]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.774]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:47:45.774]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.774]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:47:45.775]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.775]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:47:45.775]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:47:45.776]    </block>
[20:47:45.776]  </sequence>
[20:47:45.776]  
[20:48:16.449]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:48:16.449]  
[20:48:16.449]  <debugvars>
[20:48:16.449]    // Pre-defined
[20:48:16.449]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:16.449]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:16.450]    __dp=0x00000000
[20:48:16.450]    __ap=0x00000000
[20:48:16.450]    __traceout=0x00000001      (SWO Trace)
[20:48:16.450]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:16.450]    __FlashAddr=0x00000000
[20:48:16.450]    __FlashLen=0x00000000
[20:48:16.451]    __FlashArg=0x00000000
[20:48:16.451]    __FlashOp=0x00000000
[20:48:16.451]    __Result=0x00000000
[20:48:16.451]    
[20:48:16.451]    // User-defined
[20:48:16.451]    DbgMCU_CR=0x00000007
[20:48:16.451]    DbgMCU_APB1_Fz=0x00000000
[20:48:16.452]    DbgMCU_APB2_Fz=0x00000000
[20:48:16.452]    TraceClk_Pin=0x00040002
[20:48:16.452]    TraceD0_Pin=0x00040003
[20:48:16.452]    TraceD1_Pin=0x00040004
[20:48:16.453]    TraceD2_Pin=0x00040005
[20:48:16.453]    TraceD3_Pin=0x00040006
[20:48:16.453]  </debugvars>
[20:48:16.453]  
[20:48:16.453]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:48:16.453]    <block atomic="false" info="">
[20:48:16.454]      Sequence("CheckID");
[20:48:16.454]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:48:16.454]          <block atomic="false" info="">
[20:48:16.454]            __var pidr1 = 0;
[20:48:16.454]              // -> [pidr1 <= 0x00000000]
[20:48:16.455]            __var pidr2 = 0;
[20:48:16.455]              // -> [pidr2 <= 0x00000000]
[20:48:16.455]            __var jep106id = 0;
[20:48:16.455]              // -> [jep106id <= 0x00000000]
[20:48:16.455]            __var ROMTableBase = 0;
[20:48:16.455]              // -> [ROMTableBase <= 0x00000000]
[20:48:16.456]            __ap = 0;      // AHB-AP
[20:48:16.456]              // -> [__ap <= 0x00000000]
[20:48:16.456]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:48:16.456]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.456]              // -> [ROMTableBase <= 0xE00FD000]
[20:48:16.456]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:48:16.457]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.457]              // -> [pidr1 <= 0x00000004]
[20:48:16.458]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:48:16.458]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.458]              // -> [pidr2 <= 0x0000001A]
[20:48:16.458]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:48:16.458]              // -> [jep106id <= 0x00000020]
[20:48:16.459]          </block>
[20:48:16.459]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:48:16.459]            // if-block "jep106id != 0x20"
[20:48:16.459]              // =>  FALSE
[20:48:16.459]            // skip if-block "jep106id != 0x20"
[20:48:16.459]          </control>
[20:48:16.460]        </sequence>
[20:48:16.460]    </block>
[20:48:16.460]  </sequence>
[20:48:16.460]  
[20:48:16.475]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:48:16.475]  
[20:48:16.476]  <debugvars>
[20:48:16.476]    // Pre-defined
[20:48:16.476]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:16.476]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:16.476]    __dp=0x00000000
[20:48:16.477]    __ap=0x00000000
[20:48:16.477]    __traceout=0x00000001      (SWO Trace)
[20:48:16.477]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:16.477]    __FlashAddr=0x00000000
[20:48:16.477]    __FlashLen=0x00000000
[20:48:16.478]    __FlashArg=0x00000000
[20:48:16.478]    __FlashOp=0x00000000
[20:48:16.478]    __Result=0x00000000
[20:48:16.478]    
[20:48:16.478]    // User-defined
[20:48:16.478]    DbgMCU_CR=0x00000007
[20:48:16.479]    DbgMCU_APB1_Fz=0x00000000
[20:48:16.479]    DbgMCU_APB2_Fz=0x00000000
[20:48:16.479]    TraceClk_Pin=0x00040002
[20:48:16.479]    TraceD0_Pin=0x00040003
[20:48:16.479]    TraceD1_Pin=0x00040004
[20:48:16.480]    TraceD2_Pin=0x00040005
[20:48:16.480]    TraceD3_Pin=0x00040006
[20:48:16.480]  </debugvars>
[20:48:16.480]  
[20:48:16.480]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:48:16.481]    <block atomic="false" info="">
[20:48:16.481]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:48:16.481]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.482]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:48:16.482]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.482]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:48:16.483]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.483]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:48:16.484]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.484]    </block>
[20:48:16.484]  </sequence>
[20:48:16.484]  
[20:48:16.501]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:48:16.501]  
[20:48:16.501]  <debugvars>
[20:48:16.501]    // Pre-defined
[20:48:16.501]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:16.501]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:16.501]    __dp=0x00000000
[20:48:16.502]    __ap=0x00000000
[20:48:16.502]    __traceout=0x00000001      (SWO Trace)
[20:48:16.502]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:16.502]    __FlashAddr=0x00000000
[20:48:16.503]    __FlashLen=0x00000000
[20:48:16.503]    __FlashArg=0x00000000
[20:48:16.503]    __FlashOp=0x00000000
[20:48:16.503]    __Result=0x00000000
[20:48:16.503]    
[20:48:16.503]    // User-defined
[20:48:16.504]    DbgMCU_CR=0x00000007
[20:48:16.504]    DbgMCU_APB1_Fz=0x00000000
[20:48:16.504]    DbgMCU_APB2_Fz=0x00000000
[20:48:16.504]    TraceClk_Pin=0x00040002
[20:48:16.504]    TraceD0_Pin=0x00040003
[20:48:16.504]    TraceD1_Pin=0x00040004
[20:48:16.505]    TraceD2_Pin=0x00040005
[20:48:16.505]    TraceD3_Pin=0x00040006
[20:48:16.505]  </debugvars>
[20:48:16.505]  
[20:48:16.505]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:48:16.505]    <block atomic="false" info="">
[20:48:16.506]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:48:16.506]        // -> [traceSWO <= 0x00000001]
[20:48:16.506]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:48:16.506]        // -> [traceTPIU <= 0x00000000]
[20:48:16.506]    </block>
[20:48:16.507]    <control if="traceSWO" while="" timeout="0" info="">
[20:48:16.507]      // if-block "traceSWO"
[20:48:16.507]        // =>  TRUE
[20:48:16.507]      <block atomic="false" info="">
[20:48:16.507]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:48:16.507]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:48:16.508]            <block atomic="false" info="">
[20:48:16.508]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:48:16.508]                // -> [dbgmcu_val <= 0x00000000]
[20:48:16.508]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:48:16.508]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:48:16.508]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:48:16.509]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.509]                // -> [dbgmcu_val <= 0x00000007]
[20:48:16.509]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:48:16.509]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:48:16.509]              Sequence("ConfigureTraceSWOPin");
[20:48:16.510]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:48:16.510]                  <block atomic="false" info="">
[20:48:16.510]                    __var pin     = 0;
[20:48:16.510]                      // -> [pin <= 0x00000000]
[20:48:16.510]                    __var port    = 0;
[20:48:16.511]                      // -> [port <= 0x00000000]
[20:48:16.511]                    __var portAdr = 0;
[20:48:16.511]                      // -> [portAdr <= 0x00000000]
[20:48:16.511]                    __var pos     = 0;
[20:48:16.511]                      // -> [pos <= 0x00000000]
[20:48:16.511]                    __var SWO_Pin = 0x00010003;          // PB3
[20:48:16.511]                      // -> [SWO_Pin <= 0x00010003]
[20:48:16.512]                  </block>
[20:48:16.512]                  <block atomic="false" info="configure SWO">
[20:48:16.512]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:48:16.512]                      // -> [pin <= 0x00000003]
[20:48:16.512]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:48:16.512]                      // -> [port <= 0x00000001]
[20:48:16.513]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:48:16.513]                      // -> [portAdr <= 0x40020400]
[20:48:16.513]                    pos = pin * 2;
[20:48:16.513]                      // -> [pos <= 0x00000006]
[20:48:16.513]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:48:16.514]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.514]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.515]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:48:16.515]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.516]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.516]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:48:16.516]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.517]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.517]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:48:16.517]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.518]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.518]                  </block>
[20:48:16.518]                  <control if="pin <  8" while="" timeout="0" info="">
[20:48:16.518]                    // if-block "pin <  8"
[20:48:16.519]                      // =>  TRUE
[20:48:16.519]                    <block atomic="false" info="">
[20:48:16.519]                      pos = ((pin    ) & 7) * 4;
[20:48:16.519]                        // -> [pos <= 0x0000000C]
[20:48:16.519]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:48:16.520]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.520]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.520]                    </block>
[20:48:16.520]                    // end if-block "pin <  8"
[20:48:16.521]                  </control>
[20:48:16.521]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:48:16.521]                    // if-block "pin >= 8"
[20:48:16.521]                      // =>  FALSE
[20:48:16.521]                    // skip if-block "pin >= 8"
[20:48:16.521]                  </control>
[20:48:16.522]                </sequence>
[20:48:16.522]            </block>
[20:48:16.522]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:48:16.522]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:48:16.522]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.523]            </block>
[20:48:16.523]          </sequence>
[20:48:16.523]      </block>
[20:48:16.523]      // end if-block "traceSWO"
[20:48:16.523]    </control>
[20:48:16.524]    <control if="traceTPIU" while="" timeout="0" info="">
[20:48:16.524]      // if-block "traceTPIU"
[20:48:16.524]        // =>  FALSE
[20:48:16.524]      // skip if-block "traceTPIU"
[20:48:16.524]    </control>
[20:48:16.524]  </sequence>
[20:48:16.525]  
[20:48:16.528]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:48:16.528]  
[20:48:16.528]  <debugvars>
[20:48:16.529]    // Pre-defined
[20:48:16.529]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:16.529]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:16.529]    __dp=0x00000000
[20:48:16.529]    __ap=0x00000000
[20:48:16.530]    __traceout=0x00000001      (SWO Trace)
[20:48:16.530]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:16.530]    __FlashAddr=0x00000000
[20:48:16.530]    __FlashLen=0x00000000
[20:48:16.530]    __FlashArg=0x00000000
[20:48:16.530]    __FlashOp=0x00000000
[20:48:16.531]    __Result=0x00000000
[20:48:16.531]    
[20:48:16.531]    // User-defined
[20:48:16.531]    DbgMCU_CR=0x00000007
[20:48:16.531]    DbgMCU_APB1_Fz=0x00000000
[20:48:16.531]    DbgMCU_APB2_Fz=0x00000000
[20:48:16.531]    TraceClk_Pin=0x00040002
[20:48:16.532]    TraceD0_Pin=0x00040003
[20:48:16.532]    TraceD1_Pin=0x00040004
[20:48:16.532]    TraceD2_Pin=0x00040005
[20:48:16.532]    TraceD3_Pin=0x00040006
[20:48:16.532]  </debugvars>
[20:48:16.533]  
[20:48:16.533]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:48:16.533]    <block atomic="false" info="">
[20:48:16.533]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:48:16.533]        // -> [traceSWO <= 0x00000001]
[20:48:16.533]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:48:16.534]        // -> [traceTPIU <= 0x00000000]
[20:48:16.534]    </block>
[20:48:16.534]    <control if="traceSWO" while="" timeout="0" info="">
[20:48:16.534]      // if-block "traceSWO"
[20:48:16.534]        // =>  TRUE
[20:48:16.534]      <block atomic="false" info="">
[20:48:16.535]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:48:16.535]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:48:16.535]            <block atomic="false" info="">
[20:48:16.535]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:48:16.535]                // -> [dbgmcu_val <= 0x00000000]
[20:48:16.535]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:48:16.535]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:48:16.536]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:48:16.536]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.536]                // -> [dbgmcu_val <= 0x00000007]
[20:48:16.536]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:48:16.537]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:48:16.537]              Sequence("ConfigureTraceSWOPin");
[20:48:16.537]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:48:16.537]                  <block atomic="false" info="">
[20:48:16.537]                    __var pin     = 0;
[20:48:16.537]                      // -> [pin <= 0x00000000]
[20:48:16.537]                    __var port    = 0;
[20:48:16.537]                      // -> [port <= 0x00000000]
[20:48:16.538]                    __var portAdr = 0;
[20:48:16.538]                      // -> [portAdr <= 0x00000000]
[20:48:16.538]                    __var pos     = 0;
[20:48:16.538]                      // -> [pos <= 0x00000000]
[20:48:16.538]                    __var SWO_Pin = 0x00010003;          // PB3
[20:48:16.538]                      // -> [SWO_Pin <= 0x00010003]
[20:48:16.538]                  </block>
[20:48:16.539]                  <block atomic="false" info="configure SWO">
[20:48:16.539]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:48:16.539]                      // -> [pin <= 0x00000003]
[20:48:16.539]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:48:16.539]                      // -> [port <= 0x00000001]
[20:48:16.539]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:48:16.539]                      // -> [portAdr <= 0x40020400]
[20:48:16.539]                    pos = pin * 2;
[20:48:16.540]                      // -> [pos <= 0x00000006]
[20:48:16.540]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:48:16.540]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.541]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.541]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:48:16.541]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.541]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.542]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:48:16.542]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.542]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.543]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:48:16.543]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.543]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.543]                  </block>
[20:48:16.544]                  <control if="pin <  8" while="" timeout="0" info="">
[20:48:16.544]                    // if-block "pin <  8"
[20:48:16.544]                      // =>  TRUE
[20:48:16.544]                    <block atomic="false" info="">
[20:48:16.544]                      pos = ((pin    ) & 7) * 4;
[20:48:16.544]                        // -> [pos <= 0x0000000C]
[20:48:16.544]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:48:16.545]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.545]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.545]                    </block>
[20:48:16.545]                    // end if-block "pin <  8"
[20:48:16.546]                  </control>
[20:48:16.546]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:48:16.546]                    // if-block "pin >= 8"
[20:48:16.546]                      // =>  FALSE
[20:48:16.546]                    // skip if-block "pin >= 8"
[20:48:16.546]                  </control>
[20:48:16.546]                </sequence>
[20:48:16.546]            </block>
[20:48:16.546]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:48:16.547]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:48:16.547]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.547]            </block>
[20:48:16.547]          </sequence>
[20:48:16.547]      </block>
[20:48:16.547]      // end if-block "traceSWO"
[20:48:16.548]    </control>
[20:48:16.548]    <control if="traceTPIU" while="" timeout="0" info="">
[20:48:16.548]      // if-block "traceTPIU"
[20:48:16.548]        // =>  FALSE
[20:48:16.548]      // skip if-block "traceTPIU"
[20:48:16.548]    </control>
[20:48:16.548]  </sequence>
[20:48:16.549]  
[20:48:16.761]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:48:16.761]  
[20:48:16.761]  <debugvars>
[20:48:16.762]    // Pre-defined
[20:48:16.762]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:16.762]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:16.762]    __dp=0x00000000
[20:48:16.762]    __ap=0x00000000
[20:48:16.762]    __traceout=0x00000001      (SWO Trace)
[20:48:16.763]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:16.763]    __FlashAddr=0x00000000
[20:48:16.763]    __FlashLen=0x00000000
[20:48:16.763]    __FlashArg=0x00000000
[20:48:16.763]    __FlashOp=0x00000000
[20:48:16.763]    __Result=0x00000000
[20:48:16.764]    
[20:48:16.764]    // User-defined
[20:48:16.764]    DbgMCU_CR=0x00000007
[20:48:16.764]    DbgMCU_APB1_Fz=0x00000000
[20:48:16.764]    DbgMCU_APB2_Fz=0x00000000
[20:48:16.765]    TraceClk_Pin=0x00040002
[20:48:16.765]    TraceD0_Pin=0x00040003
[20:48:16.765]    TraceD1_Pin=0x00040004
[20:48:16.765]    TraceD2_Pin=0x00040005
[20:48:16.765]    TraceD3_Pin=0x00040006
[20:48:16.765]  </debugvars>
[20:48:16.766]  
[20:48:16.766]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:48:16.766]    <block atomic="false" info="">
[20:48:16.766]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:48:16.766]        // -> [traceSWO <= 0x00000001]
[20:48:16.766]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:48:16.767]        // -> [traceTPIU <= 0x00000000]
[20:48:16.767]    </block>
[20:48:16.767]    <control if="traceSWO" while="" timeout="0" info="">
[20:48:16.767]      // if-block "traceSWO"
[20:48:16.767]        // =>  TRUE
[20:48:16.767]      <block atomic="false" info="">
[20:48:16.768]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:48:16.768]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:48:16.768]            <block atomic="false" info="">
[20:48:16.768]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:48:16.768]                // -> [dbgmcu_val <= 0x00000000]
[20:48:16.768]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:48:16.769]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:48:16.769]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:48:16.769]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.770]                // -> [dbgmcu_val <= 0x00000007]
[20:48:16.770]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:48:16.770]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:48:16.770]              Sequence("ConfigureTraceSWOPin");
[20:48:16.770]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:48:16.771]                  <block atomic="false" info="">
[20:48:16.771]                    __var pin     = 0;
[20:48:16.771]                      // -> [pin <= 0x00000000]
[20:48:16.771]                    __var port    = 0;
[20:48:16.771]                      // -> [port <= 0x00000000]
[20:48:16.771]                    __var portAdr = 0;
[20:48:16.772]                      // -> [portAdr <= 0x00000000]
[20:48:16.772]                    __var pos     = 0;
[20:48:16.772]                      // -> [pos <= 0x00000000]
[20:48:16.772]                    __var SWO_Pin = 0x00010003;          // PB3
[20:48:16.772]                      // -> [SWO_Pin <= 0x00010003]
[20:48:16.773]                  </block>
[20:48:16.773]                  <block atomic="false" info="configure SWO">
[20:48:16.773]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:48:16.773]                      // -> [pin <= 0x00000003]
[20:48:16.773]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:48:16.773]                      // -> [port <= 0x00000001]
[20:48:16.773]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:48:16.773]                      // -> [portAdr <= 0x40020400]
[20:48:16.774]                    pos = pin * 2;
[20:48:16.774]                      // -> [pos <= 0x00000006]
[20:48:16.774]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:48:16.774]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.775]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.775]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:48:16.776]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.776]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.776]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:48:16.777]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.777]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.777]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:48:16.778]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.778]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.778]                  </block>
[20:48:16.779]                  <control if="pin <  8" while="" timeout="0" info="">
[20:48:16.779]                    // if-block "pin <  8"
[20:48:16.779]                      // =>  TRUE
[20:48:16.779]                    <block atomic="false" info="">
[20:48:16.779]                      pos = ((pin    ) & 7) * 4;
[20:48:16.779]                        // -> [pos <= 0x0000000C]
[20:48:16.780]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:48:16.780]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.780]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.781]                    </block>
[20:48:16.781]                    // end if-block "pin <  8"
[20:48:16.781]                  </control>
[20:48:16.781]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:48:16.781]                    // if-block "pin >= 8"
[20:48:16.781]                      // =>  FALSE
[20:48:16.782]                    // skip if-block "pin >= 8"
[20:48:16.782]                  </control>
[20:48:16.782]                </sequence>
[20:48:16.782]            </block>
[20:48:16.782]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:48:16.782]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:48:16.783]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:16.783]            </block>
[20:48:16.783]          </sequence>
[20:48:16.783]      </block>
[20:48:16.783]      // end if-block "traceSWO"
[20:48:16.784]    </control>
[20:48:16.784]    <control if="traceTPIU" while="" timeout="0" info="">
[20:48:16.784]      // if-block "traceTPIU"
[20:48:16.784]        // =>  FALSE
[20:48:16.784]      // skip if-block "traceTPIU"
[20:48:16.784]    </control>
[20:48:16.784]  </sequence>
[20:48:16.785]  
[20:49:03.333]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:49:03.333]  
[20:49:03.333]  <debugvars>
[20:49:03.333]    // Pre-defined
[20:49:03.334]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:49:03.334]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:49:03.334]    __dp=0x00000000
[20:49:03.334]    __ap=0x00000000
[20:49:03.334]    __traceout=0x00000001      (SWO Trace)
[20:49:03.335]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:49:03.335]    __FlashAddr=0x00000000
[20:49:03.335]    __FlashLen=0x00000000
[20:49:03.335]    __FlashArg=0x00000000
[20:49:03.335]    __FlashOp=0x00000000
[20:49:03.336]    __Result=0x00000000
[20:49:03.336]    
[20:49:03.336]    // User-defined
[20:49:03.336]    DbgMCU_CR=0x00000007
[20:49:03.336]    DbgMCU_APB1_Fz=0x00000000
[20:49:03.336]    DbgMCU_APB2_Fz=0x00000000
[20:49:03.337]    TraceClk_Pin=0x00040002
[20:49:03.337]    TraceD0_Pin=0x00040003
[20:49:03.337]    TraceD1_Pin=0x00040004
[20:49:03.337]    TraceD2_Pin=0x00040005
[20:49:03.337]    TraceD3_Pin=0x00040006
[20:49:03.338]  </debugvars>
[20:49:03.338]  
[20:49:03.338]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:49:03.338]    <block atomic="false" info="">
[20:49:03.338]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:49:03.339]        // -> [traceSWO <= 0x00000001]
[20:49:03.339]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:49:03.339]        // -> [traceTPIU <= 0x00000000]
[20:49:03.339]    </block>
[20:49:03.339]    <control if="traceSWO" while="" timeout="0" info="">
[20:49:03.339]      // if-block "traceSWO"
[20:49:03.340]        // =>  TRUE
[20:49:03.340]      <block atomic="false" info="">
[20:49:03.340]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:49:03.340]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:49:03.341]            <block atomic="false" info="">
[20:49:03.341]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:49:03.341]                // -> [dbgmcu_val <= 0x00000000]
[20:49:03.341]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:49:03.341]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:49:03.342]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:49:03.342]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.342]                // -> [dbgmcu_val <= 0x00000007]
[20:49:03.342]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:49:03.342]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:49:03.343]              Sequence("ConfigureTraceSWOPin");
[20:49:03.343]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:49:03.343]                  <block atomic="false" info="">
[20:49:03.343]                    __var pin     = 0;
[20:49:03.343]                      // -> [pin <= 0x00000000]
[20:49:03.343]                    __var port    = 0;
[20:49:03.344]                      // -> [port <= 0x00000000]
[20:49:03.344]                    __var portAdr = 0;
[20:49:03.344]                      // -> [portAdr <= 0x00000000]
[20:49:03.344]                    __var pos     = 0;
[20:49:03.344]                      // -> [pos <= 0x00000000]
[20:49:03.344]                    __var SWO_Pin = 0x00010003;          // PB3
[20:49:03.345]                      // -> [SWO_Pin <= 0x00010003]
[20:49:03.345]                  </block>
[20:49:03.345]                  <block atomic="false" info="configure SWO">
[20:49:03.345]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:49:03.345]                      // -> [pin <= 0x00000003]
[20:49:03.345]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:49:03.345]                      // -> [port <= 0x00000001]
[20:49:03.345]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:49:03.346]                      // -> [portAdr <= 0x40020400]
[20:49:03.346]                    pos = pin * 2;
[20:49:03.346]                      // -> [pos <= 0x00000006]
[20:49:03.346]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:49:03.347]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.347]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.347]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:49:03.348]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.348]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.348]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:49:03.349]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.349]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.349]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:49:03.350]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.350]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.350]                  </block>
[20:49:03.351]                  <control if="pin <  8" while="" timeout="0" info="">
[20:49:03.351]                    // if-block "pin <  8"
[20:49:03.351]                      // =>  TRUE
[20:49:03.351]                    <block atomic="false" info="">
[20:49:03.351]                      pos = ((pin    ) & 7) * 4;
[20:49:03.351]                        // -> [pos <= 0x0000000C]
[20:49:03.351]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:49:03.352]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.352]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.352]                    </block>
[20:49:03.353]                    // end if-block "pin <  8"
[20:49:03.353]                  </control>
[20:49:03.353]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:49:03.353]                    // if-block "pin >= 8"
[20:49:03.353]                      // =>  FALSE
[20:49:03.353]                    // skip if-block "pin >= 8"
[20:49:03.353]                  </control>
[20:49:03.353]                </sequence>
[20:49:03.354]            </block>
[20:49:03.354]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:49:03.354]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:49:03.354]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:03.354]            </block>
[20:49:03.355]          </sequence>
[20:49:03.355]      </block>
[20:49:03.355]      // end if-block "traceSWO"
[20:49:03.355]    </control>
[20:49:03.355]    <control if="traceTPIU" while="" timeout="0" info="">
[20:49:03.355]      // if-block "traceTPIU"
[20:49:03.355]        // =>  FALSE
[20:49:03.356]      // skip if-block "traceTPIU"
[20:49:03.356]    </control>
[20:49:03.356]  </sequence>
[20:49:03.356]  
[20:50:03.364]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:50:03.364]  
[20:50:03.364]  <debugvars>
[20:50:03.364]    // Pre-defined
[20:50:03.365]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:50:03.365]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:50:03.365]    __dp=0x00000000
[20:50:03.365]    __ap=0x00000000
[20:50:03.365]    __traceout=0x00000001      (SWO Trace)
[20:50:03.366]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:50:03.366]    __FlashAddr=0x00000000
[20:50:03.366]    __FlashLen=0x00000000
[20:50:03.366]    __FlashArg=0x00000000
[20:50:03.366]    __FlashOp=0x00000000
[20:50:03.367]    __Result=0x00000000
[20:50:03.367]    
[20:50:03.367]    // User-defined
[20:50:03.367]    DbgMCU_CR=0x00000007
[20:50:03.367]    DbgMCU_APB1_Fz=0x00000000
[20:50:03.367]    DbgMCU_APB2_Fz=0x00000000
[20:50:03.368]    TraceClk_Pin=0x00040002
[20:50:03.368]    TraceD0_Pin=0x00040003
[20:50:03.368]    TraceD1_Pin=0x00040004
[20:50:03.368]    TraceD2_Pin=0x00040005
[20:50:03.369]    TraceD3_Pin=0x00040006
[20:50:03.369]  </debugvars>
[20:50:03.369]  
[20:50:03.369]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:50:03.369]    <block atomic="false" info="">
[20:50:03.370]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:50:03.370]        // -> [traceSWO <= 0x00000001]
[20:50:03.370]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:50:03.370]        // -> [traceTPIU <= 0x00000000]
[20:50:03.370]    </block>
[20:50:03.370]    <control if="traceSWO" while="" timeout="0" info="">
[20:50:03.371]      // if-block "traceSWO"
[20:50:03.371]        // =>  TRUE
[20:50:03.371]      <block atomic="false" info="">
[20:50:03.371]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:50:03.371]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:50:03.372]            <block atomic="false" info="">
[20:50:03.372]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:50:03.372]                // -> [dbgmcu_val <= 0x00000000]
[20:50:03.372]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:50:03.372]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:50:03.372]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:50:03.373]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.373]                // -> [dbgmcu_val <= 0x00000007]
[20:50:03.373]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:50:03.374]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:50:03.374]              Sequence("ConfigureTraceSWOPin");
[20:50:03.374]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:50:03.374]                  <block atomic="false" info="">
[20:50:03.374]                    __var pin     = 0;
[20:50:03.374]                      // -> [pin <= 0x00000000]
[20:50:03.375]                    __var port    = 0;
[20:50:03.375]                      // -> [port <= 0x00000000]
[20:50:03.375]                    __var portAdr = 0;
[20:50:03.375]                      // -> [portAdr <= 0x00000000]
[20:50:03.375]                    __var pos     = 0;
[20:50:03.376]                      // -> [pos <= 0x00000000]
[20:50:03.376]                    __var SWO_Pin = 0x00010003;          // PB3
[20:50:03.376]                      // -> [SWO_Pin <= 0x00010003]
[20:50:03.376]                  </block>
[20:50:03.376]                  <block atomic="false" info="configure SWO">
[20:50:03.377]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:50:03.377]                      // -> [pin <= 0x00000003]
[20:50:03.377]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:50:03.377]                      // -> [port <= 0x00000001]
[20:50:03.377]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:50:03.377]                      // -> [portAdr <= 0x40020400]
[20:50:03.378]                    pos = pin * 2;
[20:50:03.378]                      // -> [pos <= 0x00000006]
[20:50:03.378]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:50:03.379]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.379]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.379]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:50:03.380]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.380]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.380]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:50:03.381]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.381]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.382]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:50:03.382]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.383]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.383]                  </block>
[20:50:03.383]                  <control if="pin <  8" while="" timeout="0" info="">
[20:50:03.383]                    // if-block "pin <  8"
[20:50:03.384]                      // =>  TRUE
[20:50:03.384]                    <block atomic="false" info="">
[20:50:03.384]                      pos = ((pin    ) & 7) * 4;
[20:50:03.384]                        // -> [pos <= 0x0000000C]
[20:50:03.384]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:50:03.385]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.385]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.386]                    </block>
[20:50:03.386]                    // end if-block "pin <  8"
[20:50:03.386]                  </control>
[20:50:03.386]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:50:03.386]                    // if-block "pin >= 8"
[20:50:03.387]                      // =>  FALSE
[20:50:03.387]                    // skip if-block "pin >= 8"
[20:50:03.387]                  </control>
[20:50:03.387]                </sequence>
[20:50:03.387]            </block>
[20:50:03.387]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:50:03.388]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:50:03.388]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:03.388]            </block>
[20:50:03.388]          </sequence>
[20:50:03.389]      </block>
[20:50:03.389]      // end if-block "traceSWO"
[20:50:03.389]    </control>
[20:50:03.389]    <control if="traceTPIU" while="" timeout="0" info="">
[20:50:03.389]      // if-block "traceTPIU"
[20:50:03.389]        // =>  FALSE
[20:50:03.390]      // skip if-block "traceTPIU"
[20:50:03.390]    </control>
[20:50:03.390]  </sequence>
[20:50:03.390]  
[20:56:09.725]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:56:09.725]  
[20:56:09.725]  <debugvars>
[20:56:09.726]    // Pre-defined
[20:56:09.726]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:56:09.726]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:56:09.726]    __dp=0x00000000
[20:56:09.726]    __ap=0x00000000
[20:56:09.726]    __traceout=0x00000001      (SWO Trace)
[20:56:09.727]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:56:09.727]    __FlashAddr=0x00000000
[20:56:09.727]    __FlashLen=0x00000000
[20:56:09.727]    __FlashArg=0x00000000
[20:56:09.727]    __FlashOp=0x00000000
[20:56:09.727]    __Result=0x00000000
[20:56:09.727]    
[20:56:09.727]    // User-defined
[20:56:09.728]    DbgMCU_CR=0x00000007
[20:56:09.728]    DbgMCU_APB1_Fz=0x00000000
[20:56:09.728]    DbgMCU_APB2_Fz=0x00000000
[20:56:09.728]    TraceClk_Pin=0x00040002
[20:56:09.728]    TraceD0_Pin=0x00040003
[20:56:09.728]    TraceD1_Pin=0x00040004
[20:56:09.728]    TraceD2_Pin=0x00040005
[20:56:09.728]    TraceD3_Pin=0x00040006
[20:56:09.729]  </debugvars>
[20:56:09.729]  
[20:56:09.729]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:56:09.729]    <block atomic="false" info="">
[20:56:09.729]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:56:09.729]        // -> [traceSWO <= 0x00000001]
[20:56:09.729]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:56:09.730]        // -> [traceTPIU <= 0x00000000]
[20:56:09.730]    </block>
[20:56:09.730]    <control if="traceSWO" while="" timeout="0" info="">
[20:56:09.730]      // if-block "traceSWO"
[20:56:09.730]        // =>  TRUE
[20:56:09.730]      <block atomic="false" info="">
[20:56:09.730]        Sequence("DisableTraceSWO");
[20:56:09.731]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:56:09.731]            <block atomic="false" info="">
[20:56:09.731]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:56:09.731]                // -> [dbgmcu_val <= 0x00000000]
[20:56:09.731]            </block>
[20:56:09.731]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:56:09.731]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:56:09.732]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:56:09.732]                // -> [dbgmcu_val <= 0x00000007]
[20:56:09.732]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:56:09.733]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:09.733]            </block>
[20:56:09.733]          </sequence>
[20:56:09.733]      </block>
[20:56:09.733]      // end if-block "traceSWO"
[20:56:09.733]    </control>
[20:56:09.733]    <control if="traceTPIU" while="" timeout="0" info="">
[20:56:09.734]      // if-block "traceTPIU"
[20:56:09.734]        // =>  FALSE
[20:56:09.734]      // skip if-block "traceTPIU"
[20:56:09.734]    </control>
[20:56:09.734]  </sequence>
[20:56:09.734]  
[20:57:40.235]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:57:40.235]  
[20:57:40.235]  <debugvars>
[20:57:40.236]    // Pre-defined
[20:57:40.236]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:40.236]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:57:40.236]    __dp=0x00000000
[20:57:40.236]    __ap=0x00000000
[20:57:40.236]    __traceout=0x00000001      (SWO Trace)
[20:57:40.237]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:40.237]    __FlashAddr=0x00000000
[20:57:40.237]    __FlashLen=0x00000000
[20:57:40.237]    __FlashArg=0x00000000
[20:57:40.237]    __FlashOp=0x00000000
[20:57:40.238]    __Result=0x00000000
[20:57:40.238]    
[20:57:40.238]    // User-defined
[20:57:40.238]    DbgMCU_CR=0x00000007
[20:57:40.238]    DbgMCU_APB1_Fz=0x00000000
[20:57:40.238]    DbgMCU_APB2_Fz=0x00000000
[20:57:40.238]    TraceClk_Pin=0x00040002
[20:57:40.239]    TraceD0_Pin=0x00040003
[20:57:40.239]    TraceD1_Pin=0x00040004
[20:57:40.239]    TraceD2_Pin=0x00040005
[20:57:40.239]    TraceD3_Pin=0x00040006
[20:57:40.239]  </debugvars>
[20:57:40.239]  
[20:57:40.240]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:57:40.240]    <block atomic="false" info="">
[20:57:40.240]      Sequence("CheckID");
[20:57:40.240]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:57:40.240]          <block atomic="false" info="">
[20:57:40.241]            __var pidr1 = 0;
[20:57:40.241]              // -> [pidr1 <= 0x00000000]
[20:57:40.241]            __var pidr2 = 0;
[20:57:40.241]              // -> [pidr2 <= 0x00000000]
[20:57:40.241]            __var jep106id = 0;
[20:57:40.241]              // -> [jep106id <= 0x00000000]
[20:57:40.241]            __var ROMTableBase = 0;
[20:57:40.242]              // -> [ROMTableBase <= 0x00000000]
[20:57:40.242]            __ap = 0;      // AHB-AP
[20:57:40.242]              // -> [__ap <= 0x00000000]
[20:57:40.242]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:57:40.242]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.243]              // -> [ROMTableBase <= 0xE00FD000]
[20:57:40.243]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:57:40.243]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.244]              // -> [pidr1 <= 0x00000004]
[20:57:40.244]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:57:40.244]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.244]              // -> [pidr2 <= 0x0000001A]
[20:57:40.245]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:57:40.245]              // -> [jep106id <= 0x00000020]
[20:57:40.245]          </block>
[20:57:40.245]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:57:40.245]            // if-block "jep106id != 0x20"
[20:57:40.245]              // =>  FALSE
[20:57:40.246]            // skip if-block "jep106id != 0x20"
[20:57:40.246]          </control>
[20:57:40.246]        </sequence>
[20:57:40.246]    </block>
[20:57:40.246]  </sequence>
[20:57:40.246]  
[20:57:40.262]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:57:40.262]  
[20:57:40.262]  <debugvars>
[20:57:40.263]    // Pre-defined
[20:57:40.263]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:40.263]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:57:40.263]    __dp=0x00000000
[20:57:40.263]    __ap=0x00000000
[20:57:40.263]    __traceout=0x00000001      (SWO Trace)
[20:57:40.264]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:40.264]    __FlashAddr=0x00000000
[20:57:40.264]    __FlashLen=0x00000000
[20:57:40.264]    __FlashArg=0x00000000
[20:57:40.264]    __FlashOp=0x00000000
[20:57:40.265]    __Result=0x00000000
[20:57:40.265]    
[20:57:40.265]    // User-defined
[20:57:40.265]    DbgMCU_CR=0x00000007
[20:57:40.265]    DbgMCU_APB1_Fz=0x00000000
[20:57:40.265]    DbgMCU_APB2_Fz=0x00000000
[20:57:40.265]    TraceClk_Pin=0x00040002
[20:57:40.266]    TraceD0_Pin=0x00040003
[20:57:40.266]    TraceD1_Pin=0x00040004
[20:57:40.266]    TraceD2_Pin=0x00040005
[20:57:40.266]    TraceD3_Pin=0x00040006
[20:57:40.266]  </debugvars>
[20:57:40.266]  
[20:57:40.267]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:57:40.267]    <block atomic="false" info="">
[20:57:40.267]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:57:40.267]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.268]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:57:40.268]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.268]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:57:40.269]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.269]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:57:40.270]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:40.270]    </block>
[20:57:40.270]  </sequence>
[20:57:40.270]  
[20:58:10.917]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:58:10.917]  
[20:58:10.917]  <debugvars>
[20:58:10.917]    // Pre-defined
[20:58:10.918]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:10.918]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:58:10.918]    __dp=0x00000000
[20:58:10.918]    __ap=0x00000000
[20:58:10.918]    __traceout=0x00000001      (SWO Trace)
[20:58:10.919]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:10.919]    __FlashAddr=0x00000000
[20:58:10.919]    __FlashLen=0x00000000
[20:58:10.919]    __FlashArg=0x00000000
[20:58:10.919]    __FlashOp=0x00000000
[20:58:10.920]    __Result=0x00000000
[20:58:10.920]    
[20:58:10.920]    // User-defined
[20:58:10.920]    DbgMCU_CR=0x00000007
[20:58:10.920]    DbgMCU_APB1_Fz=0x00000000
[20:58:10.920]    DbgMCU_APB2_Fz=0x00000000
[20:58:10.921]    TraceClk_Pin=0x00040002
[20:58:10.921]    TraceD0_Pin=0x00040003
[20:58:10.921]    TraceD1_Pin=0x00040004
[20:58:10.921]    TraceD2_Pin=0x00040005
[20:58:10.921]    TraceD3_Pin=0x00040006
[20:58:10.922]  </debugvars>
[20:58:10.922]  
[20:58:10.922]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:58:10.922]    <block atomic="false" info="">
[20:58:10.922]      Sequence("CheckID");
[20:58:10.923]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:58:10.923]          <block atomic="false" info="">
[20:58:10.923]            __var pidr1 = 0;
[20:58:10.923]              // -> [pidr1 <= 0x00000000]
[20:58:10.924]            __var pidr2 = 0;
[20:58:10.924]              // -> [pidr2 <= 0x00000000]
[20:58:10.924]            __var jep106id = 0;
[20:58:10.924]              // -> [jep106id <= 0x00000000]
[20:58:10.924]            __var ROMTableBase = 0;
[20:58:10.924]              // -> [ROMTableBase <= 0x00000000]
[20:58:10.925]            __ap = 0;      // AHB-AP
[20:58:10.925]              // -> [__ap <= 0x00000000]
[20:58:10.925]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:58:10.925]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.925]              // -> [ROMTableBase <= 0xE00FD000]
[20:58:10.926]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:58:10.926]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.926]              // -> [pidr1 <= 0x00000004]
[20:58:10.926]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:58:10.927]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.927]              // -> [pidr2 <= 0x0000001A]
[20:58:10.927]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:58:10.927]              // -> [jep106id <= 0x00000020]
[20:58:10.927]          </block>
[20:58:10.928]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:58:10.928]            // if-block "jep106id != 0x20"
[20:58:10.928]              // =>  FALSE
[20:58:10.928]            // skip if-block "jep106id != 0x20"
[20:58:10.928]          </control>
[20:58:10.928]        </sequence>
[20:58:10.928]    </block>
[20:58:10.929]  </sequence>
[20:58:10.929]  
[20:58:10.943]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:58:10.943]  
[20:58:10.943]  <debugvars>
[20:58:10.943]    // Pre-defined
[20:58:10.944]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:10.944]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:58:10.944]    __dp=0x00000000
[20:58:10.944]    __ap=0x00000000
[20:58:10.944]    __traceout=0x00000001      (SWO Trace)
[20:58:10.944]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:10.945]    __FlashAddr=0x00000000
[20:58:10.945]    __FlashLen=0x00000000
[20:58:10.945]    __FlashArg=0x00000000
[20:58:10.945]    __FlashOp=0x00000000
[20:58:10.945]    __Result=0x00000000
[20:58:10.946]    
[20:58:10.946]    // User-defined
[20:58:10.946]    DbgMCU_CR=0x00000007
[20:58:10.946]    DbgMCU_APB1_Fz=0x00000000
[20:58:10.946]    DbgMCU_APB2_Fz=0x00000000
[20:58:10.946]    TraceClk_Pin=0x00040002
[20:58:10.946]    TraceD0_Pin=0x00040003
[20:58:10.947]    TraceD1_Pin=0x00040004
[20:58:10.947]    TraceD2_Pin=0x00040005
[20:58:10.947]    TraceD3_Pin=0x00040006
[20:58:10.947]  </debugvars>
[20:58:10.947]  
[20:58:10.947]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:58:10.948]    <block atomic="false" info="">
[20:58:10.948]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:58:10.948]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.949]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:58:10.949]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.949]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:58:10.950]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.950]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:58:10.951]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.951]    </block>
[20:58:10.951]  </sequence>
[20:58:10.951]  
[20:58:10.967]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:58:10.967]  
[20:58:10.968]  <debugvars>
[20:58:10.968]    // Pre-defined
[20:58:10.968]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:10.968]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:58:10.968]    __dp=0x00000000
[20:58:10.969]    __ap=0x00000000
[20:58:10.969]    __traceout=0x00000001      (SWO Trace)
[20:58:10.969]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:10.969]    __FlashAddr=0x00000000
[20:58:10.969]    __FlashLen=0x00000000
[20:58:10.970]    __FlashArg=0x00000000
[20:58:10.970]    __FlashOp=0x00000000
[20:58:10.970]    __Result=0x00000000
[20:58:10.970]    
[20:58:10.970]    // User-defined
[20:58:10.971]    DbgMCU_CR=0x00000007
[20:58:10.971]    DbgMCU_APB1_Fz=0x00000000
[20:58:10.971]    DbgMCU_APB2_Fz=0x00000000
[20:58:10.971]    TraceClk_Pin=0x00040002
[20:58:10.971]    TraceD0_Pin=0x00040003
[20:58:10.971]    TraceD1_Pin=0x00040004
[20:58:10.971]    TraceD2_Pin=0x00040005
[20:58:10.971]    TraceD3_Pin=0x00040006
[20:58:10.971]  </debugvars>
[20:58:10.971]  
[20:58:10.972]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:58:10.972]    <block atomic="false" info="">
[20:58:10.972]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:58:10.972]        // -> [traceSWO <= 0x00000001]
[20:58:10.972]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:58:10.972]        // -> [traceTPIU <= 0x00000000]
[20:58:10.973]    </block>
[20:58:10.973]    <control if="traceSWO" while="" timeout="0" info="">
[20:58:10.973]      // if-block "traceSWO"
[20:58:10.973]        // =>  TRUE
[20:58:10.973]      <block atomic="false" info="">
[20:58:10.973]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:58:10.974]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:58:10.974]            <block atomic="false" info="">
[20:58:10.974]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:58:10.974]                // -> [dbgmcu_val <= 0x00000000]
[20:58:10.974]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:58:10.975]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:58:10.975]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:58:10.975]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.976]                // -> [dbgmcu_val <= 0x00000007]
[20:58:10.976]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:58:10.976]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:58:10.976]              Sequence("ConfigureTraceSWOPin");
[20:58:10.976]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:58:10.976]                  <block atomic="false" info="">
[20:58:10.977]                    __var pin     = 0;
[20:58:10.977]                      // -> [pin <= 0x00000000]
[20:58:10.977]                    __var port    = 0;
[20:58:10.977]                      // -> [port <= 0x00000000]
[20:58:10.977]                    __var portAdr = 0;
[20:58:10.977]                      // -> [portAdr <= 0x00000000]
[20:58:10.978]                    __var pos     = 0;
[20:58:10.978]                      // -> [pos <= 0x00000000]
[20:58:10.978]                    __var SWO_Pin = 0x00010003;          // PB3
[20:58:10.978]                      // -> [SWO_Pin <= 0x00010003]
[20:58:10.978]                  </block>
[20:58:10.978]                  <block atomic="false" info="configure SWO">
[20:58:10.978]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:58:10.979]                      // -> [pin <= 0x00000003]
[20:58:10.979]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:58:10.979]                      // -> [port <= 0x00000001]
[20:58:10.979]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:58:10.979]                      // -> [portAdr <= 0x40020400]
[20:58:10.979]                    pos = pin * 2;
[20:58:10.980]                      // -> [pos <= 0x00000006]
[20:58:10.980]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:58:10.980]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.981]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.981]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:58:10.981]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.982]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.982]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:58:10.982]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.983]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.983]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:58:10.983]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.984]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.984]                  </block>
[20:58:10.984]                  <control if="pin <  8" while="" timeout="0" info="">
[20:58:10.984]                    // if-block "pin <  8"
[20:58:10.985]                      // =>  TRUE
[20:58:10.985]                    <block atomic="false" info="">
[20:58:10.985]                      pos = ((pin    ) & 7) * 4;
[20:58:10.985]                        // -> [pos <= 0x0000000C]
[20:58:10.985]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:58:10.986]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.986]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.986]                    </block>
[20:58:10.986]                    // end if-block "pin <  8"
[20:58:10.986]                  </control>
[20:58:10.986]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:58:10.987]                    // if-block "pin >= 8"
[20:58:10.987]                      // =>  FALSE
[20:58:10.987]                    // skip if-block "pin >= 8"
[20:58:10.987]                  </control>
[20:58:10.987]                </sequence>
[20:58:10.988]            </block>
[20:58:10.988]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:58:10.988]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:58:10.988]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:10.988]            </block>
[20:58:10.988]          </sequence>
[20:58:10.989]      </block>
[20:58:10.989]      // end if-block "traceSWO"
[20:58:10.989]    </control>
[20:58:10.989]    <control if="traceTPIU" while="" timeout="0" info="">
[20:58:10.989]      // if-block "traceTPIU"
[20:58:10.989]        // =>  FALSE
[20:58:10.989]      // skip if-block "traceTPIU"
[20:58:10.989]    </control>
[20:58:10.990]  </sequence>
[20:58:10.990]  
[20:58:10.993]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:58:10.993]  
[20:58:10.994]  <debugvars>
[20:58:10.994]    // Pre-defined
[20:58:10.994]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:10.994]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:58:10.994]    __dp=0x00000000
[20:58:10.995]    __ap=0x00000000
[20:58:10.995]    __traceout=0x00000001      (SWO Trace)
[20:58:10.995]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:10.995]    __FlashAddr=0x00000000
[20:58:10.995]    __FlashLen=0x00000000
[20:58:10.995]    __FlashArg=0x00000000
[20:58:10.996]    __FlashOp=0x00000000
[20:58:10.996]    __Result=0x00000000
[20:58:10.996]    
[20:58:10.996]    // User-defined
[20:58:10.996]    DbgMCU_CR=0x00000007
[20:58:10.996]    DbgMCU_APB1_Fz=0x00000000
[20:58:10.997]    DbgMCU_APB2_Fz=0x00000000
[20:58:10.997]    TraceClk_Pin=0x00040002
[20:58:10.997]    TraceD0_Pin=0x00040003
[20:58:10.997]    TraceD1_Pin=0x00040004
[20:58:10.997]    TraceD2_Pin=0x00040005
[20:58:10.998]    TraceD3_Pin=0x00040006
[20:58:10.998]  </debugvars>
[20:58:10.998]  
[20:58:10.998]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:58:10.998]    <block atomic="false" info="">
[20:58:10.999]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:58:10.999]        // -> [traceSWO <= 0x00000001]
[20:58:10.999]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:58:10.999]        // -> [traceTPIU <= 0x00000000]
[20:58:10.999]    </block>
[20:58:10.999]    <control if="traceSWO" while="" timeout="0" info="">
[20:58:11.000]      // if-block "traceSWO"
[20:58:11.000]        // =>  TRUE
[20:58:11.000]      <block atomic="false" info="">
[20:58:11.000]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:58:11.000]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:58:11.000]            <block atomic="false" info="">
[20:58:11.001]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:58:11.001]                // -> [dbgmcu_val <= 0x00000000]
[20:58:11.001]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:58:11.001]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:58:11.001]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:58:11.002]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.002]                // -> [dbgmcu_val <= 0x00000007]
[20:58:11.002]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:58:11.002]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:58:11.002]              Sequence("ConfigureTraceSWOPin");
[20:58:11.003]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:58:11.003]                  <block atomic="false" info="">
[20:58:11.003]                    __var pin     = 0;
[20:58:11.003]                      // -> [pin <= 0x00000000]
[20:58:11.003]                    __var port    = 0;
[20:58:11.003]                      // -> [port <= 0x00000000]
[20:58:11.003]                    __var portAdr = 0;
[20:58:11.004]                      // -> [portAdr <= 0x00000000]
[20:58:11.004]                    __var pos     = 0;
[20:58:11.004]                      // -> [pos <= 0x00000000]
[20:58:11.004]                    __var SWO_Pin = 0x00010003;          // PB3
[20:58:11.004]                      // -> [SWO_Pin <= 0x00010003]
[20:58:11.004]                  </block>
[20:58:11.004]                  <block atomic="false" info="configure SWO">
[20:58:11.005]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:58:11.005]                      // -> [pin <= 0x00000003]
[20:58:11.005]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:58:11.005]                      // -> [port <= 0x00000001]
[20:58:11.005]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:58:11.005]                      // -> [portAdr <= 0x40020400]
[20:58:11.005]                    pos = pin * 2;
[20:58:11.006]                      // -> [pos <= 0x00000006]
[20:58:11.006]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:58:11.006]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.007]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.007]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:58:11.007]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.008]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.008]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:58:11.008]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.009]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.009]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:58:11.009]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.010]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.010]                  </block>
[20:58:11.010]                  <control if="pin <  8" while="" timeout="0" info="">
[20:58:11.010]                    // if-block "pin <  8"
[20:58:11.010]                      // =>  TRUE
[20:58:11.011]                    <block atomic="false" info="">
[20:58:11.011]                      pos = ((pin    ) & 7) * 4;
[20:58:11.011]                        // -> [pos <= 0x0000000C]
[20:58:11.011]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:58:11.011]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.012]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.012]                    </block>
[20:58:11.012]                    // end if-block "pin <  8"
[20:58:11.012]                  </control>
[20:58:11.013]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:58:11.013]                    // if-block "pin >= 8"
[20:58:11.013]                      // =>  FALSE
[20:58:11.013]                    // skip if-block "pin >= 8"
[20:58:11.013]                  </control>
[20:58:11.013]                </sequence>
[20:58:11.013]            </block>
[20:58:11.014]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:58:11.014]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:58:11.014]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.014]            </block>
[20:58:11.014]          </sequence>
[20:58:11.015]      </block>
[20:58:11.015]      // end if-block "traceSWO"
[20:58:11.015]    </control>
[20:58:11.015]    <control if="traceTPIU" while="" timeout="0" info="">
[20:58:11.015]      // if-block "traceTPIU"
[20:58:11.015]        // =>  FALSE
[20:58:11.016]      // skip if-block "traceTPIU"
[20:58:11.016]    </control>
[20:58:11.016]  </sequence>
[20:58:11.016]  
[20:58:11.229]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:58:11.229]  
[20:58:11.229]  <debugvars>
[20:58:11.229]    // Pre-defined
[20:58:11.229]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:11.229]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:58:11.230]    __dp=0x00000000
[20:58:11.230]    __ap=0x00000000
[20:58:11.230]    __traceout=0x00000001      (SWO Trace)
[20:58:11.230]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:11.230]    __FlashAddr=0x00000000
[20:58:11.231]    __FlashLen=0x00000000
[20:58:11.231]    __FlashArg=0x00000000
[20:58:11.231]    __FlashOp=0x00000000
[20:58:11.231]    __Result=0x00000000
[20:58:11.231]    
[20:58:11.231]    // User-defined
[20:58:11.231]    DbgMCU_CR=0x00000007
[20:58:11.232]    DbgMCU_APB1_Fz=0x00000000
[20:58:11.232]    DbgMCU_APB2_Fz=0x00000000
[20:58:11.232]    TraceClk_Pin=0x00040002
[20:58:11.232]    TraceD0_Pin=0x00040003
[20:58:11.232]    TraceD1_Pin=0x00040004
[20:58:11.233]    TraceD2_Pin=0x00040005
[20:58:11.233]    TraceD3_Pin=0x00040006
[20:58:11.233]  </debugvars>
[20:58:11.233]  
[20:58:11.233]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:58:11.234]    <block atomic="false" info="">
[20:58:11.234]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:58:11.234]        // -> [traceSWO <= 0x00000001]
[20:58:11.234]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:58:11.234]        // -> [traceTPIU <= 0x00000000]
[20:58:11.235]    </block>
[20:58:11.235]    <control if="traceSWO" while="" timeout="0" info="">
[20:58:11.235]      // if-block "traceSWO"
[20:58:11.235]        // =>  TRUE
[20:58:11.235]      <block atomic="false" info="">
[20:58:11.235]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:58:11.236]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:58:11.236]            <block atomic="false" info="">
[20:58:11.236]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:58:11.236]                // -> [dbgmcu_val <= 0x00000000]
[20:58:11.236]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:58:11.236]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:58:11.237]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:58:11.237]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.237]                // -> [dbgmcu_val <= 0x00000007]
[20:58:11.237]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:58:11.238]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:58:11.238]              Sequence("ConfigureTraceSWOPin");
[20:58:11.238]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:58:11.238]                  <block atomic="false" info="">
[20:58:11.238]                    __var pin     = 0;
[20:58:11.238]                      // -> [pin <= 0x00000000]
[20:58:11.238]                    __var port    = 0;
[20:58:11.239]                      // -> [port <= 0x00000000]
[20:58:11.239]                    __var portAdr = 0;
[20:58:11.239]                      // -> [portAdr <= 0x00000000]
[20:58:11.239]                    __var pos     = 0;
[20:58:11.239]                      // -> [pos <= 0x00000000]
[20:58:11.239]                    __var SWO_Pin = 0x00010003;          // PB3
[20:58:11.239]                      // -> [SWO_Pin <= 0x00010003]
[20:58:11.240]                  </block>
[20:58:11.240]                  <block atomic="false" info="configure SWO">
[20:58:11.240]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:58:11.240]                      // -> [pin <= 0x00000003]
[20:58:11.240]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:58:11.240]                      // -> [port <= 0x00000001]
[20:58:11.241]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:58:11.241]                      // -> [portAdr <= 0x40020400]
[20:58:11.241]                    pos = pin * 2;
[20:58:11.241]                      // -> [pos <= 0x00000006]
[20:58:11.241]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:58:11.241]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.242]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.242]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:58:11.242]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.243]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.243]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:58:11.244]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.244]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.244]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:58:11.245]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.245]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.245]                  </block>
[20:58:11.245]                  <control if="pin <  8" while="" timeout="0" info="">
[20:58:11.245]                    // if-block "pin <  8"
[20:58:11.246]                      // =>  TRUE
[20:58:11.246]                    <block atomic="false" info="">
[20:58:11.246]                      pos = ((pin    ) & 7) * 4;
[20:58:11.246]                        // -> [pos <= 0x0000000C]
[20:58:11.246]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:58:11.247]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.247]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.247]                    </block>
[20:58:11.247]                    // end if-block "pin <  8"
[20:58:11.247]                  </control>
[20:58:11.248]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:58:11.248]                    // if-block "pin >= 8"
[20:58:11.248]                      // =>  FALSE
[20:58:11.248]                    // skip if-block "pin >= 8"
[20:58:11.248]                  </control>
[20:58:11.248]                </sequence>
[20:58:11.248]            </block>
[20:58:11.248]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:58:11.249]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:58:11.249]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:11.249]            </block>
[20:58:11.249]          </sequence>
[20:58:11.249]      </block>
[20:58:11.250]      // end if-block "traceSWO"
[20:58:11.250]    </control>
[20:58:11.250]    <control if="traceTPIU" while="" timeout="0" info="">
[20:58:11.250]      // if-block "traceTPIU"
[20:58:11.250]        // =>  FALSE
[20:58:11.250]      // skip if-block "traceTPIU"
[20:58:11.250]    </control>
[20:58:11.251]  </sequence>
[20:58:11.251]  
[21:04:38.915]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:04:38.915]  
[21:04:38.915]  <debugvars>
[21:04:38.915]    // Pre-defined
[21:04:38.915]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:04:38.916]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:04:38.916]    __dp=0x00000000
[21:04:38.916]    __ap=0x00000000
[21:04:38.916]    __traceout=0x00000001      (SWO Trace)
[21:04:38.916]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:04:38.916]    __FlashAddr=0x00000000
[21:04:38.916]    __FlashLen=0x00000000
[21:04:38.916]    __FlashArg=0x00000000
[21:04:38.917]    __FlashOp=0x00000000
[21:04:38.917]    __Result=0x00000000
[21:04:38.917]    
[21:04:38.917]    // User-defined
[21:04:38.917]    DbgMCU_CR=0x00000007
[21:04:38.917]    DbgMCU_APB1_Fz=0x00000000
[21:04:38.917]    DbgMCU_APB2_Fz=0x00000000
[21:04:38.917]    TraceClk_Pin=0x00040002
[21:04:38.918]    TraceD0_Pin=0x00040003
[21:04:38.918]    TraceD1_Pin=0x00040004
[21:04:38.918]    TraceD2_Pin=0x00040005
[21:04:38.918]    TraceD3_Pin=0x00040006
[21:04:38.918]  </debugvars>
[21:04:38.918]  
[21:04:38.918]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:04:38.918]    <block atomic="false" info="">
[21:04:38.919]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:04:38.919]        // -> [traceSWO <= 0x00000001]
[21:04:38.919]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:04:38.919]        // -> [traceTPIU <= 0x00000000]
[21:04:38.919]    </block>
[21:04:38.919]    <control if="traceSWO" while="" timeout="0" info="">
[21:04:38.919]      // if-block "traceSWO"
[21:04:38.919]        // =>  TRUE
[21:04:38.920]      <block atomic="false" info="">
[21:04:38.920]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:04:38.920]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:04:38.920]            <block atomic="false" info="">
[21:04:38.920]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:04:38.920]                // -> [dbgmcu_val <= 0x00000000]
[21:04:38.920]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:04:38.921]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:04:38.921]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:04:38.921]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.921]                // -> [dbgmcu_val <= 0x00000007]
[21:04:38.922]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:04:38.922]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:04:38.922]              Sequence("ConfigureTraceSWOPin");
[21:04:38.922]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:04:38.922]                  <block atomic="false" info="">
[21:04:38.922]                    __var pin     = 0;
[21:04:38.922]                      // -> [pin <= 0x00000000]
[21:04:38.922]                    __var port    = 0;
[21:04:38.923]                      // -> [port <= 0x00000000]
[21:04:38.923]                    __var portAdr = 0;
[21:04:38.923]                      // -> [portAdr <= 0x00000000]
[21:04:38.923]                    __var pos     = 0;
[21:04:38.923]                      // -> [pos <= 0x00000000]
[21:04:38.923]                    __var SWO_Pin = 0x00010003;          // PB3
[21:04:38.923]                      // -> [SWO_Pin <= 0x00010003]
[21:04:38.923]                  </block>
[21:04:38.924]                  <block atomic="false" info="configure SWO">
[21:04:38.924]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:04:38.924]                      // -> [pin <= 0x00000003]
[21:04:38.924]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:04:38.924]                      // -> [port <= 0x00000001]
[21:04:38.924]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:04:38.924]                      // -> [portAdr <= 0x40020400]
[21:04:38.925]                    pos = pin * 2;
[21:04:38.925]                      // -> [pos <= 0x00000006]
[21:04:38.925]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:04:38.925]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.926]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.926]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:04:38.926]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.927]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.927]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:04:38.927]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.928]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.928]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:04:38.928]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.929]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.929]                  </block>
[21:04:38.929]                  <control if="pin <  8" while="" timeout="0" info="">
[21:04:38.929]                    // if-block "pin <  8"
[21:04:38.929]                      // =>  TRUE
[21:04:38.929]                    <block atomic="false" info="">
[21:04:38.929]                      pos = ((pin    ) & 7) * 4;
[21:04:38.929]                        // -> [pos <= 0x0000000C]
[21:04:38.930]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:04:38.930]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.930]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.931]                    </block>
[21:04:38.931]                    // end if-block "pin <  8"
[21:04:38.931]                  </control>
[21:04:38.931]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:04:38.931]                    // if-block "pin >= 8"
[21:04:38.931]                      // =>  FALSE
[21:04:38.931]                    // skip if-block "pin >= 8"
[21:04:38.931]                  </control>
[21:04:38.932]                </sequence>
[21:04:38.932]            </block>
[21:04:38.932]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:04:38.932]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:04:38.932]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:38.933]            </block>
[21:04:38.933]          </sequence>
[21:04:38.933]      </block>
[21:04:38.933]      // end if-block "traceSWO"
[21:04:38.933]    </control>
[21:04:38.933]    <control if="traceTPIU" while="" timeout="0" info="">
[21:04:38.933]      // if-block "traceTPIU"
[21:04:38.933]        // =>  FALSE
[21:04:38.933]      // skip if-block "traceTPIU"
[21:04:38.934]    </control>
[21:04:38.934]  </sequence>
[21:04:38.934]  
[21:04:49.226]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:04:49.226]  
[21:04:49.227]  <debugvars>
[21:04:49.227]    // Pre-defined
[21:04:49.227]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:04:49.227]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:04:49.227]    __dp=0x00000000
[21:04:49.227]    __ap=0x00000000
[21:04:49.228]    __traceout=0x00000001      (SWO Trace)
[21:04:49.228]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:04:49.228]    __FlashAddr=0x00000000
[21:04:49.228]    __FlashLen=0x00000000
[21:04:49.228]    __FlashArg=0x00000000
[21:04:49.228]    __FlashOp=0x00000000
[21:04:49.228]    __Result=0x00000000
[21:04:49.229]    
[21:04:49.229]    // User-defined
[21:04:49.229]    DbgMCU_CR=0x00000007
[21:04:49.229]    DbgMCU_APB1_Fz=0x00000000
[21:04:49.229]    DbgMCU_APB2_Fz=0x00000000
[21:04:49.229]    TraceClk_Pin=0x00040002
[21:04:49.229]    TraceD0_Pin=0x00040003
[21:04:49.229]    TraceD1_Pin=0x00040004
[21:04:49.230]    TraceD2_Pin=0x00040005
[21:04:49.230]    TraceD3_Pin=0x00040006
[21:04:49.230]  </debugvars>
[21:04:49.230]  
[21:04:49.230]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:04:49.230]    <block atomic="false" info="">
[21:04:49.230]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:04:49.231]        // -> [traceSWO <= 0x00000001]
[21:04:49.231]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:04:49.231]        // -> [traceTPIU <= 0x00000000]
[21:04:49.231]    </block>
[21:04:49.231]    <control if="traceSWO" while="" timeout="0" info="">
[21:04:49.231]      // if-block "traceSWO"
[21:04:49.231]        // =>  TRUE
[21:04:49.232]      <block atomic="false" info="">
[21:04:49.232]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:04:49.232]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:04:49.232]            <block atomic="false" info="">
[21:04:49.232]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:04:49.232]                // -> [dbgmcu_val <= 0x00000000]
[21:04:49.232]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:04:49.233]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:04:49.233]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:04:49.233]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.233]                // -> [dbgmcu_val <= 0x00000007]
[21:04:49.233]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:04:49.234]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:04:49.234]              Sequence("ConfigureTraceSWOPin");
[21:04:49.234]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:04:49.234]                  <block atomic="false" info="">
[21:04:49.234]                    __var pin     = 0;
[21:04:49.234]                      // -> [pin <= 0x00000000]
[21:04:49.234]                    __var port    = 0;
[21:04:49.235]                      // -> [port <= 0x00000000]
[21:04:49.235]                    __var portAdr = 0;
[21:04:49.235]                      // -> [portAdr <= 0x00000000]
[21:04:49.235]                    __var pos     = 0;
[21:04:49.235]                      // -> [pos <= 0x00000000]
[21:04:49.235]                    __var SWO_Pin = 0x00010003;          // PB3
[21:04:49.235]                      // -> [SWO_Pin <= 0x00010003]
[21:04:49.235]                  </block>
[21:04:49.236]                  <block atomic="false" info="configure SWO">
[21:04:49.236]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:04:49.236]                      // -> [pin <= 0x00000003]
[21:04:49.236]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:04:49.236]                      // -> [port <= 0x00000001]
[21:04:49.236]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:04:49.236]                      // -> [portAdr <= 0x40020400]
[21:04:49.236]                    pos = pin * 2;
[21:04:49.237]                      // -> [pos <= 0x00000006]
[21:04:49.237]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:04:49.237]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.238]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.238]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:04:49.238]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.239]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.239]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:04:49.239]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.240]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.240]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:04:49.240]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.241]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.241]                  </block>
[21:04:49.241]                  <control if="pin <  8" while="" timeout="0" info="">
[21:04:49.241]                    // if-block "pin <  8"
[21:04:49.241]                      // =>  TRUE
[21:04:49.241]                    <block atomic="false" info="">
[21:04:49.242]                      pos = ((pin    ) & 7) * 4;
[21:04:49.242]                        // -> [pos <= 0x0000000C]
[21:04:49.242]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:04:49.242]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.243]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.243]                    </block>
[21:04:49.243]                    // end if-block "pin <  8"
[21:04:49.243]                  </control>
[21:04:49.243]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:04:49.243]                    // if-block "pin >= 8"
[21:04:49.243]                      // =>  FALSE
[21:04:49.243]                    // skip if-block "pin >= 8"
[21:04:49.244]                  </control>
[21:04:49.244]                </sequence>
[21:04:49.244]            </block>
[21:04:49.244]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:04:49.244]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:04:49.245]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:04:49.245]            </block>
[21:04:49.245]          </sequence>
[21:04:49.245]      </block>
[21:04:49.245]      // end if-block "traceSWO"
[21:04:49.245]    </control>
[21:04:49.245]    <control if="traceTPIU" while="" timeout="0" info="">
[21:04:49.245]      // if-block "traceTPIU"
[21:04:49.245]        // =>  FALSE
[21:04:49.246]      // skip if-block "traceTPIU"
[21:04:49.246]    </control>
[21:04:49.246]  </sequence>
[21:04:49.246]  
[21:08:31.062]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:08:31.062]  
[21:08:31.062]  <debugvars>
[21:08:31.062]    // Pre-defined
[21:08:31.062]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:08:31.062]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:08:31.063]    __dp=0x00000000
[21:08:31.063]    __ap=0x00000000
[21:08:31.063]    __traceout=0x00000001      (SWO Trace)
[21:08:31.063]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:08:31.063]    __FlashAddr=0x00000000
[21:08:31.064]    __FlashLen=0x00000000
[21:08:31.064]    __FlashArg=0x00000000
[21:08:31.064]    __FlashOp=0x00000000
[21:08:31.064]    __Result=0x00000000
[21:08:31.065]    
[21:08:31.065]    // User-defined
[21:08:31.065]    DbgMCU_CR=0x00000007
[21:08:31.065]    DbgMCU_APB1_Fz=0x00000000
[21:08:31.065]    DbgMCU_APB2_Fz=0x00000000
[21:08:31.065]    TraceClk_Pin=0x00040002
[21:08:31.066]    TraceD0_Pin=0x00040003
[21:08:31.066]    TraceD1_Pin=0x00040004
[21:08:31.066]    TraceD2_Pin=0x00040005
[21:08:31.066]    TraceD3_Pin=0x00040006
[21:08:31.066]  </debugvars>
[21:08:31.067]  
[21:08:31.067]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:08:31.067]    <block atomic="false" info="">
[21:08:31.067]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:08:31.067]        // -> [traceSWO <= 0x00000001]
[21:08:31.067]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:08:31.068]        // -> [traceTPIU <= 0x00000000]
[21:08:31.068]    </block>
[21:08:31.068]    <control if="traceSWO" while="" timeout="0" info="">
[21:08:31.068]      // if-block "traceSWO"
[21:08:31.068]        // =>  TRUE
[21:08:31.069]      <block atomic="false" info="">
[21:08:31.069]        Sequence("DisableTraceSWO");
[21:08:31.069]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:08:31.069]            <block atomic="false" info="">
[21:08:31.069]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:08:31.069]                // -> [dbgmcu_val <= 0x00000000]
[21:08:31.070]            </block>
[21:08:31.070]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:08:31.070]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:08:31.071]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:08:31.071]                // -> [dbgmcu_val <= 0x00000007]
[21:08:31.071]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:08:31.071]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:08:31.072]            </block>
[21:08:31.072]          </sequence>
[21:08:31.072]      </block>
[21:08:31.072]      // end if-block "traceSWO"
[21:08:31.072]    </control>
[21:08:31.072]    <control if="traceTPIU" while="" timeout="0" info="">
[21:08:31.073]      // if-block "traceTPIU"
[21:08:31.073]        // =>  FALSE
[21:08:31.073]      // skip if-block "traceTPIU"
[21:08:31.073]    </control>
[21:08:31.073]  </sequence>
[21:08:31.073]  
[21:09:51.107]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:09:51.107]  
[21:09:51.107]  <debugvars>
[21:09:51.108]    // Pre-defined
[21:09:51.108]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:51.108]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:09:51.108]    __dp=0x00000000
[21:09:51.108]    __ap=0x00000000
[21:09:51.109]    __traceout=0x00000001      (SWO Trace)
[21:09:51.109]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:51.109]    __FlashAddr=0x00000000
[21:09:51.109]    __FlashLen=0x00000000
[21:09:51.109]    __FlashArg=0x00000000
[21:09:51.109]    __FlashOp=0x00000000
[21:09:51.110]    __Result=0x00000000
[21:09:51.110]    
[21:09:51.110]    // User-defined
[21:09:51.110]    DbgMCU_CR=0x00000007
[21:09:51.110]    DbgMCU_APB1_Fz=0x00000000
[21:09:51.110]    DbgMCU_APB2_Fz=0x00000000
[21:09:51.111]    TraceClk_Pin=0x00040002
[21:09:51.111]    TraceD0_Pin=0x00040003
[21:09:51.111]    TraceD1_Pin=0x00040004
[21:09:51.111]    TraceD2_Pin=0x00040005
[21:09:51.111]    TraceD3_Pin=0x00040006
[21:09:51.111]  </debugvars>
[21:09:51.112]  
[21:09:51.112]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:09:51.112]    <block atomic="false" info="">
[21:09:51.112]      Sequence("CheckID");
[21:09:51.112]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:09:51.113]          <block atomic="false" info="">
[21:09:51.113]            __var pidr1 = 0;
[21:09:51.113]              // -> [pidr1 <= 0x00000000]
[21:09:51.113]            __var pidr2 = 0;
[21:09:51.113]              // -> [pidr2 <= 0x00000000]
[21:09:51.113]            __var jep106id = 0;
[21:09:51.114]              // -> [jep106id <= 0x00000000]
[21:09:51.114]            __var ROMTableBase = 0;
[21:09:51.114]              // -> [ROMTableBase <= 0x00000000]
[21:09:51.114]            __ap = 0;      // AHB-AP
[21:09:51.114]              // -> [__ap <= 0x00000000]
[21:09:51.114]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:09:51.115]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.115]              // -> [ROMTableBase <= 0xE00FD000]
[21:09:51.115]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:09:51.116]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.116]              // -> [pidr1 <= 0x00000004]
[21:09:51.116]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:09:51.117]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.117]              // -> [pidr2 <= 0x0000001A]
[21:09:51.117]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:09:51.117]              // -> [jep106id <= 0x00000020]
[21:09:51.117]          </block>
[21:09:51.117]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:09:51.118]            // if-block "jep106id != 0x20"
[21:09:51.118]              // =>  FALSE
[21:09:51.118]            // skip if-block "jep106id != 0x20"
[21:09:51.118]          </control>
[21:09:51.118]        </sequence>
[21:09:51.118]    </block>
[21:09:51.118]  </sequence>
[21:09:51.119]  
[21:09:51.134]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:09:51.134]  
[21:09:51.135]  <debugvars>
[21:09:51.135]    // Pre-defined
[21:09:51.135]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:51.135]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:09:51.136]    __dp=0x00000000
[21:09:51.136]    __ap=0x00000000
[21:09:51.136]    __traceout=0x00000001      (SWO Trace)
[21:09:51.136]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:51.136]    __FlashAddr=0x00000000
[21:09:51.137]    __FlashLen=0x00000000
[21:09:51.137]    __FlashArg=0x00000000
[21:09:51.137]    __FlashOp=0x00000000
[21:09:51.137]    __Result=0x00000000
[21:09:51.137]    
[21:09:51.137]    // User-defined
[21:09:51.137]    DbgMCU_CR=0x00000007
[21:09:51.138]    DbgMCU_APB1_Fz=0x00000000
[21:09:51.138]    DbgMCU_APB2_Fz=0x00000000
[21:09:51.138]    TraceClk_Pin=0x00040002
[21:09:51.138]    TraceD0_Pin=0x00040003
[21:09:51.138]    TraceD1_Pin=0x00040004
[21:09:51.139]    TraceD2_Pin=0x00040005
[21:09:51.139]    TraceD3_Pin=0x00040006
[21:09:51.139]  </debugvars>
[21:09:51.139]  
[21:09:51.139]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:09:51.139]    <block atomic="false" info="">
[21:09:51.139]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:09:51.140]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.140]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:09:51.141]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.141]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:09:51.142]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.142]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:09:51.142]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:51.143]    </block>
[21:09:51.143]  </sequence>
[21:09:51.143]  
[21:10:21.753]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:10:21.753]  
[21:10:21.753]  <debugvars>
[21:10:21.753]    // Pre-defined
[21:10:21.754]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:10:21.754]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:10:21.754]    __dp=0x00000000
[21:10:21.754]    __ap=0x00000000
[21:10:21.755]    __traceout=0x00000001      (SWO Trace)
[21:10:21.755]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:10:21.755]    __FlashAddr=0x00000000
[21:10:21.755]    __FlashLen=0x00000000
[21:10:21.755]    __FlashArg=0x00000000
[21:10:21.756]    __FlashOp=0x00000000
[21:10:21.756]    __Result=0x00000000
[21:10:21.756]    
[21:10:21.756]    // User-defined
[21:10:21.756]    DbgMCU_CR=0x00000007
[21:10:21.756]    DbgMCU_APB1_Fz=0x00000000
[21:10:21.757]    DbgMCU_APB2_Fz=0x00000000
[21:10:21.757]    TraceClk_Pin=0x00040002
[21:10:21.757]    TraceD0_Pin=0x00040003
[21:10:21.757]    TraceD1_Pin=0x00040004
[21:10:21.757]    TraceD2_Pin=0x00040005
[21:10:21.757]    TraceD3_Pin=0x00040006
[21:10:21.758]  </debugvars>
[21:10:21.758]  
[21:10:21.758]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:10:21.758]    <block atomic="false" info="">
[21:10:21.758]      Sequence("CheckID");
[21:10:21.759]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:10:21.759]          <block atomic="false" info="">
[21:10:21.759]            __var pidr1 = 0;
[21:10:21.759]              // -> [pidr1 <= 0x00000000]
[21:10:21.759]            __var pidr2 = 0;
[21:10:21.760]              // -> [pidr2 <= 0x00000000]
[21:10:21.760]            __var jep106id = 0;
[21:10:21.760]              // -> [jep106id <= 0x00000000]
[21:10:21.760]            __var ROMTableBase = 0;
[21:10:21.760]              // -> [ROMTableBase <= 0x00000000]
[21:10:21.760]            __ap = 0;      // AHB-AP
[21:10:21.761]              // -> [__ap <= 0x00000000]
[21:10:21.761]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:10:21.761]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.761]              // -> [ROMTableBase <= 0xE00FD000]
[21:10:21.762]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:10:21.762]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.762]              // -> [pidr1 <= 0x00000004]
[21:10:21.762]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:10:21.763]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.763]              // -> [pidr2 <= 0x0000001A]
[21:10:21.763]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:10:21.763]              // -> [jep106id <= 0x00000020]
[21:10:21.763]          </block>
[21:10:21.764]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:10:21.764]            // if-block "jep106id != 0x20"
[21:10:21.764]              // =>  FALSE
[21:10:21.764]            // skip if-block "jep106id != 0x20"
[21:10:21.764]          </control>
[21:10:21.764]        </sequence>
[21:10:21.765]    </block>
[21:10:21.765]  </sequence>
[21:10:21.765]  
[21:10:21.780]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:10:21.780]  
[21:10:21.780]  <debugvars>
[21:10:21.780]    // Pre-defined
[21:10:21.780]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:10:21.781]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:10:21.781]    __dp=0x00000000
[21:10:21.781]    __ap=0x00000000
[21:10:21.781]    __traceout=0x00000001      (SWO Trace)
[21:10:21.781]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:10:21.782]    __FlashAddr=0x00000000
[21:10:21.782]    __FlashLen=0x00000000
[21:10:21.782]    __FlashArg=0x00000000
[21:10:21.782]    __FlashOp=0x00000000
[21:10:21.782]    __Result=0x00000000
[21:10:21.782]    
[21:10:21.782]    // User-defined
[21:10:21.783]    DbgMCU_CR=0x00000007
[21:10:21.783]    DbgMCU_APB1_Fz=0x00000000
[21:10:21.783]    DbgMCU_APB2_Fz=0x00000000
[21:10:21.783]    TraceClk_Pin=0x00040002
[21:10:21.783]    TraceD0_Pin=0x00040003
[21:10:21.783]    TraceD1_Pin=0x00040004
[21:10:21.784]    TraceD2_Pin=0x00040005
[21:10:21.784]    TraceD3_Pin=0x00040006
[21:10:21.784]  </debugvars>
[21:10:21.784]  
[21:10:21.784]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:10:21.785]    <block atomic="false" info="">
[21:10:21.785]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:10:21.785]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.786]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:10:21.786]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.786]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:10:21.787]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.787]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:10:21.788]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.788]    </block>
[21:10:21.788]  </sequence>
[21:10:21.788]  
[21:10:21.805]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:10:21.805]  
[21:10:21.805]  <debugvars>
[21:10:21.805]    // Pre-defined
[21:10:21.805]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:10:21.805]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:10:21.806]    __dp=0x00000000
[21:10:21.806]    __ap=0x00000000
[21:10:21.806]    __traceout=0x00000001      (SWO Trace)
[21:10:21.806]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:10:21.806]    __FlashAddr=0x00000000
[21:10:21.806]    __FlashLen=0x00000000
[21:10:21.807]    __FlashArg=0x00000000
[21:10:21.807]    __FlashOp=0x00000000
[21:10:21.807]    __Result=0x00000000
[21:10:21.807]    
[21:10:21.807]    // User-defined
[21:10:21.807]    DbgMCU_CR=0x00000007
[21:10:21.807]    DbgMCU_APB1_Fz=0x00000000
[21:10:21.808]    DbgMCU_APB2_Fz=0x00000000
[21:10:21.808]    TraceClk_Pin=0x00040002
[21:10:21.808]    TraceD0_Pin=0x00040003
[21:10:21.808]    TraceD1_Pin=0x00040004
[21:10:21.808]    TraceD2_Pin=0x00040005
[21:10:21.809]    TraceD3_Pin=0x00040006
[21:10:21.809]  </debugvars>
[21:10:21.809]  
[21:10:21.809]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:10:21.809]    <block atomic="false" info="">
[21:10:21.809]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:10:21.809]        // -> [traceSWO <= 0x00000001]
[21:10:21.810]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:10:21.810]        // -> [traceTPIU <= 0x00000000]
[21:10:21.810]    </block>
[21:10:21.810]    <control if="traceSWO" while="" timeout="0" info="">
[21:10:21.810]      // if-block "traceSWO"
[21:10:21.811]        // =>  TRUE
[21:10:21.811]      <block atomic="false" info="">
[21:10:21.811]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:10:21.811]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:10:21.811]            <block atomic="false" info="">
[21:10:21.811]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:10:21.812]                // -> [dbgmcu_val <= 0x00000000]
[21:10:21.812]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:10:21.812]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:10:21.812]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:10:21.812]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.813]                // -> [dbgmcu_val <= 0x00000007]
[21:10:21.813]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:10:21.813]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:10:21.813]              Sequence("ConfigureTraceSWOPin");
[21:10:21.813]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:10:21.813]                  <block atomic="false" info="">
[21:10:21.813]                    __var pin     = 0;
[21:10:21.814]                      // -> [pin <= 0x00000000]
[21:10:21.814]                    __var port    = 0;
[21:10:21.814]                      // -> [port <= 0x00000000]
[21:10:21.814]                    __var portAdr = 0;
[21:10:21.814]                      // -> [portAdr <= 0x00000000]
[21:10:21.814]                    __var pos     = 0;
[21:10:21.815]                      // -> [pos <= 0x00000000]
[21:10:21.815]                    __var SWO_Pin = 0x00010003;          // PB3
[21:10:21.815]                      // -> [SWO_Pin <= 0x00010003]
[21:10:21.815]                  </block>
[21:10:21.815]                  <block atomic="false" info="configure SWO">
[21:10:21.815]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:10:21.816]                      // -> [pin <= 0x00000003]
[21:10:21.816]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:10:21.816]                      // -> [port <= 0x00000001]
[21:10:21.816]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:10:21.816]                      // -> [portAdr <= 0x40020400]
[21:10:21.816]                    pos = pin * 2;
[21:10:21.816]                      // -> [pos <= 0x00000006]
[21:10:21.817]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:10:21.817]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.818]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.818]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:10:21.818]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.818]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.819]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:10:21.819]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.819]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.820]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:10:21.820]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.821]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.821]                  </block>
[21:10:21.821]                  <control if="pin <  8" while="" timeout="0" info="">
[21:10:21.821]                    // if-block "pin <  8"
[21:10:21.821]                      // =>  TRUE
[21:10:21.821]                    <block atomic="false" info="">
[21:10:21.821]                      pos = ((pin    ) & 7) * 4;
[21:10:21.822]                        // -> [pos <= 0x0000000C]
[21:10:21.822]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:10:21.822]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.823]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.823]                    </block>
[21:10:21.823]                    // end if-block "pin <  8"
[21:10:21.823]                  </control>
[21:10:21.823]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:10:21.823]                    // if-block "pin >= 8"
[21:10:21.824]                      // =>  FALSE
[21:10:21.824]                    // skip if-block "pin >= 8"
[21:10:21.824]                  </control>
[21:10:21.824]                </sequence>
[21:10:21.824]            </block>
[21:10:21.824]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:10:21.824]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:10:21.825]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.825]            </block>
[21:10:21.825]          </sequence>
[21:10:21.825]      </block>
[21:10:21.825]      // end if-block "traceSWO"
[21:10:21.825]    </control>
[21:10:21.826]    <control if="traceTPIU" while="" timeout="0" info="">
[21:10:21.826]      // if-block "traceTPIU"
[21:10:21.826]        // =>  FALSE
[21:10:21.826]      // skip if-block "traceTPIU"
[21:10:21.826]    </control>
[21:10:21.826]  </sequence>
[21:10:21.826]  
[21:10:21.830]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:10:21.830]  
[21:10:21.830]  <debugvars>
[21:10:21.831]    // Pre-defined
[21:10:21.831]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:10:21.831]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:10:21.831]    __dp=0x00000000
[21:10:21.831]    __ap=0x00000000
[21:10:21.831]    __traceout=0x00000001      (SWO Trace)
[21:10:21.832]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:10:21.832]    __FlashAddr=0x00000000
[21:10:21.832]    __FlashLen=0x00000000
[21:10:21.832]    __FlashArg=0x00000000
[21:10:21.832]    __FlashOp=0x00000000
[21:10:21.833]    __Result=0x00000000
[21:10:21.833]    
[21:10:21.833]    // User-defined
[21:10:21.833]    DbgMCU_CR=0x00000007
[21:10:21.833]    DbgMCU_APB1_Fz=0x00000000
[21:10:21.833]    DbgMCU_APB2_Fz=0x00000000
[21:10:21.833]    TraceClk_Pin=0x00040002
[21:10:21.834]    TraceD0_Pin=0x00040003
[21:10:21.834]    TraceD1_Pin=0x00040004
[21:10:21.834]    TraceD2_Pin=0x00040005
[21:10:21.834]    TraceD3_Pin=0x00040006
[21:10:21.834]  </debugvars>
[21:10:21.834]  
[21:10:21.835]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:10:21.835]    <block atomic="false" info="">
[21:10:21.835]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:10:21.835]        // -> [traceSWO <= 0x00000001]
[21:10:21.835]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:10:21.835]        // -> [traceTPIU <= 0x00000000]
[21:10:21.836]    </block>
[21:10:21.836]    <control if="traceSWO" while="" timeout="0" info="">
[21:10:21.836]      // if-block "traceSWO"
[21:10:21.836]        // =>  TRUE
[21:10:21.836]      <block atomic="false" info="">
[21:10:21.837]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:10:21.837]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:10:21.837]            <block atomic="false" info="">
[21:10:21.837]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:10:21.837]                // -> [dbgmcu_val <= 0x00000000]
[21:10:21.838]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:10:21.838]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:10:21.838]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:10:21.838]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.839]                // -> [dbgmcu_val <= 0x00000007]
[21:10:21.839]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:10:21.839]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:10:21.839]              Sequence("ConfigureTraceSWOPin");
[21:10:21.839]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:10:21.840]                  <block atomic="false" info="">
[21:10:21.840]                    __var pin     = 0;
[21:10:21.840]                      // -> [pin <= 0x00000000]
[21:10:21.840]                    __var port    = 0;
[21:10:21.840]                      // -> [port <= 0x00000000]
[21:10:21.840]                    __var portAdr = 0;
[21:10:21.840]                      // -> [portAdr <= 0x00000000]
[21:10:21.841]                    __var pos     = 0;
[21:10:21.841]                      // -> [pos <= 0x00000000]
[21:10:21.841]                    __var SWO_Pin = 0x00010003;          // PB3
[21:10:21.841]                      // -> [SWO_Pin <= 0x00010003]
[21:10:21.841]                  </block>
[21:10:21.841]                  <block atomic="false" info="configure SWO">
[21:10:21.842]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:10:21.842]                      // -> [pin <= 0x00000003]
[21:10:21.842]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:10:21.842]                      // -> [port <= 0x00000001]
[21:10:21.842]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:10:21.842]                      // -> [portAdr <= 0x40020400]
[21:10:21.842]                    pos = pin * 2;
[21:10:21.842]                      // -> [pos <= 0x00000006]
[21:10:21.843]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:10:21.843]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.843]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.844]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:10:21.844]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.844]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.845]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:10:21.845]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.846]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.846]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:10:21.846]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.847]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.847]                  </block>
[21:10:21.847]                  <control if="pin <  8" while="" timeout="0" info="">
[21:10:21.847]                    // if-block "pin <  8"
[21:10:21.847]                      // =>  TRUE
[21:10:21.847]                    <block atomic="false" info="">
[21:10:21.847]                      pos = ((pin    ) & 7) * 4;
[21:10:21.847]                        // -> [pos <= 0x0000000C]
[21:10:21.847]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:10:21.848]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.848]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.849]                    </block>
[21:10:21.849]                    // end if-block "pin <  8"
[21:10:21.849]                  </control>
[21:10:21.849]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:10:21.849]                    // if-block "pin >= 8"
[21:10:21.849]                      // =>  FALSE
[21:10:21.849]                    // skip if-block "pin >= 8"
[21:10:21.849]                  </control>
[21:10:21.850]                </sequence>
[21:10:21.850]            </block>
[21:10:21.850]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:10:21.850]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:10:21.850]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:21.850]            </block>
[21:10:21.850]          </sequence>
[21:10:21.851]      </block>
[21:10:21.851]      // end if-block "traceSWO"
[21:10:21.851]    </control>
[21:10:21.851]    <control if="traceTPIU" while="" timeout="0" info="">
[21:10:21.851]      // if-block "traceTPIU"
[21:10:21.851]        // =>  FALSE
[21:10:21.851]      // skip if-block "traceTPIU"
[21:10:21.852]    </control>
[21:10:21.852]  </sequence>
[21:10:21.852]  
[21:10:22.060]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:10:22.060]  
[21:10:22.060]  <debugvars>
[21:10:22.061]    // Pre-defined
[21:10:22.061]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:10:22.061]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:10:22.061]    __dp=0x00000000
[21:10:22.061]    __ap=0x00000000
[21:10:22.062]    __traceout=0x00000001      (SWO Trace)
[21:10:22.062]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:10:22.062]    __FlashAddr=0x00000000
[21:10:22.062]    __FlashLen=0x00000000
[21:10:22.062]    __FlashArg=0x00000000
[21:10:22.063]    __FlashOp=0x00000000
[21:10:22.063]    __Result=0x00000000
[21:10:22.063]    
[21:10:22.063]    // User-defined
[21:10:22.063]    DbgMCU_CR=0x00000007
[21:10:22.063]    DbgMCU_APB1_Fz=0x00000000
[21:10:22.063]    DbgMCU_APB2_Fz=0x00000000
[21:10:22.064]    TraceClk_Pin=0x00040002
[21:10:22.064]    TraceD0_Pin=0x00040003
[21:10:22.064]    TraceD1_Pin=0x00040004
[21:10:22.064]    TraceD2_Pin=0x00040005
[21:10:22.064]    TraceD3_Pin=0x00040006
[21:10:22.064]  </debugvars>
[21:10:22.065]  
[21:10:22.065]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:10:22.065]    <block atomic="false" info="">
[21:10:22.065]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:10:22.065]        // -> [traceSWO <= 0x00000001]
[21:10:22.065]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:10:22.066]        // -> [traceTPIU <= 0x00000000]
[21:10:22.066]    </block>
[21:10:22.066]    <control if="traceSWO" while="" timeout="0" info="">
[21:10:22.066]      // if-block "traceSWO"
[21:10:22.066]        // =>  TRUE
[21:10:22.066]      <block atomic="false" info="">
[21:10:22.067]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:10:22.067]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:10:22.067]            <block atomic="false" info="">
[21:10:22.067]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:10:22.067]                // -> [dbgmcu_val <= 0x00000000]
[21:10:22.068]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:10:22.068]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:10:22.068]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:10:22.068]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.068]                // -> [dbgmcu_val <= 0x00000007]
[21:10:22.069]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:10:22.069]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:10:22.069]              Sequence("ConfigureTraceSWOPin");
[21:10:22.069]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:10:22.069]                  <block atomic="false" info="">
[21:10:22.069]                    __var pin     = 0;
[21:10:22.070]                      // -> [pin <= 0x00000000]
[21:10:22.070]                    __var port    = 0;
[21:10:22.070]                      // -> [port <= 0x00000000]
[21:10:22.070]                    __var portAdr = 0;
[21:10:22.071]                      // -> [portAdr <= 0x00000000]
[21:10:22.071]                    __var pos     = 0;
[21:10:22.071]                      // -> [pos <= 0x00000000]
[21:10:22.071]                    __var SWO_Pin = 0x00010003;          // PB3
[21:10:22.071]                      // -> [SWO_Pin <= 0x00010003]
[21:10:22.071]                  </block>
[21:10:22.071]                  <block atomic="false" info="configure SWO">
[21:10:22.072]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:10:22.072]                      // -> [pin <= 0x00000003]
[21:10:22.072]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:10:22.072]                      // -> [port <= 0x00000001]
[21:10:22.072]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:10:22.072]                      // -> [portAdr <= 0x40020400]
[21:10:22.072]                    pos = pin * 2;
[21:10:22.073]                      // -> [pos <= 0x00000006]
[21:10:22.073]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:10:22.073]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.074]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.074]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:10:22.074]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.075]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.075]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:10:22.075]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.076]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.076]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:10:22.076]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.077]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.077]                  </block>
[21:10:22.077]                  <control if="pin <  8" while="" timeout="0" info="">
[21:10:22.077]                    // if-block "pin <  8"
[21:10:22.078]                      // =>  TRUE
[21:10:22.078]                    <block atomic="false" info="">
[21:10:22.078]                      pos = ((pin    ) & 7) * 4;
[21:10:22.078]                        // -> [pos <= 0x0000000C]
[21:10:22.078]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:10:22.079]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.079]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.079]                    </block>
[21:10:22.079]                    // end if-block "pin <  8"
[21:10:22.079]                  </control>
[21:10:22.080]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:10:22.080]                    // if-block "pin >= 8"
[21:10:22.080]                      // =>  FALSE
[21:10:22.080]                    // skip if-block "pin >= 8"
[21:10:22.080]                  </control>
[21:10:22.080]                </sequence>
[21:10:22.081]            </block>
[21:10:22.081]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:10:22.081]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:10:22.081]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:10:22.081]            </block>
[21:10:22.082]          </sequence>
[21:10:22.082]      </block>
[21:10:22.082]      // end if-block "traceSWO"
[21:10:22.082]    </control>
[21:10:22.082]    <control if="traceTPIU" while="" timeout="0" info="">
[21:10:22.082]      // if-block "traceTPIU"
[21:10:22.082]        // =>  FALSE
[21:10:22.083]      // skip if-block "traceTPIU"
[21:10:22.083]    </control>
[21:10:22.083]  </sequence>
[21:10:22.083]  
[21:12:44.769]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:12:44.769]  
[21:12:44.770]  <debugvars>
[21:12:44.770]    // Pre-defined
[21:12:44.770]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:44.770]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:12:44.771]    __dp=0x00000000
[21:12:44.771]    __ap=0x00000000
[21:12:44.771]    __traceout=0x00000001      (SWO Trace)
[21:12:44.771]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:44.771]    __FlashAddr=0x00000000
[21:12:44.771]    __FlashLen=0x00000000
[21:12:44.772]    __FlashArg=0x00000000
[21:12:44.772]    __FlashOp=0x00000000
[21:12:44.772]    __Result=0x00000000
[21:12:44.772]    
[21:12:44.772]    // User-defined
[21:12:44.772]    DbgMCU_CR=0x00000007
[21:12:44.773]    DbgMCU_APB1_Fz=0x00000000
[21:12:44.773]    DbgMCU_APB2_Fz=0x00000000
[21:12:44.773]    TraceClk_Pin=0x00040002
[21:12:44.773]    TraceD0_Pin=0x00040003
[21:12:44.773]    TraceD1_Pin=0x00040004
[21:12:44.774]    TraceD2_Pin=0x00040005
[21:12:44.774]    TraceD3_Pin=0x00040006
[21:12:44.774]  </debugvars>
[21:12:44.774]  
[21:12:44.774]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:12:44.774]    <block atomic="false" info="">
[21:12:44.775]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:12:44.775]        // -> [traceSWO <= 0x00000001]
[21:12:44.775]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:12:44.775]        // -> [traceTPIU <= 0x00000000]
[21:12:44.775]    </block>
[21:12:44.776]    <control if="traceSWO" while="" timeout="0" info="">
[21:12:44.776]      // if-block "traceSWO"
[21:12:44.776]        // =>  TRUE
[21:12:44.776]      <block atomic="false" info="">
[21:12:44.776]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:12:44.776]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:12:44.777]            <block atomic="false" info="">
[21:12:44.777]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:12:44.777]                // -> [dbgmcu_val <= 0x00000000]
[21:12:44.777]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:12:44.777]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:12:44.777]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:12:44.778]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.778]                // -> [dbgmcu_val <= 0x00000007]
[21:12:44.778]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:12:44.779]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:12:44.779]              Sequence("ConfigureTraceSWOPin");
[21:12:44.779]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:12:44.779]                  <block atomic="false" info="">
[21:12:44.779]                    __var pin     = 0;
[21:12:44.779]                      // -> [pin <= 0x00000000]
[21:12:44.779]                    __var port    = 0;
[21:12:44.780]                      // -> [port <= 0x00000000]
[21:12:44.780]                    __var portAdr = 0;
[21:12:44.780]                      // -> [portAdr <= 0x00000000]
[21:12:44.780]                    __var pos     = 0;
[21:12:44.780]                      // -> [pos <= 0x00000000]
[21:12:44.780]                    __var SWO_Pin = 0x00010003;          // PB3
[21:12:44.781]                      // -> [SWO_Pin <= 0x00010003]
[21:12:44.781]                  </block>
[21:12:44.781]                  <block atomic="false" info="configure SWO">
[21:12:44.781]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:12:44.781]                      // -> [pin <= 0x00000003]
[21:12:44.782]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:12:44.782]                      // -> [port <= 0x00000001]
[21:12:44.782]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:12:44.782]                      // -> [portAdr <= 0x40020400]
[21:12:44.782]                    pos = pin * 2;
[21:12:44.782]                      // -> [pos <= 0x00000006]
[21:12:44.782]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:12:44.783]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.783]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.784]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:12:44.784]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.785]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.785]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:12:44.785]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.786]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.786]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:12:44.786]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.787]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.787]                  </block>
[21:12:44.787]                  <control if="pin <  8" while="" timeout="0" info="">
[21:12:44.787]                    // if-block "pin <  8"
[21:12:44.787]                      // =>  TRUE
[21:12:44.788]                    <block atomic="false" info="">
[21:12:44.788]                      pos = ((pin    ) & 7) * 4;
[21:12:44.788]                        // -> [pos <= 0x0000000C]
[21:12:44.788]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:12:44.789]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.789]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.789]                    </block>
[21:12:44.790]                    // end if-block "pin <  8"
[21:12:44.790]                  </control>
[21:12:44.790]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:12:44.790]                    // if-block "pin >= 8"
[21:12:44.790]                      // =>  FALSE
[21:12:44.790]                    // skip if-block "pin >= 8"
[21:12:44.790]                  </control>
[21:12:44.791]                </sequence>
[21:12:44.791]            </block>
[21:12:44.791]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:12:44.791]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:12:44.792]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.792]            </block>
[21:12:44.792]          </sequence>
[21:12:44.792]      </block>
[21:12:44.792]      // end if-block "traceSWO"
[21:12:44.792]    </control>
[21:12:44.793]    <control if="traceTPIU" while="" timeout="0" info="">
[21:12:44.793]      // if-block "traceTPIU"
[21:12:44.793]        // =>  FALSE
[21:12:44.793]      // skip if-block "traceTPIU"
[21:12:44.793]    </control>
[21:12:44.793]  </sequence>
[21:12:44.794]  
[21:14:05.021]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:14:05.021]  
[21:14:05.021]  <debugvars>
[21:14:05.021]    // Pre-defined
[21:14:05.022]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:05.022]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:14:05.022]    __dp=0x00000000
[21:14:05.022]    __ap=0x00000000
[21:14:05.022]    __traceout=0x00000001      (SWO Trace)
[21:14:05.023]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:05.023]    __FlashAddr=0x00000000
[21:14:05.023]    __FlashLen=0x00000000
[21:14:05.023]    __FlashArg=0x00000000
[21:14:05.024]    __FlashOp=0x00000000
[21:14:05.024]    __Result=0x00000000
[21:14:05.024]    
[21:14:05.024]    // User-defined
[21:14:05.024]    DbgMCU_CR=0x00000007
[21:14:05.025]    DbgMCU_APB1_Fz=0x00000000
[21:14:05.025]    DbgMCU_APB2_Fz=0x00000000
[21:14:05.025]    TraceClk_Pin=0x00040002
[21:14:05.025]    TraceD0_Pin=0x00040003
[21:14:05.025]    TraceD1_Pin=0x00040004
[21:14:05.026]    TraceD2_Pin=0x00040005
[21:14:05.026]    TraceD3_Pin=0x00040006
[21:14:05.026]  </debugvars>
[21:14:05.026]  
[21:14:05.026]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:14:05.027]    <block atomic="false" info="">
[21:14:05.027]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:14:05.027]        // -> [traceSWO <= 0x00000001]
[21:14:05.027]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:14:05.027]        // -> [traceTPIU <= 0x00000000]
[21:14:05.028]    </block>
[21:14:05.028]    <control if="traceSWO" while="" timeout="0" info="">
[21:14:05.028]      // if-block "traceSWO"
[21:14:05.028]        // =>  TRUE
[21:14:05.029]      <block atomic="false" info="">
[21:14:05.029]        Sequence("DisableTraceSWO");
[21:14:05.029]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:14:05.029]            <block atomic="false" info="">
[21:14:05.029]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:14:05.029]                // -> [dbgmcu_val <= 0x00000000]
[21:14:05.030]            </block>
[21:14:05.030]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:14:05.030]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:14:05.030]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:14:05.031]                // -> [dbgmcu_val <= 0x00000007]
[21:14:05.031]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:14:05.032]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:05.032]            </block>
[21:14:05.032]          </sequence>
[21:14:05.032]      </block>
[21:14:05.032]      // end if-block "traceSWO"
[21:14:05.033]    </control>
[21:14:05.033]    <control if="traceTPIU" while="" timeout="0" info="">
[21:14:05.033]      // if-block "traceTPIU"
[21:14:05.033]        // =>  FALSE
[21:14:05.033]      // skip if-block "traceTPIU"
[21:14:05.033]    </control>
[21:14:05.034]  </sequence>
[21:14:05.034]  
[21:14:46.276]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:14:46.276]  
[21:14:46.276]  <debugvars>
[21:14:46.277]    // Pre-defined
[21:14:46.277]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:46.277]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:14:46.277]    __dp=0x00000000
[21:14:46.277]    __ap=0x00000000
[21:14:46.277]    __traceout=0x00000000      (Trace Disabled)
[21:14:46.278]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:46.278]    __FlashAddr=0x00000000
[21:14:46.278]    __FlashLen=0x00000000
[21:14:46.278]    __FlashArg=0x00000000
[21:14:46.278]    __FlashOp=0x00000000
[21:14:46.279]    __Result=0x00000000
[21:14:46.279]    
[21:14:46.279]    // User-defined
[21:14:46.279]    DbgMCU_CR=0x00000007
[21:14:46.279]    DbgMCU_APB1_Fz=0x00000000
[21:14:46.279]    DbgMCU_APB2_Fz=0x00000000
[21:14:46.279]    TraceClk_Pin=0x00040002
[21:14:46.280]    TraceD0_Pin=0x00040003
[21:14:46.280]    TraceD1_Pin=0x00040004
[21:14:46.280]    TraceD2_Pin=0x00040005
[21:14:46.280]    TraceD3_Pin=0x00040006
[21:14:46.280]  </debugvars>
[21:14:46.280]  
[21:14:46.281]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:14:46.281]    <block atomic="false" info="">
[21:14:46.281]      Sequence("CheckID");
[21:14:46.281]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:14:46.281]          <block atomic="false" info="">
[21:14:46.281]            __var pidr1 = 0;
[21:14:46.282]              // -> [pidr1 <= 0x00000000]
[21:14:46.282]            __var pidr2 = 0;
[21:14:46.282]              // -> [pidr2 <= 0x00000000]
[21:14:46.282]            __var jep106id = 0;
[21:14:46.282]              // -> [jep106id <= 0x00000000]
[21:14:46.283]            __var ROMTableBase = 0;
[21:14:46.283]              // -> [ROMTableBase <= 0x00000000]
[21:14:46.283]            __ap = 0;      // AHB-AP
[21:14:46.283]              // -> [__ap <= 0x00000000]
[21:14:46.283]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:14:46.283]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.284]              // -> [ROMTableBase <= 0xE00FD000]
[21:14:46.284]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:14:46.284]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.285]              // -> [pidr1 <= 0x00000004]
[21:14:46.285]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:14:46.285]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.285]              // -> [pidr2 <= 0x0000001A]
[21:14:46.286]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:14:46.286]              // -> [jep106id <= 0x00000020]
[21:14:46.286]          </block>
[21:14:46.286]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:14:46.286]            // if-block "jep106id != 0x20"
[21:14:46.286]              // =>  FALSE
[21:14:46.287]            // skip if-block "jep106id != 0x20"
[21:14:46.287]          </control>
[21:14:46.287]        </sequence>
[21:14:46.287]    </block>
[21:14:46.287]  </sequence>
[21:14:46.287]  
[21:14:46.302]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:14:46.302]  
[21:14:46.302]  <debugvars>
[21:14:46.303]    // Pre-defined
[21:14:46.303]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:46.303]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:14:46.303]    __dp=0x00000000
[21:14:46.303]    __ap=0x00000000
[21:14:46.303]    __traceout=0x00000000      (Trace Disabled)
[21:14:46.304]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:46.304]    __FlashAddr=0x00000000
[21:14:46.304]    __FlashLen=0x00000000
[21:14:46.304]    __FlashArg=0x00000000
[21:14:46.304]    __FlashOp=0x00000000
[21:14:46.305]    __Result=0x00000000
[21:14:46.305]    
[21:14:46.305]    // User-defined
[21:14:46.305]    DbgMCU_CR=0x00000007
[21:14:46.305]    DbgMCU_APB1_Fz=0x00000000
[21:14:46.305]    DbgMCU_APB2_Fz=0x00000000
[21:14:46.305]    TraceClk_Pin=0x00040002
[21:14:46.306]    TraceD0_Pin=0x00040003
[21:14:46.306]    TraceD1_Pin=0x00040004
[21:14:46.306]    TraceD2_Pin=0x00040005
[21:14:46.306]    TraceD3_Pin=0x00040006
[21:14:46.306]  </debugvars>
[21:14:46.307]  
[21:14:46.307]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:14:46.307]    <block atomic="false" info="">
[21:14:46.307]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:14:46.308]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.308]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:14:46.308]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.308]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:14:46.309]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.309]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:14:46.310]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:46.310]    </block>
[21:14:46.310]  </sequence>
[21:14:46.310]  
[21:15:16.846]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:15:16.846]  
[21:15:16.846]  <debugvars>
[21:15:16.847]    // Pre-defined
[21:15:16.847]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:15:16.847]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:15:16.847]    __dp=0x00000000
[21:15:16.847]    __ap=0x00000000
[21:15:16.848]    __traceout=0x00000000      (Trace Disabled)
[21:15:16.848]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:15:16.848]    __FlashAddr=0x00000000
[21:15:16.848]    __FlashLen=0x00000000
[21:15:16.848]    __FlashArg=0x00000000
[21:15:16.849]    __FlashOp=0x00000000
[21:15:16.849]    __Result=0x00000000
[21:15:16.849]    
[21:15:16.849]    // User-defined
[21:15:16.849]    DbgMCU_CR=0x00000007
[21:15:16.849]    DbgMCU_APB1_Fz=0x00000000
[21:15:16.849]    DbgMCU_APB2_Fz=0x00000000
[21:15:16.850]    TraceClk_Pin=0x00040002
[21:15:16.850]    TraceD0_Pin=0x00040003
[21:15:16.850]    TraceD1_Pin=0x00040004
[21:15:16.850]    TraceD2_Pin=0x00040005
[21:15:16.850]    TraceD3_Pin=0x00040006
[21:15:16.851]  </debugvars>
[21:15:16.851]  
[21:15:16.851]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:15:16.851]    <block atomic="false" info="">
[21:15:16.851]      Sequence("CheckID");
[21:15:16.852]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:15:16.852]          <block atomic="false" info="">
[21:15:16.852]            __var pidr1 = 0;
[21:15:16.852]              // -> [pidr1 <= 0x00000000]
[21:15:16.852]            __var pidr2 = 0;
[21:15:16.852]              // -> [pidr2 <= 0x00000000]
[21:15:16.853]            __var jep106id = 0;
[21:15:16.853]              // -> [jep106id <= 0x00000000]
[21:15:16.853]            __var ROMTableBase = 0;
[21:15:16.853]              // -> [ROMTableBase <= 0x00000000]
[21:15:16.853]            __ap = 0;      // AHB-AP
[21:15:16.853]              // -> [__ap <= 0x00000000]
[21:15:16.854]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:15:16.854]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.854]              // -> [ROMTableBase <= 0xE00FD000]
[21:15:16.854]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:15:16.855]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.855]              // -> [pidr1 <= 0x00000004]
[21:15:16.855]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:15:16.856]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.856]              // -> [pidr2 <= 0x0000001A]
[21:15:16.856]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:15:16.856]              // -> [jep106id <= 0x00000020]
[21:15:16.856]          </block>
[21:15:16.856]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:15:16.857]            // if-block "jep106id != 0x20"
[21:15:16.857]              // =>  FALSE
[21:15:16.857]            // skip if-block "jep106id != 0x20"
[21:15:16.857]          </control>
[21:15:16.857]        </sequence>
[21:15:16.857]    </block>
[21:15:16.857]  </sequence>
[21:15:16.858]  
[21:15:16.872]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:15:16.872]  
[21:15:16.872]  <debugvars>
[21:15:16.873]    // Pre-defined
[21:15:16.873]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:15:16.873]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:15:16.873]    __dp=0x00000000
[21:15:16.873]    __ap=0x00000000
[21:15:16.874]    __traceout=0x00000000      (Trace Disabled)
[21:15:16.874]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:15:16.874]    __FlashAddr=0x00000000
[21:15:16.874]    __FlashLen=0x00000000
[21:15:16.874]    __FlashArg=0x00000000
[21:15:16.874]    __FlashOp=0x00000000
[21:15:16.875]    __Result=0x00000000
[21:15:16.875]    
[21:15:16.875]    // User-defined
[21:15:16.875]    DbgMCU_CR=0x00000007
[21:15:16.875]    DbgMCU_APB1_Fz=0x00000000
[21:15:16.875]    DbgMCU_APB2_Fz=0x00000000
[21:15:16.875]    TraceClk_Pin=0x00040002
[21:15:16.876]    TraceD0_Pin=0x00040003
[21:15:16.876]    TraceD1_Pin=0x00040004
[21:15:16.876]    TraceD2_Pin=0x00040005
[21:15:16.876]    TraceD3_Pin=0x00040006
[21:15:16.876]  </debugvars>
[21:15:16.876]  
[21:15:16.877]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:15:16.877]    <block atomic="false" info="">
[21:15:16.877]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:15:16.877]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.878]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:15:16.878]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.878]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:15:16.879]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.879]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:15:16.879]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:15:16.880]    </block>
[21:15:16.880]  </sequence>
[21:15:16.880]  
[21:26:09.123]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:26:09.123]  
[21:26:09.123]  <debugvars>
[21:26:09.123]    // Pre-defined
[21:26:09.123]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:26:09.123]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:26:09.123]    __dp=0x00000000
[21:26:09.123]    __ap=0x00000000
[21:26:09.124]    __traceout=0x00000000      (Trace Disabled)
[21:26:09.124]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:26:09.124]    __FlashAddr=0x00000000
[21:26:09.124]    __FlashLen=0x00000000
[21:26:09.124]    __FlashArg=0x00000000
[21:26:09.124]    __FlashOp=0x00000000
[21:26:09.124]    __Result=0x00000000
[21:26:09.124]    
[21:26:09.124]    // User-defined
[21:26:09.125]    DbgMCU_CR=0x00000007
[21:26:09.125]    DbgMCU_APB1_Fz=0x00000000
[21:26:09.125]    DbgMCU_APB2_Fz=0x00000000
[21:26:09.125]    TraceClk_Pin=0x00040002
[21:26:09.125]    TraceD0_Pin=0x00040003
[21:26:09.125]    TraceD1_Pin=0x00040004
[21:26:09.125]    TraceD2_Pin=0x00040005
[21:26:09.126]    TraceD3_Pin=0x00040006
[21:26:09.126]  </debugvars>
[21:26:09.126]  
[21:26:09.126]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:26:09.126]    <block atomic="false" info="">
[21:26:09.126]      Sequence("CheckID");
[21:26:09.126]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:26:09.126]          <block atomic="false" info="">
[21:26:09.127]            __var pidr1 = 0;
[21:26:09.127]              // -> [pidr1 <= 0x00000000]
[21:26:09.127]            __var pidr2 = 0;
[21:26:09.127]              // -> [pidr2 <= 0x00000000]
[21:26:09.127]            __var jep106id = 0;
[21:26:09.127]              // -> [jep106id <= 0x00000000]
[21:26:09.128]            __var ROMTableBase = 0;
[21:26:09.128]              // -> [ROMTableBase <= 0x00000000]
[21:26:09.128]            __ap = 0;      // AHB-AP
[21:26:09.128]              // -> [__ap <= 0x00000000]
[21:26:09.128]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:26:09.128]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.128]              // -> [ROMTableBase <= 0xE00FD000]
[21:26:09.129]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:26:09.129]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.129]              // -> [pidr1 <= 0x00000004]
[21:26:09.129]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:26:09.130]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.130]              // -> [pidr2 <= 0x0000001A]
[21:26:09.130]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:26:09.130]              // -> [jep106id <= 0x00000020]
[21:26:09.130]          </block>
[21:26:09.131]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:26:09.131]            // if-block "jep106id != 0x20"
[21:26:09.131]              // =>  FALSE
[21:26:09.131]            // skip if-block "jep106id != 0x20"
[21:26:09.131]          </control>
[21:26:09.131]        </sequence>
[21:26:09.131]    </block>
[21:26:09.132]  </sequence>
[21:26:09.132]  
[21:26:09.146]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:26:09.146]  
[21:26:09.146]  <debugvars>
[21:26:09.146]    // Pre-defined
[21:26:09.146]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:26:09.146]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:26:09.146]    __dp=0x00000000
[21:26:09.147]    __ap=0x00000000
[21:26:09.147]    __traceout=0x00000000      (Trace Disabled)
[21:26:09.147]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:26:09.147]    __FlashAddr=0x00000000
[21:26:09.147]    __FlashLen=0x00000000
[21:26:09.147]    __FlashArg=0x00000000
[21:26:09.147]    __FlashOp=0x00000000
[21:26:09.148]    __Result=0x00000000
[21:26:09.148]    
[21:26:09.148]    // User-defined
[21:26:09.148]    DbgMCU_CR=0x00000007
[21:26:09.148]    DbgMCU_APB1_Fz=0x00000000
[21:26:09.148]    DbgMCU_APB2_Fz=0x00000000
[21:26:09.148]    TraceClk_Pin=0x00040002
[21:26:09.148]    TraceD0_Pin=0x00040003
[21:26:09.148]    TraceD1_Pin=0x00040004
[21:26:09.149]    TraceD2_Pin=0x00040005
[21:26:09.149]    TraceD3_Pin=0x00040006
[21:26:09.149]  </debugvars>
[21:26:09.149]  
[21:26:09.149]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:26:09.149]    <block atomic="false" info="">
[21:26:09.149]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:26:09.150]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.150]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:26:09.151]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.151]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:26:09.151]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.151]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:26:09.152]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:09.152]    </block>
[21:26:09.152]  </sequence>
[21:26:09.152]  
[21:26:40.256]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:26:40.256]  
[21:26:40.256]  <debugvars>
[21:26:40.256]    // Pre-defined
[21:26:40.256]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:26:40.257]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:26:40.257]    __dp=0x00000000
[21:26:40.257]    __ap=0x00000000
[21:26:40.257]    __traceout=0x00000000      (Trace Disabled)
[21:26:40.257]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:26:40.257]    __FlashAddr=0x00000000
[21:26:40.258]    __FlashLen=0x00000000
[21:26:40.258]    __FlashArg=0x00000000
[21:26:40.258]    __FlashOp=0x00000000
[21:26:40.258]    __Result=0x00000000
[21:26:40.258]    
[21:26:40.258]    // User-defined
[21:26:40.258]    DbgMCU_CR=0x00000007
[21:26:40.259]    DbgMCU_APB1_Fz=0x00000000
[21:26:40.259]    DbgMCU_APB2_Fz=0x00000000
[21:26:40.259]    TraceClk_Pin=0x00040002
[21:26:40.259]    TraceD0_Pin=0x00040003
[21:26:40.259]    TraceD1_Pin=0x00040004
[21:26:40.259]    TraceD2_Pin=0x00040005
[21:26:40.259]    TraceD3_Pin=0x00040006
[21:26:40.259]  </debugvars>
[21:26:40.260]  
[21:26:40.260]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:26:40.260]    <block atomic="false" info="">
[21:26:40.260]      Sequence("CheckID");
[21:26:40.260]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:26:40.260]          <block atomic="false" info="">
[21:26:40.261]            __var pidr1 = 0;
[21:26:40.261]              // -> [pidr1 <= 0x00000000]
[21:26:40.261]            __var pidr2 = 0;
[21:26:40.261]              // -> [pidr2 <= 0x00000000]
[21:26:40.261]            __var jep106id = 0;
[21:26:40.261]              // -> [jep106id <= 0x00000000]
[21:26:40.262]            __var ROMTableBase = 0;
[21:26:40.262]              // -> [ROMTableBase <= 0x00000000]
[21:26:40.262]            __ap = 0;      // AHB-AP
[21:26:40.262]              // -> [__ap <= 0x00000000]
[21:26:40.262]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:26:40.263]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.263]              // -> [ROMTableBase <= 0xE00FD000]
[21:26:40.263]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:26:40.263]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.264]              // -> [pidr1 <= 0x00000004]
[21:26:40.264]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:26:40.264]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.264]              // -> [pidr2 <= 0x0000001A]
[21:26:40.265]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:26:40.265]              // -> [jep106id <= 0x00000020]
[21:26:40.265]          </block>
[21:26:40.265]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:26:40.265]            // if-block "jep106id != 0x20"
[21:26:40.265]              // =>  FALSE
[21:26:40.265]            // skip if-block "jep106id != 0x20"
[21:26:40.266]          </control>
[21:26:40.266]        </sequence>
[21:26:40.266]    </block>
[21:26:40.266]  </sequence>
[21:26:40.266]  
[21:26:40.281]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:26:40.281]  
[21:26:40.281]  <debugvars>
[21:26:40.281]    // Pre-defined
[21:26:40.281]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:26:40.282]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:26:40.282]    __dp=0x00000000
[21:26:40.282]    __ap=0x00000000
[21:26:40.282]    __traceout=0x00000000      (Trace Disabled)
[21:26:40.283]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:26:40.283]    __FlashAddr=0x00000000
[21:26:40.283]    __FlashLen=0x00000000
[21:26:40.283]    __FlashArg=0x00000000
[21:26:40.283]    __FlashOp=0x00000000
[21:26:40.283]    __Result=0x00000000
[21:26:40.283]    
[21:26:40.283]    // User-defined
[21:26:40.284]    DbgMCU_CR=0x00000007
[21:26:40.284]    DbgMCU_APB1_Fz=0x00000000
[21:26:40.284]    DbgMCU_APB2_Fz=0x00000000
[21:26:40.284]    TraceClk_Pin=0x00040002
[21:26:40.284]    TraceD0_Pin=0x00040003
[21:26:40.285]    TraceD1_Pin=0x00040004
[21:26:40.285]    TraceD2_Pin=0x00040005
[21:26:40.285]    TraceD3_Pin=0x00040006
[21:26:40.285]  </debugvars>
[21:26:40.285]  
[21:26:40.285]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:26:40.286]    <block atomic="false" info="">
[21:26:40.286]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:26:40.286]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.286]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:26:40.287]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.287]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:26:40.287]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.288]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:26:40.288]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:26:40.288]    </block>
[21:26:40.288]  </sequence>
[21:26:40.289]  
[22:35:49.269]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:35:49.269]  
[22:35:49.270]  <debugvars>
[22:35:49.270]    // Pre-defined
[22:35:49.270]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:35:49.270]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:35:49.270]    __dp=0x00000000
[22:35:49.270]    __ap=0x00000000
[22:35:49.270]    __traceout=0x00000000      (Trace Disabled)
[22:35:49.270]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:35:49.271]    __FlashAddr=0x00000000
[22:35:49.271]    __FlashLen=0x00000000
[22:35:49.271]    __FlashArg=0x00000000
[22:35:49.271]    __FlashOp=0x00000000
[22:35:49.271]    __Result=0x00000000
[22:35:49.271]    
[22:35:49.271]    // User-defined
[22:35:49.271]    DbgMCU_CR=0x00000007
[22:35:49.271]    DbgMCU_APB1_Fz=0x00000000
[22:35:49.272]    DbgMCU_APB2_Fz=0x00000000
[22:35:49.272]    TraceClk_Pin=0x00040002
[22:35:49.272]    TraceD0_Pin=0x00040003
[22:35:49.272]    TraceD1_Pin=0x00040004
[22:35:49.272]    TraceD2_Pin=0x00040005
[22:35:49.272]    TraceD3_Pin=0x00040006
[22:35:49.272]  </debugvars>
[22:35:49.272]  
[22:35:49.272]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:35:49.273]    <block atomic="false" info="">
[22:35:49.273]      Sequence("CheckID");
[22:35:49.273]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:35:49.273]          <block atomic="false" info="">
[22:35:49.273]            __var pidr1 = 0;
[22:35:49.273]              // -> [pidr1 <= 0x00000000]
[22:35:49.273]            __var pidr2 = 0;
[22:35:49.273]              // -> [pidr2 <= 0x00000000]
[22:35:49.274]            __var jep106id = 0;
[22:35:49.274]              // -> [jep106id <= 0x00000000]
[22:35:49.274]            __var ROMTableBase = 0;
[22:35:49.274]              // -> [ROMTableBase <= 0x00000000]
[22:35:49.274]            __ap = 0;      // AHB-AP
[22:35:49.274]              // -> [__ap <= 0x00000000]
[22:35:49.274]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:35:49.275]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.275]              // -> [ROMTableBase <= 0xE00FD000]
[22:35:49.275]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:35:49.275]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.275]              // -> [pidr1 <= 0x00000004]
[22:35:49.276]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:35:49.276]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.276]              // -> [pidr2 <= 0x0000001A]
[22:35:49.276]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:35:49.276]              // -> [jep106id <= 0x00000020]
[22:35:49.276]          </block>
[22:35:49.277]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:35:49.277]            // if-block "jep106id != 0x20"
[22:35:49.277]              // =>  FALSE
[22:35:49.277]            // skip if-block "jep106id != 0x20"
[22:35:49.277]          </control>
[22:35:49.277]        </sequence>
[22:35:49.277]    </block>
[22:35:49.277]  </sequence>
[22:35:49.277]  
[22:35:49.292]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:35:49.292]  
[22:35:49.293]  <debugvars>
[22:35:49.293]    // Pre-defined
[22:35:49.293]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:35:49.293]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:35:49.293]    __dp=0x00000000
[22:35:49.293]    __ap=0x00000000
[22:35:49.293]    __traceout=0x00000000      (Trace Disabled)
[22:35:49.293]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:35:49.294]    __FlashAddr=0x00000000
[22:35:49.294]    __FlashLen=0x00000000
[22:35:49.294]    __FlashArg=0x00000000
[22:35:49.294]    __FlashOp=0x00000000
[22:35:49.294]    __Result=0x00000000
[22:35:49.294]    
[22:35:49.294]    // User-defined
[22:35:49.294]    DbgMCU_CR=0x00000007
[22:35:49.294]    DbgMCU_APB1_Fz=0x00000000
[22:35:49.294]    DbgMCU_APB2_Fz=0x00000000
[22:35:49.295]    TraceClk_Pin=0x00040002
[22:35:49.295]    TraceD0_Pin=0x00040003
[22:35:49.295]    TraceD1_Pin=0x00040004
[22:35:49.295]    TraceD2_Pin=0x00040005
[22:35:49.295]    TraceD3_Pin=0x00040006
[22:35:49.295]  </debugvars>
[22:35:49.295]  
[22:35:49.295]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:35:49.296]    <block atomic="false" info="">
[22:35:49.296]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:35:49.296]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.296]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:35:49.297]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.297]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:35:49.298]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.298]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:35:49.298]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:35:49.298]    </block>
[22:35:49.298]  </sequence>
[22:35:49.299]  
[22:36:20.554]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:36:20.554]  
[22:36:20.555]  <debugvars>
[22:36:20.555]    // Pre-defined
[22:36:20.555]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:36:20.555]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:36:20.555]    __dp=0x00000000
[22:36:20.555]    __ap=0x00000000
[22:36:20.556]    __traceout=0x00000000      (Trace Disabled)
[22:36:20.556]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:36:20.556]    __FlashAddr=0x00000000
[22:36:20.556]    __FlashLen=0x00000000
[22:36:20.556]    __FlashArg=0x00000000
[22:36:20.556]    __FlashOp=0x00000000
[22:36:20.557]    __Result=0x00000000
[22:36:20.557]    
[22:36:20.557]    // User-defined
[22:36:20.557]    DbgMCU_CR=0x00000007
[22:36:20.557]    DbgMCU_APB1_Fz=0x00000000
[22:36:20.557]    DbgMCU_APB2_Fz=0x00000000
[22:36:20.557]    TraceClk_Pin=0x00040002
[22:36:20.558]    TraceD0_Pin=0x00040003
[22:36:20.558]    TraceD1_Pin=0x00040004
[22:36:20.558]    TraceD2_Pin=0x00040005
[22:36:20.558]    TraceD3_Pin=0x00040006
[22:36:20.558]  </debugvars>
[22:36:20.558]  
[22:36:20.559]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:36:20.559]    <block atomic="false" info="">
[22:36:20.559]      Sequence("CheckID");
[22:36:20.559]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:36:20.559]          <block atomic="false" info="">
[22:36:20.559]            __var pidr1 = 0;
[22:36:20.560]              // -> [pidr1 <= 0x00000000]
[22:36:20.560]            __var pidr2 = 0;
[22:36:20.560]              // -> [pidr2 <= 0x00000000]
[22:36:20.560]            __var jep106id = 0;
[22:36:20.560]              // -> [jep106id <= 0x00000000]
[22:36:20.560]            __var ROMTableBase = 0;
[22:36:20.561]              // -> [ROMTableBase <= 0x00000000]
[22:36:20.561]            __ap = 0;      // AHB-AP
[22:36:20.561]              // -> [__ap <= 0x00000000]
[22:36:20.561]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:36:20.562]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.562]              // -> [ROMTableBase <= 0xE00FD000]
[22:36:20.562]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:36:20.563]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.563]              // -> [pidr1 <= 0x00000004]
[22:36:20.563]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:36:20.563]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.563]              // -> [pidr2 <= 0x0000001A]
[22:36:20.564]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:36:20.564]              // -> [jep106id <= 0x00000020]
[22:36:20.564]          </block>
[22:36:20.564]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:36:20.564]            // if-block "jep106id != 0x20"
[22:36:20.564]              // =>  FALSE
[22:36:20.564]            // skip if-block "jep106id != 0x20"
[22:36:20.565]          </control>
[22:36:20.565]        </sequence>
[22:36:20.565]    </block>
[22:36:20.565]  </sequence>
[22:36:20.565]  
[22:36:20.580]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:36:20.580]  
[22:36:20.580]  <debugvars>
[22:36:20.580]    // Pre-defined
[22:36:20.580]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:36:20.581]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:36:20.581]    __dp=0x00000000
[22:36:20.581]    __ap=0x00000000
[22:36:20.581]    __traceout=0x00000000      (Trace Disabled)
[22:36:20.582]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:36:20.582]    __FlashAddr=0x00000000
[22:36:20.582]    __FlashLen=0x00000000
[22:36:20.582]    __FlashArg=0x00000000
[22:36:20.582]    __FlashOp=0x00000000
[22:36:20.583]    __Result=0x00000000
[22:36:20.583]    
[22:36:20.583]    // User-defined
[22:36:20.583]    DbgMCU_CR=0x00000007
[22:36:20.583]    DbgMCU_APB1_Fz=0x00000000
[22:36:20.583]    DbgMCU_APB2_Fz=0x00000000
[22:36:20.584]    TraceClk_Pin=0x00040002
[22:36:20.584]    TraceD0_Pin=0x00040003
[22:36:20.584]    TraceD1_Pin=0x00040004
[22:36:20.584]    TraceD2_Pin=0x00040005
[22:36:20.584]    TraceD3_Pin=0x00040006
[22:36:20.585]  </debugvars>
[22:36:20.585]  
[22:36:20.585]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:36:20.585]    <block atomic="false" info="">
[22:36:20.585]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:36:20.586]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.586]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:36:20.587]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.587]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:36:20.588]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.588]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:36:20.588]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:36:20.588]    </block>
[22:36:20.588]  </sequence>
[22:36:20.589]  
[22:44:09.609]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:44:09.609]  
[22:44:09.615]  <debugvars>
[22:44:09.621]    // Pre-defined
[22:44:09.628]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:44:09.635]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:44:09.641]    __dp=0x00000000
[22:44:09.648]    __ap=0x00000000
[22:44:09.655]    __traceout=0x00000000      (Trace Disabled)
[22:44:09.661]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:44:09.661]    __FlashAddr=0x00000000
[22:44:09.661]    __FlashLen=0x00000000
[22:44:09.661]    __FlashArg=0x00000000
[22:44:09.661]    __FlashOp=0x00000000
[22:44:09.662]    __Result=0x00000000
[22:44:09.662]    
[22:44:09.662]    // User-defined
[22:44:09.662]    DbgMCU_CR=0x00000007
[22:44:09.662]    DbgMCU_APB1_Fz=0x00000000
[22:44:09.662]    DbgMCU_APB2_Fz=0x00000000
[22:44:09.663]    TraceClk_Pin=0x00040002
[22:44:09.663]    TraceD0_Pin=0x00040003
[22:44:09.663]    TraceD1_Pin=0x00040004
[22:44:09.663]    TraceD2_Pin=0x00040005
[22:44:09.663]    TraceD3_Pin=0x00040006
[22:44:09.664]  </debugvars>
[22:44:09.664]  
[22:44:09.664]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:44:09.664]    <block atomic="false" info="">
[22:44:09.664]      Sequence("CheckID");
[22:44:09.664]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:44:09.665]          <block atomic="false" info="">
[22:44:09.665]            __var pidr1 = 0;
[22:44:09.665]              // -> [pidr1 <= 0x00000000]
[22:44:09.665]            __var pidr2 = 0;
[22:44:09.665]              // -> [pidr2 <= 0x00000000]
[22:44:09.665]            __var jep106id = 0;
[22:44:09.666]              // -> [jep106id <= 0x00000000]
[22:44:09.666]            __var ROMTableBase = 0;
[22:44:09.666]              // -> [ROMTableBase <= 0x00000000]
[22:44:09.666]            __ap = 0;      // AHB-AP
[22:44:09.666]              // -> [__ap <= 0x00000000]
[22:44:09.666]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:44:09.667]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:44:09.667]              // -> [ROMTableBase <= 0xE00FD000]
[22:44:09.667]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:44:09.667]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:44:09.667]              // -> [pidr1 <= 0x00000004]
[22:44:09.668]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:44:09.668]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:44:09.668]              // -> [pidr2 <= 0x0000001A]
[22:44:09.668]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:44:09.668]              // -> [jep106id <= 0x00000020]
[22:44:09.668]          </block>
[22:44:09.669]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:44:09.669]            // if-block "jep106id != 0x20"
[22:44:09.669]              // =>  FALSE
[22:44:09.669]            // skip if-block "jep106id != 0x20"
[22:44:09.669]          </control>
[22:44:09.669]        </sequence>
[22:44:09.669]    </block>
[22:44:09.669]  </sequence>
[22:44:09.670]  
[22:44:09.684]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:44:09.684]  
[22:44:09.694]  <debugvars>
[22:44:09.701]    // Pre-defined
[22:44:09.707]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:44:09.713]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:44:09.721]    __dp=0x00000000
[22:44:09.727]    __ap=0x00000000
[22:44:09.733]    __traceout=0x00000000      (Trace Disabled)
[22:44:09.741]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:44:09.749]    __FlashAddr=0x00000000
[22:44:09.756]    __FlashLen=0x00000000
[22:44:09.763]    __FlashArg=0x00000000
[22:44:09.770]    __FlashOp=0x00000000
[22:44:09.776]    __Result=0x00000000
[22:44:09.797]    
[22:44:09.797]    // User-defined
[22:44:09.809]    DbgMCU_CR=0x00000007
[22:44:09.823]    DbgMCU_APB1_Fz=0x00000000
[22:44:09.836]    DbgMCU_APB2_Fz=0x00000000
[22:44:09.843]    TraceClk_Pin=0x00040002
[22:44:09.849]    TraceD0_Pin=0x00040003
[22:44:09.856]    TraceD1_Pin=0x00040004
[22:44:09.869]    TraceD2_Pin=0x00040005
[22:44:09.876]    TraceD3_Pin=0x00040006
[22:44:09.882]  </debugvars>
[22:44:09.888]  
[22:44:09.897]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:44:09.903]    <block atomic="false" info="">
[22:44:09.911]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:44:09.917]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:09.930]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:44:09.943]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:09.955]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:44:09.968]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:09.980]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:44:09.988]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:10.002]    </block>
[22:44:10.009]  </sequence>
[22:44:10.015]  
[22:44:42.085]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:44:42.085]  
[22:44:42.085]  <debugvars>
[22:44:42.085]    // Pre-defined
[22:44:42.086]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:44:42.086]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:44:42.086]    __dp=0x00000000
[22:44:42.087]    __ap=0x00000000
[22:44:42.087]    __traceout=0x00000000      (Trace Disabled)
[22:44:42.087]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:44:42.087]    __FlashAddr=0x00000000
[22:44:42.087]    __FlashLen=0x00000000
[22:44:42.087]    __FlashArg=0x00000000
[22:44:42.088]    __FlashOp=0x00000000
[22:44:42.088]    __Result=0x00000000
[22:44:42.088]    
[22:44:42.088]    // User-defined
[22:44:42.088]    DbgMCU_CR=0x00000007
[22:44:42.088]    DbgMCU_APB1_Fz=0x00000000
[22:44:42.089]    DbgMCU_APB2_Fz=0x00000000
[22:44:42.089]    TraceClk_Pin=0x00040002
[22:44:42.089]    TraceD0_Pin=0x00040003
[22:44:42.089]    TraceD1_Pin=0x00040004
[22:44:42.089]    TraceD2_Pin=0x00040005
[22:44:42.089]    TraceD3_Pin=0x00040006
[22:44:42.090]  </debugvars>
[22:44:42.090]  
[22:44:42.090]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:44:42.090]    <block atomic="false" info="">
[22:44:42.091]      Sequence("CheckID");
[22:44:42.091]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:44:42.091]          <block atomic="false" info="">
[22:44:42.091]            __var pidr1 = 0;
[22:44:42.091]              // -> [pidr1 <= 0x00000000]
[22:44:42.092]            __var pidr2 = 0;
[22:44:42.092]              // -> [pidr2 <= 0x00000000]
[22:44:42.092]            __var jep106id = 0;
[22:44:42.092]              // -> [jep106id <= 0x00000000]
[22:44:42.092]            __var ROMTableBase = 0;
[22:44:42.092]              // -> [ROMTableBase <= 0x00000000]
[22:44:42.092]            __ap = 0;      // AHB-AP
[22:44:42.093]              // -> [__ap <= 0x00000000]
[22:44:42.093]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:44:42.093]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.093]              // -> [ROMTableBase <= 0xE00FD000]
[22:44:42.093]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:44:42.094]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.094]              // -> [pidr1 <= 0x00000004]
[22:44:42.094]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:44:42.094]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.095]              // -> [pidr2 <= 0x0000001A]
[22:44:42.095]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:44:42.095]              // -> [jep106id <= 0x00000020]
[22:44:42.095]          </block>
[22:44:42.095]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:44:42.095]            // if-block "jep106id != 0x20"
[22:44:42.095]              // =>  FALSE
[22:44:42.095]            // skip if-block "jep106id != 0x20"
[22:44:42.096]          </control>
[22:44:42.096]        </sequence>
[22:44:42.096]    </block>
[22:44:42.096]  </sequence>
[22:44:42.096]  
[22:44:42.111]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:44:42.111]  
[22:44:42.112]  <debugvars>
[22:44:42.112]    // Pre-defined
[22:44:42.112]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:44:42.112]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:44:42.112]    __dp=0x00000000
[22:44:42.112]    __ap=0x00000000
[22:44:42.112]    __traceout=0x00000000      (Trace Disabled)
[22:44:42.112]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:44:42.113]    __FlashAddr=0x00000000
[22:44:42.113]    __FlashLen=0x00000000
[22:44:42.113]    __FlashArg=0x00000000
[22:44:42.113]    __FlashOp=0x00000000
[22:44:42.113]    __Result=0x00000000
[22:44:42.113]    
[22:44:42.113]    // User-defined
[22:44:42.113]    DbgMCU_CR=0x00000007
[22:44:42.114]    DbgMCU_APB1_Fz=0x00000000
[22:44:42.114]    DbgMCU_APB2_Fz=0x00000000
[22:44:42.114]    TraceClk_Pin=0x00040002
[22:44:42.114]    TraceD0_Pin=0x00040003
[22:44:42.114]    TraceD1_Pin=0x00040004
[22:44:42.114]    TraceD2_Pin=0x00040005
[22:44:42.114]    TraceD3_Pin=0x00040006
[22:44:42.114]  </debugvars>
[22:44:42.115]  
[22:44:42.115]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:44:42.115]    <block atomic="false" info="">
[22:44:42.115]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:44:42.115]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.116]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:44:42.116]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.116]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:44:42.117]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.117]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:44:42.117]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:44:42.117]    </block>
[22:44:42.117]  </sequence>
[22:44:42.117]  
[22:51:28.260]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:51:28.260]  
[22:51:28.260]  <debugvars>
[22:51:28.261]    // Pre-defined
[22:51:28.261]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:51:28.261]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:51:28.261]    __dp=0x00000000
[22:51:28.262]    __ap=0x00000000
[22:51:28.262]    __traceout=0x00000000      (Trace Disabled)
[22:51:28.262]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:51:28.262]    __FlashAddr=0x00000000
[22:51:28.262]    __FlashLen=0x00000000
[22:51:28.263]    __FlashArg=0x00000000
[22:51:28.263]    __FlashOp=0x00000000
[22:51:28.263]    __Result=0x00000000
[22:51:28.263]    
[22:51:28.263]    // User-defined
[22:51:28.263]    DbgMCU_CR=0x00000007
[22:51:28.264]    DbgMCU_APB1_Fz=0x00000000
[22:51:28.264]    DbgMCU_APB2_Fz=0x00000000
[22:51:28.264]    TraceClk_Pin=0x00040002
[22:51:28.264]    TraceD0_Pin=0x00040003
[22:51:28.264]    TraceD1_Pin=0x00040004
[22:51:28.265]    TraceD2_Pin=0x00040005
[22:51:28.265]    TraceD3_Pin=0x00040006
[22:51:28.265]  </debugvars>
[22:51:28.265]  
[22:51:28.265]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:51:28.266]    <block atomic="false" info="">
[22:51:28.266]      Sequence("CheckID");
[22:51:28.266]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:51:28.266]          <block atomic="false" info="">
[22:51:28.266]            __var pidr1 = 0;
[22:51:28.267]              // -> [pidr1 <= 0x00000000]
[22:51:28.267]            __var pidr2 = 0;
[22:51:28.267]              // -> [pidr2 <= 0x00000000]
[22:51:28.267]            __var jep106id = 0;
[22:51:28.267]              // -> [jep106id <= 0x00000000]
[22:51:28.268]            __var ROMTableBase = 0;
[22:51:28.268]              // -> [ROMTableBase <= 0x00000000]
[22:51:28.268]            __ap = 0;      // AHB-AP
[22:51:28.268]              // -> [__ap <= 0x00000000]
[22:51:28.268]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:51:28.269]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.269]              // -> [ROMTableBase <= 0xE00FD000]
[22:51:28.269]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:51:28.270]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.270]              // -> [pidr1 <= 0x00000004]
[22:51:28.270]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:51:28.271]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.271]              // -> [pidr2 <= 0x0000001A]
[22:51:28.271]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:51:28.271]              // -> [jep106id <= 0x00000020]
[22:51:28.271]          </block>
[22:51:28.272]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:51:28.272]            // if-block "jep106id != 0x20"
[22:51:28.272]              // =>  FALSE
[22:51:28.272]            // skip if-block "jep106id != 0x20"
[22:51:28.272]          </control>
[22:51:28.272]        </sequence>
[22:51:28.273]    </block>
[22:51:28.273]  </sequence>
[22:51:28.273]  
[22:51:28.288]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:51:28.288]  
[22:51:28.289]  <debugvars>
[22:51:28.289]    // Pre-defined
[22:51:28.289]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:51:28.289]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:51:28.289]    __dp=0x00000000
[22:51:28.290]    __ap=0x00000000
[22:51:28.290]    __traceout=0x00000000      (Trace Disabled)
[22:51:28.290]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:51:28.290]    __FlashAddr=0x00000000
[22:51:28.290]    __FlashLen=0x00000000
[22:51:28.290]    __FlashArg=0x00000000
[22:51:28.291]    __FlashOp=0x00000000
[22:51:28.291]    __Result=0x00000000
[22:51:28.291]    
[22:51:28.291]    // User-defined
[22:51:28.291]    DbgMCU_CR=0x00000007
[22:51:28.291]    DbgMCU_APB1_Fz=0x00000000
[22:51:28.292]    DbgMCU_APB2_Fz=0x00000000
[22:51:28.292]    TraceClk_Pin=0x00040002
[22:51:28.292]    TraceD0_Pin=0x00040003
[22:51:28.292]    TraceD1_Pin=0x00040004
[22:51:28.292]    TraceD2_Pin=0x00040005
[22:51:28.292]    TraceD3_Pin=0x00040006
[22:51:28.293]  </debugvars>
[22:51:28.293]  
[22:51:28.293]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:51:28.293]    <block atomic="false" info="">
[22:51:28.293]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:51:28.294]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.294]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:51:28.295]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.295]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:51:28.295]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.296]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:51:28.296]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:28.296]    </block>
[22:51:28.297]  </sequence>
[22:51:28.297]  
[22:51:59.463]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:51:59.463]  
[22:51:59.463]  <debugvars>
[22:51:59.463]    // Pre-defined
[22:51:59.463]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:51:59.463]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:51:59.464]    __dp=0x00000000
[22:51:59.464]    __ap=0x00000000
[22:51:59.464]    __traceout=0x00000000      (Trace Disabled)
[22:51:59.464]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:51:59.464]    __FlashAddr=0x00000000
[22:51:59.464]    __FlashLen=0x00000000
[22:51:59.465]    __FlashArg=0x00000000
[22:51:59.465]    __FlashOp=0x00000000
[22:51:59.465]    __Result=0x00000000
[22:51:59.465]    
[22:51:59.465]    // User-defined
[22:51:59.465]    DbgMCU_CR=0x00000007
[22:51:59.465]    DbgMCU_APB1_Fz=0x00000000
[22:51:59.465]    DbgMCU_APB2_Fz=0x00000000
[22:51:59.466]    TraceClk_Pin=0x00040002
[22:51:59.466]    TraceD0_Pin=0x00040003
[22:51:59.466]    TraceD1_Pin=0x00040004
[22:51:59.466]    TraceD2_Pin=0x00040005
[22:51:59.466]    TraceD3_Pin=0x00040006
[22:51:59.466]  </debugvars>
[22:51:59.467]  
[22:51:59.467]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:51:59.467]    <block atomic="false" info="">
[22:51:59.467]      Sequence("CheckID");
[22:51:59.467]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:51:59.467]          <block atomic="false" info="">
[22:51:59.467]            __var pidr1 = 0;
[22:51:59.467]              // -> [pidr1 <= 0x00000000]
[22:51:59.468]            __var pidr2 = 0;
[22:51:59.468]              // -> [pidr2 <= 0x00000000]
[22:51:59.468]            __var jep106id = 0;
[22:51:59.468]              // -> [jep106id <= 0x00000000]
[22:51:59.468]            __var ROMTableBase = 0;
[22:51:59.468]              // -> [ROMTableBase <= 0x00000000]
[22:51:59.468]            __ap = 0;      // AHB-AP
[22:51:59.469]              // -> [__ap <= 0x00000000]
[22:51:59.469]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:51:59.469]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.469]              // -> [ROMTableBase <= 0xE00FD000]
[22:51:59.470]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:51:59.470]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.470]              // -> [pidr1 <= 0x00000004]
[22:51:59.470]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:51:59.471]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.471]              // -> [pidr2 <= 0x0000001A]
[22:51:59.471]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:51:59.471]              // -> [jep106id <= 0x00000020]
[22:51:59.471]          </block>
[22:51:59.471]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:51:59.472]            // if-block "jep106id != 0x20"
[22:51:59.472]              // =>  FALSE
[22:51:59.472]            // skip if-block "jep106id != 0x20"
[22:51:59.472]          </control>
[22:51:59.472]        </sequence>
[22:51:59.472]    </block>
[22:51:59.472]  </sequence>
[22:51:59.473]  
[22:51:59.487]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:51:59.487]  
[22:51:59.487]  <debugvars>
[22:51:59.487]    // Pre-defined
[22:51:59.487]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:51:59.487]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:51:59.488]    __dp=0x00000000
[22:51:59.488]    __ap=0x00000000
[22:51:59.488]    __traceout=0x00000000      (Trace Disabled)
[22:51:59.488]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:51:59.488]    __FlashAddr=0x00000000
[22:51:59.488]    __FlashLen=0x00000000
[22:51:59.488]    __FlashArg=0x00000000
[22:51:59.489]    __FlashOp=0x00000000
[22:51:59.489]    __Result=0x00000000
[22:51:59.489]    
[22:51:59.489]    // User-defined
[22:51:59.489]    DbgMCU_CR=0x00000007
[22:51:59.489]    DbgMCU_APB1_Fz=0x00000000
[22:51:59.489]    DbgMCU_APB2_Fz=0x00000000
[22:51:59.489]    TraceClk_Pin=0x00040002
[22:51:59.489]    TraceD0_Pin=0x00040003
[22:51:59.489]    TraceD1_Pin=0x00040004
[22:51:59.490]    TraceD2_Pin=0x00040005
[22:51:59.490]    TraceD3_Pin=0x00040006
[22:51:59.490]  </debugvars>
[22:51:59.490]  
[22:51:59.490]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:51:59.490]    <block atomic="false" info="">
[22:51:59.490]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:51:59.491]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.491]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:51:59.492]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.492]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:51:59.492]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.492]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:51:59.493]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:51:59.493]    </block>
[22:51:59.493]  </sequence>
[22:51:59.493]  
[22:54:29.360]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:54:29.360]  
[22:54:29.360]  <debugvars>
[22:54:29.360]    // Pre-defined
[22:54:29.360]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:29.360]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:54:29.360]    __dp=0x00000000
[22:54:29.360]    __ap=0x00000000
[22:54:29.360]    __traceout=0x00000000      (Trace Disabled)
[22:54:29.360]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:29.361]    __FlashAddr=0x00000000
[22:54:29.361]    __FlashLen=0x00000000
[22:54:29.361]    __FlashArg=0x00000000
[22:54:29.361]    __FlashOp=0x00000000
[22:54:29.361]    __Result=0x00000000
[22:54:29.361]    
[22:54:29.361]    // User-defined
[22:54:29.361]    DbgMCU_CR=0x00000007
[22:54:29.362]    DbgMCU_APB1_Fz=0x00000000
[22:54:29.362]    DbgMCU_APB2_Fz=0x00000000
[22:54:29.362]    TraceClk_Pin=0x00040002
[22:54:29.362]    TraceD0_Pin=0x00040003
[22:54:29.362]    TraceD1_Pin=0x00040004
[22:54:29.362]    TraceD2_Pin=0x00040005
[22:54:29.362]    TraceD3_Pin=0x00040006
[22:54:29.362]  </debugvars>
[22:54:29.363]  
[22:54:29.363]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:54:29.363]    <block atomic="false" info="">
[22:54:29.363]      Sequence("CheckID");
[22:54:29.363]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:54:29.363]          <block atomic="false" info="">
[22:54:29.363]            __var pidr1 = 0;
[22:54:29.364]              // -> [pidr1 <= 0x00000000]
[22:54:29.364]            __var pidr2 = 0;
[22:54:29.364]              // -> [pidr2 <= 0x00000000]
[22:54:29.364]            __var jep106id = 0;
[22:54:29.364]              // -> [jep106id <= 0x00000000]
[22:54:29.364]            __var ROMTableBase = 0;
[22:54:29.364]              // -> [ROMTableBase <= 0x00000000]
[22:54:29.364]            __ap = 0;      // AHB-AP
[22:54:29.365]              // -> [__ap <= 0x00000000]
[22:54:29.365]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:54:29.365]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.365]              // -> [ROMTableBase <= 0xE00FD000]
[22:54:29.365]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:54:29.366]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.366]              // -> [pidr1 <= 0x00000004]
[22:54:29.366]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:54:29.367]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.367]              // -> [pidr2 <= 0x0000001A]
[22:54:29.367]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:54:29.367]              // -> [jep106id <= 0x00000020]
[22:54:29.367]          </block>
[22:54:29.367]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:54:29.368]            // if-block "jep106id != 0x20"
[22:54:29.368]              // =>  FALSE
[22:54:29.368]            // skip if-block "jep106id != 0x20"
[22:54:29.368]          </control>
[22:54:29.368]        </sequence>
[22:54:29.368]    </block>
[22:54:29.368]  </sequence>
[22:54:29.368]  
[22:54:29.383]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:54:29.383]  
[22:54:29.384]  <debugvars>
[22:54:29.384]    // Pre-defined
[22:54:29.384]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:29.384]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:54:29.384]    __dp=0x00000000
[22:54:29.384]    __ap=0x00000000
[22:54:29.384]    __traceout=0x00000000      (Trace Disabled)
[22:54:29.384]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:29.385]    __FlashAddr=0x00000000
[22:54:29.385]    __FlashLen=0x00000000
[22:54:29.385]    __FlashArg=0x00000000
[22:54:29.385]    __FlashOp=0x00000000
[22:54:29.385]    __Result=0x00000000
[22:54:29.385]    
[22:54:29.385]    // User-defined
[22:54:29.385]    DbgMCU_CR=0x00000007
[22:54:29.386]    DbgMCU_APB1_Fz=0x00000000
[22:54:29.386]    DbgMCU_APB2_Fz=0x00000000
[22:54:29.386]    TraceClk_Pin=0x00040002
[22:54:29.386]    TraceD0_Pin=0x00040003
[22:54:29.386]    TraceD1_Pin=0x00040004
[22:54:29.386]    TraceD2_Pin=0x00040005
[22:54:29.386]    TraceD3_Pin=0x00040006
[22:54:29.387]  </debugvars>
[22:54:29.387]  
[22:54:29.387]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:54:29.387]    <block atomic="false" info="">
[22:54:29.387]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:54:29.388]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.388]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:54:29.388]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.389]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:54:29.389]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.389]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:54:29.390]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:29.390]    </block>
[22:54:29.390]  </sequence>
[22:54:29.390]  
[22:55:00.504]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:55:00.504]  
[22:55:00.505]  <debugvars>
[22:55:00.505]    // Pre-defined
[22:55:00.505]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:55:00.506]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:55:00.506]    __dp=0x00000000
[22:55:00.506]    __ap=0x00000000
[22:55:00.506]    __traceout=0x00000000      (Trace Disabled)
[22:55:00.506]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:55:00.506]    __FlashAddr=0x00000000
[22:55:00.507]    __FlashLen=0x00000000
[22:55:00.507]    __FlashArg=0x00000000
[22:55:00.507]    __FlashOp=0x00000000
[22:55:00.507]    __Result=0x00000000
[22:55:00.507]    
[22:55:00.507]    // User-defined
[22:55:00.508]    DbgMCU_CR=0x00000007
[22:55:00.508]    DbgMCU_APB1_Fz=0x00000000
[22:55:00.508]    DbgMCU_APB2_Fz=0x00000000
[22:55:00.508]    TraceClk_Pin=0x00040002
[22:55:00.509]    TraceD0_Pin=0x00040003
[22:55:00.509]    TraceD1_Pin=0x00040004
[22:55:00.509]    TraceD2_Pin=0x00040005
[22:55:00.509]    TraceD3_Pin=0x00040006
[22:55:00.509]  </debugvars>
[22:55:00.510]  
[22:55:00.510]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:55:00.510]    <block atomic="false" info="">
[22:55:00.510]      Sequence("CheckID");
[22:55:00.510]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:55:00.510]          <block atomic="false" info="">
[22:55:00.511]            __var pidr1 = 0;
[22:55:00.511]              // -> [pidr1 <= 0x00000000]
[22:55:00.511]            __var pidr2 = 0;
[22:55:00.511]              // -> [pidr2 <= 0x00000000]
[22:55:00.511]            __var jep106id = 0;
[22:55:00.511]              // -> [jep106id <= 0x00000000]
[22:55:00.512]            __var ROMTableBase = 0;
[22:55:00.512]              // -> [ROMTableBase <= 0x00000000]
[22:55:00.512]            __ap = 0;      // AHB-AP
[22:55:00.512]              // -> [__ap <= 0x00000000]
[22:55:00.512]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:55:00.512]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.513]              // -> [ROMTableBase <= 0xE00FD000]
[22:55:00.513]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:55:00.513]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.514]              // -> [pidr1 <= 0x00000004]
[22:55:00.514]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:55:00.514]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.514]              // -> [pidr2 <= 0x0000001A]
[22:55:00.514]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:55:00.514]              // -> [jep106id <= 0x00000020]
[22:55:00.515]          </block>
[22:55:00.515]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:55:00.515]            // if-block "jep106id != 0x20"
[22:55:00.515]              // =>  FALSE
[22:55:00.515]            // skip if-block "jep106id != 0x20"
[22:55:00.515]          </control>
[22:55:00.515]        </sequence>
[22:55:00.516]    </block>
[22:55:00.516]  </sequence>
[22:55:00.516]  
[22:55:00.531]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:55:00.531]  
[22:55:00.531]  <debugvars>
[22:55:00.531]    // Pre-defined
[22:55:00.532]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:55:00.532]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:55:00.532]    __dp=0x00000000
[22:55:00.532]    __ap=0x00000000
[22:55:00.532]    __traceout=0x00000000      (Trace Disabled)
[22:55:00.532]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:55:00.533]    __FlashAddr=0x00000000
[22:55:00.533]    __FlashLen=0x00000000
[22:55:00.533]    __FlashArg=0x00000000
[22:55:00.533]    __FlashOp=0x00000000
[22:55:00.533]    __Result=0x00000000
[22:55:00.533]    
[22:55:00.533]    // User-defined
[22:55:00.533]    DbgMCU_CR=0x00000007
[22:55:00.533]    DbgMCU_APB1_Fz=0x00000000
[22:55:00.534]    DbgMCU_APB2_Fz=0x00000000
[22:55:00.534]    TraceClk_Pin=0x00040002
[22:55:00.534]    TraceD0_Pin=0x00040003
[22:55:00.534]    TraceD1_Pin=0x00040004
[22:55:00.534]    TraceD2_Pin=0x00040005
[22:55:00.534]    TraceD3_Pin=0x00040006
[22:55:00.534]  </debugvars>
[22:55:00.534]  
[22:55:00.534]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:55:00.535]    <block atomic="false" info="">
[22:55:00.535]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:55:00.535]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.535]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:55:00.536]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.536]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:55:00.536]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.537]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:55:00.537]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:55:00.537]    </block>
[22:55:00.537]  </sequence>
[22:55:00.537]  
[23:03:18.952]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:03:18.952]  
[23:03:18.952]  <debugvars>
[23:03:18.952]    // Pre-defined
[23:03:18.952]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:03:18.952]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:03:18.952]    __dp=0x00000000
[23:03:18.952]    __ap=0x00000000
[23:03:18.953]    __traceout=0x00000000      (Trace Disabled)
[23:03:18.953]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:03:18.953]    __FlashAddr=0x00000000
[23:03:18.953]    __FlashLen=0x00000000
[23:03:18.953]    __FlashArg=0x00000000
[23:03:18.953]    __FlashOp=0x00000000
[23:03:18.953]    __Result=0x00000000
[23:03:18.954]    
[23:03:18.954]    // User-defined
[23:03:18.954]    DbgMCU_CR=0x00000007
[23:03:18.954]    DbgMCU_APB1_Fz=0x00000000
[23:03:18.954]    DbgMCU_APB2_Fz=0x00000000
[23:03:18.954]    TraceClk_Pin=0x00040002
[23:03:18.954]    TraceD0_Pin=0x00040003
[23:03:18.955]    TraceD1_Pin=0x00040004
[23:03:18.955]    TraceD2_Pin=0x00040005
[23:03:18.955]    TraceD3_Pin=0x00040006
[23:03:18.955]  </debugvars>
[23:03:18.955]  
[23:03:18.955]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:03:18.955]    <block atomic="false" info="">
[23:03:18.955]      Sequence("CheckID");
[23:03:18.955]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:03:18.956]          <block atomic="false" info="">
[23:03:18.956]            __var pidr1 = 0;
[23:03:18.956]              // -> [pidr1 <= 0x00000000]
[23:03:18.956]            __var pidr2 = 0;
[23:03:18.956]              // -> [pidr2 <= 0x00000000]
[23:03:18.956]            __var jep106id = 0;
[23:03:18.956]              // -> [jep106id <= 0x00000000]
[23:03:18.957]            __var ROMTableBase = 0;
[23:03:18.957]              // -> [ROMTableBase <= 0x00000000]
[23:03:18.957]            __ap = 0;      // AHB-AP
[23:03:18.957]              // -> [__ap <= 0x00000000]
[23:03:18.957]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:03:18.957]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.957]              // -> [ROMTableBase <= 0xE00FD000]
[23:03:18.958]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:03:18.958]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.958]              // -> [pidr1 <= 0x00000004]
[23:03:18.959]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:03:18.959]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.959]              // -> [pidr2 <= 0x0000001A]
[23:03:18.959]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:03:18.959]              // -> [jep106id <= 0x00000020]
[23:03:18.959]          </block>
[23:03:18.960]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:03:18.960]            // if-block "jep106id != 0x20"
[23:03:18.960]              // =>  FALSE
[23:03:18.960]            // skip if-block "jep106id != 0x20"
[23:03:18.960]          </control>
[23:03:18.960]        </sequence>
[23:03:18.960]    </block>
[23:03:18.960]  </sequence>
[23:03:18.960]  
[23:03:18.976]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:03:18.976]  
[23:03:18.976]  <debugvars>
[23:03:18.976]    // Pre-defined
[23:03:18.976]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:03:18.976]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:03:18.976]    __dp=0x00000000
[23:03:18.976]    __ap=0x00000000
[23:03:18.977]    __traceout=0x00000000      (Trace Disabled)
[23:03:18.977]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:03:18.977]    __FlashAddr=0x00000000
[23:03:18.977]    __FlashLen=0x00000000
[23:03:18.977]    __FlashArg=0x00000000
[23:03:18.977]    __FlashOp=0x00000000
[23:03:18.977]    __Result=0x00000000
[23:03:18.977]    
[23:03:18.977]    // User-defined
[23:03:18.978]    DbgMCU_CR=0x00000007
[23:03:18.978]    DbgMCU_APB1_Fz=0x00000000
[23:03:18.978]    DbgMCU_APB2_Fz=0x00000000
[23:03:18.978]    TraceClk_Pin=0x00040002
[23:03:18.978]    TraceD0_Pin=0x00040003
[23:03:18.978]    TraceD1_Pin=0x00040004
[23:03:18.978]    TraceD2_Pin=0x00040005
[23:03:18.979]    TraceD3_Pin=0x00040006
[23:03:18.979]  </debugvars>
[23:03:18.979]  
[23:03:18.979]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:03:18.979]    <block atomic="false" info="">
[23:03:18.979]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:03:18.980]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.980]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:03:18.981]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.981]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:03:18.981]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.981]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:03:18.982]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:18.982]    </block>
[23:03:18.982]  </sequence>
[23:03:18.982]  
[23:03:50.070]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:03:50.070]  
[23:03:50.070]  <debugvars>
[23:03:50.070]    // Pre-defined
[23:03:50.070]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:03:50.071]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:03:50.071]    __dp=0x00000000
[23:03:50.071]    __ap=0x00000000
[23:03:50.071]    __traceout=0x00000000      (Trace Disabled)
[23:03:50.071]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:03:50.071]    __FlashAddr=0x00000000
[23:03:50.072]    __FlashLen=0x00000000
[23:03:50.072]    __FlashArg=0x00000000
[23:03:50.072]    __FlashOp=0x00000000
[23:03:50.072]    __Result=0x00000000
[23:03:50.072]    
[23:03:50.072]    // User-defined
[23:03:50.072]    DbgMCU_CR=0x00000007
[23:03:50.073]    DbgMCU_APB1_Fz=0x00000000
[23:03:50.073]    DbgMCU_APB2_Fz=0x00000000
[23:03:50.073]    TraceClk_Pin=0x00040002
[23:03:50.073]    TraceD0_Pin=0x00040003
[23:03:50.073]    TraceD1_Pin=0x00040004
[23:03:50.073]    TraceD2_Pin=0x00040005
[23:03:50.074]    TraceD3_Pin=0x00040006
[23:03:50.074]  </debugvars>
[23:03:50.074]  
[23:03:50.074]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:03:50.074]    <block atomic="false" info="">
[23:03:50.074]      Sequence("CheckID");
[23:03:50.074]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:03:50.075]          <block atomic="false" info="">
[23:03:50.075]            __var pidr1 = 0;
[23:03:50.075]              // -> [pidr1 <= 0x00000000]
[23:03:50.075]            __var pidr2 = 0;
[23:03:50.075]              // -> [pidr2 <= 0x00000000]
[23:03:50.075]            __var jep106id = 0;
[23:03:50.076]              // -> [jep106id <= 0x00000000]
[23:03:50.076]            __var ROMTableBase = 0;
[23:03:50.076]              // -> [ROMTableBase <= 0x00000000]
[23:03:50.076]            __ap = 0;      // AHB-AP
[23:03:50.076]              // -> [__ap <= 0x00000000]
[23:03:50.076]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:03:50.077]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.077]              // -> [ROMTableBase <= 0xE00FD000]
[23:03:50.077]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:03:50.078]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.078]              // -> [pidr1 <= 0x00000004]
[23:03:50.078]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:03:50.078]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.078]              // -> [pidr2 <= 0x0000001A]
[23:03:50.079]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:03:50.079]              // -> [jep106id <= 0x00000020]
[23:03:50.079]          </block>
[23:03:50.079]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:03:50.079]            // if-block "jep106id != 0x20"
[23:03:50.079]              // =>  FALSE
[23:03:50.080]            // skip if-block "jep106id != 0x20"
[23:03:50.080]          </control>
[23:03:50.080]        </sequence>
[23:03:50.080]    </block>
[23:03:50.080]  </sequence>
[23:03:50.080]  
[23:03:50.095]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:03:50.095]  
[23:03:50.095]  <debugvars>
[23:03:50.095]    // Pre-defined
[23:03:50.095]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:03:50.095]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:03:50.096]    __dp=0x00000000
[23:03:50.096]    __ap=0x00000000
[23:03:50.096]    __traceout=0x00000000      (Trace Disabled)
[23:03:50.096]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:03:50.096]    __FlashAddr=0x00000000
[23:03:50.097]    __FlashLen=0x00000000
[23:03:50.097]    __FlashArg=0x00000000
[23:03:50.097]    __FlashOp=0x00000000
[23:03:50.097]    __Result=0x00000000
[23:03:50.097]    
[23:03:50.097]    // User-defined
[23:03:50.098]    DbgMCU_CR=0x00000007
[23:03:50.098]    DbgMCU_APB1_Fz=0x00000000
[23:03:50.098]    DbgMCU_APB2_Fz=0x00000000
[23:03:50.098]    TraceClk_Pin=0x00040002
[23:03:50.098]    TraceD0_Pin=0x00040003
[23:03:50.098]    TraceD1_Pin=0x00040004
[23:03:50.099]    TraceD2_Pin=0x00040005
[23:03:50.099]    TraceD3_Pin=0x00040006
[23:03:50.099]  </debugvars>
[23:03:50.100]  
[23:03:50.100]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:03:50.100]    <block atomic="false" info="">
[23:03:50.100]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:03:50.101]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.101]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:03:50.102]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.102]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:03:50.102]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.102]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:03:50.103]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:50.103]    </block>
[23:03:50.103]  </sequence>
[23:03:50.104]  
[23:09:36.039]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:09:36.039]  
[23:09:36.039]  <debugvars>
[23:09:36.039]    // Pre-defined
[23:09:36.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:09:36.039]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:09:36.040]    __dp=0x00000000
[23:09:36.040]    __ap=0x00000000
[23:09:36.040]    __traceout=0x00000000      (Trace Disabled)
[23:09:36.040]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:09:36.040]    __FlashAddr=0x00000000
[23:09:36.040]    __FlashLen=0x00000000
[23:09:36.041]    __FlashArg=0x00000000
[23:09:36.041]    __FlashOp=0x00000000
[23:09:36.041]    __Result=0x00000000
[23:09:36.041]    
[23:09:36.041]    // User-defined
[23:09:36.041]    DbgMCU_CR=0x00000007
[23:09:36.042]    DbgMCU_APB1_Fz=0x00000000
[23:09:36.042]    DbgMCU_APB2_Fz=0x00000000
[23:09:36.042]    TraceClk_Pin=0x00040002
[23:09:36.042]    TraceD0_Pin=0x00040003
[23:09:36.042]    TraceD1_Pin=0x00040004
[23:09:36.042]    TraceD2_Pin=0x00040005
[23:09:36.043]    TraceD3_Pin=0x00040006
[23:09:36.043]  </debugvars>
[23:09:36.043]  
[23:09:36.043]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:09:36.043]    <block atomic="false" info="">
[23:09:36.044]      Sequence("CheckID");
[23:09:36.044]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:09:36.044]          <block atomic="false" info="">
[23:09:36.044]            __var pidr1 = 0;
[23:09:36.044]              // -> [pidr1 <= 0x00000000]
[23:09:36.044]            __var pidr2 = 0;
[23:09:36.045]              // -> [pidr2 <= 0x00000000]
[23:09:36.045]            __var jep106id = 0;
[23:09:36.045]              // -> [jep106id <= 0x00000000]
[23:09:36.045]            __var ROMTableBase = 0;
[23:09:36.045]              // -> [ROMTableBase <= 0x00000000]
[23:09:36.045]            __ap = 0;      // AHB-AP
[23:09:36.045]              // -> [__ap <= 0x00000000]
[23:09:36.046]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:09:36.046]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.046]              // -> [ROMTableBase <= 0xE00FD000]
[23:09:36.046]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:09:36.047]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.047]              // -> [pidr1 <= 0x00000004]
[23:09:36.047]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:09:36.048]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.048]              // -> [pidr2 <= 0x0000001A]
[23:09:36.048]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:09:36.048]              // -> [jep106id <= 0x00000020]
[23:09:36.048]          </block>
[23:09:36.048]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:09:36.048]            // if-block "jep106id != 0x20"
[23:09:36.049]              // =>  FALSE
[23:09:36.049]            // skip if-block "jep106id != 0x20"
[23:09:36.049]          </control>
[23:09:36.049]        </sequence>
[23:09:36.049]    </block>
[23:09:36.049]  </sequence>
[23:09:36.050]  
[23:09:36.065]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:09:36.065]  
[23:09:36.065]  <debugvars>
[23:09:36.065]    // Pre-defined
[23:09:36.065]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:09:36.065]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:09:36.066]    __dp=0x00000000
[23:09:36.066]    __ap=0x00000000
[23:09:36.066]    __traceout=0x00000000      (Trace Disabled)
[23:09:36.066]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:09:36.066]    __FlashAddr=0x00000000
[23:09:36.067]    __FlashLen=0x00000000
[23:09:36.067]    __FlashArg=0x00000000
[23:09:36.067]    __FlashOp=0x00000000
[23:09:36.067]    __Result=0x00000000
[23:09:36.067]    
[23:09:36.067]    // User-defined
[23:09:36.068]    DbgMCU_CR=0x00000007
[23:09:36.068]    DbgMCU_APB1_Fz=0x00000000
[23:09:36.068]    DbgMCU_APB2_Fz=0x00000000
[23:09:36.068]    TraceClk_Pin=0x00040002
[23:09:36.068]    TraceD0_Pin=0x00040003
[23:09:36.069]    TraceD1_Pin=0x00040004
[23:09:36.069]    TraceD2_Pin=0x00040005
[23:09:36.069]    TraceD3_Pin=0x00040006
[23:09:36.069]  </debugvars>
[23:09:36.069]  
[23:09:36.069]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:09:36.070]    <block atomic="false" info="">
[23:09:36.070]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:09:36.070]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.070]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:09:36.071]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.071]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:09:36.072]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.072]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:09:36.073]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:36.073]    </block>
[23:09:36.073]  </sequence>
[23:09:36.073]  
[23:09:37.482]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:09:37.482]  
[23:09:37.482]  <debugvars>
[23:09:37.482]    // Pre-defined
[23:09:37.482]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:09:37.483]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:09:37.483]    __dp=0x00000000
[23:09:37.483]    __ap=0x00000000
[23:09:37.483]    __traceout=0x00000000      (Trace Disabled)
[23:09:37.483]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:09:37.484]    __FlashAddr=0x00000000
[23:09:37.484]    __FlashLen=0x00000000
[23:09:37.484]    __FlashArg=0x00000000
[23:09:37.484]    __FlashOp=0x00000000
[23:09:37.484]    __Result=0x00000000
[23:09:37.484]    
[23:09:37.484]    // User-defined
[23:09:37.485]    DbgMCU_CR=0x00000007
[23:09:37.485]    DbgMCU_APB1_Fz=0x00000000
[23:09:37.485]    DbgMCU_APB2_Fz=0x00000000
[23:09:37.485]    TraceClk_Pin=0x00040002
[23:09:37.485]    TraceD0_Pin=0x00040003
[23:09:37.486]    TraceD1_Pin=0x00040004
[23:09:37.486]    TraceD2_Pin=0x00040005
[23:09:37.486]    TraceD3_Pin=0x00040006
[23:09:37.486]  </debugvars>
[23:09:37.486]  
[23:09:37.486]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:09:37.487]    <block atomic="false" info="">
[23:09:37.487]      Sequence("CheckID");
[23:09:37.487]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:09:37.487]          <block atomic="false" info="">
[23:09:37.487]            __var pidr1 = 0;
[23:09:37.487]              // -> [pidr1 <= 0x00000000]
[23:09:37.488]            __var pidr2 = 0;
[23:09:37.488]              // -> [pidr2 <= 0x00000000]
[23:09:37.488]            __var jep106id = 0;
[23:09:37.488]              // -> [jep106id <= 0x00000000]
[23:09:37.488]            __var ROMTableBase = 0;
[23:09:37.488]              // -> [ROMTableBase <= 0x00000000]
[23:09:37.488]            __ap = 0;      // AHB-AP
[23:09:37.489]              // -> [__ap <= 0x00000000]
[23:09:37.489]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:09:37.489]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.489]              // -> [ROMTableBase <= 0xE00FD000]
[23:09:37.489]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:09:37.490]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.490]              // -> [pidr1 <= 0x00000004]
[23:09:37.490]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:09:37.491]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.491]              // -> [pidr2 <= 0x0000001A]
[23:09:37.491]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:09:37.491]              // -> [jep106id <= 0x00000020]
[23:09:37.491]          </block>
[23:09:37.492]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:09:37.492]            // if-block "jep106id != 0x20"
[23:09:37.492]              // =>  FALSE
[23:09:37.492]            // skip if-block "jep106id != 0x20"
[23:09:37.492]          </control>
[23:09:37.492]        </sequence>
[23:09:37.492]    </block>
[23:09:37.492]  </sequence>
[23:09:37.493]  
[23:09:37.507]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:09:37.507]  
[23:09:37.508]  <debugvars>
[23:09:37.508]    // Pre-defined
[23:09:37.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:09:37.508]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:09:37.508]    __dp=0x00000000
[23:09:37.509]    __ap=0x00000000
[23:09:37.509]    __traceout=0x00000000      (Trace Disabled)
[23:09:37.509]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:09:37.509]    __FlashAddr=0x00000000
[23:09:37.509]    __FlashLen=0x00000000
[23:09:37.509]    __FlashArg=0x00000000
[23:09:37.510]    __FlashOp=0x00000000
[23:09:37.510]    __Result=0x00000000
[23:09:37.510]    
[23:09:37.510]    // User-defined
[23:09:37.510]    DbgMCU_CR=0x00000007
[23:09:37.510]    DbgMCU_APB1_Fz=0x00000000
[23:09:37.511]    DbgMCU_APB2_Fz=0x00000000
[23:09:37.511]    TraceClk_Pin=0x00040002
[23:09:37.511]    TraceD0_Pin=0x00040003
[23:09:37.511]    TraceD1_Pin=0x00040004
[23:09:37.511]    TraceD2_Pin=0x00040005
[23:09:37.511]    TraceD3_Pin=0x00040006
[23:09:37.512]  </debugvars>
[23:09:37.512]  
[23:09:37.512]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:09:37.512]    <block atomic="false" info="">
[23:09:37.512]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:09:37.513]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.513]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:09:37.514]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.514]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:09:37.515]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.515]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:09:37.515]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:37.515]    </block>
[23:09:37.516]  </sequence>
[23:09:37.516]  
[23:14:45.654]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:14:45.654]  
[23:14:45.654]  <debugvars>
[23:14:45.654]    // Pre-defined
[23:14:45.654]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:14:45.655]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:14:45.655]    __dp=0x00000000
[23:14:45.655]    __ap=0x00000000
[23:14:45.655]    __traceout=0x00000000      (Trace Disabled)
[23:14:45.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:14:45.656]    __FlashAddr=0x00000000
[23:14:45.656]    __FlashLen=0x00000000
[23:14:45.656]    __FlashArg=0x00000000
[23:14:45.656]    __FlashOp=0x00000000
[23:14:45.656]    __Result=0x00000000
[23:14:45.656]    
[23:14:45.656]    // User-defined
[23:14:45.657]    DbgMCU_CR=0x00000007
[23:14:45.657]    DbgMCU_APB1_Fz=0x00000000
[23:14:45.657]    DbgMCU_APB2_Fz=0x00000000
[23:14:45.657]    TraceClk_Pin=0x00040002
[23:14:45.657]    TraceD0_Pin=0x00040003
[23:14:45.657]    TraceD1_Pin=0x00040004
[23:14:45.658]    TraceD2_Pin=0x00040005
[23:14:45.658]    TraceD3_Pin=0x00040006
[23:14:45.658]  </debugvars>
[23:14:45.658]  
[23:14:45.658]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:14:45.658]    <block atomic="false" info="">
[23:14:45.658]      Sequence("CheckID");
[23:14:45.659]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:14:45.659]          <block atomic="false" info="">
[23:14:45.659]            __var pidr1 = 0;
[23:14:45.659]              // -> [pidr1 <= 0x00000000]
[23:14:45.659]            __var pidr2 = 0;
[23:14:45.659]              // -> [pidr2 <= 0x00000000]
[23:14:45.659]            __var jep106id = 0;
[23:14:45.660]              // -> [jep106id <= 0x00000000]
[23:14:45.660]            __var ROMTableBase = 0;
[23:14:45.660]              // -> [ROMTableBase <= 0x00000000]
[23:14:45.660]            __ap = 0;      // AHB-AP
[23:14:45.660]              // -> [__ap <= 0x00000000]
[23:14:45.660]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:14:45.661]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.661]              // -> [ROMTableBase <= 0xE00FD000]
[23:14:45.661]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:14:45.661]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.661]              // -> [pidr1 <= 0x00000004]
[23:14:45.662]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:14:45.662]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.662]              // -> [pidr2 <= 0x0000001A]
[23:14:45.662]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:14:45.662]              // -> [jep106id <= 0x00000020]
[23:14:45.662]          </block>
[23:14:45.663]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:14:45.663]            // if-block "jep106id != 0x20"
[23:14:45.663]              // =>  FALSE
[23:14:45.663]            // skip if-block "jep106id != 0x20"
[23:14:45.663]          </control>
[23:14:45.663]        </sequence>
[23:14:45.663]    </block>
[23:14:45.664]  </sequence>
[23:14:45.664]  
[23:14:45.678]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:14:45.678]  
[23:14:45.679]  <debugvars>
[23:14:45.679]    // Pre-defined
[23:14:45.679]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:14:45.679]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:14:45.679]    __dp=0x00000000
[23:14:45.680]    __ap=0x00000000
[23:14:45.680]    __traceout=0x00000000      (Trace Disabled)
[23:14:45.680]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:14:45.680]    __FlashAddr=0x00000000
[23:14:45.680]    __FlashLen=0x00000000
[23:14:45.680]    __FlashArg=0x00000000
[23:14:45.681]    __FlashOp=0x00000000
[23:14:45.681]    __Result=0x00000000
[23:14:45.681]    
[23:14:45.681]    // User-defined
[23:14:45.681]    DbgMCU_CR=0x00000007
[23:14:45.681]    DbgMCU_APB1_Fz=0x00000000
[23:14:45.682]    DbgMCU_APB2_Fz=0x00000000
[23:14:45.682]    TraceClk_Pin=0x00040002
[23:14:45.682]    TraceD0_Pin=0x00040003
[23:14:45.682]    TraceD1_Pin=0x00040004
[23:14:45.682]    TraceD2_Pin=0x00040005
[23:14:45.682]    TraceD3_Pin=0x00040006
[23:14:45.683]  </debugvars>
[23:14:45.683]  
[23:14:45.683]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:14:45.683]    <block atomic="false" info="">
[23:14:45.683]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:14:45.684]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.684]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:14:45.685]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.685]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:14:45.685]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.685]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:14:45.686]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:45.686]    </block>
[23:14:45.686]  </sequence>
[23:14:45.686]  
[23:14:47.126]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:14:47.126]  
[23:14:47.127]  <debugvars>
[23:14:47.127]    // Pre-defined
[23:14:47.127]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:14:47.127]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:14:47.127]    __dp=0x00000000
[23:14:47.128]    __ap=0x00000000
[23:14:47.128]    __traceout=0x00000000      (Trace Disabled)
[23:14:47.128]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:14:47.128]    __FlashAddr=0x00000000
[23:14:47.128]    __FlashLen=0x00000000
[23:14:47.129]    __FlashArg=0x00000000
[23:14:47.129]    __FlashOp=0x00000000
[23:14:47.129]    __Result=0x00000000
[23:14:47.129]    
[23:14:47.129]    // User-defined
[23:14:47.129]    DbgMCU_CR=0x00000007
[23:14:47.129]    DbgMCU_APB1_Fz=0x00000000
[23:14:47.130]    DbgMCU_APB2_Fz=0x00000000
[23:14:47.130]    TraceClk_Pin=0x00040002
[23:14:47.130]    TraceD0_Pin=0x00040003
[23:14:47.130]    TraceD1_Pin=0x00040004
[23:14:47.130]    TraceD2_Pin=0x00040005
[23:14:47.131]    TraceD3_Pin=0x00040006
[23:14:47.131]  </debugvars>
[23:14:47.131]  
[23:14:47.131]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:14:47.131]    <block atomic="false" info="">
[23:14:47.131]      Sequence("CheckID");
[23:14:47.132]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:14:47.132]          <block atomic="false" info="">
[23:14:47.132]            __var pidr1 = 0;
[23:14:47.132]              // -> [pidr1 <= 0x00000000]
[23:14:47.133]            __var pidr2 = 0;
[23:14:47.133]              // -> [pidr2 <= 0x00000000]
[23:14:47.133]            __var jep106id = 0;
[23:14:47.133]              // -> [jep106id <= 0x00000000]
[23:14:47.133]            __var ROMTableBase = 0;
[23:14:47.133]              // -> [ROMTableBase <= 0x00000000]
[23:14:47.134]            __ap = 0;      // AHB-AP
[23:14:47.134]              // -> [__ap <= 0x00000000]
[23:14:47.134]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:14:47.134]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.134]              // -> [ROMTableBase <= 0xE00FD000]
[23:14:47.135]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:14:47.135]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.135]              // -> [pidr1 <= 0x00000004]
[23:14:47.135]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:14:47.136]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.136]              // -> [pidr2 <= 0x0000001A]
[23:14:47.136]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:14:47.136]              // -> [jep106id <= 0x00000020]
[23:14:47.136]          </block>
[23:14:47.137]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:14:47.137]            // if-block "jep106id != 0x20"
[23:14:47.137]              // =>  FALSE
[23:14:47.137]            // skip if-block "jep106id != 0x20"
[23:14:47.137]          </control>
[23:14:47.137]        </sequence>
[23:14:47.137]    </block>
[23:14:47.138]  </sequence>
[23:14:47.138]  
[23:14:47.152]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:14:47.152]  
[23:14:47.152]  <debugvars>
[23:14:47.153]    // Pre-defined
[23:14:47.153]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:14:47.153]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:14:47.153]    __dp=0x00000000
[23:14:47.153]    __ap=0x00000000
[23:14:47.154]    __traceout=0x00000000      (Trace Disabled)
[23:14:47.154]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:14:47.154]    __FlashAddr=0x00000000
[23:14:47.154]    __FlashLen=0x00000000
[23:14:47.154]    __FlashArg=0x00000000
[23:14:47.154]    __FlashOp=0x00000000
[23:14:47.155]    __Result=0x00000000
[23:14:47.155]    
[23:14:47.155]    // User-defined
[23:14:47.155]    DbgMCU_CR=0x00000007
[23:14:47.155]    DbgMCU_APB1_Fz=0x00000000
[23:14:47.155]    DbgMCU_APB2_Fz=0x00000000
[23:14:47.156]    TraceClk_Pin=0x00040002
[23:14:47.156]    TraceD0_Pin=0x00040003
[23:14:47.156]    TraceD1_Pin=0x00040004
[23:14:47.156]    TraceD2_Pin=0x00040005
[23:14:47.157]    TraceD3_Pin=0x00040006
[23:14:47.157]  </debugvars>
[23:14:47.157]  
[23:14:47.157]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:14:47.157]    <block atomic="false" info="">
[23:14:47.157]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:14:47.158]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.158]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:14:47.159]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.159]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:14:47.160]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.160]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:14:47.160]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:14:47.160]    </block>
[23:14:47.160]  </sequence>
[23:14:47.161]  
[23:15:40.493]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:15:40.493]  
[23:15:40.494]  <debugvars>
[23:15:40.494]    // Pre-defined
[23:15:40.494]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:15:40.494]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:15:40.494]    __dp=0x00000000
[23:15:40.494]    __ap=0x00000000
[23:15:40.495]    __traceout=0x00000000      (Trace Disabled)
[23:15:40.495]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:15:40.495]    __FlashAddr=0x00000000
[23:15:40.495]    __FlashLen=0x00000000
[23:15:40.495]    __FlashArg=0x00000000
[23:15:40.495]    __FlashOp=0x00000000
[23:15:40.496]    __Result=0x00000000
[23:15:40.496]    
[23:15:40.496]    // User-defined
[23:15:40.496]    DbgMCU_CR=0x00000007
[23:15:40.496]    DbgMCU_APB1_Fz=0x00000000
[23:15:40.496]    DbgMCU_APB2_Fz=0x00000000
[23:15:40.496]    TraceClk_Pin=0x00040002
[23:15:40.497]    TraceD0_Pin=0x00040003
[23:15:40.497]    TraceD1_Pin=0x00040004
[23:15:40.497]    TraceD2_Pin=0x00040005
[23:15:40.497]    TraceD3_Pin=0x00040006
[23:15:40.497]  </debugvars>
[23:15:40.497]  
[23:15:40.498]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:15:40.498]    <block atomic="false" info="">
[23:15:40.498]      Sequence("CheckID");
[23:15:40.498]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:15:40.498]          <block atomic="false" info="">
[23:15:40.498]            __var pidr1 = 0;
[23:15:40.499]              // -> [pidr1 <= 0x00000000]
[23:15:40.499]            __var pidr2 = 0;
[23:15:40.499]              // -> [pidr2 <= 0x00000000]
[23:15:40.499]            __var jep106id = 0;
[23:15:40.499]              // -> [jep106id <= 0x00000000]
[23:15:40.499]            __var ROMTableBase = 0;
[23:15:40.500]              // -> [ROMTableBase <= 0x00000000]
[23:15:40.500]            __ap = 0;      // AHB-AP
[23:15:40.500]              // -> [__ap <= 0x00000000]
[23:15:40.500]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:15:40.500]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.500]              // -> [ROMTableBase <= 0xE00FD000]
[23:15:40.501]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:15:40.501]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.501]              // -> [pidr1 <= 0x00000004]
[23:15:40.502]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:15:40.502]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.502]              // -> [pidr2 <= 0x0000001A]
[23:15:40.502]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:15:40.503]              // -> [jep106id <= 0x00000020]
[23:15:40.503]          </block>
[23:15:40.503]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:15:40.503]            // if-block "jep106id != 0x20"
[23:15:40.503]              // =>  FALSE
[23:15:40.503]            // skip if-block "jep106id != 0x20"
[23:15:40.503]          </control>
[23:15:40.504]        </sequence>
[23:15:40.504]    </block>
[23:15:40.504]  </sequence>
[23:15:40.504]  
[23:15:40.519]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:15:40.519]  
[23:15:40.519]  <debugvars>
[23:15:40.519]    // Pre-defined
[23:15:40.520]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:15:40.520]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:15:40.520]    __dp=0x00000000
[23:15:40.520]    __ap=0x00000000
[23:15:40.520]    __traceout=0x00000000      (Trace Disabled)
[23:15:40.520]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:15:40.521]    __FlashAddr=0x00000000
[23:15:40.521]    __FlashLen=0x00000000
[23:15:40.521]    __FlashArg=0x00000000
[23:15:40.521]    __FlashOp=0x00000000
[23:15:40.521]    __Result=0x00000000
[23:15:40.521]    
[23:15:40.521]    // User-defined
[23:15:40.522]    DbgMCU_CR=0x00000007
[23:15:40.522]    DbgMCU_APB1_Fz=0x00000000
[23:15:40.522]    DbgMCU_APB2_Fz=0x00000000
[23:15:40.522]    TraceClk_Pin=0x00040002
[23:15:40.522]    TraceD0_Pin=0x00040003
[23:15:40.522]    TraceD1_Pin=0x00040004
[23:15:40.523]    TraceD2_Pin=0x00040005
[23:15:40.523]    TraceD3_Pin=0x00040006
[23:15:40.523]  </debugvars>
[23:15:40.523]  
[23:15:40.523]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:15:40.523]    <block atomic="false" info="">
[23:15:40.524]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:15:40.524]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.524]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:15:40.525]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.525]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:15:40.525]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.526]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:15:40.526]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:40.526]    </block>
[23:15:40.526]  </sequence>
[23:15:40.527]  
[23:15:41.937]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:15:41.937]  
[23:15:41.938]  <debugvars>
[23:15:41.938]    // Pre-defined
[23:15:41.938]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:15:41.938]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:15:41.938]    __dp=0x00000000
[23:15:41.938]    __ap=0x00000000
[23:15:41.939]    __traceout=0x00000000      (Trace Disabled)
[23:15:41.939]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:15:41.939]    __FlashAddr=0x00000000
[23:15:41.939]    __FlashLen=0x00000000
[23:15:41.939]    __FlashArg=0x00000000
[23:15:41.939]    __FlashOp=0x00000000
[23:15:41.940]    __Result=0x00000000
[23:15:41.940]    
[23:15:41.940]    // User-defined
[23:15:41.940]    DbgMCU_CR=0x00000007
[23:15:41.940]    DbgMCU_APB1_Fz=0x00000000
[23:15:41.940]    DbgMCU_APB2_Fz=0x00000000
[23:15:41.940]    TraceClk_Pin=0x00040002
[23:15:41.941]    TraceD0_Pin=0x00040003
[23:15:41.941]    TraceD1_Pin=0x00040004
[23:15:41.941]    TraceD2_Pin=0x00040005
[23:15:41.941]    TraceD3_Pin=0x00040006
[23:15:41.941]  </debugvars>
[23:15:41.942]  
[23:15:41.942]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:15:41.942]    <block atomic="false" info="">
[23:15:41.942]      Sequence("CheckID");
[23:15:41.942]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:15:41.942]          <block atomic="false" info="">
[23:15:41.942]            __var pidr1 = 0;
[23:15:41.943]              // -> [pidr1 <= 0x00000000]
[23:15:41.943]            __var pidr2 = 0;
[23:15:41.943]              // -> [pidr2 <= 0x00000000]
[23:15:41.943]            __var jep106id = 0;
[23:15:41.943]              // -> [jep106id <= 0x00000000]
[23:15:41.943]            __var ROMTableBase = 0;
[23:15:41.943]              // -> [ROMTableBase <= 0x00000000]
[23:15:41.943]            __ap = 0;      // AHB-AP
[23:15:41.944]              // -> [__ap <= 0x00000000]
[23:15:41.944]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:15:41.944]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.944]              // -> [ROMTableBase <= 0xE00FD000]
[23:15:41.944]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:15:41.945]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.945]              // -> [pidr1 <= 0x00000004]
[23:15:41.945]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:15:41.946]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.946]              // -> [pidr2 <= 0x0000001A]
[23:15:41.946]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:15:41.946]              // -> [jep106id <= 0x00000020]
[23:15:41.946]          </block>
[23:15:41.946]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:15:41.946]            // if-block "jep106id != 0x20"
[23:15:41.946]              // =>  FALSE
[23:15:41.947]            // skip if-block "jep106id != 0x20"
[23:15:41.947]          </control>
[23:15:41.947]        </sequence>
[23:15:41.947]    </block>
[23:15:41.947]  </sequence>
[23:15:41.947]  
[23:15:41.962]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:15:41.962]  
[23:15:41.962]  <debugvars>
[23:15:41.962]    // Pre-defined
[23:15:41.962]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:15:41.962]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:15:41.963]    __dp=0x00000000
[23:15:41.963]    __ap=0x00000000
[23:15:41.963]    __traceout=0x00000000      (Trace Disabled)
[23:15:41.963]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:15:41.963]    __FlashAddr=0x00000000
[23:15:41.964]    __FlashLen=0x00000000
[23:15:41.964]    __FlashArg=0x00000000
[23:15:41.964]    __FlashOp=0x00000000
[23:15:41.964]    __Result=0x00000000
[23:15:41.964]    
[23:15:41.964]    // User-defined
[23:15:41.964]    DbgMCU_CR=0x00000007
[23:15:41.965]    DbgMCU_APB1_Fz=0x00000000
[23:15:41.965]    DbgMCU_APB2_Fz=0x00000000
[23:15:41.965]    TraceClk_Pin=0x00040002
[23:15:41.965]    TraceD0_Pin=0x00040003
[23:15:41.965]    TraceD1_Pin=0x00040004
[23:15:41.965]    TraceD2_Pin=0x00040005
[23:15:41.966]    TraceD3_Pin=0x00040006
[23:15:41.966]  </debugvars>
[23:15:41.966]  
[23:15:41.966]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:15:41.966]    <block atomic="false" info="">
[23:15:41.967]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:15:41.967]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.967]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:15:41.968]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.968]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:15:41.969]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.969]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:15:41.969]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:15:41.970]    </block>
[23:15:41.970]  </sequence>
[23:15:41.970]  
[23:16:34.326]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:16:34.326]  
[23:16:34.326]  <debugvars>
[23:16:34.326]    // Pre-defined
[23:16:34.326]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:16:34.326]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:16:34.327]    __dp=0x00000000
[23:16:34.327]    __ap=0x00000000
[23:16:34.327]    __traceout=0x00000000      (Trace Disabled)
[23:16:34.327]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:16:34.327]    __FlashAddr=0x00000000
[23:16:34.327]    __FlashLen=0x00000000
[23:16:34.328]    __FlashArg=0x00000000
[23:16:34.328]    __FlashOp=0x00000000
[23:16:34.328]    __Result=0x00000000
[23:16:34.328]    
[23:16:34.328]    // User-defined
[23:16:34.328]    DbgMCU_CR=0x00000007
[23:16:34.328]    DbgMCU_APB1_Fz=0x00000000
[23:16:34.329]    DbgMCU_APB2_Fz=0x00000000
[23:16:34.329]    TraceClk_Pin=0x00040002
[23:16:34.329]    TraceD0_Pin=0x00040003
[23:16:34.329]    TraceD1_Pin=0x00040004
[23:16:34.329]    TraceD2_Pin=0x00040005
[23:16:34.329]    TraceD3_Pin=0x00040006
[23:16:34.329]  </debugvars>
[23:16:34.329]  
[23:16:34.330]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:16:34.330]    <block atomic="false" info="">
[23:16:34.330]      Sequence("CheckID");
[23:16:34.330]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:16:34.330]          <block atomic="false" info="">
[23:16:34.330]            __var pidr1 = 0;
[23:16:34.330]              // -> [pidr1 <= 0x00000000]
[23:16:34.330]            __var pidr2 = 0;
[23:16:34.330]              // -> [pidr2 <= 0x00000000]
[23:16:34.331]            __var jep106id = 0;
[23:16:34.331]              // -> [jep106id <= 0x00000000]
[23:16:34.331]            __var ROMTableBase = 0;
[23:16:34.331]              // -> [ROMTableBase <= 0x00000000]
[23:16:34.331]            __ap = 0;      // AHB-AP
[23:16:34.331]              // -> [__ap <= 0x00000000]
[23:16:34.331]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:16:34.332]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.332]              // -> [ROMTableBase <= 0xE00FD000]
[23:16:34.332]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:16:34.332]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.332]              // -> [pidr1 <= 0x00000004]
[23:16:34.333]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:16:34.333]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.333]              // -> [pidr2 <= 0x0000001A]
[23:16:34.333]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:16:34.333]              // -> [jep106id <= 0x00000020]
[23:16:34.333]          </block>
[23:16:34.334]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:16:34.334]            // if-block "jep106id != 0x20"
[23:16:34.334]              // =>  FALSE
[23:16:34.334]            // skip if-block "jep106id != 0x20"
[23:16:34.334]          </control>
[23:16:34.334]        </sequence>
[23:16:34.334]    </block>
[23:16:34.334]  </sequence>
[23:16:34.335]  
[23:16:34.350]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:16:34.350]  
[23:16:34.350]  <debugvars>
[23:16:34.350]    // Pre-defined
[23:16:34.350]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:16:34.350]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:16:34.351]    __dp=0x00000000
[23:16:34.351]    __ap=0x00000000
[23:16:34.351]    __traceout=0x00000000      (Trace Disabled)
[23:16:34.351]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:16:34.351]    __FlashAddr=0x00000000
[23:16:34.351]    __FlashLen=0x00000000
[23:16:34.351]    __FlashArg=0x00000000
[23:16:34.351]    __FlashOp=0x00000000
[23:16:34.352]    __Result=0x00000000
[23:16:34.352]    
[23:16:34.352]    // User-defined
[23:16:34.352]    DbgMCU_CR=0x00000007
[23:16:34.352]    DbgMCU_APB1_Fz=0x00000000
[23:16:34.352]    DbgMCU_APB2_Fz=0x00000000
[23:16:34.352]    TraceClk_Pin=0x00040002
[23:16:34.352]    TraceD0_Pin=0x00040003
[23:16:34.352]    TraceD1_Pin=0x00040004
[23:16:34.352]    TraceD2_Pin=0x00040005
[23:16:34.353]    TraceD3_Pin=0x00040006
[23:16:34.353]  </debugvars>
[23:16:34.353]  
[23:16:34.353]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:16:34.353]    <block atomic="false" info="">
[23:16:34.353]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:16:34.354]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.354]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:16:34.354]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.354]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:16:34.355]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.355]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:16:34.355]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:34.355]    </block>
[23:16:34.356]  </sequence>
[23:16:34.356]  
[23:16:35.793]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:16:35.793]  
[23:16:35.793]  <debugvars>
[23:16:35.793]    // Pre-defined
[23:16:35.794]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:16:35.794]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:16:35.794]    __dp=0x00000000
[23:16:35.794]    __ap=0x00000000
[23:16:35.794]    __traceout=0x00000000      (Trace Disabled)
[23:16:35.794]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:16:35.795]    __FlashAddr=0x00000000
[23:16:35.795]    __FlashLen=0x00000000
[23:16:35.795]    __FlashArg=0x00000000
[23:16:35.795]    __FlashOp=0x00000000
[23:16:35.795]    __Result=0x00000000
[23:16:35.796]    
[23:16:35.796]    // User-defined
[23:16:35.796]    DbgMCU_CR=0x00000007
[23:16:35.796]    DbgMCU_APB1_Fz=0x00000000
[23:16:35.796]    DbgMCU_APB2_Fz=0x00000000
[23:16:35.796]    TraceClk_Pin=0x00040002
[23:16:35.796]    TraceD0_Pin=0x00040003
[23:16:35.797]    TraceD1_Pin=0x00040004
[23:16:35.797]    TraceD2_Pin=0x00040005
[23:16:35.797]    TraceD3_Pin=0x00040006
[23:16:35.797]  </debugvars>
[23:16:35.797]  
[23:16:35.797]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:16:35.798]    <block atomic="false" info="">
[23:16:35.798]      Sequence("CheckID");
[23:16:35.798]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:16:35.798]          <block atomic="false" info="">
[23:16:35.799]            __var pidr1 = 0;
[23:16:35.799]              // -> [pidr1 <= 0x00000000]
[23:16:35.799]            __var pidr2 = 0;
[23:16:35.799]              // -> [pidr2 <= 0x00000000]
[23:16:35.799]            __var jep106id = 0;
[23:16:35.799]              // -> [jep106id <= 0x00000000]
[23:16:35.800]            __var ROMTableBase = 0;
[23:16:35.800]              // -> [ROMTableBase <= 0x00000000]
[23:16:35.800]            __ap = 0;      // AHB-AP
[23:16:35.800]              // -> [__ap <= 0x00000000]
[23:16:35.800]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:16:35.800]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.801]              // -> [ROMTableBase <= 0xE00FD000]
[23:16:35.801]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:16:35.801]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.801]              // -> [pidr1 <= 0x00000004]
[23:16:35.802]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:16:35.802]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.802]              // -> [pidr2 <= 0x0000001A]
[23:16:35.802]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:16:35.802]              // -> [jep106id <= 0x00000020]
[23:16:35.803]          </block>
[23:16:35.803]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:16:35.803]            // if-block "jep106id != 0x20"
[23:16:35.803]              // =>  FALSE
[23:16:35.803]            // skip if-block "jep106id != 0x20"
[23:16:35.803]          </control>
[23:16:35.804]        </sequence>
[23:16:35.804]    </block>
[23:16:35.804]  </sequence>
[23:16:35.804]  
[23:16:35.819]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:16:35.819]  
[23:16:35.820]  <debugvars>
[23:16:35.820]    // Pre-defined
[23:16:35.820]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:16:35.820]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:16:35.820]    __dp=0x00000000
[23:16:35.820]    __ap=0x00000000
[23:16:35.821]    __traceout=0x00000000      (Trace Disabled)
[23:16:35.821]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:16:35.821]    __FlashAddr=0x00000000
[23:16:35.821]    __FlashLen=0x00000000
[23:16:35.821]    __FlashArg=0x00000000
[23:16:35.822]    __FlashOp=0x00000000
[23:16:35.822]    __Result=0x00000000
[23:16:35.822]    
[23:16:35.822]    // User-defined
[23:16:35.822]    DbgMCU_CR=0x00000007
[23:16:35.822]    DbgMCU_APB1_Fz=0x00000000
[23:16:35.822]    DbgMCU_APB2_Fz=0x00000000
[23:16:35.823]    TraceClk_Pin=0x00040002
[23:16:35.823]    TraceD0_Pin=0x00040003
[23:16:35.823]    TraceD1_Pin=0x00040004
[23:16:35.823]    TraceD2_Pin=0x00040005
[23:16:35.823]    TraceD3_Pin=0x00040006
[23:16:35.823]  </debugvars>
[23:16:35.824]  
[23:16:35.824]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:16:35.824]    <block atomic="false" info="">
[23:16:35.824]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:16:35.825]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.825]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:16:35.825]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.826]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:16:35.826]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.826]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:16:35.827]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:16:35.827]    </block>
[23:16:35.827]  </sequence>
[23:16:35.827]  
[23:17:23.671]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:17:23.671]  
[23:17:23.671]  <debugvars>
[23:17:23.671]    // Pre-defined
[23:17:23.671]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:17:23.671]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:17:23.672]    __dp=0x00000000
[23:17:23.672]    __ap=0x00000000
[23:17:23.672]    __traceout=0x00000000      (Trace Disabled)
[23:17:23.672]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:17:23.672]    __FlashAddr=0x00000000
[23:17:23.672]    __FlashLen=0x00000000
[23:17:23.673]    __FlashArg=0x00000000
[23:17:23.673]    __FlashOp=0x00000000
[23:17:23.673]    __Result=0x00000000
[23:17:23.673]    
[23:17:23.673]    // User-defined
[23:17:23.673]    DbgMCU_CR=0x00000007
[23:17:23.674]    DbgMCU_APB1_Fz=0x00000000
[23:17:23.674]    DbgMCU_APB2_Fz=0x00000000
[23:17:23.674]    TraceClk_Pin=0x00040002
[23:17:23.674]    TraceD0_Pin=0x00040003
[23:17:23.674]    TraceD1_Pin=0x00040004
[23:17:23.674]    TraceD2_Pin=0x00040005
[23:17:23.674]    TraceD3_Pin=0x00040006
[23:17:23.675]  </debugvars>
[23:17:23.675]  
[23:17:23.675]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:17:23.675]    <block atomic="false" info="">
[23:17:23.675]      Sequence("CheckID");
[23:17:23.675]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:17:23.676]          <block atomic="false" info="">
[23:17:23.676]            __var pidr1 = 0;
[23:17:23.676]              // -> [pidr1 <= 0x00000000]
[23:17:23.676]            __var pidr2 = 0;
[23:17:23.676]              // -> [pidr2 <= 0x00000000]
[23:17:23.676]            __var jep106id = 0;
[23:17:23.676]              // -> [jep106id <= 0x00000000]
[23:17:23.677]            __var ROMTableBase = 0;
[23:17:23.677]              // -> [ROMTableBase <= 0x00000000]
[23:17:23.677]            __ap = 0;      // AHB-AP
[23:17:23.677]              // -> [__ap <= 0x00000000]
[23:17:23.677]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:17:23.678]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.678]              // -> [ROMTableBase <= 0xE00FD000]
[23:17:23.678]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:17:23.678]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.679]              // -> [pidr1 <= 0x00000004]
[23:17:23.679]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:17:23.679]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.679]              // -> [pidr2 <= 0x0000001A]
[23:17:23.679]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:17:23.679]              // -> [jep106id <= 0x00000020]
[23:17:23.680]          </block>
[23:17:23.680]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:17:23.680]            // if-block "jep106id != 0x20"
[23:17:23.680]              // =>  FALSE
[23:17:23.680]            // skip if-block "jep106id != 0x20"
[23:17:23.680]          </control>
[23:17:23.680]        </sequence>
[23:17:23.680]    </block>
[23:17:23.681]  </sequence>
[23:17:23.681]  
[23:17:23.696]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:17:23.696]  
[23:17:23.696]  <debugvars>
[23:17:23.696]    // Pre-defined
[23:17:23.696]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:17:23.696]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:17:23.697]    __dp=0x00000000
[23:17:23.697]    __ap=0x00000000
[23:17:23.697]    __traceout=0x00000000      (Trace Disabled)
[23:17:23.697]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:17:23.697]    __FlashAddr=0x00000000
[23:17:23.697]    __FlashLen=0x00000000
[23:17:23.698]    __FlashArg=0x00000000
[23:17:23.698]    __FlashOp=0x00000000
[23:17:23.698]    __Result=0x00000000
[23:17:23.698]    
[23:17:23.698]    // User-defined
[23:17:23.698]    DbgMCU_CR=0x00000007
[23:17:23.698]    DbgMCU_APB1_Fz=0x00000000
[23:17:23.699]    DbgMCU_APB2_Fz=0x00000000
[23:17:23.699]    TraceClk_Pin=0x00040002
[23:17:23.699]    TraceD0_Pin=0x00040003
[23:17:23.699]    TraceD1_Pin=0x00040004
[23:17:23.699]    TraceD2_Pin=0x00040005
[23:17:23.700]    TraceD3_Pin=0x00040006
[23:17:23.700]  </debugvars>
[23:17:23.700]  
[23:17:23.700]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:17:23.700]    <block atomic="false" info="">
[23:17:23.700]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:17:23.701]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.701]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:17:23.702]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.702]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:17:23.703]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.703]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:17:23.703]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:23.703]    </block>
[23:17:23.704]  </sequence>
[23:17:23.704]  
[23:17:25.136]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:17:25.136]  
[23:17:25.136]  <debugvars>
[23:17:25.136]    // Pre-defined
[23:17:25.136]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:17:25.136]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:17:25.136]    __dp=0x00000000
[23:17:25.137]    __ap=0x00000000
[23:17:25.137]    __traceout=0x00000000      (Trace Disabled)
[23:17:25.137]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:17:25.137]    __FlashAddr=0x00000000
[23:17:25.137]    __FlashLen=0x00000000
[23:17:25.137]    __FlashArg=0x00000000
[23:17:25.138]    __FlashOp=0x00000000
[23:17:25.138]    __Result=0x00000000
[23:17:25.138]    
[23:17:25.138]    // User-defined
[23:17:25.138]    DbgMCU_CR=0x00000007
[23:17:25.138]    DbgMCU_APB1_Fz=0x00000000
[23:17:25.138]    DbgMCU_APB2_Fz=0x00000000
[23:17:25.139]    TraceClk_Pin=0x00040002
[23:17:25.139]    TraceD0_Pin=0x00040003
[23:17:25.139]    TraceD1_Pin=0x00040004
[23:17:25.139]    TraceD2_Pin=0x00040005
[23:17:25.139]    TraceD3_Pin=0x00040006
[23:17:25.139]  </debugvars>
[23:17:25.140]  
[23:17:25.140]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:17:25.140]    <block atomic="false" info="">
[23:17:25.140]      Sequence("CheckID");
[23:17:25.140]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:17:25.141]          <block atomic="false" info="">
[23:17:25.141]            __var pidr1 = 0;
[23:17:25.141]              // -> [pidr1 <= 0x00000000]
[23:17:25.141]            __var pidr2 = 0;
[23:17:25.141]              // -> [pidr2 <= 0x00000000]
[23:17:25.141]            __var jep106id = 0;
[23:17:25.142]              // -> [jep106id <= 0x00000000]
[23:17:25.142]            __var ROMTableBase = 0;
[23:17:25.142]              // -> [ROMTableBase <= 0x00000000]
[23:17:25.142]            __ap = 0;      // AHB-AP
[23:17:25.142]              // -> [__ap <= 0x00000000]
[23:17:25.142]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:17:25.143]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.143]              // -> [ROMTableBase <= 0xE00FD000]
[23:17:25.143]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:17:25.143]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.143]              // -> [pidr1 <= 0x00000004]
[23:17:25.144]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:17:25.144]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.144]              // -> [pidr2 <= 0x0000001A]
[23:17:25.144]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:17:25.144]              // -> [jep106id <= 0x00000020]
[23:17:25.145]          </block>
[23:17:25.145]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:17:25.145]            // if-block "jep106id != 0x20"
[23:17:25.145]              // =>  FALSE
[23:17:25.145]            // skip if-block "jep106id != 0x20"
[23:17:25.145]          </control>
[23:17:25.146]        </sequence>
[23:17:25.146]    </block>
[23:17:25.146]  </sequence>
[23:17:25.146]  
[23:17:25.161]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:17:25.161]  
[23:17:25.161]  <debugvars>
[23:17:25.161]    // Pre-defined
[23:17:25.161]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:17:25.161]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:17:25.162]    __dp=0x00000000
[23:17:25.162]    __ap=0x00000000
[23:17:25.162]    __traceout=0x00000000      (Trace Disabled)
[23:17:25.162]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:17:25.162]    __FlashAddr=0x00000000
[23:17:25.162]    __FlashLen=0x00000000
[23:17:25.163]    __FlashArg=0x00000000
[23:17:25.163]    __FlashOp=0x00000000
[23:17:25.163]    __Result=0x00000000
[23:17:25.163]    
[23:17:25.163]    // User-defined
[23:17:25.163]    DbgMCU_CR=0x00000007
[23:17:25.163]    DbgMCU_APB1_Fz=0x00000000
[23:17:25.164]    DbgMCU_APB2_Fz=0x00000000
[23:17:25.164]    TraceClk_Pin=0x00040002
[23:17:25.164]    TraceD0_Pin=0x00040003
[23:17:25.164]    TraceD1_Pin=0x00040004
[23:17:25.164]    TraceD2_Pin=0x00040005
[23:17:25.164]    TraceD3_Pin=0x00040006
[23:17:25.165]  </debugvars>
[23:17:25.165]  
[23:17:25.165]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:17:25.165]    <block atomic="false" info="">
[23:17:25.165]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:17:25.166]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.166]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:17:25.167]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.167]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:17:25.167]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.167]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:17:25.168]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:25.168]    </block>
[23:17:25.168]  </sequence>
[23:17:25.168]  
[23:23:41.189]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:23:41.189]  
[23:23:41.189]  <debugvars>
[23:23:41.189]    // Pre-defined
[23:23:41.189]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:23:41.189]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:23:41.190]    __dp=0x00000000
[23:23:41.190]    __ap=0x00000000
[23:23:41.190]    __traceout=0x00000000      (Trace Disabled)
[23:23:41.190]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:23:41.190]    __FlashAddr=0x00000000
[23:23:41.190]    __FlashLen=0x00000000
[23:23:41.191]    __FlashArg=0x00000000
[23:23:41.191]    __FlashOp=0x00000000
[23:23:41.191]    __Result=0x00000000
[23:23:41.191]    
[23:23:41.191]    // User-defined
[23:23:41.191]    DbgMCU_CR=0x00000007
[23:23:41.191]    DbgMCU_APB1_Fz=0x00000000
[23:23:41.192]    DbgMCU_APB2_Fz=0x00000000
[23:23:41.192]    TraceClk_Pin=0x00040002
[23:23:41.192]    TraceD0_Pin=0x00040003
[23:23:41.192]    TraceD1_Pin=0x00040004
[23:23:41.192]    TraceD2_Pin=0x00040005
[23:23:41.192]    TraceD3_Pin=0x00040006
[23:23:41.192]  </debugvars>
[23:23:41.193]  
[23:23:41.193]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:23:41.193]    <block atomic="false" info="">
[23:23:41.193]      Sequence("CheckID");
[23:23:41.193]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:23:41.193]          <block atomic="false" info="">
[23:23:41.193]            __var pidr1 = 0;
[23:23:41.194]              // -> [pidr1 <= 0x00000000]
[23:23:41.194]            __var pidr2 = 0;
[23:23:41.194]              // -> [pidr2 <= 0x00000000]
[23:23:41.194]            __var jep106id = 0;
[23:23:41.194]              // -> [jep106id <= 0x00000000]
[23:23:41.194]            __var ROMTableBase = 0;
[23:23:41.194]              // -> [ROMTableBase <= 0x00000000]
[23:23:41.194]            __ap = 0;      // AHB-AP
[23:23:41.195]              // -> [__ap <= 0x00000000]
[23:23:41.195]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:23:41.195]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.195]              // -> [ROMTableBase <= 0xE00FD000]
[23:23:41.195]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:23:41.196]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.196]              // -> [pidr1 <= 0x00000004]
[23:23:41.196]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:23:41.196]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.197]              // -> [pidr2 <= 0x0000001A]
[23:23:41.197]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:23:41.197]              // -> [jep106id <= 0x00000020]
[23:23:41.197]          </block>
[23:23:41.197]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:23:41.197]            // if-block "jep106id != 0x20"
[23:23:41.197]              // =>  FALSE
[23:23:41.197]            // skip if-block "jep106id != 0x20"
[23:23:41.198]          </control>
[23:23:41.198]        </sequence>
[23:23:41.198]    </block>
[23:23:41.198]  </sequence>
[23:23:41.198]  
[23:23:41.213]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:23:41.213]  
[23:23:41.214]  <debugvars>
[23:23:41.214]    // Pre-defined
[23:23:41.214]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:23:41.214]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:23:41.214]    __dp=0x00000000
[23:23:41.215]    __ap=0x00000000
[23:23:41.215]    __traceout=0x00000000      (Trace Disabled)
[23:23:41.215]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:23:41.215]    __FlashAddr=0x00000000
[23:23:41.215]    __FlashLen=0x00000000
[23:23:41.215]    __FlashArg=0x00000000
[23:23:41.216]    __FlashOp=0x00000000
[23:23:41.216]    __Result=0x00000000
[23:23:41.216]    
[23:23:41.216]    // User-defined
[23:23:41.216]    DbgMCU_CR=0x00000007
[23:23:41.216]    DbgMCU_APB1_Fz=0x00000000
[23:23:41.216]    DbgMCU_APB2_Fz=0x00000000
[23:23:41.217]    TraceClk_Pin=0x00040002
[23:23:41.217]    TraceD0_Pin=0x00040003
[23:23:41.217]    TraceD1_Pin=0x00040004
[23:23:41.217]    TraceD2_Pin=0x00040005
[23:23:41.217]    TraceD3_Pin=0x00040006
[23:23:41.218]  </debugvars>
[23:23:41.218]  
[23:23:41.218]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:23:41.218]    <block atomic="false" info="">
[23:23:41.218]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:23:41.219]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.219]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:23:41.219]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.220]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:23:41.220]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.220]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:23:41.221]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:41.221]    </block>
[23:23:41.221]  </sequence>
[23:23:41.221]  
[23:23:42.681]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:23:42.681]  
[23:23:42.681]  <debugvars>
[23:23:42.681]    // Pre-defined
[23:23:42.681]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:23:42.681]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:23:42.681]    __dp=0x00000000
[23:23:42.682]    __ap=0x00000000
[23:23:42.682]    __traceout=0x00000000      (Trace Disabled)
[23:23:42.682]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:23:42.682]    __FlashAddr=0x00000000
[23:23:42.682]    __FlashLen=0x00000000
[23:23:42.682]    __FlashArg=0x00000000
[23:23:42.683]    __FlashOp=0x00000000
[23:23:42.683]    __Result=0x00000000
[23:23:42.683]    
[23:23:42.683]    // User-defined
[23:23:42.683]    DbgMCU_CR=0x00000007
[23:23:42.683]    DbgMCU_APB1_Fz=0x00000000
[23:23:42.683]    DbgMCU_APB2_Fz=0x00000000
[23:23:42.683]    TraceClk_Pin=0x00040002
[23:23:42.684]    TraceD0_Pin=0x00040003
[23:23:42.684]    TraceD1_Pin=0x00040004
[23:23:42.684]    TraceD2_Pin=0x00040005
[23:23:42.684]    TraceD3_Pin=0x00040006
[23:23:42.684]  </debugvars>
[23:23:42.684]  
[23:23:42.684]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:23:42.685]    <block atomic="false" info="">
[23:23:42.685]      Sequence("CheckID");
[23:23:42.685]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:23:42.685]          <block atomic="false" info="">
[23:23:42.685]            __var pidr1 = 0;
[23:23:42.685]              // -> [pidr1 <= 0x00000000]
[23:23:42.685]            __var pidr2 = 0;
[23:23:42.686]              // -> [pidr2 <= 0x00000000]
[23:23:42.686]            __var jep106id = 0;
[23:23:42.686]              // -> [jep106id <= 0x00000000]
[23:23:42.686]            __var ROMTableBase = 0;
[23:23:42.686]              // -> [ROMTableBase <= 0x00000000]
[23:23:42.686]            __ap = 0;      // AHB-AP
[23:23:42.686]              // -> [__ap <= 0x00000000]
[23:23:42.686]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:23:42.687]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.687]              // -> [ROMTableBase <= 0xE00FD000]
[23:23:42.687]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:23:42.687]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.688]              // -> [pidr1 <= 0x00000004]
[23:23:42.688]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:23:42.688]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.688]              // -> [pidr2 <= 0x0000001A]
[23:23:42.688]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:23:42.689]              // -> [jep106id <= 0x00000020]
[23:23:42.689]          </block>
[23:23:42.689]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:23:42.689]            // if-block "jep106id != 0x20"
[23:23:42.689]              // =>  FALSE
[23:23:42.689]            // skip if-block "jep106id != 0x20"
[23:23:42.689]          </control>
[23:23:42.689]        </sequence>
[23:23:42.690]    </block>
[23:23:42.690]  </sequence>
[23:23:42.690]  
[23:23:42.705]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:23:42.705]  
[23:23:42.705]  <debugvars>
[23:23:42.705]    // Pre-defined
[23:23:42.705]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:23:42.705]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:23:42.706]    __dp=0x00000000
[23:23:42.706]    __ap=0x00000000
[23:23:42.706]    __traceout=0x00000000      (Trace Disabled)
[23:23:42.706]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:23:42.706]    __FlashAddr=0x00000000
[23:23:42.706]    __FlashLen=0x00000000
[23:23:42.707]    __FlashArg=0x00000000
[23:23:42.707]    __FlashOp=0x00000000
[23:23:42.707]    __Result=0x00000000
[23:23:42.707]    
[23:23:42.707]    // User-defined
[23:23:42.707]    DbgMCU_CR=0x00000007
[23:23:42.707]    DbgMCU_APB1_Fz=0x00000000
[23:23:42.707]    DbgMCU_APB2_Fz=0x00000000
[23:23:42.708]    TraceClk_Pin=0x00040002
[23:23:42.708]    TraceD0_Pin=0x00040003
[23:23:42.708]    TraceD1_Pin=0x00040004
[23:23:42.708]    TraceD2_Pin=0x00040005
[23:23:42.708]    TraceD3_Pin=0x00040006
[23:23:42.708]  </debugvars>
[23:23:42.709]  
[23:23:42.709]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:23:42.709]    <block atomic="false" info="">
[23:23:42.709]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:23:42.709]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.710]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:23:42.710]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.710]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:23:42.711]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.711]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:23:42.712]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:23:42.712]    </block>
[23:23:42.712]  </sequence>
[23:23:42.712]  
[23:28:10.299]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:28:10.299]  
[23:28:10.299]  <debugvars>
[23:28:10.299]    // Pre-defined
[23:28:10.300]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:10.300]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:28:10.300]    __dp=0x00000000
[23:28:10.300]    __ap=0x00000000
[23:28:10.300]    __traceout=0x00000000      (Trace Disabled)
[23:28:10.300]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:10.301]    __FlashAddr=0x00000000
[23:28:10.301]    __FlashLen=0x00000000
[23:28:10.301]    __FlashArg=0x00000000
[23:28:10.301]    __FlashOp=0x00000000
[23:28:10.301]    __Result=0x00000000
[23:28:10.301]    
[23:28:10.301]    // User-defined
[23:28:10.302]    DbgMCU_CR=0x00000007
[23:28:10.302]    DbgMCU_APB1_Fz=0x00000000
[23:28:10.302]    DbgMCU_APB2_Fz=0x00000000
[23:28:10.302]    TraceClk_Pin=0x00040002
[23:28:10.302]    TraceD0_Pin=0x00040003
[23:28:10.303]    TraceD1_Pin=0x00040004
[23:28:10.303]    TraceD2_Pin=0x00040005
[23:28:10.303]    TraceD3_Pin=0x00040006
[23:28:10.303]  </debugvars>
[23:28:10.303]  
[23:28:10.303]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:28:10.304]    <block atomic="false" info="">
[23:28:10.304]      Sequence("CheckID");
[23:28:10.304]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:28:10.304]          <block atomic="false" info="">
[23:28:10.304]            __var pidr1 = 0;
[23:28:10.304]              // -> [pidr1 <= 0x00000000]
[23:28:10.305]            __var pidr2 = 0;
[23:28:10.305]              // -> [pidr2 <= 0x00000000]
[23:28:10.305]            __var jep106id = 0;
[23:28:10.305]              // -> [jep106id <= 0x00000000]
[23:28:10.305]            __var ROMTableBase = 0;
[23:28:10.306]              // -> [ROMTableBase <= 0x00000000]
[23:28:10.306]            __ap = 0;      // AHB-AP
[23:28:10.306]              // -> [__ap <= 0x00000000]
[23:28:10.306]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:28:10.307]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.307]              // -> [ROMTableBase <= 0xE00FD000]
[23:28:10.307]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:28:10.308]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.308]              // -> [pidr1 <= 0x00000004]
[23:28:10.308]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:28:10.309]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.309]              // -> [pidr2 <= 0x0000001A]
[23:28:10.309]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:28:10.309]              // -> [jep106id <= 0x00000020]
[23:28:10.309]          </block>
[23:28:10.309]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:28:10.309]            // if-block "jep106id != 0x20"
[23:28:10.310]              // =>  FALSE
[23:28:10.310]            // skip if-block "jep106id != 0x20"
[23:28:10.310]          </control>
[23:28:10.310]        </sequence>
[23:28:10.310]    </block>
[23:28:10.310]  </sequence>
[23:28:10.310]  
[23:28:10.325]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:28:10.325]  
[23:28:10.325]  <debugvars>
[23:28:10.325]    // Pre-defined
[23:28:10.326]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:10.326]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:28:10.326]    __dp=0x00000000
[23:28:10.326]    __ap=0x00000000
[23:28:10.326]    __traceout=0x00000000      (Trace Disabled)
[23:28:10.327]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:10.327]    __FlashAddr=0x00000000
[23:28:10.327]    __FlashLen=0x00000000
[23:28:10.327]    __FlashArg=0x00000000
[23:28:10.327]    __FlashOp=0x00000000
[23:28:10.327]    __Result=0x00000000
[23:28:10.328]    
[23:28:10.328]    // User-defined
[23:28:10.328]    DbgMCU_CR=0x00000007
[23:28:10.328]    DbgMCU_APB1_Fz=0x00000000
[23:28:10.328]    DbgMCU_APB2_Fz=0x00000000
[23:28:10.328]    TraceClk_Pin=0x00040002
[23:28:10.328]    TraceD0_Pin=0x00040003
[23:28:10.329]    TraceD1_Pin=0x00040004
[23:28:10.329]    TraceD2_Pin=0x00040005
[23:28:10.329]    TraceD3_Pin=0x00040006
[23:28:10.329]  </debugvars>
[23:28:10.329]  
[23:28:10.330]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:28:10.330]    <block atomic="false" info="">
[23:28:10.330]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:28:10.331]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.331]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:28:10.331]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.331]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:28:10.332]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.332]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:28:10.333]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:10.333]    </block>
[23:28:10.333]  </sequence>
[23:28:10.333]  
[23:28:11.707]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:28:11.707]  
[23:28:11.707]  <debugvars>
[23:28:11.707]    // Pre-defined
[23:28:11.708]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:11.708]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:11.708]    __dp=0x00000000
[23:28:11.708]    __ap=0x00000000
[23:28:11.708]    __traceout=0x00000000      (Trace Disabled)
[23:28:11.709]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:11.709]    __FlashAddr=0x00000000
[23:28:11.709]    __FlashLen=0x00000000
[23:28:11.709]    __FlashArg=0x00000000
[23:28:11.709]    __FlashOp=0x00000000
[23:28:11.709]    __Result=0x00000000
[23:28:11.709]    
[23:28:11.709]    // User-defined
[23:28:11.710]    DbgMCU_CR=0x00000007
[23:28:11.710]    DbgMCU_APB1_Fz=0x00000000
[23:28:11.710]    DbgMCU_APB2_Fz=0x00000000
[23:28:11.710]    TraceClk_Pin=0x00040002
[23:28:11.710]    TraceD0_Pin=0x00040003
[23:28:11.710]    TraceD1_Pin=0x00040004
[23:28:11.711]    TraceD2_Pin=0x00040005
[23:28:11.711]    TraceD3_Pin=0x00040006
[23:28:11.711]  </debugvars>
[23:28:11.711]  
[23:28:11.711]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:28:11.712]    <block atomic="false" info="">
[23:28:11.712]      Sequence("CheckID");
[23:28:11.712]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:28:11.712]          <block atomic="false" info="">
[23:28:11.712]            __var pidr1 = 0;
[23:28:11.712]              // -> [pidr1 <= 0x00000000]
[23:28:11.713]            __var pidr2 = 0;
[23:28:11.713]              // -> [pidr2 <= 0x00000000]
[23:28:11.713]            __var jep106id = 0;
[23:28:11.713]              // -> [jep106id <= 0x00000000]
[23:28:11.713]            __var ROMTableBase = 0;
[23:28:11.713]              // -> [ROMTableBase <= 0x00000000]
[23:28:11.713]            __ap = 0;      // AHB-AP
[23:28:11.714]              // -> [__ap <= 0x00000000]
[23:28:11.714]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:28:11.714]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.714]              // -> [ROMTableBase <= 0xE00FD000]
[23:28:11.715]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:28:11.715]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.715]              // -> [pidr1 <= 0x00000004]
[23:28:11.715]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:28:11.716]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.716]              // -> [pidr2 <= 0x0000001A]
[23:28:11.716]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:28:11.716]              // -> [jep106id <= 0x00000020]
[23:28:11.716]          </block>
[23:28:11.717]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:28:11.717]            // if-block "jep106id != 0x20"
[23:28:11.717]              // =>  FALSE
[23:28:11.717]            // skip if-block "jep106id != 0x20"
[23:28:11.717]          </control>
[23:28:11.717]        </sequence>
[23:28:11.718]    </block>
[23:28:11.718]  </sequence>
[23:28:11.718]  
[23:28:11.733]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:28:11.733]  
[23:28:11.733]  <debugvars>
[23:28:11.733]    // Pre-defined
[23:28:11.733]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:11.733]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:11.734]    __dp=0x00000000
[23:28:11.734]    __ap=0x00000000
[23:28:11.734]    __traceout=0x00000000      (Trace Disabled)
[23:28:11.734]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:11.734]    __FlashAddr=0x00000000
[23:28:11.735]    __FlashLen=0x00000000
[23:28:11.735]    __FlashArg=0x00000000
[23:28:11.735]    __FlashOp=0x00000000
[23:28:11.735]    __Result=0x00000000
[23:28:11.735]    
[23:28:11.735]    // User-defined
[23:28:11.736]    DbgMCU_CR=0x00000007
[23:28:11.736]    DbgMCU_APB1_Fz=0x00000000
[23:28:11.736]    DbgMCU_APB2_Fz=0x00000000
[23:28:11.736]    TraceClk_Pin=0x00040002
[23:28:11.736]    TraceD0_Pin=0x00040003
[23:28:11.736]    TraceD1_Pin=0x00040004
[23:28:11.736]    TraceD2_Pin=0x00040005
[23:28:11.737]    TraceD3_Pin=0x00040006
[23:28:11.737]  </debugvars>
[23:28:11.737]  
[23:28:11.737]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:28:11.737]    <block atomic="false" info="">
[23:28:11.737]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:28:11.738]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.738]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:28:11.738]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.739]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:28:11.739]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.739]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:28:11.739]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:11.740]    </block>
[23:28:11.740]  </sequence>
[23:28:11.740]  
[23:32:56.922]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:32:56.922]  
[23:32:56.923]  <debugvars>
[23:32:56.923]    // Pre-defined
[23:32:56.923]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:56.923]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:32:56.923]    __dp=0x00000000
[23:32:56.923]    __ap=0x00000000
[23:32:56.923]    __traceout=0x00000000      (Trace Disabled)
[23:32:56.923]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:56.924]    __FlashAddr=0x00000000
[23:32:56.924]    __FlashLen=0x00000000
[23:32:56.924]    __FlashArg=0x00000000
[23:32:56.924]    __FlashOp=0x00000000
[23:32:56.924]    __Result=0x00000000
[23:32:56.924]    
[23:32:56.924]    // User-defined
[23:32:56.924]    DbgMCU_CR=0x00000007
[23:32:56.925]    DbgMCU_APB1_Fz=0x00000000
[23:32:56.925]    DbgMCU_APB2_Fz=0x00000000
[23:32:56.925]    TraceClk_Pin=0x00040002
[23:32:56.925]    TraceD0_Pin=0x00040003
[23:32:56.925]    TraceD1_Pin=0x00040004
[23:32:56.925]    TraceD2_Pin=0x00040005
[23:32:56.925]    TraceD3_Pin=0x00040006
[23:32:56.925]  </debugvars>
[23:32:56.926]  
[23:32:56.926]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:32:56.926]    <block atomic="false" info="">
[23:32:56.926]      Sequence("CheckID");
[23:32:56.926]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:32:56.926]          <block atomic="false" info="">
[23:32:56.926]            __var pidr1 = 0;
[23:32:56.927]              // -> [pidr1 <= 0x00000000]
[23:32:56.927]            __var pidr2 = 0;
[23:32:56.927]              // -> [pidr2 <= 0x00000000]
[23:32:56.927]            __var jep106id = 0;
[23:32:56.927]              // -> [jep106id <= 0x00000000]
[23:32:56.927]            __var ROMTableBase = 0;
[23:32:56.927]              // -> [ROMTableBase <= 0x00000000]
[23:32:56.927]            __ap = 0;      // AHB-AP
[23:32:56.928]              // -> [__ap <= 0x00000000]
[23:32:56.928]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:32:56.928]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.928]              // -> [ROMTableBase <= 0xE00FD000]
[23:32:56.928]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:32:56.929]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.929]              // -> [pidr1 <= 0x00000004]
[23:32:56.929]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:32:56.930]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.930]              // -> [pidr2 <= 0x0000001A]
[23:32:56.930]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:32:56.930]              // -> [jep106id <= 0x00000020]
[23:32:56.931]          </block>
[23:32:56.931]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:32:56.931]            // if-block "jep106id != 0x20"
[23:32:56.931]              // =>  FALSE
[23:32:56.931]            // skip if-block "jep106id != 0x20"
[23:32:56.931]          </control>
[23:32:56.931]        </sequence>
[23:32:56.931]    </block>
[23:32:56.932]  </sequence>
[23:32:56.932]  
[23:32:56.947]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:32:56.947]  
[23:32:56.947]  <debugvars>
[23:32:56.947]    // Pre-defined
[23:32:56.947]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:56.948]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:32:56.948]    __dp=0x00000000
[23:32:56.948]    __ap=0x00000000
[23:32:56.948]    __traceout=0x00000000      (Trace Disabled)
[23:32:56.948]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:56.948]    __FlashAddr=0x00000000
[23:32:56.948]    __FlashLen=0x00000000
[23:32:56.949]    __FlashArg=0x00000000
[23:32:56.949]    __FlashOp=0x00000000
[23:32:56.949]    __Result=0x00000000
[23:32:56.949]    
[23:32:56.949]    // User-defined
[23:32:56.949]    DbgMCU_CR=0x00000007
[23:32:56.949]    DbgMCU_APB1_Fz=0x00000000
[23:32:56.949]    DbgMCU_APB2_Fz=0x00000000
[23:32:56.949]    TraceClk_Pin=0x00040002
[23:32:56.949]    TraceD0_Pin=0x00040003
[23:32:56.950]    TraceD1_Pin=0x00040004
[23:32:56.950]    TraceD2_Pin=0x00040005
[23:32:56.950]    TraceD3_Pin=0x00040006
[23:32:56.950]  </debugvars>
[23:32:56.950]  
[23:32:56.950]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:32:56.950]    <block atomic="false" info="">
[23:32:56.951]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:32:56.951]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.951]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:32:56.952]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.952]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:32:56.952]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.953]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:32:56.953]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:56.953]    </block>
[23:32:56.953]  </sequence>
[23:32:56.954]  
[23:32:58.328]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:32:58.328]  
[23:32:58.329]  <debugvars>
[23:32:58.329]    // Pre-defined
[23:32:58.329]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:58.329]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:58.329]    __dp=0x00000000
[23:32:58.329]    __ap=0x00000000
[23:32:58.330]    __traceout=0x00000000      (Trace Disabled)
[23:32:58.330]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:58.330]    __FlashAddr=0x00000000
[23:32:58.330]    __FlashLen=0x00000000
[23:32:58.330]    __FlashArg=0x00000000
[23:32:58.330]    __FlashOp=0x00000000
[23:32:58.330]    __Result=0x00000000
[23:32:58.331]    
[23:32:58.331]    // User-defined
[23:32:58.331]    DbgMCU_CR=0x00000007
[23:32:58.331]    DbgMCU_APB1_Fz=0x00000000
[23:32:58.331]    DbgMCU_APB2_Fz=0x00000000
[23:32:58.331]    TraceClk_Pin=0x00040002
[23:32:58.331]    TraceD0_Pin=0x00040003
[23:32:58.331]    TraceD1_Pin=0x00040004
[23:32:58.332]    TraceD2_Pin=0x00040005
[23:32:58.332]    TraceD3_Pin=0x00040006
[23:32:58.332]  </debugvars>
[23:32:58.332]  
[23:32:58.332]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:32:58.332]    <block atomic="false" info="">
[23:32:58.332]      Sequence("CheckID");
[23:32:58.332]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:32:58.332]          <block atomic="false" info="">
[23:32:58.333]            __var pidr1 = 0;
[23:32:58.333]              // -> [pidr1 <= 0x00000000]
[23:32:58.333]            __var pidr2 = 0;
[23:32:58.333]              // -> [pidr2 <= 0x00000000]
[23:32:58.333]            __var jep106id = 0;
[23:32:58.333]              // -> [jep106id <= 0x00000000]
[23:32:58.333]            __var ROMTableBase = 0;
[23:32:58.334]              // -> [ROMTableBase <= 0x00000000]
[23:32:58.334]            __ap = 0;      // AHB-AP
[23:32:58.334]              // -> [__ap <= 0x00000000]
[23:32:58.334]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:32:58.334]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.334]              // -> [ROMTableBase <= 0xE00FD000]
[23:32:58.334]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:32:58.335]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.335]              // -> [pidr1 <= 0x00000004]
[23:32:58.335]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:32:58.336]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.336]              // -> [pidr2 <= 0x0000001A]
[23:32:58.336]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:32:58.336]              // -> [jep106id <= 0x00000020]
[23:32:58.336]          </block>
[23:32:58.336]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:32:58.336]            // if-block "jep106id != 0x20"
[23:32:58.337]              // =>  FALSE
[23:32:58.337]            // skip if-block "jep106id != 0x20"
[23:32:58.337]          </control>
[23:32:58.337]        </sequence>
[23:32:58.337]    </block>
[23:32:58.337]  </sequence>
[23:32:58.337]  
[23:32:58.352]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:32:58.352]  
[23:32:58.352]  <debugvars>
[23:32:58.352]    // Pre-defined
[23:32:58.353]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:58.353]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:58.353]    __dp=0x00000000
[23:32:58.353]    __ap=0x00000000
[23:32:58.353]    __traceout=0x00000000      (Trace Disabled)
[23:32:58.353]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:58.353]    __FlashAddr=0x00000000
[23:32:58.354]    __FlashLen=0x00000000
[23:32:58.354]    __FlashArg=0x00000000
[23:32:58.354]    __FlashOp=0x00000000
[23:32:58.354]    __Result=0x00000000
[23:32:58.354]    
[23:32:58.354]    // User-defined
[23:32:58.355]    DbgMCU_CR=0x00000007
[23:32:58.355]    DbgMCU_APB1_Fz=0x00000000
[23:32:58.355]    DbgMCU_APB2_Fz=0x00000000
[23:32:58.355]    TraceClk_Pin=0x00040002
[23:32:58.355]    TraceD0_Pin=0x00040003
[23:32:58.355]    TraceD1_Pin=0x00040004
[23:32:58.356]    TraceD2_Pin=0x00040005
[23:32:58.356]    TraceD3_Pin=0x00040006
[23:32:58.356]  </debugvars>
[23:32:58.356]  
[23:32:58.356]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:32:58.356]    <block atomic="false" info="">
[23:32:58.357]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:32:58.357]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.357]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:32:58.358]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.358]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:32:58.358]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.359]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:32:58.359]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:58.359]    </block>
[23:32:58.359]  </sequence>
[23:32:58.359]  
[23:44:13.936]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:44:13.936]  
[23:44:13.936]  <debugvars>
[23:44:13.937]    // Pre-defined
[23:44:13.937]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:13.937]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:44:13.937]    __dp=0x00000000
[23:44:13.937]    __ap=0x00000000
[23:44:13.937]    __traceout=0x00000000      (Trace Disabled)
[23:44:13.937]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:13.938]    __FlashAddr=0x00000000
[23:44:13.938]    __FlashLen=0x00000000
[23:44:13.938]    __FlashArg=0x00000000
[23:44:13.938]    __FlashOp=0x00000000
[23:44:13.938]    __Result=0x00000000
[23:44:13.938]    
[23:44:13.938]    // User-defined
[23:44:13.938]    DbgMCU_CR=0x00000007
[23:44:13.938]    DbgMCU_APB1_Fz=0x00000000
[23:44:13.939]    DbgMCU_APB2_Fz=0x00000000
[23:44:13.939]    TraceClk_Pin=0x00040002
[23:44:13.939]    TraceD0_Pin=0x00040003
[23:44:13.939]    TraceD1_Pin=0x00040004
[23:44:13.939]    TraceD2_Pin=0x00040005
[23:44:13.939]    TraceD3_Pin=0x00040006
[23:44:13.939]  </debugvars>
[23:44:13.940]  
[23:44:13.940]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:44:13.940]    <block atomic="false" info="">
[23:44:13.940]      Sequence("CheckID");
[23:44:13.940]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:44:13.940]          <block atomic="false" info="">
[23:44:13.940]            __var pidr1 = 0;
[23:44:13.941]              // -> [pidr1 <= 0x00000000]
[23:44:13.941]            __var pidr2 = 0;
[23:44:13.941]              // -> [pidr2 <= 0x00000000]
[23:44:13.941]            __var jep106id = 0;
[23:44:13.941]              // -> [jep106id <= 0x00000000]
[23:44:13.941]            __var ROMTableBase = 0;
[23:44:13.941]              // -> [ROMTableBase <= 0x00000000]
[23:44:13.941]            __ap = 0;      // AHB-AP
[23:44:13.942]              // -> [__ap <= 0x00000000]
[23:44:13.942]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:44:13.942]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.942]              // -> [ROMTableBase <= 0xE00FD000]
[23:44:13.942]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:44:13.943]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.943]              // -> [pidr1 <= 0x00000004]
[23:44:13.943]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:44:13.943]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.944]              // -> [pidr2 <= 0x0000001A]
[23:44:13.944]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:44:13.944]              // -> [jep106id <= 0x00000020]
[23:44:13.944]          </block>
[23:44:13.944]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:44:13.944]            // if-block "jep106id != 0x20"
[23:44:13.944]              // =>  FALSE
[23:44:13.945]            // skip if-block "jep106id != 0x20"
[23:44:13.945]          </control>
[23:44:13.945]        </sequence>
[23:44:13.945]    </block>
[23:44:13.945]  </sequence>
[23:44:13.945]  
[23:44:13.960]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:44:13.960]  
[23:44:13.960]  <debugvars>
[23:44:13.960]    // Pre-defined
[23:44:13.961]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:13.961]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:44:13.961]    __dp=0x00000000
[23:44:13.961]    __ap=0x00000000
[23:44:13.961]    __traceout=0x00000000      (Trace Disabled)
[23:44:13.961]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:13.961]    __FlashAddr=0x00000000
[23:44:13.962]    __FlashLen=0x00000000
[23:44:13.962]    __FlashArg=0x00000000
[23:44:13.962]    __FlashOp=0x00000000
[23:44:13.962]    __Result=0x00000000
[23:44:13.962]    
[23:44:13.962]    // User-defined
[23:44:13.962]    DbgMCU_CR=0x00000007
[23:44:13.962]    DbgMCU_APB1_Fz=0x00000000
[23:44:13.962]    DbgMCU_APB2_Fz=0x00000000
[23:44:13.963]    TraceClk_Pin=0x00040002
[23:44:13.963]    TraceD0_Pin=0x00040003
[23:44:13.963]    TraceD1_Pin=0x00040004
[23:44:13.963]    TraceD2_Pin=0x00040005
[23:44:13.963]    TraceD3_Pin=0x00040006
[23:44:13.963]  </debugvars>
[23:44:13.963]  
[23:44:13.963]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:44:13.964]    <block atomic="false" info="">
[23:44:13.964]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:44:13.964]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.964]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:44:13.965]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.965]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:44:13.965]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.965]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:44:13.966]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:13.966]    </block>
[23:44:13.966]  </sequence>
[23:44:13.966]  
[23:44:15.330]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:44:15.330]  
[23:44:15.330]  <debugvars>
[23:44:15.331]    // Pre-defined
[23:44:15.331]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:15.331]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:15.331]    __dp=0x00000000
[23:44:15.331]    __ap=0x00000000
[23:44:15.331]    __traceout=0x00000000      (Trace Disabled)
[23:44:15.332]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:15.332]    __FlashAddr=0x00000000
[23:44:15.332]    __FlashLen=0x00000000
[23:44:15.332]    __FlashArg=0x00000000
[23:44:15.332]    __FlashOp=0x00000000
[23:44:15.332]    __Result=0x00000000
[23:44:15.332]    
[23:44:15.332]    // User-defined
[23:44:15.332]    DbgMCU_CR=0x00000007
[23:44:15.333]    DbgMCU_APB1_Fz=0x00000000
[23:44:15.333]    DbgMCU_APB2_Fz=0x00000000
[23:44:15.333]    TraceClk_Pin=0x00040002
[23:44:15.333]    TraceD0_Pin=0x00040003
[23:44:15.333]    TraceD1_Pin=0x00040004
[23:44:15.333]    TraceD2_Pin=0x00040005
[23:44:15.333]    TraceD3_Pin=0x00040006
[23:44:15.334]  </debugvars>
[23:44:15.334]  
[23:44:15.334]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:44:15.334]    <block atomic="false" info="">
[23:44:15.334]      Sequence("CheckID");
[23:44:15.334]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:44:15.334]          <block atomic="false" info="">
[23:44:15.335]            __var pidr1 = 0;
[23:44:15.335]              // -> [pidr1 <= 0x00000000]
[23:44:15.335]            __var pidr2 = 0;
[23:44:15.335]              // -> [pidr2 <= 0x00000000]
[23:44:15.335]            __var jep106id = 0;
[23:44:15.335]              // -> [jep106id <= 0x00000000]
[23:44:15.335]            __var ROMTableBase = 0;
[23:44:15.335]              // -> [ROMTableBase <= 0x00000000]
[23:44:15.336]            __ap = 0;      // AHB-AP
[23:44:15.336]              // -> [__ap <= 0x00000000]
[23:44:15.336]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:44:15.336]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.336]              // -> [ROMTableBase <= 0xE00FD000]
[23:44:15.336]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:44:15.337]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.337]              // -> [pidr1 <= 0x00000004]
[23:44:15.337]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:44:15.338]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.338]              // -> [pidr2 <= 0x0000001A]
[23:44:15.338]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:44:15.338]              // -> [jep106id <= 0x00000020]
[23:44:15.338]          </block>
[23:44:15.338]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:44:15.338]            // if-block "jep106id != 0x20"
[23:44:15.338]              // =>  FALSE
[23:44:15.339]            // skip if-block "jep106id != 0x20"
[23:44:15.339]          </control>
[23:44:15.339]        </sequence>
[23:44:15.339]    </block>
[23:44:15.339]  </sequence>
[23:44:15.339]  
[23:44:15.354]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:44:15.354]  
[23:44:15.355]  <debugvars>
[23:44:15.355]    // Pre-defined
[23:44:15.355]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:15.355]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:15.355]    __dp=0x00000000
[23:44:15.355]    __ap=0x00000000
[23:44:15.356]    __traceout=0x00000000      (Trace Disabled)
[23:44:15.356]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:15.356]    __FlashAddr=0x00000000
[23:44:15.356]    __FlashLen=0x00000000
[23:44:15.356]    __FlashArg=0x00000000
[23:44:15.357]    __FlashOp=0x00000000
[23:44:15.357]    __Result=0x00000000
[23:44:15.357]    
[23:44:15.357]    // User-defined
[23:44:15.357]    DbgMCU_CR=0x00000007
[23:44:15.357]    DbgMCU_APB1_Fz=0x00000000
[23:44:15.357]    DbgMCU_APB2_Fz=0x00000000
[23:44:15.357]    TraceClk_Pin=0x00040002
[23:44:15.357]    TraceD0_Pin=0x00040003
[23:44:15.358]    TraceD1_Pin=0x00040004
[23:44:15.358]    TraceD2_Pin=0x00040005
[23:44:15.358]    TraceD3_Pin=0x00040006
[23:44:15.358]  </debugvars>
[23:44:15.358]  
[23:44:15.358]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:44:15.358]    <block atomic="false" info="">
[23:44:15.359]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:44:15.359]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.359]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:44:15.360]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.360]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:44:15.360]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.360]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:44:15.361]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:15.361]    </block>
[23:44:15.361]  </sequence>
[23:44:15.361]  
[23:45:29.409]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:45:29.409]  
[23:45:29.409]  <debugvars>
[23:45:29.409]    // Pre-defined
[23:45:29.409]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:45:29.409]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:45:29.409]    __dp=0x00000000
[23:45:29.410]    __ap=0x00000000
[23:45:29.410]    __traceout=0x00000000      (Trace Disabled)
[23:45:29.410]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:45:29.410]    __FlashAddr=0x00000000
[23:45:29.410]    __FlashLen=0x00000000
[23:45:29.410]    __FlashArg=0x00000000
[23:45:29.410]    __FlashOp=0x00000000
[23:45:29.410]    __Result=0x00000000
[23:45:29.411]    
[23:45:29.411]    // User-defined
[23:45:29.411]    DbgMCU_CR=0x00000007
[23:45:29.411]    DbgMCU_APB1_Fz=0x00000000
[23:45:29.411]    DbgMCU_APB2_Fz=0x00000000
[23:45:29.411]    TraceClk_Pin=0x00040002
[23:45:29.411]    TraceD0_Pin=0x00040003
[23:45:29.411]    TraceD1_Pin=0x00040004
[23:45:29.411]    TraceD2_Pin=0x00040005
[23:45:29.412]    TraceD3_Pin=0x00040006
[23:45:29.412]  </debugvars>
[23:45:29.412]  
[23:45:29.412]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:45:29.412]    <block atomic="false" info="">
[23:45:29.412]      Sequence("CheckID");
[23:45:29.412]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:45:29.412]          <block atomic="false" info="">
[23:45:29.413]            __var pidr1 = 0;
[23:45:29.413]              // -> [pidr1 <= 0x00000000]
[23:45:29.413]            __var pidr2 = 0;
[23:45:29.413]              // -> [pidr2 <= 0x00000000]
[23:45:29.413]            __var jep106id = 0;
[23:45:29.413]              // -> [jep106id <= 0x00000000]
[23:45:29.413]            __var ROMTableBase = 0;
[23:45:29.414]              // -> [ROMTableBase <= 0x00000000]
[23:45:29.414]            __ap = 0;      // AHB-AP
[23:45:29.414]              // -> [__ap <= 0x00000000]
[23:45:29.414]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:45:29.414]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.414]              // -> [ROMTableBase <= 0xE00FD000]
[23:45:29.414]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:45:29.415]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.415]              // -> [pidr1 <= 0x00000004]
[23:45:29.415]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:45:29.416]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.416]              // -> [pidr2 <= 0x0000001A]
[23:45:29.416]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:45:29.416]              // -> [jep106id <= 0x00000020]
[23:45:29.416]          </block>
[23:45:29.416]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:45:29.416]            // if-block "jep106id != 0x20"
[23:45:29.416]              // =>  FALSE
[23:45:29.417]            // skip if-block "jep106id != 0x20"
[23:45:29.417]          </control>
[23:45:29.417]        </sequence>
[23:45:29.417]    </block>
[23:45:29.417]  </sequence>
[23:45:29.417]  
[23:45:29.432]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:45:29.432]  
[23:45:29.432]  <debugvars>
[23:45:29.432]    // Pre-defined
[23:45:29.432]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:45:29.432]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:45:29.432]    __dp=0x00000000
[23:45:29.433]    __ap=0x00000000
[23:45:29.433]    __traceout=0x00000000      (Trace Disabled)
[23:45:29.433]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:45:29.433]    __FlashAddr=0x00000000
[23:45:29.433]    __FlashLen=0x00000000
[23:45:29.433]    __FlashArg=0x00000000
[23:45:29.433]    __FlashOp=0x00000000
[23:45:29.434]    __Result=0x00000000
[23:45:29.434]    
[23:45:29.434]    // User-defined
[23:45:29.434]    DbgMCU_CR=0x00000007
[23:45:29.434]    DbgMCU_APB1_Fz=0x00000000
[23:45:29.434]    DbgMCU_APB2_Fz=0x00000000
[23:45:29.434]    TraceClk_Pin=0x00040002
[23:45:29.434]    TraceD0_Pin=0x00040003
[23:45:29.434]    TraceD1_Pin=0x00040004
[23:45:29.434]    TraceD2_Pin=0x00040005
[23:45:29.435]    TraceD3_Pin=0x00040006
[23:45:29.435]  </debugvars>
[23:45:29.435]  
[23:45:29.435]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:45:29.435]    <block atomic="false" info="">
[23:45:29.435]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:45:29.436]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.436]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:45:29.437]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.437]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:45:29.437]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.438]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:45:29.438]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:29.438]    </block>
[23:45:29.438]  </sequence>
[23:45:29.438]  
[23:45:30.772]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:45:30.772]  
[23:45:30.773]  <debugvars>
[23:45:30.773]    // Pre-defined
[23:45:30.773]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:45:30.773]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:45:30.773]    __dp=0x00000000
[23:45:30.774]    __ap=0x00000000
[23:45:30.774]    __traceout=0x00000000      (Trace Disabled)
[23:45:30.774]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:45:30.774]    __FlashAddr=0x00000000
[23:45:30.774]    __FlashLen=0x00000000
[23:45:30.774]    __FlashArg=0x00000000
[23:45:30.775]    __FlashOp=0x00000000
[23:45:30.775]    __Result=0x00000000
[23:45:30.775]    
[23:45:30.775]    // User-defined
[23:45:30.775]    DbgMCU_CR=0x00000007
[23:45:30.775]    DbgMCU_APB1_Fz=0x00000000
[23:45:30.776]    DbgMCU_APB2_Fz=0x00000000
[23:45:30.776]    TraceClk_Pin=0x00040002
[23:45:30.776]    TraceD0_Pin=0x00040003
[23:45:30.776]    TraceD1_Pin=0x00040004
[23:45:30.776]    TraceD2_Pin=0x00040005
[23:45:30.777]    TraceD3_Pin=0x00040006
[23:45:30.777]  </debugvars>
[23:45:30.777]  
[23:45:30.777]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:45:30.777]    <block atomic="false" info="">
[23:45:30.777]      Sequence("CheckID");
[23:45:30.778]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:45:30.778]          <block atomic="false" info="">
[23:45:30.778]            __var pidr1 = 0;
[23:45:30.778]              // -> [pidr1 <= 0x00000000]
[23:45:30.778]            __var pidr2 = 0;
[23:45:30.778]              // -> [pidr2 <= 0x00000000]
[23:45:30.779]            __var jep106id = 0;
[23:45:30.779]              // -> [jep106id <= 0x00000000]
[23:45:30.779]            __var ROMTableBase = 0;
[23:45:30.779]              // -> [ROMTableBase <= 0x00000000]
[23:45:30.779]            __ap = 0;      // AHB-AP
[23:45:30.779]              // -> [__ap <= 0x00000000]
[23:45:30.780]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:45:30.780]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.780]              // -> [ROMTableBase <= 0xE00FD000]
[23:45:30.780]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:45:30.781]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.781]              // -> [pidr1 <= 0x00000004]
[23:45:30.781]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:45:30.782]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.782]              // -> [pidr2 <= 0x0000001A]
[23:45:30.782]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:45:30.782]              // -> [jep106id <= 0x00000020]
[23:45:30.782]          </block>
[23:45:30.782]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:45:30.783]            // if-block "jep106id != 0x20"
[23:45:30.783]              // =>  FALSE
[23:45:30.783]            // skip if-block "jep106id != 0x20"
[23:45:30.783]          </control>
[23:45:30.783]        </sequence>
[23:45:30.783]    </block>
[23:45:30.783]  </sequence>
[23:45:30.784]  
[23:45:30.799]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:45:30.799]  
[23:45:30.799]  <debugvars>
[23:45:30.799]    // Pre-defined
[23:45:30.799]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:45:30.799]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:45:30.799]    __dp=0x00000000
[23:45:30.800]    __ap=0x00000000
[23:45:30.800]    __traceout=0x00000000      (Trace Disabled)
[23:45:30.800]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:45:30.800]    __FlashAddr=0x00000000
[23:45:30.800]    __FlashLen=0x00000000
[23:45:30.800]    __FlashArg=0x00000000
[23:45:30.801]    __FlashOp=0x00000000
[23:45:30.801]    __Result=0x00000000
[23:45:30.801]    
[23:45:30.801]    // User-defined
[23:45:30.801]    DbgMCU_CR=0x00000007
[23:45:30.801]    DbgMCU_APB1_Fz=0x00000000
[23:45:30.801]    DbgMCU_APB2_Fz=0x00000000
[23:45:30.802]    TraceClk_Pin=0x00040002
[23:45:30.802]    TraceD0_Pin=0x00040003
[23:45:30.802]    TraceD1_Pin=0x00040004
[23:45:30.802]    TraceD2_Pin=0x00040005
[23:45:30.802]    TraceD3_Pin=0x00040006
[23:45:30.802]  </debugvars>
[23:45:30.803]  
[23:45:30.803]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:45:30.803]    <block atomic="false" info="">
[23:45:30.803]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:45:30.804]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.804]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:45:30.804]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.805]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:45:30.805]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.805]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:45:30.806]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:30.806]    </block>
[23:45:30.806]  </sequence>
[23:45:30.806]  
[23:56:28.847]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:56:28.847]  
[23:56:28.848]  <debugvars>
[23:56:28.848]    // Pre-defined
[23:56:28.848]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:28.848]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:56:28.848]    __dp=0x00000000
[23:56:28.848]    __ap=0x00000000
[23:56:28.849]    __traceout=0x00000000      (Trace Disabled)
[23:56:28.849]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:28.849]    __FlashAddr=0x00000000
[23:56:28.849]    __FlashLen=0x00000000
[23:56:28.849]    __FlashArg=0x00000000
[23:56:28.849]    __FlashOp=0x00000000
[23:56:28.849]    __Result=0x00000000
[23:56:28.850]    
[23:56:28.850]    // User-defined
[23:56:28.850]    DbgMCU_CR=0x00000007
[23:56:28.850]    DbgMCU_APB1_Fz=0x00000000
[23:56:28.850]    DbgMCU_APB2_Fz=0x00000000
[23:56:28.850]    TraceClk_Pin=0x00040002
[23:56:28.850]    TraceD0_Pin=0x00040003
[23:56:28.850]    TraceD1_Pin=0x00040004
[23:56:28.850]    TraceD2_Pin=0x00040005
[23:56:28.850]    TraceD3_Pin=0x00040006
[23:56:28.851]  </debugvars>
[23:56:28.851]  
[23:56:28.851]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:56:28.851]    <block atomic="false" info="">
[23:56:28.851]      Sequence("CheckID");
[23:56:28.851]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:56:28.851]          <block atomic="false" info="">
[23:56:28.851]            __var pidr1 = 0;
[23:56:28.852]              // -> [pidr1 <= 0x00000000]
[23:56:28.852]            __var pidr2 = 0;
[23:56:28.852]              // -> [pidr2 <= 0x00000000]
[23:56:28.852]            __var jep106id = 0;
[23:56:28.852]              // -> [jep106id <= 0x00000000]
[23:56:28.852]            __var ROMTableBase = 0;
[23:56:28.852]              // -> [ROMTableBase <= 0x00000000]
[23:56:28.852]            __ap = 0;      // AHB-AP
[23:56:28.853]              // -> [__ap <= 0x00000000]
[23:56:28.853]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:56:28.853]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.853]              // -> [ROMTableBase <= 0xE00FD000]
[23:56:28.853]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:56:28.854]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.854]              // -> [pidr1 <= 0x00000004]
[23:56:28.854]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:56:28.854]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.855]              // -> [pidr2 <= 0x0000001A]
[23:56:28.855]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:56:28.855]              // -> [jep106id <= 0x00000020]
[23:56:28.855]          </block>
[23:56:28.855]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:56:28.855]            // if-block "jep106id != 0x20"
[23:56:28.855]              // =>  FALSE
[23:56:28.855]            // skip if-block "jep106id != 0x20"
[23:56:28.856]          </control>
[23:56:28.856]        </sequence>
[23:56:28.856]    </block>
[23:56:28.856]  </sequence>
[23:56:28.856]  
[23:56:28.871]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:56:28.871]  
[23:56:28.871]  <debugvars>
[23:56:28.871]    // Pre-defined
[23:56:28.871]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:28.871]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:56:28.871]    __dp=0x00000000
[23:56:28.871]    __ap=0x00000000
[23:56:28.872]    __traceout=0x00000000      (Trace Disabled)
[23:56:28.872]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:28.872]    __FlashAddr=0x00000000
[23:56:28.872]    __FlashLen=0x00000000
[23:56:28.872]    __FlashArg=0x00000000
[23:56:28.872]    __FlashOp=0x00000000
[23:56:28.872]    __Result=0x00000000
[23:56:28.872]    
[23:56:28.872]    // User-defined
[23:56:28.872]    DbgMCU_CR=0x00000007
[23:56:28.873]    DbgMCU_APB1_Fz=0x00000000
[23:56:28.873]    DbgMCU_APB2_Fz=0x00000000
[23:56:28.873]    TraceClk_Pin=0x00040002
[23:56:28.873]    TraceD0_Pin=0x00040003
[23:56:28.873]    TraceD1_Pin=0x00040004
[23:56:28.873]    TraceD2_Pin=0x00040005
[23:56:28.873]    TraceD3_Pin=0x00040006
[23:56:28.873]  </debugvars>
[23:56:28.873]  
[23:56:28.874]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:56:28.874]    <block atomic="false" info="">
[23:56:28.874]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:56:28.874]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.875]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:56:28.875]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.875]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:56:28.876]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.876]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:56:28.876]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:28.876]    </block>
[23:56:28.877]  </sequence>
[23:56:28.877]  
[23:56:30.242]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:56:30.242]  
[23:56:30.243]  <debugvars>
[23:56:30.243]    // Pre-defined
[23:56:30.243]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:30.243]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:30.244]    __dp=0x00000000
[23:56:30.244]    __ap=0x00000000
[23:56:30.244]    __traceout=0x00000000      (Trace Disabled)
[23:56:30.244]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:30.244]    __FlashAddr=0x00000000
[23:56:30.244]    __FlashLen=0x00000000
[23:56:30.245]    __FlashArg=0x00000000
[23:56:30.245]    __FlashOp=0x00000000
[23:56:30.245]    __Result=0x00000000
[23:56:30.245]    
[23:56:30.245]    // User-defined
[23:56:30.245]    DbgMCU_CR=0x00000007
[23:56:30.245]    DbgMCU_APB1_Fz=0x00000000
[23:56:30.246]    DbgMCU_APB2_Fz=0x00000000
[23:56:30.246]    TraceClk_Pin=0x00040002
[23:56:30.246]    TraceD0_Pin=0x00040003
[23:56:30.246]    TraceD1_Pin=0x00040004
[23:56:30.246]    TraceD2_Pin=0x00040005
[23:56:30.246]    TraceD3_Pin=0x00040006
[23:56:30.246]  </debugvars>
[23:56:30.247]  
[23:56:30.247]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:56:30.247]    <block atomic="false" info="">
[23:56:30.247]      Sequence("CheckID");
[23:56:30.247]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:56:30.247]          <block atomic="false" info="">
[23:56:30.247]            __var pidr1 = 0;
[23:56:30.247]              // -> [pidr1 <= 0x00000000]
[23:56:30.248]            __var pidr2 = 0;
[23:56:30.248]              // -> [pidr2 <= 0x00000000]
[23:56:30.248]            __var jep106id = 0;
[23:56:30.248]              // -> [jep106id <= 0x00000000]
[23:56:30.248]            __var ROMTableBase = 0;
[23:56:30.248]              // -> [ROMTableBase <= 0x00000000]
[23:56:30.248]            __ap = 0;      // AHB-AP
[23:56:30.248]              // -> [__ap <= 0x00000000]
[23:56:30.249]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:56:30.249]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.249]              // -> [ROMTableBase <= 0xE00FD000]
[23:56:30.249]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:56:30.250]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.250]              // -> [pidr1 <= 0x00000004]
[23:56:30.250]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:56:30.251]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.251]              // -> [pidr2 <= 0x0000001A]
[23:56:30.251]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:56:30.251]              // -> [jep106id <= 0x00000020]
[23:56:30.251]          </block>
[23:56:30.251]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:56:30.251]            // if-block "jep106id != 0x20"
[23:56:30.251]              // =>  FALSE
[23:56:30.252]            // skip if-block "jep106id != 0x20"
[23:56:30.252]          </control>
[23:56:30.252]        </sequence>
[23:56:30.252]    </block>
[23:56:30.252]  </sequence>
[23:56:30.252]  
[23:56:30.266]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:56:30.266]  
[23:56:30.267]  <debugvars>
[23:56:30.267]    // Pre-defined
[23:56:30.267]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:30.267]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:30.267]    __dp=0x00000000
[23:56:30.267]    __ap=0x00000000
[23:56:30.268]    __traceout=0x00000000      (Trace Disabled)
[23:56:30.268]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:30.268]    __FlashAddr=0x00000000
[23:56:30.268]    __FlashLen=0x00000000
[23:56:30.268]    __FlashArg=0x00000000
[23:56:30.269]    __FlashOp=0x00000000
[23:56:30.269]    __Result=0x00000000
[23:56:30.269]    
[23:56:30.269]    // User-defined
[23:56:30.269]    DbgMCU_CR=0x00000007
[23:56:30.269]    DbgMCU_APB1_Fz=0x00000000
[23:56:30.270]    DbgMCU_APB2_Fz=0x00000000
[23:56:30.270]    TraceClk_Pin=0x00040002
[23:56:30.270]    TraceD0_Pin=0x00040003
[23:56:30.270]    TraceD1_Pin=0x00040004
[23:56:30.270]    TraceD2_Pin=0x00040005
[23:56:30.270]    TraceD3_Pin=0x00040006
[23:56:30.271]  </debugvars>
[23:56:30.271]  
[23:56:30.271]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:56:30.271]    <block atomic="false" info="">
[23:56:30.271]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:56:30.272]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.272]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:56:30.273]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.273]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:56:30.273]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.273]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:56:30.274]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:30.274]    </block>
[23:56:30.274]  </sequence>
[23:56:30.274]  
[23:59:37.544]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:59:37.544]  
[23:59:37.569]  <debugvars>
[23:59:37.569]    // Pre-defined
[23:59:37.570]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:59:37.570]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:59:37.570]    __dp=0x00000000
[23:59:37.570]    __ap=0x00000000
[23:59:37.571]    __traceout=0x00000000      (Trace Disabled)
[23:59:37.571]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:59:37.571]    __FlashAddr=0x00000000
[23:59:37.571]    __FlashLen=0x00000000
[23:59:37.571]    __FlashArg=0x00000000
[23:59:37.572]    __FlashOp=0x00000000
[23:59:37.572]    __Result=0x00000000
[23:59:37.572]    
[23:59:37.572]    // User-defined
[23:59:37.572]    DbgMCU_CR=0x00000007
[23:59:37.573]    DbgMCU_APB1_Fz=0x00000000
[23:59:37.573]    DbgMCU_APB2_Fz=0x00000000
[23:59:37.573]    TraceClk_Pin=0x00040002
[23:59:37.573]    TraceD0_Pin=0x00040003
[23:59:37.573]    TraceD1_Pin=0x00040004
[23:59:37.574]    TraceD2_Pin=0x00040005
[23:59:37.574]    TraceD3_Pin=0x00040006
[23:59:37.574]  </debugvars>
[23:59:37.574]  
[23:59:37.574]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:59:37.575]    <block atomic="false" info="">
[23:59:37.575]      Sequence("CheckID");
[23:59:37.575]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:59:37.575]          <block atomic="false" info="">
[23:59:37.575]            __var pidr1 = 0;
[23:59:37.576]              // -> [pidr1 <= 0x00000000]
[23:59:37.576]            __var pidr2 = 0;
[23:59:37.576]              // -> [pidr2 <= 0x00000000]
[23:59:37.576]            __var jep106id = 0;
[23:59:37.576]              // -> [jep106id <= 0x00000000]
[23:59:37.577]            __var ROMTableBase = 0;
[23:59:37.577]              // -> [ROMTableBase <= 0x00000000]
[23:59:37.577]            __ap = 0;      // AHB-AP
[23:59:37.577]              // -> [__ap <= 0x00000000]
[23:59:37.577]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:59:37.578]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.578]              // -> [ROMTableBase <= 0xE00FD000]
[23:59:37.578]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:59:37.579]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.579]              // -> [pidr1 <= 0x00000004]
[23:59:37.579]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:59:37.579]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.580]              // -> [pidr2 <= 0x0000001A]
[23:59:37.580]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:59:37.580]              // -> [jep106id <= 0x00000020]
[23:59:37.580]          </block>
[23:59:37.580]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:59:37.581]            // if-block "jep106id != 0x20"
[23:59:37.581]              // =>  FALSE
[23:59:37.581]            // skip if-block "jep106id != 0x20"
[23:59:37.581]          </control>
[23:59:37.581]        </sequence>
[23:59:37.581]    </block>
[23:59:37.581]  </sequence>
[23:59:37.582]  
[23:59:37.597]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:59:37.597]  
[23:59:37.597]  <debugvars>
[23:59:37.597]    // Pre-defined
[23:59:37.597]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:59:37.598]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:59:37.598]    __dp=0x00000000
[23:59:37.598]    __ap=0x00000000
[23:59:37.598]    __traceout=0x00000000      (Trace Disabled)
[23:59:37.598]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:59:37.599]    __FlashAddr=0x00000000
[23:59:37.599]    __FlashLen=0x00000000
[23:59:37.599]    __FlashArg=0x00000000
[23:59:37.599]    __FlashOp=0x00000000
[23:59:37.599]    __Result=0x00000000
[23:59:37.600]    
[23:59:37.600]    // User-defined
[23:59:37.600]    DbgMCU_CR=0x00000007
[23:59:37.600]    DbgMCU_APB1_Fz=0x00000000
[23:59:37.600]    DbgMCU_APB2_Fz=0x00000000
[23:59:37.600]    TraceClk_Pin=0x00040002
[23:59:37.601]    TraceD0_Pin=0x00040003
[23:59:37.601]    TraceD1_Pin=0x00040004
[23:59:37.601]    TraceD2_Pin=0x00040005
[23:59:37.601]    TraceD3_Pin=0x00040006
[23:59:37.601]  </debugvars>
[23:59:37.601]  
[23:59:37.602]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:59:37.602]    <block atomic="false" info="">
[23:59:37.602]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:59:37.602]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.603]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:59:37.603]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.604]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:59:37.604]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.604]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:59:37.605]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:37.605]    </block>
[23:59:37.605]  </sequence>
[23:59:37.606]  
[23:59:38.933]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:59:38.933]  
[23:59:38.934]  <debugvars>
[23:59:38.934]    // Pre-defined
[23:59:38.934]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:59:38.934]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:59:38.934]    __dp=0x00000000
[23:59:38.934]    __ap=0x00000000
[23:59:38.934]    __traceout=0x00000000      (Trace Disabled)
[23:59:38.934]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:59:38.935]    __FlashAddr=0x00000000
[23:59:38.935]    __FlashLen=0x00000000
[23:59:38.935]    __FlashArg=0x00000000
[23:59:38.935]    __FlashOp=0x00000000
[23:59:38.935]    __Result=0x00000000
[23:59:38.935]    
[23:59:38.935]    // User-defined
[23:59:38.935]    DbgMCU_CR=0x00000007
[23:59:38.935]    DbgMCU_APB1_Fz=0x00000000
[23:59:38.936]    DbgMCU_APB2_Fz=0x00000000
[23:59:38.936]    TraceClk_Pin=0x00040002
[23:59:38.936]    TraceD0_Pin=0x00040003
[23:59:38.936]    TraceD1_Pin=0x00040004
[23:59:38.936]    TraceD2_Pin=0x00040005
[23:59:38.936]    TraceD3_Pin=0x00040006
[23:59:38.937]  </debugvars>
[23:59:38.937]  
[23:59:38.937]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:59:38.937]    <block atomic="false" info="">
[23:59:38.937]      Sequence("CheckID");
[23:59:38.937]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:59:38.937]          <block atomic="false" info="">
[23:59:38.937]            __var pidr1 = 0;
[23:59:38.938]              // -> [pidr1 <= 0x00000000]
[23:59:38.938]            __var pidr2 = 0;
[23:59:38.938]              // -> [pidr2 <= 0x00000000]
[23:59:38.938]            __var jep106id = 0;
[23:59:38.938]              // -> [jep106id <= 0x00000000]
[23:59:38.938]            __var ROMTableBase = 0;
[23:59:38.938]              // -> [ROMTableBase <= 0x00000000]
[23:59:38.938]            __ap = 0;      // AHB-AP
[23:59:38.938]              // -> [__ap <= 0x00000000]
[23:59:38.939]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:59:38.939]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.939]              // -> [ROMTableBase <= 0xE00FD000]
[23:59:38.939]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:59:38.940]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.940]              // -> [pidr1 <= 0x00000004]
[23:59:38.940]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:59:38.940]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.941]              // -> [pidr2 <= 0x0000001A]
[23:59:38.941]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:59:38.941]              // -> [jep106id <= 0x00000020]
[23:59:38.941]          </block>
[23:59:38.941]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:59:38.941]            // if-block "jep106id != 0x20"
[23:59:38.941]              // =>  FALSE
[23:59:38.941]            // skip if-block "jep106id != 0x20"
[23:59:38.942]          </control>
[23:59:38.942]        </sequence>
[23:59:38.942]    </block>
[23:59:38.942]  </sequence>
[23:59:38.942]  
[23:59:38.957]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:59:38.957]  
[23:59:38.957]  <debugvars>
[23:59:38.957]    // Pre-defined
[23:59:38.957]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:59:38.957]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:59:38.958]    __dp=0x00000000
[23:59:38.958]    __ap=0x00000000
[23:59:38.958]    __traceout=0x00000000      (Trace Disabled)
[23:59:38.958]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:59:38.958]    __FlashAddr=0x00000000
[23:59:38.958]    __FlashLen=0x00000000
[23:59:38.958]    __FlashArg=0x00000000
[23:59:38.958]    __FlashOp=0x00000000
[23:59:38.959]    __Result=0x00000000
[23:59:38.959]    
[23:59:38.959]    // User-defined
[23:59:38.959]    DbgMCU_CR=0x00000007
[23:59:38.959]    DbgMCU_APB1_Fz=0x00000000
[23:59:38.959]    DbgMCU_APB2_Fz=0x00000000
[23:59:38.959]    TraceClk_Pin=0x00040002
[23:59:38.960]    TraceD0_Pin=0x00040003
[23:59:38.960]    TraceD1_Pin=0x00040004
[23:59:38.960]    TraceD2_Pin=0x00040005
[23:59:38.960]    TraceD3_Pin=0x00040006
[23:59:38.960]  </debugvars>
[23:59:38.960]  
[23:59:38.960]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:59:38.961]    <block atomic="false" info="">
[23:59:38.961]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:59:38.961]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.961]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:59:38.962]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.962]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:59:38.962]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.962]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:59:38.963]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:38.963]    </block>
[23:59:38.963]  </sequence>
[23:59:38.963]  
[00:08:18.662]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:08:18.662]  
[00:08:18.662]  <debugvars>
[00:08:18.662]    // Pre-defined
[00:08:18.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:08:18.663]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:08:18.663]    __dp=0x00000000
[00:08:18.663]    __ap=0x00000000
[00:08:18.663]    __traceout=0x00000000      (Trace Disabled)
[00:08:18.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:08:18.664]    __FlashAddr=0x00000000
[00:08:18.664]    __FlashLen=0x00000000
[00:08:18.664]    __FlashArg=0x00000000
[00:08:18.664]    __FlashOp=0x00000000
[00:08:18.665]    __Result=0x00000000
[00:08:18.665]    
[00:08:18.665]    // User-defined
[00:08:18.665]    DbgMCU_CR=0x00000007
[00:08:18.665]    DbgMCU_APB1_Fz=0x00000000
[00:08:18.665]    DbgMCU_APB2_Fz=0x00000000
[00:08:18.665]    TraceClk_Pin=0x00040002
[00:08:18.666]    TraceD0_Pin=0x00040003
[00:08:18.666]    TraceD1_Pin=0x00040004
[00:08:18.666]    TraceD2_Pin=0x00040005
[00:08:18.666]    TraceD3_Pin=0x00040006
[00:08:18.666]  </debugvars>
[00:08:18.667]  
[00:08:18.667]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:08:18.667]    <block atomic="false" info="">
[00:08:18.667]      Sequence("CheckID");
[00:08:18.667]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:08:18.667]          <block atomic="false" info="">
[00:08:18.668]            __var pidr1 = 0;
[00:08:18.668]              // -> [pidr1 <= 0x00000000]
[00:08:18.668]            __var pidr2 = 0;
[00:08:18.668]              // -> [pidr2 <= 0x00000000]
[00:08:18.668]            __var jep106id = 0;
[00:08:18.669]              // -> [jep106id <= 0x00000000]
[00:08:18.669]            __var ROMTableBase = 0;
[00:08:18.669]              // -> [ROMTableBase <= 0x00000000]
[00:08:18.669]            __ap = 0;      // AHB-AP
[00:08:18.669]              // -> [__ap <= 0x00000000]
[00:08:18.669]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:08:18.670]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.670]              // -> [ROMTableBase <= 0xE00FD000]
[00:08:18.670]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:08:18.671]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.671]              // -> [pidr1 <= 0x00000004]
[00:08:18.671]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:08:18.671]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.672]              // -> [pidr2 <= 0x0000001A]
[00:08:18.672]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:08:18.672]              // -> [jep106id <= 0x00000020]
[00:08:18.672]          </block>
[00:08:18.672]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:08:18.672]            // if-block "jep106id != 0x20"
[00:08:18.673]              // =>  FALSE
[00:08:18.673]            // skip if-block "jep106id != 0x20"
[00:08:18.673]          </control>
[00:08:18.673]        </sequence>
[00:08:18.673]    </block>
[00:08:18.673]  </sequence>
[00:08:18.674]  
[00:08:18.689]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:08:18.689]  
[00:08:18.689]  <debugvars>
[00:08:18.689]    // Pre-defined
[00:08:18.690]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:08:18.690]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:08:18.690]    __dp=0x00000000
[00:08:18.690]    __ap=0x00000000
[00:08:18.690]    __traceout=0x00000000      (Trace Disabled)
[00:08:18.690]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:08:18.691]    __FlashAddr=0x00000000
[00:08:18.691]    __FlashLen=0x00000000
[00:08:18.691]    __FlashArg=0x00000000
[00:08:18.691]    __FlashOp=0x00000000
[00:08:18.691]    __Result=0x00000000
[00:08:18.691]    
[00:08:18.691]    // User-defined
[00:08:18.692]    DbgMCU_CR=0x00000007
[00:08:18.692]    DbgMCU_APB1_Fz=0x00000000
[00:08:18.692]    DbgMCU_APB2_Fz=0x00000000
[00:08:18.692]    TraceClk_Pin=0x00040002
[00:08:18.692]    TraceD0_Pin=0x00040003
[00:08:18.692]    TraceD1_Pin=0x00040004
[00:08:18.692]    TraceD2_Pin=0x00040005
[00:08:18.693]    TraceD3_Pin=0x00040006
[00:08:18.693]  </debugvars>
[00:08:18.693]  
[00:08:18.693]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:08:18.693]    <block atomic="false" info="">
[00:08:18.693]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:08:18.694]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.694]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:08:18.695]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.695]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:08:18.695]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.696]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:08:18.696]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:18.696]    </block>
[00:08:18.696]  </sequence>
[00:08:18.696]  
[00:08:20.008]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:08:20.008]  
[00:08:20.009]  <debugvars>
[00:08:20.009]    // Pre-defined
[00:08:20.009]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:08:20.009]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:08:20.009]    __dp=0x00000000
[00:08:20.009]    __ap=0x00000000
[00:08:20.009]    __traceout=0x00000000      (Trace Disabled)
[00:08:20.010]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:08:20.010]    __FlashAddr=0x00000000
[00:08:20.010]    __FlashLen=0x00000000
[00:08:20.010]    __FlashArg=0x00000000
[00:08:20.010]    __FlashOp=0x00000000
[00:08:20.010]    __Result=0x00000000
[00:08:20.011]    
[00:08:20.011]    // User-defined
[00:08:20.011]    DbgMCU_CR=0x00000007
[00:08:20.011]    DbgMCU_APB1_Fz=0x00000000
[00:08:20.011]    DbgMCU_APB2_Fz=0x00000000
[00:08:20.011]    TraceClk_Pin=0x00040002
[00:08:20.011]    TraceD0_Pin=0x00040003
[00:08:20.011]    TraceD1_Pin=0x00040004
[00:08:20.012]    TraceD2_Pin=0x00040005
[00:08:20.012]    TraceD3_Pin=0x00040006
[00:08:20.012]  </debugvars>
[00:08:20.012]  
[00:08:20.012]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:08:20.012]    <block atomic="false" info="">
[00:08:20.012]      Sequence("CheckID");
[00:08:20.013]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:08:20.013]          <block atomic="false" info="">
[00:08:20.013]            __var pidr1 = 0;
[00:08:20.013]              // -> [pidr1 <= 0x00000000]
[00:08:20.013]            __var pidr2 = 0;
[00:08:20.013]              // -> [pidr2 <= 0x00000000]
[00:08:20.014]            __var jep106id = 0;
[00:08:20.014]              // -> [jep106id <= 0x00000000]
[00:08:20.014]            __var ROMTableBase = 0;
[00:08:20.014]              // -> [ROMTableBase <= 0x00000000]
[00:08:20.014]            __ap = 0;      // AHB-AP
[00:08:20.014]              // -> [__ap <= 0x00000000]
[00:08:20.014]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:08:20.015]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.015]              // -> [ROMTableBase <= 0xE00FD000]
[00:08:20.015]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:08:20.015]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.016]              // -> [pidr1 <= 0x00000004]
[00:08:20.016]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:08:20.016]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.016]              // -> [pidr2 <= 0x0000001A]
[00:08:20.016]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:08:20.017]              // -> [jep106id <= 0x00000020]
[00:08:20.017]          </block>
[00:08:20.017]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:08:20.017]            // if-block "jep106id != 0x20"
[00:08:20.017]              // =>  FALSE
[00:08:20.017]            // skip if-block "jep106id != 0x20"
[00:08:20.017]          </control>
[00:08:20.017]        </sequence>
[00:08:20.018]    </block>
[00:08:20.018]  </sequence>
[00:08:20.018]  
[00:08:20.033]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:08:20.033]  
[00:08:20.033]  <debugvars>
[00:08:20.033]    // Pre-defined
[00:08:20.034]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:08:20.034]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:08:20.034]    __dp=0x00000000
[00:08:20.034]    __ap=0x00000000
[00:08:20.034]    __traceout=0x00000000      (Trace Disabled)
[00:08:20.034]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:08:20.035]    __FlashAddr=0x00000000
[00:08:20.035]    __FlashLen=0x00000000
[00:08:20.035]    __FlashArg=0x00000000
[00:08:20.035]    __FlashOp=0x00000000
[00:08:20.035]    __Result=0x00000000
[00:08:20.035]    
[00:08:20.035]    // User-defined
[00:08:20.036]    DbgMCU_CR=0x00000007
[00:08:20.036]    DbgMCU_APB1_Fz=0x00000000
[00:08:20.036]    DbgMCU_APB2_Fz=0x00000000
[00:08:20.036]    TraceClk_Pin=0x00040002
[00:08:20.036]    TraceD0_Pin=0x00040003
[00:08:20.036]    TraceD1_Pin=0x00040004
[00:08:20.037]    TraceD2_Pin=0x00040005
[00:08:20.037]    TraceD3_Pin=0x00040006
[00:08:20.037]  </debugvars>
[00:08:20.037]  
[00:08:20.037]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:08:20.037]    <block atomic="false" info="">
[00:08:20.037]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:08:20.038]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.038]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:08:20.039]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.039]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:08:20.039]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.040]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:08:20.040]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:08:20.040]    </block>
[00:08:20.040]  </sequence>
[00:08:20.041]  
[00:10:12.230]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:10:12.230]  
[00:10:12.231]  <debugvars>
[00:10:12.231]    // Pre-defined
[00:10:12.231]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:12.231]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:10:12.231]    __dp=0x00000000
[00:10:12.232]    __ap=0x00000000
[00:10:12.232]    __traceout=0x00000000      (Trace Disabled)
[00:10:12.232]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:12.232]    __FlashAddr=0x00000000
[00:10:12.232]    __FlashLen=0x00000000
[00:10:12.232]    __FlashArg=0x00000000
[00:10:12.233]    __FlashOp=0x00000000
[00:10:12.233]    __Result=0x00000000
[00:10:12.233]    
[00:10:12.233]    // User-defined
[00:10:12.233]    DbgMCU_CR=0x00000007
[00:10:12.233]    DbgMCU_APB1_Fz=0x00000000
[00:10:12.234]    DbgMCU_APB2_Fz=0x00000000
[00:10:12.234]    TraceClk_Pin=0x00040002
[00:10:12.234]    TraceD0_Pin=0x00040003
[00:10:12.234]    TraceD1_Pin=0x00040004
[00:10:12.234]    TraceD2_Pin=0x00040005
[00:10:12.235]    TraceD3_Pin=0x00040006
[00:10:12.235]  </debugvars>
[00:10:12.235]  
[00:10:12.235]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:10:12.235]    <block atomic="false" info="">
[00:10:12.235]      Sequence("CheckID");
[00:10:12.236]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:10:12.236]          <block atomic="false" info="">
[00:10:12.236]            __var pidr1 = 0;
[00:10:12.236]              // -> [pidr1 <= 0x00000000]
[00:10:12.236]            __var pidr2 = 0;
[00:10:12.236]              // -> [pidr2 <= 0x00000000]
[00:10:12.237]            __var jep106id = 0;
[00:10:12.237]              // -> [jep106id <= 0x00000000]
[00:10:12.237]            __var ROMTableBase = 0;
[00:10:12.237]              // -> [ROMTableBase <= 0x00000000]
[00:10:12.237]            __ap = 0;      // AHB-AP
[00:10:12.237]              // -> [__ap <= 0x00000000]
[00:10:12.237]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:10:12.238]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.238]              // -> [ROMTableBase <= 0xE00FD000]
[00:10:12.238]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:10:12.238]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.239]              // -> [pidr1 <= 0x00000004]
[00:10:12.239]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:10:12.239]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.239]              // -> [pidr2 <= 0x0000001A]
[00:10:12.239]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:10:12.240]              // -> [jep106id <= 0x00000020]
[00:10:12.240]          </block>
[00:10:12.240]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:10:12.240]            // if-block "jep106id != 0x20"
[00:10:12.240]              // =>  FALSE
[00:10:12.240]            // skip if-block "jep106id != 0x20"
[00:10:12.240]          </control>
[00:10:12.240]        </sequence>
[00:10:12.241]    </block>
[00:10:12.241]  </sequence>
[00:10:12.241]  
[00:10:12.256]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:10:12.256]  
[00:10:12.256]  <debugvars>
[00:10:12.256]    // Pre-defined
[00:10:12.257]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:12.257]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:10:12.257]    __dp=0x00000000
[00:10:12.257]    __ap=0x00000000
[00:10:12.257]    __traceout=0x00000000      (Trace Disabled)
[00:10:12.257]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:12.258]    __FlashAddr=0x00000000
[00:10:12.258]    __FlashLen=0x00000000
[00:10:12.258]    __FlashArg=0x00000000
[00:10:12.258]    __FlashOp=0x00000000
[00:10:12.258]    __Result=0x00000000
[00:10:12.259]    
[00:10:12.259]    // User-defined
[00:10:12.259]    DbgMCU_CR=0x00000007
[00:10:12.259]    DbgMCU_APB1_Fz=0x00000000
[00:10:12.259]    DbgMCU_APB2_Fz=0x00000000
[00:10:12.259]    TraceClk_Pin=0x00040002
[00:10:12.259]    TraceD0_Pin=0x00040003
[00:10:12.260]    TraceD1_Pin=0x00040004
[00:10:12.260]    TraceD2_Pin=0x00040005
[00:10:12.260]    TraceD3_Pin=0x00040006
[00:10:12.260]  </debugvars>
[00:10:12.260]  
[00:10:12.260]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:10:12.261]    <block atomic="false" info="">
[00:10:12.261]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:10:12.261]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.262]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:10:12.262]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.262]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:10:12.263]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.263]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:10:12.264]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:12.264]    </block>
[00:10:12.264]  </sequence>
[00:10:12.264]  
[00:10:13.594]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:10:13.594]  
[00:10:13.595]  <debugvars>
[00:10:13.595]    // Pre-defined
[00:10:13.595]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:13.596]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:10:13.596]    __dp=0x00000000
[00:10:13.596]    __ap=0x00000000
[00:10:13.596]    __traceout=0x00000000      (Trace Disabled)
[00:10:13.596]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:13.596]    __FlashAddr=0x00000000
[00:10:13.597]    __FlashLen=0x00000000
[00:10:13.597]    __FlashArg=0x00000000
[00:10:13.597]    __FlashOp=0x00000000
[00:10:13.597]    __Result=0x00000000
[00:10:13.597]    
[00:10:13.597]    // User-defined
[00:10:13.597]    DbgMCU_CR=0x00000007
[00:10:13.598]    DbgMCU_APB1_Fz=0x00000000
[00:10:13.598]    DbgMCU_APB2_Fz=0x00000000
[00:10:13.598]    TraceClk_Pin=0x00040002
[00:10:13.598]    TraceD0_Pin=0x00040003
[00:10:13.598]    TraceD1_Pin=0x00040004
[00:10:13.598]    TraceD2_Pin=0x00040005
[00:10:13.599]    TraceD3_Pin=0x00040006
[00:10:13.599]  </debugvars>
[00:10:13.599]  
[00:10:13.599]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:10:13.599]    <block atomic="false" info="">
[00:10:13.599]      Sequence("CheckID");
[00:10:13.600]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:10:13.600]          <block atomic="false" info="">
[00:10:13.600]            __var pidr1 = 0;
[00:10:13.600]              // -> [pidr1 <= 0x00000000]
[00:10:13.600]            __var pidr2 = 0;
[00:10:13.600]              // -> [pidr2 <= 0x00000000]
[00:10:13.600]            __var jep106id = 0;
[00:10:13.601]              // -> [jep106id <= 0x00000000]
[00:10:13.601]            __var ROMTableBase = 0;
[00:10:13.601]              // -> [ROMTableBase <= 0x00000000]
[00:10:13.601]            __ap = 0;      // AHB-AP
[00:10:13.601]              // -> [__ap <= 0x00000000]
[00:10:13.601]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:10:13.602]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.602]              // -> [ROMTableBase <= 0xE00FD000]
[00:10:13.602]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:10:13.603]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.603]              // -> [pidr1 <= 0x00000004]
[00:10:13.603]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:10:13.603]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.603]              // -> [pidr2 <= 0x0000001A]
[00:10:13.603]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:10:13.604]              // -> [jep106id <= 0x00000020]
[00:10:13.604]          </block>
[00:10:13.604]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:10:13.604]            // if-block "jep106id != 0x20"
[00:10:13.604]              // =>  FALSE
[00:10:13.604]            // skip if-block "jep106id != 0x20"
[00:10:13.604]          </control>
[00:10:13.605]        </sequence>
[00:10:13.605]    </block>
[00:10:13.605]  </sequence>
[00:10:13.605]  
[00:10:13.620]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:10:13.620]  
[00:10:13.620]  <debugvars>
[00:10:13.620]    // Pre-defined
[00:10:13.620]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:13.621]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:10:13.621]    __dp=0x00000000
[00:10:13.621]    __ap=0x00000000
[00:10:13.621]    __traceout=0x00000000      (Trace Disabled)
[00:10:13.621]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:13.622]    __FlashAddr=0x00000000
[00:10:13.622]    __FlashLen=0x00000000
[00:10:13.622]    __FlashArg=0x00000000
[00:10:13.622]    __FlashOp=0x00000000
[00:10:13.622]    __Result=0x00000000
[00:10:13.623]    
[00:10:13.623]    // User-defined
[00:10:13.623]    DbgMCU_CR=0x00000007
[00:10:13.623]    DbgMCU_APB1_Fz=0x00000000
[00:10:13.623]    DbgMCU_APB2_Fz=0x00000000
[00:10:13.623]    TraceClk_Pin=0x00040002
[00:10:13.623]    TraceD0_Pin=0x00040003
[00:10:13.624]    TraceD1_Pin=0x00040004
[00:10:13.624]    TraceD2_Pin=0x00040005
[00:10:13.624]    TraceD3_Pin=0x00040006
[00:10:13.624]  </debugvars>
[00:10:13.624]  
[00:10:13.625]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:10:13.625]    <block atomic="false" info="">
[00:10:13.625]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:10:13.626]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.626]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:10:13.626]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.627]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:10:13.627]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.627]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:10:13.628]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:13.628]    </block>
[00:10:13.628]  </sequence>
[00:10:13.628]  
[00:10:35.952]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:10:35.952]  
[00:10:35.953]  <debugvars>
[00:10:35.953]    // Pre-defined
[00:10:35.953]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:35.953]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:10:35.953]    __dp=0x00000000
[00:10:35.953]    __ap=0x00000000
[00:10:35.954]    __traceout=0x00000000      (Trace Disabled)
[00:10:35.954]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:35.954]    __FlashAddr=0x00000000
[00:10:35.954]    __FlashLen=0x00000000
[00:10:35.954]    __FlashArg=0x00000000
[00:10:35.955]    __FlashOp=0x00000000
[00:10:35.955]    __Result=0x00000000
[00:10:35.955]    
[00:10:35.955]    // User-defined
[00:10:35.955]    DbgMCU_CR=0x00000007
[00:10:35.955]    DbgMCU_APB1_Fz=0x00000000
[00:10:35.955]    DbgMCU_APB2_Fz=0x00000000
[00:10:35.955]    TraceClk_Pin=0x00040002
[00:10:35.956]    TraceD0_Pin=0x00040003
[00:10:35.956]    TraceD1_Pin=0x00040004
[00:10:35.956]    TraceD2_Pin=0x00040005
[00:10:35.956]    TraceD3_Pin=0x00040006
[00:10:35.956]  </debugvars>
[00:10:35.956]  
[00:10:35.957]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:10:35.957]    <block atomic="false" info="">
[00:10:35.957]      Sequence("CheckID");
[00:10:35.957]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:10:35.957]          <block atomic="false" info="">
[00:10:35.957]            __var pidr1 = 0;
[00:10:35.958]              // -> [pidr1 <= 0x00000000]
[00:10:35.958]            __var pidr2 = 0;
[00:10:35.958]              // -> [pidr2 <= 0x00000000]
[00:10:35.958]            __var jep106id = 0;
[00:10:35.958]              // -> [jep106id <= 0x00000000]
[00:10:35.958]            __var ROMTableBase = 0;
[00:10:35.958]              // -> [ROMTableBase <= 0x00000000]
[00:10:35.959]            __ap = 0;      // AHB-AP
[00:10:35.959]              // -> [__ap <= 0x00000000]
[00:10:35.959]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:10:35.959]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.959]              // -> [ROMTableBase <= 0xE00FD000]
[00:10:35.959]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:10:35.960]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.960]              // -> [pidr1 <= 0x00000004]
[00:10:35.960]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:10:35.961]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.961]              // -> [pidr2 <= 0x0000001A]
[00:10:35.961]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:10:35.961]              // -> [jep106id <= 0x00000020]
[00:10:35.961]          </block>
[00:10:35.961]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:10:35.962]            // if-block "jep106id != 0x20"
[00:10:35.962]              // =>  FALSE
[00:10:35.962]            // skip if-block "jep106id != 0x20"
[00:10:35.962]          </control>
[00:10:35.962]        </sequence>
[00:10:35.962]    </block>
[00:10:35.962]  </sequence>
[00:10:35.962]  
[00:10:35.977]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:10:35.977]  
[00:10:35.977]  <debugvars>
[00:10:35.978]    // Pre-defined
[00:10:35.978]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:35.978]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:10:35.978]    __dp=0x00000000
[00:10:35.978]    __ap=0x00000000
[00:10:35.978]    __traceout=0x00000000      (Trace Disabled)
[00:10:35.979]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:35.979]    __FlashAddr=0x00000000
[00:10:35.979]    __FlashLen=0x00000000
[00:10:35.979]    __FlashArg=0x00000000
[00:10:35.979]    __FlashOp=0x00000000
[00:10:35.980]    __Result=0x00000000
[00:10:35.980]    
[00:10:35.980]    // User-defined
[00:10:35.980]    DbgMCU_CR=0x00000007
[00:10:35.980]    DbgMCU_APB1_Fz=0x00000000
[00:10:35.980]    DbgMCU_APB2_Fz=0x00000000
[00:10:35.980]    TraceClk_Pin=0x00040002
[00:10:35.981]    TraceD0_Pin=0x00040003
[00:10:35.981]    TraceD1_Pin=0x00040004
[00:10:35.981]    TraceD2_Pin=0x00040005
[00:10:35.981]    TraceD3_Pin=0x00040006
[00:10:35.981]  </debugvars>
[00:10:35.981]  
[00:10:35.982]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:10:35.982]    <block atomic="false" info="">
[00:10:35.982]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:10:35.982]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.983]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:10:35.983]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.983]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:10:35.984]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.984]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:10:35.985]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:35.985]    </block>
[00:10:35.985]  </sequence>
[00:10:35.985]  
[00:10:37.308]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:10:37.308]  
[00:10:37.309]  <debugvars>
[00:10:37.309]    // Pre-defined
[00:10:37.309]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:37.309]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:10:37.309]    __dp=0x00000000
[00:10:37.310]    __ap=0x00000000
[00:10:37.310]    __traceout=0x00000000      (Trace Disabled)
[00:10:37.310]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:37.310]    __FlashAddr=0x00000000
[00:10:37.310]    __FlashLen=0x00000000
[00:10:37.310]    __FlashArg=0x00000000
[00:10:37.311]    __FlashOp=0x00000000
[00:10:37.311]    __Result=0x00000000
[00:10:37.311]    
[00:10:37.311]    // User-defined
[00:10:37.311]    DbgMCU_CR=0x00000007
[00:10:37.311]    DbgMCU_APB1_Fz=0x00000000
[00:10:37.312]    DbgMCU_APB2_Fz=0x00000000
[00:10:37.312]    TraceClk_Pin=0x00040002
[00:10:37.312]    TraceD0_Pin=0x00040003
[00:10:37.312]    TraceD1_Pin=0x00040004
[00:10:37.312]    TraceD2_Pin=0x00040005
[00:10:37.312]    TraceD3_Pin=0x00040006
[00:10:37.313]  </debugvars>
[00:10:37.313]  
[00:10:37.313]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:10:37.313]    <block atomic="false" info="">
[00:10:37.313]      Sequence("CheckID");
[00:10:37.313]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:10:37.314]          <block atomic="false" info="">
[00:10:37.314]            __var pidr1 = 0;
[00:10:37.314]              // -> [pidr1 <= 0x00000000]
[00:10:37.314]            __var pidr2 = 0;
[00:10:37.314]              // -> [pidr2 <= 0x00000000]
[00:10:37.314]            __var jep106id = 0;
[00:10:37.315]              // -> [jep106id <= 0x00000000]
[00:10:37.315]            __var ROMTableBase = 0;
[00:10:37.315]              // -> [ROMTableBase <= 0x00000000]
[00:10:37.315]            __ap = 0;      // AHB-AP
[00:10:37.315]              // -> [__ap <= 0x00000000]
[00:10:37.315]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:10:37.316]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.316]              // -> [ROMTableBase <= 0xE00FD000]
[00:10:37.316]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:10:37.316]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.317]              // -> [pidr1 <= 0x00000004]
[00:10:37.317]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:10:37.317]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.317]              // -> [pidr2 <= 0x0000001A]
[00:10:37.318]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:10:37.318]              // -> [jep106id <= 0x00000020]
[00:10:37.318]          </block>
[00:10:37.318]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:10:37.318]            // if-block "jep106id != 0x20"
[00:10:37.318]              // =>  FALSE
[00:10:37.318]            // skip if-block "jep106id != 0x20"
[00:10:37.318]          </control>
[00:10:37.319]        </sequence>
[00:10:37.319]    </block>
[00:10:37.319]  </sequence>
[00:10:37.319]  
[00:10:37.334]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:10:37.334]  
[00:10:37.334]  <debugvars>
[00:10:37.334]    // Pre-defined
[00:10:37.334]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:10:37.334]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:10:37.335]    __dp=0x00000000
[00:10:37.335]    __ap=0x00000000
[00:10:37.335]    __traceout=0x00000000      (Trace Disabled)
[00:10:37.335]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:10:37.335]    __FlashAddr=0x00000000
[00:10:37.335]    __FlashLen=0x00000000
[00:10:37.335]    __FlashArg=0x00000000
[00:10:37.336]    __FlashOp=0x00000000
[00:10:37.336]    __Result=0x00000000
[00:10:37.336]    
[00:10:37.336]    // User-defined
[00:10:37.336]    DbgMCU_CR=0x00000007
[00:10:37.336]    DbgMCU_APB1_Fz=0x00000000
[00:10:37.337]    DbgMCU_APB2_Fz=0x00000000
[00:10:37.337]    TraceClk_Pin=0x00040002
[00:10:37.337]    TraceD0_Pin=0x00040003
[00:10:37.337]    TraceD1_Pin=0x00040004
[00:10:37.337]    TraceD2_Pin=0x00040005
[00:10:37.337]    TraceD3_Pin=0x00040006
[00:10:37.337]  </debugvars>
[00:10:37.338]  
[00:10:37.338]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:10:37.338]    <block atomic="false" info="">
[00:10:37.338]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:10:37.338]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.339]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:10:37.339]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.339]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:10:37.340]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.340]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:10:37.340]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:10:37.340]    </block>
[00:10:37.341]  </sequence>
[00:10:37.341]  
[00:11:40.370]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:11:40.370]  
[00:11:40.370]  <debugvars>
[00:11:40.370]    // Pre-defined
[00:11:40.370]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:11:40.371]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:11:40.371]    __dp=0x00000000
[00:11:40.371]    __ap=0x00000000
[00:11:40.371]    __traceout=0x00000000      (Trace Disabled)
[00:11:40.372]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:11:40.372]    __FlashAddr=0x00000000
[00:11:40.372]    __FlashLen=0x00000000
[00:11:40.372]    __FlashArg=0x00000000
[00:11:40.372]    __FlashOp=0x00000000
[00:11:40.373]    __Result=0x00000000
[00:11:40.373]    
[00:11:40.373]    // User-defined
[00:11:40.373]    DbgMCU_CR=0x00000007
[00:11:40.373]    DbgMCU_APB1_Fz=0x00000000
[00:11:40.373]    DbgMCU_APB2_Fz=0x00000000
[00:11:40.374]    TraceClk_Pin=0x00040002
[00:11:40.374]    TraceD0_Pin=0x00040003
[00:11:40.374]    TraceD1_Pin=0x00040004
[00:11:40.374]    TraceD2_Pin=0x00040005
[00:11:40.374]    TraceD3_Pin=0x00040006
[00:11:40.375]  </debugvars>
[00:11:40.375]  
[00:11:40.375]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:11:40.375]    <block atomic="false" info="">
[00:11:40.375]      Sequence("CheckID");
[00:11:40.375]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:11:40.376]          <block atomic="false" info="">
[00:11:40.376]            __var pidr1 = 0;
[00:11:40.376]              // -> [pidr1 <= 0x00000000]
[00:11:40.376]            __var pidr2 = 0;
[00:11:40.376]              // -> [pidr2 <= 0x00000000]
[00:11:40.376]            __var jep106id = 0;
[00:11:40.377]              // -> [jep106id <= 0x00000000]
[00:11:40.377]            __var ROMTableBase = 0;
[00:11:40.377]              // -> [ROMTableBase <= 0x00000000]
[00:11:40.377]            __ap = 0;      // AHB-AP
[00:11:40.377]              // -> [__ap <= 0x00000000]
[00:11:40.377]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:11:40.378]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.378]              // -> [ROMTableBase <= 0xE00FD000]
[00:11:40.378]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:11:40.378]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.378]              // -> [pidr1 <= 0x00000004]
[00:11:40.379]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:11:40.379]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.379]              // -> [pidr2 <= 0x0000001A]
[00:11:40.379]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:11:40.380]              // -> [jep106id <= 0x00000020]
[00:11:40.380]          </block>
[00:11:40.380]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:11:40.380]            // if-block "jep106id != 0x20"
[00:11:40.380]              // =>  FALSE
[00:11:40.380]            // skip if-block "jep106id != 0x20"
[00:11:40.380]          </control>
[00:11:40.381]        </sequence>
[00:11:40.381]    </block>
[00:11:40.381]  </sequence>
[00:11:40.381]  
[00:11:40.396]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:11:40.396]  
[00:11:40.396]  <debugvars>
[00:11:40.396]    // Pre-defined
[00:11:40.397]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:11:40.397]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:11:40.397]    __dp=0x00000000
[00:11:40.397]    __ap=0x00000000
[00:11:40.397]    __traceout=0x00000000      (Trace Disabled)
[00:11:40.398]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:11:40.398]    __FlashAddr=0x00000000
[00:11:40.398]    __FlashLen=0x00000000
[00:11:40.398]    __FlashArg=0x00000000
[00:11:40.398]    __FlashOp=0x00000000
[00:11:40.398]    __Result=0x00000000
[00:11:40.399]    
[00:11:40.399]    // User-defined
[00:11:40.399]    DbgMCU_CR=0x00000007
[00:11:40.399]    DbgMCU_APB1_Fz=0x00000000
[00:11:40.399]    DbgMCU_APB2_Fz=0x00000000
[00:11:40.399]    TraceClk_Pin=0x00040002
[00:11:40.400]    TraceD0_Pin=0x00040003
[00:11:40.400]    TraceD1_Pin=0x00040004
[00:11:40.400]    TraceD2_Pin=0x00040005
[00:11:40.400]    TraceD3_Pin=0x00040006
[00:11:40.400]  </debugvars>
[00:11:40.400]  
[00:11:40.401]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:11:40.401]    <block atomic="false" info="">
[00:11:40.401]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:11:40.402]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.402]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:11:40.402]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.402]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:11:40.403]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.403]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:11:40.404]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:40.404]    </block>
[00:11:40.404]  </sequence>
[00:11:40.404]  
[00:11:41.730]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:11:41.730]  
[00:11:41.730]  <debugvars>
[00:11:41.731]    // Pre-defined
[00:11:41.731]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:11:41.731]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:11:41.731]    __dp=0x00000000
[00:11:41.731]    __ap=0x00000000
[00:11:41.731]    __traceout=0x00000000      (Trace Disabled)
[00:11:41.732]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:11:41.732]    __FlashAddr=0x00000000
[00:11:41.732]    __FlashLen=0x00000000
[00:11:41.732]    __FlashArg=0x00000000
[00:11:41.732]    __FlashOp=0x00000000
[00:11:41.733]    __Result=0x00000000
[00:11:41.733]    
[00:11:41.733]    // User-defined
[00:11:41.733]    DbgMCU_CR=0x00000007
[00:11:41.733]    DbgMCU_APB1_Fz=0x00000000
[00:11:41.733]    DbgMCU_APB2_Fz=0x00000000
[00:11:41.733]    TraceClk_Pin=0x00040002
[00:11:41.734]    TraceD0_Pin=0x00040003
[00:11:41.734]    TraceD1_Pin=0x00040004
[00:11:41.734]    TraceD2_Pin=0x00040005
[00:11:41.734]    TraceD3_Pin=0x00040006
[00:11:41.734]  </debugvars>
[00:11:41.735]  
[00:11:41.735]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:11:41.735]    <block atomic="false" info="">
[00:11:41.735]      Sequence("CheckID");
[00:11:41.735]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:11:41.735]          <block atomic="false" info="">
[00:11:41.735]            __var pidr1 = 0;
[00:11:41.736]              // -> [pidr1 <= 0x00000000]
[00:11:41.736]            __var pidr2 = 0;
[00:11:41.736]              // -> [pidr2 <= 0x00000000]
[00:11:41.736]            __var jep106id = 0;
[00:11:41.736]              // -> [jep106id <= 0x00000000]
[00:11:41.736]            __var ROMTableBase = 0;
[00:11:41.736]              // -> [ROMTableBase <= 0x00000000]
[00:11:41.737]            __ap = 0;      // AHB-AP
[00:11:41.737]              // -> [__ap <= 0x00000000]
[00:11:41.737]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:11:41.737]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.737]              // -> [ROMTableBase <= 0xE00FD000]
[00:11:41.737]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:11:41.738]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.738]              // -> [pidr1 <= 0x00000004]
[00:11:41.738]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:11:41.739]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.739]              // -> [pidr2 <= 0x0000001A]
[00:11:41.739]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:11:41.739]              // -> [jep106id <= 0x00000020]
[00:11:41.739]          </block>
[00:11:41.740]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:11:41.740]            // if-block "jep106id != 0x20"
[00:11:41.740]              // =>  FALSE
[00:11:41.740]            // skip if-block "jep106id != 0x20"
[00:11:41.740]          </control>
[00:11:41.740]        </sequence>
[00:11:41.740]    </block>
[00:11:41.740]  </sequence>
[00:11:41.741]  
[00:11:41.755]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:11:41.755]  
[00:11:41.756]  <debugvars>
[00:11:41.756]    // Pre-defined
[00:11:41.756]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:11:41.756]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:11:41.756]    __dp=0x00000000
[00:11:41.757]    __ap=0x00000000
[00:11:41.757]    __traceout=0x00000000      (Trace Disabled)
[00:11:41.757]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:11:41.757]    __FlashAddr=0x00000000
[00:11:41.757]    __FlashLen=0x00000000
[00:11:41.758]    __FlashArg=0x00000000
[00:11:41.758]    __FlashOp=0x00000000
[00:11:41.758]    __Result=0x00000000
[00:11:41.758]    
[00:11:41.758]    // User-defined
[00:11:41.758]    DbgMCU_CR=0x00000007
[00:11:41.758]    DbgMCU_APB1_Fz=0x00000000
[00:11:41.759]    DbgMCU_APB2_Fz=0x00000000
[00:11:41.759]    TraceClk_Pin=0x00040002
[00:11:41.759]    TraceD0_Pin=0x00040003
[00:11:41.759]    TraceD1_Pin=0x00040004
[00:11:41.759]    TraceD2_Pin=0x00040005
[00:11:41.759]    TraceD3_Pin=0x00040006
[00:11:41.760]  </debugvars>
[00:11:41.760]  
[00:11:41.760]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:11:41.760]    <block atomic="false" info="">
[00:11:41.760]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:11:41.761]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.761]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:11:41.761]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.762]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:11:41.762]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.762]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:11:41.763]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:41.763]    </block>
[00:11:41.763]  </sequence>
[00:11:41.763]  
[00:13:37.969]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:13:37.969]  
[00:13:37.969]  <debugvars>
[00:13:37.970]    // Pre-defined
[00:13:37.970]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:13:37.970]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:13:37.970]    __dp=0x00000000
[00:13:37.970]    __ap=0x00000000
[00:13:37.970]    __traceout=0x00000000      (Trace Disabled)
[00:13:37.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:13:37.971]    __FlashAddr=0x00000000
[00:13:37.971]    __FlashLen=0x00000000
[00:13:37.971]    __FlashArg=0x00000000
[00:13:37.971]    __FlashOp=0x00000000
[00:13:37.971]    __Result=0x00000000
[00:13:37.972]    
[00:13:37.972]    // User-defined
[00:13:37.972]    DbgMCU_CR=0x00000007
[00:13:37.972]    DbgMCU_APB1_Fz=0x00000000
[00:13:37.972]    DbgMCU_APB2_Fz=0x00000000
[00:13:37.972]    TraceClk_Pin=0x00040002
[00:13:37.972]    TraceD0_Pin=0x00040003
[00:13:37.973]    TraceD1_Pin=0x00040004
[00:13:37.973]    TraceD2_Pin=0x00040005
[00:13:37.973]    TraceD3_Pin=0x00040006
[00:13:37.973]  </debugvars>
[00:13:37.973]  
[00:13:37.973]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:13:37.973]    <block atomic="false" info="">
[00:13:37.974]      Sequence("CheckID");
[00:13:37.974]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:13:37.974]          <block atomic="false" info="">
[00:13:37.974]            __var pidr1 = 0;
[00:13:37.974]              // -> [pidr1 <= 0x00000000]
[00:13:37.974]            __var pidr2 = 0;
[00:13:37.974]              // -> [pidr2 <= 0x00000000]
[00:13:37.975]            __var jep106id = 0;
[00:13:37.975]              // -> [jep106id <= 0x00000000]
[00:13:37.975]            __var ROMTableBase = 0;
[00:13:37.975]              // -> [ROMTableBase <= 0x00000000]
[00:13:37.975]            __ap = 0;      // AHB-AP
[00:13:37.975]              // -> [__ap <= 0x00000000]
[00:13:37.975]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:13:37.976]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:13:37.976]              // -> [ROMTableBase <= 0xE00FD000]
[00:13:37.976]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:13:37.977]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:13:37.977]              // -> [pidr1 <= 0x00000004]
[00:13:37.977]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:13:37.977]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:13:37.977]              // -> [pidr2 <= 0x0000001A]
[00:13:37.978]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:13:37.978]              // -> [jep106id <= 0x00000020]
[00:13:37.978]          </block>
[00:13:37.978]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:13:37.978]            // if-block "jep106id != 0x20"
[00:13:37.978]              // =>  FALSE
[00:13:37.978]            // skip if-block "jep106id != 0x20"
[00:13:37.978]          </control>
[00:13:37.979]        </sequence>
[00:13:37.979]    </block>
[00:13:37.979]  </sequence>
[00:13:37.979]  
[00:13:37.994]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:13:37.994]  
[00:13:37.994]  <debugvars>
[00:13:37.994]    // Pre-defined
[00:13:37.994]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:13:37.995]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:13:37.995]    __dp=0x00000000
[00:13:37.995]    __ap=0x00000000
[00:13:37.995]    __traceout=0x00000000      (Trace Disabled)
[00:13:37.996]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:13:37.996]    __FlashAddr=0x00000000
[00:13:37.996]    __FlashLen=0x00000000
[00:13:37.996]    __FlashArg=0x00000000
[00:13:37.996]    __FlashOp=0x00000000
[00:13:37.997]    __Result=0x00000000
[00:13:37.997]    
[00:13:37.997]    // User-defined
[00:13:37.997]    DbgMCU_CR=0x00000007
[00:13:37.997]    DbgMCU_APB1_Fz=0x00000000
[00:13:37.997]    DbgMCU_APB2_Fz=0x00000000
[00:13:37.998]    TraceClk_Pin=0x00040002
[00:13:37.998]    TraceD0_Pin=0x00040003
[00:13:37.998]    TraceD1_Pin=0x00040004
[00:13:37.998]    TraceD2_Pin=0x00040005
[00:13:37.998]    TraceD3_Pin=0x00040006
[00:13:37.998]  </debugvars>
[00:13:37.998]  
[00:13:37.999]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:13:37.999]    <block atomic="false" info="">
[00:13:37.999]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:13:37.999]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:38.000]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:13:38.000]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:38.000]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:13:38.001]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:38.001]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:13:38.001]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:38.001]    </block>
[00:13:38.002]  </sequence>
[00:13:38.002]  
[00:13:39.307]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:13:39.307]  
[00:13:39.307]  <debugvars>
[00:13:39.307]    // Pre-defined
[00:13:39.307]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:13:39.307]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:13:39.307]    __dp=0x00000000
[00:13:39.307]    __ap=0x00000000
[00:13:39.308]    __traceout=0x00000000      (Trace Disabled)
[00:13:39.308]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:13:39.308]    __FlashAddr=0x00000000
[00:13:39.308]    __FlashLen=0x00000000
[00:13:39.308]    __FlashArg=0x00000000
[00:13:39.308]    __FlashOp=0x00000000
[00:13:39.308]    __Result=0x00000000
[00:13:39.308]    
[00:13:39.308]    // User-defined
[00:13:39.309]    DbgMCU_CR=0x00000007
[00:13:39.309]    DbgMCU_APB1_Fz=0x00000000
[00:13:39.309]    DbgMCU_APB2_Fz=0x00000000
[00:13:39.309]    TraceClk_Pin=0x00040002
[00:13:39.309]    TraceD0_Pin=0x00040003
[00:13:39.309]    TraceD1_Pin=0x00040004
[00:13:39.309]    TraceD2_Pin=0x00040005
[00:13:39.309]    TraceD3_Pin=0x00040006
[00:13:39.310]  </debugvars>
[00:13:39.310]  
[00:13:39.310]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:13:39.310]    <block atomic="false" info="">
[00:13:39.310]      Sequence("CheckID");
[00:13:39.310]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:13:39.310]          <block atomic="false" info="">
[00:13:39.310]            __var pidr1 = 0;
[00:13:39.311]              // -> [pidr1 <= 0x00000000]
[00:13:39.311]            __var pidr2 = 0;
[00:13:39.311]              // -> [pidr2 <= 0x00000000]
[00:13:39.311]            __var jep106id = 0;
[00:13:39.311]              // -> [jep106id <= 0x00000000]
[00:13:39.311]            __var ROMTableBase = 0;
[00:13:39.311]              // -> [ROMTableBase <= 0x00000000]
[00:13:39.312]            __ap = 0;      // AHB-AP
[00:13:39.312]              // -> [__ap <= 0x00000000]
[00:13:39.312]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:13:39.312]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.312]              // -> [ROMTableBase <= 0xE00FD000]
[00:13:39.313]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:13:39.313]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.313]              // -> [pidr1 <= 0x00000004]
[00:13:39.314]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:13:39.314]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.314]              // -> [pidr2 <= 0x0000001A]
[00:13:39.314]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:13:39.314]              // -> [jep106id <= 0x00000020]
[00:13:39.315]          </block>
[00:13:39.315]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:13:39.315]            // if-block "jep106id != 0x20"
[00:13:39.315]              // =>  FALSE
[00:13:39.315]            // skip if-block "jep106id != 0x20"
[00:13:39.315]          </control>
[00:13:39.315]        </sequence>
[00:13:39.315]    </block>
[00:13:39.316]  </sequence>
[00:13:39.316]  
[00:13:39.330]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:13:39.330]  
[00:13:39.330]  <debugvars>
[00:13:39.330]    // Pre-defined
[00:13:39.331]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:13:39.331]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:13:39.331]    __dp=0x00000000
[00:13:39.331]    __ap=0x00000000
[00:13:39.331]    __traceout=0x00000000      (Trace Disabled)
[00:13:39.331]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:13:39.331]    __FlashAddr=0x00000000
[00:13:39.331]    __FlashLen=0x00000000
[00:13:39.332]    __FlashArg=0x00000000
[00:13:39.332]    __FlashOp=0x00000000
[00:13:39.332]    __Result=0x00000000
[00:13:39.332]    
[00:13:39.332]    // User-defined
[00:13:39.332]    DbgMCU_CR=0x00000007
[00:13:39.332]    DbgMCU_APB1_Fz=0x00000000
[00:13:39.332]    DbgMCU_APB2_Fz=0x00000000
[00:13:39.332]    TraceClk_Pin=0x00040002
[00:13:39.333]    TraceD0_Pin=0x00040003
[00:13:39.333]    TraceD1_Pin=0x00040004
[00:13:39.333]    TraceD2_Pin=0x00040005
[00:13:39.333]    TraceD3_Pin=0x00040006
[00:13:39.333]  </debugvars>
[00:13:39.333]  
[00:13:39.333]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:13:39.333]    <block atomic="false" info="">
[00:13:39.334]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:13:39.334]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.334]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:13:39.335]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.335]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:13:39.335]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.335]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:13:39.336]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:13:39.336]    </block>
[00:13:39.336]  </sequence>
[00:13:39.336]  
[00:14:43.000]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:14:43.000]  
[00:14:43.000]  <debugvars>
[00:14:43.000]    // Pre-defined
[00:14:43.001]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:14:43.001]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:14:43.001]    __dp=0x00000000
[00:14:43.001]    __ap=0x00000000
[00:14:43.002]    __traceout=0x00000000      (Trace Disabled)
[00:14:43.002]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:14:43.002]    __FlashAddr=0x00000000
[00:14:43.002]    __FlashLen=0x00000000
[00:14:43.002]    __FlashArg=0x00000000
[00:14:43.003]    __FlashOp=0x00000000
[00:14:43.003]    __Result=0x00000000
[00:14:43.003]    
[00:14:43.003]    // User-defined
[00:14:43.003]    DbgMCU_CR=0x00000007
[00:14:43.003]    DbgMCU_APB1_Fz=0x00000000
[00:14:43.004]    DbgMCU_APB2_Fz=0x00000000
[00:14:43.004]    TraceClk_Pin=0x00040002
[00:14:43.004]    TraceD0_Pin=0x00040003
[00:14:43.004]    TraceD1_Pin=0x00040004
[00:14:43.004]    TraceD2_Pin=0x00040005
[00:14:43.005]    TraceD3_Pin=0x00040006
[00:14:43.005]  </debugvars>
[00:14:43.005]  
[00:14:43.005]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:14:43.005]    <block atomic="false" info="">
[00:14:43.005]      Sequence("CheckID");
[00:14:43.005]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:14:43.006]          <block atomic="false" info="">
[00:14:43.006]            __var pidr1 = 0;
[00:14:43.006]              // -> [pidr1 <= 0x00000000]
[00:14:43.006]            __var pidr2 = 0;
[00:14:43.006]              // -> [pidr2 <= 0x00000000]
[00:14:43.006]            __var jep106id = 0;
[00:14:43.006]              // -> [jep106id <= 0x00000000]
[00:14:43.006]            __var ROMTableBase = 0;
[00:14:43.007]              // -> [ROMTableBase <= 0x00000000]
[00:14:43.007]            __ap = 0;      // AHB-AP
[00:14:43.007]              // -> [__ap <= 0x00000000]
[00:14:43.007]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:14:43.007]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.007]              // -> [ROMTableBase <= 0xE00FD000]
[00:14:43.007]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:14:43.008]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.008]              // -> [pidr1 <= 0x00000004]
[00:14:43.008]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:14:43.009]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.009]              // -> [pidr2 <= 0x0000001A]
[00:14:43.009]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:14:43.009]              // -> [jep106id <= 0x00000020]
[00:14:43.009]          </block>
[00:14:43.009]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:14:43.009]            // if-block "jep106id != 0x20"
[00:14:43.010]              // =>  FALSE
[00:14:43.010]            // skip if-block "jep106id != 0x20"
[00:14:43.010]          </control>
[00:14:43.010]        </sequence>
[00:14:43.010]    </block>
[00:14:43.010]  </sequence>
[00:14:43.010]  
[00:14:43.026]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:14:43.026]  
[00:14:43.026]  <debugvars>
[00:14:43.027]    // Pre-defined
[00:14:43.027]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:14:43.027]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:14:43.027]    __dp=0x00000000
[00:14:43.027]    __ap=0x00000000
[00:14:43.027]    __traceout=0x00000000      (Trace Disabled)
[00:14:43.028]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:14:43.028]    __FlashAddr=0x00000000
[00:14:43.028]    __FlashLen=0x00000000
[00:14:43.028]    __FlashArg=0x00000000
[00:14:43.028]    __FlashOp=0x00000000
[00:14:43.028]    __Result=0x00000000
[00:14:43.029]    
[00:14:43.029]    // User-defined
[00:14:43.029]    DbgMCU_CR=0x00000007
[00:14:43.029]    DbgMCU_APB1_Fz=0x00000000
[00:14:43.029]    DbgMCU_APB2_Fz=0x00000000
[00:14:43.029]    TraceClk_Pin=0x00040002
[00:14:43.029]    TraceD0_Pin=0x00040003
[00:14:43.029]    TraceD1_Pin=0x00040004
[00:14:43.030]    TraceD2_Pin=0x00040005
[00:14:43.030]    TraceD3_Pin=0x00040006
[00:14:43.030]  </debugvars>
[00:14:43.030]  
[00:14:43.030]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:14:43.030]    <block atomic="false" info="">
[00:14:43.030]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:14:43.031]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.031]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:14:43.032]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.032]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:14:43.032]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.032]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:14:43.033]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:43.033]    </block>
[00:14:43.033]  </sequence>
[00:14:43.033]  
[00:14:44.377]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:14:44.377]  
[00:14:44.377]  <debugvars>
[00:14:44.377]    // Pre-defined
[00:14:44.377]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:14:44.377]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:14:44.378]    __dp=0x00000000
[00:14:44.378]    __ap=0x00000000
[00:14:44.378]    __traceout=0x00000000      (Trace Disabled)
[00:14:44.378]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:14:44.378]    __FlashAddr=0x00000000
[00:14:44.378]    __FlashLen=0x00000000
[00:14:44.378]    __FlashArg=0x00000000
[00:14:44.378]    __FlashOp=0x00000000
[00:14:44.378]    __Result=0x00000000
[00:14:44.378]    
[00:14:44.378]    // User-defined
[00:14:44.378]    DbgMCU_CR=0x00000007
[00:14:44.378]    DbgMCU_APB1_Fz=0x00000000
[00:14:44.378]    DbgMCU_APB2_Fz=0x00000000
[00:14:44.378]    TraceClk_Pin=0x00040002
[00:14:44.379]    TraceD0_Pin=0x00040003
[00:14:44.379]    TraceD1_Pin=0x00040004
[00:14:44.379]    TraceD2_Pin=0x00040005
[00:14:44.379]    TraceD3_Pin=0x00040006
[00:14:44.379]  </debugvars>
[00:14:44.379]  
[00:14:44.379]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:14:44.379]    <block atomic="false" info="">
[00:14:44.379]      Sequence("CheckID");
[00:14:44.380]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:14:44.380]          <block atomic="false" info="">
[00:14:44.380]            __var pidr1 = 0;
[00:14:44.380]              // -> [pidr1 <= 0x00000000]
[00:14:44.380]            __var pidr2 = 0;
[00:14:44.380]              // -> [pidr2 <= 0x00000000]
[00:14:44.380]            __var jep106id = 0;
[00:14:44.380]              // -> [jep106id <= 0x00000000]
[00:14:44.381]            __var ROMTableBase = 0;
[00:14:44.381]              // -> [ROMTableBase <= 0x00000000]
[00:14:44.381]            __ap = 0;      // AHB-AP
[00:14:44.381]              // -> [__ap <= 0x00000000]
[00:14:44.381]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:14:44.381]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.382]              // -> [ROMTableBase <= 0xE00FD000]
[00:14:44.382]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:14:44.382]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.382]              // -> [pidr1 <= 0x00000004]
[00:14:44.382]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:14:44.383]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.383]              // -> [pidr2 <= 0x0000001A]
[00:14:44.383]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:14:44.383]              // -> [jep106id <= 0x00000020]
[00:14:44.383]          </block>
[00:14:44.383]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:14:44.384]            // if-block "jep106id != 0x20"
[00:14:44.384]              // =>  FALSE
[00:14:44.384]            // skip if-block "jep106id != 0x20"
[00:14:44.384]          </control>
[00:14:44.384]        </sequence>
[00:14:44.384]    </block>
[00:14:44.384]  </sequence>
[00:14:44.384]  
[00:14:44.399]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:14:44.399]  
[00:14:44.399]  <debugvars>
[00:14:44.399]    // Pre-defined
[00:14:44.399]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:14:44.399]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:14:44.400]    __dp=0x00000000
[00:14:44.400]    __ap=0x00000000
[00:14:44.400]    __traceout=0x00000000      (Trace Disabled)
[00:14:44.400]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:14:44.400]    __FlashAddr=0x00000000
[00:14:44.400]    __FlashLen=0x00000000
[00:14:44.400]    __FlashArg=0x00000000
[00:14:44.400]    __FlashOp=0x00000000
[00:14:44.400]    __Result=0x00000000
[00:14:44.401]    
[00:14:44.401]    // User-defined
[00:14:44.401]    DbgMCU_CR=0x00000007
[00:14:44.401]    DbgMCU_APB1_Fz=0x00000000
[00:14:44.401]    DbgMCU_APB2_Fz=0x00000000
[00:14:44.401]    TraceClk_Pin=0x00040002
[00:14:44.401]    TraceD0_Pin=0x00040003
[00:14:44.401]    TraceD1_Pin=0x00040004
[00:14:44.401]    TraceD2_Pin=0x00040005
[00:14:44.402]    TraceD3_Pin=0x00040006
[00:14:44.402]  </debugvars>
[00:14:44.402]  
[00:14:44.402]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:14:44.402]    <block atomic="false" info="">
[00:14:44.402]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:14:44.403]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.403]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:14:44.403]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.403]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:14:44.404]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.404]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:14:44.404]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:14:44.404]    </block>
[00:14:44.405]  </sequence>
[00:14:44.405]  
[00:16:03.172]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:16:03.172]  
[00:16:03.172]  <debugvars>
[00:16:03.172]    // Pre-defined
[00:16:03.173]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:16:03.173]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:16:03.173]    __dp=0x00000000
[00:16:03.173]    __ap=0x00000000
[00:16:03.173]    __traceout=0x00000000      (Trace Disabled)
[00:16:03.173]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:16:03.174]    __FlashAddr=0x00000000
[00:16:03.174]    __FlashLen=0x00000000
[00:16:03.174]    __FlashArg=0x00000000
[00:16:03.174]    __FlashOp=0x00000000
[00:16:03.174]    __Result=0x00000000
[00:16:03.174]    
[00:16:03.174]    // User-defined
[00:16:03.175]    DbgMCU_CR=0x00000007
[00:16:03.175]    DbgMCU_APB1_Fz=0x00000000
[00:16:03.175]    DbgMCU_APB2_Fz=0x00000000
[00:16:03.175]    TraceClk_Pin=0x00040002
[00:16:03.175]    TraceD0_Pin=0x00040003
[00:16:03.175]    TraceD1_Pin=0x00040004
[00:16:03.176]    TraceD2_Pin=0x00040005
[00:16:03.176]    TraceD3_Pin=0x00040006
[00:16:03.176]  </debugvars>
[00:16:03.176]  
[00:16:03.176]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:16:03.176]    <block atomic="false" info="">
[00:16:03.176]      Sequence("CheckID");
[00:16:03.177]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:16:03.177]          <block atomic="false" info="">
[00:16:03.177]            __var pidr1 = 0;
[00:16:03.177]              // -> [pidr1 <= 0x00000000]
[00:16:03.177]            __var pidr2 = 0;
[00:16:03.177]              // -> [pidr2 <= 0x00000000]
[00:16:03.177]            __var jep106id = 0;
[00:16:03.178]              // -> [jep106id <= 0x00000000]
[00:16:03.178]            __var ROMTableBase = 0;
[00:16:03.178]              // -> [ROMTableBase <= 0x00000000]
[00:16:03.178]            __ap = 0;      // AHB-AP
[00:16:03.178]              // -> [__ap <= 0x00000000]
[00:16:03.178]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:16:03.179]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.179]              // -> [ROMTableBase <= 0xE00FD000]
[00:16:03.179]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:16:03.179]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.180]              // -> [pidr1 <= 0x00000004]
[00:16:03.180]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:16:03.180]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.180]              // -> [pidr2 <= 0x0000001A]
[00:16:03.180]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:16:03.180]              // -> [jep106id <= 0x00000020]
[00:16:03.180]          </block>
[00:16:03.180]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:16:03.180]            // if-block "jep106id != 0x20"
[00:16:03.180]              // =>  FALSE
[00:16:03.180]            // skip if-block "jep106id != 0x20"
[00:16:03.180]          </control>
[00:16:03.180]        </sequence>
[00:16:03.181]    </block>
[00:16:03.181]  </sequence>
[00:16:03.181]  
[00:16:03.196]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:16:03.196]  
[00:16:03.197]  <debugvars>
[00:16:03.197]    // Pre-defined
[00:16:03.197]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:16:03.197]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:16:03.197]    __dp=0x00000000
[00:16:03.198]    __ap=0x00000000
[00:16:03.198]    __traceout=0x00000000      (Trace Disabled)
[00:16:03.198]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:16:03.198]    __FlashAddr=0x00000000
[00:16:03.198]    __FlashLen=0x00000000
[00:16:03.199]    __FlashArg=0x00000000
[00:16:03.199]    __FlashOp=0x00000000
[00:16:03.199]    __Result=0x00000000
[00:16:03.199]    
[00:16:03.199]    // User-defined
[00:16:03.200]    DbgMCU_CR=0x00000007
[00:16:03.200]    DbgMCU_APB1_Fz=0x00000000
[00:16:03.200]    DbgMCU_APB2_Fz=0x00000000
[00:16:03.200]    TraceClk_Pin=0x00040002
[00:16:03.200]    TraceD0_Pin=0x00040003
[00:16:03.200]    TraceD1_Pin=0x00040004
[00:16:03.201]    TraceD2_Pin=0x00040005
[00:16:03.201]    TraceD3_Pin=0x00040006
[00:16:03.201]  </debugvars>
[00:16:03.201]  
[00:16:03.201]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:16:03.201]    <block atomic="false" info="">
[00:16:03.201]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:16:03.202]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.202]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:16:03.203]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.203]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:16:03.203]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.203]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:16:03.204]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:03.204]    </block>
[00:16:03.204]  </sequence>
[00:16:03.204]  
[00:16:33.541]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:16:33.541]  
[00:16:33.541]  <debugvars>
[00:16:33.541]    // Pre-defined
[00:16:33.542]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:16:33.542]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:16:33.542]    __dp=0x00000000
[00:16:33.542]    __ap=0x00000000
[00:16:33.542]    __traceout=0x00000000      (Trace Disabled)
[00:16:33.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:16:33.543]    __FlashAddr=0x00000000
[00:16:33.543]    __FlashLen=0x00000000
[00:16:33.543]    __FlashArg=0x00000000
[00:16:33.543]    __FlashOp=0x00000000
[00:16:33.543]    __Result=0x00000000
[00:16:33.543]    
[00:16:33.543]    // User-defined
[00:16:33.544]    DbgMCU_CR=0x00000007
[00:16:33.544]    DbgMCU_APB1_Fz=0x00000000
[00:16:33.544]    DbgMCU_APB2_Fz=0x00000000
[00:16:33.544]    TraceClk_Pin=0x00040002
[00:16:33.544]    TraceD0_Pin=0x00040003
[00:16:33.544]    TraceD1_Pin=0x00040004
[00:16:33.545]    TraceD2_Pin=0x00040005
[00:16:33.545]    TraceD3_Pin=0x00040006
[00:16:33.545]  </debugvars>
[00:16:33.545]  
[00:16:33.545]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:16:33.545]    <block atomic="false" info="">
[00:16:33.546]      Sequence("CheckID");
[00:16:33.546]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:16:33.546]          <block atomic="false" info="">
[00:16:33.546]            __var pidr1 = 0;
[00:16:33.546]              // -> [pidr1 <= 0x00000000]
[00:16:33.546]            __var pidr2 = 0;
[00:16:33.547]              // -> [pidr2 <= 0x00000000]
[00:16:33.547]            __var jep106id = 0;
[00:16:33.547]              // -> [jep106id <= 0x00000000]
[00:16:33.547]            __var ROMTableBase = 0;
[00:16:33.547]              // -> [ROMTableBase <= 0x00000000]
[00:16:33.547]            __ap = 0;      // AHB-AP
[00:16:33.548]              // -> [__ap <= 0x00000000]
[00:16:33.548]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:16:33.548]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.548]              // -> [ROMTableBase <= 0xE00FD000]
[00:16:33.549]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:16:33.549]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.549]              // -> [pidr1 <= 0x00000004]
[00:16:33.549]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:16:33.550]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.550]              // -> [pidr2 <= 0x0000001A]
[00:16:33.550]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:16:33.550]              // -> [jep106id <= 0x00000020]
[00:16:33.550]          </block>
[00:16:33.551]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:16:33.551]            // if-block "jep106id != 0x20"
[00:16:33.551]              // =>  FALSE
[00:16:33.551]            // skip if-block "jep106id != 0x20"
[00:16:33.551]          </control>
[00:16:33.551]        </sequence>
[00:16:33.551]    </block>
[00:16:33.552]  </sequence>
[00:16:33.552]  
[00:16:33.566]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:16:33.566]  
[00:16:33.566]  <debugvars>
[00:16:33.566]    // Pre-defined
[00:16:33.567]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:16:33.567]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:16:33.567]    __dp=0x00000000
[00:16:33.567]    __ap=0x00000000
[00:16:33.567]    __traceout=0x00000000      (Trace Disabled)
[00:16:33.568]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:16:33.568]    __FlashAddr=0x00000000
[00:16:33.568]    __FlashLen=0x00000000
[00:16:33.568]    __FlashArg=0x00000000
[00:16:33.568]    __FlashOp=0x00000000
[00:16:33.569]    __Result=0x00000000
[00:16:33.569]    
[00:16:33.569]    // User-defined
[00:16:33.569]    DbgMCU_CR=0x00000007
[00:16:33.569]    DbgMCU_APB1_Fz=0x00000000
[00:16:33.569]    DbgMCU_APB2_Fz=0x00000000
[00:16:33.570]    TraceClk_Pin=0x00040002
[00:16:33.570]    TraceD0_Pin=0x00040003
[00:16:33.570]    TraceD1_Pin=0x00040004
[00:16:33.570]    TraceD2_Pin=0x00040005
[00:16:33.570]    TraceD3_Pin=0x00040006
[00:16:33.570]  </debugvars>
[00:16:33.571]  
[00:16:33.571]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:16:33.571]    <block atomic="false" info="">
[00:16:33.571]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:16:33.572]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.572]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:16:33.573]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.573]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:16:33.573]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.574]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:16:33.574]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:16:33.574]    </block>
[00:16:33.574]  </sequence>
[00:16:33.575]  
[00:23:39.753]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:23:39.753]  
[00:23:39.753]  <debugvars>
[00:23:39.753]    // Pre-defined
[00:23:39.753]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:23:39.754]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:23:39.754]    __dp=0x00000000
[00:23:39.754]    __ap=0x00000000
[00:23:39.754]    __traceout=0x00000000      (Trace Disabled)
[00:23:39.754]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:23:39.754]    __FlashAddr=0x00000000
[00:23:39.754]    __FlashLen=0x00000000
[00:23:39.755]    __FlashArg=0x00000000
[00:23:39.755]    __FlashOp=0x00000000
[00:23:39.755]    __Result=0x00000000
[00:23:39.755]    
[00:23:39.755]    // User-defined
[00:23:39.755]    DbgMCU_CR=0x00000007
[00:23:39.755]    DbgMCU_APB1_Fz=0x00000000
[00:23:39.755]    DbgMCU_APB2_Fz=0x00000000
[00:23:39.756]    TraceClk_Pin=0x00040002
[00:23:39.756]    TraceD0_Pin=0x00040003
[00:23:39.756]    TraceD1_Pin=0x00040004
[00:23:39.756]    TraceD2_Pin=0x00040005
[00:23:39.756]    TraceD3_Pin=0x00040006
[00:23:39.756]  </debugvars>
[00:23:39.756]  
[00:23:39.757]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:23:39.757]    <block atomic="false" info="">
[00:23:39.757]      Sequence("CheckID");
[00:23:39.757]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:23:39.757]          <block atomic="false" info="">
[00:23:39.757]            __var pidr1 = 0;
[00:23:39.757]              // -> [pidr1 <= 0x00000000]
[00:23:39.758]            __var pidr2 = 0;
[00:23:39.758]              // -> [pidr2 <= 0x00000000]
[00:23:39.758]            __var jep106id = 0;
[00:23:39.758]              // -> [jep106id <= 0x00000000]
[00:23:39.758]            __var ROMTableBase = 0;
[00:23:39.758]              // -> [ROMTableBase <= 0x00000000]
[00:23:39.758]            __ap = 0;      // AHB-AP
[00:23:39.759]              // -> [__ap <= 0x00000000]
[00:23:39.759]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:23:39.759]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.759]              // -> [ROMTableBase <= 0xE00FD000]
[00:23:39.759]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:23:39.760]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.760]              // -> [pidr1 <= 0x00000004]
[00:23:39.760]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:23:39.761]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.761]              // -> [pidr2 <= 0x0000001A]
[00:23:39.761]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:23:39.761]              // -> [jep106id <= 0x00000020]
[00:23:39.761]          </block>
[00:23:39.761]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:23:39.761]            // if-block "jep106id != 0x20"
[00:23:39.761]              // =>  FALSE
[00:23:39.761]            // skip if-block "jep106id != 0x20"
[00:23:39.762]          </control>
[00:23:39.762]        </sequence>
[00:23:39.762]    </block>
[00:23:39.762]  </sequence>
[00:23:39.762]  
[00:23:39.777]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:23:39.777]  
[00:23:39.777]  <debugvars>
[00:23:39.777]    // Pre-defined
[00:23:39.777]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:23:39.777]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:23:39.778]    __dp=0x00000000
[00:23:39.778]    __ap=0x00000000
[00:23:39.778]    __traceout=0x00000000      (Trace Disabled)
[00:23:39.778]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:23:39.778]    __FlashAddr=0x00000000
[00:23:39.779]    __FlashLen=0x00000000
[00:23:39.779]    __FlashArg=0x00000000
[00:23:39.779]    __FlashOp=0x00000000
[00:23:39.779]    __Result=0x00000000
[00:23:39.779]    
[00:23:39.779]    // User-defined
[00:23:39.780]    DbgMCU_CR=0x00000007
[00:23:39.780]    DbgMCU_APB1_Fz=0x00000000
[00:23:39.780]    DbgMCU_APB2_Fz=0x00000000
[00:23:39.780]    TraceClk_Pin=0x00040002
[00:23:39.780]    TraceD0_Pin=0x00040003
[00:23:39.780]    TraceD1_Pin=0x00040004
[00:23:39.781]    TraceD2_Pin=0x00040005
[00:23:39.781]    TraceD3_Pin=0x00040006
[00:23:39.781]  </debugvars>
[00:23:39.781]  
[00:23:39.781]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:23:39.782]    <block atomic="false" info="">
[00:23:39.782]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:23:39.782]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.783]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:23:39.783]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.783]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:23:39.784]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.784]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:23:39.785]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:39.785]    </block>
[00:23:39.785]  </sequence>
[00:23:39.785]  
[00:24:10.349]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:24:10.349]  
[00:24:10.350]  <debugvars>
[00:24:10.350]    // Pre-defined
[00:24:10.350]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:10.350]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:10.350]    __dp=0x00000000
[00:24:10.351]    __ap=0x00000000
[00:24:10.351]    __traceout=0x00000000      (Trace Disabled)
[00:24:10.351]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:10.351]    __FlashAddr=0x00000000
[00:24:10.351]    __FlashLen=0x00000000
[00:24:10.351]    __FlashArg=0x00000000
[00:24:10.352]    __FlashOp=0x00000000
[00:24:10.352]    __Result=0x00000000
[00:24:10.352]    
[00:24:10.352]    // User-defined
[00:24:10.352]    DbgMCU_CR=0x00000007
[00:24:10.352]    DbgMCU_APB1_Fz=0x00000000
[00:24:10.352]    DbgMCU_APB2_Fz=0x00000000
[00:24:10.353]    TraceClk_Pin=0x00040002
[00:24:10.353]    TraceD0_Pin=0x00040003
[00:24:10.353]    TraceD1_Pin=0x00040004
[00:24:10.353]    TraceD2_Pin=0x00040005
[00:24:10.353]    TraceD3_Pin=0x00040006
[00:24:10.353]  </debugvars>
[00:24:10.353]  
[00:24:10.354]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:24:10.354]    <block atomic="false" info="">
[00:24:10.354]      Sequence("CheckID");
[00:24:10.354]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:24:10.354]          <block atomic="false" info="">
[00:24:10.354]            __var pidr1 = 0;
[00:24:10.355]              // -> [pidr1 <= 0x00000000]
[00:24:10.355]            __var pidr2 = 0;
[00:24:10.355]              // -> [pidr2 <= 0x00000000]
[00:24:10.355]            __var jep106id = 0;
[00:24:10.355]              // -> [jep106id <= 0x00000000]
[00:24:10.355]            __var ROMTableBase = 0;
[00:24:10.355]              // -> [ROMTableBase <= 0x00000000]
[00:24:10.355]            __ap = 0;      // AHB-AP
[00:24:10.355]              // -> [__ap <= 0x00000000]
[00:24:10.356]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:24:10.356]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.356]              // -> [ROMTableBase <= 0xE00FD000]
[00:24:10.356]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:24:10.357]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.357]              // -> [pidr1 <= 0x00000004]
[00:24:10.357]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:24:10.357]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.358]              // -> [pidr2 <= 0x0000001A]
[00:24:10.358]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:24:10.358]              // -> [jep106id <= 0x00000020]
[00:24:10.358]          </block>
[00:24:10.358]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:24:10.358]            // if-block "jep106id != 0x20"
[00:24:10.358]              // =>  FALSE
[00:24:10.358]            // skip if-block "jep106id != 0x20"
[00:24:10.359]          </control>
[00:24:10.359]        </sequence>
[00:24:10.359]    </block>
[00:24:10.359]  </sequence>
[00:24:10.359]  
[00:24:10.373]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:24:10.373]  
[00:24:10.374]  <debugvars>
[00:24:10.374]    // Pre-defined
[00:24:10.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:10.374]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:10.374]    __dp=0x00000000
[00:24:10.374]    __ap=0x00000000
[00:24:10.375]    __traceout=0x00000000      (Trace Disabled)
[00:24:10.375]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:10.375]    __FlashAddr=0x00000000
[00:24:10.375]    __FlashLen=0x00000000
[00:24:10.375]    __FlashArg=0x00000000
[00:24:10.375]    __FlashOp=0x00000000
[00:24:10.376]    __Result=0x00000000
[00:24:10.376]    
[00:24:10.376]    // User-defined
[00:24:10.376]    DbgMCU_CR=0x00000007
[00:24:10.376]    DbgMCU_APB1_Fz=0x00000000
[00:24:10.376]    DbgMCU_APB2_Fz=0x00000000
[00:24:10.377]    TraceClk_Pin=0x00040002
[00:24:10.377]    TraceD0_Pin=0x00040003
[00:24:10.377]    TraceD1_Pin=0x00040004
[00:24:10.377]    TraceD2_Pin=0x00040005
[00:24:10.377]    TraceD3_Pin=0x00040006
[00:24:10.378]  </debugvars>
[00:24:10.378]  
[00:24:10.378]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:24:10.378]    <block atomic="false" info="">
[00:24:10.378]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:24:10.379]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.379]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:24:10.379]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.380]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:24:10.380]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.380]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:24:10.381]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:10.381]    </block>
[00:24:10.381]  </sequence>
[00:24:10.381]  
[00:31:47.726]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:31:47.726]  
[00:31:47.726]  <debugvars>
[00:31:47.726]    // Pre-defined
[00:31:47.727]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:31:47.727]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:31:47.727]    __dp=0x00000000
[00:31:47.727]    __ap=0x00000000
[00:31:47.727]    __traceout=0x00000000      (Trace Disabled)
[00:31:47.728]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:31:47.728]    __FlashAddr=0x00000000
[00:31:47.728]    __FlashLen=0x00000000
[00:31:47.728]    __FlashArg=0x00000000
[00:31:47.728]    __FlashOp=0x00000000
[00:31:47.729]    __Result=0x00000000
[00:31:47.729]    
[00:31:47.729]    // User-defined
[00:31:47.729]    DbgMCU_CR=0x00000007
[00:31:47.729]    DbgMCU_APB1_Fz=0x00000000
[00:31:47.729]    DbgMCU_APB2_Fz=0x00000000
[00:31:47.729]    TraceClk_Pin=0x00040002
[00:31:47.730]    TraceD0_Pin=0x00040003
[00:31:47.730]    TraceD1_Pin=0x00040004
[00:31:47.730]    TraceD2_Pin=0x00040005
[00:31:47.730]    TraceD3_Pin=0x00040006
[00:31:47.730]  </debugvars>
[00:31:47.731]  
[00:31:47.731]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:31:47.731]    <block atomic="false" info="">
[00:31:47.731]      Sequence("CheckID");
[00:31:47.731]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:31:47.732]          <block atomic="false" info="">
[00:31:47.732]            __var pidr1 = 0;
[00:31:47.732]              // -> [pidr1 <= 0x00000000]
[00:31:47.732]            __var pidr2 = 0;
[00:31:47.732]              // -> [pidr2 <= 0x00000000]
[00:31:47.733]            __var jep106id = 0;
[00:31:47.733]              // -> [jep106id <= 0x00000000]
[00:31:47.733]            __var ROMTableBase = 0;
[00:31:47.733]              // -> [ROMTableBase <= 0x00000000]
[00:31:47.733]            __ap = 0;      // AHB-AP
[00:31:47.733]              // -> [__ap <= 0x00000000]
[00:31:47.734]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:31:47.734]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.734]              // -> [ROMTableBase <= 0xE00FD000]
[00:31:47.734]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:31:47.735]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.735]              // -> [pidr1 <= 0x00000004]
[00:31:47.735]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:31:47.736]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.736]              // -> [pidr2 <= 0x0000001A]
[00:31:47.736]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:31:47.737]              // -> [jep106id <= 0x00000020]
[00:31:47.737]          </block>
[00:31:47.737]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:31:47.737]            // if-block "jep106id != 0x20"
[00:31:47.737]              // =>  FALSE
[00:31:47.737]            // skip if-block "jep106id != 0x20"
[00:31:47.738]          </control>
[00:31:47.738]        </sequence>
[00:31:47.738]    </block>
[00:31:47.738]  </sequence>
[00:31:47.738]  
[00:31:47.754]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:31:47.754]  
[00:31:47.754]  <debugvars>
[00:31:47.754]    // Pre-defined
[00:31:47.754]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:31:47.754]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:31:47.754]    __dp=0x00000000
[00:31:47.755]    __ap=0x00000000
[00:31:47.755]    __traceout=0x00000000      (Trace Disabled)
[00:31:47.755]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:31:47.755]    __FlashAddr=0x00000000
[00:31:47.755]    __FlashLen=0x00000000
[00:31:47.756]    __FlashArg=0x00000000
[00:31:47.756]    __FlashOp=0x00000000
[00:31:47.756]    __Result=0x00000000
[00:31:47.756]    
[00:31:47.756]    // User-defined
[00:31:47.756]    DbgMCU_CR=0x00000007
[00:31:47.756]    DbgMCU_APB1_Fz=0x00000000
[00:31:47.757]    DbgMCU_APB2_Fz=0x00000000
[00:31:47.757]    TraceClk_Pin=0x00040002
[00:31:47.757]    TraceD0_Pin=0x00040003
[00:31:47.757]    TraceD1_Pin=0x00040004
[00:31:47.757]    TraceD2_Pin=0x00040005
[00:31:47.757]    TraceD3_Pin=0x00040006
[00:31:47.758]  </debugvars>
[00:31:47.758]  
[00:31:47.758]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:31:47.758]    <block atomic="false" info="">
[00:31:47.758]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:31:47.759]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.759]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:31:47.759]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.760]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:31:47.760]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.760]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:31:47.761]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:31:47.761]    </block>
[00:31:47.761]  </sequence>
[00:31:47.761]  
[00:49:22.695]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:49:22.695]  
[00:49:22.695]  <debugvars>
[00:49:22.696]    // Pre-defined
[00:49:22.696]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:49:22.696]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:49:22.696]    __dp=0x00000000
[00:49:22.696]    __ap=0x00000000
[00:49:22.697]    __traceout=0x00000000      (Trace Disabled)
[00:49:22.697]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:49:22.697]    __FlashAddr=0x00000000
[00:49:22.697]    __FlashLen=0x00000000
[00:49:22.697]    __FlashArg=0x00000000
[00:49:22.697]    __FlashOp=0x00000000
[00:49:22.698]    __Result=0x00000000
[00:49:22.698]    
[00:49:22.698]    // User-defined
[00:49:22.698]    DbgMCU_CR=0x00000007
[00:49:22.698]    DbgMCU_APB1_Fz=0x00000000
[00:49:22.698]    DbgMCU_APB2_Fz=0x00000000
[00:49:22.699]    TraceClk_Pin=0x00040002
[00:49:22.699]    TraceD0_Pin=0x00040003
[00:49:22.699]    TraceD1_Pin=0x00040004
[00:49:22.699]    TraceD2_Pin=0x00040005
[00:49:22.699]    TraceD3_Pin=0x00040006
[00:49:22.699]  </debugvars>
[00:49:22.699]  
[00:49:22.700]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:49:22.700]    <block atomic="false" info="">
[00:49:22.700]      Sequence("CheckID");
[00:49:22.700]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:49:22.700]          <block atomic="false" info="">
[00:49:22.700]            __var pidr1 = 0;
[00:49:22.701]              // -> [pidr1 <= 0x00000000]
[00:49:22.701]            __var pidr2 = 0;
[00:49:22.701]              // -> [pidr2 <= 0x00000000]
[00:49:22.701]            __var jep106id = 0;
[00:49:22.701]              // -> [jep106id <= 0x00000000]
[00:49:22.701]            __var ROMTableBase = 0;
[00:49:22.701]              // -> [ROMTableBase <= 0x00000000]
[00:49:22.702]            __ap = 0;      // AHB-AP
[00:49:22.702]              // -> [__ap <= 0x00000000]
[00:49:22.702]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:49:22.702]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.703]              // -> [ROMTableBase <= 0xE00FD000]
[00:49:22.703]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:49:22.703]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.703]              // -> [pidr1 <= 0x00000004]
[00:49:22.704]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:49:22.704]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.704]              // -> [pidr2 <= 0x0000001A]
[00:49:22.704]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:49:22.705]              // -> [jep106id <= 0x00000020]
[00:49:22.705]          </block>
[00:49:22.705]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:49:22.705]            // if-block "jep106id != 0x20"
[00:49:22.705]              // =>  FALSE
[00:49:22.705]            // skip if-block "jep106id != 0x20"
[00:49:22.705]          </control>
[00:49:22.706]        </sequence>
[00:49:22.706]    </block>
[00:49:22.706]  </sequence>
[00:49:22.706]  
[00:49:22.721]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:49:22.721]  
[00:49:22.721]  <debugvars>
[00:49:22.722]    // Pre-defined
[00:49:22.722]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:49:22.722]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:49:22.722]    __dp=0x00000000
[00:49:22.722]    __ap=0x00000000
[00:49:22.723]    __traceout=0x00000000      (Trace Disabled)
[00:49:22.723]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:49:22.723]    __FlashAddr=0x00000000
[00:49:22.723]    __FlashLen=0x00000000
[00:49:22.723]    __FlashArg=0x00000000
[00:49:22.723]    __FlashOp=0x00000000
[00:49:22.724]    __Result=0x00000000
[00:49:22.724]    
[00:49:22.724]    // User-defined
[00:49:22.724]    DbgMCU_CR=0x00000007
[00:49:22.724]    DbgMCU_APB1_Fz=0x00000000
[00:49:22.724]    DbgMCU_APB2_Fz=0x00000000
[00:49:22.724]    TraceClk_Pin=0x00040002
[00:49:22.725]    TraceD0_Pin=0x00040003
[00:49:22.725]    TraceD1_Pin=0x00040004
[00:49:22.725]    TraceD2_Pin=0x00040005
[00:49:22.725]    TraceD3_Pin=0x00040006
[00:49:22.725]  </debugvars>
[00:49:22.725]  
[00:49:22.726]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:49:22.726]    <block atomic="false" info="">
[00:49:22.726]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:49:22.726]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.727]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:49:22.727]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.727]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:49:22.728]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.728]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:49:22.728]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:49:22.729]    </block>
[00:49:22.729]  </sequence>
[00:49:22.729]  
[01:14:33.176]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:14:33.176]  
[01:14:33.176]  <debugvars>
[01:14:33.177]    // Pre-defined
[01:14:33.177]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:14:33.177]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:14:33.177]    __dp=0x00000000
[01:14:33.177]    __ap=0x00000000
[01:14:33.177]    __traceout=0x00000001      (SWO Trace)
[01:14:33.178]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:14:33.178]    __FlashAddr=0x00000000
[01:14:33.178]    __FlashLen=0x00000000
[01:14:33.178]    __FlashArg=0x00000000
[01:14:33.178]    __FlashOp=0x00000000
[01:14:33.178]    __Result=0x00000000
[01:14:33.179]    
[01:14:33.179]    // User-defined
[01:14:33.179]    DbgMCU_CR=0x00000007
[01:14:33.179]    DbgMCU_APB1_Fz=0x00000000
[01:14:33.179]    DbgMCU_APB2_Fz=0x00000000
[01:14:33.179]    TraceClk_Pin=0x00040002
[01:14:33.180]    TraceD0_Pin=0x00040003
[01:14:33.180]    TraceD1_Pin=0x00040004
[01:14:33.180]    TraceD2_Pin=0x00040005
[01:14:33.180]    TraceD3_Pin=0x00040006
[01:14:33.180]  </debugvars>
[01:14:33.180]  
[01:14:33.181]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:14:33.181]    <block atomic="false" info="">
[01:14:33.181]      Sequence("CheckID");
[01:14:33.181]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:14:33.181]          <block atomic="false" info="">
[01:14:33.181]            __var pidr1 = 0;
[01:14:33.181]              // -> [pidr1 <= 0x00000000]
[01:14:33.182]            __var pidr2 = 0;
[01:14:33.182]              // -> [pidr2 <= 0x00000000]
[01:14:33.182]            __var jep106id = 0;
[01:14:33.182]              // -> [jep106id <= 0x00000000]
[01:14:33.183]            __var ROMTableBase = 0;
[01:14:33.183]              // -> [ROMTableBase <= 0x00000000]
[01:14:33.183]            __ap = 0;      // AHB-AP
[01:14:33.183]              // -> [__ap <= 0x00000000]
[01:14:33.183]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:14:33.183]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.184]              // -> [ROMTableBase <= 0xE00FD000]
[01:14:33.184]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:14:33.184]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.184]              // -> [pidr1 <= 0x00000004]
[01:14:33.185]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:14:33.185]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.185]              // -> [pidr2 <= 0x0000001A]
[01:14:33.185]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:14:33.185]              // -> [jep106id <= 0x00000020]
[01:14:33.185]          </block>
[01:14:33.186]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:14:33.186]            // if-block "jep106id != 0x20"
[01:14:33.186]              // =>  FALSE
[01:14:33.186]            // skip if-block "jep106id != 0x20"
[01:14:33.186]          </control>
[01:14:33.186]        </sequence>
[01:14:33.186]    </block>
[01:14:33.186]  </sequence>
[01:14:33.186]  
[01:14:33.202]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:14:33.202]  
[01:14:33.202]  <debugvars>
[01:14:33.202]    // Pre-defined
[01:14:33.202]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:14:33.202]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:14:33.202]    __dp=0x00000000
[01:14:33.203]    __ap=0x00000000
[01:14:33.203]    __traceout=0x00000001      (SWO Trace)
[01:14:33.203]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:14:33.203]    __FlashAddr=0x00000000
[01:14:33.203]    __FlashLen=0x00000000
[01:14:33.203]    __FlashArg=0x00000000
[01:14:33.204]    __FlashOp=0x00000000
[01:14:33.204]    __Result=0x00000000
[01:14:33.204]    
[01:14:33.204]    // User-defined
[01:14:33.204]    DbgMCU_CR=0x00000007
[01:14:33.204]    DbgMCU_APB1_Fz=0x00000000
[01:14:33.205]    DbgMCU_APB2_Fz=0x00000000
[01:14:33.205]    TraceClk_Pin=0x00040002
[01:14:33.205]    TraceD0_Pin=0x00040003
[01:14:33.205]    TraceD1_Pin=0x00040004
[01:14:33.205]    TraceD2_Pin=0x00040005
[01:14:33.205]    TraceD3_Pin=0x00040006
[01:14:33.206]  </debugvars>
[01:14:33.206]  
[01:14:33.206]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:14:33.206]    <block atomic="false" info="">
[01:14:33.206]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:14:33.207]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.207]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:14:33.208]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.208]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:14:33.209]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.209]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:14:33.209]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:14:33.210]    </block>
[01:14:33.210]  </sequence>
[01:14:33.210]  
[01:15:03.370]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:15:03.370]  
[01:15:03.370]  <debugvars>
[01:15:03.370]    // Pre-defined
[01:15:03.370]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:15:03.371]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:15:03.371]    __dp=0x00000000
[01:15:03.371]    __ap=0x00000000
[01:15:03.371]    __traceout=0x00000001      (SWO Trace)
[01:15:03.371]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:15:03.372]    __FlashAddr=0x00000000
[01:15:03.372]    __FlashLen=0x00000000
[01:15:03.372]    __FlashArg=0x00000000
[01:15:03.372]    __FlashOp=0x00000000
[01:15:03.372]    __Result=0x00000000
[01:15:03.373]    
[01:15:03.373]    // User-defined
[01:15:03.373]    DbgMCU_CR=0x00000007
[01:15:03.373]    DbgMCU_APB1_Fz=0x00000000
[01:15:03.373]    DbgMCU_APB2_Fz=0x00000000
[01:15:03.373]    TraceClk_Pin=0x00040002
[01:15:03.374]    TraceD0_Pin=0x00040003
[01:15:03.374]    TraceD1_Pin=0x00040004
[01:15:03.374]    TraceD2_Pin=0x00040005
[01:15:03.374]    TraceD3_Pin=0x00040006
[01:15:03.374]  </debugvars>
[01:15:03.374]  
[01:15:03.375]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:15:03.375]    <block atomic="false" info="">
[01:15:03.375]      Sequence("CheckID");
[01:15:03.375]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:15:03.375]          <block atomic="false" info="">
[01:15:03.376]            __var pidr1 = 0;
[01:15:03.376]              // -> [pidr1 <= 0x00000000]
[01:15:03.376]            __var pidr2 = 0;
[01:15:03.376]              // -> [pidr2 <= 0x00000000]
[01:15:03.376]            __var jep106id = 0;
[01:15:03.376]              // -> [jep106id <= 0x00000000]
[01:15:03.377]            __var ROMTableBase = 0;
[01:15:03.377]              // -> [ROMTableBase <= 0x00000000]
[01:15:03.377]            __ap = 0;      // AHB-AP
[01:15:03.377]              // -> [__ap <= 0x00000000]
[01:15:03.377]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:15:03.377]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.377]              // -> [ROMTableBase <= 0xE00FD000]
[01:15:03.378]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:15:03.378]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.378]              // -> [pidr1 <= 0x00000004]
[01:15:03.379]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:15:03.379]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.379]              // -> [pidr2 <= 0x0000001A]
[01:15:03.379]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:15:03.379]              // -> [jep106id <= 0x00000020]
[01:15:03.379]          </block>
[01:15:03.380]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:15:03.380]            // if-block "jep106id != 0x20"
[01:15:03.380]              // =>  FALSE
[01:15:03.380]            // skip if-block "jep106id != 0x20"
[01:15:03.380]          </control>
[01:15:03.380]        </sequence>
[01:15:03.380]    </block>
[01:15:03.380]  </sequence>
[01:15:03.381]  
[01:15:03.396]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:15:03.396]  
[01:15:03.396]  <debugvars>
[01:15:03.396]    // Pre-defined
[01:15:03.396]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:15:03.396]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:15:03.397]    __dp=0x00000000
[01:15:03.397]    __ap=0x00000000
[01:15:03.397]    __traceout=0x00000001      (SWO Trace)
[01:15:03.397]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:15:03.397]    __FlashAddr=0x00000000
[01:15:03.397]    __FlashLen=0x00000000
[01:15:03.398]    __FlashArg=0x00000000
[01:15:03.398]    __FlashOp=0x00000000
[01:15:03.398]    __Result=0x00000000
[01:15:03.398]    
[01:15:03.398]    // User-defined
[01:15:03.398]    DbgMCU_CR=0x00000007
[01:15:03.399]    DbgMCU_APB1_Fz=0x00000000
[01:15:03.399]    DbgMCU_APB2_Fz=0x00000000
[01:15:03.399]    TraceClk_Pin=0x00040002
[01:15:03.399]    TraceD0_Pin=0x00040003
[01:15:03.399]    TraceD1_Pin=0x00040004
[01:15:03.400]    TraceD2_Pin=0x00040005
[01:15:03.400]    TraceD3_Pin=0x00040006
[01:15:03.400]  </debugvars>
[01:15:03.400]  
[01:15:03.400]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:15:03.400]    <block atomic="false" info="">
[01:15:03.400]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:15:03.401]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.401]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:15:03.402]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.402]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:15:03.403]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.403]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:15:03.403]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.403]    </block>
[01:15:03.404]  </sequence>
[01:15:03.404]  
[01:15:03.421]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[01:15:03.421]  
[01:15:03.421]  <debugvars>
[01:15:03.421]    // Pre-defined
[01:15:03.421]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:15:03.421]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:15:03.422]    __dp=0x00000000
[01:15:03.422]    __ap=0x00000000
[01:15:03.422]    __traceout=0x00000001      (SWO Trace)
[01:15:03.422]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:15:03.423]    __FlashAddr=0x00000000
[01:15:03.423]    __FlashLen=0x00000000
[01:15:03.423]    __FlashArg=0x00000000
[01:15:03.423]    __FlashOp=0x00000000
[01:15:03.423]    __Result=0x00000000
[01:15:03.424]    
[01:15:03.424]    // User-defined
[01:15:03.424]    DbgMCU_CR=0x00000007
[01:15:03.424]    DbgMCU_APB1_Fz=0x00000000
[01:15:03.424]    DbgMCU_APB2_Fz=0x00000000
[01:15:03.424]    TraceClk_Pin=0x00040002
[01:15:03.424]    TraceD0_Pin=0x00040003
[01:15:03.424]    TraceD1_Pin=0x00040004
[01:15:03.425]    TraceD2_Pin=0x00040005
[01:15:03.425]    TraceD3_Pin=0x00040006
[01:15:03.425]  </debugvars>
[01:15:03.425]  
[01:15:03.425]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:15:03.425]    <block atomic="false" info="">
[01:15:03.426]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:15:03.426]        // -> [traceSWO <= 0x00000001]
[01:15:03.426]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:15:03.426]        // -> [traceTPIU <= 0x00000000]
[01:15:03.426]    </block>
[01:15:03.426]    <control if="traceSWO" while="" timeout="0" info="">
[01:15:03.426]      // if-block "traceSWO"
[01:15:03.426]        // =>  TRUE
[01:15:03.427]      <block atomic="false" info="">
[01:15:03.427]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:15:03.427]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:15:03.427]            <block atomic="false" info="">
[01:15:03.427]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:15:03.427]                // -> [dbgmcu_val <= 0x00000000]
[01:15:03.427]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:15:03.428]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:15:03.428]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:15:03.428]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.428]                // -> [dbgmcu_val <= 0x00000007]
[01:15:03.428]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:15:03.428]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:15:03.429]              Sequence("ConfigureTraceSWOPin");
[01:15:03.429]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:15:03.429]                  <block atomic="false" info="">
[01:15:03.429]                    __var pin     = 0;
[01:15:03.429]                      // -> [pin <= 0x00000000]
[01:15:03.429]                    __var port    = 0;
[01:15:03.429]                      // -> [port <= 0x00000000]
[01:15:03.430]                    __var portAdr = 0;
[01:15:03.430]                      // -> [portAdr <= 0x00000000]
[01:15:03.430]                    __var pos     = 0;
[01:15:03.430]                      // -> [pos <= 0x00000000]
[01:15:03.430]                    __var SWO_Pin = 0x00010003;          // PB3
[01:15:03.430]                      // -> [SWO_Pin <= 0x00010003]
[01:15:03.430]                  </block>
[01:15:03.430]                  <block atomic="false" info="configure SWO">
[01:15:03.430]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:15:03.431]                      // -> [pin <= 0x00000003]
[01:15:03.431]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:15:03.431]                      // -> [port <= 0x00000001]
[01:15:03.431]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:15:03.431]                      // -> [portAdr <= 0x40020400]
[01:15:03.431]                    pos = pin * 2;
[01:15:03.431]                      // -> [pos <= 0x00000006]
[01:15:03.431]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:15:03.432]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.432]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.432]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:15:03.433]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.433]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.434]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:15:03.434]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.434]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.434]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:15:03.435]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.436]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.436]                  </block>
[01:15:03.436]                  <control if="pin <  8" while="" timeout="0" info="">
[01:15:03.436]                    // if-block "pin <  8"
[01:15:03.436]                      // =>  TRUE
[01:15:03.436]                    <block atomic="false" info="">
[01:15:03.436]                      pos = ((pin    ) & 7) * 4;
[01:15:03.436]                        // -> [pos <= 0x0000000C]
[01:15:03.436]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:15:03.437]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.437]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.437]                    </block>
[01:15:03.437]                    // end if-block "pin <  8"
[01:15:03.438]                  </control>
[01:15:03.438]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:15:03.438]                    // if-block "pin >= 8"
[01:15:03.438]                      // =>  FALSE
[01:15:03.438]                    // skip if-block "pin >= 8"
[01:15:03.438]                  </control>
[01:15:03.438]                </sequence>
[01:15:03.439]            </block>
[01:15:03.439]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:15:03.439]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:15:03.439]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.439]            </block>
[01:15:03.439]          </sequence>
[01:15:03.440]      </block>
[01:15:03.440]      // end if-block "traceSWO"
[01:15:03.440]    </control>
[01:15:03.440]    <control if="traceTPIU" while="" timeout="0" info="">
[01:15:03.440]      // if-block "traceTPIU"
[01:15:03.441]        // =>  FALSE
[01:15:03.441]      // skip if-block "traceTPIU"
[01:15:03.441]    </control>
[01:15:03.441]  </sequence>
[01:15:03.441]  
[01:15:03.445]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:15:03.445]  
[01:15:03.445]  <debugvars>
[01:15:03.445]    // Pre-defined
[01:15:03.445]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:15:03.445]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:15:03.446]    __dp=0x00000000
[01:15:03.446]    __ap=0x00000000
[01:15:03.446]    __traceout=0x00000001      (SWO Trace)
[01:15:03.446]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:15:03.446]    __FlashAddr=0x00000000
[01:15:03.446]    __FlashLen=0x00000000
[01:15:03.447]    __FlashArg=0x00000000
[01:15:03.447]    __FlashOp=0x00000000
[01:15:03.447]    __Result=0x00000000
[01:15:03.447]    
[01:15:03.447]    // User-defined
[01:15:03.447]    DbgMCU_CR=0x00000007
[01:15:03.448]    DbgMCU_APB1_Fz=0x00000000
[01:15:03.448]    DbgMCU_APB2_Fz=0x00000000
[01:15:03.448]    TraceClk_Pin=0x00040002
[01:15:03.448]    TraceD0_Pin=0x00040003
[01:15:03.448]    TraceD1_Pin=0x00040004
[01:15:03.448]    TraceD2_Pin=0x00040005
[01:15:03.449]    TraceD3_Pin=0x00040006
[01:15:03.449]  </debugvars>
[01:15:03.449]  
[01:15:03.449]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:15:03.449]    <block atomic="false" info="">
[01:15:03.449]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:15:03.449]        // -> [traceSWO <= 0x00000001]
[01:15:03.450]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:15:03.450]        // -> [traceTPIU <= 0x00000000]
[01:15:03.450]    </block>
[01:15:03.450]    <control if="traceSWO" while="" timeout="0" info="">
[01:15:03.451]      // if-block "traceSWO"
[01:15:03.451]        // =>  TRUE
[01:15:03.451]      <block atomic="false" info="">
[01:15:03.451]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:15:03.451]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:15:03.451]            <block atomic="false" info="">
[01:15:03.451]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:15:03.451]                // -> [dbgmcu_val <= 0x00000000]
[01:15:03.452]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:15:03.452]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:15:03.452]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:15:03.452]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.452]                // -> [dbgmcu_val <= 0x00000007]
[01:15:03.453]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:15:03.453]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:15:03.453]              Sequence("ConfigureTraceSWOPin");
[01:15:03.453]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:15:03.453]                  <block atomic="false" info="">
[01:15:03.453]                    __var pin     = 0;
[01:15:03.454]                      // -> [pin <= 0x00000000]
[01:15:03.454]                    __var port    = 0;
[01:15:03.454]                      // -> [port <= 0x00000000]
[01:15:03.454]                    __var portAdr = 0;
[01:15:03.454]                      // -> [portAdr <= 0x00000000]
[01:15:03.454]                    __var pos     = 0;
[01:15:03.454]                      // -> [pos <= 0x00000000]
[01:15:03.454]                    __var SWO_Pin = 0x00010003;          // PB3
[01:15:03.454]                      // -> [SWO_Pin <= 0x00010003]
[01:15:03.455]                  </block>
[01:15:03.455]                  <block atomic="false" info="configure SWO">
[01:15:03.455]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:15:03.455]                      // -> [pin <= 0x00000003]
[01:15:03.455]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:15:03.455]                      // -> [port <= 0x00000001]
[01:15:03.455]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:15:03.456]                      // -> [portAdr <= 0x40020400]
[01:15:03.456]                    pos = pin * 2;
[01:15:03.456]                      // -> [pos <= 0x00000006]
[01:15:03.456]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:15:03.456]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.457]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.457]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:15:03.457]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.458]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.458]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:15:03.458]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.459]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.459]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:15:03.459]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.460]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.460]                  </block>
[01:15:03.460]                  <control if="pin <  8" while="" timeout="0" info="">
[01:15:03.460]                    // if-block "pin <  8"
[01:15:03.460]                      // =>  TRUE
[01:15:03.460]                    <block atomic="false" info="">
[01:15:03.460]                      pos = ((pin    ) & 7) * 4;
[01:15:03.461]                        // -> [pos <= 0x0000000C]
[01:15:03.461]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:15:03.461]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.462]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.462]                    </block>
[01:15:03.462]                    // end if-block "pin <  8"
[01:15:03.462]                  </control>
[01:15:03.462]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:15:03.462]                    // if-block "pin >= 8"
[01:15:03.462]                      // =>  FALSE
[01:15:03.462]                    // skip if-block "pin >= 8"
[01:15:03.463]                  </control>
[01:15:03.463]                </sequence>
[01:15:03.463]            </block>
[01:15:03.463]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:15:03.463]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:15:03.463]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.464]            </block>
[01:15:03.464]          </sequence>
[01:15:03.464]      </block>
[01:15:03.464]      // end if-block "traceSWO"
[01:15:03.464]    </control>
[01:15:03.464]    <control if="traceTPIU" while="" timeout="0" info="">
[01:15:03.465]      // if-block "traceTPIU"
[01:15:03.465]        // =>  FALSE
[01:15:03.465]      // skip if-block "traceTPIU"
[01:15:03.465]    </control>
[01:15:03.465]  </sequence>
[01:15:03.465]  
[01:15:03.640]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:15:03.640]  
[01:15:03.640]  <debugvars>
[01:15:03.640]    // Pre-defined
[01:15:03.640]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:15:03.641]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:15:03.641]    __dp=0x00000000
[01:15:03.641]    __ap=0x00000000
[01:15:03.641]    __traceout=0x00000001      (SWO Trace)
[01:15:03.641]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:15:03.641]    __FlashAddr=0x00000000
[01:15:03.641]    __FlashLen=0x00000000
[01:15:03.642]    __FlashArg=0x00000000
[01:15:03.642]    __FlashOp=0x00000000
[01:15:03.642]    __Result=0x00000000
[01:15:03.642]    
[01:15:03.642]    // User-defined
[01:15:03.642]    DbgMCU_CR=0x00000007
[01:15:03.642]    DbgMCU_APB1_Fz=0x00000000
[01:15:03.643]    DbgMCU_APB2_Fz=0x00000000
[01:15:03.643]    TraceClk_Pin=0x00040002
[01:15:03.643]    TraceD0_Pin=0x00040003
[01:15:03.643]    TraceD1_Pin=0x00040004
[01:15:03.643]    TraceD2_Pin=0x00040005
[01:15:03.643]    TraceD3_Pin=0x00040006
[01:15:03.643]  </debugvars>
[01:15:03.644]  
[01:15:03.644]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:15:03.644]    <block atomic="false" info="">
[01:15:03.644]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:15:03.644]        // -> [traceSWO <= 0x00000001]
[01:15:03.645]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:15:03.645]        // -> [traceTPIU <= 0x00000000]
[01:15:03.645]    </block>
[01:15:03.645]    <control if="traceSWO" while="" timeout="0" info="">
[01:15:03.645]      // if-block "traceSWO"
[01:15:03.645]        // =>  TRUE
[01:15:03.646]      <block atomic="false" info="">
[01:15:03.646]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:15:03.646]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:15:03.646]            <block atomic="false" info="">
[01:15:03.646]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:15:03.646]                // -> [dbgmcu_val <= 0x00000000]
[01:15:03.646]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:15:03.647]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:15:03.647]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:15:03.647]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.647]                // -> [dbgmcu_val <= 0x00000007]
[01:15:03.648]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:15:03.648]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:15:03.648]              Sequence("ConfigureTraceSWOPin");
[01:15:03.648]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:15:03.648]                  <block atomic="false" info="">
[01:15:03.648]                    __var pin     = 0;
[01:15:03.648]                      // -> [pin <= 0x00000000]
[01:15:03.649]                    __var port    = 0;
[01:15:03.649]                      // -> [port <= 0x00000000]
[01:15:03.649]                    __var portAdr = 0;
[01:15:03.649]                      // -> [portAdr <= 0x00000000]
[01:15:03.649]                    __var pos     = 0;
[01:15:03.649]                      // -> [pos <= 0x00000000]
[01:15:03.649]                    __var SWO_Pin = 0x00010003;          // PB3
[01:15:03.649]                      // -> [SWO_Pin <= 0x00010003]
[01:15:03.650]                  </block>
[01:15:03.650]                  <block atomic="false" info="configure SWO">
[01:15:03.650]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:15:03.650]                      // -> [pin <= 0x00000003]
[01:15:03.650]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:15:03.650]                      // -> [port <= 0x00000001]
[01:15:03.650]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:15:03.651]                      // -> [portAdr <= 0x40020400]
[01:15:03.651]                    pos = pin * 2;
[01:15:03.651]                      // -> [pos <= 0x00000006]
[01:15:03.651]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:15:03.651]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.652]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.652]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:15:03.652]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.653]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.653]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:15:03.653]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.654]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.654]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:15:03.654]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.655]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.655]                  </block>
[01:15:03.655]                  <control if="pin <  8" while="" timeout="0" info="">
[01:15:03.655]                    // if-block "pin <  8"
[01:15:03.655]                      // =>  TRUE
[01:15:03.655]                    <block atomic="false" info="">
[01:15:03.655]                      pos = ((pin    ) & 7) * 4;
[01:15:03.655]                        // -> [pos <= 0x0000000C]
[01:15:03.656]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:15:03.656]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.656]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.657]                    </block>
[01:15:03.657]                    // end if-block "pin <  8"
[01:15:03.657]                  </control>
[01:15:03.657]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:15:03.657]                    // if-block "pin >= 8"
[01:15:03.657]                      // =>  FALSE
[01:15:03.657]                    // skip if-block "pin >= 8"
[01:15:03.658]                  </control>
[01:15:03.658]                </sequence>
[01:15:03.658]            </block>
[01:15:03.658]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:15:03.658]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:15:03.658]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:15:03.659]            </block>
[01:15:03.659]          </sequence>
[01:15:03.659]      </block>
[01:15:03.659]      // end if-block "traceSWO"
[01:15:03.659]    </control>
[01:15:03.659]    <control if="traceTPIU" while="" timeout="0" info="">
[01:15:03.659]      // if-block "traceTPIU"
[01:15:03.660]        // =>  FALSE
[01:15:03.660]      // skip if-block "traceTPIU"
[01:15:03.660]    </control>
[01:15:03.660]  </sequence>
[01:15:03.660]  
[01:17:45.213]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:17:45.213]  
[01:17:45.214]  <debugvars>
[01:17:45.214]    // Pre-defined
[01:17:45.214]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:17:45.214]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:17:45.214]    __dp=0x00000000
[01:17:45.214]    __ap=0x00000000
[01:17:45.215]    __traceout=0x00000001      (SWO Trace)
[01:17:45.215]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:17:45.215]    __FlashAddr=0x00000000
[01:17:45.215]    __FlashLen=0x00000000
[01:17:45.215]    __FlashArg=0x00000000
[01:17:45.216]    __FlashOp=0x00000000
[01:17:45.216]    __Result=0x00000000
[01:17:45.216]    
[01:17:45.216]    // User-defined
[01:17:45.216]    DbgMCU_CR=0x00000007
[01:17:45.216]    DbgMCU_APB1_Fz=0x00000000
[01:17:45.217]    DbgMCU_APB2_Fz=0x00000000
[01:17:45.217]    TraceClk_Pin=0x00040002
[01:17:45.217]    TraceD0_Pin=0x00040003
[01:17:45.217]    TraceD1_Pin=0x00040004
[01:17:45.217]    TraceD2_Pin=0x00040005
[01:17:45.217]    TraceD3_Pin=0x00040006
[01:17:45.218]  </debugvars>
[01:17:45.218]  
[01:17:45.218]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:17:45.218]    <block atomic="false" info="">
[01:17:45.218]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:17:45.218]        // -> [traceSWO <= 0x00000001]
[01:17:45.218]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:17:45.219]        // -> [traceTPIU <= 0x00000000]
[01:17:45.219]    </block>
[01:17:45.219]    <control if="traceSWO" while="" timeout="0" info="">
[01:17:45.219]      // if-block "traceSWO"
[01:17:45.219]        // =>  TRUE
[01:17:45.220]      <block atomic="false" info="">
[01:17:45.220]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:17:45.220]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:17:45.220]            <block atomic="false" info="">
[01:17:45.220]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:17:45.220]                // -> [dbgmcu_val <= 0x00000000]
[01:17:45.220]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:17:45.221]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:17:45.221]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:17:45.221]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.221]                // -> [dbgmcu_val <= 0x00000007]
[01:17:45.222]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:17:45.222]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:17:45.222]              Sequence("ConfigureTraceSWOPin");
[01:17:45.222]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:17:45.222]                  <block atomic="false" info="">
[01:17:45.222]                    __var pin     = 0;
[01:17:45.222]                      // -> [pin <= 0x00000000]
[01:17:45.223]                    __var port    = 0;
[01:17:45.223]                      // -> [port <= 0x00000000]
[01:17:45.223]                    __var portAdr = 0;
[01:17:45.223]                      // -> [portAdr <= 0x00000000]
[01:17:45.223]                    __var pos     = 0;
[01:17:45.223]                      // -> [pos <= 0x00000000]
[01:17:45.223]                    __var SWO_Pin = 0x00010003;          // PB3
[01:17:45.224]                      // -> [SWO_Pin <= 0x00010003]
[01:17:45.224]                  </block>
[01:17:45.224]                  <block atomic="false" info="configure SWO">
[01:17:45.224]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:17:45.224]                      // -> [pin <= 0x00000003]
[01:17:45.224]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:17:45.224]                      // -> [port <= 0x00000001]
[01:17:45.225]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:17:45.225]                      // -> [portAdr <= 0x40020400]
[01:17:45.225]                    pos = pin * 2;
[01:17:45.225]                      // -> [pos <= 0x00000006]
[01:17:45.225]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:17:45.226]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.226]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.226]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:17:45.227]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.227]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.227]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:17:45.228]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.228]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.228]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:17:45.228]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.228]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.228]                  </block>
[01:17:45.228]                  <control if="pin <  8" while="" timeout="0" info="">
[01:17:45.228]                    // if-block "pin <  8"
[01:17:45.229]                      // =>  TRUE
[01:17:45.229]                    <block atomic="false" info="">
[01:17:45.229]                      pos = ((pin    ) & 7) * 4;
[01:17:45.229]                        // -> [pos <= 0x0000000C]
[01:17:45.229]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:17:45.229]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.230]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.230]                    </block>
[01:17:45.230]                    // end if-block "pin <  8"
[01:17:45.230]                  </control>
[01:17:45.230]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:17:45.230]                    // if-block "pin >= 8"
[01:17:45.231]                      // =>  FALSE
[01:17:45.231]                    // skip if-block "pin >= 8"
[01:17:45.231]                  </control>
[01:17:45.231]                </sequence>
[01:17:45.231]            </block>
[01:17:45.231]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:17:45.231]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:17:45.232]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:17:45.232]            </block>
[01:17:45.232]          </sequence>
[01:17:45.232]      </block>
[01:17:45.232]      // end if-block "traceSWO"
[01:17:45.232]    </control>
[01:17:45.232]    <control if="traceTPIU" while="" timeout="0" info="">
[01:17:45.233]      // if-block "traceTPIU"
[01:17:45.233]        // =>  FALSE
[01:17:45.233]      // skip if-block "traceTPIU"
[01:17:45.233]    </control>
[01:17:45.233]  </sequence>
[01:17:45.233]  
[01:19:01.885]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:19:01.885]  
[01:19:01.885]  <debugvars>
[01:19:01.885]    // Pre-defined
[01:19:01.885]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:01.885]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:19:01.886]    __dp=0x00000000
[01:19:01.886]    __ap=0x00000000
[01:19:01.886]    __traceout=0x00000001      (SWO Trace)
[01:19:01.886]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:01.886]    __FlashAddr=0x00000000
[01:19:01.886]    __FlashLen=0x00000000
[01:19:01.887]    __FlashArg=0x00000000
[01:19:01.887]    __FlashOp=0x00000000
[01:19:01.887]    __Result=0x00000000
[01:19:01.887]    
[01:19:01.887]    // User-defined
[01:19:01.887]    DbgMCU_CR=0x00000007
[01:19:01.887]    DbgMCU_APB1_Fz=0x00000000
[01:19:01.888]    DbgMCU_APB2_Fz=0x00000000
[01:19:01.888]    TraceClk_Pin=0x00040002
[01:19:01.888]    TraceD0_Pin=0x00040003
[01:19:01.888]    TraceD1_Pin=0x00040004
[01:19:01.888]    TraceD2_Pin=0x00040005
[01:19:01.888]    TraceD3_Pin=0x00040006
[01:19:01.888]  </debugvars>
[01:19:01.889]  
[01:19:01.889]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:19:01.889]    <block atomic="false" info="">
[01:19:01.889]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:19:01.889]        // -> [traceSWO <= 0x00000001]
[01:19:01.889]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:19:01.889]        // -> [traceTPIU <= 0x00000000]
[01:19:01.890]    </block>
[01:19:01.890]    <control if="traceSWO" while="" timeout="0" info="">
[01:19:01.890]      // if-block "traceSWO"
[01:19:01.890]        // =>  TRUE
[01:19:01.890]      <block atomic="false" info="">
[01:19:01.890]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:19:01.890]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:19:01.891]            <block atomic="false" info="">
[01:19:01.891]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:19:01.891]                // -> [dbgmcu_val <= 0x00000000]
[01:19:01.891]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:19:01.891]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:19:01.891]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:19:01.892]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.892]                // -> [dbgmcu_val <= 0x00000007]
[01:19:01.892]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:19:01.892]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:19:01.892]              Sequence("ConfigureTraceSWOPin");
[01:19:01.893]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:19:01.893]                  <block atomic="false" info="">
[01:19:01.893]                    __var pin     = 0;
[01:19:01.893]                      // -> [pin <= 0x00000000]
[01:19:01.893]                    __var port    = 0;
[01:19:01.893]                      // -> [port <= 0x00000000]
[01:19:01.893]                    __var portAdr = 0;
[01:19:01.893]                      // -> [portAdr <= 0x00000000]
[01:19:01.894]                    __var pos     = 0;
[01:19:01.894]                      // -> [pos <= 0x00000000]
[01:19:01.894]                    __var SWO_Pin = 0x00010003;          // PB3
[01:19:01.894]                      // -> [SWO_Pin <= 0x00010003]
[01:19:01.894]                  </block>
[01:19:01.894]                  <block atomic="false" info="configure SWO">
[01:19:01.894]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:19:01.894]                      // -> [pin <= 0x00000003]
[01:19:01.895]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:19:01.895]                      // -> [port <= 0x00000001]
[01:19:01.895]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:19:01.895]                      // -> [portAdr <= 0x40020400]
[01:19:01.895]                    pos = pin * 2;
[01:19:01.895]                      // -> [pos <= 0x00000006]
[01:19:01.895]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:19:01.896]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.896]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.896]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:19:01.897]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.897]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.898]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:19:01.898]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.898]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.898]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:19:01.899]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.899]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.899]                  </block>
[01:19:01.900]                  <control if="pin <  8" while="" timeout="0" info="">
[01:19:01.900]                    // if-block "pin <  8"
[01:19:01.900]                      // =>  TRUE
[01:19:01.900]                    <block atomic="false" info="">
[01:19:01.900]                      pos = ((pin    ) & 7) * 4;
[01:19:01.900]                        // -> [pos <= 0x0000000C]
[01:19:01.900]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:19:01.901]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.901]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.901]                    </block>
[01:19:01.901]                    // end if-block "pin <  8"
[01:19:01.902]                  </control>
[01:19:01.902]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:19:01.902]                    // if-block "pin >= 8"
[01:19:01.902]                      // =>  FALSE
[01:19:01.902]                    // skip if-block "pin >= 8"
[01:19:01.902]                  </control>
[01:19:01.902]                </sequence>
[01:19:01.902]            </block>
[01:19:01.902]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:19:01.903]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:19:01.903]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:01.903]            </block>
[01:19:01.903]          </sequence>
[01:19:01.903]      </block>
[01:19:01.903]      // end if-block "traceSWO"
[01:19:01.904]    </control>
[01:19:01.904]    <control if="traceTPIU" while="" timeout="0" info="">
[01:19:01.904]      // if-block "traceTPIU"
[01:19:01.904]        // =>  FALSE
[01:19:01.904]      // skip if-block "traceTPIU"
[01:19:01.904]    </control>
[01:19:01.904]  </sequence>
[01:19:01.904]  
[01:22:11.229]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:22:11.229]  
[01:22:11.229]  <debugvars>
[01:22:11.229]    // Pre-defined
[01:22:11.229]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:22:11.230]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:22:11.230]    __dp=0x00000000
[01:22:11.230]    __ap=0x00000000
[01:22:11.230]    __traceout=0x00000001      (SWO Trace)
[01:22:11.230]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:22:11.230]    __FlashAddr=0x00000000
[01:22:11.231]    __FlashLen=0x00000000
[01:22:11.231]    __FlashArg=0x00000000
[01:22:11.231]    __FlashOp=0x00000000
[01:22:11.231]    __Result=0x00000000
[01:22:11.231]    
[01:22:11.231]    // User-defined
[01:22:11.231]    DbgMCU_CR=0x00000007
[01:22:11.232]    DbgMCU_APB1_Fz=0x00000000
[01:22:11.232]    DbgMCU_APB2_Fz=0x00000000
[01:22:11.232]    TraceClk_Pin=0x00040002
[01:22:11.232]    TraceD0_Pin=0x00040003
[01:22:11.232]    TraceD1_Pin=0x00040004
[01:22:11.233]    TraceD2_Pin=0x00040005
[01:22:11.233]    TraceD3_Pin=0x00040006
[01:22:11.233]  </debugvars>
[01:22:11.233]  
[01:22:11.233]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:22:11.233]    <block atomic="false" info="">
[01:22:11.234]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:22:11.234]        // -> [traceSWO <= 0x00000001]
[01:22:11.234]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:22:11.234]        // -> [traceTPIU <= 0x00000000]
[01:22:11.235]    </block>
[01:22:11.235]    <control if="traceSWO" while="" timeout="0" info="">
[01:22:11.235]      // if-block "traceSWO"
[01:22:11.235]        // =>  TRUE
[01:22:11.235]      <block atomic="false" info="">
[01:22:11.235]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:22:11.236]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:22:11.236]            <block atomic="false" info="">
[01:22:11.236]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:22:11.236]                // -> [dbgmcu_val <= 0x00000000]
[01:22:11.236]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:22:11.236]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:22:11.236]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:22:11.237]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.237]                // -> [dbgmcu_val <= 0x00000007]
[01:22:11.237]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:22:11.238]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:22:11.238]              Sequence("ConfigureTraceSWOPin");
[01:22:11.238]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:22:11.238]                  <block atomic="false" info="">
[01:22:11.238]                    __var pin     = 0;
[01:22:11.238]                      // -> [pin <= 0x00000000]
[01:22:11.238]                    __var port    = 0;
[01:22:11.238]                      // -> [port <= 0x00000000]
[01:22:11.239]                    __var portAdr = 0;
[01:22:11.239]                      // -> [portAdr <= 0x00000000]
[01:22:11.239]                    __var pos     = 0;
[01:22:11.239]                      // -> [pos <= 0x00000000]
[01:22:11.239]                    __var SWO_Pin = 0x00010003;          // PB3
[01:22:11.239]                      // -> [SWO_Pin <= 0x00010003]
[01:22:11.240]                  </block>
[01:22:11.240]                  <block atomic="false" info="configure SWO">
[01:22:11.240]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:22:11.240]                      // -> [pin <= 0x00000003]
[01:22:11.240]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:22:11.240]                      // -> [port <= 0x00000001]
[01:22:11.240]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:22:11.240]                      // -> [portAdr <= 0x40020400]
[01:22:11.240]                    pos = pin * 2;
[01:22:11.241]                      // -> [pos <= 0x00000006]
[01:22:11.241]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:22:11.241]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.242]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.242]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:22:11.242]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.243]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.243]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:22:11.243]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.244]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.244]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:22:11.244]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.245]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.245]                  </block>
[01:22:11.245]                  <control if="pin <  8" while="" timeout="0" info="">
[01:22:11.245]                    // if-block "pin <  8"
[01:22:11.245]                      // =>  TRUE
[01:22:11.245]                    <block atomic="false" info="">
[01:22:11.245]                      pos = ((pin    ) & 7) * 4;
[01:22:11.245]                        // -> [pos <= 0x0000000C]
[01:22:11.246]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:22:11.246]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.246]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.247]                    </block>
[01:22:11.247]                    // end if-block "pin <  8"
[01:22:11.247]                  </control>
[01:22:11.247]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:22:11.247]                    // if-block "pin >= 8"
[01:22:11.247]                      // =>  FALSE
[01:22:11.247]                    // skip if-block "pin >= 8"
[01:22:11.247]                  </control>
[01:22:11.248]                </sequence>
[01:22:11.248]            </block>
[01:22:11.248]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:22:11.248]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:22:11.248]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:22:11.249]            </block>
[01:22:11.249]          </sequence>
[01:22:11.249]      </block>
[01:22:11.249]      // end if-block "traceSWO"
[01:22:11.249]    </control>
[01:22:11.249]    <control if="traceTPIU" while="" timeout="0" info="">
[01:22:11.249]      // if-block "traceTPIU"
[01:22:11.249]        // =>  FALSE
[01:22:11.249]      // skip if-block "traceTPIU"
[01:22:11.250]    </control>
[01:22:11.250]  </sequence>
[01:22:11.250]  
[01:23:24.894]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:23:24.894]  
[01:23:24.894]  <debugvars>
[01:23:24.894]    // Pre-defined
[01:23:24.895]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:23:24.895]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:23:24.895]    __dp=0x00000000
[01:23:24.895]    __ap=0x00000000
[01:23:24.895]    __traceout=0x00000001      (SWO Trace)
[01:23:24.895]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:23:24.895]    __FlashAddr=0x00000000
[01:23:24.896]    __FlashLen=0x00000000
[01:23:24.896]    __FlashArg=0x00000000
[01:23:24.896]    __FlashOp=0x00000000
[01:23:24.896]    __Result=0x00000000
[01:23:24.896]    
[01:23:24.896]    // User-defined
[01:23:24.896]    DbgMCU_CR=0x00000007
[01:23:24.896]    DbgMCU_APB1_Fz=0x00000000
[01:23:24.897]    DbgMCU_APB2_Fz=0x00000000
[01:23:24.897]    TraceClk_Pin=0x00040002
[01:23:24.897]    TraceD0_Pin=0x00040003
[01:23:24.897]    TraceD1_Pin=0x00040004
[01:23:24.897]    TraceD2_Pin=0x00040005
[01:23:24.897]    TraceD3_Pin=0x00040006
[01:23:24.897]  </debugvars>
[01:23:24.897]  
[01:23:24.898]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:23:24.898]    <block atomic="false" info="">
[01:23:24.898]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:23:24.898]        // -> [traceSWO <= 0x00000001]
[01:23:24.898]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:23:24.898]        // -> [traceTPIU <= 0x00000000]
[01:23:24.898]    </block>
[01:23:24.899]    <control if="traceSWO" while="" timeout="0" info="">
[01:23:24.899]      // if-block "traceSWO"
[01:23:24.899]        // =>  TRUE
[01:23:24.899]      <block atomic="false" info="">
[01:23:24.899]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:23:24.899]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:23:24.899]            <block atomic="false" info="">
[01:23:24.899]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:23:24.899]                // -> [dbgmcu_val <= 0x00000000]
[01:23:24.900]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:23:24.900]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:23:24.900]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:23:24.900]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.900]                // -> [dbgmcu_val <= 0x00000007]
[01:23:24.901]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:23:24.901]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:23:24.901]              Sequence("ConfigureTraceSWOPin");
[01:23:24.901]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:23:24.901]                  <block atomic="false" info="">
[01:23:24.901]                    __var pin     = 0;
[01:23:24.901]                      // -> [pin <= 0x00000000]
[01:23:24.901]                    __var port    = 0;
[01:23:24.902]                      // -> [port <= 0x00000000]
[01:23:24.902]                    __var portAdr = 0;
[01:23:24.902]                      // -> [portAdr <= 0x00000000]
[01:23:24.902]                    __var pos     = 0;
[01:23:24.902]                      // -> [pos <= 0x00000000]
[01:23:24.902]                    __var SWO_Pin = 0x00010003;          // PB3
[01:23:24.902]                      // -> [SWO_Pin <= 0x00010003]
[01:23:24.902]                  </block>
[01:23:24.903]                  <block atomic="false" info="configure SWO">
[01:23:24.903]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:23:24.903]                      // -> [pin <= 0x00000003]
[01:23:24.903]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:23:24.903]                      // -> [port <= 0x00000001]
[01:23:24.903]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:23:24.903]                      // -> [portAdr <= 0x40020400]
[01:23:24.903]                    pos = pin * 2;
[01:23:24.904]                      // -> [pos <= 0x00000006]
[01:23:24.904]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:23:24.904]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.905]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.905]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:23:24.905]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.905]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.906]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:23:24.906]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.906]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.907]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:23:24.907]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.907]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.907]                  </block>
[01:23:24.908]                  <control if="pin <  8" while="" timeout="0" info="">
[01:23:24.908]                    // if-block "pin <  8"
[01:23:24.908]                      // =>  TRUE
[01:23:24.908]                    <block atomic="false" info="">
[01:23:24.908]                      pos = ((pin    ) & 7) * 4;
[01:23:24.908]                        // -> [pos <= 0x0000000C]
[01:23:24.908]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:23:24.909]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.909]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.909]                    </block>
[01:23:24.910]                    // end if-block "pin <  8"
[01:23:24.910]                  </control>
[01:23:24.910]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:23:24.910]                    // if-block "pin >= 8"
[01:23:24.910]                      // =>  FALSE
[01:23:24.910]                    // skip if-block "pin >= 8"
[01:23:24.910]                  </control>
[01:23:24.911]                </sequence>
[01:23:24.911]            </block>
[01:23:24.911]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:23:24.911]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:23:24.911]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:24.912]            </block>
[01:23:24.912]          </sequence>
[01:23:24.912]      </block>
[01:23:24.912]      // end if-block "traceSWO"
[01:23:24.912]    </control>
[01:23:24.912]    <control if="traceTPIU" while="" timeout="0" info="">
[01:23:24.912]      // if-block "traceTPIU"
[01:23:24.912]        // =>  FALSE
[01:23:24.913]      // skip if-block "traceTPIU"
[01:23:24.913]    </control>
[01:23:24.913]  </sequence>
[01:23:24.913]  
[01:24:42.954]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[01:24:42.954]  
[01:24:42.955]  <debugvars>
[01:24:42.955]    // Pre-defined
[01:24:42.955]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:24:42.955]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:24:42.955]    __dp=0x00000000
[01:24:42.956]    __ap=0x00000000
[01:24:42.956]    __traceout=0x00000001      (SWO Trace)
[01:24:42.956]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:24:42.956]    __FlashAddr=0x00000000
[01:24:42.956]    __FlashLen=0x00000000
[01:24:42.957]    __FlashArg=0x00000000
[01:24:42.957]    __FlashOp=0x00000000
[01:24:42.957]    __Result=0x00000000
[01:24:42.957]    
[01:24:42.957]    // User-defined
[01:24:42.957]    DbgMCU_CR=0x00000007
[01:24:42.958]    DbgMCU_APB1_Fz=0x00000000
[01:24:42.958]    DbgMCU_APB2_Fz=0x00000000
[01:24:42.958]    TraceClk_Pin=0x00040002
[01:24:42.958]    TraceD0_Pin=0x00040003
[01:24:42.958]    TraceD1_Pin=0x00040004
[01:24:42.959]    TraceD2_Pin=0x00040005
[01:24:42.959]    TraceD3_Pin=0x00040006
[01:24:42.959]  </debugvars>
[01:24:42.959]  
[01:24:42.959]  <sequence name="TraceStop" Pname="" disable="false" info="">
[01:24:42.959]    <block atomic="false" info="">
[01:24:42.960]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[01:24:42.960]        // -> [traceSWO <= 0x00000001]
[01:24:42.960]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[01:24:42.960]        // -> [traceTPIU <= 0x00000000]
[01:24:42.960]    </block>
[01:24:42.961]    <control if="traceSWO" while="" timeout="0" info="">
[01:24:42.961]      // if-block "traceSWO"
[01:24:42.961]        // =>  TRUE
[01:24:42.961]      <block atomic="false" info="">
[01:24:42.961]        Sequence("DisableTraceSWO");
[01:24:42.962]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[01:24:42.962]            <block atomic="false" info="">
[01:24:42.962]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:24:42.962]                // -> [dbgmcu_val <= 0x00000000]
[01:24:42.962]            </block>
[01:24:42.962]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[01:24:42.963]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[01:24:42.963]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:24:42.964]                // -> [dbgmcu_val <= 0x00000007]
[01:24:42.964]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[01:24:42.964]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:24:42.965]            </block>
[01:24:42.965]          </sequence>
[01:24:42.965]      </block>
[01:24:42.965]      // end if-block "traceSWO"
[01:24:42.965]    </control>
[01:24:42.966]    <control if="traceTPIU" while="" timeout="0" info="">
[01:24:42.966]      // if-block "traceTPIU"
[01:24:42.966]        // =>  FALSE
[01:24:42.966]      // skip if-block "traceTPIU"
[01:24:42.966]    </control>
[01:24:42.966]  </sequence>
[01:24:42.966]  
[01:34:16.516]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:34:16.516]  
[01:34:16.517]  <debugvars>
[01:34:16.517]    // Pre-defined
[01:34:16.517]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:16.517]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:34:16.517]    __dp=0x00000000
[01:34:16.518]    __ap=0x00000000
[01:34:16.518]    __traceout=0x00000001      (SWO Trace)
[01:34:16.518]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:16.518]    __FlashAddr=0x00000000
[01:34:16.518]    __FlashLen=0x00000000
[01:34:16.519]    __FlashArg=0x00000000
[01:34:16.519]    __FlashOp=0x00000000
[01:34:16.519]    __Result=0x00000000
[01:34:16.519]    
[01:34:16.519]    // User-defined
[01:34:16.519]    DbgMCU_CR=0x00000007
[01:34:16.519]    DbgMCU_APB1_Fz=0x00000000
[01:34:16.520]    DbgMCU_APB2_Fz=0x00000000
[01:34:16.520]    TraceClk_Pin=0x00040002
[01:34:16.520]    TraceD0_Pin=0x00040003
[01:34:16.520]    TraceD1_Pin=0x00040004
[01:34:16.520]    TraceD2_Pin=0x00040005
[01:34:16.520]    TraceD3_Pin=0x00040006
[01:34:16.521]  </debugvars>
[01:34:16.521]  
[01:34:16.521]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:34:16.521]    <block atomic="false" info="">
[01:34:16.521]      Sequence("CheckID");
[01:34:16.521]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:34:16.522]          <block atomic="false" info="">
[01:34:16.522]            __var pidr1 = 0;
[01:34:16.522]              // -> [pidr1 <= 0x00000000]
[01:34:16.522]            __var pidr2 = 0;
[01:34:16.522]              // -> [pidr2 <= 0x00000000]
[01:34:16.522]            __var jep106id = 0;
[01:34:16.522]              // -> [jep106id <= 0x00000000]
[01:34:16.522]            __var ROMTableBase = 0;
[01:34:16.523]              // -> [ROMTableBase <= 0x00000000]
[01:34:16.523]            __ap = 0;      // AHB-AP
[01:34:16.523]              // -> [__ap <= 0x00000000]
[01:34:16.523]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:34:16.523]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.523]              // -> [ROMTableBase <= 0xE00FD000]
[01:34:16.524]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:34:16.524]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.524]              // -> [pidr1 <= 0x00000004]
[01:34:16.524]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:34:16.525]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.525]              // -> [pidr2 <= 0x0000001A]
[01:34:16.525]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:34:16.525]              // -> [jep106id <= 0x00000020]
[01:34:16.525]          </block>
[01:34:16.525]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:34:16.526]            // if-block "jep106id != 0x20"
[01:34:16.526]              // =>  FALSE
[01:34:16.526]            // skip if-block "jep106id != 0x20"
[01:34:16.526]          </control>
[01:34:16.526]        </sequence>
[01:34:16.526]    </block>
[01:34:16.526]  </sequence>
[01:34:16.526]  
[01:34:16.542]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:34:16.542]  
[01:34:16.542]  <debugvars>
[01:34:16.542]    // Pre-defined
[01:34:16.542]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:16.542]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:34:16.543]    __dp=0x00000000
[01:34:16.543]    __ap=0x00000000
[01:34:16.543]    __traceout=0x00000001      (SWO Trace)
[01:34:16.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:16.543]    __FlashAddr=0x00000000
[01:34:16.544]    __FlashLen=0x00000000
[01:34:16.544]    __FlashArg=0x00000000
[01:34:16.544]    __FlashOp=0x00000000
[01:34:16.544]    __Result=0x00000000
[01:34:16.545]    
[01:34:16.545]    // User-defined
[01:34:16.545]    DbgMCU_CR=0x00000007
[01:34:16.545]    DbgMCU_APB1_Fz=0x00000000
[01:34:16.545]    DbgMCU_APB2_Fz=0x00000000
[01:34:16.545]    TraceClk_Pin=0x00040002
[01:34:16.546]    TraceD0_Pin=0x00040003
[01:34:16.546]    TraceD1_Pin=0x00040004
[01:34:16.546]    TraceD2_Pin=0x00040005
[01:34:16.546]    TraceD3_Pin=0x00040006
[01:34:16.546]  </debugvars>
[01:34:16.546]  
[01:34:16.547]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:34:16.547]    <block atomic="false" info="">
[01:34:16.547]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:34:16.548]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.548]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:34:16.548]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.549]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:34:16.549]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.549]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:34:16.550]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:16.550]    </block>
[01:34:16.550]  </sequence>
[01:34:16.550]  
[01:34:47.102]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:34:47.102]  
[01:34:47.102]  <debugvars>
[01:34:47.102]    // Pre-defined
[01:34:47.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:47.102]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:34:47.103]    __dp=0x00000000
[01:34:47.103]    __ap=0x00000000
[01:34:47.103]    __traceout=0x00000001      (SWO Trace)
[01:34:47.103]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:47.103]    __FlashAddr=0x00000000
[01:34:47.104]    __FlashLen=0x00000000
[01:34:47.104]    __FlashArg=0x00000000
[01:34:47.104]    __FlashOp=0x00000000
[01:34:47.104]    __Result=0x00000000
[01:34:47.104]    
[01:34:47.104]    // User-defined
[01:34:47.105]    DbgMCU_CR=0x00000007
[01:34:47.105]    DbgMCU_APB1_Fz=0x00000000
[01:34:47.105]    DbgMCU_APB2_Fz=0x00000000
[01:34:47.105]    TraceClk_Pin=0x00040002
[01:34:47.105]    TraceD0_Pin=0x00040003
[01:34:47.106]    TraceD1_Pin=0x00040004
[01:34:47.106]    TraceD2_Pin=0x00040005
[01:34:47.106]    TraceD3_Pin=0x00040006
[01:34:47.106]  </debugvars>
[01:34:47.106]  
[01:34:47.106]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:34:47.107]    <block atomic="false" info="">
[01:34:47.107]      Sequence("CheckID");
[01:34:47.107]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:34:47.107]          <block atomic="false" info="">
[01:34:47.107]            __var pidr1 = 0;
[01:34:47.108]              // -> [pidr1 <= 0x00000000]
[01:34:47.108]            __var pidr2 = 0;
[01:34:47.108]              // -> [pidr2 <= 0x00000000]
[01:34:47.108]            __var jep106id = 0;
[01:34:47.108]              // -> [jep106id <= 0x00000000]
[01:34:47.109]            __var ROMTableBase = 0;
[01:34:47.109]              // -> [ROMTableBase <= 0x00000000]
[01:34:47.109]            __ap = 0;      // AHB-AP
[01:34:47.109]              // -> [__ap <= 0x00000000]
[01:34:47.109]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:34:47.110]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.110]              // -> [ROMTableBase <= 0xE00FD000]
[01:34:47.110]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:34:47.111]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.111]              // -> [pidr1 <= 0x00000004]
[01:34:47.111]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:34:47.112]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.112]              // -> [pidr2 <= 0x0000001A]
[01:34:47.112]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:34:47.112]              // -> [jep106id <= 0x00000020]
[01:34:47.112]          </block>
[01:34:47.112]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:34:47.113]            // if-block "jep106id != 0x20"
[01:34:47.113]              // =>  FALSE
[01:34:47.113]            // skip if-block "jep106id != 0x20"
[01:34:47.113]          </control>
[01:34:47.113]        </sequence>
[01:34:47.113]    </block>
[01:34:47.114]  </sequence>
[01:34:47.114]  
[01:34:47.129]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:34:47.129]  
[01:34:47.129]  <debugvars>
[01:34:47.129]    // Pre-defined
[01:34:47.129]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:47.129]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:34:47.129]    __dp=0x00000000
[01:34:47.129]    __ap=0x00000000
[01:34:47.130]    __traceout=0x00000001      (SWO Trace)
[01:34:47.130]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:47.130]    __FlashAddr=0x00000000
[01:34:47.130]    __FlashLen=0x00000000
[01:34:47.130]    __FlashArg=0x00000000
[01:34:47.130]    __FlashOp=0x00000000
[01:34:47.130]    __Result=0x00000000
[01:34:47.130]    
[01:34:47.130]    // User-defined
[01:34:47.131]    DbgMCU_CR=0x00000007
[01:34:47.131]    DbgMCU_APB1_Fz=0x00000000
[01:34:47.131]    DbgMCU_APB2_Fz=0x00000000
[01:34:47.131]    TraceClk_Pin=0x00040002
[01:34:47.131]    TraceD0_Pin=0x00040003
[01:34:47.131]    TraceD1_Pin=0x00040004
[01:34:47.131]    TraceD2_Pin=0x00040005
[01:34:47.131]    TraceD3_Pin=0x00040006
[01:34:47.131]  </debugvars>
[01:34:47.132]  
[01:34:47.132]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:34:47.132]    <block atomic="false" info="">
[01:34:47.132]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:34:47.133]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.133]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:34:47.133]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.133]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:34:47.134]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.134]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:34:47.134]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.134]    </block>
[01:34:47.134]  </sequence>
[01:34:47.134]  
[01:34:47.150]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[01:34:47.150]  
[01:34:47.150]  <debugvars>
[01:34:47.150]    // Pre-defined
[01:34:47.150]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:47.150]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:34:47.151]    __dp=0x00000000
[01:34:47.151]    __ap=0x00000000
[01:34:47.151]    __traceout=0x00000001      (SWO Trace)
[01:34:47.151]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:47.151]    __FlashAddr=0x00000000
[01:34:47.151]    __FlashLen=0x00000000
[01:34:47.152]    __FlashArg=0x00000000
[01:34:47.152]    __FlashOp=0x00000000
[01:34:47.152]    __Result=0x00000000
[01:34:47.152]    
[01:34:47.152]    // User-defined
[01:34:47.152]    DbgMCU_CR=0x00000007
[01:34:47.152]    DbgMCU_APB1_Fz=0x00000000
[01:34:47.152]    DbgMCU_APB2_Fz=0x00000000
[01:34:47.153]    TraceClk_Pin=0x00040002
[01:34:47.153]    TraceD0_Pin=0x00040003
[01:34:47.153]    TraceD1_Pin=0x00040004
[01:34:47.153]    TraceD2_Pin=0x00040005
[01:34:47.153]    TraceD3_Pin=0x00040006
[01:34:47.153]  </debugvars>
[01:34:47.153]  
[01:34:47.154]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:34:47.154]    <block atomic="false" info="">
[01:34:47.154]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:34:47.154]        // -> [traceSWO <= 0x00000001]
[01:34:47.154]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:34:47.154]        // -> [traceTPIU <= 0x00000000]
[01:34:47.154]    </block>
[01:34:47.155]    <control if="traceSWO" while="" timeout="0" info="">
[01:34:47.155]      // if-block "traceSWO"
[01:34:47.155]        // =>  TRUE
[01:34:47.155]      <block atomic="false" info="">
[01:34:47.155]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:34:47.155]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:34:47.156]            <block atomic="false" info="">
[01:34:47.156]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:34:47.156]                // -> [dbgmcu_val <= 0x00000000]
[01:34:47.156]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:34:47.156]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:34:47.156]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:34:47.157]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.157]                // -> [dbgmcu_val <= 0x00000007]
[01:34:47.157]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:34:47.157]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:34:47.157]              Sequence("ConfigureTraceSWOPin");
[01:34:47.157]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:34:47.157]                  <block atomic="false" info="">
[01:34:47.158]                    __var pin     = 0;
[01:34:47.158]                      // -> [pin <= 0x00000000]
[01:34:47.158]                    __var port    = 0;
[01:34:47.158]                      // -> [port <= 0x00000000]
[01:34:47.158]                    __var portAdr = 0;
[01:34:47.158]                      // -> [portAdr <= 0x00000000]
[01:34:47.158]                    __var pos     = 0;
[01:34:47.158]                      // -> [pos <= 0x00000000]
[01:34:47.158]                    __var SWO_Pin = 0x00010003;          // PB3
[01:34:47.159]                      // -> [SWO_Pin <= 0x00010003]
[01:34:47.159]                  </block>
[01:34:47.159]                  <block atomic="false" info="configure SWO">
[01:34:47.159]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:34:47.159]                      // -> [pin <= 0x00000003]
[01:34:47.159]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:34:47.159]                      // -> [port <= 0x00000001]
[01:34:47.159]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:34:47.159]                      // -> [portAdr <= 0x40020400]
[01:34:47.160]                    pos = pin * 2;
[01:34:47.160]                      // -> [pos <= 0x00000006]
[01:34:47.160]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:34:47.160]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.161]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.161]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:34:47.161]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.162]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.162]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:34:47.162]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.163]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.163]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:34:47.163]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.164]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.164]                  </block>
[01:34:47.164]                  <control if="pin <  8" while="" timeout="0" info="">
[01:34:47.164]                    // if-block "pin <  8"
[01:34:47.164]                      // =>  TRUE
[01:34:47.164]                    <block atomic="false" info="">
[01:34:47.164]                      pos = ((pin    ) & 7) * 4;
[01:34:47.165]                        // -> [pos <= 0x0000000C]
[01:34:47.165]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:34:47.165]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.166]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.166]                    </block>
[01:34:47.166]                    // end if-block "pin <  8"
[01:34:47.166]                  </control>
[01:34:47.166]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:34:47.166]                    // if-block "pin >= 8"
[01:34:47.166]                      // =>  FALSE
[01:34:47.166]                    // skip if-block "pin >= 8"
[01:34:47.166]                  </control>
[01:34:47.167]                </sequence>
[01:34:47.167]            </block>
[01:34:47.167]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:34:47.167]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:34:47.168]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.168]            </block>
[01:34:47.168]          </sequence>
[01:34:47.168]      </block>
[01:34:47.168]      // end if-block "traceSWO"
[01:34:47.168]    </control>
[01:34:47.168]    <control if="traceTPIU" while="" timeout="0" info="">
[01:34:47.168]      // if-block "traceTPIU"
[01:34:47.168]        // =>  FALSE
[01:34:47.169]      // skip if-block "traceTPIU"
[01:34:47.169]    </control>
[01:34:47.169]  </sequence>
[01:34:47.169]  
[01:34:47.173]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:34:47.173]  
[01:34:47.173]  <debugvars>
[01:34:47.173]    // Pre-defined
[01:34:47.173]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:47.173]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:34:47.174]    __dp=0x00000000
[01:34:47.174]    __ap=0x00000000
[01:34:47.174]    __traceout=0x00000001      (SWO Trace)
[01:34:47.174]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:47.174]    __FlashAddr=0x00000000
[01:34:47.174]    __FlashLen=0x00000000
[01:34:47.174]    __FlashArg=0x00000000
[01:34:47.174]    __FlashOp=0x00000000
[01:34:47.175]    __Result=0x00000000
[01:34:47.175]    
[01:34:47.175]    // User-defined
[01:34:47.175]    DbgMCU_CR=0x00000007
[01:34:47.175]    DbgMCU_APB1_Fz=0x00000000
[01:34:47.175]    DbgMCU_APB2_Fz=0x00000000
[01:34:47.175]    TraceClk_Pin=0x00040002
[01:34:47.175]    TraceD0_Pin=0x00040003
[01:34:47.175]    TraceD1_Pin=0x00040004
[01:34:47.176]    TraceD2_Pin=0x00040005
[01:34:47.176]    TraceD3_Pin=0x00040006
[01:34:47.176]  </debugvars>
[01:34:47.176]  
[01:34:47.176]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:34:47.176]    <block atomic="false" info="">
[01:34:47.176]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:34:47.176]        // -> [traceSWO <= 0x00000001]
[01:34:47.177]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:34:47.177]        // -> [traceTPIU <= 0x00000000]
[01:34:47.177]    </block>
[01:34:47.177]    <control if="traceSWO" while="" timeout="0" info="">
[01:34:47.177]      // if-block "traceSWO"
[01:34:47.177]        // =>  TRUE
[01:34:47.177]      <block atomic="false" info="">
[01:34:47.177]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:34:47.178]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:34:47.178]            <block atomic="false" info="">
[01:34:47.178]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:34:47.178]                // -> [dbgmcu_val <= 0x00000000]
[01:34:47.178]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:34:47.178]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:34:47.178]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:34:47.179]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.179]                // -> [dbgmcu_val <= 0x00000007]
[01:34:47.179]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:34:47.179]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:34:47.179]              Sequence("ConfigureTraceSWOPin");
[01:34:47.179]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:34:47.179]                  <block atomic="false" info="">
[01:34:47.179]                    __var pin     = 0;
[01:34:47.180]                      // -> [pin <= 0x00000000]
[01:34:47.180]                    __var port    = 0;
[01:34:47.180]                      // -> [port <= 0x00000000]
[01:34:47.180]                    __var portAdr = 0;
[01:34:47.180]                      // -> [portAdr <= 0x00000000]
[01:34:47.180]                    __var pos     = 0;
[01:34:47.180]                      // -> [pos <= 0x00000000]
[01:34:47.180]                    __var SWO_Pin = 0x00010003;          // PB3
[01:34:47.180]                      // -> [SWO_Pin <= 0x00010003]
[01:34:47.181]                  </block>
[01:34:47.181]                  <block atomic="false" info="configure SWO">
[01:34:47.181]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:34:47.181]                      // -> [pin <= 0x00000003]
[01:34:47.181]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:34:47.181]                      // -> [port <= 0x00000001]
[01:34:47.181]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:34:47.181]                      // -> [portAdr <= 0x40020400]
[01:34:47.182]                    pos = pin * 2;
[01:34:47.182]                      // -> [pos <= 0x00000006]
[01:34:47.182]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:34:47.182]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.183]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.183]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:34:47.183]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.183]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.184]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:34:47.184]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.184]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.185]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:34:47.185]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.185]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.185]                  </block>
[01:34:47.186]                  <control if="pin <  8" while="" timeout="0" info="">
[01:34:47.186]                    // if-block "pin <  8"
[01:34:47.186]                      // =>  TRUE
[01:34:47.186]                    <block atomic="false" info="">
[01:34:47.186]                      pos = ((pin    ) & 7) * 4;
[01:34:47.186]                        // -> [pos <= 0x0000000C]
[01:34:47.186]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:34:47.187]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.187]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.187]                    </block>
[01:34:47.187]                    // end if-block "pin <  8"
[01:34:47.187]                  </control>
[01:34:47.188]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:34:47.188]                    // if-block "pin >= 8"
[01:34:47.188]                      // =>  FALSE
[01:34:47.188]                    // skip if-block "pin >= 8"
[01:34:47.188]                  </control>
[01:34:47.188]                </sequence>
[01:34:47.188]            </block>
[01:34:47.188]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:34:47.188]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:34:47.189]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.189]            </block>
[01:34:47.189]          </sequence>
[01:34:47.189]      </block>
[01:34:47.189]      // end if-block "traceSWO"
[01:34:47.189]    </control>
[01:34:47.190]    <control if="traceTPIU" while="" timeout="0" info="">
[01:34:47.190]      // if-block "traceTPIU"
[01:34:47.190]        // =>  FALSE
[01:34:47.190]      // skip if-block "traceTPIU"
[01:34:47.190]    </control>
[01:34:47.190]  </sequence>
[01:34:47.190]  
[01:34:47.362]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:34:47.362]  
[01:34:47.362]  <debugvars>
[01:34:47.362]    // Pre-defined
[01:34:47.362]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:47.363]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:34:47.363]    __dp=0x00000000
[01:34:47.363]    __ap=0x00000000
[01:34:47.363]    __traceout=0x00000001      (SWO Trace)
[01:34:47.363]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:47.363]    __FlashAddr=0x00000000
[01:34:47.363]    __FlashLen=0x00000000
[01:34:47.364]    __FlashArg=0x00000000
[01:34:47.364]    __FlashOp=0x00000000
[01:34:47.364]    __Result=0x00000000
[01:34:47.364]    
[01:34:47.364]    // User-defined
[01:34:47.364]    DbgMCU_CR=0x00000007
[01:34:47.364]    DbgMCU_APB1_Fz=0x00000000
[01:34:47.364]    DbgMCU_APB2_Fz=0x00000000
[01:34:47.364]    TraceClk_Pin=0x00040002
[01:34:47.364]    TraceD0_Pin=0x00040003
[01:34:47.365]    TraceD1_Pin=0x00040004
[01:34:47.365]    TraceD2_Pin=0x00040005
[01:34:47.365]    TraceD3_Pin=0x00040006
[01:34:47.365]  </debugvars>
[01:34:47.365]  
[01:34:47.365]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:34:47.365]    <block atomic="false" info="">
[01:34:47.365]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:34:47.365]        // -> [traceSWO <= 0x00000001]
[01:34:47.366]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:34:47.366]        // -> [traceTPIU <= 0x00000000]
[01:34:47.366]    </block>
[01:34:47.366]    <control if="traceSWO" while="" timeout="0" info="">
[01:34:47.366]      // if-block "traceSWO"
[01:34:47.366]        // =>  TRUE
[01:34:47.366]      <block atomic="false" info="">
[01:34:47.366]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:34:47.367]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:34:47.367]            <block atomic="false" info="">
[01:34:47.367]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:34:47.367]                // -> [dbgmcu_val <= 0x00000000]
[01:34:47.367]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:34:47.367]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:34:47.367]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:34:47.368]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.368]                // -> [dbgmcu_val <= 0x00000007]
[01:34:47.368]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:34:47.368]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:34:47.368]              Sequence("ConfigureTraceSWOPin");
[01:34:47.368]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:34:47.368]                  <block atomic="false" info="">
[01:34:47.368]                    __var pin     = 0;
[01:34:47.369]                      // -> [pin <= 0x00000000]
[01:34:47.369]                    __var port    = 0;
[01:34:47.369]                      // -> [port <= 0x00000000]
[01:34:47.369]                    __var portAdr = 0;
[01:34:47.369]                      // -> [portAdr <= 0x00000000]
[01:34:47.369]                    __var pos     = 0;
[01:34:47.369]                      // -> [pos <= 0x00000000]
[01:34:47.369]                    __var SWO_Pin = 0x00010003;          // PB3
[01:34:47.369]                      // -> [SWO_Pin <= 0x00010003]
[01:34:47.370]                  </block>
[01:34:47.370]                  <block atomic="false" info="configure SWO">
[01:34:47.370]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:34:47.370]                      // -> [pin <= 0x00000003]
[01:34:47.370]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:34:47.370]                      // -> [port <= 0x00000001]
[01:34:47.370]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:34:47.370]                      // -> [portAdr <= 0x40020400]
[01:34:47.370]                    pos = pin * 2;
[01:34:47.371]                      // -> [pos <= 0x00000006]
[01:34:47.371]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:34:47.371]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.371]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.372]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:34:47.372]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.372]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.372]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:34:47.373]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.373]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.373]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:34:47.374]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.374]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.374]                  </block>
[01:34:47.375]                  <control if="pin <  8" while="" timeout="0" info="">
[01:34:47.375]                    // if-block "pin <  8"
[01:34:47.375]                      // =>  TRUE
[01:34:47.375]                    <block atomic="false" info="">
[01:34:47.375]                      pos = ((pin    ) & 7) * 4;
[01:34:47.375]                        // -> [pos <= 0x0000000C]
[01:34:47.375]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:34:47.376]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.376]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.376]                    </block>
[01:34:47.376]                    // end if-block "pin <  8"
[01:34:47.376]                  </control>
[01:34:47.376]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:34:47.377]                    // if-block "pin >= 8"
[01:34:47.377]                      // =>  FALSE
[01:34:47.377]                    // skip if-block "pin >= 8"
[01:34:47.377]                  </control>
[01:34:47.377]                </sequence>
[01:34:47.377]            </block>
[01:34:47.377]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:34:47.378]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:34:47.378]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:47.378]            </block>
[01:34:47.378]          </sequence>
[01:34:47.378]      </block>
[01:34:47.379]      // end if-block "traceSWO"
[01:34:47.379]    </control>
[01:34:47.379]    <control if="traceTPIU" while="" timeout="0" info="">
[01:34:47.379]      // if-block "traceTPIU"
[01:34:47.379]        // =>  FALSE
[01:34:47.379]      // skip if-block "traceTPIU"
[01:34:47.379]    </control>
[01:34:47.379]  </sequence>
[01:34:47.379]  
[01:37:26.812]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:37:26.812]  
[01:37:26.812]  <debugvars>
[01:37:26.812]    // Pre-defined
[01:37:26.812]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:37:26.813]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:37:26.813]    __dp=0x00000000
[01:37:26.813]    __ap=0x00000000
[01:37:26.813]    __traceout=0x00000001      (SWO Trace)
[01:37:26.813]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:37:26.813]    __FlashAddr=0x00000000
[01:37:26.814]    __FlashLen=0x00000000
[01:37:26.814]    __FlashArg=0x00000000
[01:37:26.814]    __FlashOp=0x00000000
[01:37:26.814]    __Result=0x00000000
[01:37:26.814]    
[01:37:26.814]    // User-defined
[01:37:26.814]    DbgMCU_CR=0x00000007
[01:37:26.815]    DbgMCU_APB1_Fz=0x00000000
[01:37:26.815]    DbgMCU_APB2_Fz=0x00000000
[01:37:26.815]    TraceClk_Pin=0x00040002
[01:37:26.815]    TraceD0_Pin=0x00040003
[01:37:26.815]    TraceD1_Pin=0x00040004
[01:37:26.815]    TraceD2_Pin=0x00040005
[01:37:26.815]    TraceD3_Pin=0x00040006
[01:37:26.816]  </debugvars>
[01:37:26.816]  
[01:37:26.816]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:37:26.816]    <block atomic="false" info="">
[01:37:26.816]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:37:26.816]        // -> [traceSWO <= 0x00000001]
[01:37:26.816]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:37:26.817]        // -> [traceTPIU <= 0x00000000]
[01:37:26.817]    </block>
[01:37:26.817]    <control if="traceSWO" while="" timeout="0" info="">
[01:37:26.817]      // if-block "traceSWO"
[01:37:26.817]        // =>  TRUE
[01:37:26.817]      <block atomic="false" info="">
[01:37:26.817]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:37:26.818]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:37:26.818]            <block atomic="false" info="">
[01:37:26.818]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:37:26.818]                // -> [dbgmcu_val <= 0x00000000]
[01:37:26.818]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:37:26.818]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:37:26.818]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:37:26.819]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.819]                // -> [dbgmcu_val <= 0x00000007]
[01:37:26.819]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:37:26.819]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:37:26.819]              Sequence("ConfigureTraceSWOPin");
[01:37:26.819]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:37:26.820]                  <block atomic="false" info="">
[01:37:26.820]                    __var pin     = 0;
[01:37:26.820]                      // -> [pin <= 0x00000000]
[01:37:26.820]                    __var port    = 0;
[01:37:26.820]                      // -> [port <= 0x00000000]
[01:37:26.820]                    __var portAdr = 0;
[01:37:26.820]                      // -> [portAdr <= 0x00000000]
[01:37:26.820]                    __var pos     = 0;
[01:37:26.821]                      // -> [pos <= 0x00000000]
[01:37:26.821]                    __var SWO_Pin = 0x00010003;          // PB3
[01:37:26.821]                      // -> [SWO_Pin <= 0x00010003]
[01:37:26.821]                  </block>
[01:37:26.821]                  <block atomic="false" info="configure SWO">
[01:37:26.821]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:37:26.821]                      // -> [pin <= 0x00000003]
[01:37:26.822]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:37:26.822]                      // -> [port <= 0x00000001]
[01:37:26.822]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:37:26.822]                      // -> [portAdr <= 0x40020400]
[01:37:26.822]                    pos = pin * 2;
[01:37:26.822]                      // -> [pos <= 0x00000006]
[01:37:26.822]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:37:26.823]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.823]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.823]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:37:26.824]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.824]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.824]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:37:26.825]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.825]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.825]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:37:26.826]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.826]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.826]                  </block>
[01:37:26.826]                  <control if="pin <  8" while="" timeout="0" info="">
[01:37:26.826]                    // if-block "pin <  8"
[01:37:26.826]                      // =>  TRUE
[01:37:26.827]                    <block atomic="false" info="">
[01:37:26.827]                      pos = ((pin    ) & 7) * 4;
[01:37:26.827]                        // -> [pos <= 0x0000000C]
[01:37:26.827]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:37:26.827]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.828]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.828]                    </block>
[01:37:26.828]                    // end if-block "pin <  8"
[01:37:26.828]                  </control>
[01:37:26.828]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:37:26.828]                    // if-block "pin >= 8"
[01:37:26.828]                      // =>  FALSE
[01:37:26.829]                    // skip if-block "pin >= 8"
[01:37:26.829]                  </control>
[01:37:26.829]                </sequence>
[01:37:26.829]            </block>
[01:37:26.829]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:37:26.829]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:37:26.830]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:37:26.830]            </block>
[01:37:26.830]          </sequence>
[01:37:26.830]      </block>
[01:37:26.830]      // end if-block "traceSWO"
[01:37:26.830]    </control>
[01:37:26.830]    <control if="traceTPIU" while="" timeout="0" info="">
[01:37:26.830]      // if-block "traceTPIU"
[01:37:26.831]        // =>  FALSE
[01:37:26.831]      // skip if-block "traceTPIU"
[01:37:26.831]    </control>
[01:37:26.831]  </sequence>
[01:37:26.831]  
[01:39:04.555]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:39:04.555]  
[01:39:04.556]  <debugvars>
[01:39:04.556]    // Pre-defined
[01:39:04.556]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:39:04.556]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:39:04.556]    __dp=0x00000000
[01:39:04.556]    __ap=0x00000000
[01:39:04.556]    __traceout=0x00000001      (SWO Trace)
[01:39:04.557]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:39:04.557]    __FlashAddr=0x00000000
[01:39:04.557]    __FlashLen=0x00000000
[01:39:04.557]    __FlashArg=0x00000000
[01:39:04.557]    __FlashOp=0x00000000
[01:39:04.557]    __Result=0x00000000
[01:39:04.557]    
[01:39:04.557]    // User-defined
[01:39:04.557]    DbgMCU_CR=0x00000007
[01:39:04.557]    DbgMCU_APB1_Fz=0x00000000
[01:39:04.558]    DbgMCU_APB2_Fz=0x00000000
[01:39:04.558]    TraceClk_Pin=0x00040002
[01:39:04.558]    TraceD0_Pin=0x00040003
[01:39:04.558]    TraceD1_Pin=0x00040004
[01:39:04.558]    TraceD2_Pin=0x00040005
[01:39:04.558]    TraceD3_Pin=0x00040006
[01:39:04.558]  </debugvars>
[01:39:04.558]  
[01:39:04.559]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:39:04.559]    <block atomic="false" info="">
[01:39:04.559]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:39:04.559]        // -> [traceSWO <= 0x00000001]
[01:39:04.559]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:39:04.559]        // -> [traceTPIU <= 0x00000000]
[01:39:04.559]    </block>
[01:39:04.559]    <control if="traceSWO" while="" timeout="0" info="">
[01:39:04.559]      // if-block "traceSWO"
[01:39:04.560]        // =>  TRUE
[01:39:04.560]      <block atomic="false" info="">
[01:39:04.560]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:39:04.560]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:39:04.560]            <block atomic="false" info="">
[01:39:04.560]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:39:04.560]                // -> [dbgmcu_val <= 0x00000000]
[01:39:04.560]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:39:04.560]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:39:04.561]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:39:04.561]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.561]                // -> [dbgmcu_val <= 0x00000007]
[01:39:04.561]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:39:04.561]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:39:04.562]              Sequence("ConfigureTraceSWOPin");
[01:39:04.562]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:39:04.562]                  <block atomic="false" info="">
[01:39:04.562]                    __var pin     = 0;
[01:39:04.562]                      // -> [pin <= 0x00000000]
[01:39:04.562]                    __var port    = 0;
[01:39:04.562]                      // -> [port <= 0x00000000]
[01:39:04.562]                    __var portAdr = 0;
[01:39:04.562]                      // -> [portAdr <= 0x00000000]
[01:39:04.563]                    __var pos     = 0;
[01:39:04.563]                      // -> [pos <= 0x00000000]
[01:39:04.563]                    __var SWO_Pin = 0x00010003;          // PB3
[01:39:04.563]                      // -> [SWO_Pin <= 0x00010003]
[01:39:04.563]                  </block>
[01:39:04.563]                  <block atomic="false" info="configure SWO">
[01:39:04.563]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:39:04.563]                      // -> [pin <= 0x00000003]
[01:39:04.564]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:39:04.564]                      // -> [port <= 0x00000001]
[01:39:04.564]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:39:04.564]                      // -> [portAdr <= 0x40020400]
[01:39:04.564]                    pos = pin * 2;
[01:39:04.564]                      // -> [pos <= 0x00000006]
[01:39:04.564]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:39:04.565]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.565]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.565]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:39:04.566]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.566]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.566]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:39:04.567]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.567]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.567]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:39:04.568]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.568]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.568]                  </block>
[01:39:04.568]                  <control if="pin <  8" while="" timeout="0" info="">
[01:39:04.568]                    // if-block "pin <  8"
[01:39:04.568]                      // =>  TRUE
[01:39:04.569]                    <block atomic="false" info="">
[01:39:04.569]                      pos = ((pin    ) & 7) * 4;
[01:39:04.569]                        // -> [pos <= 0x0000000C]
[01:39:04.569]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:39:04.569]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.570]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.570]                    </block>
[01:39:04.570]                    // end if-block "pin <  8"
[01:39:04.570]                  </control>
[01:39:04.570]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:39:04.570]                    // if-block "pin >= 8"
[01:39:04.570]                      // =>  FALSE
[01:39:04.571]                    // skip if-block "pin >= 8"
[01:39:04.571]                  </control>
[01:39:04.571]                </sequence>
[01:39:04.571]            </block>
[01:39:04.571]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:39:04.571]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:39:04.571]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:39:04.572]            </block>
[01:39:04.572]          </sequence>
[01:39:04.572]      </block>
[01:39:04.572]      // end if-block "traceSWO"
[01:39:04.572]    </control>
[01:39:04.572]    <control if="traceTPIU" while="" timeout="0" info="">
[01:39:04.572]      // if-block "traceTPIU"
[01:39:04.572]        // =>  FALSE
[01:39:04.573]      // skip if-block "traceTPIU"
[01:39:04.573]    </control>
[01:39:04.573]  </sequence>
[01:39:04.573]  
[01:40:00.277]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[01:40:00.277]  
[01:40:00.278]  <debugvars>
[01:40:00.278]    // Pre-defined
[01:40:00.278]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:40:00.278]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:40:00.278]    __dp=0x00000000
[01:40:00.279]    __ap=0x00000000
[01:40:00.279]    __traceout=0x00000001      (SWO Trace)
[01:40:00.279]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:40:00.279]    __FlashAddr=0x00000000
[01:40:00.279]    __FlashLen=0x00000000
[01:40:00.279]    __FlashArg=0x00000000
[01:40:00.280]    __FlashOp=0x00000000
[01:40:00.280]    __Result=0x00000000
[01:40:00.280]    
[01:40:00.280]    // User-defined
[01:40:00.280]    DbgMCU_CR=0x00000007
[01:40:00.280]    DbgMCU_APB1_Fz=0x00000000
[01:40:00.280]    DbgMCU_APB2_Fz=0x00000000
[01:40:00.280]    TraceClk_Pin=0x00040002
[01:40:00.281]    TraceD0_Pin=0x00040003
[01:40:00.281]    TraceD1_Pin=0x00040004
[01:40:00.281]    TraceD2_Pin=0x00040005
[01:40:00.281]    TraceD3_Pin=0x00040006
[01:40:00.281]  </debugvars>
[01:40:00.281]  
[01:40:00.282]  <sequence name="TraceStop" Pname="" disable="false" info="">
[01:40:00.282]    <block atomic="false" info="">
[01:40:00.282]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[01:40:00.282]        // -> [traceSWO <= 0x00000001]
[01:40:00.282]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[01:40:00.282]        // -> [traceTPIU <= 0x00000000]
[01:40:00.283]    </block>
[01:40:00.283]    <control if="traceSWO" while="" timeout="0" info="">
[01:40:00.283]      // if-block "traceSWO"
[01:40:00.283]        // =>  TRUE
[01:40:00.283]      <block atomic="false" info="">
[01:40:00.283]        Sequence("DisableTraceSWO");
[01:40:00.284]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[01:40:00.284]            <block atomic="false" info="">
[01:40:00.284]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:40:00.284]                // -> [dbgmcu_val <= 0x00000000]
[01:40:00.284]            </block>
[01:40:00.284]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[01:40:00.284]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[01:40:00.285]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:40:00.285]                // -> [dbgmcu_val <= 0x00000007]
[01:40:00.285]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[01:40:00.285]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:40:00.285]            </block>
[01:40:00.286]          </sequence>
[01:40:00.286]      </block>
[01:40:00.286]      // end if-block "traceSWO"
[01:40:00.286]    </control>
[01:40:00.286]    <control if="traceTPIU" while="" timeout="0" info="">
[01:40:00.286]      // if-block "traceTPIU"
[01:40:00.286]        // =>  FALSE
[01:40:00.286]      // skip if-block "traceTPIU"
[01:40:00.286]    </control>
[01:40:00.287]  </sequence>
[01:40:00.287]  
[01:47:11.979]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:47:11.979]  
[01:47:11.979]  <debugvars>
[01:47:11.979]    // Pre-defined
[01:47:11.979]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:11.980]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:47:11.980]    __dp=0x00000000
[01:47:11.980]    __ap=0x00000000
[01:47:11.980]    __traceout=0x00000001      (SWO Trace)
[01:47:11.980]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:11.981]    __FlashAddr=0x00000000
[01:47:11.981]    __FlashLen=0x00000000
[01:47:11.981]    __FlashArg=0x00000000
[01:47:11.981]    __FlashOp=0x00000000
[01:47:11.981]    __Result=0x00000000
[01:47:11.981]    
[01:47:11.981]    // User-defined
[01:47:11.982]    DbgMCU_CR=0x00000007
[01:47:11.982]    DbgMCU_APB1_Fz=0x00000000
[01:47:11.982]    DbgMCU_APB2_Fz=0x00000000
[01:47:11.982]    TraceClk_Pin=0x00040002
[01:47:11.983]    TraceD0_Pin=0x00040003
[01:47:11.983]    TraceD1_Pin=0x00040004
[01:47:11.983]    TraceD2_Pin=0x00040005
[01:47:11.983]    TraceD3_Pin=0x00040006
[01:47:11.983]  </debugvars>
[01:47:11.983]  
[01:47:11.984]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:47:11.984]    <block atomic="false" info="">
[01:47:11.984]      Sequence("CheckID");
[01:47:11.984]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:47:11.984]          <block atomic="false" info="">
[01:47:11.984]            __var pidr1 = 0;
[01:47:11.984]              // -> [pidr1 <= 0x00000000]
[01:47:11.985]            __var pidr2 = 0;
[01:47:11.985]              // -> [pidr2 <= 0x00000000]
[01:47:11.985]            __var jep106id = 0;
[01:47:11.985]              // -> [jep106id <= 0x00000000]
[01:47:11.985]            __var ROMTableBase = 0;
[01:47:11.985]              // -> [ROMTableBase <= 0x00000000]
[01:47:11.985]            __ap = 0;      // AHB-AP
[01:47:11.986]              // -> [__ap <= 0x00000000]
[01:47:11.986]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:47:11.986]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:47:11.986]              // -> [ROMTableBase <= 0xE00FD000]
[01:47:11.986]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:47:11.987]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:47:11.987]              // -> [pidr1 <= 0x00000004]
[01:47:11.987]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:47:11.988]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:47:11.988]              // -> [pidr2 <= 0x0000001A]
[01:47:11.988]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:47:11.988]              // -> [jep106id <= 0x00000020]
[01:47:11.988]          </block>
[01:47:11.988]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:47:11.988]            // if-block "jep106id != 0x20"
[01:47:11.989]              // =>  FALSE
[01:47:11.989]            // skip if-block "jep106id != 0x20"
[01:47:11.989]          </control>
[01:47:11.989]        </sequence>
[01:47:11.989]    </block>
[01:47:11.989]  </sequence>
[01:47:11.989]  
[01:47:12.005]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:47:12.005]  
[01:47:12.006]  <debugvars>
[01:47:12.006]    // Pre-defined
[01:47:12.006]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:12.006]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:47:12.006]    __dp=0x00000000
[01:47:12.006]    __ap=0x00000000
[01:47:12.007]    __traceout=0x00000001      (SWO Trace)
[01:47:12.007]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:12.007]    __FlashAddr=0x00000000
[01:47:12.007]    __FlashLen=0x00000000
[01:47:12.007]    __FlashArg=0x00000000
[01:47:12.007]    __FlashOp=0x00000000
[01:47:12.008]    __Result=0x00000000
[01:47:12.008]    
[01:47:12.008]    // User-defined
[01:47:12.008]    DbgMCU_CR=0x00000007
[01:47:12.008]    DbgMCU_APB1_Fz=0x00000000
[01:47:12.008]    DbgMCU_APB2_Fz=0x00000000
[01:47:12.008]    TraceClk_Pin=0x00040002
[01:47:12.008]    TraceD0_Pin=0x00040003
[01:47:12.009]    TraceD1_Pin=0x00040004
[01:47:12.009]    TraceD2_Pin=0x00040005
[01:47:12.009]    TraceD3_Pin=0x00040006
[01:47:12.009]  </debugvars>
[01:47:12.009]  
[01:47:12.009]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:47:12.010]    <block atomic="false" info="">
[01:47:12.010]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:47:12.010]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:12.010]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:47:12.011]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:12.011]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:47:12.012]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:12.012]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:47:12.012]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:12.013]    </block>
[01:47:12.013]  </sequence>
[01:47:12.013]  
[01:47:43.294]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:47:43.294]  
[01:47:43.294]  <debugvars>
[01:47:43.294]    // Pre-defined
[01:47:43.295]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:43.295]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:47:43.295]    __dp=0x00000000
[01:47:43.295]    __ap=0x00000000
[01:47:43.295]    __traceout=0x00000001      (SWO Trace)
[01:47:43.295]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:43.295]    __FlashAddr=0x00000000
[01:47:43.296]    __FlashLen=0x00000000
[01:47:43.296]    __FlashArg=0x00000000
[01:47:43.296]    __FlashOp=0x00000000
[01:47:43.296]    __Result=0x00000000
[01:47:43.296]    
[01:47:43.296]    // User-defined
[01:47:43.296]    DbgMCU_CR=0x00000007
[01:47:43.297]    DbgMCU_APB1_Fz=0x00000000
[01:47:43.297]    DbgMCU_APB2_Fz=0x00000000
[01:47:43.297]    TraceClk_Pin=0x00040002
[01:47:43.297]    TraceD0_Pin=0x00040003
[01:47:43.297]    TraceD1_Pin=0x00040004
[01:47:43.297]    TraceD2_Pin=0x00040005
[01:47:43.297]    TraceD3_Pin=0x00040006
[01:47:43.298]  </debugvars>
[01:47:43.298]  
[01:47:43.298]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:47:43.298]    <block atomic="false" info="">
[01:47:43.298]      Sequence("CheckID");
[01:47:43.298]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:47:43.298]          <block atomic="false" info="">
[01:47:43.298]            __var pidr1 = 0;
[01:47:43.299]              // -> [pidr1 <= 0x00000000]
[01:47:43.299]            __var pidr2 = 0;
[01:47:43.299]              // -> [pidr2 <= 0x00000000]
[01:47:43.299]            __var jep106id = 0;
[01:47:43.299]              // -> [jep106id <= 0x00000000]
[01:47:43.299]            __var ROMTableBase = 0;
[01:47:43.299]              // -> [ROMTableBase <= 0x00000000]
[01:47:43.299]            __ap = 0;      // AHB-AP
[01:47:43.300]              // -> [__ap <= 0x00000000]
[01:47:43.300]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:47:43.300]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.300]              // -> [ROMTableBase <= 0xE00FD000]
[01:47:43.300]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:47:43.301]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.301]              // -> [pidr1 <= 0x00000004]
[01:47:43.301]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:47:43.302]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.302]              // -> [pidr2 <= 0x0000001A]
[01:47:43.302]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:47:43.302]              // -> [jep106id <= 0x00000020]
[01:47:43.302]          </block>
[01:47:43.302]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:47:43.303]            // if-block "jep106id != 0x20"
[01:47:43.303]              // =>  FALSE
[01:47:43.303]            // skip if-block "jep106id != 0x20"
[01:47:43.303]          </control>
[01:47:43.303]        </sequence>
[01:47:43.303]    </block>
[01:47:43.304]  </sequence>
[01:47:43.304]  
[01:47:43.318]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:47:43.318]  
[01:47:43.319]  <debugvars>
[01:47:43.319]    // Pre-defined
[01:47:43.319]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:43.319]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:47:43.319]    __dp=0x00000000
[01:47:43.320]    __ap=0x00000000
[01:47:43.320]    __traceout=0x00000001      (SWO Trace)
[01:47:43.320]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:43.320]    __FlashAddr=0x00000000
[01:47:43.320]    __FlashLen=0x00000000
[01:47:43.321]    __FlashArg=0x00000000
[01:47:43.321]    __FlashOp=0x00000000
[01:47:43.321]    __Result=0x00000000
[01:47:43.321]    
[01:47:43.321]    // User-defined
[01:47:43.321]    DbgMCU_CR=0x00000007
[01:47:43.321]    DbgMCU_APB1_Fz=0x00000000
[01:47:43.322]    DbgMCU_APB2_Fz=0x00000000
[01:47:43.322]    TraceClk_Pin=0x00040002
[01:47:43.322]    TraceD0_Pin=0x00040003
[01:47:43.322]    TraceD1_Pin=0x00040004
[01:47:43.323]    TraceD2_Pin=0x00040005
[01:47:43.323]    TraceD3_Pin=0x00040006
[01:47:43.323]  </debugvars>
[01:47:43.323]  
[01:47:43.323]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:47:43.323]    <block atomic="false" info="">
[01:47:43.324]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:47:43.324]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.325]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:47:43.325]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.325]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:47:43.326]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.326]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:47:43.327]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.327]    </block>
[01:47:43.327]  </sequence>
[01:47:43.327]  
[01:47:43.344]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[01:47:43.344]  
[01:47:43.344]  <debugvars>
[01:47:43.344]    // Pre-defined
[01:47:43.344]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:43.345]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:47:43.345]    __dp=0x00000000
[01:47:43.345]    __ap=0x00000000
[01:47:43.345]    __traceout=0x00000001      (SWO Trace)
[01:47:43.345]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:43.345]    __FlashAddr=0x00000000
[01:47:43.346]    __FlashLen=0x00000000
[01:47:43.346]    __FlashArg=0x00000000
[01:47:43.346]    __FlashOp=0x00000000
[01:47:43.346]    __Result=0x00000000
[01:47:43.346]    
[01:47:43.346]    // User-defined
[01:47:43.346]    DbgMCU_CR=0x00000007
[01:47:43.347]    DbgMCU_APB1_Fz=0x00000000
[01:47:43.347]    DbgMCU_APB2_Fz=0x00000000
[01:47:43.347]    TraceClk_Pin=0x00040002
[01:47:43.347]    TraceD0_Pin=0x00040003
[01:47:43.347]    TraceD1_Pin=0x00040004
[01:47:43.347]    TraceD2_Pin=0x00040005
[01:47:43.347]    TraceD3_Pin=0x00040006
[01:47:43.348]  </debugvars>
[01:47:43.348]  
[01:47:43.348]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:47:43.348]    <block atomic="false" info="">
[01:47:43.348]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:47:43.348]        // -> [traceSWO <= 0x00000001]
[01:47:43.348]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:47:43.348]        // -> [traceTPIU <= 0x00000000]
[01:47:43.349]    </block>
[01:47:43.349]    <control if="traceSWO" while="" timeout="0" info="">
[01:47:43.349]      // if-block "traceSWO"
[01:47:43.349]        // =>  TRUE
[01:47:43.349]      <block atomic="false" info="">
[01:47:43.349]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:47:43.349]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:47:43.349]            <block atomic="false" info="">
[01:47:43.349]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:47:43.350]                // -> [dbgmcu_val <= 0x00000000]
[01:47:43.350]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:47:43.350]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:47:43.350]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:47:43.350]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.351]                // -> [dbgmcu_val <= 0x00000007]
[01:47:43.351]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:47:43.351]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:47:43.351]              Sequence("ConfigureTraceSWOPin");
[01:47:43.351]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:47:43.351]                  <block atomic="false" info="">
[01:47:43.351]                    __var pin     = 0;
[01:47:43.351]                      // -> [pin <= 0x00000000]
[01:47:43.351]                    __var port    = 0;
[01:47:43.352]                      // -> [port <= 0x00000000]
[01:47:43.352]                    __var portAdr = 0;
[01:47:43.352]                      // -> [portAdr <= 0x00000000]
[01:47:43.352]                    __var pos     = 0;
[01:47:43.352]                      // -> [pos <= 0x00000000]
[01:47:43.352]                    __var SWO_Pin = 0x00010003;          // PB3
[01:47:43.352]                      // -> [SWO_Pin <= 0x00010003]
[01:47:43.352]                  </block>
[01:47:43.353]                  <block atomic="false" info="configure SWO">
[01:47:43.353]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:47:43.353]                      // -> [pin <= 0x00000003]
[01:47:43.353]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:47:43.353]                      // -> [port <= 0x00000001]
[01:47:43.353]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:47:43.353]                      // -> [portAdr <= 0x40020400]
[01:47:43.353]                    pos = pin * 2;
[01:47:43.353]                      // -> [pos <= 0x00000006]
[01:47:43.354]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:47:43.354]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.354]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.355]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:47:43.355]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.355]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.355]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:47:43.356]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.356]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.356]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:47:43.357]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.358]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.358]                  </block>
[01:47:43.358]                  <control if="pin <  8" while="" timeout="0" info="">
[01:47:43.358]                    // if-block "pin <  8"
[01:47:43.358]                      // =>  TRUE
[01:47:43.358]                    <block atomic="false" info="">
[01:47:43.358]                      pos = ((pin    ) & 7) * 4;
[01:47:43.358]                        // -> [pos <= 0x0000000C]
[01:47:43.358]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:47:43.359]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.359]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.359]                    </block>
[01:47:43.360]                    // end if-block "pin <  8"
[01:47:43.360]                  </control>
[01:47:43.360]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:47:43.360]                    // if-block "pin >= 8"
[01:47:43.360]                      // =>  FALSE
[01:47:43.360]                    // skip if-block "pin >= 8"
[01:47:43.361]                  </control>
[01:47:43.361]                </sequence>
[01:47:43.361]            </block>
[01:47:43.361]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:47:43.361]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:47:43.362]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.362]            </block>
[01:47:43.362]          </sequence>
[01:47:43.362]      </block>
[01:47:43.362]      // end if-block "traceSWO"
[01:47:43.362]    </control>
[01:47:43.362]    <control if="traceTPIU" while="" timeout="0" info="">
[01:47:43.362]      // if-block "traceTPIU"
[01:47:43.362]        // =>  FALSE
[01:47:43.363]      // skip if-block "traceTPIU"
[01:47:43.363]    </control>
[01:47:43.363]  </sequence>
[01:47:43.363]  
[01:47:43.370]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:47:43.370]  
[01:47:43.370]  <debugvars>
[01:47:43.370]    // Pre-defined
[01:47:43.370]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:43.371]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:47:43.371]    __dp=0x00000000
[01:47:43.371]    __ap=0x00000000
[01:47:43.371]    __traceout=0x00000001      (SWO Trace)
[01:47:43.372]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:43.372]    __FlashAddr=0x00000000
[01:47:43.372]    __FlashLen=0x00000000
[01:47:43.372]    __FlashArg=0x00000000
[01:47:43.373]    __FlashOp=0x00000000
[01:47:43.373]    __Result=0x00000000
[01:47:43.373]    
[01:47:43.373]    // User-defined
[01:47:43.373]    DbgMCU_CR=0x00000007
[01:47:43.373]    DbgMCU_APB1_Fz=0x00000000
[01:47:43.374]    DbgMCU_APB2_Fz=0x00000000
[01:47:43.374]    TraceClk_Pin=0x00040002
[01:47:43.374]    TraceD0_Pin=0x00040003
[01:47:43.374]    TraceD1_Pin=0x00040004
[01:47:43.374]    TraceD2_Pin=0x00040005
[01:47:43.375]    TraceD3_Pin=0x00040006
[01:47:43.375]  </debugvars>
[01:47:43.375]  
[01:47:43.375]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:47:43.375]    <block atomic="false" info="">
[01:47:43.375]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:47:43.375]        // -> [traceSWO <= 0x00000001]
[01:47:43.376]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:47:43.376]        // -> [traceTPIU <= 0x00000000]
[01:47:43.376]    </block>
[01:47:43.376]    <control if="traceSWO" while="" timeout="0" info="">
[01:47:43.376]      // if-block "traceSWO"
[01:47:43.377]        // =>  TRUE
[01:47:43.377]      <block atomic="false" info="">
[01:47:43.377]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:47:43.377]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:47:43.377]            <block atomic="false" info="">
[01:47:43.377]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:47:43.378]                // -> [dbgmcu_val <= 0x00000000]
[01:47:43.378]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:47:43.378]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:47:43.378]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:47:43.379]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.379]                // -> [dbgmcu_val <= 0x00000007]
[01:47:43.379]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:47:43.379]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:47:43.379]              Sequence("ConfigureTraceSWOPin");
[01:47:43.379]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:47:43.380]                  <block atomic="false" info="">
[01:47:43.380]                    __var pin     = 0;
[01:47:43.380]                      // -> [pin <= 0x00000000]
[01:47:43.380]                    __var port    = 0;
[01:47:43.380]                      // -> [port <= 0x00000000]
[01:47:43.380]                    __var portAdr = 0;
[01:47:43.381]                      // -> [portAdr <= 0x00000000]
[01:47:43.381]                    __var pos     = 0;
[01:47:43.381]                      // -> [pos <= 0x00000000]
[01:47:43.381]                    __var SWO_Pin = 0x00010003;          // PB3
[01:47:43.381]                      // -> [SWO_Pin <= 0x00010003]
[01:47:43.381]                  </block>
[01:47:43.382]                  <block atomic="false" info="configure SWO">
[01:47:43.382]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:47:43.382]                      // -> [pin <= 0x00000003]
[01:47:43.382]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:47:43.382]                      // -> [port <= 0x00000001]
[01:47:43.382]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:47:43.382]                      // -> [portAdr <= 0x40020400]
[01:47:43.382]                    pos = pin * 2;
[01:47:43.382]                      // -> [pos <= 0x00000006]
[01:47:43.383]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:47:43.383]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.383]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.384]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:47:43.384]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.385]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.385]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:47:43.385]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.386]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.386]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:47:43.386]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.387]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.387]                  </block>
[01:47:43.387]                  <control if="pin <  8" while="" timeout="0" info="">
[01:47:43.387]                    // if-block "pin <  8"
[01:47:43.388]                      // =>  TRUE
[01:47:43.388]                    <block atomic="false" info="">
[01:47:43.388]                      pos = ((pin    ) & 7) * 4;
[01:47:43.388]                        // -> [pos <= 0x0000000C]
[01:47:43.388]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:47:43.389]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.389]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.389]                    </block>
[01:47:43.389]                    // end if-block "pin <  8"
[01:47:43.389]                  </control>
[01:47:43.390]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:47:43.390]                    // if-block "pin >= 8"
[01:47:43.390]                      // =>  FALSE
[01:47:43.390]                    // skip if-block "pin >= 8"
[01:47:43.390]                  </control>
[01:47:43.390]                </sequence>
[01:47:43.390]            </block>
[01:47:43.391]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:47:43.391]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:47:43.391]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.391]            </block>
[01:47:43.391]          </sequence>
[01:47:43.391]      </block>
[01:47:43.392]      // end if-block "traceSWO"
[01:47:43.392]    </control>
[01:47:43.392]    <control if="traceTPIU" while="" timeout="0" info="">
[01:47:43.392]      // if-block "traceTPIU"
[01:47:43.392]        // =>  FALSE
[01:47:43.392]      // skip if-block "traceTPIU"
[01:47:43.392]    </control>
[01:47:43.392]  </sequence>
[01:47:43.392]  
[01:47:43.619]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:47:43.619]  
[01:47:43.619]  <debugvars>
[01:47:43.620]    // Pre-defined
[01:47:43.620]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:47:43.620]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:47:43.620]    __dp=0x00000000
[01:47:43.620]    __ap=0x00000000
[01:47:43.620]    __traceout=0x00000001      (SWO Trace)
[01:47:43.621]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:47:43.621]    __FlashAddr=0x00000000
[01:47:43.621]    __FlashLen=0x00000000
[01:47:43.621]    __FlashArg=0x00000000
[01:47:43.621]    __FlashOp=0x00000000
[01:47:43.621]    __Result=0x00000000
[01:47:43.622]    
[01:47:43.622]    // User-defined
[01:47:43.622]    DbgMCU_CR=0x00000007
[01:47:43.622]    DbgMCU_APB1_Fz=0x00000000
[01:47:43.622]    DbgMCU_APB2_Fz=0x00000000
[01:47:43.622]    TraceClk_Pin=0x00040002
[01:47:43.622]    TraceD0_Pin=0x00040003
[01:47:43.623]    TraceD1_Pin=0x00040004
[01:47:43.623]    TraceD2_Pin=0x00040005
[01:47:43.623]    TraceD3_Pin=0x00040006
[01:47:43.623]  </debugvars>
[01:47:43.623]  
[01:47:43.624]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:47:43.624]    <block atomic="false" info="">
[01:47:43.624]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:47:43.624]        // -> [traceSWO <= 0x00000001]
[01:47:43.624]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:47:43.624]        // -> [traceTPIU <= 0x00000000]
[01:47:43.625]    </block>
[01:47:43.625]    <control if="traceSWO" while="" timeout="0" info="">
[01:47:43.625]      // if-block "traceSWO"
[01:47:43.625]        // =>  TRUE
[01:47:43.625]      <block atomic="false" info="">
[01:47:43.625]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:47:43.625]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:47:43.626]            <block atomic="false" info="">
[01:47:43.626]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:47:43.626]                // -> [dbgmcu_val <= 0x00000000]
[01:47:43.626]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:47:43.626]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:47:43.626]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:47:43.627]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.627]                // -> [dbgmcu_val <= 0x00000007]
[01:47:43.627]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:47:43.627]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:47:43.627]              Sequence("ConfigureTraceSWOPin");
[01:47:43.627]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:47:43.627]                  <block atomic="false" info="">
[01:47:43.628]                    __var pin     = 0;
[01:47:43.628]                      // -> [pin <= 0x00000000]
[01:47:43.628]                    __var port    = 0;
[01:47:43.628]                      // -> [port <= 0x00000000]
[01:47:43.628]                    __var portAdr = 0;
[01:47:43.628]                      // -> [portAdr <= 0x00000000]
[01:47:43.628]                    __var pos     = 0;
[01:47:43.628]                      // -> [pos <= 0x00000000]
[01:47:43.629]                    __var SWO_Pin = 0x00010003;          // PB3
[01:47:43.629]                      // -> [SWO_Pin <= 0x00010003]
[01:47:43.629]                  </block>
[01:47:43.629]                  <block atomic="false" info="configure SWO">
[01:47:43.629]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:47:43.629]                      // -> [pin <= 0x00000003]
[01:47:43.629]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:47:43.629]                      // -> [port <= 0x00000001]
[01:47:43.629]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:47:43.630]                      // -> [portAdr <= 0x40020400]
[01:47:43.630]                    pos = pin * 2;
[01:47:43.630]                      // -> [pos <= 0x00000006]
[01:47:43.630]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:47:43.630]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.631]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.631]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:47:43.631]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.632]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.633]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:47:43.633]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.634]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.634]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:47:43.634]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.635]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.635]                  </block>
[01:47:43.635]                  <control if="pin <  8" while="" timeout="0" info="">
[01:47:43.635]                    // if-block "pin <  8"
[01:47:43.635]                      // =>  TRUE
[01:47:43.635]                    <block atomic="false" info="">
[01:47:43.635]                      pos = ((pin    ) & 7) * 4;
[01:47:43.635]                        // -> [pos <= 0x0000000C]
[01:47:43.636]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:47:43.636]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.636]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.637]                    </block>
[01:47:43.637]                    // end if-block "pin <  8"
[01:47:43.637]                  </control>
[01:47:43.637]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:47:43.637]                    // if-block "pin >= 8"
[01:47:43.637]                      // =>  FALSE
[01:47:43.637]                    // skip if-block "pin >= 8"
[01:47:43.637]                  </control>
[01:47:43.637]                </sequence>
[01:47:43.638]            </block>
[01:47:43.638]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:47:43.638]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:47:43.638]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:47:43.638]            </block>
[01:47:43.638]          </sequence>
[01:47:43.639]      </block>
[01:47:43.639]      // end if-block "traceSWO"
[01:47:43.639]    </control>
[01:47:43.639]    <control if="traceTPIU" while="" timeout="0" info="">
[01:47:43.639]      // if-block "traceTPIU"
[01:47:43.639]        // =>  FALSE
[01:47:43.639]      // skip if-block "traceTPIU"
[01:47:43.639]    </control>
[01:47:43.639]  </sequence>
[01:47:43.640]  
[01:52:26.019]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:52:26.019]  
[01:52:26.019]  <debugvars>
[01:52:26.020]    // Pre-defined
[01:52:26.020]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:52:26.020]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:52:26.020]    __dp=0x00000000
[01:52:26.020]    __ap=0x00000000
[01:52:26.021]    __traceout=0x00000001      (SWO Trace)
[01:52:26.021]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:52:26.021]    __FlashAddr=0x00000000
[01:52:26.021]    __FlashLen=0x00000000
[01:52:26.021]    __FlashArg=0x00000000
[01:52:26.022]    __FlashOp=0x00000000
[01:52:26.022]    __Result=0x00000000
[01:52:26.022]    
[01:52:26.022]    // User-defined
[01:52:26.022]    DbgMCU_CR=0x00000007
[01:52:26.022]    DbgMCU_APB1_Fz=0x00000000
[01:52:26.023]    DbgMCU_APB2_Fz=0x00000000
[01:52:26.023]    TraceClk_Pin=0x00040002
[01:52:26.023]    TraceD0_Pin=0x00040003
[01:52:26.023]    TraceD1_Pin=0x00040004
[01:52:26.023]    TraceD2_Pin=0x00040005
[01:52:26.023]    TraceD3_Pin=0x00040006
[01:52:26.024]  </debugvars>
[01:52:26.024]  
[01:52:26.024]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:52:26.024]    <block atomic="false" info="">
[01:52:26.024]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:52:26.025]        // -> [traceSWO <= 0x00000001]
[01:52:26.025]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:52:26.025]        // -> [traceTPIU <= 0x00000000]
[01:52:26.025]    </block>
[01:52:26.025]    <control if="traceSWO" while="" timeout="0" info="">
[01:52:26.025]      // if-block "traceSWO"
[01:52:26.026]        // =>  TRUE
[01:52:26.026]      <block atomic="false" info="">
[01:52:26.026]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:52:26.026]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:52:26.026]            <block atomic="false" info="">
[01:52:26.026]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:52:26.027]                // -> [dbgmcu_val <= 0x00000000]
[01:52:26.027]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:52:26.027]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:52:26.027]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:52:26.028]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.028]                // -> [dbgmcu_val <= 0x00000007]
[01:52:26.028]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:52:26.028]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:52:26.028]              Sequence("ConfigureTraceSWOPin");
[01:52:26.029]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:52:26.029]                  <block atomic="false" info="">
[01:52:26.029]                    __var pin     = 0;
[01:52:26.029]                      // -> [pin <= 0x00000000]
[01:52:26.029]                    __var port    = 0;
[01:52:26.029]                      // -> [port <= 0x00000000]
[01:52:26.030]                    __var portAdr = 0;
[01:52:26.030]                      // -> [portAdr <= 0x00000000]
[01:52:26.030]                    __var pos     = 0;
[01:52:26.030]                      // -> [pos <= 0x00000000]
[01:52:26.030]                    __var SWO_Pin = 0x00010003;          // PB3
[01:52:26.030]                      // -> [SWO_Pin <= 0x00010003]
[01:52:26.031]                  </block>
[01:52:26.031]                  <block atomic="false" info="configure SWO">
[01:52:26.031]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:52:26.031]                      // -> [pin <= 0x00000003]
[01:52:26.031]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:52:26.031]                      // -> [port <= 0x00000001]
[01:52:26.032]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:52:26.032]                      // -> [portAdr <= 0x40020400]
[01:52:26.032]                    pos = pin * 2;
[01:52:26.032]                      // -> [pos <= 0x00000006]
[01:52:26.032]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:52:26.033]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.033]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.033]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:52:26.034]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.034]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.034]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:52:26.035]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.035]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.035]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:52:26.036]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.036]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.036]                  </block>
[01:52:26.036]                  <control if="pin <  8" while="" timeout="0" info="">
[01:52:26.036]                    // if-block "pin <  8"
[01:52:26.037]                      // =>  TRUE
[01:52:26.037]                    <block atomic="false" info="">
[01:52:26.037]                      pos = ((pin    ) & 7) * 4;
[01:52:26.037]                        // -> [pos <= 0x0000000C]
[01:52:26.037]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:52:26.037]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.038]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.038]                    </block>
[01:52:26.038]                    // end if-block "pin <  8"
[01:52:26.038]                  </control>
[01:52:26.038]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:52:26.038]                    // if-block "pin >= 8"
[01:52:26.038]                      // =>  FALSE
[01:52:26.039]                    // skip if-block "pin >= 8"
[01:52:26.039]                  </control>
[01:52:26.039]                </sequence>
[01:52:26.039]            </block>
[01:52:26.039]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:52:26.039]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:52:26.040]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:52:26.040]            </block>
[01:52:26.040]          </sequence>
[01:52:26.040]      </block>
[01:52:26.040]      // end if-block "traceSWO"
[01:52:26.040]    </control>
[01:52:26.040]    <control if="traceTPIU" while="" timeout="0" info="">
[01:52:26.040]      // if-block "traceTPIU"
[01:52:26.040]        // =>  FALSE
[01:52:26.041]      // skip if-block "traceTPIU"
[01:52:26.041]    </control>
[01:52:26.041]  </sequence>
[01:52:26.041]  
[01:53:17.622]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[01:53:17.622]  
[01:53:17.623]  <debugvars>
[01:53:17.623]    // Pre-defined
[01:53:17.623]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:53:17.623]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:53:17.624]    __dp=0x00000000
[01:53:17.624]    __ap=0x00000000
[01:53:17.624]    __traceout=0x00000001      (SWO Trace)
[01:53:17.624]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:53:17.624]    __FlashAddr=0x00000000
[01:53:17.624]    __FlashLen=0x00000000
[01:53:17.625]    __FlashArg=0x00000000
[01:53:17.625]    __FlashOp=0x00000000
[01:53:17.625]    __Result=0x00000000
[01:53:17.625]    
[01:53:17.625]    // User-defined
[01:53:17.625]    DbgMCU_CR=0x00000007
[01:53:17.625]    DbgMCU_APB1_Fz=0x00000000
[01:53:17.625]    DbgMCU_APB2_Fz=0x00000000
[01:53:17.626]    TraceClk_Pin=0x00040002
[01:53:17.626]    TraceD0_Pin=0x00040003
[01:53:17.626]    TraceD1_Pin=0x00040004
[01:53:17.626]    TraceD2_Pin=0x00040005
[01:53:17.626]    TraceD3_Pin=0x00040006
[01:53:17.626]  </debugvars>
[01:53:17.627]  
[01:53:17.627]  <sequence name="TraceStop" Pname="" disable="false" info="">
[01:53:17.627]    <block atomic="false" info="">
[01:53:17.627]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[01:53:17.627]        // -> [traceSWO <= 0x00000001]
[01:53:17.628]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[01:53:17.628]        // -> [traceTPIU <= 0x00000000]
[01:53:17.628]    </block>
[01:53:17.628]    <control if="traceSWO" while="" timeout="0" info="">
[01:53:17.628]      // if-block "traceSWO"
[01:53:17.628]        // =>  TRUE
[01:53:17.628]      <block atomic="false" info="">
[01:53:17.629]        Sequence("DisableTraceSWO");
[01:53:17.629]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[01:53:17.629]            <block atomic="false" info="">
[01:53:17.629]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:53:17.629]                // -> [dbgmcu_val <= 0x00000000]
[01:53:17.629]            </block>
[01:53:17.629]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[01:53:17.629]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[01:53:17.630]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:53:17.630]                // -> [dbgmcu_val <= 0x00000007]
[01:53:17.630]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[01:53:17.630]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:53:17.631]            </block>
[01:53:17.631]          </sequence>
[01:53:17.631]      </block>
[01:53:17.631]      // end if-block "traceSWO"
[01:53:17.631]    </control>
[01:53:17.631]    <control if="traceTPIU" while="" timeout="0" info="">
[01:53:17.631]      // if-block "traceTPIU"
[01:53:17.631]        // =>  FALSE
[01:53:17.631]      // skip if-block "traceTPIU"
[01:53:17.631]    </control>
[01:53:17.632]  </sequence>
[01:53:17.632]  
[01:54:03.873]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:54:03.873]  
[01:54:03.874]  <debugvars>
[01:54:03.874]    // Pre-defined
[01:54:03.874]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:03.874]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:54:03.874]    __dp=0x00000000
[01:54:03.874]    __ap=0x00000000
[01:54:03.874]    __traceout=0x00000001      (SWO Trace)
[01:54:03.874]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:03.875]    __FlashAddr=0x00000000
[01:54:03.875]    __FlashLen=0x00000000
[01:54:03.875]    __FlashArg=0x00000000
[01:54:03.875]    __FlashOp=0x00000000
[01:54:03.875]    __Result=0x00000000
[01:54:03.875]    
[01:54:03.875]    // User-defined
[01:54:03.875]    DbgMCU_CR=0x00000007
[01:54:03.876]    DbgMCU_APB1_Fz=0x00000000
[01:54:03.876]    DbgMCU_APB2_Fz=0x00000000
[01:54:03.876]    TraceClk_Pin=0x00040002
[01:54:03.876]    TraceD0_Pin=0x00040003
[01:54:03.876]    TraceD1_Pin=0x00040004
[01:54:03.876]    TraceD2_Pin=0x00040005
[01:54:03.876]    TraceD3_Pin=0x00040006
[01:54:03.876]  </debugvars>
[01:54:03.877]  
[01:54:03.877]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:54:03.877]    <block atomic="false" info="">
[01:54:03.877]      Sequence("CheckID");
[01:54:03.877]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:54:03.877]          <block atomic="false" info="">
[01:54:03.877]            __var pidr1 = 0;
[01:54:03.877]              // -> [pidr1 <= 0x00000000]
[01:54:03.878]            __var pidr2 = 0;
[01:54:03.878]              // -> [pidr2 <= 0x00000000]
[01:54:03.878]            __var jep106id = 0;
[01:54:03.878]              // -> [jep106id <= 0x00000000]
[01:54:03.878]            __var ROMTableBase = 0;
[01:54:03.878]              // -> [ROMTableBase <= 0x00000000]
[01:54:03.878]            __ap = 0;      // AHB-AP
[01:54:03.878]              // -> [__ap <= 0x00000000]
[01:54:03.879]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:54:03.879]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.879]              // -> [ROMTableBase <= 0xE00FD000]
[01:54:03.879]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:54:03.880]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.880]              // -> [pidr1 <= 0x00000004]
[01:54:03.880]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:54:03.880]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.880]              // -> [pidr2 <= 0x0000001A]
[01:54:03.881]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:54:03.881]              // -> [jep106id <= 0x00000020]
[01:54:03.881]          </block>
[01:54:03.881]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:54:03.881]            // if-block "jep106id != 0x20"
[01:54:03.881]              // =>  FALSE
[01:54:03.881]            // skip if-block "jep106id != 0x20"
[01:54:03.881]          </control>
[01:54:03.881]        </sequence>
[01:54:03.882]    </block>
[01:54:03.882]  </sequence>
[01:54:03.882]  
[01:54:03.897]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:54:03.897]  
[01:54:03.897]  <debugvars>
[01:54:03.897]    // Pre-defined
[01:54:03.897]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:03.897]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:54:03.897]    __dp=0x00000000
[01:54:03.897]    __ap=0x00000000
[01:54:03.898]    __traceout=0x00000001      (SWO Trace)
[01:54:03.898]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:03.898]    __FlashAddr=0x00000000
[01:54:03.898]    __FlashLen=0x00000000
[01:54:03.898]    __FlashArg=0x00000000
[01:54:03.898]    __FlashOp=0x00000000
[01:54:03.898]    __Result=0x00000000
[01:54:03.898]    
[01:54:03.898]    // User-defined
[01:54:03.898]    DbgMCU_CR=0x00000007
[01:54:03.899]    DbgMCU_APB1_Fz=0x00000000
[01:54:03.899]    DbgMCU_APB2_Fz=0x00000000
[01:54:03.899]    TraceClk_Pin=0x00040002
[01:54:03.899]    TraceD0_Pin=0x00040003
[01:54:03.899]    TraceD1_Pin=0x00040004
[01:54:03.899]    TraceD2_Pin=0x00040005
[01:54:03.899]    TraceD3_Pin=0x00040006
[01:54:03.899]  </debugvars>
[01:54:03.899]  
[01:54:03.900]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:54:03.900]    <block atomic="false" info="">
[01:54:03.900]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:54:03.900]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.900]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:54:03.901]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.901]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:54:03.901]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.902]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:54:03.902]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:03.902]    </block>
[01:54:03.902]  </sequence>
[01:54:03.902]  
[01:54:34.790]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:54:34.790]  
[01:54:34.790]  <debugvars>
[01:54:34.790]    // Pre-defined
[01:54:34.790]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:34.790]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:54:34.791]    __dp=0x00000000
[01:54:34.791]    __ap=0x00000000
[01:54:34.791]    __traceout=0x00000001      (SWO Trace)
[01:54:34.791]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:34.791]    __FlashAddr=0x00000000
[01:54:34.791]    __FlashLen=0x00000000
[01:54:34.792]    __FlashArg=0x00000000
[01:54:34.792]    __FlashOp=0x00000000
[01:54:34.792]    __Result=0x00000000
[01:54:34.792]    
[01:54:34.792]    // User-defined
[01:54:34.792]    DbgMCU_CR=0x00000007
[01:54:34.793]    DbgMCU_APB1_Fz=0x00000000
[01:54:34.793]    DbgMCU_APB2_Fz=0x00000000
[01:54:34.793]    TraceClk_Pin=0x00040002
[01:54:34.793]    TraceD0_Pin=0x00040003
[01:54:34.793]    TraceD1_Pin=0x00040004
[01:54:34.793]    TraceD2_Pin=0x00040005
[01:54:34.793]    TraceD3_Pin=0x00040006
[01:54:34.794]  </debugvars>
[01:54:34.794]  
[01:54:34.794]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:54:34.794]    <block atomic="false" info="">
[01:54:34.794]      Sequence("CheckID");
[01:54:34.794]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:54:34.795]          <block atomic="false" info="">
[01:54:34.795]            __var pidr1 = 0;
[01:54:34.795]              // -> [pidr1 <= 0x00000000]
[01:54:34.795]            __var pidr2 = 0;
[01:54:34.795]              // -> [pidr2 <= 0x00000000]
[01:54:34.795]            __var jep106id = 0;
[01:54:34.796]              // -> [jep106id <= 0x00000000]
[01:54:34.796]            __var ROMTableBase = 0;
[01:54:34.796]              // -> [ROMTableBase <= 0x00000000]
[01:54:34.796]            __ap = 0;      // AHB-AP
[01:54:34.796]              // -> [__ap <= 0x00000000]
[01:54:34.796]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:54:34.797]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.797]              // -> [ROMTableBase <= 0xE00FD000]
[01:54:34.797]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:54:34.797]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.797]              // -> [pidr1 <= 0x00000004]
[01:54:34.797]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:54:34.797]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.797]              // -> [pidr2 <= 0x0000001A]
[01:54:34.797]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:54:34.798]              // -> [jep106id <= 0x00000020]
[01:54:34.798]          </block>
[01:54:34.798]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:54:34.798]            // if-block "jep106id != 0x20"
[01:54:34.798]              // =>  FALSE
[01:54:34.798]            // skip if-block "jep106id != 0x20"
[01:54:34.798]          </control>
[01:54:34.798]        </sequence>
[01:54:34.799]    </block>
[01:54:34.799]  </sequence>
[01:54:34.799]  
[01:54:34.813]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:54:34.813]  
[01:54:34.813]  <debugvars>
[01:54:34.814]    // Pre-defined
[01:54:34.814]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:34.814]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:54:34.814]    __dp=0x00000000
[01:54:34.814]    __ap=0x00000000
[01:54:34.814]    __traceout=0x00000001      (SWO Trace)
[01:54:34.814]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:34.815]    __FlashAddr=0x00000000
[01:54:34.815]    __FlashLen=0x00000000
[01:54:34.815]    __FlashArg=0x00000000
[01:54:34.815]    __FlashOp=0x00000000
[01:54:34.815]    __Result=0x00000000
[01:54:34.815]    
[01:54:34.815]    // User-defined
[01:54:34.815]    DbgMCU_CR=0x00000007
[01:54:34.816]    DbgMCU_APB1_Fz=0x00000000
[01:54:34.816]    DbgMCU_APB2_Fz=0x00000000
[01:54:34.816]    TraceClk_Pin=0x00040002
[01:54:34.816]    TraceD0_Pin=0x00040003
[01:54:34.816]    TraceD1_Pin=0x00040004
[01:54:34.816]    TraceD2_Pin=0x00040005
[01:54:34.816]    TraceD3_Pin=0x00040006
[01:54:34.816]  </debugvars>
[01:54:34.817]  
[01:54:34.817]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:54:34.817]    <block atomic="false" info="">
[01:54:34.817]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:54:34.817]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.818]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:54:34.818]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.818]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:54:34.819]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.819]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:54:34.819]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.819]    </block>
[01:54:34.820]  </sequence>
[01:54:34.820]  
[01:54:34.836]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[01:54:34.836]  
[01:54:34.836]  <debugvars>
[01:54:34.836]    // Pre-defined
[01:54:34.836]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:34.837]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:54:34.837]    __dp=0x00000000
[01:54:34.837]    __ap=0x00000000
[01:54:34.837]    __traceout=0x00000001      (SWO Trace)
[01:54:34.838]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:34.838]    __FlashAddr=0x00000000
[01:54:34.838]    __FlashLen=0x00000000
[01:54:34.838]    __FlashArg=0x00000000
[01:54:34.838]    __FlashOp=0x00000000
[01:54:34.838]    __Result=0x00000000
[01:54:34.839]    
[01:54:34.839]    // User-defined
[01:54:34.839]    DbgMCU_CR=0x00000007
[01:54:34.839]    DbgMCU_APB1_Fz=0x00000000
[01:54:34.839]    DbgMCU_APB2_Fz=0x00000000
[01:54:34.839]    TraceClk_Pin=0x00040002
[01:54:34.839]    TraceD0_Pin=0x00040003
[01:54:34.840]    TraceD1_Pin=0x00040004
[01:54:34.840]    TraceD2_Pin=0x00040005
[01:54:34.840]    TraceD3_Pin=0x00040006
[01:54:34.840]  </debugvars>
[01:54:34.840]  
[01:54:34.840]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:54:34.841]    <block atomic="false" info="">
[01:54:34.841]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:54:34.841]        // -> [traceSWO <= 0x00000001]
[01:54:34.841]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:54:34.841]        // -> [traceTPIU <= 0x00000000]
[01:54:34.841]    </block>
[01:54:34.841]    <control if="traceSWO" while="" timeout="0" info="">
[01:54:34.842]      // if-block "traceSWO"
[01:54:34.842]        // =>  TRUE
[01:54:34.842]      <block atomic="false" info="">
[01:54:34.842]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:54:34.842]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:54:34.842]            <block atomic="false" info="">
[01:54:34.843]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:54:34.843]                // -> [dbgmcu_val <= 0x00000000]
[01:54:34.843]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:54:34.843]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:54:34.843]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:54:34.844]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.844]                // -> [dbgmcu_val <= 0x00000007]
[01:54:34.844]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:54:34.844]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:54:34.844]              Sequence("ConfigureTraceSWOPin");
[01:54:34.844]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:54:34.844]                  <block atomic="false" info="">
[01:54:34.844]                    __var pin     = 0;
[01:54:34.845]                      // -> [pin <= 0x00000000]
[01:54:34.845]                    __var port    = 0;
[01:54:34.845]                      // -> [port <= 0x00000000]
[01:54:34.845]                    __var portAdr = 0;
[01:54:34.845]                      // -> [portAdr <= 0x00000000]
[01:54:34.845]                    __var pos     = 0;
[01:54:34.845]                      // -> [pos <= 0x00000000]
[01:54:34.846]                    __var SWO_Pin = 0x00010003;          // PB3
[01:54:34.846]                      // -> [SWO_Pin <= 0x00010003]
[01:54:34.846]                  </block>
[01:54:34.846]                  <block atomic="false" info="configure SWO">
[01:54:34.846]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:54:34.846]                      // -> [pin <= 0x00000003]
[01:54:34.846]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:54:34.847]                      // -> [port <= 0x00000001]
[01:54:34.847]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:54:34.847]                      // -> [portAdr <= 0x40020400]
[01:54:34.847]                    pos = pin * 2;
[01:54:34.847]                      // -> [pos <= 0x00000006]
[01:54:34.847]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:54:34.847]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.848]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.848]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:54:34.848]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.849]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.849]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:54:34.849]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.850]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.850]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:54:34.850]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.851]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.851]                  </block>
[01:54:34.851]                  <control if="pin <  8" while="" timeout="0" info="">
[01:54:34.851]                    // if-block "pin <  8"
[01:54:34.851]                      // =>  TRUE
[01:54:34.851]                    <block atomic="false" info="">
[01:54:34.851]                      pos = ((pin    ) & 7) * 4;
[01:54:34.851]                        // -> [pos <= 0x0000000C]
[01:54:34.852]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:54:34.852]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.852]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.852]                    </block>
[01:54:34.853]                    // end if-block "pin <  8"
[01:54:34.853]                  </control>
[01:54:34.853]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:54:34.853]                    // if-block "pin >= 8"
[01:54:34.853]                      // =>  FALSE
[01:54:34.853]                    // skip if-block "pin >= 8"
[01:54:34.853]                  </control>
[01:54:34.853]                </sequence>
[01:54:34.853]            </block>
[01:54:34.854]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:54:34.854]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:54:34.854]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.854]            </block>
[01:54:34.854]          </sequence>
[01:54:34.855]      </block>
[01:54:34.855]      // end if-block "traceSWO"
[01:54:34.855]    </control>
[01:54:34.855]    <control if="traceTPIU" while="" timeout="0" info="">
[01:54:34.855]      // if-block "traceTPIU"
[01:54:34.855]        // =>  FALSE
[01:54:34.855]      // skip if-block "traceTPIU"
[01:54:34.855]    </control>
[01:54:34.855]  </sequence>
[01:54:34.856]  
[01:54:34.859]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:54:34.859]  
[01:54:34.859]  <debugvars>
[01:54:34.859]    // Pre-defined
[01:54:34.860]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:34.860]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:54:34.860]    __dp=0x00000000
[01:54:34.860]    __ap=0x00000000
[01:54:34.860]    __traceout=0x00000001      (SWO Trace)
[01:54:34.861]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:34.861]    __FlashAddr=0x00000000
[01:54:34.861]    __FlashLen=0x00000000
[01:54:34.861]    __FlashArg=0x00000000
[01:54:34.861]    __FlashOp=0x00000000
[01:54:34.861]    __Result=0x00000000
[01:54:34.861]    
[01:54:34.861]    // User-defined
[01:54:34.862]    DbgMCU_CR=0x00000007
[01:54:34.862]    DbgMCU_APB1_Fz=0x00000000
[01:54:34.862]    DbgMCU_APB2_Fz=0x00000000
[01:54:34.862]    TraceClk_Pin=0x00040002
[01:54:34.862]    TraceD0_Pin=0x00040003
[01:54:34.862]    TraceD1_Pin=0x00040004
[01:54:34.862]    TraceD2_Pin=0x00040005
[01:54:34.863]    TraceD3_Pin=0x00040006
[01:54:34.863]  </debugvars>
[01:54:34.863]  
[01:54:34.863]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:54:34.863]    <block atomic="false" info="">
[01:54:34.863]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:54:34.863]        // -> [traceSWO <= 0x00000001]
[01:54:34.863]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:54:34.864]        // -> [traceTPIU <= 0x00000000]
[01:54:34.864]    </block>
[01:54:34.864]    <control if="traceSWO" while="" timeout="0" info="">
[01:54:34.864]      // if-block "traceSWO"
[01:54:34.864]        // =>  TRUE
[01:54:34.864]      <block atomic="false" info="">
[01:54:34.864]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:54:34.864]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:54:34.865]            <block atomic="false" info="">
[01:54:34.865]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:54:34.865]                // -> [dbgmcu_val <= 0x00000000]
[01:54:34.865]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:54:34.865]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:54:34.865]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:54:34.866]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.866]                // -> [dbgmcu_val <= 0x00000007]
[01:54:34.866]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:54:34.866]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:54:34.866]              Sequence("ConfigureTraceSWOPin");
[01:54:34.866]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:54:34.866]                  <block atomic="false" info="">
[01:54:34.866]                    __var pin     = 0;
[01:54:34.866]                      // -> [pin <= 0x00000000]
[01:54:34.867]                    __var port    = 0;
[01:54:34.867]                      // -> [port <= 0x00000000]
[01:54:34.867]                    __var portAdr = 0;
[01:54:34.867]                      // -> [portAdr <= 0x00000000]
[01:54:34.867]                    __var pos     = 0;
[01:54:34.867]                      // -> [pos <= 0x00000000]
[01:54:34.867]                    __var SWO_Pin = 0x00010003;          // PB3
[01:54:34.867]                      // -> [SWO_Pin <= 0x00010003]
[01:54:34.867]                  </block>
[01:54:34.868]                  <block atomic="false" info="configure SWO">
[01:54:34.868]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:54:34.868]                      // -> [pin <= 0x00000003]
[01:54:34.868]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:54:34.868]                      // -> [port <= 0x00000001]
[01:54:34.868]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:54:34.868]                      // -> [portAdr <= 0x40020400]
[01:54:34.868]                    pos = pin * 2;
[01:54:34.868]                      // -> [pos <= 0x00000006]
[01:54:34.869]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:54:34.869]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.869]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.869]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:54:34.870]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.870]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.870]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:54:34.871]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.871]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.872]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:54:34.872]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.872]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.873]                  </block>
[01:54:34.873]                  <control if="pin <  8" while="" timeout="0" info="">
[01:54:34.873]                    // if-block "pin <  8"
[01:54:34.873]                      // =>  TRUE
[01:54:34.873]                    <block atomic="false" info="">
[01:54:34.873]                      pos = ((pin    ) & 7) * 4;
[01:54:34.873]                        // -> [pos <= 0x0000000C]
[01:54:34.873]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:54:34.874]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.874]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.874]                    </block>
[01:54:34.874]                    // end if-block "pin <  8"
[01:54:34.874]                  </control>
[01:54:34.875]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:54:34.875]                    // if-block "pin >= 8"
[01:54:34.875]                      // =>  FALSE
[01:54:34.875]                    // skip if-block "pin >= 8"
[01:54:34.875]                  </control>
[01:54:34.875]                </sequence>
[01:54:34.875]            </block>
[01:54:34.875]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:54:34.875]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:54:34.876]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:34.876]            </block>
[01:54:34.876]          </sequence>
[01:54:34.876]      </block>
[01:54:34.876]      // end if-block "traceSWO"
[01:54:34.876]    </control>
[01:54:34.877]    <control if="traceTPIU" while="" timeout="0" info="">
[01:54:34.877]      // if-block "traceTPIU"
[01:54:34.877]        // =>  FALSE
[01:54:34.877]      // skip if-block "traceTPIU"
[01:54:34.877]    </control>
[01:54:34.877]  </sequence>
[01:54:34.877]  
[01:54:35.096]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:54:35.096]  
[01:54:35.096]  <debugvars>
[01:54:35.096]    // Pre-defined
[01:54:35.096]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:54:35.096]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:54:35.097]    __dp=0x00000000
[01:54:35.097]    __ap=0x00000000
[01:54:35.097]    __traceout=0x00000001      (SWO Trace)
[01:54:35.097]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:54:35.097]    __FlashAddr=0x00000000
[01:54:35.097]    __FlashLen=0x00000000
[01:54:35.097]    __FlashArg=0x00000000
[01:54:35.097]    __FlashOp=0x00000000
[01:54:35.097]    __Result=0x00000000
[01:54:35.098]    
[01:54:35.098]    // User-defined
[01:54:35.098]    DbgMCU_CR=0x00000007
[01:54:35.098]    DbgMCU_APB1_Fz=0x00000000
[01:54:35.098]    DbgMCU_APB2_Fz=0x00000000
[01:54:35.098]    TraceClk_Pin=0x00040002
[01:54:35.098]    TraceD0_Pin=0x00040003
[01:54:35.098]    TraceD1_Pin=0x00040004
[01:54:35.099]    TraceD2_Pin=0x00040005
[01:54:35.099]    TraceD3_Pin=0x00040006
[01:54:35.099]  </debugvars>
[01:54:35.099]  
[01:54:35.099]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:54:35.099]    <block atomic="false" info="">
[01:54:35.099]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:54:35.099]        // -> [traceSWO <= 0x00000001]
[01:54:35.099]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:54:35.100]        // -> [traceTPIU <= 0x00000000]
[01:54:35.100]    </block>
[01:54:35.100]    <control if="traceSWO" while="" timeout="0" info="">
[01:54:35.100]      // if-block "traceSWO"
[01:54:35.100]        // =>  TRUE
[01:54:35.100]      <block atomic="false" info="">
[01:54:35.100]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:54:35.100]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:54:35.100]            <block atomic="false" info="">
[01:54:35.101]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:54:35.101]                // -> [dbgmcu_val <= 0x00000000]
[01:54:35.101]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:54:35.101]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:54:35.101]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:54:35.101]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.102]                // -> [dbgmcu_val <= 0x00000007]
[01:54:35.102]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:54:35.102]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:54:35.102]              Sequence("ConfigureTraceSWOPin");
[01:54:35.102]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:54:35.102]                  <block atomic="false" info="">
[01:54:35.102]                    __var pin     = 0;
[01:54:35.102]                      // -> [pin <= 0x00000000]
[01:54:35.102]                    __var port    = 0;
[01:54:35.103]                      // -> [port <= 0x00000000]
[01:54:35.103]                    __var portAdr = 0;
[01:54:35.103]                      // -> [portAdr <= 0x00000000]
[01:54:35.103]                    __var pos     = 0;
[01:54:35.103]                      // -> [pos <= 0x00000000]
[01:54:35.103]                    __var SWO_Pin = 0x00010003;          // PB3
[01:54:35.103]                      // -> [SWO_Pin <= 0x00010003]
[01:54:35.103]                  </block>
[01:54:35.103]                  <block atomic="false" info="configure SWO">
[01:54:35.104]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:54:35.104]                      // -> [pin <= 0x00000003]
[01:54:35.104]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:54:35.104]                      // -> [port <= 0x00000001]
[01:54:35.104]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:54:35.104]                      // -> [portAdr <= 0x40020400]
[01:54:35.104]                    pos = pin * 2;
[01:54:35.105]                      // -> [pos <= 0x00000006]
[01:54:35.105]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:54:35.105]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.106]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.106]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:54:35.106]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.106]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.107]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:54:35.107]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.107]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.108]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:54:35.108]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.108]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.108]                  </block>
[01:54:35.109]                  <control if="pin <  8" while="" timeout="0" info="">
[01:54:35.109]                    // if-block "pin <  8"
[01:54:35.109]                      // =>  TRUE
[01:54:35.109]                    <block atomic="false" info="">
[01:54:35.109]                      pos = ((pin    ) & 7) * 4;
[01:54:35.109]                        // -> [pos <= 0x0000000C]
[01:54:35.109]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:54:35.110]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.110]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.110]                    </block>
[01:54:35.110]                    // end if-block "pin <  8"
[01:54:35.111]                  </control>
[01:54:35.111]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:54:35.111]                    // if-block "pin >= 8"
[01:54:35.111]                      // =>  FALSE
[01:54:35.111]                    // skip if-block "pin >= 8"
[01:54:35.111]                  </control>
[01:54:35.111]                </sequence>
[01:54:35.111]            </block>
[01:54:35.112]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:54:35.112]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:54:35.112]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:54:35.112]            </block>
[01:54:35.112]          </sequence>
[01:54:35.112]      </block>
[01:54:35.112]      // end if-block "traceSWO"
[01:54:35.113]    </control>
[01:54:35.113]    <control if="traceTPIU" while="" timeout="0" info="">
[01:54:35.113]      // if-block "traceTPIU"
[01:54:35.113]        // =>  FALSE
[01:54:35.113]      // skip if-block "traceTPIU"
[01:54:35.113]    </control>
[01:54:35.113]  </sequence>
[01:54:35.113]  
[01:58:38.885]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[01:58:38.885]  
[01:58:38.885]  <debugvars>
[01:58:38.885]    // Pre-defined
[01:58:38.885]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:58:38.886]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:58:38.886]    __dp=0x00000000
[01:58:38.886]    __ap=0x00000000
[01:58:38.886]    __traceout=0x00000001      (SWO Trace)
[01:58:38.886]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:58:38.886]    __FlashAddr=0x00000000
[01:58:38.886]    __FlashLen=0x00000000
[01:58:38.886]    __FlashArg=0x00000000
[01:58:38.887]    __FlashOp=0x00000000
[01:58:38.887]    __Result=0x00000000
[01:58:38.887]    
[01:58:38.887]    // User-defined
[01:58:38.887]    DbgMCU_CR=0x00000007
[01:58:38.887]    DbgMCU_APB1_Fz=0x00000000
[01:58:38.887]    DbgMCU_APB2_Fz=0x00000000
[01:58:38.887]    TraceClk_Pin=0x00040002
[01:58:38.887]    TraceD0_Pin=0x00040003
[01:58:38.888]    TraceD1_Pin=0x00040004
[01:58:38.888]    TraceD2_Pin=0x00040005
[01:58:38.888]    TraceD3_Pin=0x00040006
[01:58:38.888]  </debugvars>
[01:58:38.888]  
[01:58:38.888]  <sequence name="TraceStop" Pname="" disable="false" info="">
[01:58:38.888]    <block atomic="false" info="">
[01:58:38.888]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[01:58:38.889]        // -> [traceSWO <= 0x00000001]
[01:58:38.889]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[01:58:38.889]        // -> [traceTPIU <= 0x00000000]
[01:58:38.889]    </block>
[01:58:38.889]    <control if="traceSWO" while="" timeout="0" info="">
[01:58:38.889]      // if-block "traceSWO"
[01:58:38.889]        // =>  TRUE
[01:58:38.889]      <block atomic="false" info="">
[01:58:38.890]        Sequence("DisableTraceSWO");
[01:58:38.890]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[01:58:38.890]            <block atomic="false" info="">
[01:58:38.890]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:58:38.890]                // -> [dbgmcu_val <= 0x00000000]
[01:58:38.890]            </block>
[01:58:38.890]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[01:58:38.891]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[01:58:38.891]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:58:38.891]                // -> [dbgmcu_val <= 0x00000007]
[01:58:38.891]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[01:58:38.892]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:58:38.892]            </block>
[01:58:38.892]          </sequence>
[01:58:38.892]      </block>
[01:58:38.892]      // end if-block "traceSWO"
[01:58:38.893]    </control>
[01:58:38.893]    <control if="traceTPIU" while="" timeout="0" info="">
[01:58:38.893]      // if-block "traceTPIU"
[01:58:38.933]        // =>  FALSE
[01:58:38.934]      // skip if-block "traceTPIU"
[01:58:38.934]    </control>
[01:58:38.934]  </sequence>
[01:58:38.934]  
