/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0002.log
 *  Created     : 18:46:10 (12/03/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[18:46:10.373]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:46:10.373]  
[18:46:10.374]  <debugvars>
[18:46:10.374]    // Pre-defined
[18:46:10.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:46:10.374]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:46:10.374]    __dp=0x00000000
[18:46:10.375]    __ap=0x00000000
[18:46:10.375]    __traceout=0x00000001      (SWO Trace)
[18:46:10.375]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:46:10.375]    __FlashAddr=0x00000000
[18:46:10.375]    __FlashLen=0x00000000
[18:46:10.376]    __FlashArg=0x00000000
[18:46:10.376]    __FlashOp=0x00000000
[18:46:10.376]    __Result=0x00000000
[18:46:10.376]    
[18:46:10.376]    // User-defined
[18:46:10.377]    DbgMCU_CR=0x00000007
[18:46:10.377]    DbgMCU_APB1_Fz=0x00000000
[18:46:10.377]    DbgMCU_APB2_Fz=0x00000000
[18:46:10.377]    TraceClk_Pin=0x00040002
[18:46:10.377]    TraceD0_Pin=0x00040003
[18:46:10.378]    TraceD1_Pin=0x00040004
[18:46:10.378]    TraceD2_Pin=0x00040005
[18:46:10.378]    TraceD3_Pin=0x00040006
[18:46:10.378]  </debugvars>
[18:46:10.378]  
[18:46:10.379]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:46:10.379]    <block atomic="false" info="">
[18:46:10.379]      Sequence("CheckID");
[18:46:10.379]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:46:10.379]          <block atomic="false" info="">
[18:46:10.380]            __var pidr1 = 0;
[18:46:10.380]              // -> [pidr1 <= 0x00000000]
[18:46:10.380]            __var pidr2 = 0;
[18:46:10.380]              // -> [pidr2 <= 0x00000000]
[18:46:10.380]            __var jep106id = 0;
[18:46:10.380]              // -> [jep106id <= 0x00000000]
[18:46:10.381]            __var ROMTableBase = 0;
[18:46:10.381]              // -> [ROMTableBase <= 0x00000000]
[18:46:10.381]            __ap = 0;      // AHB-AP
[18:46:10.381]              // -> [__ap <= 0x00000000]
[18:46:10.381]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:46:10.382]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.382]              // -> [ROMTableBase <= 0xE00FD000]
[18:46:10.382]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:46:10.383]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.383]              // -> [pidr1 <= 0x00000004]
[18:46:10.383]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:46:10.384]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.384]              // -> [pidr2 <= 0x0000001A]
[18:46:10.384]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:46:10.384]              // -> [jep106id <= 0x00000020]
[18:46:10.384]          </block>
[18:46:10.385]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:46:10.385]            // if-block "jep106id != 0x20"
[18:46:10.385]              // =>  FALSE
[18:46:10.385]            // skip if-block "jep106id != 0x20"
[18:46:10.385]          </control>
[18:46:10.385]        </sequence>
[18:46:10.386]    </block>
[18:46:10.386]  </sequence>
[18:46:10.386]  
[18:46:10.401]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:46:10.401]  
[18:46:10.402]  <debugvars>
[18:46:10.402]    // Pre-defined
[18:46:10.402]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:46:10.402]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:46:10.402]    __dp=0x00000000
[18:46:10.403]    __ap=0x00000000
[18:46:10.403]    __traceout=0x00000001      (SWO Trace)
[18:46:10.403]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:46:10.403]    __FlashAddr=0x00000000
[18:46:10.403]    __FlashLen=0x00000000
[18:46:10.404]    __FlashArg=0x00000000
[18:46:10.404]    __FlashOp=0x00000000
[18:46:10.404]    __Result=0x00000000
[18:46:10.404]    
[18:46:10.404]    // User-defined
[18:46:10.405]    DbgMCU_CR=0x00000007
[18:46:10.405]    DbgMCU_APB1_Fz=0x00000000
[18:46:10.405]    DbgMCU_APB2_Fz=0x00000000
[18:46:10.405]    TraceClk_Pin=0x00040002
[18:46:10.405]    TraceD0_Pin=0x00040003
[18:46:10.406]    TraceD1_Pin=0x00040004
[18:46:10.406]    TraceD2_Pin=0x00040005
[18:46:10.406]    TraceD3_Pin=0x00040006
[18:46:10.406]  </debugvars>
[18:46:10.406]  
[18:46:10.406]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:46:10.407]    <block atomic="false" info="">
[18:46:10.407]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:46:10.408]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.408]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:46:10.408]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.409]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:46:10.409]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.409]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:46:10.410]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:46:10.410]    </block>
[18:46:10.410]  </sequence>
[18:46:10.410]  
[18:47:44.616]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:47:44.616]  
[18:47:44.617]  <debugvars>
[18:47:44.617]    // Pre-defined
[18:47:44.617]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:47:44.617]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:47:44.617]    __dp=0x00000000
[18:47:44.618]    __ap=0x00000000
[18:47:44.618]    __traceout=0x00000001      (SWO Trace)
[18:47:44.618]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:47:44.618]    __FlashAddr=0x00000000
[18:47:44.618]    __FlashLen=0x00000000
[18:47:44.619]    __FlashArg=0x00000000
[18:47:44.619]    __FlashOp=0x00000000
[18:47:44.619]    __Result=0x00000000
[18:47:44.619]    
[18:47:44.619]    // User-defined
[18:47:44.619]    DbgMCU_CR=0x00000007
[18:47:44.620]    DbgMCU_APB1_Fz=0x00000000
[18:47:44.620]    DbgMCU_APB2_Fz=0x00000000
[18:47:44.620]    TraceClk_Pin=0x00040002
[18:47:44.620]    TraceD0_Pin=0x00040003
[18:47:44.620]    TraceD1_Pin=0x00040004
[18:47:44.620]    TraceD2_Pin=0x00040005
[18:47:44.621]    TraceD3_Pin=0x00040006
[18:47:44.621]  </debugvars>
[18:47:44.621]  
[18:47:44.621]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:47:44.621]    <block atomic="false" info="">
[18:47:44.621]      Sequence("CheckID");
[18:47:44.622]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:47:44.622]          <block atomic="false" info="">
[18:47:44.622]            __var pidr1 = 0;
[18:47:44.622]              // -> [pidr1 <= 0x00000000]
[18:47:44.622]            __var pidr2 = 0;
[18:47:44.623]              // -> [pidr2 <= 0x00000000]
[18:47:44.623]            __var jep106id = 0;
[18:47:44.623]              // -> [jep106id <= 0x00000000]
[18:47:44.623]            __var ROMTableBase = 0;
[18:47:44.623]              // -> [ROMTableBase <= 0x00000000]
[18:47:44.623]            __ap = 0;      // AHB-AP
[18:47:44.624]              // -> [__ap <= 0x00000000]
[18:47:44.624]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:47:44.624]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.624]              // -> [ROMTableBase <= 0xE00FD000]
[18:47:44.624]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:47:44.625]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.625]              // -> [pidr1 <= 0x00000004]
[18:47:44.625]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:47:44.626]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.626]              // -> [pidr2 <= 0x0000001A]
[18:47:44.626]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:47:44.626]              // -> [jep106id <= 0x00000020]
[18:47:44.627]          </block>
[18:47:44.627]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:47:44.627]            // if-block "jep106id != 0x20"
[18:47:44.627]              // =>  FALSE
[18:47:44.627]            // skip if-block "jep106id != 0x20"
[18:47:44.627]          </control>
[18:47:44.628]        </sequence>
[18:47:44.628]    </block>
[18:47:44.628]  </sequence>
[18:47:44.628]  
[18:47:44.643]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:47:44.643]  
[18:47:44.643]  <debugvars>
[18:47:44.643]    // Pre-defined
[18:47:44.644]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:47:44.644]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:47:44.644]    __dp=0x00000000
[18:47:44.644]    __ap=0x00000000
[18:47:44.644]    __traceout=0x00000001      (SWO Trace)
[18:47:44.645]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:47:44.645]    __FlashAddr=0x00000000
[18:47:44.645]    __FlashLen=0x00000000
[18:47:44.645]    __FlashArg=0x00000000
[18:47:44.645]    __FlashOp=0x00000000
[18:47:44.645]    __Result=0x00000000
[18:47:44.646]    
[18:47:44.646]    // User-defined
[18:47:44.646]    DbgMCU_CR=0x00000007
[18:47:44.646]    DbgMCU_APB1_Fz=0x00000000
[18:47:44.646]    DbgMCU_APB2_Fz=0x00000000
[18:47:44.646]    TraceClk_Pin=0x00040002
[18:47:44.647]    TraceD0_Pin=0x00040003
[18:47:44.647]    TraceD1_Pin=0x00040004
[18:47:44.647]    TraceD2_Pin=0x00040005
[18:47:44.647]    TraceD3_Pin=0x00040006
[18:47:44.648]  </debugvars>
[18:47:44.648]  
[18:47:44.648]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:47:44.648]    <block atomic="false" info="">
[18:47:44.648]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:47:44.649]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.649]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:47:44.650]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.650]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:47:44.651]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.651]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:47:44.651]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:47:44.651]    </block>
[18:47:44.652]  </sequence>
[18:47:44.652]  
[18:52:15.732]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:52:15.732]  
[18:52:15.733]  <debugvars>
[18:52:15.733]    // Pre-defined
[18:52:15.733]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:15.733]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:52:15.733]    __dp=0x00000000
[18:52:15.734]    __ap=0x00000000
[18:52:15.734]    __traceout=0x00000001      (SWO Trace)
[18:52:15.734]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:15.734]    __FlashAddr=0x00000000
[18:52:15.734]    __FlashLen=0x00000000
[18:52:15.734]    __FlashArg=0x00000000
[18:52:15.735]    __FlashOp=0x00000000
[18:52:15.735]    __Result=0x00000000
[18:52:15.735]    
[18:52:15.735]    // User-defined
[18:52:15.735]    DbgMCU_CR=0x00000007
[18:52:15.735]    DbgMCU_APB1_Fz=0x00000000
[18:52:15.736]    DbgMCU_APB2_Fz=0x00000000
[18:52:15.736]    TraceClk_Pin=0x00040002
[18:52:15.736]    TraceD0_Pin=0x00040003
[18:52:15.736]    TraceD1_Pin=0x00040004
[18:52:15.736]    TraceD2_Pin=0x00040005
[18:52:15.736]    TraceD3_Pin=0x00040006
[18:52:15.737]  </debugvars>
[18:52:15.737]  
[18:52:15.737]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:52:15.737]    <block atomic="false" info="">
[18:52:15.737]      Sequence("CheckID");
[18:52:15.738]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:52:15.738]          <block atomic="false" info="">
[18:52:15.738]            __var pidr1 = 0;
[18:52:15.738]              // -> [pidr1 <= 0x00000000]
[18:52:15.738]            __var pidr2 = 0;
[18:52:15.738]              // -> [pidr2 <= 0x00000000]
[18:52:15.738]            __var jep106id = 0;
[18:52:15.739]              // -> [jep106id <= 0x00000000]
[18:52:15.739]            __var ROMTableBase = 0;
[18:52:15.739]              // -> [ROMTableBase <= 0x00000000]
[18:52:15.739]            __ap = 0;      // AHB-AP
[18:52:15.739]              // -> [__ap <= 0x00000000]
[18:52:15.740]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:52:15.740]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.740]              // -> [ROMTableBase <= 0xE00FD000]
[18:52:15.740]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:52:15.741]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.741]              // -> [pidr1 <= 0x00000004]
[18:52:15.741]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:52:15.742]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.742]              // -> [pidr2 <= 0x0000001A]
[18:52:15.742]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:52:15.742]              // -> [jep106id <= 0x00000020]
[18:52:15.742]          </block>
[18:52:15.742]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:52:15.742]            // if-block "jep106id != 0x20"
[18:52:15.743]              // =>  FALSE
[18:52:15.743]            // skip if-block "jep106id != 0x20"
[18:52:15.743]          </control>
[18:52:15.743]        </sequence>
[18:52:15.743]    </block>
[18:52:15.743]  </sequence>
[18:52:15.744]  
[18:52:15.758]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:52:15.758]  
[18:52:15.759]  <debugvars>
[18:52:15.759]    // Pre-defined
[18:52:15.759]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:15.759]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:52:15.759]    __dp=0x00000000
[18:52:15.760]    __ap=0x00000000
[18:52:15.760]    __traceout=0x00000001      (SWO Trace)
[18:52:15.760]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:15.760]    __FlashAddr=0x00000000
[18:52:15.760]    __FlashLen=0x00000000
[18:52:15.761]    __FlashArg=0x00000000
[18:52:15.761]    __FlashOp=0x00000000
[18:52:15.761]    __Result=0x00000000
[18:52:15.761]    
[18:52:15.761]    // User-defined
[18:52:15.761]    DbgMCU_CR=0x00000007
[18:52:15.762]    DbgMCU_APB1_Fz=0x00000000
[18:52:15.762]    DbgMCU_APB2_Fz=0x00000000
[18:52:15.762]    TraceClk_Pin=0x00040002
[18:52:15.762]    TraceD0_Pin=0x00040003
[18:52:15.763]    TraceD1_Pin=0x00040004
[18:52:15.763]    TraceD2_Pin=0x00040005
[18:52:15.763]    TraceD3_Pin=0x00040006
[18:52:15.763]  </debugvars>
[18:52:15.763]  
[18:52:15.764]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:52:15.764]    <block atomic="false" info="">
[18:52:15.764]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:52:15.765]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.765]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:52:15.765]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.766]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:52:15.766]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.766]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:52:15.767]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.767]    </block>
[18:52:15.767]  </sequence>
[18:52:15.767]  
[18:52:15.784]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[18:52:15.784]  
[18:52:15.784]  <debugvars>
[18:52:15.785]    // Pre-defined
[18:52:15.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:15.785]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:52:15.785]    __dp=0x00000000
[18:52:15.785]    __ap=0x00000000
[18:52:15.785]    __traceout=0x00000001      (SWO Trace)
[18:52:15.786]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:15.786]    __FlashAddr=0x00000000
[18:52:15.786]    __FlashLen=0x00000000
[18:52:15.786]    __FlashArg=0x00000000
[18:52:15.787]    __FlashOp=0x00000000
[18:52:15.787]    __Result=0x00000000
[18:52:15.787]    
[18:52:15.787]    // User-defined
[18:52:15.787]    DbgMCU_CR=0x00000007
[18:52:15.788]    DbgMCU_APB1_Fz=0x00000000
[18:52:15.788]    DbgMCU_APB2_Fz=0x00000000
[18:52:15.788]    TraceClk_Pin=0x00040002
[18:52:15.788]    TraceD0_Pin=0x00040003
[18:52:15.789]    TraceD1_Pin=0x00040004
[18:52:15.789]    TraceD2_Pin=0x00040005
[18:52:15.789]    TraceD3_Pin=0x00040006
[18:52:15.789]  </debugvars>
[18:52:15.789]  
[18:52:15.789]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:52:15.790]    <block atomic="false" info="">
[18:52:15.790]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:52:15.790]        // -> [traceSWO <= 0x00000001]
[18:52:15.790]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:52:15.790]        // -> [traceTPIU <= 0x00000000]
[18:52:15.791]    </block>
[18:52:15.791]    <control if="traceSWO" while="" timeout="0" info="">
[18:52:15.791]      // if-block "traceSWO"
[18:52:15.791]        // =>  TRUE
[18:52:15.791]      <block atomic="false" info="">
[18:52:15.792]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:52:15.792]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:52:15.792]            <block atomic="false" info="">
[18:52:15.792]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:52:15.792]                // -> [dbgmcu_val <= 0x00000000]
[18:52:15.793]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:52:15.793]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:52:15.793]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:52:15.793]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.794]                // -> [dbgmcu_val <= 0x00000007]
[18:52:15.794]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:52:15.794]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:52:15.795]              Sequence("ConfigureTraceSWOPin");
[18:52:15.795]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:52:15.795]                  <block atomic="false" info="">
[18:52:15.795]                    __var pin     = 0;
[18:52:15.795]                      // -> [pin <= 0x00000000]
[18:52:15.795]                    __var port    = 0;
[18:52:15.796]                      // -> [port <= 0x00000000]
[18:52:15.796]                    __var portAdr = 0;
[18:52:15.796]                      // -> [portAdr <= 0x00000000]
[18:52:15.796]                    __var pos     = 0;
[18:52:15.796]                      // -> [pos <= 0x00000000]
[18:52:15.797]                    __var SWO_Pin = 0x00010003;          // PB3
[18:52:15.797]                      // -> [SWO_Pin <= 0x00010003]
[18:52:15.797]                  </block>
[18:52:15.797]                  <block atomic="false" info="configure SWO">
[18:52:15.797]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:52:15.798]                      // -> [pin <= 0x00000003]
[18:52:15.798]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:52:15.798]                      // -> [port <= 0x00000001]
[18:52:15.798]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:52:15.798]                      // -> [portAdr <= 0x40020400]
[18:52:15.798]                    pos = pin * 2;
[18:52:15.799]                      // -> [pos <= 0x00000006]
[18:52:15.799]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:52:15.799]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.800]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.801]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:52:15.802]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.803]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.803]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:52:15.804]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.804]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.804]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:52:15.805]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.806]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.806]                  </block>
[18:52:15.806]                  <control if="pin <  8" while="" timeout="0" info="">
[18:52:15.806]                    // if-block "pin <  8"
[18:52:15.806]                      // =>  TRUE
[18:52:15.807]                    <block atomic="false" info="">
[18:52:15.807]                      pos = ((pin    ) & 7) * 4;
[18:52:15.807]                        // -> [pos <= 0x0000000C]
[18:52:15.807]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:52:15.808]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.809]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.809]                    </block>
[18:52:15.809]                    // end if-block "pin <  8"
[18:52:15.809]                  </control>
[18:52:15.809]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:52:15.810]                    // if-block "pin >= 8"
[18:52:15.810]                      // =>  FALSE
[18:52:15.810]                    // skip if-block "pin >= 8"
[18:52:15.810]                  </control>
[18:52:15.810]                </sequence>
[18:52:15.811]            </block>
[18:52:15.811]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:52:15.811]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:52:15.812]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.812]            </block>
[18:52:15.812]          </sequence>
[18:52:15.812]      </block>
[18:52:15.814]      // end if-block "traceSWO"
[18:52:15.815]    </control>
[18:52:15.815]    <control if="traceTPIU" while="" timeout="0" info="">
[18:52:15.815]      // if-block "traceTPIU"
[18:52:15.815]        // =>  FALSE
[18:52:15.815]      // skip if-block "traceTPIU"
[18:52:15.816]    </control>
[18:52:15.816]  </sequence>
[18:52:15.816]  
[18:52:15.820]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:52:15.820]  
[18:52:15.820]  <debugvars>
[18:52:15.820]    // Pre-defined
[18:52:15.820]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:15.821]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:52:15.821]    __dp=0x00000000
[18:52:15.821]    __ap=0x00000000
[18:52:15.821]    __traceout=0x00000001      (SWO Trace)
[18:52:15.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:15.822]    __FlashAddr=0x00000000
[18:52:15.822]    __FlashLen=0x00000000
[18:52:15.822]    __FlashArg=0x00000000
[18:52:15.822]    __FlashOp=0x00000000
[18:52:15.822]    __Result=0x00000000
[18:52:15.823]    
[18:52:15.823]    // User-defined
[18:52:15.823]    DbgMCU_CR=0x00000007
[18:52:15.823]    DbgMCU_APB1_Fz=0x00000000
[18:52:15.823]    DbgMCU_APB2_Fz=0x00000000
[18:52:15.823]    TraceClk_Pin=0x00040002
[18:52:15.823]    TraceD0_Pin=0x00040003
[18:52:15.824]    TraceD1_Pin=0x00040004
[18:52:15.824]    TraceD2_Pin=0x00040005
[18:52:15.824]    TraceD3_Pin=0x00040006
[18:52:15.824]  </debugvars>
[18:52:15.824]  
[18:52:15.825]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:52:15.825]    <block atomic="false" info="">
[18:52:15.825]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:52:15.825]        // -> [traceSWO <= 0x00000001]
[18:52:15.825]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:52:15.826]        // -> [traceTPIU <= 0x00000000]
[18:52:15.826]    </block>
[18:52:15.826]    <control if="traceSWO" while="" timeout="0" info="">
[18:52:15.826]      // if-block "traceSWO"
[18:52:15.826]        // =>  TRUE
[18:52:15.826]      <block atomic="false" info="">
[18:52:15.827]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:52:15.827]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:52:15.827]            <block atomic="false" info="">
[18:52:15.827]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:52:15.828]                // -> [dbgmcu_val <= 0x00000000]
[18:52:15.828]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:52:15.828]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:52:15.828]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:52:15.829]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.829]                // -> [dbgmcu_val <= 0x00000007]
[18:52:15.829]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:52:15.829]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:52:15.829]              Sequence("ConfigureTraceSWOPin");
[18:52:15.830]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:52:15.830]                  <block atomic="false" info="">
[18:52:15.830]                    __var pin     = 0;
[18:52:15.830]                      // -> [pin <= 0x00000000]
[18:52:15.830]                    __var port    = 0;
[18:52:15.831]                      // -> [port <= 0x00000000]
[18:52:15.831]                    __var portAdr = 0;
[18:52:15.831]                      // -> [portAdr <= 0x00000000]
[18:52:15.831]                    __var pos     = 0;
[18:52:15.831]                      // -> [pos <= 0x00000000]
[18:52:15.831]                    __var SWO_Pin = 0x00010003;          // PB3
[18:52:15.832]                      // -> [SWO_Pin <= 0x00010003]
[18:52:15.832]                  </block>
[18:52:15.832]                  <block atomic="false" info="configure SWO">
[18:52:15.832]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:52:15.832]                      // -> [pin <= 0x00000003]
[18:52:15.832]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:52:15.833]                      // -> [port <= 0x00000001]
[18:52:15.833]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:52:15.833]                      // -> [portAdr <= 0x40020400]
[18:52:15.833]                    pos = pin * 2;
[18:52:15.833]                      // -> [pos <= 0x00000006]
[18:52:15.834]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:52:15.834]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.835]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.835]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:52:15.835]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.836]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.836]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:52:15.836]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.837]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.839]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:52:15.839]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.840]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.840]                  </block>
[18:52:15.840]                  <control if="pin <  8" while="" timeout="0" info="">
[18:52:15.840]                    // if-block "pin <  8"
[18:52:15.840]                      // =>  TRUE
[18:52:15.840]                    <block atomic="false" info="">
[18:52:15.841]                      pos = ((pin    ) & 7) * 4;
[18:52:15.841]                        // -> [pos <= 0x0000000C]
[18:52:15.841]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:52:15.841]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.842]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.842]                    </block>
[18:52:15.843]                    // end if-block "pin <  8"
[18:52:15.843]                  </control>
[18:52:15.843]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:52:15.843]                    // if-block "pin >= 8"
[18:52:15.843]                      // =>  FALSE
[18:52:15.843]                    // skip if-block "pin >= 8"
[18:52:15.844]                  </control>
[18:52:15.844]                </sequence>
[18:52:15.844]            </block>
[18:52:15.844]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:52:15.845]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:52:15.845]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:15.845]            </block>
[18:52:15.846]          </sequence>
[18:52:15.846]      </block>
[18:52:15.846]      // end if-block "traceSWO"
[18:52:15.846]    </control>
[18:52:15.846]    <control if="traceTPIU" while="" timeout="0" info="">
[18:52:15.846]      // if-block "traceTPIU"
[18:52:15.847]        // =>  FALSE
[18:52:15.847]      // skip if-block "traceTPIU"
[18:52:15.847]    </control>
[18:52:15.847]  </sequence>
[18:52:15.847]  
[18:52:16.080]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:52:16.080]  
[18:52:16.081]  <debugvars>
[18:52:16.081]    // Pre-defined
[18:52:16.081]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:16.081]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:52:16.081]    __dp=0x00000000
[18:52:16.081]    __ap=0x00000000
[18:52:16.081]    __traceout=0x00000001      (SWO Trace)
[18:52:16.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:16.082]    __FlashAddr=0x00000000
[18:52:16.082]    __FlashLen=0x00000000
[18:52:16.082]    __FlashArg=0x00000000
[18:52:16.082]    __FlashOp=0x00000000
[18:52:16.082]    __Result=0x00000000
[18:52:16.082]    
[18:52:16.082]    // User-defined
[18:52:16.083]    DbgMCU_CR=0x00000007
[18:52:16.083]    DbgMCU_APB1_Fz=0x00000000
[18:52:16.083]    DbgMCU_APB2_Fz=0x00000000
[18:52:16.083]    TraceClk_Pin=0x00040002
[18:52:16.083]    TraceD0_Pin=0x00040003
[18:52:16.083]    TraceD1_Pin=0x00040004
[18:52:16.084]    TraceD2_Pin=0x00040005
[18:52:16.084]    TraceD3_Pin=0x00040006
[18:52:16.084]  </debugvars>
[18:52:16.084]  
[18:52:16.084]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:52:16.084]    <block atomic="false" info="">
[18:52:16.084]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:52:16.085]        // -> [traceSWO <= 0x00000001]
[18:52:16.085]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:52:16.085]        // -> [traceTPIU <= 0x00000000]
[18:52:16.085]    </block>
[18:52:16.085]    <control if="traceSWO" while="" timeout="0" info="">
[18:52:16.085]      // if-block "traceSWO"
[18:52:16.086]        // =>  TRUE
[18:52:16.086]      <block atomic="false" info="">
[18:52:16.086]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:52:16.086]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:52:16.086]            <block atomic="false" info="">
[18:52:16.086]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:52:16.086]                // -> [dbgmcu_val <= 0x00000000]
[18:52:16.086]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:52:16.087]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:52:16.087]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:52:16.087]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.087]                // -> [dbgmcu_val <= 0x00000007]
[18:52:16.087]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:52:16.088]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:52:16.088]              Sequence("ConfigureTraceSWOPin");
[18:52:16.088]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:52:16.088]                  <block atomic="false" info="">
[18:52:16.088]                    __var pin     = 0;
[18:52:16.088]                      // -> [pin <= 0x00000000]
[18:52:16.088]                    __var port    = 0;
[18:52:16.088]                      // -> [port <= 0x00000000]
[18:52:16.089]                    __var portAdr = 0;
[18:52:16.089]                      // -> [portAdr <= 0x00000000]
[18:52:16.089]                    __var pos     = 0;
[18:52:16.089]                      // -> [pos <= 0x00000000]
[18:52:16.089]                    __var SWO_Pin = 0x00010003;          // PB3
[18:52:16.089]                      // -> [SWO_Pin <= 0x00010003]
[18:52:16.090]                  </block>
[18:52:16.090]                  <block atomic="false" info="configure SWO">
[18:52:16.090]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:52:16.090]                      // -> [pin <= 0x00000003]
[18:52:16.090]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:52:16.090]                      // -> [port <= 0x00000001]
[18:52:16.090]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:52:16.091]                      // -> [portAdr <= 0x40020400]
[18:52:16.091]                    pos = pin * 2;
[18:52:16.091]                      // -> [pos <= 0x00000006]
[18:52:16.091]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:52:16.091]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.092]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.092]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:52:16.092]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.093]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.093]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:52:16.093]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.094]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.094]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:52:16.094]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.095]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.095]                  </block>
[18:52:16.095]                  <control if="pin <  8" while="" timeout="0" info="">
[18:52:16.095]                    // if-block "pin <  8"
[18:52:16.095]                      // =>  TRUE
[18:52:16.095]                    <block atomic="false" info="">
[18:52:16.096]                      pos = ((pin    ) & 7) * 4;
[18:52:16.096]                        // -> [pos <= 0x0000000C]
[18:52:16.096]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:52:16.096]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.097]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.097]                    </block>
[18:52:16.097]                    // end if-block "pin <  8"
[18:52:16.097]                  </control>
[18:52:16.097]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:52:16.097]                    // if-block "pin >= 8"
[18:52:16.097]                      // =>  FALSE
[18:52:16.098]                    // skip if-block "pin >= 8"
[18:52:16.098]                  </control>
[18:52:16.098]                </sequence>
[18:52:16.098]            </block>
[18:52:16.098]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:52:16.098]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:52:16.099]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:16.099]            </block>
[18:52:16.099]          </sequence>
[18:52:16.099]      </block>
[18:52:16.099]      // end if-block "traceSWO"
[18:52:16.099]    </control>
[18:52:16.099]    <control if="traceTPIU" while="" timeout="0" info="">
[18:52:16.099]      // if-block "traceTPIU"
[18:52:16.100]        // =>  FALSE
[18:52:16.100]      // skip if-block "traceTPIU"
[18:52:16.100]    </control>
[18:52:16.100]  </sequence>
[18:52:16.100]  
[18:52:44.656]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:52:44.656]  
[18:52:44.657]  <debugvars>
[18:52:44.657]    // Pre-defined
[18:52:44.657]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:52:44.657]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:52:44.657]    __dp=0x00000000
[18:52:44.658]    __ap=0x00000000
[18:52:44.658]    __traceout=0x00000001      (SWO Trace)
[18:52:44.658]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:52:44.658]    __FlashAddr=0x00000000
[18:52:44.658]    __FlashLen=0x00000000
[18:52:44.658]    __FlashArg=0x00000000
[18:52:44.659]    __FlashOp=0x00000000
[18:52:44.659]    __Result=0x00000000
[18:52:44.659]    
[18:52:44.659]    // User-defined
[18:52:44.659]    DbgMCU_CR=0x00000007
[18:52:44.659]    DbgMCU_APB1_Fz=0x00000000
[18:52:44.660]    DbgMCU_APB2_Fz=0x00000000
[18:52:44.660]    TraceClk_Pin=0x00040002
[18:52:44.660]    TraceD0_Pin=0x00040003
[18:52:44.660]    TraceD1_Pin=0x00040004
[18:52:44.660]    TraceD2_Pin=0x00040005
[18:52:44.660]    TraceD3_Pin=0x00040006
[18:52:44.661]  </debugvars>
[18:52:44.661]  
[18:52:44.661]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:52:44.661]    <block atomic="false" info="">
[18:52:44.661]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:52:44.662]        // -> [traceSWO <= 0x00000001]
[18:52:44.662]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:52:44.662]        // -> [traceTPIU <= 0x00000000]
[18:52:44.662]    </block>
[18:52:44.663]    <control if="traceSWO" while="" timeout="0" info="">
[18:52:44.663]      // if-block "traceSWO"
[18:52:44.663]        // =>  TRUE
[18:52:44.663]      <block atomic="false" info="">
[18:52:44.663]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:52:44.663]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:52:44.664]            <block atomic="false" info="">
[18:52:44.664]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:52:44.664]                // -> [dbgmcu_val <= 0x00000000]
[18:52:44.664]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:52:44.664]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:52:44.664]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:52:44.665]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.665]                // -> [dbgmcu_val <= 0x00000007]
[18:52:44.665]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:52:44.666]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:52:44.666]              Sequence("ConfigureTraceSWOPin");
[18:52:44.666]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:52:44.666]                  <block atomic="false" info="">
[18:52:44.666]                    __var pin     = 0;
[18:52:44.666]                      // -> [pin <= 0x00000000]
[18:52:44.667]                    __var port    = 0;
[18:52:44.667]                      // -> [port <= 0x00000000]
[18:52:44.667]                    __var portAdr = 0;
[18:52:44.667]                      // -> [portAdr <= 0x00000000]
[18:52:44.667]                    __var pos     = 0;
[18:52:44.667]                      // -> [pos <= 0x00000000]
[18:52:44.667]                    __var SWO_Pin = 0x00010003;          // PB3
[18:52:44.668]                      // -> [SWO_Pin <= 0x00010003]
[18:52:44.668]                  </block>
[18:52:44.668]                  <block atomic="false" info="configure SWO">
[18:52:44.668]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:52:44.668]                      // -> [pin <= 0x00000003]
[18:52:44.669]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:52:44.669]                      // -> [port <= 0x00000001]
[18:52:44.669]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:52:44.669]                      // -> [portAdr <= 0x40020400]
[18:52:44.669]                    pos = pin * 2;
[18:52:44.669]                      // -> [pos <= 0x00000006]
[18:52:44.669]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:52:44.670]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.670]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.670]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:52:44.671]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.671]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.671]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:52:44.672]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.672]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.672]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:52:44.673]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.673]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.673]                  </block>
[18:52:44.673]                  <control if="pin <  8" while="" timeout="0" info="">
[18:52:44.674]                    // if-block "pin <  8"
[18:52:44.674]                      // =>  TRUE
[18:52:44.674]                    <block atomic="false" info="">
[18:52:44.674]                      pos = ((pin    ) & 7) * 4;
[18:52:44.674]                        // -> [pos <= 0x0000000C]
[18:52:44.674]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:52:44.675]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.675]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.675]                    </block>
[18:52:44.675]                    // end if-block "pin <  8"
[18:52:44.675]                  </control>
[18:52:44.676]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:52:44.676]                    // if-block "pin >= 8"
[18:52:44.676]                      // =>  FALSE
[18:52:44.676]                    // skip if-block "pin >= 8"
[18:52:44.676]                  </control>
[18:52:44.676]                </sequence>
[18:52:44.676]            </block>
[18:52:44.676]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:52:44.676]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:52:44.677]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:52:44.677]            </block>
[18:52:44.677]          </sequence>
[18:52:44.677]      </block>
[18:52:44.677]      // end if-block "traceSWO"
[18:52:44.677]    </control>
[18:52:44.678]    <control if="traceTPIU" while="" timeout="0" info="">
[18:52:44.678]      // if-block "traceTPIU"
[18:52:44.678]        // =>  FALSE
[18:52:44.678]      // skip if-block "traceTPIU"
[18:52:44.678]    </control>
[18:52:44.678]  </sequence>
[18:52:44.678]  
[18:53:25.072]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:53:25.072]  
[18:53:25.072]  <debugvars>
[18:53:25.072]    // Pre-defined
[18:53:25.072]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:53:25.072]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:53:25.073]    __dp=0x00000000
[18:53:25.073]    __ap=0x00000000
[18:53:25.073]    __traceout=0x00000001      (SWO Trace)
[18:53:25.073]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:53:25.073]    __FlashAddr=0x00000000
[18:53:25.074]    __FlashLen=0x00000000
[18:53:25.074]    __FlashArg=0x00000000
[18:53:25.074]    __FlashOp=0x00000000
[18:53:25.074]    __Result=0x00000000
[18:53:25.074]    
[18:53:25.074]    // User-defined
[18:53:25.074]    DbgMCU_CR=0x00000007
[18:53:25.075]    DbgMCU_APB1_Fz=0x00000000
[18:53:25.075]    DbgMCU_APB2_Fz=0x00000000
[18:53:25.075]    TraceClk_Pin=0x00040002
[18:53:25.075]    TraceD0_Pin=0x00040003
[18:53:25.076]    TraceD1_Pin=0x00040004
[18:53:25.076]    TraceD2_Pin=0x00040005
[18:53:25.076]    TraceD3_Pin=0x00040006
[18:53:25.076]  </debugvars>
[18:53:25.076]  
[18:53:25.076]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:53:25.077]    <block atomic="false" info="">
[18:53:25.077]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:53:25.077]        // -> [traceSWO <= 0x00000001]
[18:53:25.077]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:53:25.077]        // -> [traceTPIU <= 0x00000000]
[18:53:25.078]    </block>
[18:53:25.078]    <control if="traceSWO" while="" timeout="0" info="">
[18:53:25.078]      // if-block "traceSWO"
[18:53:25.078]        // =>  TRUE
[18:53:25.078]      <block atomic="false" info="">
[18:53:25.079]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:53:25.079]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:53:25.079]            <block atomic="false" info="">
[18:53:25.079]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:53:25.079]                // -> [dbgmcu_val <= 0x00000000]
[18:53:25.080]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:53:25.080]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:53:25.081]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:53:25.081]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.081]                // -> [dbgmcu_val <= 0x00000007]
[18:53:25.082]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:53:25.082]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:53:25.082]              Sequence("ConfigureTraceSWOPin");
[18:53:25.082]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:53:25.082]                  <block atomic="false" info="">
[18:53:25.083]                    __var pin     = 0;
[18:53:25.083]                      // -> [pin <= 0x00000000]
[18:53:25.083]                    __var port    = 0;
[18:53:25.083]                      // -> [port <= 0x00000000]
[18:53:25.083]                    __var portAdr = 0;
[18:53:25.083]                      // -> [portAdr <= 0x00000000]
[18:53:25.084]                    __var pos     = 0;
[18:53:25.084]                      // -> [pos <= 0x00000000]
[18:53:25.084]                    __var SWO_Pin = 0x00010003;          // PB3
[18:53:25.084]                      // -> [SWO_Pin <= 0x00010003]
[18:53:25.084]                  </block>
[18:53:25.084]                  <block atomic="false" info="configure SWO">
[18:53:25.084]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:53:25.085]                      // -> [pin <= 0x00000003]
[18:53:25.085]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:53:25.085]                      // -> [port <= 0x00000001]
[18:53:25.085]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:53:25.085]                      // -> [portAdr <= 0x40020400]
[18:53:25.085]                    pos = pin * 2;
[18:53:25.086]                      // -> [pos <= 0x00000006]
[18:53:25.086]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:53:25.086]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.087]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.087]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:53:25.087]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.088]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.088]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:53:25.088]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.089]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.089]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:53:25.090]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.090]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.090]                  </block>
[18:53:25.090]                  <control if="pin <  8" while="" timeout="0" info="">
[18:53:25.091]                    // if-block "pin <  8"
[18:53:25.091]                      // =>  TRUE
[18:53:25.091]                    <block atomic="false" info="">
[18:53:25.091]                      pos = ((pin    ) & 7) * 4;
[18:53:25.091]                        // -> [pos <= 0x0000000C]
[18:53:25.092]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:53:25.092]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.093]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.093]                    </block>
[18:53:25.093]                    // end if-block "pin <  8"
[18:53:25.093]                  </control>
[18:53:25.093]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:53:25.093]                    // if-block "pin >= 8"
[18:53:25.094]                      // =>  FALSE
[18:53:25.094]                    // skip if-block "pin >= 8"
[18:53:25.094]                  </control>
[18:53:25.094]                </sequence>
[18:53:25.094]            </block>
[18:53:25.094]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:53:25.095]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:53:25.095]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:25.095]            </block>
[18:53:25.096]          </sequence>
[18:53:25.096]      </block>
[18:53:25.096]      // end if-block "traceSWO"
[18:53:25.096]    </control>
[18:53:25.096]    <control if="traceTPIU" while="" timeout="0" info="">
[18:53:25.096]      // if-block "traceTPIU"
[18:53:25.097]        // =>  FALSE
[18:53:25.097]      // skip if-block "traceTPIU"
[18:53:25.097]    </control>
[18:53:25.097]  </sequence>
[18:53:25.097]  
[18:53:31.952]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:53:31.952]  
[18:53:31.958]  <debugvars>
[18:53:31.959]    // Pre-defined
[18:53:31.959]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:53:31.959]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:53:31.960]    __dp=0x00000000
[18:53:31.960]    __ap=0x00000000
[18:53:31.960]    __traceout=0x00000001      (SWO Trace)
[18:53:31.960]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:53:31.960]    __FlashAddr=0x00000000
[18:53:31.961]    __FlashLen=0x00000000
[18:53:31.961]    __FlashArg=0x00000000
[18:53:31.961]    __FlashOp=0x00000000
[18:53:31.961]    __Result=0x00000000
[18:53:31.961]    
[18:53:31.961]    // User-defined
[18:53:31.962]    DbgMCU_CR=0x00000007
[18:53:31.962]    DbgMCU_APB1_Fz=0x00000000
[18:53:31.962]    DbgMCU_APB2_Fz=0x00000000
[18:53:31.962]    TraceClk_Pin=0x00040002
[18:53:31.963]    TraceD0_Pin=0x00040003
[18:53:31.963]    TraceD1_Pin=0x00040004
[18:53:31.963]    TraceD2_Pin=0x00040005
[18:53:31.963]    TraceD3_Pin=0x00040006
[18:53:31.963]  </debugvars>
[18:53:31.964]  
[18:53:31.964]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:53:31.964]    <block atomic="false" info="">
[18:53:31.964]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:53:31.964]        // -> [traceSWO <= 0x00000001]
[18:53:31.964]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:53:31.965]        // -> [traceTPIU <= 0x00000000]
[18:53:31.965]    </block>
[18:53:31.965]    <control if="traceSWO" while="" timeout="0" info="">
[18:53:31.965]      // if-block "traceSWO"
[18:53:31.966]        // =>  TRUE
[18:53:31.966]      <block atomic="false" info="">
[18:53:31.966]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:53:31.966]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:53:31.966]            <block atomic="false" info="">
[18:53:31.967]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:53:31.967]                // -> [dbgmcu_val <= 0x00000000]
[18:53:31.967]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:53:31.967]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:53:31.967]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:53:31.968]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.968]                // -> [dbgmcu_val <= 0x00000007]
[18:53:31.968]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:53:31.969]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:53:31.969]              Sequence("ConfigureTraceSWOPin");
[18:53:31.969]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:53:31.969]                  <block atomic="false" info="">
[18:53:31.969]                    __var pin     = 0;
[18:53:31.969]                      // -> [pin <= 0x00000000]
[18:53:31.970]                    __var port    = 0;
[18:53:31.970]                      // -> [port <= 0x00000000]
[18:53:31.970]                    __var portAdr = 0;
[18:53:31.970]                      // -> [portAdr <= 0x00000000]
[18:53:31.970]                    __var pos     = 0;
[18:53:31.971]                      // -> [pos <= 0x00000000]
[18:53:31.971]                    __var SWO_Pin = 0x00010003;          // PB3
[18:53:31.971]                      // -> [SWO_Pin <= 0x00010003]
[18:53:31.971]                  </block>
[18:53:31.971]                  <block atomic="false" info="configure SWO">
[18:53:31.972]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:53:31.972]                      // -> [pin <= 0x00000003]
[18:53:31.972]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:53:31.972]                      // -> [port <= 0x00000001]
[18:53:31.972]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:53:31.973]                      // -> [portAdr <= 0x40020400]
[18:53:31.973]                    pos = pin * 2;
[18:53:31.973]                      // -> [pos <= 0x00000006]
[18:53:31.973]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:53:31.974]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.974]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.975]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:53:31.975]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.976]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.976]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:53:31.976]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.977]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.977]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:53:31.978]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.978]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.978]                  </block>
[18:53:31.978]                  <control if="pin <  8" while="" timeout="0" info="">
[18:53:31.979]                    // if-block "pin <  8"
[18:53:31.979]                      // =>  TRUE
[18:53:31.979]                    <block atomic="false" info="">
[18:53:31.979]                      pos = ((pin    ) & 7) * 4;
[18:53:31.979]                        // -> [pos <= 0x0000000C]
[18:53:31.980]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:53:31.980]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.981]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.981]                    </block>
[18:53:31.981]                    // end if-block "pin <  8"
[18:53:31.981]                  </control>
[18:53:31.981]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:53:31.982]                    // if-block "pin >= 8"
[18:53:31.982]                      // =>  FALSE
[18:53:31.982]                    // skip if-block "pin >= 8"
[18:53:31.982]                  </control>
[18:53:31.983]                </sequence>
[18:53:31.983]            </block>
[18:53:31.983]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:53:31.983]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:53:31.984]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:53:31.984]            </block>
[18:53:31.984]          </sequence>
[18:53:31.984]      </block>
[18:53:31.984]      // end if-block "traceSWO"
[18:53:31.985]    </control>
[18:53:31.985]    <control if="traceTPIU" while="" timeout="0" info="">
[18:53:31.985]      // if-block "traceTPIU"
[18:53:31.985]        // =>  FALSE
[18:53:31.985]      // skip if-block "traceTPIU"
[18:53:31.986]    </control>
[18:53:31.986]  </sequence>
[18:53:31.986]  
[18:54:14.592]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:54:14.592]  
[18:54:14.599]  <debugvars>
[18:54:14.599]    // Pre-defined
[18:54:14.599]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:54:14.599]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:54:14.600]    __dp=0x00000000
[18:54:14.600]    __ap=0x00000000
[18:54:14.600]    __traceout=0x00000001      (SWO Trace)
[18:54:14.600]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:54:14.601]    __FlashAddr=0x00000000
[18:54:14.601]    __FlashLen=0x00000000
[18:54:14.601]    __FlashArg=0x00000000
[18:54:14.601]    __FlashOp=0x00000000
[18:54:14.601]    __Result=0x00000000
[18:54:14.602]    
[18:54:14.602]    // User-defined
[18:54:14.602]    DbgMCU_CR=0x00000007
[18:54:14.602]    DbgMCU_APB1_Fz=0x00000000
[18:54:14.602]    DbgMCU_APB2_Fz=0x00000000
[18:54:14.602]    TraceClk_Pin=0x00040002
[18:54:14.603]    TraceD0_Pin=0x00040003
[18:54:14.603]    TraceD1_Pin=0x00040004
[18:54:14.603]    TraceD2_Pin=0x00040005
[18:54:14.603]    TraceD3_Pin=0x00040006
[18:54:14.603]  </debugvars>
[18:54:14.604]  
[18:54:14.604]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:54:14.604]    <block atomic="false" info="">
[18:54:14.604]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:54:14.604]        // -> [traceSWO <= 0x00000001]
[18:54:14.605]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:54:14.605]        // -> [traceTPIU <= 0x00000000]
[18:54:14.605]    </block>
[18:54:14.605]    <control if="traceSWO" while="" timeout="0" info="">
[18:54:14.605]      // if-block "traceSWO"
[18:54:14.606]        // =>  TRUE
[18:54:14.606]      <block atomic="false" info="">
[18:54:14.606]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:54:14.606]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:54:14.606]            <block atomic="false" info="">
[18:54:14.606]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:54:14.607]                // -> [dbgmcu_val <= 0x00000000]
[18:54:14.607]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:54:14.607]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:54:14.607]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:54:14.608]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.608]                // -> [dbgmcu_val <= 0x00000007]
[18:54:14.608]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:54:14.608]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:54:14.608]              Sequence("ConfigureTraceSWOPin");
[18:54:14.609]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:54:14.609]                  <block atomic="false" info="">
[18:54:14.609]                    __var pin     = 0;
[18:54:14.609]                      // -> [pin <= 0x00000000]
[18:54:14.609]                    __var port    = 0;
[18:54:14.610]                      // -> [port <= 0x00000000]
[18:54:14.610]                    __var portAdr = 0;
[18:54:14.610]                      // -> [portAdr <= 0x00000000]
[18:54:14.610]                    __var pos     = 0;
[18:54:14.610]                      // -> [pos <= 0x00000000]
[18:54:14.611]                    __var SWO_Pin = 0x00010003;          // PB3
[18:54:14.611]                      // -> [SWO_Pin <= 0x00010003]
[18:54:14.611]                  </block>
[18:54:14.611]                  <block atomic="false" info="configure SWO">
[18:54:14.611]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:54:14.611]                      // -> [pin <= 0x00000003]
[18:54:14.612]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:54:14.612]                      // -> [port <= 0x00000001]
[18:54:14.612]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:54:14.612]                      // -> [portAdr <= 0x40020400]
[18:54:14.612]                    pos = pin * 2;
[18:54:14.613]                      // -> [pos <= 0x00000006]
[18:54:14.613]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:54:14.613]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.614]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.614]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:54:14.615]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.615]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.616]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:54:14.616]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.617]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.617]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:54:14.618]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.618]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.618]                  </block>
[18:54:14.618]                  <control if="pin <  8" while="" timeout="0" info="">
[18:54:14.619]                    // if-block "pin <  8"
[18:54:14.619]                      // =>  TRUE
[18:54:14.619]                    <block atomic="false" info="">
[18:54:14.619]                      pos = ((pin    ) & 7) * 4;
[18:54:14.620]                        // -> [pos <= 0x0000000C]
[18:54:14.620]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:54:14.620]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.621]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.621]                    </block>
[18:54:14.621]                    // end if-block "pin <  8"
[18:54:14.621]                  </control>
[18:54:14.621]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:54:14.622]                    // if-block "pin >= 8"
[18:54:14.622]                      // =>  FALSE
[18:54:14.622]                    // skip if-block "pin >= 8"
[18:54:14.622]                  </control>
[18:54:14.622]                </sequence>
[18:54:14.623]            </block>
[18:54:14.623]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:54:14.623]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:54:14.624]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:54:14.624]            </block>
[18:54:14.624]          </sequence>
[18:54:14.624]      </block>
[18:54:14.624]      // end if-block "traceSWO"
[18:54:14.625]    </control>
[18:54:14.625]    <control if="traceTPIU" while="" timeout="0" info="">
[18:54:14.625]      // if-block "traceTPIU"
[18:54:14.625]        // =>  FALSE
[18:54:14.625]      // skip if-block "traceTPIU"
[18:54:14.625]    </control>
[18:54:14.626]  </sequence>
[18:54:14.626]  
[18:55:12.496]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:55:12.496]  
[18:55:12.497]  <debugvars>
[18:55:12.497]    // Pre-defined
[18:55:12.497]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:55:12.497]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:55:12.497]    __dp=0x00000000
[18:55:12.497]    __ap=0x00000000
[18:55:12.498]    __traceout=0x00000001      (SWO Trace)
[18:55:12.498]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:55:12.498]    __FlashAddr=0x00000000
[18:55:12.498]    __FlashLen=0x00000000
[18:55:12.498]    __FlashArg=0x00000000
[18:55:12.499]    __FlashOp=0x00000000
[18:55:12.499]    __Result=0x00000000
[18:55:12.499]    
[18:55:12.499]    // User-defined
[18:55:12.499]    DbgMCU_CR=0x00000007
[18:55:12.499]    DbgMCU_APB1_Fz=0x00000000
[18:55:12.500]    DbgMCU_APB2_Fz=0x00000000
[18:55:12.501]    TraceClk_Pin=0x00040002
[18:55:12.501]    TraceD0_Pin=0x00040003
[18:55:12.501]    TraceD1_Pin=0x00040004
[18:55:12.501]    TraceD2_Pin=0x00040005
[18:55:12.501]    TraceD3_Pin=0x00040006
[18:55:12.502]  </debugvars>
[18:55:12.502]  
[18:55:12.502]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:55:12.502]    <block atomic="false" info="">
[18:55:12.502]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:55:12.502]        // -> [traceSWO <= 0x00000001]
[18:55:12.502]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:55:12.503]        // -> [traceTPIU <= 0x00000000]
[18:55:12.503]    </block>
[18:55:12.503]    <control if="traceSWO" while="" timeout="0" info="">
[18:55:12.503]      // if-block "traceSWO"
[18:55:12.503]        // =>  TRUE
[18:55:12.504]      <block atomic="false" info="">
[18:55:12.504]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:55:12.504]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:55:12.504]            <block atomic="false" info="">
[18:55:12.504]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:55:12.504]                // -> [dbgmcu_val <= 0x00000000]
[18:55:12.505]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:55:12.505]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:55:12.505]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:55:12.505]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.506]                // -> [dbgmcu_val <= 0x00000007]
[18:55:12.506]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:55:12.506]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:55:12.506]              Sequence("ConfigureTraceSWOPin");
[18:55:12.506]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:55:12.506]                  <block atomic="false" info="">
[18:55:12.507]                    __var pin     = 0;
[18:55:12.507]                      // -> [pin <= 0x00000000]
[18:55:12.507]                    __var port    = 0;
[18:55:12.507]                      // -> [port <= 0x00000000]
[18:55:12.507]                    __var portAdr = 0;
[18:55:12.507]                      // -> [portAdr <= 0x00000000]
[18:55:12.507]                    __var pos     = 0;
[18:55:12.508]                      // -> [pos <= 0x00000000]
[18:55:12.508]                    __var SWO_Pin = 0x00010003;          // PB3
[18:55:12.508]                      // -> [SWO_Pin <= 0x00010003]
[18:55:12.508]                  </block>
[18:55:12.508]                  <block atomic="false" info="configure SWO">
[18:55:12.508]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:55:12.509]                      // -> [pin <= 0x00000003]
[18:55:12.509]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:55:12.509]                      // -> [port <= 0x00000001]
[18:55:12.509]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:55:12.509]                      // -> [portAdr <= 0x40020400]
[18:55:12.509]                    pos = pin * 2;
[18:55:12.510]                      // -> [pos <= 0x00000006]
[18:55:12.510]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:55:12.510]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.511]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.511]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:55:12.511]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.512]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.512]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:55:12.513]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.513]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.513]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:55:12.514]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.514]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.514]                  </block>
[18:55:12.514]                  <control if="pin <  8" while="" timeout="0" info="">
[18:55:12.515]                    // if-block "pin <  8"
[18:55:12.515]                      // =>  TRUE
[18:55:12.515]                    <block atomic="false" info="">
[18:55:12.515]                      pos = ((pin    ) & 7) * 4;
[18:55:12.515]                        // -> [pos <= 0x0000000C]
[18:55:12.515]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:55:12.516]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.516]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.516]                    </block>
[18:55:12.516]                    // end if-block "pin <  8"
[18:55:12.516]                  </control>
[18:55:12.516]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:55:12.517]                    // if-block "pin >= 8"
[18:55:12.517]                      // =>  FALSE
[18:55:12.517]                    // skip if-block "pin >= 8"
[18:55:12.517]                  </control>
[18:55:12.517]                </sequence>
[18:55:12.517]            </block>
[18:55:12.517]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:55:12.517]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:55:12.518]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:12.518]            </block>
[18:55:12.518]          </sequence>
[18:55:12.518]      </block>
[18:55:12.518]      // end if-block "traceSWO"
[18:55:12.518]    </control>
[18:55:12.519]    <control if="traceTPIU" while="" timeout="0" info="">
[18:55:12.519]      // if-block "traceTPIU"
[18:55:12.519]        // =>  FALSE
[18:55:12.519]      // skip if-block "traceTPIU"
[18:55:12.519]    </control>
[18:55:12.519]  </sequence>
[18:55:12.519]  
[18:55:19.012]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[18:55:19.012]  
[18:55:19.012]  <debugvars>
[18:55:19.013]    // Pre-defined
[18:55:19.013]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:55:19.013]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[18:55:19.013]    __dp=0x00000000
[18:55:19.013]    __ap=0x00000000
[18:55:19.013]    __traceout=0x00000001      (SWO Trace)
[18:55:19.013]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:55:19.014]    __FlashAddr=0x00000000
[18:55:19.014]    __FlashLen=0x00000000
[18:55:19.014]    __FlashArg=0x00000000
[18:55:19.014]    __FlashOp=0x00000000
[18:55:19.014]    __Result=0x00000000
[18:55:19.014]    
[18:55:19.014]    // User-defined
[18:55:19.014]    DbgMCU_CR=0x00000007
[18:55:19.014]    DbgMCU_APB1_Fz=0x00000000
[18:55:19.014]    DbgMCU_APB2_Fz=0x00000000
[18:55:19.015]    TraceClk_Pin=0x00040002
[18:55:19.015]    TraceD0_Pin=0x00040003
[18:55:19.015]    TraceD1_Pin=0x00040004
[18:55:19.015]    TraceD2_Pin=0x00040005
[18:55:19.015]    TraceD3_Pin=0x00040006
[18:55:19.015]  </debugvars>
[18:55:19.015]  
[18:55:19.015]  <sequence name="TraceStop" Pname="" disable="false" info="">
[18:55:19.016]    <block atomic="false" info="">
[18:55:19.016]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[18:55:19.016]        // -> [traceSWO <= 0x00000001]
[18:55:19.016]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[18:55:19.016]        // -> [traceTPIU <= 0x00000000]
[18:55:19.016]    </block>
[18:55:19.016]    <control if="traceSWO" while="" timeout="0" info="">
[18:55:19.017]      // if-block "traceSWO"
[18:55:19.017]        // =>  TRUE
[18:55:19.017]      <block atomic="false" info="">
[18:55:19.017]        Sequence("DisableTraceSWO");
[18:55:19.017]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[18:55:19.017]            <block atomic="false" info="">
[18:55:19.017]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:55:19.018]                // -> [dbgmcu_val <= 0x00000000]
[18:55:19.018]            </block>
[18:55:19.018]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[18:55:19.018]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[18:55:19.018]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:55:19.018]                // -> [dbgmcu_val <= 0x00000007]
[18:55:19.019]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[18:55:19.019]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:55:19.019]            </block>
[18:55:19.020]          </sequence>
[18:55:19.020]      </block>
[18:55:19.020]      // end if-block "traceSWO"
[18:55:19.020]    </control>
[18:55:19.020]    <control if="traceTPIU" while="" timeout="0" info="">
[18:55:19.020]      // if-block "traceTPIU"
[18:55:19.020]        // =>  FALSE
[18:55:19.021]      // skip if-block "traceTPIU"
[18:55:19.021]    </control>
[18:55:19.021]  </sequence>
[18:55:19.021]  
[18:57:22.447]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:57:22.447]  
[18:57:22.447]  <debugvars>
[18:57:22.447]    // Pre-defined
[18:57:22.447]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:57:22.447]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:57:22.447]    __dp=0x00000000
[18:57:22.447]    __ap=0x00000000
[18:57:22.447]    __traceout=0x00000001      (SWO Trace)
[18:57:22.448]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:57:22.448]    __FlashAddr=0x00000000
[18:57:22.448]    __FlashLen=0x00000000
[18:57:22.448]    __FlashArg=0x00000000
[18:57:22.448]    __FlashOp=0x00000000
[18:57:22.449]    __Result=0x00000000
[18:57:22.449]    
[18:57:22.449]    // User-defined
[18:57:22.449]    DbgMCU_CR=0x00000007
[18:57:22.449]    DbgMCU_APB1_Fz=0x00000000
[18:57:22.450]    DbgMCU_APB2_Fz=0x00000000
[18:57:22.450]    TraceClk_Pin=0x00040002
[18:57:22.450]    TraceD0_Pin=0x00040003
[18:57:22.450]    TraceD1_Pin=0x00040004
[18:57:22.450]    TraceD2_Pin=0x00040005
[18:57:22.451]    TraceD3_Pin=0x00040006
[18:57:22.451]  </debugvars>
[18:57:22.451]  
[18:57:22.451]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:57:22.451]    <block atomic="false" info="">
[18:57:22.452]      Sequence("CheckID");
[18:57:22.452]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:57:22.452]          <block atomic="false" info="">
[18:57:22.452]            __var pidr1 = 0;
[18:57:22.452]              // -> [pidr1 <= 0x00000000]
[18:57:22.452]            __var pidr2 = 0;
[18:57:22.453]              // -> [pidr2 <= 0x00000000]
[18:57:22.453]            __var jep106id = 0;
[18:57:22.453]              // -> [jep106id <= 0x00000000]
[18:57:22.453]            __var ROMTableBase = 0;
[18:57:22.453]              // -> [ROMTableBase <= 0x00000000]
[18:57:22.454]            __ap = 0;      // AHB-AP
[18:57:22.454]              // -> [__ap <= 0x00000000]
[18:57:22.454]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:57:22.454]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.454]              // -> [ROMTableBase <= 0xE00FD000]
[18:57:22.455]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:57:22.455]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.455]              // -> [pidr1 <= 0x00000004]
[18:57:22.456]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:57:22.456]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.457]              // -> [pidr2 <= 0x0000001A]
[18:57:22.457]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:57:22.457]              // -> [jep106id <= 0x00000020]
[18:57:22.457]          </block>
[18:57:22.457]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:57:22.457]            // if-block "jep106id != 0x20"
[18:57:22.458]              // =>  FALSE
[18:57:22.458]            // skip if-block "jep106id != 0x20"
[18:57:22.458]          </control>
[18:57:22.458]        </sequence>
[18:57:22.458]    </block>
[18:57:22.458]  </sequence>
[18:57:22.459]  
[18:57:22.473]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:57:22.473]  
[18:57:22.473]  <debugvars>
[18:57:22.473]    // Pre-defined
[18:57:22.474]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:57:22.474]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:57:22.474]    __dp=0x00000000
[18:57:22.474]    __ap=0x00000000
[18:57:22.474]    __traceout=0x00000001      (SWO Trace)
[18:57:22.474]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:57:22.475]    __FlashAddr=0x00000000
[18:57:22.475]    __FlashLen=0x00000000
[18:57:22.475]    __FlashArg=0x00000000
[18:57:22.475]    __FlashOp=0x00000000
[18:57:22.475]    __Result=0x00000000
[18:57:22.475]    
[18:57:22.475]    // User-defined
[18:57:22.476]    DbgMCU_CR=0x00000007
[18:57:22.476]    DbgMCU_APB1_Fz=0x00000000
[18:57:22.476]    DbgMCU_APB2_Fz=0x00000000
[18:57:22.476]    TraceClk_Pin=0x00040002
[18:57:22.477]    TraceD0_Pin=0x00040003
[18:57:22.477]    TraceD1_Pin=0x00040004
[18:57:22.477]    TraceD2_Pin=0x00040005
[18:57:22.477]    TraceD3_Pin=0x00040006
[18:57:22.477]  </debugvars>
[18:57:22.477]  
[18:57:22.478]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:57:22.478]    <block atomic="false" info="">
[18:57:22.478]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:57:22.479]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.479]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:57:22.479]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.480]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:57:22.480]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.480]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:57:22.481]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:57:22.481]    </block>
[18:57:22.481]  </sequence>
[18:57:22.481]  
[18:58:50.873]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:58:50.873]  
[18:58:50.873]  <debugvars>
[18:58:50.873]    // Pre-defined
[18:58:50.874]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:58:50.874]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:58:50.874]    __dp=0x00000000
[18:58:50.874]    __ap=0x00000000
[18:58:50.874]    __traceout=0x00000001      (SWO Trace)
[18:58:50.875]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:58:50.875]    __FlashAddr=0x00000000
[18:58:50.875]    __FlashLen=0x00000000
[18:58:50.875]    __FlashArg=0x00000000
[18:58:50.875]    __FlashOp=0x00000000
[18:58:50.875]    __Result=0x00000000
[18:58:50.876]    
[18:58:50.876]    // User-defined
[18:58:50.876]    DbgMCU_CR=0x00000007
[18:58:50.876]    DbgMCU_APB1_Fz=0x00000000
[18:58:50.876]    DbgMCU_APB2_Fz=0x00000000
[18:58:50.877]    TraceClk_Pin=0x00040002
[18:58:50.877]    TraceD0_Pin=0x00040003
[18:58:50.877]    TraceD1_Pin=0x00040004
[18:58:50.877]    TraceD2_Pin=0x00040005
[18:58:50.877]    TraceD3_Pin=0x00040006
[18:58:50.878]  </debugvars>
[18:58:50.878]  
[18:58:50.878]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:58:50.878]    <block atomic="false" info="">
[18:58:50.878]      Sequence("CheckID");
[18:58:50.879]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:58:50.879]          <block atomic="false" info="">
[18:58:50.879]            __var pidr1 = 0;
[18:58:50.879]              // -> [pidr1 <= 0x00000000]
[18:58:50.879]            __var pidr2 = 0;
[18:58:50.880]              // -> [pidr2 <= 0x00000000]
[18:58:50.880]            __var jep106id = 0;
[18:58:50.880]              // -> [jep106id <= 0x00000000]
[18:58:50.880]            __var ROMTableBase = 0;
[18:58:50.880]              // -> [ROMTableBase <= 0x00000000]
[18:58:50.880]            __ap = 0;      // AHB-AP
[18:58:50.881]              // -> [__ap <= 0x00000000]
[18:58:50.881]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:58:50.881]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.882]              // -> [ROMTableBase <= 0xE00FD000]
[18:58:50.882]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:58:50.882]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.883]              // -> [pidr1 <= 0x00000004]
[18:58:50.883]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:58:50.883]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.883]              // -> [pidr2 <= 0x0000001A]
[18:58:50.884]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:58:50.884]              // -> [jep106id <= 0x00000020]
[18:58:50.884]          </block>
[18:58:50.884]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:58:50.884]            // if-block "jep106id != 0x20"
[18:58:50.884]              // =>  FALSE
[18:58:50.885]            // skip if-block "jep106id != 0x20"
[18:58:50.885]          </control>
[18:58:50.885]        </sequence>
[18:58:50.885]    </block>
[18:58:50.885]  </sequence>
[18:58:50.885]  
[18:58:50.901]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:58:50.901]  
[18:58:50.901]  <debugvars>
[18:58:50.901]    // Pre-defined
[18:58:50.901]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:58:50.901]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:58:50.901]    __dp=0x00000000
[18:58:50.902]    __ap=0x00000000
[18:58:50.902]    __traceout=0x00000001      (SWO Trace)
[18:58:50.902]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:58:50.902]    __FlashAddr=0x00000000
[18:58:50.902]    __FlashLen=0x00000000
[18:58:50.903]    __FlashArg=0x00000000
[18:58:50.903]    __FlashOp=0x00000000
[18:58:50.903]    __Result=0x00000000
[18:58:50.903]    
[18:58:50.903]    // User-defined
[18:58:50.903]    DbgMCU_CR=0x00000007
[18:58:50.903]    DbgMCU_APB1_Fz=0x00000000
[18:58:50.904]    DbgMCU_APB2_Fz=0x00000000
[18:58:50.904]    TraceClk_Pin=0x00040002
[18:58:50.904]    TraceD0_Pin=0x00040003
[18:58:50.904]    TraceD1_Pin=0x00040004
[18:58:50.904]    TraceD2_Pin=0x00040005
[18:58:50.905]    TraceD3_Pin=0x00040006
[18:58:50.905]  </debugvars>
[18:58:50.905]  
[18:58:50.905]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:58:50.905]    <block atomic="false" info="">
[18:58:50.905]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:58:50.906]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.906]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:58:50.907]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.907]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:58:50.908]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.908]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:58:50.908]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:58:50.908]    </block>
[18:58:50.909]  </sequence>
[18:58:50.909]  
[19:01:40.606]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:01:40.606]  
[19:01:40.606]  <debugvars>
[19:01:40.606]    // Pre-defined
[19:01:40.606]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:01:40.606]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:01:40.607]    __dp=0x00000000
[19:01:40.607]    __ap=0x00000000
[19:01:40.607]    __traceout=0x00000001      (SWO Trace)
[19:01:40.607]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:01:40.607]    __FlashAddr=0x00000000
[19:01:40.608]    __FlashLen=0x00000000
[19:01:40.608]    __FlashArg=0x00000000
[19:01:40.608]    __FlashOp=0x00000000
[19:01:40.608]    __Result=0x00000000
[19:01:40.608]    
[19:01:40.608]    // User-defined
[19:01:40.609]    DbgMCU_CR=0x00000007
[19:01:40.609]    DbgMCU_APB1_Fz=0x00000000
[19:01:40.609]    DbgMCU_APB2_Fz=0x00000000
[19:01:40.609]    TraceClk_Pin=0x00040002
[19:01:40.610]    TraceD0_Pin=0x00040003
[19:01:40.610]    TraceD1_Pin=0x00040004
[19:01:40.610]    TraceD2_Pin=0x00040005
[19:01:40.610]    TraceD3_Pin=0x00040006
[19:01:40.610]  </debugvars>
[19:01:40.610]  
[19:01:40.611]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:01:40.611]    <block atomic="false" info="">
[19:01:40.611]      Sequence("CheckID");
[19:01:40.611]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:01:40.611]          <block atomic="false" info="">
[19:01:40.612]            __var pidr1 = 0;
[19:01:40.612]              // -> [pidr1 <= 0x00000000]
[19:01:40.612]            __var pidr2 = 0;
[19:01:40.612]              // -> [pidr2 <= 0x00000000]
[19:01:40.612]            __var jep106id = 0;
[19:01:40.613]              // -> [jep106id <= 0x00000000]
[19:01:40.613]            __var ROMTableBase = 0;
[19:01:40.613]              // -> [ROMTableBase <= 0x00000000]
[19:01:40.613]            __ap = 0;      // AHB-AP
[19:01:40.613]              // -> [__ap <= 0x00000000]
[19:01:40.613]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:01:40.614]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.614]              // -> [ROMTableBase <= 0xE00FD000]
[19:01:40.614]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:01:40.615]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.615]              // -> [pidr1 <= 0x00000004]
[19:01:40.615]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:01:40.616]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.616]              // -> [pidr2 <= 0x0000001A]
[19:01:40.616]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:01:40.616]              // -> [jep106id <= 0x00000020]
[19:01:40.617]          </block>
[19:01:40.617]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:01:40.617]            // if-block "jep106id != 0x20"
[19:01:40.617]              // =>  FALSE
[19:01:40.617]            // skip if-block "jep106id != 0x20"
[19:01:40.618]          </control>
[19:01:40.618]        </sequence>
[19:01:40.618]    </block>
[19:01:40.618]  </sequence>
[19:01:40.618]  
[19:01:40.634]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:01:40.634]  
[19:01:40.634]  <debugvars>
[19:01:40.634]    // Pre-defined
[19:01:40.634]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:01:40.634]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:01:40.635]    __dp=0x00000000
[19:01:40.635]    __ap=0x00000000
[19:01:40.635]    __traceout=0x00000001      (SWO Trace)
[19:01:40.635]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:01:40.635]    __FlashAddr=0x00000000
[19:01:40.635]    __FlashLen=0x00000000
[19:01:40.636]    __FlashArg=0x00000000
[19:01:40.636]    __FlashOp=0x00000000
[19:01:40.636]    __Result=0x00000000
[19:01:40.636]    
[19:01:40.636]    // User-defined
[19:01:40.637]    DbgMCU_CR=0x00000007
[19:01:40.637]    DbgMCU_APB1_Fz=0x00000000
[19:01:40.637]    DbgMCU_APB2_Fz=0x00000000
[19:01:40.637]    TraceClk_Pin=0x00040002
[19:01:40.637]    TraceD0_Pin=0x00040003
[19:01:40.638]    TraceD1_Pin=0x00040004
[19:01:40.638]    TraceD2_Pin=0x00040005
[19:01:40.638]    TraceD3_Pin=0x00040006
[19:01:40.638]  </debugvars>
[19:01:40.638]  
[19:01:40.639]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:01:40.639]    <block atomic="false" info="">
[19:01:40.639]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:01:40.640]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.640]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:01:40.641]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.641]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:01:40.641]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.642]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:01:40.642]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:01:40.642]    </block>
[19:01:40.643]  </sequence>
[19:01:40.643]  
[19:04:50.775]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:04:50.775]  
[19:04:50.775]  <debugvars>
[19:04:50.776]    // Pre-defined
[19:04:50.776]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:04:50.776]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:04:50.776]    __dp=0x00000000
[19:04:50.776]    __ap=0x00000000
[19:04:50.776]    __traceout=0x00000001      (SWO Trace)
[19:04:50.777]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:04:50.777]    __FlashAddr=0x00000000
[19:04:50.777]    __FlashLen=0x00000000
[19:04:50.777]    __FlashArg=0x00000000
[19:04:50.777]    __FlashOp=0x00000000
[19:04:50.777]    __Result=0x00000000
[19:04:50.778]    
[19:04:50.778]    // User-defined
[19:04:50.778]    DbgMCU_CR=0x00000007
[19:04:50.778]    DbgMCU_APB1_Fz=0x00000000
[19:04:50.778]    DbgMCU_APB2_Fz=0x00000000
[19:04:50.778]    TraceClk_Pin=0x00040002
[19:04:50.779]    TraceD0_Pin=0x00040003
[19:04:50.779]    TraceD1_Pin=0x00040004
[19:04:50.779]    TraceD2_Pin=0x00040005
[19:04:50.779]    TraceD3_Pin=0x00040006
[19:04:50.779]  </debugvars>
[19:04:50.779]  
[19:04:50.780]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:04:50.780]    <block atomic="false" info="">
[19:04:50.780]      Sequence("CheckID");
[19:04:50.780]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:04:50.780]          <block atomic="false" info="">
[19:04:50.780]            __var pidr1 = 0;
[19:04:50.781]              // -> [pidr1 <= 0x00000000]
[19:04:50.781]            __var pidr2 = 0;
[19:04:50.781]              // -> [pidr2 <= 0x00000000]
[19:04:50.781]            __var jep106id = 0;
[19:04:50.781]              // -> [jep106id <= 0x00000000]
[19:04:50.782]            __var ROMTableBase = 0;
[19:04:50.782]              // -> [ROMTableBase <= 0x00000000]
[19:04:50.782]            __ap = 0;      // AHB-AP
[19:04:50.782]              // -> [__ap <= 0x00000000]
[19:04:50.782]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:04:50.783]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.783]              // -> [ROMTableBase <= 0xE00FD000]
[19:04:50.783]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:04:50.784]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.784]              // -> [pidr1 <= 0x00000004]
[19:04:50.784]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:04:50.785]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.785]              // -> [pidr2 <= 0x0000001A]
[19:04:50.785]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:04:50.785]              // -> [jep106id <= 0x00000020]
[19:04:50.785]          </block>
[19:04:50.785]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:04:50.785]            // if-block "jep106id != 0x20"
[19:04:50.786]              // =>  FALSE
[19:04:50.786]            // skip if-block "jep106id != 0x20"
[19:04:50.786]          </control>
[19:04:50.786]        </sequence>
[19:04:50.786]    </block>
[19:04:50.787]  </sequence>
[19:04:50.787]  
[19:04:50.802]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:04:50.802]  
[19:04:50.802]  <debugvars>
[19:04:50.802]    // Pre-defined
[19:04:50.802]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:04:50.802]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:04:50.803]    __dp=0x00000000
[19:04:50.803]    __ap=0x00000000
[19:04:50.803]    __traceout=0x00000001      (SWO Trace)
[19:04:50.803]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:04:50.803]    __FlashAddr=0x00000000
[19:04:50.804]    __FlashLen=0x00000000
[19:04:50.804]    __FlashArg=0x00000000
[19:04:50.804]    __FlashOp=0x00000000
[19:04:50.804]    __Result=0x00000000
[19:04:50.804]    
[19:04:50.804]    // User-defined
[19:04:50.805]    DbgMCU_CR=0x00000007
[19:04:50.805]    DbgMCU_APB1_Fz=0x00000000
[19:04:50.805]    DbgMCU_APB2_Fz=0x00000000
[19:04:50.805]    TraceClk_Pin=0x00040002
[19:04:50.805]    TraceD0_Pin=0x00040003
[19:04:50.805]    TraceD1_Pin=0x00040004
[19:04:50.806]    TraceD2_Pin=0x00040005
[19:04:50.806]    TraceD3_Pin=0x00040006
[19:04:50.806]  </debugvars>
[19:04:50.806]  
[19:04:50.806]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:04:50.806]    <block atomic="false" info="">
[19:04:50.807]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:04:50.807]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.807]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:04:50.808]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.808]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:04:50.809]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.809]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:04:50.809]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:04:50.809]    </block>
[19:04:50.810]  </sequence>
[19:04:50.810]  
[19:17:03.709]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:17:03.709]  
[19:17:03.709]  <debugvars>
[19:17:03.709]    // Pre-defined
[19:17:03.709]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:17:03.709]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:17:03.710]    __dp=0x00000000
[19:17:03.710]    __ap=0x00000000
[19:17:03.710]    __traceout=0x00000001      (SWO Trace)
[19:17:03.710]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:17:03.710]    __FlashAddr=0x00000000
[19:17:03.710]    __FlashLen=0x00000000
[19:17:03.710]    __FlashArg=0x00000000
[19:17:03.711]    __FlashOp=0x00000000
[19:17:03.711]    __Result=0x00000000
[19:17:03.711]    
[19:17:03.711]    // User-defined
[19:17:03.711]    DbgMCU_CR=0x00000007
[19:17:03.711]    DbgMCU_APB1_Fz=0x00000000
[19:17:03.711]    DbgMCU_APB2_Fz=0x00000000
[19:17:03.711]    TraceClk_Pin=0x00040002
[19:17:03.712]    TraceD0_Pin=0x00040003
[19:17:03.712]    TraceD1_Pin=0x00040004
[19:17:03.712]    TraceD2_Pin=0x00040005
[19:17:03.712]    TraceD3_Pin=0x00040006
[19:17:03.712]  </debugvars>
[19:17:03.712]  
[19:17:03.712]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:17:03.712]    <block atomic="false" info="">
[19:17:03.713]      Sequence("CheckID");
[19:17:03.713]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:17:03.713]          <block atomic="false" info="">
[19:17:03.713]            __var pidr1 = 0;
[19:17:03.713]              // -> [pidr1 <= 0x00000000]
[19:17:03.713]            __var pidr2 = 0;
[19:17:03.713]              // -> [pidr2 <= 0x00000000]
[19:17:03.714]            __var jep106id = 0;
[19:17:03.714]              // -> [jep106id <= 0x00000000]
[19:17:03.714]            __var ROMTableBase = 0;
[19:17:03.714]              // -> [ROMTableBase <= 0x00000000]
[19:17:03.714]            __ap = 0;      // AHB-AP
[19:17:03.714]              // -> [__ap <= 0x00000000]
[19:17:03.714]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:17:03.715]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.715]              // -> [ROMTableBase <= 0xE00FD000]
[19:17:03.715]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:17:03.716]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.716]              // -> [pidr1 <= 0x00000004]
[19:17:03.716]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:17:03.716]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.716]              // -> [pidr2 <= 0x0000001A]
[19:17:03.716]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:17:03.717]              // -> [jep106id <= 0x00000020]
[19:17:03.717]          </block>
[19:17:03.717]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:17:03.717]            // if-block "jep106id != 0x20"
[19:17:03.717]              // =>  FALSE
[19:17:03.717]            // skip if-block "jep106id != 0x20"
[19:17:03.717]          </control>
[19:17:03.718]        </sequence>
[19:17:03.718]    </block>
[19:17:03.718]  </sequence>
[19:17:03.718]  
[19:17:03.733]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:17:03.733]  
[19:17:03.733]  <debugvars>
[19:17:03.733]    // Pre-defined
[19:17:03.733]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:17:03.733]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:17:03.734]    __dp=0x00000000
[19:17:03.734]    __ap=0x00000000
[19:17:03.734]    __traceout=0x00000001      (SWO Trace)
[19:17:03.734]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:17:03.734]    __FlashAddr=0x00000000
[19:17:03.734]    __FlashLen=0x00000000
[19:17:03.734]    __FlashArg=0x00000000
[19:17:03.735]    __FlashOp=0x00000000
[19:17:03.735]    __Result=0x00000000
[19:17:03.735]    
[19:17:03.735]    // User-defined
[19:17:03.735]    DbgMCU_CR=0x00000007
[19:17:03.735]    DbgMCU_APB1_Fz=0x00000000
[19:17:03.735]    DbgMCU_APB2_Fz=0x00000000
[19:17:03.735]    TraceClk_Pin=0x00040002
[19:17:03.736]    TraceD0_Pin=0x00040003
[19:17:03.736]    TraceD1_Pin=0x00040004
[19:17:03.736]    TraceD2_Pin=0x00040005
[19:17:03.736]    TraceD3_Pin=0x00040006
[19:17:03.736]  </debugvars>
[19:17:03.736]  
[19:17:03.736]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:17:03.737]    <block atomic="false" info="">
[19:17:03.737]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:17:03.737]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.737]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:17:03.738]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.738]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:17:03.738]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.738]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:17:03.739]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:03.739]    </block>
[19:17:03.739]  </sequence>
[19:17:03.739]  
[19:22:04.970]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:22:04.970]  
[19:22:04.970]  <debugvars>
[19:22:04.971]    // Pre-defined
[19:22:04.971]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:22:04.971]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:22:04.971]    __dp=0x00000000
[19:22:04.972]    __ap=0x00000000
[19:22:04.972]    __traceout=0x00000001      (SWO Trace)
[19:22:04.972]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:22:04.972]    __FlashAddr=0x00000000
[19:22:04.972]    __FlashLen=0x00000000
[19:22:04.973]    __FlashArg=0x00000000
[19:22:04.973]    __FlashOp=0x00000000
[19:22:04.973]    __Result=0x00000000
[19:22:04.973]    
[19:22:04.973]    // User-defined
[19:22:04.973]    DbgMCU_CR=0x00000007
[19:22:04.974]    DbgMCU_APB1_Fz=0x00000000
[19:22:04.974]    DbgMCU_APB2_Fz=0x00000000
[19:22:04.974]    TraceClk_Pin=0x00040002
[19:22:04.974]    TraceD0_Pin=0x00040003
[19:22:04.974]    TraceD1_Pin=0x00040004
[19:22:04.974]    TraceD2_Pin=0x00040005
[19:22:04.975]    TraceD3_Pin=0x00040006
[19:22:04.975]  </debugvars>
[19:22:04.975]  
[19:22:04.975]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:22:04.975]    <block atomic="false" info="">
[19:22:04.976]      Sequence("CheckID");
[19:22:04.976]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:22:04.976]          <block atomic="false" info="">
[19:22:04.976]            __var pidr1 = 0;
[19:22:04.976]              // -> [pidr1 <= 0x00000000]
[19:22:04.977]            __var pidr2 = 0;
[19:22:04.977]              // -> [pidr2 <= 0x00000000]
[19:22:04.977]            __var jep106id = 0;
[19:22:04.977]              // -> [jep106id <= 0x00000000]
[19:22:04.977]            __var ROMTableBase = 0;
[19:22:04.977]              // -> [ROMTableBase <= 0x00000000]
[19:22:04.978]            __ap = 0;      // AHB-AP
[19:22:04.978]              // -> [__ap <= 0x00000000]
[19:22:04.978]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:22:04.978]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:22:04.979]              // -> [ROMTableBase <= 0xE00FD000]
[19:22:04.979]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:22:04.979]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:22:04.980]              // -> [pidr1 <= 0x00000004]
[19:22:04.980]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:22:04.980]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:22:04.980]              // -> [pidr2 <= 0x0000001A]
[19:22:04.981]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:22:04.981]              // -> [jep106id <= 0x00000020]
[19:22:04.981]          </block>
[19:22:04.981]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:22:04.981]            // if-block "jep106id != 0x20"
[19:22:04.981]              // =>  FALSE
[19:22:04.982]            // skip if-block "jep106id != 0x20"
[19:22:04.982]          </control>
[19:22:04.982]        </sequence>
[19:22:04.982]    </block>
[19:22:04.982]  </sequence>
[19:22:04.982]  
[19:22:04.997]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:22:04.997]  
[19:22:04.997]  <debugvars>
[19:22:04.997]    // Pre-defined
[19:22:04.998]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:22:04.998]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:22:04.998]    __dp=0x00000000
[19:22:04.998]    __ap=0x00000000
[19:22:04.998]    __traceout=0x00000001      (SWO Trace)
[19:22:04.999]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:22:04.999]    __FlashAddr=0x00000000
[19:22:04.999]    __FlashLen=0x00000000
[19:22:04.999]    __FlashArg=0x00000000
[19:22:04.999]    __FlashOp=0x00000000
[19:22:04.999]    __Result=0x00000000
[19:22:05.000]    
[19:22:05.000]    // User-defined
[19:22:05.000]    DbgMCU_CR=0x00000007
[19:22:05.000]    DbgMCU_APB1_Fz=0x00000000
[19:22:05.000]    DbgMCU_APB2_Fz=0x00000000
[19:22:05.000]    TraceClk_Pin=0x00040002
[19:22:05.000]    TraceD0_Pin=0x00040003
[19:22:05.001]    TraceD1_Pin=0x00040004
[19:22:05.001]    TraceD2_Pin=0x00040005
[19:22:05.001]    TraceD3_Pin=0x00040006
[19:22:05.001]  </debugvars>
[19:22:05.001]  
[19:22:05.001]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:22:05.002]    <block atomic="false" info="">
[19:22:05.002]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:22:05.003]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:05.003]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:22:05.003]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:05.004]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:22:05.004]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:05.004]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:22:05.005]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:05.005]    </block>
[19:22:05.005]  </sequence>
[19:22:05.005]  
[19:30:52.077]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:30:52.077]  
[19:30:52.077]  <debugvars>
[19:30:52.078]    // Pre-defined
[19:30:52.078]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:52.078]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:30:52.078]    __dp=0x00000000
[19:30:52.078]    __ap=0x00000000
[19:30:52.079]    __traceout=0x00000001      (SWO Trace)
[19:30:52.079]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:52.079]    __FlashAddr=0x00000000
[19:30:52.079]    __FlashLen=0x00000000
[19:30:52.080]    __FlashArg=0x00000000
[19:30:52.080]    __FlashOp=0x00000000
[19:30:52.080]    __Result=0x00000000
[19:30:52.080]    
[19:30:52.080]    // User-defined
[19:30:52.080]    DbgMCU_CR=0x00000007
[19:30:52.081]    DbgMCU_APB1_Fz=0x00000000
[19:30:52.081]    DbgMCU_APB2_Fz=0x00000000
[19:30:52.081]    TraceClk_Pin=0x00040002
[19:30:52.081]    TraceD0_Pin=0x00040003
[19:30:52.082]    TraceD1_Pin=0x00040004
[19:30:52.082]    TraceD2_Pin=0x00040005
[19:30:52.082]    TraceD3_Pin=0x00040006
[19:30:52.082]  </debugvars>
[19:30:52.082]  
[19:30:52.083]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:30:52.083]    <block atomic="false" info="">
[19:30:52.083]      Sequence("CheckID");
[19:30:52.083]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:30:52.083]          <block atomic="false" info="">
[19:30:52.084]            __var pidr1 = 0;
[19:30:52.084]              // -> [pidr1 <= 0x00000000]
[19:30:52.084]            __var pidr2 = 0;
[19:30:52.084]              // -> [pidr2 <= 0x00000000]
[19:30:52.084]            __var jep106id = 0;
[19:30:52.085]              // -> [jep106id <= 0x00000000]
[19:30:52.085]            __var ROMTableBase = 0;
[19:30:52.085]              // -> [ROMTableBase <= 0x00000000]
[19:30:52.085]            __ap = 0;      // AHB-AP
[19:30:52.085]              // -> [__ap <= 0x00000000]
[19:30:52.085]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:30:52.086]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.086]              // -> [ROMTableBase <= 0xE00FD000]
[19:30:52.086]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:30:52.087]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.087]              // -> [pidr1 <= 0x00000004]
[19:30:52.087]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:30:52.088]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.088]              // -> [pidr2 <= 0x0000001A]
[19:30:52.088]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:30:52.088]              // -> [jep106id <= 0x00000020]
[19:30:52.088]          </block>
[19:30:52.089]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:30:52.089]            // if-block "jep106id != 0x20"
[19:30:52.089]              // =>  FALSE
[19:30:52.089]            // skip if-block "jep106id != 0x20"
[19:30:52.089]          </control>
[19:30:52.089]        </sequence>
[19:30:52.090]    </block>
[19:30:52.090]  </sequence>
[19:30:52.090]  
[19:30:52.105]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:30:52.105]  
[19:30:52.105]  <debugvars>
[19:30:52.105]    // Pre-defined
[19:30:52.105]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:52.105]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:30:52.106]    __dp=0x00000000
[19:30:52.106]    __ap=0x00000000
[19:30:52.106]    __traceout=0x00000001      (SWO Trace)
[19:30:52.106]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:52.106]    __FlashAddr=0x00000000
[19:30:52.107]    __FlashLen=0x00000000
[19:30:52.107]    __FlashArg=0x00000000
[19:30:52.107]    __FlashOp=0x00000000
[19:30:52.107]    __Result=0x00000000
[19:30:52.107]    
[19:30:52.107]    // User-defined
[19:30:52.108]    DbgMCU_CR=0x00000007
[19:30:52.108]    DbgMCU_APB1_Fz=0x00000000
[19:30:52.108]    DbgMCU_APB2_Fz=0x00000000
[19:30:52.108]    TraceClk_Pin=0x00040002
[19:30:52.108]    TraceD0_Pin=0x00040003
[19:30:52.108]    TraceD1_Pin=0x00040004
[19:30:52.109]    TraceD2_Pin=0x00040005
[19:30:52.109]    TraceD3_Pin=0x00040006
[19:30:52.109]  </debugvars>
[19:30:52.109]  
[19:30:52.109]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:30:52.109]    <block atomic="false" info="">
[19:30:52.110]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:30:52.110]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.110]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:30:52.111]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.111]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:30:52.112]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.112]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:30:52.113]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:52.113]    </block>
[19:30:52.113]  </sequence>
[19:30:52.113]  
[19:32:14.820]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:32:14.820]  
[19:32:14.820]  <debugvars>
[19:32:14.821]    // Pre-defined
[19:32:14.821]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:32:14.821]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:32:14.821]    __dp=0x00000000
[19:32:14.821]    __ap=0x00000000
[19:32:14.822]    __traceout=0x00000001      (SWO Trace)
[19:32:14.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:32:14.822]    __FlashAddr=0x00000000
[19:32:14.822]    __FlashLen=0x00000000
[19:32:14.822]    __FlashArg=0x00000000
[19:32:14.822]    __FlashOp=0x00000000
[19:32:14.823]    __Result=0x00000000
[19:32:14.823]    
[19:32:14.823]    // User-defined
[19:32:14.823]    DbgMCU_CR=0x00000007
[19:32:14.823]    DbgMCU_APB1_Fz=0x00000000
[19:32:14.823]    DbgMCU_APB2_Fz=0x00000000
[19:32:14.824]    TraceClk_Pin=0x00040002
[19:32:14.824]    TraceD0_Pin=0x00040003
[19:32:14.824]    TraceD1_Pin=0x00040004
[19:32:14.824]    TraceD2_Pin=0x00040005
[19:32:14.824]    TraceD3_Pin=0x00040006
[19:32:14.825]  </debugvars>
[19:32:14.825]  
[19:32:14.825]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:32:14.825]    <block atomic="false" info="">
[19:32:14.825]      Sequence("CheckID");
[19:32:14.825]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:32:14.826]          <block atomic="false" info="">
[19:32:14.826]            __var pidr1 = 0;
[19:32:14.826]              // -> [pidr1 <= 0x00000000]
[19:32:14.826]            __var pidr2 = 0;
[19:32:14.826]              // -> [pidr2 <= 0x00000000]
[19:32:14.827]            __var jep106id = 0;
[19:32:14.827]              // -> [jep106id <= 0x00000000]
[19:32:14.827]            __var ROMTableBase = 0;
[19:32:14.827]              // -> [ROMTableBase <= 0x00000000]
[19:32:14.827]            __ap = 0;      // AHB-AP
[19:32:14.827]              // -> [__ap <= 0x00000000]
[19:32:14.828]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:32:14.828]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.828]              // -> [ROMTableBase <= 0xE00FD000]
[19:32:14.828]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:32:14.829]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.829]              // -> [pidr1 <= 0x00000004]
[19:32:14.829]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:32:14.830]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.830]              // -> [pidr2 <= 0x0000001A]
[19:32:14.830]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:32:14.830]              // -> [jep106id <= 0x00000020]
[19:32:14.830]          </block>
[19:32:14.830]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:32:14.831]            // if-block "jep106id != 0x20"
[19:32:14.831]              // =>  FALSE
[19:32:14.831]            // skip if-block "jep106id != 0x20"
[19:32:14.831]          </control>
[19:32:14.831]        </sequence>
[19:32:14.831]    </block>
[19:32:14.831]  </sequence>
[19:32:14.832]  
[19:32:14.846]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:32:14.846]  
[19:32:14.846]  <debugvars>
[19:32:14.846]    // Pre-defined
[19:32:14.846]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:32:14.846]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:32:14.847]    __dp=0x00000000
[19:32:14.847]    __ap=0x00000000
[19:32:14.847]    __traceout=0x00000001      (SWO Trace)
[19:32:14.847]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:32:14.847]    __FlashAddr=0x00000000
[19:32:14.848]    __FlashLen=0x00000000
[19:32:14.848]    __FlashArg=0x00000000
[19:32:14.848]    __FlashOp=0x00000000
[19:32:14.848]    __Result=0x00000000
[19:32:14.849]    
[19:32:14.849]    // User-defined
[19:32:14.849]    DbgMCU_CR=0x00000007
[19:32:14.849]    DbgMCU_APB1_Fz=0x00000000
[19:32:14.849]    DbgMCU_APB2_Fz=0x00000000
[19:32:14.849]    TraceClk_Pin=0x00040002
[19:32:14.850]    TraceD0_Pin=0x00040003
[19:32:14.850]    TraceD1_Pin=0x00040004
[19:32:14.850]    TraceD2_Pin=0x00040005
[19:32:14.850]    TraceD3_Pin=0x00040006
[19:32:14.850]  </debugvars>
[19:32:14.850]  
[19:32:14.851]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:32:14.851]    <block atomic="false" info="">
[19:32:14.851]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:32:14.851]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.852]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:32:14.852]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.853]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:32:14.853]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.853]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:32:14.854]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:32:14.854]    </block>
[19:32:14.854]  </sequence>
[19:32:14.854]  
[19:33:15.732]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:33:15.732]  
[19:33:15.733]  <debugvars>
[19:33:15.733]    // Pre-defined
[19:33:15.733]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:15.733]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:33:15.734]    __dp=0x00000000
[19:33:15.734]    __ap=0x00000000
[19:33:15.734]    __traceout=0x00000001      (SWO Trace)
[19:33:15.734]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:15.734]    __FlashAddr=0x00000000
[19:33:15.735]    __FlashLen=0x00000000
[19:33:15.735]    __FlashArg=0x00000000
[19:33:15.735]    __FlashOp=0x00000000
[19:33:15.735]    __Result=0x00000000
[19:33:15.736]    
[19:33:15.736]    // User-defined
[19:33:15.736]    DbgMCU_CR=0x00000007
[19:33:15.736]    DbgMCU_APB1_Fz=0x00000000
[19:33:15.736]    DbgMCU_APB2_Fz=0x00000000
[19:33:15.736]    TraceClk_Pin=0x00040002
[19:33:15.737]    TraceD0_Pin=0x00040003
[19:33:15.737]    TraceD1_Pin=0x00040004
[19:33:15.737]    TraceD2_Pin=0x00040005
[19:33:15.737]    TraceD3_Pin=0x00040006
[19:33:15.737]  </debugvars>
[19:33:15.738]  
[19:33:15.738]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:33:15.738]    <block atomic="false" info="">
[19:33:15.738]      Sequence("CheckID");
[19:33:15.738]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:33:15.738]          <block atomic="false" info="">
[19:33:15.739]            __var pidr1 = 0;
[19:33:15.739]              // -> [pidr1 <= 0x00000000]
[19:33:15.739]            __var pidr2 = 0;
[19:33:15.739]              // -> [pidr2 <= 0x00000000]
[19:33:15.739]            __var jep106id = 0;
[19:33:15.740]              // -> [jep106id <= 0x00000000]
[19:33:15.740]            __var ROMTableBase = 0;
[19:33:15.740]              // -> [ROMTableBase <= 0x00000000]
[19:33:15.740]            __ap = 0;      // AHB-AP
[19:33:15.740]              // -> [__ap <= 0x00000000]
[19:33:15.740]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:33:15.741]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.741]              // -> [ROMTableBase <= 0xE00FD000]
[19:33:15.741]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:33:15.742]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.742]              // -> [pidr1 <= 0x00000004]
[19:33:15.742]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:33:15.743]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.743]              // -> [pidr2 <= 0x0000001A]
[19:33:15.743]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:33:15.743]              // -> [jep106id <= 0x00000020]
[19:33:15.744]          </block>
[19:33:15.744]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:33:15.744]            // if-block "jep106id != 0x20"
[19:33:15.744]              // =>  FALSE
[19:33:15.744]            // skip if-block "jep106id != 0x20"
[19:33:15.744]          </control>
[19:33:15.745]        </sequence>
[19:33:15.745]    </block>
[19:33:15.745]  </sequence>
[19:33:15.745]  
[19:33:15.760]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:33:15.760]  
[19:33:15.760]  <debugvars>
[19:33:15.761]    // Pre-defined
[19:33:15.761]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:15.761]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:33:15.761]    __dp=0x00000000
[19:33:15.761]    __ap=0x00000000
[19:33:15.761]    __traceout=0x00000001      (SWO Trace)
[19:33:15.762]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:15.762]    __FlashAddr=0x00000000
[19:33:15.762]    __FlashLen=0x00000000
[19:33:15.762]    __FlashArg=0x00000000
[19:33:15.762]    __FlashOp=0x00000000
[19:33:15.762]    __Result=0x00000000
[19:33:15.763]    
[19:33:15.763]    // User-defined
[19:33:15.763]    DbgMCU_CR=0x00000007
[19:33:15.763]    DbgMCU_APB1_Fz=0x00000000
[19:33:15.763]    DbgMCU_APB2_Fz=0x00000000
[19:33:15.763]    TraceClk_Pin=0x00040002
[19:33:15.764]    TraceD0_Pin=0x00040003
[19:33:15.764]    TraceD1_Pin=0x00040004
[19:33:15.764]    TraceD2_Pin=0x00040005
[19:33:15.764]    TraceD3_Pin=0x00040006
[19:33:15.764]  </debugvars>
[19:33:15.764]  
[19:33:15.765]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:33:15.765]    <block atomic="false" info="">
[19:33:15.765]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:33:15.765]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.766]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:33:15.766]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.766]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:33:15.767]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.767]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:33:15.767]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.768]    </block>
[19:33:15.768]  </sequence>
[19:33:15.768]  
[19:33:15.785]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:33:15.785]  
[19:33:15.785]  <debugvars>
[19:33:15.785]    // Pre-defined
[19:33:15.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:15.785]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:33:15.786]    __dp=0x00000000
[19:33:15.786]    __ap=0x00000000
[19:33:15.786]    __traceout=0x00000001      (SWO Trace)
[19:33:15.786]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:15.787]    __FlashAddr=0x00000000
[19:33:15.787]    __FlashLen=0x00000000
[19:33:15.787]    __FlashArg=0x00000000
[19:33:15.787]    __FlashOp=0x00000000
[19:33:15.787]    __Result=0x00000000
[19:33:15.787]    
[19:33:15.787]    // User-defined
[19:33:15.787]    DbgMCU_CR=0x00000007
[19:33:15.788]    DbgMCU_APB1_Fz=0x00000000
[19:33:15.788]    DbgMCU_APB2_Fz=0x00000000
[19:33:15.788]    TraceClk_Pin=0x00040002
[19:33:15.788]    TraceD0_Pin=0x00040003
[19:33:15.788]    TraceD1_Pin=0x00040004
[19:33:15.789]    TraceD2_Pin=0x00040005
[19:33:15.789]    TraceD3_Pin=0x00040006
[19:33:15.789]  </debugvars>
[19:33:15.789]  
[19:33:15.789]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:15.789]    <block atomic="false" info="">
[19:33:15.789]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:15.790]        // -> [traceSWO <= 0x00000001]
[19:33:15.790]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:15.790]        // -> [traceTPIU <= 0x00000000]
[19:33:15.790]    </block>
[19:33:15.790]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:15.790]      // if-block "traceSWO"
[19:33:15.790]        // =>  TRUE
[19:33:15.791]      <block atomic="false" info="">
[19:33:15.791]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:15.791]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:15.791]            <block atomic="false" info="">
[19:33:15.791]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:15.792]                // -> [dbgmcu_val <= 0x00000000]
[19:33:15.792]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:15.792]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:15.792]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:15.792]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.792]                // -> [dbgmcu_val <= 0x00000007]
[19:33:15.793]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:15.793]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:15.793]              Sequence("ConfigureTraceSWOPin");
[19:33:15.793]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:15.793]                  <block atomic="false" info="">
[19:33:15.793]                    __var pin     = 0;
[19:33:15.794]                      // -> [pin <= 0x00000000]
[19:33:15.794]                    __var port    = 0;
[19:33:15.794]                      // -> [port <= 0x00000000]
[19:33:15.794]                    __var portAdr = 0;
[19:33:15.794]                      // -> [portAdr <= 0x00000000]
[19:33:15.794]                    __var pos     = 0;
[19:33:15.795]                      // -> [pos <= 0x00000000]
[19:33:15.795]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:15.795]                      // -> [SWO_Pin <= 0x00010003]
[19:33:15.795]                  </block>
[19:33:15.795]                  <block atomic="false" info="configure SWO">
[19:33:15.795]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:15.795]                      // -> [pin <= 0x00000003]
[19:33:15.795]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:15.796]                      // -> [port <= 0x00000001]
[19:33:15.796]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:15.796]                      // -> [portAdr <= 0x40020400]
[19:33:15.796]                    pos = pin * 2;
[19:33:15.796]                      // -> [pos <= 0x00000006]
[19:33:15.796]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:15.797]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.797]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.798]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:15.798]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.799]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.799]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:15.799]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.799]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.800]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:15.800]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.800]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.800]                  </block>
[19:33:15.800]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:15.800]                    // if-block "pin <  8"
[19:33:15.800]                      // =>  TRUE
[19:33:15.800]                    <block atomic="false" info="">
[19:33:15.800]                      pos = ((pin    ) & 7) * 4;
[19:33:15.801]                        // -> [pos <= 0x0000000C]
[19:33:15.801]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:15.801]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.802]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.802]                    </block>
[19:33:15.802]                    // end if-block "pin <  8"
[19:33:15.802]                  </control>
[19:33:15.802]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:15.802]                    // if-block "pin >= 8"
[19:33:15.802]                      // =>  FALSE
[19:33:15.803]                    // skip if-block "pin >= 8"
[19:33:15.803]                  </control>
[19:33:15.803]                </sequence>
[19:33:15.803]            </block>
[19:33:15.803]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:15.803]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:15.804]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.804]            </block>
[19:33:15.804]          </sequence>
[19:33:15.804]      </block>
[19:33:15.804]      // end if-block "traceSWO"
[19:33:15.804]    </control>
[19:33:15.804]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:15.804]      // if-block "traceTPIU"
[19:33:15.805]        // =>  FALSE
[19:33:15.805]      // skip if-block "traceTPIU"
[19:33:15.805]    </control>
[19:33:15.805]  </sequence>
[19:33:15.805]  
[19:33:15.809]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:33:15.809]  
[19:33:15.809]  <debugvars>
[19:33:15.809]    // Pre-defined
[19:33:15.809]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:15.810]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:33:15.810]    __dp=0x00000000
[19:33:15.810]    __ap=0x00000000
[19:33:15.810]    __traceout=0x00000001      (SWO Trace)
[19:33:15.810]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:15.810]    __FlashAddr=0x00000000
[19:33:15.811]    __FlashLen=0x00000000
[19:33:15.811]    __FlashArg=0x00000000
[19:33:15.811]    __FlashOp=0x00000000
[19:33:15.811]    __Result=0x00000000
[19:33:15.811]    
[19:33:15.811]    // User-defined
[19:33:15.811]    DbgMCU_CR=0x00000007
[19:33:15.812]    DbgMCU_APB1_Fz=0x00000000
[19:33:15.812]    DbgMCU_APB2_Fz=0x00000000
[19:33:15.812]    TraceClk_Pin=0x00040002
[19:33:15.812]    TraceD0_Pin=0x00040003
[19:33:15.813]    TraceD1_Pin=0x00040004
[19:33:15.813]    TraceD2_Pin=0x00040005
[19:33:15.813]    TraceD3_Pin=0x00040006
[19:33:15.813]  </debugvars>
[19:33:15.813]  
[19:33:15.813]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:15.813]    <block atomic="false" info="">
[19:33:15.814]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:15.814]        // -> [traceSWO <= 0x00000001]
[19:33:15.814]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:15.814]        // -> [traceTPIU <= 0x00000000]
[19:33:15.814]    </block>
[19:33:15.814]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:15.814]      // if-block "traceSWO"
[19:33:15.815]        // =>  TRUE
[19:33:15.815]      <block atomic="false" info="">
[19:33:15.815]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:15.815]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:15.815]            <block atomic="false" info="">
[19:33:15.815]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:15.815]                // -> [dbgmcu_val <= 0x00000000]
[19:33:15.816]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:15.816]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:15.816]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:15.816]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.816]                // -> [dbgmcu_val <= 0x00000007]
[19:33:15.816]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:15.816]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:15.817]              Sequence("ConfigureTraceSWOPin");
[19:33:15.817]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:15.817]                  <block atomic="false" info="">
[19:33:15.817]                    __var pin     = 0;
[19:33:15.817]                      // -> [pin <= 0x00000000]
[19:33:15.817]                    __var port    = 0;
[19:33:15.817]                      // -> [port <= 0x00000000]
[19:33:15.818]                    __var portAdr = 0;
[19:33:15.818]                      // -> [portAdr <= 0x00000000]
[19:33:15.818]                    __var pos     = 0;
[19:33:15.818]                      // -> [pos <= 0x00000000]
[19:33:15.818]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:15.818]                      // -> [SWO_Pin <= 0x00010003]
[19:33:15.818]                  </block>
[19:33:15.818]                  <block atomic="false" info="configure SWO">
[19:33:15.819]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:15.819]                      // -> [pin <= 0x00000003]
[19:33:15.819]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:15.819]                      // -> [port <= 0x00000001]
[19:33:15.819]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:15.819]                      // -> [portAdr <= 0x40020400]
[19:33:15.819]                    pos = pin * 2;
[19:33:15.820]                      // -> [pos <= 0x00000006]
[19:33:15.820]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:15.820]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.820]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.821]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:15.821]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.821]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.822]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:15.822]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.822]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.823]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:15.823]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.823]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.824]                  </block>
[19:33:15.824]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:15.824]                    // if-block "pin <  8"
[19:33:15.824]                      // =>  TRUE
[19:33:15.824]                    <block atomic="false" info="">
[19:33:15.824]                      pos = ((pin    ) & 7) * 4;
[19:33:15.824]                        // -> [pos <= 0x0000000C]
[19:33:15.824]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:15.825]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.825]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.825]                    </block>
[19:33:15.825]                    // end if-block "pin <  8"
[19:33:15.825]                  </control>
[19:33:15.826]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:15.826]                    // if-block "pin >= 8"
[19:33:15.826]                      // =>  FALSE
[19:33:15.826]                    // skip if-block "pin >= 8"
[19:33:15.826]                  </control>
[19:33:15.826]                </sequence>
[19:33:15.826]            </block>
[19:33:15.826]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:15.827]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:15.827]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:15.827]            </block>
[19:33:15.827]          </sequence>
[19:33:15.827]      </block>
[19:33:15.827]      // end if-block "traceSWO"
[19:33:15.828]    </control>
[19:33:15.828]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:15.828]      // if-block "traceTPIU"
[19:33:15.828]        // =>  FALSE
[19:33:15.828]      // skip if-block "traceTPIU"
[19:33:15.828]    </control>
[19:33:15.828]  </sequence>
[19:33:15.828]  
[19:33:16.044]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:33:16.044]  
[19:33:16.044]  <debugvars>
[19:33:16.044]    // Pre-defined
[19:33:16.044]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:16.044]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:33:16.045]    __dp=0x00000000
[19:33:16.045]    __ap=0x00000000
[19:33:16.045]    __traceout=0x00000001      (SWO Trace)
[19:33:16.045]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:16.045]    __FlashAddr=0x00000000
[19:33:16.045]    __FlashLen=0x00000000
[19:33:16.046]    __FlashArg=0x00000000
[19:33:16.046]    __FlashOp=0x00000000
[19:33:16.046]    __Result=0x00000000
[19:33:16.046]    
[19:33:16.046]    // User-defined
[19:33:16.046]    DbgMCU_CR=0x00000007
[19:33:16.047]    DbgMCU_APB1_Fz=0x00000000
[19:33:16.047]    DbgMCU_APB2_Fz=0x00000000
[19:33:16.047]    TraceClk_Pin=0x00040002
[19:33:16.047]    TraceD0_Pin=0x00040003
[19:33:16.047]    TraceD1_Pin=0x00040004
[19:33:16.047]    TraceD2_Pin=0x00040005
[19:33:16.048]    TraceD3_Pin=0x00040006
[19:33:16.048]  </debugvars>
[19:33:16.048]  
[19:33:16.048]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:16.048]    <block atomic="false" info="">
[19:33:16.049]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:16.049]        // -> [traceSWO <= 0x00000001]
[19:33:16.049]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:16.049]        // -> [traceTPIU <= 0x00000000]
[19:33:16.049]    </block>
[19:33:16.049]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:16.050]      // if-block "traceSWO"
[19:33:16.050]        // =>  TRUE
[19:33:16.050]      <block atomic="false" info="">
[19:33:16.050]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:16.050]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:16.050]            <block atomic="false" info="">
[19:33:16.051]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:16.051]                // -> [dbgmcu_val <= 0x00000000]
[19:33:16.051]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:16.051]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:16.051]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:16.052]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.052]                // -> [dbgmcu_val <= 0x00000007]
[19:33:16.052]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:16.052]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:16.053]              Sequence("ConfigureTraceSWOPin");
[19:33:16.053]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:16.053]                  <block atomic="false" info="">
[19:33:16.053]                    __var pin     = 0;
[19:33:16.053]                      // -> [pin <= 0x00000000]
[19:33:16.053]                    __var port    = 0;
[19:33:16.054]                      // -> [port <= 0x00000000]
[19:33:16.054]                    __var portAdr = 0;
[19:33:16.054]                      // -> [portAdr <= 0x00000000]
[19:33:16.054]                    __var pos     = 0;
[19:33:16.054]                      // -> [pos <= 0x00000000]
[19:33:16.054]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:16.054]                      // -> [SWO_Pin <= 0x00010003]
[19:33:16.055]                  </block>
[19:33:16.055]                  <block atomic="false" info="configure SWO">
[19:33:16.055]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:16.055]                      // -> [pin <= 0x00000003]
[19:33:16.055]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:16.055]                      // -> [port <= 0x00000001]
[19:33:16.055]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:16.055]                      // -> [portAdr <= 0x40020400]
[19:33:16.056]                    pos = pin * 2;
[19:33:16.056]                      // -> [pos <= 0x00000006]
[19:33:16.056]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:16.056]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.057]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.057]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:16.057]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.058]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.058]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:16.058]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.059]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.059]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:16.059]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.060]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.060]                  </block>
[19:33:16.060]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:16.060]                    // if-block "pin <  8"
[19:33:16.060]                      // =>  TRUE
[19:33:16.060]                    <block atomic="false" info="">
[19:33:16.061]                      pos = ((pin    ) & 7) * 4;
[19:33:16.061]                        // -> [pos <= 0x0000000C]
[19:33:16.061]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:16.062]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.062]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.062]                    </block>
[19:33:16.062]                    // end if-block "pin <  8"
[19:33:16.063]                  </control>
[19:33:16.063]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:16.063]                    // if-block "pin >= 8"
[19:33:16.063]                      // =>  FALSE
[19:33:16.063]                    // skip if-block "pin >= 8"
[19:33:16.063]                  </control>
[19:33:16.064]                </sequence>
[19:33:16.064]            </block>
[19:33:16.064]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:16.064]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:16.064]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:16.065]            </block>
[19:33:16.065]          </sequence>
[19:33:16.065]      </block>
[19:33:16.065]      // end if-block "traceSWO"
[19:33:16.065]    </control>
[19:33:16.066]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:16.066]      // if-block "traceTPIU"
[19:33:16.066]        // =>  FALSE
[19:33:16.066]      // skip if-block "traceTPIU"
[19:33:16.066]    </control>
[19:33:16.066]  </sequence>
[19:33:16.066]  
[19:33:47.573]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:33:47.573]  
[19:33:47.574]  <debugvars>
[19:33:47.574]    // Pre-defined
[19:33:47.574]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:47.574]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:33:47.574]    __dp=0x00000000
[19:33:47.574]    __ap=0x00000000
[19:33:47.574]    __traceout=0x00000001      (SWO Trace)
[19:33:47.574]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:47.574]    __FlashAddr=0x00000000
[19:33:47.574]    __FlashLen=0x00000000
[19:33:47.575]    __FlashArg=0x00000000
[19:33:47.575]    __FlashOp=0x00000000
[19:33:47.575]    __Result=0x00000000
[19:33:47.575]    
[19:33:47.575]    // User-defined
[19:33:47.575]    DbgMCU_CR=0x00000007
[19:33:47.576]    DbgMCU_APB1_Fz=0x00000000
[19:33:47.576]    DbgMCU_APB2_Fz=0x00000000
[19:33:47.576]    TraceClk_Pin=0x00040002
[19:33:47.576]    TraceD0_Pin=0x00040003
[19:33:47.576]    TraceD1_Pin=0x00040004
[19:33:47.577]    TraceD2_Pin=0x00040005
[19:33:47.577]    TraceD3_Pin=0x00040006
[19:33:47.577]  </debugvars>
[19:33:47.577]  
[19:33:47.577]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:47.578]    <block atomic="false" info="">
[19:33:47.578]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:47.578]        // -> [traceSWO <= 0x00000001]
[19:33:47.578]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:47.578]        // -> [traceTPIU <= 0x00000000]
[19:33:47.579]    </block>
[19:33:47.579]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:47.579]      // if-block "traceSWO"
[19:33:47.579]        // =>  TRUE
[19:33:47.579]      <block atomic="false" info="">
[19:33:47.579]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:47.580]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:47.580]            <block atomic="false" info="">
[19:33:47.580]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:47.580]                // -> [dbgmcu_val <= 0x00000000]
[19:33:47.580]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:47.580]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:47.581]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:47.581]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.581]                // -> [dbgmcu_val <= 0x00000007]
[19:33:47.582]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:47.582]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:47.582]              Sequence("ConfigureTraceSWOPin");
[19:33:47.582]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:47.582]                  <block atomic="false" info="">
[19:33:47.582]                    __var pin     = 0;
[19:33:47.583]                      // -> [pin <= 0x00000000]
[19:33:47.583]                    __var port    = 0;
[19:33:47.583]                      // -> [port <= 0x00000000]
[19:33:47.583]                    __var portAdr = 0;
[19:33:47.583]                      // -> [portAdr <= 0x00000000]
[19:33:47.584]                    __var pos     = 0;
[19:33:47.584]                      // -> [pos <= 0x00000000]
[19:33:47.584]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:47.584]                      // -> [SWO_Pin <= 0x00010003]
[19:33:47.584]                  </block>
[19:33:47.584]                  <block atomic="false" info="configure SWO">
[19:33:47.585]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:47.585]                      // -> [pin <= 0x00000003]
[19:33:47.585]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:47.585]                      // -> [port <= 0x00000001]
[19:33:47.585]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:47.585]                      // -> [portAdr <= 0x40020400]
[19:33:47.586]                    pos = pin * 2;
[19:33:47.586]                      // -> [pos <= 0x00000006]
[19:33:47.586]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:47.586]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.587]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.587]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:47.588]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.588]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.589]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:47.589]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.590]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.590]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:47.590]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.591]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.591]                  </block>
[19:33:47.591]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:47.591]                    // if-block "pin <  8"
[19:33:47.591]                      // =>  TRUE
[19:33:47.591]                    <block atomic="false" info="">
[19:33:47.591]                      pos = ((pin    ) & 7) * 4;
[19:33:47.592]                        // -> [pos <= 0x0000000C]
[19:33:47.592]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:47.592]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.593]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.593]                    </block>
[19:33:47.593]                    // end if-block "pin <  8"
[19:33:47.593]                  </control>
[19:33:47.593]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:47.594]                    // if-block "pin >= 8"
[19:33:47.594]                      // =>  FALSE
[19:33:47.594]                    // skip if-block "pin >= 8"
[19:33:47.594]                  </control>
[19:33:47.594]                </sequence>
[19:33:47.594]            </block>
[19:33:47.594]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:47.595]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:47.595]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:47.595]            </block>
[19:33:47.596]          </sequence>
[19:33:47.596]      </block>
[19:33:47.596]      // end if-block "traceSWO"
[19:33:47.596]    </control>
[19:33:47.596]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:47.596]      // if-block "traceTPIU"
[19:33:47.596]        // =>  FALSE
[19:33:47.597]      // skip if-block "traceTPIU"
[19:33:47.597]    </control>
[19:33:47.597]  </sequence>
[19:33:47.597]  
[19:34:18.516]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:34:18.516]  
[19:34:18.516]  <debugvars>
[19:34:18.516]    // Pre-defined
[19:34:18.517]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:34:18.517]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:34:18.517]    __dp=0x00000000
[19:34:18.517]    __ap=0x00000000
[19:34:18.517]    __traceout=0x00000001      (SWO Trace)
[19:34:18.518]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:34:18.518]    __FlashAddr=0x00000000
[19:34:18.518]    __FlashLen=0x00000000
[19:34:18.518]    __FlashArg=0x00000000
[19:34:18.518]    __FlashOp=0x00000000
[19:34:18.518]    __Result=0x00000000
[19:34:18.519]    
[19:34:18.519]    // User-defined
[19:34:18.519]    DbgMCU_CR=0x00000007
[19:34:18.519]    DbgMCU_APB1_Fz=0x00000000
[19:34:18.519]    DbgMCU_APB2_Fz=0x00000000
[19:34:18.519]    TraceClk_Pin=0x00040002
[19:34:18.519]    TraceD0_Pin=0x00040003
[19:34:18.520]    TraceD1_Pin=0x00040004
[19:34:18.520]    TraceD2_Pin=0x00040005
[19:34:18.520]    TraceD3_Pin=0x00040006
[19:34:18.520]  </debugvars>
[19:34:18.520]  
[19:34:18.520]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:34:18.520]    <block atomic="false" info="">
[19:34:18.521]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:34:18.521]        // -> [traceSWO <= 0x00000001]
[19:34:18.521]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:34:18.521]        // -> [traceTPIU <= 0x00000000]
[19:34:18.521]    </block>
[19:34:18.522]    <control if="traceSWO" while="" timeout="0" info="">
[19:34:18.522]      // if-block "traceSWO"
[19:34:18.522]        // =>  TRUE
[19:34:18.522]      <block atomic="false" info="">
[19:34:18.522]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:34:18.522]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:34:18.523]            <block atomic="false" info="">
[19:34:18.523]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:34:18.523]                // -> [dbgmcu_val <= 0x00000000]
[19:34:18.523]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:34:18.523]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:34:18.523]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:34:18.524]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.524]                // -> [dbgmcu_val <= 0x00000007]
[19:34:18.524]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:34:18.524]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:34:18.525]              Sequence("ConfigureTraceSWOPin");
[19:34:18.525]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:34:18.525]                  <block atomic="false" info="">
[19:34:18.525]                    __var pin     = 0;
[19:34:18.525]                      // -> [pin <= 0x00000000]
[19:34:18.525]                    __var port    = 0;
[19:34:18.525]                      // -> [port <= 0x00000000]
[19:34:18.526]                    __var portAdr = 0;
[19:34:18.526]                      // -> [portAdr <= 0x00000000]
[19:34:18.526]                    __var pos     = 0;
[19:34:18.526]                      // -> [pos <= 0x00000000]
[19:34:18.526]                    __var SWO_Pin = 0x00010003;          // PB3
[19:34:18.526]                      // -> [SWO_Pin <= 0x00010003]
[19:34:18.527]                  </block>
[19:34:18.527]                  <block atomic="false" info="configure SWO">
[19:34:18.527]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:34:18.527]                      // -> [pin <= 0x00000003]
[19:34:18.527]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:34:18.527]                      // -> [port <= 0x00000001]
[19:34:18.528]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:34:18.528]                      // -> [portAdr <= 0x40020400]
[19:34:18.528]                    pos = pin * 2;
[19:34:18.528]                      // -> [pos <= 0x00000006]
[19:34:18.528]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:34:18.528]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.529]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.529]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:34:18.530]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.530]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.531]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:34:18.531]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.531]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.531]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:34:18.532]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.532]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.532]                  </block>
[19:34:18.533]                  <control if="pin <  8" while="" timeout="0" info="">
[19:34:18.533]                    // if-block "pin <  8"
[19:34:18.533]                      // =>  TRUE
[19:34:18.533]                    <block atomic="false" info="">
[19:34:18.533]                      pos = ((pin    ) & 7) * 4;
[19:34:18.533]                        // -> [pos <= 0x0000000C]
[19:34:18.533]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:34:18.534]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.534]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.534]                    </block>
[19:34:18.534]                    // end if-block "pin <  8"
[19:34:18.535]                  </control>
[19:34:18.535]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:34:18.535]                    // if-block "pin >= 8"
[19:34:18.535]                      // =>  FALSE
[19:34:18.535]                    // skip if-block "pin >= 8"
[19:34:18.535]                  </control>
[19:34:18.535]                </sequence>
[19:34:18.535]            </block>
[19:34:18.536]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:34:18.536]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:34:18.536]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:18.536]            </block>
[19:34:18.537]          </sequence>
[19:34:18.537]      </block>
[19:34:18.537]      // end if-block "traceSWO"
[19:34:18.537]    </control>
[19:34:18.537]    <control if="traceTPIU" while="" timeout="0" info="">
[19:34:18.537]      // if-block "traceTPIU"
[19:34:18.537]        // =>  FALSE
[19:34:18.537]      // skip if-block "traceTPIU"
[19:34:18.537]    </control>
[19:34:18.538]  </sequence>
[19:34:18.538]  
[19:34:46.483]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:34:46.483]  
[19:34:46.483]  <debugvars>
[19:34:46.483]    // Pre-defined
[19:34:46.484]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:34:46.484]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:34:46.484]    __dp=0x00000000
[19:34:46.484]    __ap=0x00000000
[19:34:46.484]    __traceout=0x00000001      (SWO Trace)
[19:34:46.485]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:34:46.485]    __FlashAddr=0x00000000
[19:34:46.485]    __FlashLen=0x00000000
[19:34:46.485]    __FlashArg=0x00000000
[19:34:46.486]    __FlashOp=0x00000000
[19:34:46.486]    __Result=0x00000000
[19:34:46.486]    
[19:34:46.486]    // User-defined
[19:34:46.486]    DbgMCU_CR=0x00000007
[19:34:46.486]    DbgMCU_APB1_Fz=0x00000000
[19:34:46.487]    DbgMCU_APB2_Fz=0x00000000
[19:34:46.487]    TraceClk_Pin=0x00040002
[19:34:46.487]    TraceD0_Pin=0x00040003
[19:34:46.487]    TraceD1_Pin=0x00040004
[19:34:46.487]    TraceD2_Pin=0x00040005
[19:34:46.488]    TraceD3_Pin=0x00040006
[19:34:46.488]  </debugvars>
[19:34:46.488]  
[19:34:46.488]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:34:46.488]    <block atomic="false" info="">
[19:34:46.488]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:34:46.489]        // -> [traceSWO <= 0x00000001]
[19:34:46.489]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:34:46.489]        // -> [traceTPIU <= 0x00000000]
[19:34:46.489]    </block>
[19:34:46.489]    <control if="traceSWO" while="" timeout="0" info="">
[19:34:46.490]      // if-block "traceSWO"
[19:34:46.490]        // =>  TRUE
[19:34:46.490]      <block atomic="false" info="">
[19:34:46.490]        Sequence("DisableTraceSWO");
[19:34:46.491]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:34:46.491]            <block atomic="false" info="">
[19:34:46.491]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:34:46.491]                // -> [dbgmcu_val <= 0x00000000]
[19:34:46.491]            </block>
[19:34:46.492]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:34:46.492]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:34:46.492]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:34:46.493]                // -> [dbgmcu_val <= 0x00000007]
[19:34:46.493]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:34:46.493]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:46.493]            </block>
[19:34:46.494]          </sequence>
[19:34:46.494]      </block>
[19:34:46.494]      // end if-block "traceSWO"
[19:34:46.494]    </control>
[19:34:46.494]    <control if="traceTPIU" while="" timeout="0" info="">
[19:34:46.494]      // if-block "traceTPIU"
[19:34:46.494]        // =>  FALSE
[19:34:46.495]      // skip if-block "traceTPIU"
[19:34:46.495]    </control>
[19:34:46.495]  </sequence>
[19:34:46.495]  
[19:35:03.578]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:35:03.578]  
[19:35:03.579]  <debugvars>
[19:35:03.579]    // Pre-defined
[19:35:03.579]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:35:03.579]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:35:03.579]    __dp=0x00000000
[19:35:03.579]    __ap=0x00000000
[19:35:03.579]    __traceout=0x00000001      (SWO Trace)
[19:35:03.579]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:35:03.580]    __FlashAddr=0x00000000
[19:35:03.580]    __FlashLen=0x00000000
[19:35:03.580]    __FlashArg=0x00000000
[19:35:03.580]    __FlashOp=0x00000000
[19:35:03.580]    __Result=0x00000000
[19:35:03.580]    
[19:35:03.580]    // User-defined
[19:35:03.580]    DbgMCU_CR=0x00000007
[19:35:03.581]    DbgMCU_APB1_Fz=0x00000000
[19:35:03.581]    DbgMCU_APB2_Fz=0x00000000
[19:35:03.581]    TraceClk_Pin=0x00040002
[19:35:03.581]    TraceD0_Pin=0x00040003
[19:35:03.581]    TraceD1_Pin=0x00040004
[19:35:03.581]    TraceD2_Pin=0x00040005
[19:35:03.581]    TraceD3_Pin=0x00040006
[19:35:03.581]  </debugvars>
[19:35:03.582]  
[19:35:03.582]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:35:03.582]    <block atomic="false" info="">
[19:35:03.582]      Sequence("CheckID");
[19:35:03.582]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:35:03.582]          <block atomic="false" info="">
[19:35:03.582]            __var pidr1 = 0;
[19:35:03.583]              // -> [pidr1 <= 0x00000000]
[19:35:03.583]            __var pidr2 = 0;
[19:35:03.583]              // -> [pidr2 <= 0x00000000]
[19:35:03.583]            __var jep106id = 0;
[19:35:03.583]              // -> [jep106id <= 0x00000000]
[19:35:03.583]            __var ROMTableBase = 0;
[19:35:03.583]              // -> [ROMTableBase <= 0x00000000]
[19:35:03.583]            __ap = 0;      // AHB-AP
[19:35:03.584]              // -> [__ap <= 0x00000000]
[19:35:03.584]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:35:03.584]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.584]              // -> [ROMTableBase <= 0xE00FD000]
[19:35:03.584]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:35:03.585]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.585]              // -> [pidr1 <= 0x00000004]
[19:35:03.585]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:35:03.586]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.586]              // -> [pidr2 <= 0x0000001A]
[19:35:03.586]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:35:03.586]              // -> [jep106id <= 0x00000020]
[19:35:03.586]          </block>
[19:35:03.586]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:35:03.586]            // if-block "jep106id != 0x20"
[19:35:03.586]              // =>  FALSE
[19:35:03.586]            // skip if-block "jep106id != 0x20"
[19:35:03.587]          </control>
[19:35:03.587]        </sequence>
[19:35:03.587]    </block>
[19:35:03.587]  </sequence>
[19:35:03.587]  
[19:35:03.602]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:35:03.602]  
[19:35:03.602]  <debugvars>
[19:35:03.602]    // Pre-defined
[19:35:03.602]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:35:03.602]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:35:03.602]    __dp=0x00000000
[19:35:03.602]    __ap=0x00000000
[19:35:03.603]    __traceout=0x00000001      (SWO Trace)
[19:35:03.603]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:35:03.603]    __FlashAddr=0x00000000
[19:35:03.603]    __FlashLen=0x00000000
[19:35:03.603]    __FlashArg=0x00000000
[19:35:03.603]    __FlashOp=0x00000000
[19:35:03.603]    __Result=0x00000000
[19:35:03.603]    
[19:35:03.603]    // User-defined
[19:35:03.604]    DbgMCU_CR=0x00000007
[19:35:03.604]    DbgMCU_APB1_Fz=0x00000000
[19:35:03.604]    DbgMCU_APB2_Fz=0x00000000
[19:35:03.604]    TraceClk_Pin=0x00040002
[19:35:03.604]    TraceD0_Pin=0x00040003
[19:35:03.604]    TraceD1_Pin=0x00040004
[19:35:03.604]    TraceD2_Pin=0x00040005
[19:35:03.604]    TraceD3_Pin=0x00040006
[19:35:03.605]  </debugvars>
[19:35:03.605]  
[19:35:03.605]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:35:03.605]    <block atomic="false" info="">
[19:35:03.605]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:35:03.606]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.606]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:35:03.606]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.606]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:35:03.607]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.607]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:35:03.607]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:35:03.608]    </block>
[19:35:03.608]  </sequence>
[19:35:03.608]  
[19:36:15.339]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:36:15.339]  
[19:36:15.339]  <debugvars>
[19:36:15.339]    // Pre-defined
[19:36:15.340]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:36:15.340]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:36:15.340]    __dp=0x00000000
[19:36:15.340]    __ap=0x00000000
[19:36:15.340]    __traceout=0x00000001      (SWO Trace)
[19:36:15.340]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:36:15.341]    __FlashAddr=0x00000000
[19:36:15.341]    __FlashLen=0x00000000
[19:36:15.341]    __FlashArg=0x00000000
[19:36:15.341]    __FlashOp=0x00000000
[19:36:15.341]    __Result=0x00000000
[19:36:15.342]    
[19:36:15.342]    // User-defined
[19:36:15.342]    DbgMCU_CR=0x00000007
[19:36:15.342]    DbgMCU_APB1_Fz=0x00000000
[19:36:15.342]    DbgMCU_APB2_Fz=0x00000000
[19:36:15.342]    TraceClk_Pin=0x00040002
[19:36:15.342]    TraceD0_Pin=0x00040003
[19:36:15.343]    TraceD1_Pin=0x00040004
[19:36:15.343]    TraceD2_Pin=0x00040005
[19:36:15.343]    TraceD3_Pin=0x00040006
[19:36:15.343]  </debugvars>
[19:36:15.343]  
[19:36:15.344]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:36:15.344]    <block atomic="false" info="">
[19:36:15.344]      Sequence("CheckID");
[19:36:15.344]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:36:15.344]          <block atomic="false" info="">
[19:36:15.344]            __var pidr1 = 0;
[19:36:15.345]              // -> [pidr1 <= 0x00000000]
[19:36:15.345]            __var pidr2 = 0;
[19:36:15.345]              // -> [pidr2 <= 0x00000000]
[19:36:15.345]            __var jep106id = 0;
[19:36:15.346]              // -> [jep106id <= 0x00000000]
[19:36:15.346]            __var ROMTableBase = 0;
[19:36:15.346]              // -> [ROMTableBase <= 0x00000000]
[19:36:15.346]            __ap = 0;      // AHB-AP
[19:36:15.346]              // -> [__ap <= 0x00000000]
[19:36:15.347]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:36:15.347]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.347]              // -> [ROMTableBase <= 0xE00FD000]
[19:36:15.347]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:36:15.348]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.348]              // -> [pidr1 <= 0x00000004]
[19:36:15.348]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:36:15.349]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.349]              // -> [pidr2 <= 0x0000001A]
[19:36:15.349]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:36:15.349]              // -> [jep106id <= 0x00000020]
[19:36:15.349]          </block>
[19:36:15.349]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:36:15.349]            // if-block "jep106id != 0x20"
[19:36:15.350]              // =>  FALSE
[19:36:15.350]            // skip if-block "jep106id != 0x20"
[19:36:15.350]          </control>
[19:36:15.350]        </sequence>
[19:36:15.350]    </block>
[19:36:15.351]  </sequence>
[19:36:15.351]  
[19:36:15.365]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:36:15.365]  
[19:36:15.366]  <debugvars>
[19:36:15.366]    // Pre-defined
[19:36:15.366]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:36:15.366]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:36:15.366]    __dp=0x00000000
[19:36:15.367]    __ap=0x00000000
[19:36:15.367]    __traceout=0x00000001      (SWO Trace)
[19:36:15.367]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:36:15.367]    __FlashAddr=0x00000000
[19:36:15.368]    __FlashLen=0x00000000
[19:36:15.368]    __FlashArg=0x00000000
[19:36:15.368]    __FlashOp=0x00000000
[19:36:15.368]    __Result=0x00000000
[19:36:15.368]    
[19:36:15.368]    // User-defined
[19:36:15.369]    DbgMCU_CR=0x00000007
[19:36:15.369]    DbgMCU_APB1_Fz=0x00000000
[19:36:15.369]    DbgMCU_APB2_Fz=0x00000000
[19:36:15.369]    TraceClk_Pin=0x00040002
[19:36:15.369]    TraceD0_Pin=0x00040003
[19:36:15.370]    TraceD1_Pin=0x00040004
[19:36:15.370]    TraceD2_Pin=0x00040005
[19:36:15.370]    TraceD3_Pin=0x00040006
[19:36:15.370]  </debugvars>
[19:36:15.370]  
[19:36:15.371]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:36:15.371]    <block atomic="false" info="">
[19:36:15.371]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:36:15.372]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.372]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:36:15.372]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.373]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:36:15.373]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.373]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:36:15.374]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:15.374]    </block>
[19:36:15.374]  </sequence>
[19:36:15.375]  
[19:38:38.787]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:38:38.787]  
[19:38:38.790]  <debugvars>
[19:38:38.791]    // Pre-defined
[19:38:38.791]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:38:38.791]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:38:38.791]    __dp=0x00000000
[19:38:38.791]    __ap=0x00000000
[19:38:38.791]    __traceout=0x00000001      (SWO Trace)
[19:38:38.792]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:38:38.792]    __FlashAddr=0x00000000
[19:38:38.792]    __FlashLen=0x00000000
[19:38:38.792]    __FlashArg=0x00000000
[19:38:38.792]    __FlashOp=0x00000000
[19:38:38.792]    __Result=0x00000000
[19:38:38.792]    
[19:38:38.792]    // User-defined
[19:38:38.792]    DbgMCU_CR=0x00000007
[19:38:38.793]    DbgMCU_APB1_Fz=0x00000000
[19:38:38.793]    DbgMCU_APB2_Fz=0x00000000
[19:38:38.793]    TraceClk_Pin=0x00040002
[19:38:38.793]    TraceD0_Pin=0x00040003
[19:38:38.793]    TraceD1_Pin=0x00040004
[19:38:38.793]    TraceD2_Pin=0x00040005
[19:38:38.794]    TraceD3_Pin=0x00040006
[19:38:38.794]  </debugvars>
[19:38:38.794]  
[19:38:38.794]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:38:38.794]    <block atomic="false" info="">
[19:38:38.794]      Sequence("CheckID");
[19:38:38.794]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:38:38.794]          <block atomic="false" info="">
[19:38:38.795]            __var pidr1 = 0;
[19:38:38.795]              // -> [pidr1 <= 0x00000000]
[19:38:38.795]            __var pidr2 = 0;
[19:38:38.795]              // -> [pidr2 <= 0x00000000]
[19:38:38.795]            __var jep106id = 0;
[19:38:38.795]              // -> [jep106id <= 0x00000000]
[19:38:38.795]            __var ROMTableBase = 0;
[19:38:38.796]              // -> [ROMTableBase <= 0x00000000]
[19:38:38.796]            __ap = 0;      // AHB-AP
[19:38:38.796]              // -> [__ap <= 0x00000000]
[19:38:38.796]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:38:38.797]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.797]              // -> [ROMTableBase <= 0xE00FD000]
[19:38:38.797]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:38:38.797]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.798]              // -> [pidr1 <= 0x00000004]
[19:38:38.798]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:38:38.798]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.798]              // -> [pidr2 <= 0x0000001A]
[19:38:38.798]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:38:38.799]              // -> [jep106id <= 0x00000020]
[19:38:38.799]          </block>
[19:38:38.799]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:38:38.799]            // if-block "jep106id != 0x20"
[19:38:38.799]              // =>  FALSE
[19:38:38.799]            // skip if-block "jep106id != 0x20"
[19:38:38.799]          </control>
[19:38:38.799]        </sequence>
[19:38:38.800]    </block>
[19:38:38.800]  </sequence>
[19:38:38.800]  
[19:38:38.815]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:38:38.815]  
[19:38:38.815]  <debugvars>
[19:38:38.815]    // Pre-defined
[19:38:38.815]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:38:38.815]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:38:38.815]    __dp=0x00000000
[19:38:38.815]    __ap=0x00000000
[19:38:38.816]    __traceout=0x00000001      (SWO Trace)
[19:38:38.816]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:38:38.816]    __FlashAddr=0x00000000
[19:38:38.816]    __FlashLen=0x00000000
[19:38:38.816]    __FlashArg=0x00000000
[19:38:38.816]    __FlashOp=0x00000000
[19:38:38.816]    __Result=0x00000000
[19:38:38.817]    
[19:38:38.817]    // User-defined
[19:38:38.817]    DbgMCU_CR=0x00000007
[19:38:38.817]    DbgMCU_APB1_Fz=0x00000000
[19:38:38.817]    DbgMCU_APB2_Fz=0x00000000
[19:38:38.817]    TraceClk_Pin=0x00040002
[19:38:38.817]    TraceD0_Pin=0x00040003
[19:38:38.817]    TraceD1_Pin=0x00040004
[19:38:38.818]    TraceD2_Pin=0x00040005
[19:38:38.818]    TraceD3_Pin=0x00040006
[19:38:38.818]  </debugvars>
[19:38:38.818]  
[19:38:38.818]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:38:38.818]    <block atomic="false" info="">
[19:38:38.819]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:38:38.819]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.819]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:38:38.820]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.820]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:38:38.820]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.820]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:38:38.821]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:38:38.821]    </block>
[19:38:38.821]  </sequence>
[19:38:38.821]  
[19:39:25.851]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:39:25.851]  
[19:39:25.851]  <debugvars>
[19:39:25.851]    // Pre-defined
[19:39:25.852]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:25.852]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:39:25.852]    __dp=0x00000000
[19:39:25.852]    __ap=0x00000000
[19:39:25.852]    __traceout=0x00000001      (SWO Trace)
[19:39:25.853]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:25.853]    __FlashAddr=0x00000000
[19:39:25.853]    __FlashLen=0x00000000
[19:39:25.853]    __FlashArg=0x00000000
[19:39:25.854]    __FlashOp=0x00000000
[19:39:25.854]    __Result=0x00000000
[19:39:25.854]    
[19:39:25.854]    // User-defined
[19:39:25.854]    DbgMCU_CR=0x00000007
[19:39:25.854]    DbgMCU_APB1_Fz=0x00000000
[19:39:25.854]    DbgMCU_APB2_Fz=0x00000000
[19:39:25.855]    TraceClk_Pin=0x00040002
[19:39:25.855]    TraceD0_Pin=0x00040003
[19:39:25.855]    TraceD1_Pin=0x00040004
[19:39:25.855]    TraceD2_Pin=0x00040005
[19:39:25.856]    TraceD3_Pin=0x00040006
[19:39:25.856]  </debugvars>
[19:39:25.856]  
[19:39:25.856]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:39:25.856]    <block atomic="false" info="">
[19:39:25.857]      Sequence("CheckID");
[19:39:25.857]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:39:25.857]          <block atomic="false" info="">
[19:39:25.857]            __var pidr1 = 0;
[19:39:25.857]              // -> [pidr1 <= 0x00000000]
[19:39:25.858]            __var pidr2 = 0;
[19:39:25.858]              // -> [pidr2 <= 0x00000000]
[19:39:25.858]            __var jep106id = 0;
[19:39:25.858]              // -> [jep106id <= 0x00000000]
[19:39:25.858]            __var ROMTableBase = 0;
[19:39:25.858]              // -> [ROMTableBase <= 0x00000000]
[19:39:25.859]            __ap = 0;      // AHB-AP
[19:39:25.859]              // -> [__ap <= 0x00000000]
[19:39:25.859]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:39:25.860]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.860]              // -> [ROMTableBase <= 0xE00FD000]
[19:39:25.860]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:39:25.861]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.861]              // -> [pidr1 <= 0x00000004]
[19:39:25.861]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:39:25.861]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.862]              // -> [pidr2 <= 0x0000001A]
[19:39:25.862]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:39:25.862]              // -> [jep106id <= 0x00000020]
[19:39:25.862]          </block>
[19:39:25.862]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:39:25.863]            // if-block "jep106id != 0x20"
[19:39:25.863]              // =>  FALSE
[19:39:25.863]            // skip if-block "jep106id != 0x20"
[19:39:25.863]          </control>
[19:39:25.863]        </sequence>
[19:39:25.864]    </block>
[19:39:25.864]  </sequence>
[19:39:25.864]  
[19:39:25.879]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:39:25.879]  
[19:39:25.879]  <debugvars>
[19:39:25.879]    // Pre-defined
[19:39:25.879]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:25.879]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:39:25.880]    __dp=0x00000000
[19:39:25.880]    __ap=0x00000000
[19:39:25.880]    __traceout=0x00000001      (SWO Trace)
[19:39:25.880]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:25.881]    __FlashAddr=0x00000000
[19:39:25.881]    __FlashLen=0x00000000
[19:39:25.881]    __FlashArg=0x00000000
[19:39:25.881]    __FlashOp=0x00000000
[19:39:25.881]    __Result=0x00000000
[19:39:25.882]    
[19:39:25.882]    // User-defined
[19:39:25.882]    DbgMCU_CR=0x00000007
[19:39:25.882]    DbgMCU_APB1_Fz=0x00000000
[19:39:25.882]    DbgMCU_APB2_Fz=0x00000000
[19:39:25.882]    TraceClk_Pin=0x00040002
[19:39:25.882]    TraceD0_Pin=0x00040003
[19:39:25.883]    TraceD1_Pin=0x00040004
[19:39:25.883]    TraceD2_Pin=0x00040005
[19:39:25.883]    TraceD3_Pin=0x00040006
[19:39:25.883]  </debugvars>
[19:39:25.883]  
[19:39:25.884]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:39:25.884]    <block atomic="false" info="">
[19:39:25.884]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:39:25.885]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.885]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:39:25.885]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.886]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:39:25.886]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.886]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:39:25.887]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:25.887]    </block>
[19:39:25.887]  </sequence>
[19:39:25.887]  
[19:40:47.900]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:40:47.900]  
[19:40:47.900]  <debugvars>
[19:40:47.900]    // Pre-defined
[19:40:47.900]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:47.900]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:40:47.901]    __dp=0x00000000
[19:40:47.901]    __ap=0x00000000
[19:40:47.901]    __traceout=0x00000001      (SWO Trace)
[19:40:47.901]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:47.901]    __FlashAddr=0x00000000
[19:40:47.901]    __FlashLen=0x00000000
[19:40:47.902]    __FlashArg=0x00000000
[19:40:47.902]    __FlashOp=0x00000000
[19:40:47.902]    __Result=0x00000000
[19:40:47.902]    
[19:40:47.902]    // User-defined
[19:40:47.902]    DbgMCU_CR=0x00000007
[19:40:47.903]    DbgMCU_APB1_Fz=0x00000000
[19:40:47.903]    DbgMCU_APB2_Fz=0x00000000
[19:40:47.903]    TraceClk_Pin=0x00040002
[19:40:47.903]    TraceD0_Pin=0x00040003
[19:40:47.903]    TraceD1_Pin=0x00040004
[19:40:47.903]    TraceD2_Pin=0x00040005
[19:40:47.904]    TraceD3_Pin=0x00040006
[19:40:47.904]  </debugvars>
[19:40:47.904]  
[19:40:47.904]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:40:47.904]    <block atomic="false" info="">
[19:40:47.905]      Sequence("CheckID");
[19:40:47.905]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:40:47.905]          <block atomic="false" info="">
[19:40:47.905]            __var pidr1 = 0;
[19:40:47.905]              // -> [pidr1 <= 0x00000000]
[19:40:47.906]            __var pidr2 = 0;
[19:40:47.906]              // -> [pidr2 <= 0x00000000]
[19:40:47.906]            __var jep106id = 0;
[19:40:47.906]              // -> [jep106id <= 0x00000000]
[19:40:47.906]            __var ROMTableBase = 0;
[19:40:47.907]              // -> [ROMTableBase <= 0x00000000]
[19:40:47.907]            __ap = 0;      // AHB-AP
[19:40:47.907]              // -> [__ap <= 0x00000000]
[19:40:47.907]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:40:47.907]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.908]              // -> [ROMTableBase <= 0xE00FD000]
[19:40:47.908]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:40:47.909]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.909]              // -> [pidr1 <= 0x00000004]
[19:40:47.909]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:40:47.910]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.910]              // -> [pidr2 <= 0x0000001A]
[19:40:47.910]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:40:47.910]              // -> [jep106id <= 0x00000020]
[19:40:47.910]          </block>
[19:40:47.910]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:40:47.910]            // if-block "jep106id != 0x20"
[19:40:47.911]              // =>  FALSE
[19:40:47.911]            // skip if-block "jep106id != 0x20"
[19:40:47.911]          </control>
[19:40:47.911]        </sequence>
[19:40:47.911]    </block>
[19:40:47.911]  </sequence>
[19:40:47.912]  
[19:40:47.926]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:40:47.926]  
[19:40:47.926]  <debugvars>
[19:40:47.926]    // Pre-defined
[19:40:47.927]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:47.927]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:40:47.927]    __dp=0x00000000
[19:40:47.927]    __ap=0x00000000
[19:40:47.927]    __traceout=0x00000001      (SWO Trace)
[19:40:47.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:47.928]    __FlashAddr=0x00000000
[19:40:47.928]    __FlashLen=0x00000000
[19:40:47.928]    __FlashArg=0x00000000
[19:40:47.928]    __FlashOp=0x00000000
[19:40:47.928]    __Result=0x00000000
[19:40:47.928]    
[19:40:47.928]    // User-defined
[19:40:47.929]    DbgMCU_CR=0x00000007
[19:40:47.929]    DbgMCU_APB1_Fz=0x00000000
[19:40:47.929]    DbgMCU_APB2_Fz=0x00000000
[19:40:47.929]    TraceClk_Pin=0x00040002
[19:40:47.929]    TraceD0_Pin=0x00040003
[19:40:47.930]    TraceD1_Pin=0x00040004
[19:40:47.930]    TraceD2_Pin=0x00040005
[19:40:47.930]    TraceD3_Pin=0x00040006
[19:40:47.930]  </debugvars>
[19:40:47.930]  
[19:40:47.930]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:40:47.931]    <block atomic="false" info="">
[19:40:47.931]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:40:47.931]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.932]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:40:47.932]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.932]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:40:47.933]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.933]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:40:47.934]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:47.934]    </block>
[19:40:47.934]  </sequence>
[19:40:47.934]  
[20:18:49.866]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:18:49.866]  
[20:18:49.866]  <debugvars>
[20:18:49.866]    // Pre-defined
[20:18:49.867]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:18:49.867]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:18:49.867]    __dp=0x00000000
[20:18:49.867]    __ap=0x00000000
[20:18:49.867]    __traceout=0x00000001      (SWO Trace)
[20:18:49.868]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:18:49.868]    __FlashAddr=0x00000000
[20:18:49.868]    __FlashLen=0x00000000
[20:18:49.868]    __FlashArg=0x00000000
[20:18:49.868]    __FlashOp=0x00000000
[20:18:49.869]    __Result=0x00000000
[20:18:49.869]    
[20:18:49.869]    // User-defined
[20:18:49.869]    DbgMCU_CR=0x00000007
[20:18:49.869]    DbgMCU_APB1_Fz=0x00000000
[20:18:49.869]    DbgMCU_APB2_Fz=0x00000000
[20:18:49.870]    TraceClk_Pin=0x00040002
[20:18:49.870]    TraceD0_Pin=0x00040003
[20:18:49.870]    TraceD1_Pin=0x00040004
[20:18:49.870]    TraceD2_Pin=0x00040005
[20:18:49.870]    TraceD3_Pin=0x00040006
[20:18:49.871]  </debugvars>
[20:18:49.871]  
[20:18:49.871]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:18:49.871]    <block atomic="false" info="">
[20:18:49.871]      Sequence("CheckID");
[20:18:49.871]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:18:49.872]          <block atomic="false" info="">
[20:18:49.872]            __var pidr1 = 0;
[20:18:49.872]              // -> [pidr1 <= 0x00000000]
[20:18:49.872]            __var pidr2 = 0;
[20:18:49.872]              // -> [pidr2 <= 0x00000000]
[20:18:49.873]            __var jep106id = 0;
[20:18:49.873]              // -> [jep106id <= 0x00000000]
[20:18:49.873]            __var ROMTableBase = 0;
[20:18:49.873]              // -> [ROMTableBase <= 0x00000000]
[20:18:49.873]            __ap = 0;      // AHB-AP
[20:18:49.874]              // -> [__ap <= 0x00000000]
[20:18:49.874]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:18:49.874]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.874]              // -> [ROMTableBase <= 0xE00FD000]
[20:18:49.875]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:18:49.875]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.875]              // -> [pidr1 <= 0x00000004]
[20:18:49.876]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:18:49.876]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.876]              // -> [pidr2 <= 0x0000001A]
[20:18:49.876]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:18:49.877]              // -> [jep106id <= 0x00000020]
[20:18:49.877]          </block>
[20:18:49.877]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:18:49.877]            // if-block "jep106id != 0x20"
[20:18:49.877]              // =>  FALSE
[20:18:49.877]            // skip if-block "jep106id != 0x20"
[20:18:49.878]          </control>
[20:18:49.878]        </sequence>
[20:18:49.878]    </block>
[20:18:49.878]  </sequence>
[20:18:49.878]  
[20:18:49.892]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:18:49.892]  
[20:18:49.893]  <debugvars>
[20:18:49.893]    // Pre-defined
[20:18:49.893]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:18:49.893]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:18:49.893]    __dp=0x00000000
[20:18:49.893]    __ap=0x00000000
[20:18:49.894]    __traceout=0x00000001      (SWO Trace)
[20:18:49.894]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:18:49.894]    __FlashAddr=0x00000000
[20:18:49.894]    __FlashLen=0x00000000
[20:18:49.894]    __FlashArg=0x00000000
[20:18:49.895]    __FlashOp=0x00000000
[20:18:49.895]    __Result=0x00000000
[20:18:49.895]    
[20:18:49.895]    // User-defined
[20:18:49.895]    DbgMCU_CR=0x00000007
[20:18:49.895]    DbgMCU_APB1_Fz=0x00000000
[20:18:49.895]    DbgMCU_APB2_Fz=0x00000000
[20:18:49.896]    TraceClk_Pin=0x00040002
[20:18:49.896]    TraceD0_Pin=0x00040003
[20:18:49.896]    TraceD1_Pin=0x00040004
[20:18:49.896]    TraceD2_Pin=0x00040005
[20:18:49.896]    TraceD3_Pin=0x00040006
[20:18:49.897]  </debugvars>
[20:18:49.897]  
[20:18:49.897]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:18:49.897]    <block atomic="false" info="">
[20:18:49.897]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:18:49.898]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.898]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:18:49.899]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.899]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:18:49.899]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.899]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:18:49.900]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:49.900]    </block>
[20:18:49.900]  </sequence>
[20:18:49.901]  
[20:19:55.474]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:19:55.474]  
[20:19:55.474]  <debugvars>
[20:19:55.474]    // Pre-defined
[20:19:55.475]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:19:55.475]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:19:55.475]    __dp=0x00000000
[20:19:55.475]    __ap=0x00000000
[20:19:55.475]    __traceout=0x00000001      (SWO Trace)
[20:19:55.475]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:19:55.476]    __FlashAddr=0x00000000
[20:19:55.476]    __FlashLen=0x00000000
[20:19:55.476]    __FlashArg=0x00000000
[20:19:55.476]    __FlashOp=0x00000000
[20:19:55.476]    __Result=0x00000000
[20:19:55.476]    
[20:19:55.476]    // User-defined
[20:19:55.477]    DbgMCU_CR=0x00000007
[20:19:55.477]    DbgMCU_APB1_Fz=0x00000000
[20:19:55.477]    DbgMCU_APB2_Fz=0x00000000
[20:19:55.477]    TraceClk_Pin=0x00040002
[20:19:55.477]    TraceD0_Pin=0x00040003
[20:19:55.478]    TraceD1_Pin=0x00040004
[20:19:55.478]    TraceD2_Pin=0x00040005
[20:19:55.478]    TraceD3_Pin=0x00040006
[20:19:55.478]  </debugvars>
[20:19:55.479]  
[20:19:55.479]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:19:55.479]    <block atomic="false" info="">
[20:19:55.479]      Sequence("CheckID");
[20:19:55.479]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:19:55.479]          <block atomic="false" info="">
[20:19:55.480]            __var pidr1 = 0;
[20:19:55.480]              // -> [pidr1 <= 0x00000000]
[20:19:55.480]            __var pidr2 = 0;
[20:19:55.480]              // -> [pidr2 <= 0x00000000]
[20:19:55.480]            __var jep106id = 0;
[20:19:55.480]              // -> [jep106id <= 0x00000000]
[20:19:55.481]            __var ROMTableBase = 0;
[20:19:55.481]              // -> [ROMTableBase <= 0x00000000]
[20:19:55.481]            __ap = 0;      // AHB-AP
[20:19:55.481]              // -> [__ap <= 0x00000000]
[20:19:55.481]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:19:55.482]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.482]              // -> [ROMTableBase <= 0xE00FD000]
[20:19:55.482]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:19:55.483]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.483]              // -> [pidr1 <= 0x00000004]
[20:19:55.483]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:19:55.483]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.484]              // -> [pidr2 <= 0x0000001A]
[20:19:55.484]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:19:55.484]              // -> [jep106id <= 0x00000020]
[20:19:55.484]          </block>
[20:19:55.484]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:19:55.484]            // if-block "jep106id != 0x20"
[20:19:55.485]              // =>  FALSE
[20:19:55.485]            // skip if-block "jep106id != 0x20"
[20:19:55.485]          </control>
[20:19:55.485]        </sequence>
[20:19:55.485]    </block>
[20:19:55.485]  </sequence>
[20:19:55.485]  
[20:19:55.500]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:19:55.500]  
[20:19:55.501]  <debugvars>
[20:19:55.501]    // Pre-defined
[20:19:55.501]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:19:55.501]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:19:55.501]    __dp=0x00000000
[20:19:55.501]    __ap=0x00000000
[20:19:55.502]    __traceout=0x00000001      (SWO Trace)
[20:19:55.502]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:19:55.502]    __FlashAddr=0x00000000
[20:19:55.502]    __FlashLen=0x00000000
[20:19:55.502]    __FlashArg=0x00000000
[20:19:55.503]    __FlashOp=0x00000000
[20:19:55.503]    __Result=0x00000000
[20:19:55.503]    
[20:19:55.503]    // User-defined
[20:19:55.503]    DbgMCU_CR=0x00000007
[20:19:55.503]    DbgMCU_APB1_Fz=0x00000000
[20:19:55.503]    DbgMCU_APB2_Fz=0x00000000
[20:19:55.504]    TraceClk_Pin=0x00040002
[20:19:55.504]    TraceD0_Pin=0x00040003
[20:19:55.504]    TraceD1_Pin=0x00040004
[20:19:55.504]    TraceD2_Pin=0x00040005
[20:19:55.504]    TraceD3_Pin=0x00040006
[20:19:55.505]  </debugvars>
[20:19:55.505]  
[20:19:55.505]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:19:55.505]    <block atomic="false" info="">
[20:19:55.505]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:19:55.506]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.506]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:19:55.506]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.507]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:19:55.507]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.507]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:19:55.508]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:55.508]    </block>
[20:19:55.508]  </sequence>
[20:19:55.508]  
[20:22:51.043]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:22:51.043]  
[20:22:51.043]  <debugvars>
[20:22:51.044]    // Pre-defined
[20:22:51.044]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:51.044]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:22:51.044]    __dp=0x00000000
[20:22:51.044]    __ap=0x00000000
[20:22:51.045]    __traceout=0x00000001      (SWO Trace)
[20:22:51.045]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:51.045]    __FlashAddr=0x00000000
[20:22:51.045]    __FlashLen=0x00000000
[20:22:51.045]    __FlashArg=0x00000000
[20:22:51.045]    __FlashOp=0x00000000
[20:22:51.046]    __Result=0x00000000
[20:22:51.046]    
[20:22:51.046]    // User-defined
[20:22:51.046]    DbgMCU_CR=0x00000007
[20:22:51.046]    DbgMCU_APB1_Fz=0x00000000
[20:22:51.046]    DbgMCU_APB2_Fz=0x00000000
[20:22:51.047]    TraceClk_Pin=0x00040002
[20:22:51.047]    TraceD0_Pin=0x00040003
[20:22:51.047]    TraceD1_Pin=0x00040004
[20:22:51.047]    TraceD2_Pin=0x00040005
[20:22:51.047]    TraceD3_Pin=0x00040006
[20:22:51.048]  </debugvars>
[20:22:51.048]  
[20:22:51.048]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:22:51.048]    <block atomic="false" info="">
[20:22:51.048]      Sequence("CheckID");
[20:22:51.048]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:22:51.049]          <block atomic="false" info="">
[20:22:51.049]            __var pidr1 = 0;
[20:22:51.049]              // -> [pidr1 <= 0x00000000]
[20:22:51.049]            __var pidr2 = 0;
[20:22:51.049]              // -> [pidr2 <= 0x00000000]
[20:22:51.049]            __var jep106id = 0;
[20:22:51.050]              // -> [jep106id <= 0x00000000]
[20:22:51.050]            __var ROMTableBase = 0;
[20:22:51.050]              // -> [ROMTableBase <= 0x00000000]
[20:22:51.050]            __ap = 0;      // AHB-AP
[20:22:51.050]              // -> [__ap <= 0x00000000]
[20:22:51.051]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:22:51.051]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.051]              // -> [ROMTableBase <= 0xE00FD000]
[20:22:51.051]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:22:51.052]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.052]              // -> [pidr1 <= 0x00000004]
[20:22:51.052]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:22:51.053]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.053]              // -> [pidr2 <= 0x0000001A]
[20:22:51.053]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:22:51.053]              // -> [jep106id <= 0x00000020]
[20:22:51.053]          </block>
[20:22:51.054]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:22:51.054]            // if-block "jep106id != 0x20"
[20:22:51.054]              // =>  FALSE
[20:22:51.054]            // skip if-block "jep106id != 0x20"
[20:22:51.054]          </control>
[20:22:51.054]        </sequence>
[20:22:51.055]    </block>
[20:22:51.055]  </sequence>
[20:22:51.055]  
[20:22:51.070]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:22:51.070]  
[20:22:51.070]  <debugvars>
[20:22:51.070]    // Pre-defined
[20:22:51.071]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:51.071]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:22:51.071]    __dp=0x00000000
[20:22:51.071]    __ap=0x00000000
[20:22:51.072]    __traceout=0x00000001      (SWO Trace)
[20:22:51.072]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:51.072]    __FlashAddr=0x00000000
[20:22:51.072]    __FlashLen=0x00000000
[20:22:51.072]    __FlashArg=0x00000000
[20:22:51.072]    __FlashOp=0x00000000
[20:22:51.073]    __Result=0x00000000
[20:22:51.073]    
[20:22:51.073]    // User-defined
[20:22:51.073]    DbgMCU_CR=0x00000007
[20:22:51.073]    DbgMCU_APB1_Fz=0x00000000
[20:22:51.073]    DbgMCU_APB2_Fz=0x00000000
[20:22:51.074]    TraceClk_Pin=0x00040002
[20:22:51.074]    TraceD0_Pin=0x00040003
[20:22:51.074]    TraceD1_Pin=0x00040004
[20:22:51.074]    TraceD2_Pin=0x00040005
[20:22:51.074]    TraceD3_Pin=0x00040006
[20:22:51.075]  </debugvars>
[20:22:51.075]  
[20:22:51.075]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:22:51.075]    <block atomic="false" info="">
[20:22:51.075]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:22:51.076]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.076]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:22:51.077]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.077]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:22:51.077]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.078]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:22:51.078]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:51.078]    </block>
[20:22:51.078]  </sequence>
[20:22:51.079]  
[20:23:36.745]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:23:36.745]  
[20:23:36.745]  <debugvars>
[20:23:36.745]    // Pre-defined
[20:23:36.745]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:23:36.746]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:23:36.746]    __dp=0x00000000
[20:23:36.746]    __ap=0x00000000
[20:23:36.746]    __traceout=0x00000001      (SWO Trace)
[20:23:36.746]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:23:36.746]    __FlashAddr=0x00000000
[20:23:36.747]    __FlashLen=0x00000000
[20:23:36.747]    __FlashArg=0x00000000
[20:23:36.747]    __FlashOp=0x00000000
[20:23:36.747]    __Result=0x00000000
[20:23:36.747]    
[20:23:36.747]    // User-defined
[20:23:36.748]    DbgMCU_CR=0x00000007
[20:23:36.748]    DbgMCU_APB1_Fz=0x00000000
[20:23:36.748]    DbgMCU_APB2_Fz=0x00000000
[20:23:36.748]    TraceClk_Pin=0x00040002
[20:23:36.748]    TraceD0_Pin=0x00040003
[20:23:36.748]    TraceD1_Pin=0x00040004
[20:23:36.749]    TraceD2_Pin=0x00040005
[20:23:36.749]    TraceD3_Pin=0x00040006
[20:23:36.749]  </debugvars>
[20:23:36.749]  
[20:23:36.749]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:23:36.750]    <block atomic="false" info="">
[20:23:36.750]      Sequence("CheckID");
[20:23:36.750]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:23:36.750]          <block atomic="false" info="">
[20:23:36.750]            __var pidr1 = 0;
[20:23:36.750]              // -> [pidr1 <= 0x00000000]
[20:23:36.751]            __var pidr2 = 0;
[20:23:36.751]              // -> [pidr2 <= 0x00000000]
[20:23:36.751]            __var jep106id = 0;
[20:23:36.751]              // -> [jep106id <= 0x00000000]
[20:23:36.751]            __var ROMTableBase = 0;
[20:23:36.751]              // -> [ROMTableBase <= 0x00000000]
[20:23:36.752]            __ap = 0;      // AHB-AP
[20:23:36.752]              // -> [__ap <= 0x00000000]
[20:23:36.752]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:23:36.752]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.752]              // -> [ROMTableBase <= 0xE00FD000]
[20:23:36.753]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:23:36.753]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.753]              // -> [pidr1 <= 0x00000004]
[20:23:36.754]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:23:36.754]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.754]              // -> [pidr2 <= 0x0000001A]
[20:23:36.754]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:23:36.755]              // -> [jep106id <= 0x00000020]
[20:23:36.755]          </block>
[20:23:36.755]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:23:36.755]            // if-block "jep106id != 0x20"
[20:23:36.755]              // =>  FALSE
[20:23:36.755]            // skip if-block "jep106id != 0x20"
[20:23:36.756]          </control>
[20:23:36.756]        </sequence>
[20:23:36.756]    </block>
[20:23:36.756]  </sequence>
[20:23:36.756]  
[20:23:36.770]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:23:36.770]  
[20:23:36.771]  <debugvars>
[20:23:36.771]    // Pre-defined
[20:23:36.771]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:23:36.771]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:23:36.771]    __dp=0x00000000
[20:23:36.772]    __ap=0x00000000
[20:23:36.772]    __traceout=0x00000001      (SWO Trace)
[20:23:36.772]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:23:36.772]    __FlashAddr=0x00000000
[20:23:36.772]    __FlashLen=0x00000000
[20:23:36.773]    __FlashArg=0x00000000
[20:23:36.773]    __FlashOp=0x00000000
[20:23:36.773]    __Result=0x00000000
[20:23:36.773]    
[20:23:36.773]    // User-defined
[20:23:36.773]    DbgMCU_CR=0x00000007
[20:23:36.774]    DbgMCU_APB1_Fz=0x00000000
[20:23:36.774]    DbgMCU_APB2_Fz=0x00000000
[20:23:36.774]    TraceClk_Pin=0x00040002
[20:23:36.774]    TraceD0_Pin=0x00040003
[20:23:36.774]    TraceD1_Pin=0x00040004
[20:23:36.775]    TraceD2_Pin=0x00040005
[20:23:36.775]    TraceD3_Pin=0x00040006
[20:23:36.775]  </debugvars>
[20:23:36.775]  
[20:23:36.775]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:23:36.776]    <block atomic="false" info="">
[20:23:36.776]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:23:36.776]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.777]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:23:36.777]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.777]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:23:36.778]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.778]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:23:36.779]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:36.779]    </block>
[20:23:36.779]  </sequence>
[20:23:36.779]  
[20:25:38.208]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:25:38.208]  
[20:25:38.208]  <debugvars>
[20:25:38.208]    // Pre-defined
[20:25:38.208]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:25:38.208]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:25:38.208]    __dp=0x00000000
[20:25:38.209]    __ap=0x00000000
[20:25:38.209]    __traceout=0x00000001      (SWO Trace)
[20:25:38.209]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:25:38.209]    __FlashAddr=0x00000000
[20:25:38.209]    __FlashLen=0x00000000
[20:25:38.209]    __FlashArg=0x00000000
[20:25:38.209]    __FlashOp=0x00000000
[20:25:38.210]    __Result=0x00000000
[20:25:38.210]    
[20:25:38.210]    // User-defined
[20:25:38.210]    DbgMCU_CR=0x00000007
[20:25:38.210]    DbgMCU_APB1_Fz=0x00000000
[20:25:38.210]    DbgMCU_APB2_Fz=0x00000000
[20:25:38.210]    TraceClk_Pin=0x00040002
[20:25:38.210]    TraceD0_Pin=0x00040003
[20:25:38.210]    TraceD1_Pin=0x00040004
[20:25:38.210]    TraceD2_Pin=0x00040005
[20:25:38.211]    TraceD3_Pin=0x00040006
[20:25:38.211]  </debugvars>
[20:25:38.211]  
[20:25:38.211]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:25:38.211]    <block atomic="false" info="">
[20:25:38.211]      Sequence("CheckID");
[20:25:38.211]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:25:38.212]          <block atomic="false" info="">
[20:25:38.212]            __var pidr1 = 0;
[20:25:38.212]              // -> [pidr1 <= 0x00000000]
[20:25:38.212]            __var pidr2 = 0;
[20:25:38.212]              // -> [pidr2 <= 0x00000000]
[20:25:38.212]            __var jep106id = 0;
[20:25:38.212]              // -> [jep106id <= 0x00000000]
[20:25:38.213]            __var ROMTableBase = 0;
[20:25:38.213]              // -> [ROMTableBase <= 0x00000000]
[20:25:38.213]            __ap = 0;      // AHB-AP
[20:25:38.213]              // -> [__ap <= 0x00000000]
[20:25:38.213]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:25:38.213]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.214]              // -> [ROMTableBase <= 0xE00FD000]
[20:25:38.214]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:25:38.214]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.214]              // -> [pidr1 <= 0x00000004]
[20:25:38.214]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:25:38.215]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.215]              // -> [pidr2 <= 0x0000001A]
[20:25:38.215]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:25:38.215]              // -> [jep106id <= 0x00000020]
[20:25:38.215]          </block>
[20:25:38.216]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:25:38.216]            // if-block "jep106id != 0x20"
[20:25:38.216]              // =>  FALSE
[20:25:38.216]            // skip if-block "jep106id != 0x20"
[20:25:38.216]          </control>
[20:25:38.216]        </sequence>
[20:25:38.216]    </block>
[20:25:38.216]  </sequence>
[20:25:38.216]  
[20:25:38.231]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:25:38.231]  
[20:25:38.232]  <debugvars>
[20:25:38.232]    // Pre-defined
[20:25:38.232]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:25:38.232]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:25:38.232]    __dp=0x00000000
[20:25:38.232]    __ap=0x00000000
[20:25:38.232]    __traceout=0x00000001      (SWO Trace)
[20:25:38.233]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:25:38.233]    __FlashAddr=0x00000000
[20:25:38.233]    __FlashLen=0x00000000
[20:25:38.233]    __FlashArg=0x00000000
[20:25:38.233]    __FlashOp=0x00000000
[20:25:38.233]    __Result=0x00000000
[20:25:38.234]    
[20:25:38.234]    // User-defined
[20:25:38.234]    DbgMCU_CR=0x00000007
[20:25:38.234]    DbgMCU_APB1_Fz=0x00000000
[20:25:38.234]    DbgMCU_APB2_Fz=0x00000000
[20:25:38.234]    TraceClk_Pin=0x00040002
[20:25:38.234]    TraceD0_Pin=0x00040003
[20:25:38.234]    TraceD1_Pin=0x00040004
[20:25:38.235]    TraceD2_Pin=0x00040005
[20:25:38.235]    TraceD3_Pin=0x00040006
[20:25:38.235]  </debugvars>
[20:25:38.235]  
[20:25:38.235]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:25:38.235]    <block atomic="false" info="">
[20:25:38.235]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:25:38.236]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.236]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:25:38.236]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.237]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:25:38.237]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.237]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:25:38.238]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:25:38.238]    </block>
[20:25:38.238]  </sequence>
[20:25:38.238]  
[20:27:11.744]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:27:11.744]  
[20:27:11.744]  <debugvars>
[20:27:11.745]    // Pre-defined
[20:27:11.745]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:27:11.745]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:27:11.745]    __dp=0x00000000
[20:27:11.745]    __ap=0x00000000
[20:27:11.746]    __traceout=0x00000001      (SWO Trace)
[20:27:11.746]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:27:11.746]    __FlashAddr=0x00000000
[20:27:11.746]    __FlashLen=0x00000000
[20:27:11.746]    __FlashArg=0x00000000
[20:27:11.747]    __FlashOp=0x00000000
[20:27:11.747]    __Result=0x00000000
[20:27:11.747]    
[20:27:11.747]    // User-defined
[20:27:11.747]    DbgMCU_CR=0x00000007
[20:27:11.747]    DbgMCU_APB1_Fz=0x00000000
[20:27:11.747]    DbgMCU_APB2_Fz=0x00000000
[20:27:11.748]    TraceClk_Pin=0x00040002
[20:27:11.748]    TraceD0_Pin=0x00040003
[20:27:11.748]    TraceD1_Pin=0x00040004
[20:27:11.748]    TraceD2_Pin=0x00040005
[20:27:11.748]    TraceD3_Pin=0x00040006
[20:27:11.749]  </debugvars>
[20:27:11.749]  
[20:27:11.749]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:27:11.749]    <block atomic="false" info="">
[20:27:11.749]      Sequence("CheckID");
[20:27:11.750]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:27:11.750]          <block atomic="false" info="">
[20:27:11.750]            __var pidr1 = 0;
[20:27:11.750]              // -> [pidr1 <= 0x00000000]
[20:27:11.750]            __var pidr2 = 0;
[20:27:11.751]              // -> [pidr2 <= 0x00000000]
[20:27:11.751]            __var jep106id = 0;
[20:27:11.751]              // -> [jep106id <= 0x00000000]
[20:27:11.751]            __var ROMTableBase = 0;
[20:27:11.751]              // -> [ROMTableBase <= 0x00000000]
[20:27:11.751]            __ap = 0;      // AHB-AP
[20:27:11.752]              // -> [__ap <= 0x00000000]
[20:27:11.752]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:27:11.752]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.752]              // -> [ROMTableBase <= 0xE00FD000]
[20:27:11.753]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:27:11.753]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.753]              // -> [pidr1 <= 0x00000004]
[20:27:11.753]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:27:11.754]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.754]              // -> [pidr2 <= 0x0000001A]
[20:27:11.754]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:27:11.754]              // -> [jep106id <= 0x00000020]
[20:27:11.755]          </block>
[20:27:11.755]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:27:11.755]            // if-block "jep106id != 0x20"
[20:27:11.755]              // =>  FALSE
[20:27:11.755]            // skip if-block "jep106id != 0x20"
[20:27:11.755]          </control>
[20:27:11.755]        </sequence>
[20:27:11.756]    </block>
[20:27:11.756]  </sequence>
[20:27:11.756]  
[20:27:11.771]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:27:11.771]  
[20:27:11.771]  <debugvars>
[20:27:11.771]    // Pre-defined
[20:27:11.771]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:27:11.772]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:27:11.772]    __dp=0x00000000
[20:27:11.772]    __ap=0x00000000
[20:27:11.772]    __traceout=0x00000001      (SWO Trace)
[20:27:11.772]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:27:11.772]    __FlashAddr=0x00000000
[20:27:11.773]    __FlashLen=0x00000000
[20:27:11.773]    __FlashArg=0x00000000
[20:27:11.773]    __FlashOp=0x00000000
[20:27:11.773]    __Result=0x00000000
[20:27:11.773]    
[20:27:11.773]    // User-defined
[20:27:11.773]    DbgMCU_CR=0x00000007
[20:27:11.774]    DbgMCU_APB1_Fz=0x00000000
[20:27:11.774]    DbgMCU_APB2_Fz=0x00000000
[20:27:11.774]    TraceClk_Pin=0x00040002
[20:27:11.774]    TraceD0_Pin=0x00040003
[20:27:11.774]    TraceD1_Pin=0x00040004
[20:27:11.774]    TraceD2_Pin=0x00040005
[20:27:11.775]    TraceD3_Pin=0x00040006
[20:27:11.775]  </debugvars>
[20:27:11.775]  
[20:27:11.775]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:27:11.775]    <block atomic="false" info="">
[20:27:11.775]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:27:11.776]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.776]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:27:11.777]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.777]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:27:11.777]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.778]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:27:11.778]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:27:11.778]    </block>
[20:27:11.778]  </sequence>
[20:27:11.779]  
[20:28:25.943]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:28:25.943]  
[20:28:25.943]  <debugvars>
[20:28:25.943]    // Pre-defined
[20:28:25.943]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:28:25.944]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:28:25.944]    __dp=0x00000000
[20:28:25.944]    __ap=0x00000000
[20:28:25.944]    __traceout=0x00000001      (SWO Trace)
[20:28:25.944]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:28:25.944]    __FlashAddr=0x00000000
[20:28:25.945]    __FlashLen=0x00000000
[20:28:25.945]    __FlashArg=0x00000000
[20:28:25.945]    __FlashOp=0x00000000
[20:28:25.945]    __Result=0x00000000
[20:28:25.945]    
[20:28:25.945]    // User-defined
[20:28:25.945]    DbgMCU_CR=0x00000007
[20:28:25.946]    DbgMCU_APB1_Fz=0x00000000
[20:28:25.946]    DbgMCU_APB2_Fz=0x00000000
[20:28:25.946]    TraceClk_Pin=0x00040002
[20:28:25.946]    TraceD0_Pin=0x00040003
[20:28:25.946]    TraceD1_Pin=0x00040004
[20:28:25.947]    TraceD2_Pin=0x00040005
[20:28:25.947]    TraceD3_Pin=0x00040006
[20:28:25.947]  </debugvars>
[20:28:25.947]  
[20:28:25.947]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:28:25.948]    <block atomic="false" info="">
[20:28:25.948]      Sequence("CheckID");
[20:28:25.948]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:28:25.948]          <block atomic="false" info="">
[20:28:25.948]            __var pidr1 = 0;
[20:28:25.948]              // -> [pidr1 <= 0x00000000]
[20:28:25.949]            __var pidr2 = 0;
[20:28:25.949]              // -> [pidr2 <= 0x00000000]
[20:28:25.949]            __var jep106id = 0;
[20:28:25.949]              // -> [jep106id <= 0x00000000]
[20:28:25.949]            __var ROMTableBase = 0;
[20:28:25.949]              // -> [ROMTableBase <= 0x00000000]
[20:28:25.949]            __ap = 0;      // AHB-AP
[20:28:25.950]              // -> [__ap <= 0x00000000]
[20:28:25.950]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:28:25.950]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.950]              // -> [ROMTableBase <= 0xE00FD000]
[20:28:25.950]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:28:25.951]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.951]              // -> [pidr1 <= 0x00000004]
[20:28:25.951]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:28:25.952]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.952]              // -> [pidr2 <= 0x0000001A]
[20:28:25.952]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:28:25.952]              // -> [jep106id <= 0x00000020]
[20:28:25.952]          </block>
[20:28:25.952]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:28:25.953]            // if-block "jep106id != 0x20"
[20:28:25.953]              // =>  FALSE
[20:28:25.953]            // skip if-block "jep106id != 0x20"
[20:28:25.953]          </control>
[20:28:25.953]        </sequence>
[20:28:25.953]    </block>
[20:28:25.953]  </sequence>
[20:28:25.954]  
[20:28:25.968]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:28:25.968]  
[20:28:25.968]  <debugvars>
[20:28:25.969]    // Pre-defined
[20:28:25.969]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:28:25.969]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:28:25.969]    __dp=0x00000000
[20:28:25.969]    __ap=0x00000000
[20:28:25.970]    __traceout=0x00000001      (SWO Trace)
[20:28:25.970]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:28:25.970]    __FlashAddr=0x00000000
[20:28:25.970]    __FlashLen=0x00000000
[20:28:25.970]    __FlashArg=0x00000000
[20:28:25.970]    __FlashOp=0x00000000
[20:28:25.971]    __Result=0x00000000
[20:28:25.971]    
[20:28:25.971]    // User-defined
[20:28:25.971]    DbgMCU_CR=0x00000007
[20:28:25.971]    DbgMCU_APB1_Fz=0x00000000
[20:28:25.971]    DbgMCU_APB2_Fz=0x00000000
[20:28:25.972]    TraceClk_Pin=0x00040002
[20:28:25.972]    TraceD0_Pin=0x00040003
[20:28:25.972]    TraceD1_Pin=0x00040004
[20:28:25.972]    TraceD2_Pin=0x00040005
[20:28:25.972]    TraceD3_Pin=0x00040006
[20:28:25.972]  </debugvars>
[20:28:25.972]  
[20:28:25.972]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:28:25.973]    <block atomic="false" info="">
[20:28:25.973]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:28:25.973]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.973]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:28:25.974]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.974]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:28:25.974]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.975]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:28:25.975]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:28:25.975]    </block>
[20:28:25.975]  </sequence>
[20:28:25.975]  
[20:31:24.494]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:31:24.494]  
[20:31:24.494]  <debugvars>
[20:31:24.495]    // Pre-defined
[20:31:24.495]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:31:24.495]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:31:24.495]    __dp=0x00000000
[20:31:24.495]    __ap=0x00000000
[20:31:24.495]    __traceout=0x00000001      (SWO Trace)
[20:31:24.496]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:31:24.496]    __FlashAddr=0x00000000
[20:31:24.496]    __FlashLen=0x00000000
[20:31:24.496]    __FlashArg=0x00000000
[20:31:24.497]    __FlashOp=0x00000000
[20:31:24.497]    __Result=0x00000000
[20:31:24.497]    
[20:31:24.497]    // User-defined
[20:31:24.497]    DbgMCU_CR=0x00000007
[20:31:24.497]    DbgMCU_APB1_Fz=0x00000000
[20:31:24.498]    DbgMCU_APB2_Fz=0x00000000
[20:31:24.498]    TraceClk_Pin=0x00040002
[20:31:24.498]    TraceD0_Pin=0x00040003
[20:31:24.498]    TraceD1_Pin=0x00040004
[20:31:24.498]    TraceD2_Pin=0x00040005
[20:31:24.498]    TraceD3_Pin=0x00040006
[20:31:24.499]  </debugvars>
[20:31:24.499]  
[20:31:24.499]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:31:24.499]    <block atomic="false" info="">
[20:31:24.499]      Sequence("CheckID");
[20:31:24.499]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:31:24.499]          <block atomic="false" info="">
[20:31:24.500]            __var pidr1 = 0;
[20:31:24.500]              // -> [pidr1 <= 0x00000000]
[20:31:24.500]            __var pidr2 = 0;
[20:31:24.500]              // -> [pidr2 <= 0x00000000]
[20:31:24.500]            __var jep106id = 0;
[20:31:24.500]              // -> [jep106id <= 0x00000000]
[20:31:24.500]            __var ROMTableBase = 0;
[20:31:24.500]              // -> [ROMTableBase <= 0x00000000]
[20:31:24.501]            __ap = 0;      // AHB-AP
[20:31:24.501]              // -> [__ap <= 0x00000000]
[20:31:24.501]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:31:24.501]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.501]              // -> [ROMTableBase <= 0xE00FD000]
[20:31:24.501]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:31:24.502]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.502]              // -> [pidr1 <= 0x00000004]
[20:31:24.502]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:31:24.503]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.503]              // -> [pidr2 <= 0x0000001A]
[20:31:24.503]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:31:24.503]              // -> [jep106id <= 0x00000020]
[20:31:24.503]          </block>
[20:31:24.503]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:31:24.503]            // if-block "jep106id != 0x20"
[20:31:24.503]              // =>  FALSE
[20:31:24.503]            // skip if-block "jep106id != 0x20"
[20:31:24.504]          </control>
[20:31:24.504]        </sequence>
[20:31:24.504]    </block>
[20:31:24.504]  </sequence>
[20:31:24.504]  
[20:31:24.519]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:31:24.519]  
[20:31:24.519]  <debugvars>
[20:31:24.519]    // Pre-defined
[20:31:24.519]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:31:24.520]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:31:24.520]    __dp=0x00000000
[20:31:24.520]    __ap=0x00000000
[20:31:24.520]    __traceout=0x00000001      (SWO Trace)
[20:31:24.520]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:31:24.520]    __FlashAddr=0x00000000
[20:31:24.521]    __FlashLen=0x00000000
[20:31:24.521]    __FlashArg=0x00000000
[20:31:24.521]    __FlashOp=0x00000000
[20:31:24.521]    __Result=0x00000000
[20:31:24.521]    
[20:31:24.521]    // User-defined
[20:31:24.521]    DbgMCU_CR=0x00000007
[20:31:24.522]    DbgMCU_APB1_Fz=0x00000000
[20:31:24.522]    DbgMCU_APB2_Fz=0x00000000
[20:31:24.522]    TraceClk_Pin=0x00040002
[20:31:24.522]    TraceD0_Pin=0x00040003
[20:31:24.522]    TraceD1_Pin=0x00040004
[20:31:24.523]    TraceD2_Pin=0x00040005
[20:31:24.523]    TraceD3_Pin=0x00040006
[20:31:24.523]  </debugvars>
[20:31:24.523]  
[20:31:24.523]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:31:24.523]    <block atomic="false" info="">
[20:31:24.523]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:31:24.524]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.524]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:31:24.525]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.525]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:31:24.525]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.525]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:31:24.526]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:31:24.526]    </block>
[20:31:24.526]  </sequence>
[20:31:24.526]  
[20:32:41.695]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:32:41.695]  
[20:32:41.695]  <debugvars>
[20:32:41.695]    // Pre-defined
[20:32:41.695]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:32:41.695]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:32:41.696]    __dp=0x00000000
[20:32:41.696]    __ap=0x00000000
[20:32:41.696]    __traceout=0x00000001      (SWO Trace)
[20:32:41.696]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:32:41.696]    __FlashAddr=0x00000000
[20:32:41.697]    __FlashLen=0x00000000
[20:32:41.697]    __FlashArg=0x00000000
[20:32:41.697]    __FlashOp=0x00000000
[20:32:41.697]    __Result=0x00000000
[20:32:41.697]    
[20:32:41.697]    // User-defined
[20:32:41.698]    DbgMCU_CR=0x00000007
[20:32:41.698]    DbgMCU_APB1_Fz=0x00000000
[20:32:41.698]    DbgMCU_APB2_Fz=0x00000000
[20:32:41.698]    TraceClk_Pin=0x00040002
[20:32:41.698]    TraceD0_Pin=0x00040003
[20:32:41.698]    TraceD1_Pin=0x00040004
[20:32:41.699]    TraceD2_Pin=0x00040005
[20:32:41.699]    TraceD3_Pin=0x00040006
[20:32:41.699]  </debugvars>
[20:32:41.699]  
[20:32:41.699]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:32:41.700]    <block atomic="false" info="">
[20:32:41.700]      Sequence("CheckID");
[20:32:41.700]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:32:41.700]          <block atomic="false" info="">
[20:32:41.700]            __var pidr1 = 0;
[20:32:41.701]              // -> [pidr1 <= 0x00000000]
[20:32:41.701]            __var pidr2 = 0;
[20:32:41.701]              // -> [pidr2 <= 0x00000000]
[20:32:41.701]            __var jep106id = 0;
[20:32:41.702]              // -> [jep106id <= 0x00000000]
[20:32:41.702]            __var ROMTableBase = 0;
[20:32:41.702]              // -> [ROMTableBase <= 0x00000000]
[20:32:41.702]            __ap = 0;      // AHB-AP
[20:32:41.702]              // -> [__ap <= 0x00000000]
[20:32:41.702]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:32:41.703]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.703]              // -> [ROMTableBase <= 0xE00FD000]
[20:32:41.703]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:32:41.704]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.704]              // -> [pidr1 <= 0x00000004]
[20:32:41.704]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:32:41.704]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.704]              // -> [pidr2 <= 0x0000001A]
[20:32:41.705]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:32:41.705]              // -> [jep106id <= 0x00000020]
[20:32:41.705]          </block>
[20:32:41.705]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:32:41.705]            // if-block "jep106id != 0x20"
[20:32:41.705]              // =>  FALSE
[20:32:41.705]            // skip if-block "jep106id != 0x20"
[20:32:41.705]          </control>
[20:32:41.706]        </sequence>
[20:32:41.706]    </block>
[20:32:41.706]  </sequence>
[20:32:41.706]  
[20:32:41.721]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:32:41.721]  
[20:32:41.721]  <debugvars>
[20:32:41.721]    // Pre-defined
[20:32:41.721]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:32:41.722]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:32:41.722]    __dp=0x00000000
[20:32:41.722]    __ap=0x00000000
[20:32:41.722]    __traceout=0x00000001      (SWO Trace)
[20:32:41.722]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:32:41.723]    __FlashAddr=0x00000000
[20:32:41.723]    __FlashLen=0x00000000
[20:32:41.723]    __FlashArg=0x00000000
[20:32:41.723]    __FlashOp=0x00000000
[20:32:41.723]    __Result=0x00000000
[20:32:41.723]    
[20:32:41.723]    // User-defined
[20:32:41.724]    DbgMCU_CR=0x00000007
[20:32:41.724]    DbgMCU_APB1_Fz=0x00000000
[20:32:41.724]    DbgMCU_APB2_Fz=0x00000000
[20:32:41.724]    TraceClk_Pin=0x00040002
[20:32:41.724]    TraceD0_Pin=0x00040003
[20:32:41.725]    TraceD1_Pin=0x00040004
[20:32:41.725]    TraceD2_Pin=0x00040005
[20:32:41.725]    TraceD3_Pin=0x00040006
[20:32:41.725]  </debugvars>
[20:32:41.725]  
[20:32:41.725]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:32:41.726]    <block atomic="false" info="">
[20:32:41.726]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:32:41.726]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.727]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:32:41.727]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.727]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:32:41.728]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.728]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:32:41.729]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:32:41.729]    </block>
[20:32:41.729]  </sequence>
[20:32:41.729]  
[20:33:40.606]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:33:40.606]  
[20:33:40.606]  <debugvars>
[20:33:40.606]    // Pre-defined
[20:33:40.607]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:33:40.607]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:33:40.607]    __dp=0x00000000
[20:33:40.607]    __ap=0x00000000
[20:33:40.607]    __traceout=0x00000001      (SWO Trace)
[20:33:40.607]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:33:40.608]    __FlashAddr=0x00000000
[20:33:40.608]    __FlashLen=0x00000000
[20:33:40.608]    __FlashArg=0x00000000
[20:33:40.608]    __FlashOp=0x00000000
[20:33:40.608]    __Result=0x00000000
[20:33:40.608]    
[20:33:40.608]    // User-defined
[20:33:40.609]    DbgMCU_CR=0x00000007
[20:33:40.609]    DbgMCU_APB1_Fz=0x00000000
[20:33:40.609]    DbgMCU_APB2_Fz=0x00000000
[20:33:40.609]    TraceClk_Pin=0x00040002
[20:33:40.609]    TraceD0_Pin=0x00040003
[20:33:40.609]    TraceD1_Pin=0x00040004
[20:33:40.609]    TraceD2_Pin=0x00040005
[20:33:40.610]    TraceD3_Pin=0x00040006
[20:33:40.610]  </debugvars>
[20:33:40.610]  
[20:33:40.610]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:33:40.610]    <block atomic="false" info="">
[20:33:40.610]      Sequence("CheckID");
[20:33:40.610]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:33:40.611]          <block atomic="false" info="">
[20:33:40.611]            __var pidr1 = 0;
[20:33:40.611]              // -> [pidr1 <= 0x00000000]
[20:33:40.611]            __var pidr2 = 0;
[20:33:40.611]              // -> [pidr2 <= 0x00000000]
[20:33:40.611]            __var jep106id = 0;
[20:33:40.611]              // -> [jep106id <= 0x00000000]
[20:33:40.611]            __var ROMTableBase = 0;
[20:33:40.612]              // -> [ROMTableBase <= 0x00000000]
[20:33:40.612]            __ap = 0;      // AHB-AP
[20:33:40.612]              // -> [__ap <= 0x00000000]
[20:33:40.612]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:33:40.612]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.613]              // -> [ROMTableBase <= 0xE00FD000]
[20:33:40.613]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:33:40.613]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.613]              // -> [pidr1 <= 0x00000004]
[20:33:40.614]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:33:40.614]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.614]              // -> [pidr2 <= 0x0000001A]
[20:33:40.614]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:33:40.614]              // -> [jep106id <= 0x00000020]
[20:33:40.615]          </block>
[20:33:40.615]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:33:40.615]            // if-block "jep106id != 0x20"
[20:33:40.615]              // =>  FALSE
[20:33:40.615]            // skip if-block "jep106id != 0x20"
[20:33:40.615]          </control>
[20:33:40.615]        </sequence>
[20:33:40.616]    </block>
[20:33:40.616]  </sequence>
[20:33:40.616]  
[20:33:40.631]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:33:40.631]  
[20:33:40.631]  <debugvars>
[20:33:40.631]    // Pre-defined
[20:33:40.631]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:33:40.632]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:33:40.632]    __dp=0x00000000
[20:33:40.632]    __ap=0x00000000
[20:33:40.632]    __traceout=0x00000001      (SWO Trace)
[20:33:40.632]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:33:40.632]    __FlashAddr=0x00000000
[20:33:40.633]    __FlashLen=0x00000000
[20:33:40.633]    __FlashArg=0x00000000
[20:33:40.633]    __FlashOp=0x00000000
[20:33:40.633]    __Result=0x00000000
[20:33:40.633]    
[20:33:40.633]    // User-defined
[20:33:40.633]    DbgMCU_CR=0x00000007
[20:33:40.634]    DbgMCU_APB1_Fz=0x00000000
[20:33:40.634]    DbgMCU_APB2_Fz=0x00000000
[20:33:40.634]    TraceClk_Pin=0x00040002
[20:33:40.634]    TraceD0_Pin=0x00040003
[20:33:40.634]    TraceD1_Pin=0x00040004
[20:33:40.634]    TraceD2_Pin=0x00040005
[20:33:40.635]    TraceD3_Pin=0x00040006
[20:33:40.635]  </debugvars>
[20:33:40.635]  
[20:33:40.635]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:33:40.635]    <block atomic="false" info="">
[20:33:40.635]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:33:40.636]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.636]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:33:40.637]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.637]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:33:40.638]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.638]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:33:40.638]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:33:40.638]    </block>
[20:33:40.639]  </sequence>
[20:33:40.639]  
[20:34:40.118]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:34:40.118]  
[20:34:40.119]  <debugvars>
[20:34:40.119]    // Pre-defined
[20:34:40.119]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:34:40.119]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:34:40.119]    __dp=0x00000000
[20:34:40.119]    __ap=0x00000000
[20:34:40.120]    __traceout=0x00000001      (SWO Trace)
[20:34:40.120]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:34:40.120]    __FlashAddr=0x00000000
[20:34:40.120]    __FlashLen=0x00000000
[20:34:40.120]    __FlashArg=0x00000000
[20:34:40.120]    __FlashOp=0x00000000
[20:34:40.120]    __Result=0x00000000
[20:34:40.121]    
[20:34:40.121]    // User-defined
[20:34:40.121]    DbgMCU_CR=0x00000007
[20:34:40.121]    DbgMCU_APB1_Fz=0x00000000
[20:34:40.121]    DbgMCU_APB2_Fz=0x00000000
[20:34:40.121]    TraceClk_Pin=0x00040002
[20:34:40.121]    TraceD0_Pin=0x00040003
[20:34:40.121]    TraceD1_Pin=0x00040004
[20:34:40.122]    TraceD2_Pin=0x00040005
[20:34:40.122]    TraceD3_Pin=0x00040006
[20:34:40.122]  </debugvars>
[20:34:40.122]  
[20:34:40.122]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:34:40.122]    <block atomic="false" info="">
[20:34:40.122]      Sequence("CheckID");
[20:34:40.122]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:34:40.123]          <block atomic="false" info="">
[20:34:40.123]            __var pidr1 = 0;
[20:34:40.123]              // -> [pidr1 <= 0x00000000]
[20:34:40.123]            __var pidr2 = 0;
[20:34:40.123]              // -> [pidr2 <= 0x00000000]
[20:34:40.123]            __var jep106id = 0;
[20:34:40.124]              // -> [jep106id <= 0x00000000]
[20:34:40.124]            __var ROMTableBase = 0;
[20:34:40.124]              // -> [ROMTableBase <= 0x00000000]
[20:34:40.124]            __ap = 0;      // AHB-AP
[20:34:40.124]              // -> [__ap <= 0x00000000]
[20:34:40.124]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:34:40.125]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.125]              // -> [ROMTableBase <= 0xE00FD000]
[20:34:40.125]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:34:40.126]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.126]              // -> [pidr1 <= 0x00000004]
[20:34:40.126]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:34:40.126]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.127]              // -> [pidr2 <= 0x0000001A]
[20:34:40.127]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:34:40.127]              // -> [jep106id <= 0x00000020]
[20:34:40.127]          </block>
[20:34:40.127]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:34:40.127]            // if-block "jep106id != 0x20"
[20:34:40.127]              // =>  FALSE
[20:34:40.128]            // skip if-block "jep106id != 0x20"
[20:34:40.128]          </control>
[20:34:40.128]        </sequence>
[20:34:40.128]    </block>
[20:34:40.128]  </sequence>
[20:34:40.128]  
[20:34:40.143]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:34:40.143]  
[20:34:40.143]  <debugvars>
[20:34:40.143]    // Pre-defined
[20:34:40.143]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:34:40.143]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:34:40.144]    __dp=0x00000000
[20:34:40.144]    __ap=0x00000000
[20:34:40.144]    __traceout=0x00000001      (SWO Trace)
[20:34:40.144]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:34:40.144]    __FlashAddr=0x00000000
[20:34:40.144]    __FlashLen=0x00000000
[20:34:40.145]    __FlashArg=0x00000000
[20:34:40.145]    __FlashOp=0x00000000
[20:34:40.145]    __Result=0x00000000
[20:34:40.145]    
[20:34:40.145]    // User-defined
[20:34:40.145]    DbgMCU_CR=0x00000007
[20:34:40.145]    DbgMCU_APB1_Fz=0x00000000
[20:34:40.146]    DbgMCU_APB2_Fz=0x00000000
[20:34:40.146]    TraceClk_Pin=0x00040002
[20:34:40.146]    TraceD0_Pin=0x00040003
[20:34:40.146]    TraceD1_Pin=0x00040004
[20:34:40.146]    TraceD2_Pin=0x00040005
[20:34:40.146]    TraceD3_Pin=0x00040006
[20:34:40.147]  </debugvars>
[20:34:40.147]  
[20:34:40.147]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:34:40.147]    <block atomic="false" info="">
[20:34:40.147]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:34:40.148]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.148]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:34:40.149]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.149]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:34:40.149]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.149]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:34:40.150]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:34:40.150]    </block>
[20:34:40.150]  </sequence>
[20:34:40.150]  
[20:35:40.286]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:35:40.286]  
[20:35:40.286]  <debugvars>
[20:35:40.287]    // Pre-defined
[20:35:40.287]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:40.287]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:35:40.287]    __dp=0x00000000
[20:35:40.287]    __ap=0x00000000
[20:35:40.287]    __traceout=0x00000001      (SWO Trace)
[20:35:40.288]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:40.288]    __FlashAddr=0x00000000
[20:35:40.288]    __FlashLen=0x00000000
[20:35:40.288]    __FlashArg=0x00000000
[20:35:40.288]    __FlashOp=0x00000000
[20:35:40.289]    __Result=0x00000000
[20:35:40.289]    
[20:35:40.289]    // User-defined
[20:35:40.289]    DbgMCU_CR=0x00000007
[20:35:40.289]    DbgMCU_APB1_Fz=0x00000000
[20:35:40.289]    DbgMCU_APB2_Fz=0x00000000
[20:35:40.289]    TraceClk_Pin=0x00040002
[20:35:40.290]    TraceD0_Pin=0x00040003
[20:35:40.290]    TraceD1_Pin=0x00040004
[20:35:40.290]    TraceD2_Pin=0x00040005
[20:35:40.290]    TraceD3_Pin=0x00040006
[20:35:40.290]  </debugvars>
[20:35:40.290]  
[20:35:40.291]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:35:40.291]    <block atomic="false" info="">
[20:35:40.291]      Sequence("CheckID");
[20:35:40.291]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:35:40.291]          <block atomic="false" info="">
[20:35:40.291]            __var pidr1 = 0;
[20:35:40.292]              // -> [pidr1 <= 0x00000000]
[20:35:40.292]            __var pidr2 = 0;
[20:35:40.292]              // -> [pidr2 <= 0x00000000]
[20:35:40.292]            __var jep106id = 0;
[20:35:40.292]              // -> [jep106id <= 0x00000000]
[20:35:40.292]            __var ROMTableBase = 0;
[20:35:40.293]              // -> [ROMTableBase <= 0x00000000]
[20:35:40.293]            __ap = 0;      // AHB-AP
[20:35:40.293]              // -> [__ap <= 0x00000000]
[20:35:40.293]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:35:40.293]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.294]              // -> [ROMTableBase <= 0xE00FD000]
[20:35:40.294]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:35:40.294]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.295]              // -> [pidr1 <= 0x00000004]
[20:35:40.295]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:35:40.295]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.295]              // -> [pidr2 <= 0x0000001A]
[20:35:40.296]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:35:40.296]              // -> [jep106id <= 0x00000020]
[20:35:40.296]          </block>
[20:35:40.296]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:35:40.296]            // if-block "jep106id != 0x20"
[20:35:40.296]              // =>  FALSE
[20:35:40.296]            // skip if-block "jep106id != 0x20"
[20:35:40.297]          </control>
[20:35:40.297]        </sequence>
[20:35:40.297]    </block>
[20:35:40.297]  </sequence>
[20:35:40.297]  
[20:35:40.311]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:35:40.311]  
[20:35:40.311]  <debugvars>
[20:35:40.312]    // Pre-defined
[20:35:40.312]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:35:40.312]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:35:40.312]    __dp=0x00000000
[20:35:40.312]    __ap=0x00000000
[20:35:40.313]    __traceout=0x00000001      (SWO Trace)
[20:35:40.313]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:35:40.313]    __FlashAddr=0x00000000
[20:35:40.313]    __FlashLen=0x00000000
[20:35:40.313]    __FlashArg=0x00000000
[20:35:40.313]    __FlashOp=0x00000000
[20:35:40.313]    __Result=0x00000000
[20:35:40.314]    
[20:35:40.314]    // User-defined
[20:35:40.314]    DbgMCU_CR=0x00000007
[20:35:40.314]    DbgMCU_APB1_Fz=0x00000000
[20:35:40.314]    DbgMCU_APB2_Fz=0x00000000
[20:35:40.314]    TraceClk_Pin=0x00040002
[20:35:40.314]    TraceD0_Pin=0x00040003
[20:35:40.314]    TraceD1_Pin=0x00040004
[20:35:40.314]    TraceD2_Pin=0x00040005
[20:35:40.315]    TraceD3_Pin=0x00040006
[20:35:40.315]  </debugvars>
[20:35:40.315]  
[20:35:40.315]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:35:40.315]    <block atomic="false" info="">
[20:35:40.315]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:35:40.316]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.316]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:35:40.316]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.316]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:35:40.317]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.317]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:35:40.317]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:35:40.318]    </block>
[20:35:40.318]  </sequence>
[20:35:40.318]  
[20:37:43.806]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:37:43.806]  
[20:37:43.806]  <debugvars>
[20:37:43.806]    // Pre-defined
[20:37:43.806]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:43.806]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:37:43.806]    __dp=0x00000000
[20:37:43.806]    __ap=0x00000000
[20:37:43.807]    __traceout=0x00000001      (SWO Trace)
[20:37:43.807]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:43.807]    __FlashAddr=0x00000000
[20:37:43.807]    __FlashLen=0x00000000
[20:37:43.807]    __FlashArg=0x00000000
[20:37:43.807]    __FlashOp=0x00000000
[20:37:43.807]    __Result=0x00000000
[20:37:43.807]    
[20:37:43.807]    // User-defined
[20:37:43.808]    DbgMCU_CR=0x00000007
[20:37:43.808]    DbgMCU_APB1_Fz=0x00000000
[20:37:43.808]    DbgMCU_APB2_Fz=0x00000000
[20:37:43.808]    TraceClk_Pin=0x00040002
[20:37:43.808]    TraceD0_Pin=0x00040003
[20:37:43.808]    TraceD1_Pin=0x00040004
[20:37:43.808]    TraceD2_Pin=0x00040005
[20:37:43.808]    TraceD3_Pin=0x00040006
[20:37:43.808]  </debugvars>
[20:37:43.809]  
[20:37:43.809]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:37:43.809]    <block atomic="false" info="">
[20:37:43.809]      Sequence("CheckID");
[20:37:43.809]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:37:43.809]          <block atomic="false" info="">
[20:37:43.809]            __var pidr1 = 0;
[20:37:43.810]              // -> [pidr1 <= 0x00000000]
[20:37:43.810]            __var pidr2 = 0;
[20:37:43.810]              // -> [pidr2 <= 0x00000000]
[20:37:43.810]            __var jep106id = 0;
[20:37:43.810]              // -> [jep106id <= 0x00000000]
[20:37:43.810]            __var ROMTableBase = 0;
[20:37:43.810]              // -> [ROMTableBase <= 0x00000000]
[20:37:43.810]            __ap = 0;      // AHB-AP
[20:37:43.811]              // -> [__ap <= 0x00000000]
[20:37:43.811]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:37:43.811]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.811]              // -> [ROMTableBase <= 0xE00FD000]
[20:37:43.811]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:37:43.812]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.812]              // -> [pidr1 <= 0x00000004]
[20:37:43.812]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:37:43.812]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.813]              // -> [pidr2 <= 0x0000001A]
[20:37:43.813]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:37:43.813]              // -> [jep106id <= 0x00000020]
[20:37:43.813]          </block>
[20:37:43.813]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:37:43.813]            // if-block "jep106id != 0x20"
[20:37:43.813]              // =>  FALSE
[20:37:43.813]            // skip if-block "jep106id != 0x20"
[20:37:43.814]          </control>
[20:37:43.814]        </sequence>
[20:37:43.814]    </block>
[20:37:43.814]  </sequence>
[20:37:43.814]  
[20:37:43.829]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:37:43.829]  
[20:37:43.829]  <debugvars>
[20:37:43.829]    // Pre-defined
[20:37:43.829]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:43.829]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:37:43.829]    __dp=0x00000000
[20:37:43.829]    __ap=0x00000000
[20:37:43.830]    __traceout=0x00000001      (SWO Trace)
[20:37:43.830]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:43.830]    __FlashAddr=0x00000000
[20:37:43.830]    __FlashLen=0x00000000
[20:37:43.830]    __FlashArg=0x00000000
[20:37:43.830]    __FlashOp=0x00000000
[20:37:43.830]    __Result=0x00000000
[20:37:43.830]    
[20:37:43.830]    // User-defined
[20:37:43.831]    DbgMCU_CR=0x00000007
[20:37:43.831]    DbgMCU_APB1_Fz=0x00000000
[20:37:43.831]    DbgMCU_APB2_Fz=0x00000000
[20:37:43.831]    TraceClk_Pin=0x00040002
[20:37:43.831]    TraceD0_Pin=0x00040003
[20:37:43.831]    TraceD1_Pin=0x00040004
[20:37:43.831]    TraceD2_Pin=0x00040005
[20:37:43.831]    TraceD3_Pin=0x00040006
[20:37:43.832]  </debugvars>
[20:37:43.832]  
[20:37:43.832]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:37:43.832]    <block atomic="false" info="">
[20:37:43.832]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:37:43.833]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.833]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:37:43.833]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.833]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:37:43.834]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.834]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:37:43.834]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:43.835]    </block>
[20:37:43.835]  </sequence>
[20:37:43.835]  
[20:40:49.439]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:40:49.439]  
[20:40:49.440]  <debugvars>
[20:40:49.440]    // Pre-defined
[20:40:49.440]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:49.440]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:40:49.440]    __dp=0x00000000
[20:40:49.441]    __ap=0x00000000
[20:40:49.441]    __traceout=0x00000001      (SWO Trace)
[20:40:49.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:49.441]    __FlashAddr=0x00000000
[20:40:49.441]    __FlashLen=0x00000000
[20:40:49.441]    __FlashArg=0x00000000
[20:40:49.442]    __FlashOp=0x00000000
[20:40:49.442]    __Result=0x00000000
[20:40:49.442]    
[20:40:49.442]    // User-defined
[20:40:49.442]    DbgMCU_CR=0x00000007
[20:40:49.442]    DbgMCU_APB1_Fz=0x00000000
[20:40:49.442]    DbgMCU_APB2_Fz=0x00000000
[20:40:49.443]    TraceClk_Pin=0x00040002
[20:40:49.443]    TraceD0_Pin=0x00040003
[20:40:49.443]    TraceD1_Pin=0x00040004
[20:40:49.443]    TraceD2_Pin=0x00040005
[20:40:49.443]    TraceD3_Pin=0x00040006
[20:40:49.443]  </debugvars>
[20:40:49.443]  
[20:40:49.444]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:40:49.444]    <block atomic="false" info="">
[20:40:49.444]      Sequence("CheckID");
[20:40:49.444]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:40:49.444]          <block atomic="false" info="">
[20:40:49.444]            __var pidr1 = 0;
[20:40:49.444]              // -> [pidr1 <= 0x00000000]
[20:40:49.444]            __var pidr2 = 0;
[20:40:49.444]              // -> [pidr2 <= 0x00000000]
[20:40:49.445]            __var jep106id = 0;
[20:40:49.445]              // -> [jep106id <= 0x00000000]
[20:40:49.445]            __var ROMTableBase = 0;
[20:40:49.445]              // -> [ROMTableBase <= 0x00000000]
[20:40:49.445]            __ap = 0;      // AHB-AP
[20:40:49.445]              // -> [__ap <= 0x00000000]
[20:40:49.445]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:40:49.446]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.446]              // -> [ROMTableBase <= 0xE00FD000]
[20:40:49.446]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:40:49.446]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.446]              // -> [pidr1 <= 0x00000004]
[20:40:49.447]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:40:49.447]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.447]              // -> [pidr2 <= 0x0000001A]
[20:40:49.447]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:40:49.447]              // -> [jep106id <= 0x00000020]
[20:40:49.447]          </block>
[20:40:49.448]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:40:49.448]            // if-block "jep106id != 0x20"
[20:40:49.448]              // =>  FALSE
[20:40:49.448]            // skip if-block "jep106id != 0x20"
[20:40:49.448]          </control>
[20:40:49.448]        </sequence>
[20:40:49.448]    </block>
[20:40:49.448]  </sequence>
[20:40:49.449]  
[20:40:49.464]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:40:49.464]  
[20:40:49.465]  <debugvars>
[20:40:49.465]    // Pre-defined
[20:40:49.465]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:49.465]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:40:49.465]    __dp=0x00000000
[20:40:49.466]    __ap=0x00000000
[20:40:49.466]    __traceout=0x00000001      (SWO Trace)
[20:40:49.466]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:49.466]    __FlashAddr=0x00000000
[20:40:49.466]    __FlashLen=0x00000000
[20:40:49.466]    __FlashArg=0x00000000
[20:40:49.467]    __FlashOp=0x00000000
[20:40:49.467]    __Result=0x00000000
[20:40:49.467]    
[20:40:49.467]    // User-defined
[20:40:49.467]    DbgMCU_CR=0x00000007
[20:40:49.467]    DbgMCU_APB1_Fz=0x00000000
[20:40:49.467]    DbgMCU_APB2_Fz=0x00000000
[20:40:49.467]    TraceClk_Pin=0x00040002
[20:40:49.468]    TraceD0_Pin=0x00040003
[20:40:49.468]    TraceD1_Pin=0x00040004
[20:40:49.468]    TraceD2_Pin=0x00040005
[20:40:49.468]    TraceD3_Pin=0x00040006
[20:40:49.468]  </debugvars>
[20:40:49.468]  
[20:40:49.469]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:40:49.469]    <block atomic="false" info="">
[20:40:49.469]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:40:49.469]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.470]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:40:49.470]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.470]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:40:49.471]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.471]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:40:49.471]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:49.472]    </block>
[20:40:49.472]  </sequence>
[20:40:49.472]  
[20:56:53.728]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:56:53.728]  
[20:56:53.729]  <debugvars>
[20:56:53.729]    // Pre-defined
[20:56:53.729]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:56:53.729]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:56:53.729]    __dp=0x00000000
[20:56:53.729]    __ap=0x00000000
[20:56:53.729]    __traceout=0x00000001      (SWO Trace)
[20:56:53.729]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:56:53.730]    __FlashAddr=0x00000000
[20:56:53.730]    __FlashLen=0x00000000
[20:56:53.730]    __FlashArg=0x00000000
[20:56:53.730]    __FlashOp=0x00000000
[20:56:53.730]    __Result=0x00000000
[20:56:53.730]    
[20:56:53.730]    // User-defined
[20:56:53.730]    DbgMCU_CR=0x00000007
[20:56:53.730]    DbgMCU_APB1_Fz=0x00000000
[20:56:53.730]    DbgMCU_APB2_Fz=0x00000000
[20:56:53.731]    TraceClk_Pin=0x00040002
[20:56:53.731]    TraceD0_Pin=0x00040003
[20:56:53.731]    TraceD1_Pin=0x00040004
[20:56:53.731]    TraceD2_Pin=0x00040005
[20:56:53.731]    TraceD3_Pin=0x00040006
[20:56:53.731]  </debugvars>
[20:56:53.731]  
[20:56:53.731]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:56:53.731]    <block atomic="false" info="">
[20:56:53.732]      Sequence("CheckID");
[20:56:53.732]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:56:53.732]          <block atomic="false" info="">
[20:56:53.732]            __var pidr1 = 0;
[20:56:53.732]              // -> [pidr1 <= 0x00000000]
[20:56:53.732]            __var pidr2 = 0;
[20:56:53.732]              // -> [pidr2 <= 0x00000000]
[20:56:53.732]            __var jep106id = 0;
[20:56:53.733]              // -> [jep106id <= 0x00000000]
[20:56:53.733]            __var ROMTableBase = 0;
[20:56:53.733]              // -> [ROMTableBase <= 0x00000000]
[20:56:53.733]            __ap = 0;      // AHB-AP
[20:56:53.733]              // -> [__ap <= 0x00000000]
[20:56:53.733]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:56:53.734]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.734]              // -> [ROMTableBase <= 0xE00FD000]
[20:56:53.734]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:56:53.734]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.735]              // -> [pidr1 <= 0x00000004]
[20:56:53.735]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:56:53.735]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.735]              // -> [pidr2 <= 0x0000001A]
[20:56:53.735]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:56:53.736]              // -> [jep106id <= 0x00000020]
[20:56:53.736]          </block>
[20:56:53.736]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:56:53.736]            // if-block "jep106id != 0x20"
[20:56:53.736]              // =>  FALSE
[20:56:53.736]            // skip if-block "jep106id != 0x20"
[20:56:53.736]          </control>
[20:56:53.736]        </sequence>
[20:56:53.736]    </block>
[20:56:53.737]  </sequence>
[20:56:53.737]  
[20:56:53.752]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:56:53.752]  
[20:56:53.752]  <debugvars>
[20:56:53.752]    // Pre-defined
[20:56:53.752]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:56:53.752]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:56:53.753]    __dp=0x00000000
[20:56:53.753]    __ap=0x00000000
[20:56:53.753]    __traceout=0x00000001      (SWO Trace)
[20:56:53.753]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:56:53.753]    __FlashAddr=0x00000000
[20:56:53.753]    __FlashLen=0x00000000
[20:56:53.753]    __FlashArg=0x00000000
[20:56:53.753]    __FlashOp=0x00000000
[20:56:53.754]    __Result=0x00000000
[20:56:53.754]    
[20:56:53.754]    // User-defined
[20:56:53.754]    DbgMCU_CR=0x00000007
[20:56:53.754]    DbgMCU_APB1_Fz=0x00000000
[20:56:53.754]    DbgMCU_APB2_Fz=0x00000000
[20:56:53.754]    TraceClk_Pin=0x00040002
[20:56:53.754]    TraceD0_Pin=0x00040003
[20:56:53.755]    TraceD1_Pin=0x00040004
[20:56:53.755]    TraceD2_Pin=0x00040005
[20:56:53.755]    TraceD3_Pin=0x00040006
[20:56:53.755]  </debugvars>
[20:56:53.755]  
[20:56:53.755]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:56:53.756]    <block atomic="false" info="">
[20:56:53.756]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:56:53.756]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.756]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:56:53.757]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.757]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:56:53.757]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.758]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:56:53.758]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:53.758]    </block>
[20:56:53.758]  </sequence>
[20:56:53.759]  
