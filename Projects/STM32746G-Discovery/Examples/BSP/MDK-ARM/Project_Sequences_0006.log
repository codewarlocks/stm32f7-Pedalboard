/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0006.log
 *  Created     : 12:53:48 (30/04/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[12:53:48.935]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[12:53:48.935]  
[12:53:48.935]  <debugvars>
[12:53:48.935]    // Pre-defined
[12:53:48.935]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:53:48.935]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[12:53:48.935]    __dp=0x00000000
[12:53:48.935]    __ap=0x00000000
[12:53:48.936]    __traceout=0x00000001      (SWO Trace)
[12:53:48.936]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:53:48.936]    __FlashAddr=0x00000000
[12:53:48.936]    __FlashLen=0x00000000
[12:53:48.936]    __FlashArg=0x00000000
[12:53:48.936]    __FlashOp=0x00000000
[12:53:48.937]    __Result=0x00000000
[12:53:48.937]    
[12:53:48.937]    // User-defined
[12:53:48.937]    DbgMCU_CR=0x00000007
[12:53:48.937]    DbgMCU_APB1_Fz=0x00000000
[12:53:48.937]    DbgMCU_APB2_Fz=0x00000000
[12:53:48.937]    TraceClk_Pin=0x00040002
[12:53:48.937]    TraceD0_Pin=0x00040003
[12:53:48.937]    TraceD1_Pin=0x00040004
[12:53:48.938]    TraceD2_Pin=0x00040005
[12:53:48.938]    TraceD3_Pin=0x00040006
[12:53:48.938]  </debugvars>
[12:53:48.938]  
[12:53:48.938]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[12:53:48.938]    <block atomic="false" info="">
[12:53:48.938]      Sequence("CheckID");
[12:53:48.938]        <sequence name="CheckID" Pname="" disable="false" info="">
[12:53:48.939]          <block atomic="false" info="">
[12:53:48.939]            __var pidr1 = 0;
[12:53:48.939]              // -> [pidr1 <= 0x00000000]
[12:53:48.939]            __var pidr2 = 0;
[12:53:48.939]              // -> [pidr2 <= 0x00000000]
[12:53:48.939]            __var jep106id = 0;
[12:53:48.939]              // -> [jep106id <= 0x00000000]
[12:53:48.939]            __var ROMTableBase = 0;
[12:53:48.940]              // -> [ROMTableBase <= 0x00000000]
[12:53:48.940]            __ap = 0;      // AHB-AP
[12:53:48.940]              // -> [__ap <= 0x00000000]
[12:53:48.940]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[12:53:48.940]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.940]              // -> [ROMTableBase <= 0xE00FD000]
[12:53:48.941]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[12:53:48.941]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.941]              // -> [pidr1 <= 0x00000004]
[12:53:48.941]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[12:53:48.942]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.942]              // -> [pidr2 <= 0x0000001A]
[12:53:48.942]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[12:53:48.942]              // -> [jep106id <= 0x00000020]
[12:53:48.942]          </block>
[12:53:48.942]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[12:53:48.943]            // if-block "jep106id != 0x20"
[12:53:48.943]              // =>  FALSE
[12:53:48.943]            // skip if-block "jep106id != 0x20"
[12:53:48.943]          </control>
[12:53:48.943]        </sequence>
[12:53:48.943]    </block>
[12:53:48.943]  </sequence>
[12:53:48.944]  
[12:53:48.958]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[12:53:48.958]  
[12:53:48.958]  <debugvars>
[12:53:48.958]    // Pre-defined
[12:53:48.959]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:53:48.959]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[12:53:48.959]    __dp=0x00000000
[12:53:48.959]    __ap=0x00000000
[12:53:48.959]    __traceout=0x00000001      (SWO Trace)
[12:53:48.959]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:53:48.959]    __FlashAddr=0x00000000
[12:53:48.960]    __FlashLen=0x00000000
[12:53:48.960]    __FlashArg=0x00000000
[12:53:48.960]    __FlashOp=0x00000000
[12:53:48.960]    __Result=0x00000000
[12:53:48.960]    
[12:53:48.960]    // User-defined
[12:53:48.960]    DbgMCU_CR=0x00000007
[12:53:48.961]    DbgMCU_APB1_Fz=0x00000000
[12:53:48.961]    DbgMCU_APB2_Fz=0x00000000
[12:53:48.961]    TraceClk_Pin=0x00040002
[12:53:48.961]    TraceD0_Pin=0x00040003
[12:53:48.961]    TraceD1_Pin=0x00040004
[12:53:48.961]    TraceD2_Pin=0x00040005
[12:53:48.961]    TraceD3_Pin=0x00040006
[12:53:48.961]  </debugvars>
[12:53:48.962]  
[12:53:48.962]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[12:53:48.962]    <block atomic="false" info="">
[12:53:48.962]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[12:53:48.963]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.963]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[12:53:48.963]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.964]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[12:53:48.964]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.964]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[12:53:48.965]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:53:48.965]    </block>
[12:53:48.965]  </sequence>
[12:53:48.965]  
[13:00:42.304]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:00:42.304]  
[13:00:42.304]  <debugvars>
[13:00:42.304]    // Pre-defined
[13:00:42.304]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:00:42.304]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:00:42.305]    __dp=0x00000000
[13:00:42.305]    __ap=0x00000000
[13:00:42.305]    __traceout=0x00000001      (SWO Trace)
[13:00:42.305]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:00:42.306]    __FlashAddr=0x00000000
[13:00:42.306]    __FlashLen=0x00000000
[13:00:42.306]    __FlashArg=0x00000000
[13:00:42.306]    __FlashOp=0x00000000
[13:00:42.306]    __Result=0x00000000
[13:00:42.307]    
[13:00:42.307]    // User-defined
[13:00:42.307]    DbgMCU_CR=0x00000007
[13:00:42.307]    DbgMCU_APB1_Fz=0x00000000
[13:00:42.307]    DbgMCU_APB2_Fz=0x00000000
[13:00:42.307]    TraceClk_Pin=0x00040002
[13:00:42.307]    TraceD0_Pin=0x00040003
[13:00:42.308]    TraceD1_Pin=0x00040004
[13:00:42.308]    TraceD2_Pin=0x00040005
[13:00:42.308]    TraceD3_Pin=0x00040006
[13:00:42.308]  </debugvars>
[13:00:42.308]  
[13:00:42.308]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:00:42.309]    <block atomic="false" info="">
[13:00:42.309]      Sequence("CheckID");
[13:00:42.309]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:00:42.309]          <block atomic="false" info="">
[13:00:42.309]            __var pidr1 = 0;
[13:00:42.310]              // -> [pidr1 <= 0x00000000]
[13:00:42.310]            __var pidr2 = 0;
[13:00:42.310]              // -> [pidr2 <= 0x00000000]
[13:00:42.310]            __var jep106id = 0;
[13:00:42.310]              // -> [jep106id <= 0x00000000]
[13:00:42.310]            __var ROMTableBase = 0;
[13:00:42.311]              // -> [ROMTableBase <= 0x00000000]
[13:00:42.311]            __ap = 0;      // AHB-AP
[13:00:42.311]              // -> [__ap <= 0x00000000]
[13:00:42.311]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:00:42.312]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.312]              // -> [ROMTableBase <= 0xE00FD000]
[13:00:42.312]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:00:42.312]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.313]              // -> [pidr1 <= 0x00000004]
[13:00:42.313]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:00:42.313]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.313]              // -> [pidr2 <= 0x0000001A]
[13:00:42.313]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:00:42.313]              // -> [jep106id <= 0x00000020]
[13:00:42.314]          </block>
[13:00:42.314]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:00:42.314]            // if-block "jep106id != 0x20"
[13:00:42.314]              // =>  FALSE
[13:00:42.314]            // skip if-block "jep106id != 0x20"
[13:00:42.314]          </control>
[13:00:42.314]        </sequence>
[13:00:42.314]    </block>
[13:00:42.315]  </sequence>
[13:00:42.315]  
[13:00:42.330]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:00:42.330]  
[13:00:42.330]  <debugvars>
[13:00:42.330]    // Pre-defined
[13:00:42.330]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:00:42.330]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:00:42.331]    __dp=0x00000000
[13:00:42.331]    __ap=0x00000000
[13:00:42.331]    __traceout=0x00000001      (SWO Trace)
[13:00:42.331]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:00:42.331]    __FlashAddr=0x00000000
[13:00:42.331]    __FlashLen=0x00000000
[13:00:42.332]    __FlashArg=0x00000000
[13:00:42.332]    __FlashOp=0x00000000
[13:00:42.332]    __Result=0x00000000
[13:00:42.332]    
[13:00:42.332]    // User-defined
[13:00:42.332]    DbgMCU_CR=0x00000007
[13:00:42.332]    DbgMCU_APB1_Fz=0x00000000
[13:00:42.333]    DbgMCU_APB2_Fz=0x00000000
[13:00:42.333]    TraceClk_Pin=0x00040002
[13:00:42.333]    TraceD0_Pin=0x00040003
[13:00:42.333]    TraceD1_Pin=0x00040004
[13:00:42.333]    TraceD2_Pin=0x00040005
[13:00:42.333]    TraceD3_Pin=0x00040006
[13:00:42.334]  </debugvars>
[13:00:42.334]  
[13:00:42.334]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:00:42.334]    <block atomic="false" info="">
[13:00:42.335]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:00:42.335]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.335]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:00:42.336]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.336]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:00:42.336]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.336]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:00:42.337]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.337]    </block>
[13:00:42.337]  </sequence>
[13:00:42.337]  
[13:02:14.945]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:02:14.945]  
[13:02:14.945]  <debugvars>
[13:02:14.945]    // Pre-defined
[13:02:14.945]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:02:14.945]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:02:14.946]    __dp=0x00000000
[13:02:14.946]    __ap=0x00000000
[13:02:14.946]    __traceout=0x00000001      (SWO Trace)
[13:02:14.946]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:02:14.946]    __FlashAddr=0x00000000
[13:02:14.947]    __FlashLen=0x00000000
[13:02:14.947]    __FlashArg=0x00000000
[13:02:14.947]    __FlashOp=0x00000000
[13:02:14.947]    __Result=0x00000000
[13:02:14.947]    
[13:02:14.947]    // User-defined
[13:02:14.948]    DbgMCU_CR=0x00000007
[13:02:14.948]    DbgMCU_APB1_Fz=0x00000000
[13:02:14.948]    DbgMCU_APB2_Fz=0x00000000
[13:02:14.948]    TraceClk_Pin=0x00040002
[13:02:14.948]    TraceD0_Pin=0x00040003
[13:02:14.948]    TraceD1_Pin=0x00040004
[13:02:14.949]    TraceD2_Pin=0x00040005
[13:02:14.949]    TraceD3_Pin=0x00040006
[13:02:14.949]  </debugvars>
[13:02:14.949]  
[13:02:14.949]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:02:14.949]    <block atomic="false" info="">
[13:02:14.950]      Sequence("CheckID");
[13:02:14.950]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:02:14.950]          <block atomic="false" info="">
[13:02:14.950]            __var pidr1 = 0;
[13:02:14.950]              // -> [pidr1 <= 0x00000000]
[13:02:14.950]            __var pidr2 = 0;
[13:02:14.950]              // -> [pidr2 <= 0x00000000]
[13:02:14.951]            __var jep106id = 0;
[13:02:14.951]              // -> [jep106id <= 0x00000000]
[13:02:14.951]            __var ROMTableBase = 0;
[13:02:14.951]              // -> [ROMTableBase <= 0x00000000]
[13:02:14.951]            __ap = 0;      // AHB-AP
[13:02:14.952]              // -> [__ap <= 0x00000000]
[13:02:14.952]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:02:14.952]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.952]              // -> [ROMTableBase <= 0xE00FD000]
[13:02:14.952]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:02:14.953]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.953]              // -> [pidr1 <= 0x00000004]
[13:02:14.953]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:02:14.954]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.954]              // -> [pidr2 <= 0x0000001A]
[13:02:14.954]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:02:14.954]              // -> [jep106id <= 0x00000020]
[13:02:14.954]          </block>
[13:02:14.954]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:02:14.955]            // if-block "jep106id != 0x20"
[13:02:14.955]              // =>  FALSE
[13:02:14.955]            // skip if-block "jep106id != 0x20"
[13:02:14.955]          </control>
[13:02:14.955]        </sequence>
[13:02:14.955]    </block>
[13:02:14.955]  </sequence>
[13:02:14.955]  
[13:02:14.969]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:02:14.969]  
[13:02:14.970]  <debugvars>
[13:02:14.970]    // Pre-defined
[13:02:14.970]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:02:14.970]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:02:14.970]    __dp=0x00000000
[13:02:14.971]    __ap=0x00000000
[13:02:14.971]    __traceout=0x00000001      (SWO Trace)
[13:02:14.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:02:14.971]    __FlashAddr=0x00000000
[13:02:14.971]    __FlashLen=0x00000000
[13:02:14.971]    __FlashArg=0x00000000
[13:02:14.972]    __FlashOp=0x00000000
[13:02:14.972]    __Result=0x00000000
[13:02:14.972]    
[13:02:14.972]    // User-defined
[13:02:14.972]    DbgMCU_CR=0x00000007
[13:02:14.973]    DbgMCU_APB1_Fz=0x00000000
[13:02:14.973]    DbgMCU_APB2_Fz=0x00000000
[13:02:14.973]    TraceClk_Pin=0x00040002
[13:02:14.973]    TraceD0_Pin=0x00040003
[13:02:14.973]    TraceD1_Pin=0x00040004
[13:02:14.973]    TraceD2_Pin=0x00040005
[13:02:14.974]    TraceD3_Pin=0x00040006
[13:02:14.974]  </debugvars>
[13:02:14.974]  
[13:02:14.974]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:02:14.974]    <block atomic="false" info="">
[13:02:14.975]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:02:14.975]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.975]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:02:14.976]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.976]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:02:14.977]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.977]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:02:14.977]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:02:14.978]    </block>
[13:02:14.979]  </sequence>
[13:02:14.979]  
[13:06:32.038]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:06:32.038]  
[13:06:32.038]  <debugvars>
[13:06:32.038]    // Pre-defined
[13:06:32.038]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:06:32.038]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:06:32.039]    __dp=0x00000000
[13:06:32.039]    __ap=0x00000000
[13:06:32.039]    __traceout=0x00000001      (SWO Trace)
[13:06:32.039]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:06:32.040]    __FlashAddr=0x00000000
[13:06:32.040]    __FlashLen=0x00000000
[13:06:32.040]    __FlashArg=0x00000000
[13:06:32.040]    __FlashOp=0x00000000
[13:06:32.040]    __Result=0x00000000
[13:06:32.040]    
[13:06:32.040]    // User-defined
[13:06:32.041]    DbgMCU_CR=0x00000007
[13:06:32.041]    DbgMCU_APB1_Fz=0x00000000
[13:06:32.041]    DbgMCU_APB2_Fz=0x00000000
[13:06:32.041]    TraceClk_Pin=0x00040002
[13:06:32.041]    TraceD0_Pin=0x00040003
[13:06:32.042]    TraceD1_Pin=0x00040004
[13:06:32.042]    TraceD2_Pin=0x00040005
[13:06:32.042]    TraceD3_Pin=0x00040006
[13:06:32.042]  </debugvars>
[13:06:32.042]  
[13:06:32.043]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:06:32.043]    <block atomic="false" info="">
[13:06:32.043]      Sequence("CheckID");
[13:06:32.043]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:06:32.043]          <block atomic="false" info="">
[13:06:32.044]            __var pidr1 = 0;
[13:06:32.044]              // -> [pidr1 <= 0x00000000]
[13:06:32.044]            __var pidr2 = 0;
[13:06:32.044]              // -> [pidr2 <= 0x00000000]
[13:06:32.044]            __var jep106id = 0;
[13:06:32.044]              // -> [jep106id <= 0x00000000]
[13:06:32.045]            __var ROMTableBase = 0;
[13:06:32.045]              // -> [ROMTableBase <= 0x00000000]
[13:06:32.045]            __ap = 0;      // AHB-AP
[13:06:32.045]              // -> [__ap <= 0x00000000]
[13:06:32.045]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:06:32.046]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.046]              // -> [ROMTableBase <= 0xE00FD000]
[13:06:32.046]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:06:32.047]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.047]              // -> [pidr1 <= 0x00000004]
[13:06:32.047]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:06:32.048]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.049]              // -> [pidr2 <= 0x0000001A]
[13:06:32.049]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:06:32.049]              // -> [jep106id <= 0x00000020]
[13:06:32.049]          </block>
[13:06:32.049]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:06:32.049]            // if-block "jep106id != 0x20"
[13:06:32.050]              // =>  FALSE
[13:06:32.050]            // skip if-block "jep106id != 0x20"
[13:06:32.050]          </control>
[13:06:32.050]        </sequence>
[13:06:32.050]    </block>
[13:06:32.051]  </sequence>
[13:06:32.051]  
[13:06:32.065]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:06:32.065]  
[13:06:32.065]  <debugvars>
[13:06:32.065]    // Pre-defined
[13:06:32.065]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:06:32.066]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:06:32.066]    __dp=0x00000000
[13:06:32.066]    __ap=0x00000000
[13:06:32.066]    __traceout=0x00000001      (SWO Trace)
[13:06:32.066]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:06:32.067]    __FlashAddr=0x00000000
[13:06:32.067]    __FlashLen=0x00000000
[13:06:32.067]    __FlashArg=0x00000000
[13:06:32.067]    __FlashOp=0x00000000
[13:06:32.067]    __Result=0x00000000
[13:06:32.068]    
[13:06:32.068]    // User-defined
[13:06:32.068]    DbgMCU_CR=0x00000007
[13:06:32.068]    DbgMCU_APB1_Fz=0x00000000
[13:06:32.068]    DbgMCU_APB2_Fz=0x00000000
[13:06:32.068]    TraceClk_Pin=0x00040002
[13:06:32.069]    TraceD0_Pin=0x00040003
[13:06:32.069]    TraceD1_Pin=0x00040004
[13:06:32.069]    TraceD2_Pin=0x00040005
[13:06:32.069]    TraceD3_Pin=0x00040006
[13:06:32.069]  </debugvars>
[13:06:32.070]  
[13:06:32.070]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:06:32.070]    <block atomic="false" info="">
[13:06:32.070]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:06:32.071]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.072]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:06:32.072]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.072]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:06:32.072]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.072]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:06:32.073]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:06:32.073]    </block>
[13:06:32.073]  </sequence>
[13:06:32.074]  
[13:09:20.785]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:09:20.785]  
[13:09:20.785]  <debugvars>
[13:09:20.785]    // Pre-defined
[13:09:20.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:09:20.785]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:09:20.785]    __dp=0x00000000
[13:09:20.785]    __ap=0x00000000
[13:09:20.785]    __traceout=0x00000001      (SWO Trace)
[13:09:20.786]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:09:20.786]    __FlashAddr=0x00000000
[13:09:20.786]    __FlashLen=0x00000000
[13:09:20.786]    __FlashArg=0x00000000
[13:09:20.786]    __FlashOp=0x00000000
[13:09:20.787]    __Result=0x00000000
[13:09:20.787]    
[13:09:20.787]    // User-defined
[13:09:20.787]    DbgMCU_CR=0x00000007
[13:09:20.787]    DbgMCU_APB1_Fz=0x00000000
[13:09:20.787]    DbgMCU_APB2_Fz=0x00000000
[13:09:20.787]    TraceClk_Pin=0x00040002
[13:09:20.788]    TraceD0_Pin=0x00040003
[13:09:20.788]    TraceD1_Pin=0x00040004
[13:09:20.788]    TraceD2_Pin=0x00040005
[13:09:20.788]    TraceD3_Pin=0x00040006
[13:09:20.788]  </debugvars>
[13:09:20.789]  
[13:09:20.789]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:09:20.789]    <block atomic="false" info="">
[13:09:20.789]      Sequence("CheckID");
[13:09:20.789]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:09:20.789]          <block atomic="false" info="">
[13:09:20.790]            __var pidr1 = 0;
[13:09:20.790]              // -> [pidr1 <= 0x00000000]
[13:09:20.790]            __var pidr2 = 0;
[13:09:20.790]              // -> [pidr2 <= 0x00000000]
[13:09:20.790]            __var jep106id = 0;
[13:09:20.790]              // -> [jep106id <= 0x00000000]
[13:09:20.791]            __var ROMTableBase = 0;
[13:09:20.791]              // -> [ROMTableBase <= 0x00000000]
[13:09:20.791]            __ap = 0;      // AHB-AP
[13:09:20.791]              // -> [__ap <= 0x00000000]
[13:09:20.791]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:09:20.791]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.792]              // -> [ROMTableBase <= 0xE00FD000]
[13:09:20.792]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:09:20.792]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.792]              // -> [pidr1 <= 0x00000004]
[13:09:20.793]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:09:20.794]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.794]              // -> [pidr2 <= 0x0000001A]
[13:09:20.794]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:09:20.794]              // -> [jep106id <= 0x00000020]
[13:09:20.794]          </block>
[13:09:20.794]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:09:20.795]            // if-block "jep106id != 0x20"
[13:09:20.795]              // =>  FALSE
[13:09:20.795]            // skip if-block "jep106id != 0x20"
[13:09:20.795]          </control>
[13:09:20.795]        </sequence>
[13:09:20.795]    </block>
[13:09:20.796]  </sequence>
[13:09:20.796]  
[13:09:20.810]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:09:20.810]  
[13:09:20.810]  <debugvars>
[13:09:20.811]    // Pre-defined
[13:09:20.812]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:09:20.812]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:09:20.812]    __dp=0x00000000
[13:09:20.812]    __ap=0x00000000
[13:09:20.812]    __traceout=0x00000001      (SWO Trace)
[13:09:20.812]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:09:20.812]    __FlashAddr=0x00000000
[13:09:20.812]    __FlashLen=0x00000000
[13:09:20.812]    __FlashArg=0x00000000
[13:09:20.813]    __FlashOp=0x00000000
[13:09:20.813]    __Result=0x00000000
[13:09:20.813]    
[13:09:20.813]    // User-defined
[13:09:20.813]    DbgMCU_CR=0x00000007
[13:09:20.813]    DbgMCU_APB1_Fz=0x00000000
[13:09:20.814]    DbgMCU_APB2_Fz=0x00000000
[13:09:20.814]    TraceClk_Pin=0x00040002
[13:09:20.814]    TraceD0_Pin=0x00040003
[13:09:20.814]    TraceD1_Pin=0x00040004
[13:09:20.814]    TraceD2_Pin=0x00040005
[13:09:20.814]    TraceD3_Pin=0x00040006
[13:09:20.815]  </debugvars>
[13:09:20.815]  
[13:09:20.815]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:09:20.815]    <block atomic="false" info="">
[13:09:20.815]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:09:20.816]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.816]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:09:20.817]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.817]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:09:20.818]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.818]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:09:20.819]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:09:20.819]    </block>
[13:09:20.819]  </sequence>
[13:09:20.819]  
[13:10:19.308]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:10:19.308]  
[13:10:19.308]  <debugvars>
[13:10:19.308]    // Pre-defined
[13:10:19.308]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:10:19.309]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:10:19.309]    __dp=0x00000000
[13:10:19.310]    __ap=0x00000000
[13:10:19.310]    __traceout=0x00000001      (SWO Trace)
[13:10:19.310]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:10:19.310]    __FlashAddr=0x00000000
[13:10:19.310]    __FlashLen=0x00000000
[13:10:19.310]    __FlashArg=0x00000000
[13:10:19.311]    __FlashOp=0x00000000
[13:10:19.311]    __Result=0x00000000
[13:10:19.311]    
[13:10:19.311]    // User-defined
[13:10:19.311]    DbgMCU_CR=0x00000007
[13:10:19.311]    DbgMCU_APB1_Fz=0x00000000
[13:10:19.311]    DbgMCU_APB2_Fz=0x00000000
[13:10:19.312]    TraceClk_Pin=0x00040002
[13:10:19.312]    TraceD0_Pin=0x00040003
[13:10:19.312]    TraceD1_Pin=0x00040004
[13:10:19.312]    TraceD2_Pin=0x00040005
[13:10:19.312]    TraceD3_Pin=0x00040006
[13:10:19.313]  </debugvars>
[13:10:19.313]  
[13:10:19.313]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:10:19.313]    <block atomic="false" info="">
[13:10:19.313]      Sequence("CheckID");
[13:10:19.314]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:10:19.314]          <block atomic="false" info="">
[13:10:19.314]            __var pidr1 = 0;
[13:10:19.314]              // -> [pidr1 <= 0x00000000]
[13:10:19.314]            __var pidr2 = 0;
[13:10:19.314]              // -> [pidr2 <= 0x00000000]
[13:10:19.315]            __var jep106id = 0;
[13:10:19.315]              // -> [jep106id <= 0x00000000]
[13:10:19.315]            __var ROMTableBase = 0;
[13:10:19.315]              // -> [ROMTableBase <= 0x00000000]
[13:10:19.315]            __ap = 0;      // AHB-AP
[13:10:19.316]              // -> [__ap <= 0x00000000]
[13:10:19.316]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:10:19.316]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.316]              // -> [ROMTableBase <= 0xE00FD000]
[13:10:19.317]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:10:19.317]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.317]              // -> [pidr1 <= 0x00000004]
[13:10:19.318]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:10:19.318]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.318]              // -> [pidr2 <= 0x0000001A]
[13:10:19.318]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:10:19.319]              // -> [jep106id <= 0x00000020]
[13:10:19.319]          </block>
[13:10:19.319]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:10:19.319]            // if-block "jep106id != 0x20"
[13:10:19.319]              // =>  FALSE
[13:10:19.319]            // skip if-block "jep106id != 0x20"
[13:10:19.320]          </control>
[13:10:19.320]        </sequence>
[13:10:19.320]    </block>
[13:10:19.320]  </sequence>
[13:10:19.320]  
[13:10:19.335]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:10:19.335]  
[13:10:19.335]  <debugvars>
[13:10:19.336]    // Pre-defined
[13:10:19.336]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:10:19.336]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:10:19.336]    __dp=0x00000000
[13:10:19.336]    __ap=0x00000000
[13:10:19.336]    __traceout=0x00000001      (SWO Trace)
[13:10:19.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:10:19.337]    __FlashAddr=0x00000000
[13:10:19.337]    __FlashLen=0x00000000
[13:10:19.337]    __FlashArg=0x00000000
[13:10:19.337]    __FlashOp=0x00000000
[13:10:19.338]    __Result=0x00000000
[13:10:19.338]    
[13:10:19.338]    // User-defined
[13:10:19.338]    DbgMCU_CR=0x00000007
[13:10:19.338]    DbgMCU_APB1_Fz=0x00000000
[13:10:19.338]    DbgMCU_APB2_Fz=0x00000000
[13:10:19.339]    TraceClk_Pin=0x00040002
[13:10:19.339]    TraceD0_Pin=0x00040003
[13:10:19.339]    TraceD1_Pin=0x00040004
[13:10:19.339]    TraceD2_Pin=0x00040005
[13:10:19.339]    TraceD3_Pin=0x00040006
[13:10:19.339]  </debugvars>
[13:10:19.339]  
[13:10:19.340]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:10:19.340]    <block atomic="false" info="">
[13:10:19.340]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:10:19.341]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.341]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:10:19.341]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.342]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:10:19.342]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.342]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:10:19.343]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:10:19.343]    </block>
[13:10:19.343]  </sequence>
[13:10:19.343]  
[13:11:37.562]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:11:37.562]  
[13:11:37.562]  <debugvars>
[13:11:37.562]    // Pre-defined
[13:11:37.562]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:37.563]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:11:37.563]    __dp=0x00000000
[13:11:37.563]    __ap=0x00000000
[13:11:37.563]    __traceout=0x00000001      (SWO Trace)
[13:11:37.563]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:37.564]    __FlashAddr=0x00000000
[13:11:37.564]    __FlashLen=0x00000000
[13:11:37.564]    __FlashArg=0x00000000
[13:11:37.564]    __FlashOp=0x00000000
[13:11:37.564]    __Result=0x00000000
[13:11:37.564]    
[13:11:37.564]    // User-defined
[13:11:37.565]    DbgMCU_CR=0x00000007
[13:11:37.565]    DbgMCU_APB1_Fz=0x00000000
[13:11:37.565]    DbgMCU_APB2_Fz=0x00000000
[13:11:37.565]    TraceClk_Pin=0x00040002
[13:11:37.566]    TraceD0_Pin=0x00040003
[13:11:37.566]    TraceD1_Pin=0x00040004
[13:11:37.566]    TraceD2_Pin=0x00040005
[13:11:37.566]    TraceD3_Pin=0x00040006
[13:11:37.566]  </debugvars>
[13:11:37.566]  
[13:11:37.567]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:11:37.567]    <block atomic="false" info="">
[13:11:37.567]      Sequence("CheckID");
[13:11:37.567]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:11:37.567]          <block atomic="false" info="">
[13:11:37.568]            __var pidr1 = 0;
[13:11:37.568]              // -> [pidr1 <= 0x00000000]
[13:11:37.568]            __var pidr2 = 0;
[13:11:37.568]              // -> [pidr2 <= 0x00000000]
[13:11:37.568]            __var jep106id = 0;
[13:11:37.569]              // -> [jep106id <= 0x00000000]
[13:11:37.569]            __var ROMTableBase = 0;
[13:11:37.569]              // -> [ROMTableBase <= 0x00000000]
[13:11:37.569]            __ap = 0;      // AHB-AP
[13:11:37.569]              // -> [__ap <= 0x00000000]
[13:11:37.569]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:11:37.570]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.570]              // -> [ROMTableBase <= 0xE00FD000]
[13:11:37.570]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:11:37.571]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.571]              // -> [pidr1 <= 0x00000004]
[13:11:37.571]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:11:37.572]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.572]              // -> [pidr2 <= 0x0000001A]
[13:11:37.572]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:11:37.572]              // -> [jep106id <= 0x00000020]
[13:11:37.573]          </block>
[13:11:37.573]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:11:37.573]            // if-block "jep106id != 0x20"
[13:11:37.573]              // =>  FALSE
[13:11:37.573]            // skip if-block "jep106id != 0x20"
[13:11:37.573]          </control>
[13:11:37.574]        </sequence>
[13:11:37.574]    </block>
[13:11:37.574]  </sequence>
[13:11:37.574]  
[13:11:37.588]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:11:37.588]  
[13:11:37.588]  <debugvars>
[13:11:37.589]    // Pre-defined
[13:11:37.589]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:37.589]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:11:37.589]    __dp=0x00000000
[13:11:37.589]    __ap=0x00000000
[13:11:37.590]    __traceout=0x00000001      (SWO Trace)
[13:11:37.590]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:37.590]    __FlashAddr=0x00000000
[13:11:37.590]    __FlashLen=0x00000000
[13:11:37.590]    __FlashArg=0x00000000
[13:11:37.591]    __FlashOp=0x00000000
[13:11:37.591]    __Result=0x00000000
[13:11:37.591]    
[13:11:37.591]    // User-defined
[13:11:37.591]    DbgMCU_CR=0x00000007
[13:11:37.591]    DbgMCU_APB1_Fz=0x00000000
[13:11:37.591]    DbgMCU_APB2_Fz=0x00000000
[13:11:37.592]    TraceClk_Pin=0x00040002
[13:11:37.592]    TraceD0_Pin=0x00040003
[13:11:37.592]    TraceD1_Pin=0x00040004
[13:11:37.592]    TraceD2_Pin=0x00040005
[13:11:37.592]    TraceD3_Pin=0x00040006
[13:11:37.593]  </debugvars>
[13:11:37.593]  
[13:11:37.593]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:11:37.593]    <block atomic="false" info="">
[13:11:37.593]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:11:37.594]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.594]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:11:37.595]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.596]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:11:37.596]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.596]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:11:37.596]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:37.597]    </block>
[13:11:37.597]  </sequence>
[13:11:37.597]  
[13:12:36.723]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:12:36.723]  
[13:12:36.723]  <debugvars>
[13:12:36.724]    // Pre-defined
[13:12:36.724]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:12:36.724]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:12:36.724]    __dp=0x00000000
[13:12:36.724]    __ap=0x00000000
[13:12:36.724]    __traceout=0x00000001      (SWO Trace)
[13:12:36.725]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:12:36.725]    __FlashAddr=0x00000000
[13:12:36.725]    __FlashLen=0x00000000
[13:12:36.725]    __FlashArg=0x00000000
[13:12:36.725]    __FlashOp=0x00000000
[13:12:36.726]    __Result=0x00000000
[13:12:36.726]    
[13:12:36.726]    // User-defined
[13:12:36.726]    DbgMCU_CR=0x00000007
[13:12:36.726]    DbgMCU_APB1_Fz=0x00000000
[13:12:36.727]    DbgMCU_APB2_Fz=0x00000000
[13:12:36.727]    TraceClk_Pin=0x00040002
[13:12:36.727]    TraceD0_Pin=0x00040003
[13:12:36.727]    TraceD1_Pin=0x00040004
[13:12:36.727]    TraceD2_Pin=0x00040005
[13:12:36.728]    TraceD3_Pin=0x00040006
[13:12:36.728]  </debugvars>
[13:12:36.728]  
[13:12:36.728]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:12:36.728]    <block atomic="false" info="">
[13:12:36.728]      Sequence("CheckID");
[13:12:36.728]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:12:36.728]          <block atomic="false" info="">
[13:12:36.728]            __var pidr1 = 0;
[13:12:36.729]              // -> [pidr1 <= 0x00000000]
[13:12:36.729]            __var pidr2 = 0;
[13:12:36.729]              // -> [pidr2 <= 0x00000000]
[13:12:36.729]            __var jep106id = 0;
[13:12:36.729]              // -> [jep106id <= 0x00000000]
[13:12:36.729]            __var ROMTableBase = 0;
[13:12:36.730]              // -> [ROMTableBase <= 0x00000000]
[13:12:36.730]            __ap = 0;      // AHB-AP
[13:12:36.730]              // -> [__ap <= 0x00000000]
[13:12:36.730]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:12:36.730]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.730]              // -> [ROMTableBase <= 0xE00FD000]
[13:12:36.731]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:12:36.731]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.731]              // -> [pidr1 <= 0x00000004]
[13:12:36.731]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:12:36.732]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.732]              // -> [pidr2 <= 0x0000001A]
[13:12:36.732]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:12:36.732]              // -> [jep106id <= 0x00000020]
[13:12:36.732]          </block>
[13:12:36.732]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:12:36.733]            // if-block "jep106id != 0x20"
[13:12:36.733]              // =>  FALSE
[13:12:36.733]            // skip if-block "jep106id != 0x20"
[13:12:36.733]          </control>
[13:12:36.733]        </sequence>
[13:12:36.733]    </block>
[13:12:36.733]  </sequence>
[13:12:36.733]  
[13:12:36.748]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:12:36.748]  
[13:12:36.749]  <debugvars>
[13:12:36.749]    // Pre-defined
[13:12:36.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:12:36.749]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:12:36.749]    __dp=0x00000000
[13:12:36.749]    __ap=0x00000000
[13:12:36.750]    __traceout=0x00000001      (SWO Trace)
[13:12:36.750]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:12:36.750]    __FlashAddr=0x00000000
[13:12:36.750]    __FlashLen=0x00000000
[13:12:36.750]    __FlashArg=0x00000000
[13:12:36.751]    __FlashOp=0x00000000
[13:12:36.751]    __Result=0x00000000
[13:12:36.751]    
[13:12:36.751]    // User-defined
[13:12:36.751]    DbgMCU_CR=0x00000007
[13:12:36.751]    DbgMCU_APB1_Fz=0x00000000
[13:12:36.752]    DbgMCU_APB2_Fz=0x00000000
[13:12:36.752]    TraceClk_Pin=0x00040002
[13:12:36.752]    TraceD0_Pin=0x00040003
[13:12:36.752]    TraceD1_Pin=0x00040004
[13:12:36.752]    TraceD2_Pin=0x00040005
[13:12:36.752]    TraceD3_Pin=0x00040006
[13:12:36.753]  </debugvars>
[13:12:36.753]  
[13:12:36.753]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:12:36.753]    <block atomic="false" info="">
[13:12:36.753]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:12:36.754]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.754]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:12:36.755]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.755]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:12:36.755]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.756]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:12:36.756]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:12:36.757]    </block>
[13:12:36.757]  </sequence>
[13:12:36.757]  
[13:14:04.451]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:14:04.451]  
[13:14:04.451]  <debugvars>
[13:14:04.451]    // Pre-defined
[13:14:04.451]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:14:04.452]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:14:04.452]    __dp=0x00000000
[13:14:04.452]    __ap=0x00000000
[13:14:04.452]    __traceout=0x00000001      (SWO Trace)
[13:14:04.452]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:14:04.453]    __FlashAddr=0x00000000
[13:14:04.453]    __FlashLen=0x00000000
[13:14:04.453]    __FlashArg=0x00000000
[13:14:04.453]    __FlashOp=0x00000000
[13:14:04.453]    __Result=0x00000000
[13:14:04.454]    
[13:14:04.454]    // User-defined
[13:14:04.454]    DbgMCU_CR=0x00000007
[13:14:04.454]    DbgMCU_APB1_Fz=0x00000000
[13:14:04.454]    DbgMCU_APB2_Fz=0x00000000
[13:14:04.454]    TraceClk_Pin=0x00040002
[13:14:04.454]    TraceD0_Pin=0x00040003
[13:14:04.455]    TraceD1_Pin=0x00040004
[13:14:04.455]    TraceD2_Pin=0x00040005
[13:14:04.455]    TraceD3_Pin=0x00040006
[13:14:04.455]  </debugvars>
[13:14:04.456]  
[13:14:04.456]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:14:04.456]    <block atomic="false" info="">
[13:14:04.456]      Sequence("CheckID");
[13:14:04.456]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:14:04.457]          <block atomic="false" info="">
[13:14:04.457]            __var pidr1 = 0;
[13:14:04.457]              // -> [pidr1 <= 0x00000000]
[13:14:04.457]            __var pidr2 = 0;
[13:14:04.457]              // -> [pidr2 <= 0x00000000]
[13:14:04.457]            __var jep106id = 0;
[13:14:04.458]              // -> [jep106id <= 0x00000000]
[13:14:04.458]            __var ROMTableBase = 0;
[13:14:04.458]              // -> [ROMTableBase <= 0x00000000]
[13:14:04.458]            __ap = 0;      // AHB-AP
[13:14:04.458]              // -> [__ap <= 0x00000000]
[13:14:04.458]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:14:04.459]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.459]              // -> [ROMTableBase <= 0xE00FD000]
[13:14:04.459]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:14:04.460]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.460]              // -> [pidr1 <= 0x00000004]
[13:14:04.460]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:14:04.461]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.461]              // -> [pidr2 <= 0x0000001A]
[13:14:04.461]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:14:04.461]              // -> [jep106id <= 0x00000020]
[13:14:04.462]          </block>
[13:14:04.462]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:14:04.462]            // if-block "jep106id != 0x20"
[13:14:04.462]              // =>  FALSE
[13:14:04.462]            // skip if-block "jep106id != 0x20"
[13:14:04.462]          </control>
[13:14:04.463]        </sequence>
[13:14:04.464]    </block>
[13:14:04.464]  </sequence>
[13:14:04.464]  
[13:14:04.478]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:14:04.478]  
[13:14:04.478]  <debugvars>
[13:14:04.478]    // Pre-defined
[13:14:04.478]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:14:04.478]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:14:04.479]    __dp=0x00000000
[13:14:04.479]    __ap=0x00000000
[13:14:04.479]    __traceout=0x00000001      (SWO Trace)
[13:14:04.479]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:14:04.479]    __FlashAddr=0x00000000
[13:14:04.480]    __FlashLen=0x00000000
[13:14:04.480]    __FlashArg=0x00000000
[13:14:04.480]    __FlashOp=0x00000000
[13:14:04.480]    __Result=0x00000000
[13:14:04.480]    
[13:14:04.480]    // User-defined
[13:14:04.481]    DbgMCU_CR=0x00000007
[13:14:04.481]    DbgMCU_APB1_Fz=0x00000000
[13:14:04.481]    DbgMCU_APB2_Fz=0x00000000
[13:14:04.481]    TraceClk_Pin=0x00040002
[13:14:04.481]    TraceD0_Pin=0x00040003
[13:14:04.482]    TraceD1_Pin=0x00040004
[13:14:04.482]    TraceD2_Pin=0x00040005
[13:14:04.482]    TraceD3_Pin=0x00040006
[13:14:04.482]  </debugvars>
[13:14:04.482]  
[13:14:04.483]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:14:04.484]    <block atomic="false" info="">
[13:14:04.484]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:14:04.484]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.484]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:14:04.484]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.484]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:14:04.485]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.485]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:14:04.487]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:14:04.487]    </block>
[13:14:04.487]  </sequence>
[13:14:04.487]  
[13:15:20.862]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:15:20.862]  
[13:15:20.862]  <debugvars>
[13:15:20.862]    // Pre-defined
[13:15:20.862]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:15:20.863]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:15:20.863]    __dp=0x00000000
[13:15:20.863]    __ap=0x00000000
[13:15:20.863]    __traceout=0x00000001      (SWO Trace)
[13:15:20.863]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:15:20.863]    __FlashAddr=0x00000000
[13:15:20.864]    __FlashLen=0x00000000
[13:15:20.864]    __FlashArg=0x00000000
[13:15:20.864]    __FlashOp=0x00000000
[13:15:20.864]    __Result=0x00000000
[13:15:20.864]    
[13:15:20.864]    // User-defined
[13:15:20.865]    DbgMCU_CR=0x00000007
[13:15:20.865]    DbgMCU_APB1_Fz=0x00000000
[13:15:20.865]    DbgMCU_APB2_Fz=0x00000000
[13:15:20.865]    TraceClk_Pin=0x00040002
[13:15:20.865]    TraceD0_Pin=0x00040003
[13:15:20.866]    TraceD1_Pin=0x00040004
[13:15:20.866]    TraceD2_Pin=0x00040005
[13:15:20.866]    TraceD3_Pin=0x00040006
[13:15:20.866]  </debugvars>
[13:15:20.866]  
[13:15:20.866]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:15:20.867]    <block atomic="false" info="">
[13:15:20.867]      Sequence("CheckID");
[13:15:20.867]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:15:20.867]          <block atomic="false" info="">
[13:15:20.867]            __var pidr1 = 0;
[13:15:20.867]              // -> [pidr1 <= 0x00000000]
[13:15:20.868]            __var pidr2 = 0;
[13:15:20.868]              // -> [pidr2 <= 0x00000000]
[13:15:20.868]            __var jep106id = 0;
[13:15:20.868]              // -> [jep106id <= 0x00000000]
[13:15:20.868]            __var ROMTableBase = 0;
[13:15:20.868]              // -> [ROMTableBase <= 0x00000000]
[13:15:20.869]            __ap = 0;      // AHB-AP
[13:15:20.869]              // -> [__ap <= 0x00000000]
[13:15:20.869]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:15:20.869]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.869]              // -> [ROMTableBase <= 0xE00FD000]
[13:15:20.869]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:15:20.870]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.870]              // -> [pidr1 <= 0x00000004]
[13:15:20.870]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:15:20.871]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.871]              // -> [pidr2 <= 0x0000001A]
[13:15:20.871]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:15:20.871]              // -> [jep106id <= 0x00000020]
[13:15:20.871]          </block>
[13:15:20.871]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:15:20.871]            // if-block "jep106id != 0x20"
[13:15:20.872]              // =>  FALSE
[13:15:20.872]            // skip if-block "jep106id != 0x20"
[13:15:20.872]          </control>
[13:15:20.872]        </sequence>
[13:15:20.872]    </block>
[13:15:20.872]  </sequence>
[13:15:20.873]  
[13:15:20.888]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:15:20.888]  
[13:15:20.888]  <debugvars>
[13:15:20.888]    // Pre-defined
[13:15:20.888]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:15:20.888]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:15:20.888]    __dp=0x00000000
[13:15:20.889]    __ap=0x00000000
[13:15:20.889]    __traceout=0x00000001      (SWO Trace)
[13:15:20.889]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:15:20.889]    __FlashAddr=0x00000000
[13:15:20.889]    __FlashLen=0x00000000
[13:15:20.889]    __FlashArg=0x00000000
[13:15:20.890]    __FlashOp=0x00000000
[13:15:20.890]    __Result=0x00000000
[13:15:20.890]    
[13:15:20.890]    // User-defined
[13:15:20.890]    DbgMCU_CR=0x00000007
[13:15:20.890]    DbgMCU_APB1_Fz=0x00000000
[13:15:20.890]    DbgMCU_APB2_Fz=0x00000000
[13:15:20.891]    TraceClk_Pin=0x00040002
[13:15:20.891]    TraceD0_Pin=0x00040003
[13:15:20.891]    TraceD1_Pin=0x00040004
[13:15:20.891]    TraceD2_Pin=0x00040005
[13:15:20.891]    TraceD3_Pin=0x00040006
[13:15:20.892]  </debugvars>
[13:15:20.892]  
[13:15:20.892]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:15:20.892]    <block atomic="false" info="">
[13:15:20.892]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:15:20.893]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.893]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:15:20.894]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.894]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:15:20.894]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.894]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:15:20.895]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:15:20.895]    </block>
[13:15:20.895]  </sequence>
[13:15:20.895]  
[13:16:23.293]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:16:23.293]  
[13:16:23.294]  <debugvars>
[13:16:23.294]    // Pre-defined
[13:16:23.294]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:16:23.294]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:16:23.294]    __dp=0x00000000
[13:16:23.294]    __ap=0x00000000
[13:16:23.294]    __traceout=0x00000001      (SWO Trace)
[13:16:23.295]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:16:23.295]    __FlashAddr=0x00000000
[13:16:23.295]    __FlashLen=0x00000000
[13:16:23.295]    __FlashArg=0x00000000
[13:16:23.295]    __FlashOp=0x00000000
[13:16:23.295]    __Result=0x00000000
[13:16:23.295]    
[13:16:23.295]    // User-defined
[13:16:23.295]    DbgMCU_CR=0x00000007
[13:16:23.296]    DbgMCU_APB1_Fz=0x00000000
[13:16:23.296]    DbgMCU_APB2_Fz=0x00000000
[13:16:23.296]    TraceClk_Pin=0x00040002
[13:16:23.296]    TraceD0_Pin=0x00040003
[13:16:23.296]    TraceD1_Pin=0x00040004
[13:16:23.296]    TraceD2_Pin=0x00040005
[13:16:23.296]    TraceD3_Pin=0x00040006
[13:16:23.296]  </debugvars>
[13:16:23.297]  
[13:16:23.297]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:16:23.297]    <block atomic="false" info="">
[13:16:23.297]      Sequence("CheckID");
[13:16:23.297]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:16:23.297]          <block atomic="false" info="">
[13:16:23.297]            __var pidr1 = 0;
[13:16:23.297]              // -> [pidr1 <= 0x00000000]
[13:16:23.298]            __var pidr2 = 0;
[13:16:23.298]              // -> [pidr2 <= 0x00000000]
[13:16:23.298]            __var jep106id = 0;
[13:16:23.298]              // -> [jep106id <= 0x00000000]
[13:16:23.298]            __var ROMTableBase = 0;
[13:16:23.298]              // -> [ROMTableBase <= 0x00000000]
[13:16:23.298]            __ap = 0;      // AHB-AP
[13:16:23.298]              // -> [__ap <= 0x00000000]
[13:16:23.299]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:16:23.299]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.299]              // -> [ROMTableBase <= 0xE00FD000]
[13:16:23.299]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:16:23.300]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.300]              // -> [pidr1 <= 0x00000004]
[13:16:23.300]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:16:23.300]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.301]              // -> [pidr2 <= 0x0000001A]
[13:16:23.301]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:16:23.301]              // -> [jep106id <= 0x00000020]
[13:16:23.301]          </block>
[13:16:23.301]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:16:23.301]            // if-block "jep106id != 0x20"
[13:16:23.301]              // =>  FALSE
[13:16:23.301]            // skip if-block "jep106id != 0x20"
[13:16:23.301]          </control>
[13:16:23.302]        </sequence>
[13:16:23.302]    </block>
[13:16:23.302]  </sequence>
[13:16:23.302]  
[13:16:23.316]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:16:23.316]  
[13:16:23.317]  <debugvars>
[13:16:23.317]    // Pre-defined
[13:16:23.317]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:16:23.317]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:16:23.317]    __dp=0x00000000
[13:16:23.317]    __ap=0x00000000
[13:16:23.317]    __traceout=0x00000001      (SWO Trace)
[13:16:23.318]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:16:23.318]    __FlashAddr=0x00000000
[13:16:23.318]    __FlashLen=0x00000000
[13:16:23.318]    __FlashArg=0x00000000
[13:16:23.318]    __FlashOp=0x00000000
[13:16:23.318]    __Result=0x00000000
[13:16:23.318]    
[13:16:23.318]    // User-defined
[13:16:23.318]    DbgMCU_CR=0x00000007
[13:16:23.318]    DbgMCU_APB1_Fz=0x00000000
[13:16:23.319]    DbgMCU_APB2_Fz=0x00000000
[13:16:23.319]    TraceClk_Pin=0x00040002
[13:16:23.319]    TraceD0_Pin=0x00040003
[13:16:23.319]    TraceD1_Pin=0x00040004
[13:16:23.319]    TraceD2_Pin=0x00040005
[13:16:23.319]    TraceD3_Pin=0x00040006
[13:16:23.319]  </debugvars>
[13:16:23.319]  
[13:16:23.320]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:16:23.320]    <block atomic="false" info="">
[13:16:23.320]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:16:23.320]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.320]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:16:23.321]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.321]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:16:23.321]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.322]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:16:23.322]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:16:23.322]    </block>
[13:16:23.322]  </sequence>
[13:16:23.322]  
[13:20:12.662]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:20:12.662]  
[13:20:12.663]  <debugvars>
[13:20:12.663]    // Pre-defined
[13:20:12.664]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:20:12.664]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:20:12.664]    __dp=0x00000000
[13:20:12.664]    __ap=0x00000000
[13:20:12.665]    __traceout=0x00000001      (SWO Trace)
[13:20:12.665]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:20:12.665]    __FlashAddr=0x00000000
[13:20:12.665]    __FlashLen=0x00000000
[13:20:12.665]    __FlashArg=0x00000000
[13:20:12.665]    __FlashOp=0x00000000
[13:20:12.665]    __Result=0x00000000
[13:20:12.665]    
[13:20:12.665]    // User-defined
[13:20:12.665]    DbgMCU_CR=0x00000007
[13:20:12.666]    DbgMCU_APB1_Fz=0x00000000
[13:20:12.666]    DbgMCU_APB2_Fz=0x00000000
[13:20:12.666]    TraceClk_Pin=0x00040002
[13:20:12.666]    TraceD0_Pin=0x00040003
[13:20:12.666]    TraceD1_Pin=0x00040004
[13:20:12.666]    TraceD2_Pin=0x00040005
[13:20:12.667]    TraceD3_Pin=0x00040006
[13:20:12.667]  </debugvars>
[13:20:12.667]  
[13:20:12.667]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:20:12.667]    <block atomic="false" info="">
[13:20:12.667]      Sequence("CheckID");
[13:20:12.668]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:20:12.668]          <block atomic="false" info="">
[13:20:12.668]            __var pidr1 = 0;
[13:20:12.668]              // -> [pidr1 <= 0x00000000]
[13:20:12.668]            __var pidr2 = 0;
[13:20:12.668]              // -> [pidr2 <= 0x00000000]
[13:20:12.669]            __var jep106id = 0;
[13:20:12.669]              // -> [jep106id <= 0x00000000]
[13:20:12.669]            __var ROMTableBase = 0;
[13:20:12.669]              // -> [ROMTableBase <= 0x00000000]
[13:20:12.669]            __ap = 0;      // AHB-AP
[13:20:12.669]              // -> [__ap <= 0x00000000]
[13:20:12.670]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:20:12.670]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.670]              // -> [ROMTableBase <= 0xE00FD000]
[13:20:12.670]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:20:12.671]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.671]              // -> [pidr1 <= 0x00000004]
[13:20:12.671]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:20:12.672]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.672]              // -> [pidr2 <= 0x0000001A]
[13:20:12.672]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:20:12.672]              // -> [jep106id <= 0x00000020]
[13:20:12.672]          </block>
[13:20:12.672]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:20:12.673]            // if-block "jep106id != 0x20"
[13:20:12.673]              // =>  FALSE
[13:20:12.673]            // skip if-block "jep106id != 0x20"
[13:20:12.673]          </control>
[13:20:12.673]        </sequence>
[13:20:12.673]    </block>
[13:20:12.673]  </sequence>
[13:20:12.674]  
[13:20:12.689]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:20:12.689]  
[13:20:12.689]  <debugvars>
[13:20:12.689]    // Pre-defined
[13:20:12.689]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:20:12.689]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:20:12.690]    __dp=0x00000000
[13:20:12.690]    __ap=0x00000000
[13:20:12.690]    __traceout=0x00000001      (SWO Trace)
[13:20:12.690]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:20:12.690]    __FlashAddr=0x00000000
[13:20:12.690]    __FlashLen=0x00000000
[13:20:12.691]    __FlashArg=0x00000000
[13:20:12.691]    __FlashOp=0x00000000
[13:20:12.691]    __Result=0x00000000
[13:20:12.691]    
[13:20:12.691]    // User-defined
[13:20:12.691]    DbgMCU_CR=0x00000007
[13:20:12.692]    DbgMCU_APB1_Fz=0x00000000
[13:20:12.692]    DbgMCU_APB2_Fz=0x00000000
[13:20:12.692]    TraceClk_Pin=0x00040002
[13:20:12.692]    TraceD0_Pin=0x00040003
[13:20:12.692]    TraceD1_Pin=0x00040004
[13:20:12.692]    TraceD2_Pin=0x00040005
[13:20:12.693]    TraceD3_Pin=0x00040006
[13:20:12.693]  </debugvars>
[13:20:12.693]  
[13:20:12.693]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:20:12.693]    <block atomic="false" info="">
[13:20:12.694]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:20:12.694]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.694]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:20:12.695]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.695]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:20:12.696]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.696]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:20:12.696]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:20:12.697]    </block>
[13:20:12.697]  </sequence>
[13:20:12.697]  
[13:24:09.460]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:24:09.460]  
[13:24:09.460]  <debugvars>
[13:24:09.460]    // Pre-defined
[13:24:09.460]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:24:09.461]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:24:09.461]    __dp=0x00000000
[13:24:09.461]    __ap=0x00000000
[13:24:09.461]    __traceout=0x00000001      (SWO Trace)
[13:24:09.461]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:24:09.461]    __FlashAddr=0x00000000
[13:24:09.462]    __FlashLen=0x00000000
[13:24:09.462]    __FlashArg=0x00000000
[13:24:09.462]    __FlashOp=0x00000000
[13:24:09.462]    __Result=0x00000000
[13:24:09.462]    
[13:24:09.462]    // User-defined
[13:24:09.463]    DbgMCU_CR=0x00000007
[13:24:09.463]    DbgMCU_APB1_Fz=0x00000000
[13:24:09.463]    DbgMCU_APB2_Fz=0x00000000
[13:24:09.463]    TraceClk_Pin=0x00040002
[13:24:09.463]    TraceD0_Pin=0x00040003
[13:24:09.464]    TraceD1_Pin=0x00040004
[13:24:09.464]    TraceD2_Pin=0x00040005
[13:24:09.464]    TraceD3_Pin=0x00040006
[13:24:09.464]  </debugvars>
[13:24:09.464]  
[13:24:09.465]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:24:09.465]    <block atomic="false" info="">
[13:24:09.465]      Sequence("CheckID");
[13:24:09.465]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:24:09.465]          <block atomic="false" info="">
[13:24:09.466]            __var pidr1 = 0;
[13:24:09.466]              // -> [pidr1 <= 0x00000000]
[13:24:09.466]            __var pidr2 = 0;
[13:24:09.466]              // -> [pidr2 <= 0x00000000]
[13:24:09.466]            __var jep106id = 0;
[13:24:09.466]              // -> [jep106id <= 0x00000000]
[13:24:09.467]            __var ROMTableBase = 0;
[13:24:09.467]              // -> [ROMTableBase <= 0x00000000]
[13:24:09.467]            __ap = 0;      // AHB-AP
[13:24:09.467]              // -> [__ap <= 0x00000000]
[13:24:09.467]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:24:09.468]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.468]              // -> [ROMTableBase <= 0xE00FD000]
[13:24:09.468]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:24:09.469]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.469]              // -> [pidr1 <= 0x00000004]
[13:24:09.469]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:24:09.470]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.470]              // -> [pidr2 <= 0x0000001A]
[13:24:09.470]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:24:09.470]              // -> [jep106id <= 0x00000020]
[13:24:09.471]          </block>
[13:24:09.471]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:24:09.471]            // if-block "jep106id != 0x20"
[13:24:09.471]              // =>  FALSE
[13:24:09.471]            // skip if-block "jep106id != 0x20"
[13:24:09.472]          </control>
[13:24:09.472]        </sequence>
[13:24:09.472]    </block>
[13:24:09.472]  </sequence>
[13:24:09.472]  
[13:24:09.487]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:24:09.487]  
[13:24:09.487]  <debugvars>
[13:24:09.487]    // Pre-defined
[13:24:09.487]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:24:09.487]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:24:09.488]    __dp=0x00000000
[13:24:09.488]    __ap=0x00000000
[13:24:09.488]    __traceout=0x00000001      (SWO Trace)
[13:24:09.488]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:24:09.488]    __FlashAddr=0x00000000
[13:24:09.489]    __FlashLen=0x00000000
[13:24:09.489]    __FlashArg=0x00000000
[13:24:09.489]    __FlashOp=0x00000000
[13:24:09.489]    __Result=0x00000000
[13:24:09.489]    
[13:24:09.489]    // User-defined
[13:24:09.489]    DbgMCU_CR=0x00000007
[13:24:09.490]    DbgMCU_APB1_Fz=0x00000000
[13:24:09.490]    DbgMCU_APB2_Fz=0x00000000
[13:24:09.490]    TraceClk_Pin=0x00040002
[13:24:09.490]    TraceD0_Pin=0x00040003
[13:24:09.490]    TraceD1_Pin=0x00040004
[13:24:09.491]    TraceD2_Pin=0x00040005
[13:24:09.491]    TraceD3_Pin=0x00040006
[13:24:09.491]  </debugvars>
[13:24:09.491]  
[13:24:09.491]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:24:09.491]    <block atomic="false" info="">
[13:24:09.492]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:24:09.492]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.492]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:24:09.493]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.493]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:24:09.494]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.494]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:24:09.494]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:24:09.494]    </block>
[13:24:09.495]  </sequence>
[13:24:09.495]  
[13:42:30.055]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:42:30.055]  
[13:42:30.055]  <debugvars>
[13:42:30.055]    // Pre-defined
[13:42:30.055]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:30.055]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:42:30.056]    __dp=0x00000000
[13:42:30.056]    __ap=0x00000000
[13:42:30.056]    __traceout=0x00000001      (SWO Trace)
[13:42:30.056]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:30.056]    __FlashAddr=0x00000000
[13:42:30.056]    __FlashLen=0x00000000
[13:42:30.057]    __FlashArg=0x00000000
[13:42:30.057]    __FlashOp=0x00000000
[13:42:30.057]    __Result=0x00000000
[13:42:30.057]    
[13:42:30.057]    // User-defined
[13:42:30.057]    DbgMCU_CR=0x00000007
[13:42:30.057]    DbgMCU_APB1_Fz=0x00000000
[13:42:30.058]    DbgMCU_APB2_Fz=0x00000000
[13:42:30.058]    TraceClk_Pin=0x00040002
[13:42:30.058]    TraceD0_Pin=0x00040003
[13:42:30.058]    TraceD1_Pin=0x00040004
[13:42:30.058]    TraceD2_Pin=0x00040005
[13:42:30.058]    TraceD3_Pin=0x00040006
[13:42:30.059]  </debugvars>
[13:42:30.059]  
[13:42:30.059]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:42:30.059]    <block atomic="false" info="">
[13:42:30.059]      Sequence("CheckID");
[13:42:30.059]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:42:30.060]          <block atomic="false" info="">
[13:42:30.060]            __var pidr1 = 0;
[13:42:30.060]              // -> [pidr1 <= 0x00000000]
[13:42:30.060]            __var pidr2 = 0;
[13:42:30.060]              // -> [pidr2 <= 0x00000000]
[13:42:30.060]            __var jep106id = 0;
[13:42:30.060]              // -> [jep106id <= 0x00000000]
[13:42:30.061]            __var ROMTableBase = 0;
[13:42:30.061]              // -> [ROMTableBase <= 0x00000000]
[13:42:30.061]            __ap = 0;      // AHB-AP
[13:42:30.061]              // -> [__ap <= 0x00000000]
[13:42:30.061]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:42:30.062]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.062]              // -> [ROMTableBase <= 0xE00FD000]
[13:42:30.062]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:42:30.063]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.063]              // -> [pidr1 <= 0x00000004]
[13:42:30.063]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:42:30.063]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.063]              // -> [pidr2 <= 0x0000001A]
[13:42:30.064]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:42:30.064]              // -> [jep106id <= 0x00000020]
[13:42:30.064]          </block>
[13:42:30.064]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:42:30.064]            // if-block "jep106id != 0x20"
[13:42:30.064]              // =>  FALSE
[13:42:30.065]            // skip if-block "jep106id != 0x20"
[13:42:30.065]          </control>
[13:42:30.065]        </sequence>
[13:42:30.065]    </block>
[13:42:30.065]  </sequence>
[13:42:30.065]  
[13:42:30.080]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:42:30.080]  
[13:42:30.080]  <debugvars>
[13:42:30.081]    // Pre-defined
[13:42:30.081]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:30.081]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:42:30.081]    __dp=0x00000000
[13:42:30.081]    __ap=0x00000000
[13:42:30.082]    __traceout=0x00000001      (SWO Trace)
[13:42:30.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:30.082]    __FlashAddr=0x00000000
[13:42:30.082]    __FlashLen=0x00000000
[13:42:30.082]    __FlashArg=0x00000000
[13:42:30.082]    __FlashOp=0x00000000
[13:42:30.083]    __Result=0x00000000
[13:42:30.083]    
[13:42:30.083]    // User-defined
[13:42:30.083]    DbgMCU_CR=0x00000007
[13:42:30.083]    DbgMCU_APB1_Fz=0x00000000
[13:42:30.084]    DbgMCU_APB2_Fz=0x00000000
[13:42:30.084]    TraceClk_Pin=0x00040002
[13:42:30.084]    TraceD0_Pin=0x00040003
[13:42:30.084]    TraceD1_Pin=0x00040004
[13:42:30.084]    TraceD2_Pin=0x00040005
[13:42:30.084]    TraceD3_Pin=0x00040006
[13:42:30.085]  </debugvars>
[13:42:30.085]  
[13:42:30.085]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:42:30.085]    <block atomic="false" info="">
[13:42:30.085]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:42:30.086]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.086]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:42:30.087]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.087]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:42:30.087]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.087]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:42:30.088]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:30.088]    </block>
[13:42:30.088]  </sequence>
[13:42:30.088]  
[13:44:10.038]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:44:10.038]  
[13:44:10.038]  <debugvars>
[13:44:10.039]    // Pre-defined
[13:44:10.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:44:10.039]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:44:10.039]    __dp=0x00000000
[13:44:10.040]    __ap=0x00000000
[13:44:10.040]    __traceout=0x00000001      (SWO Trace)
[13:44:10.040]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:44:10.040]    __FlashAddr=0x00000000
[13:44:10.040]    __FlashLen=0x00000000
[13:44:10.040]    __FlashArg=0x00000000
[13:44:10.041]    __FlashOp=0x00000000
[13:44:10.041]    __Result=0x00000000
[13:44:10.041]    
[13:44:10.041]    // User-defined
[13:44:10.041]    DbgMCU_CR=0x00000007
[13:44:10.041]    DbgMCU_APB1_Fz=0x00000000
[13:44:10.041]    DbgMCU_APB2_Fz=0x00000000
[13:44:10.042]    TraceClk_Pin=0x00040002
[13:44:10.042]    TraceD0_Pin=0x00040003
[13:44:10.042]    TraceD1_Pin=0x00040004
[13:44:10.042]    TraceD2_Pin=0x00040005
[13:44:10.042]    TraceD3_Pin=0x00040006
[13:44:10.042]  </debugvars>
[13:44:10.042]  
[13:44:10.043]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:44:10.043]    <block atomic="false" info="">
[13:44:10.043]      Sequence("CheckID");
[13:44:10.043]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:44:10.043]          <block atomic="false" info="">
[13:44:10.043]            __var pidr1 = 0;
[13:44:10.044]              // -> [pidr1 <= 0x00000000]
[13:44:10.044]            __var pidr2 = 0;
[13:44:10.044]              // -> [pidr2 <= 0x00000000]
[13:44:10.044]            __var jep106id = 0;
[13:44:10.044]              // -> [jep106id <= 0x00000000]
[13:44:10.044]            __var ROMTableBase = 0;
[13:44:10.045]              // -> [ROMTableBase <= 0x00000000]
[13:44:10.045]            __ap = 0;      // AHB-AP
[13:44:10.045]              // -> [__ap <= 0x00000000]
[13:44:10.045]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:44:10.045]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.045]              // -> [ROMTableBase <= 0xE00FD000]
[13:44:10.046]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:44:10.046]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.046]              // -> [pidr1 <= 0x00000004]
[13:44:10.047]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:44:10.047]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.047]              // -> [pidr2 <= 0x0000001A]
[13:44:10.047]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:44:10.048]              // -> [jep106id <= 0x00000020]
[13:44:10.048]          </block>
[13:44:10.048]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:44:10.048]            // if-block "jep106id != 0x20"
[13:44:10.048]              // =>  FALSE
[13:44:10.048]            // skip if-block "jep106id != 0x20"
[13:44:10.049]          </control>
[13:44:10.049]        </sequence>
[13:44:10.049]    </block>
[13:44:10.049]  </sequence>
[13:44:10.049]  
[13:44:10.064]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:44:10.064]  
[13:44:10.064]  <debugvars>
[13:44:10.064]    // Pre-defined
[13:44:10.065]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:44:10.065]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:44:10.065]    __dp=0x00000000
[13:44:10.065]    __ap=0x00000000
[13:44:10.065]    __traceout=0x00000001      (SWO Trace)
[13:44:10.066]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:44:10.066]    __FlashAddr=0x00000000
[13:44:10.066]    __FlashLen=0x00000000
[13:44:10.066]    __FlashArg=0x00000000
[13:44:10.066]    __FlashOp=0x00000000
[13:44:10.067]    __Result=0x00000000
[13:44:10.067]    
[13:44:10.067]    // User-defined
[13:44:10.067]    DbgMCU_CR=0x00000007
[13:44:10.067]    DbgMCU_APB1_Fz=0x00000000
[13:44:10.067]    DbgMCU_APB2_Fz=0x00000000
[13:44:10.068]    TraceClk_Pin=0x00040002
[13:44:10.068]    TraceD0_Pin=0x00040003
[13:44:10.068]    TraceD1_Pin=0x00040004
[13:44:10.068]    TraceD2_Pin=0x00040005
[13:44:10.068]    TraceD3_Pin=0x00040006
[13:44:10.068]  </debugvars>
[13:44:10.069]  
[13:44:10.069]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:44:10.069]    <block atomic="false" info="">
[13:44:10.069]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:44:10.070]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.070]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:44:10.071]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.071]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:44:10.071]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.071]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:44:10.072]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:44:10.072]    </block>
[13:44:10.072]  </sequence>
[13:44:10.072]  
[13:49:01.166]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:49:01.166]  
[13:49:01.166]  <debugvars>
[13:49:01.166]    // Pre-defined
[13:49:01.166]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:49:01.167]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:49:01.167]    __dp=0x00000000
[13:49:01.167]    __ap=0x00000000
[13:49:01.167]    __traceout=0x00000001      (SWO Trace)
[13:49:01.167]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:49:01.167]    __FlashAddr=0x00000000
[13:49:01.168]    __FlashLen=0x00000000
[13:49:01.168]    __FlashArg=0x00000000
[13:49:01.168]    __FlashOp=0x00000000
[13:49:01.168]    __Result=0x00000000
[13:49:01.168]    
[13:49:01.168]    // User-defined
[13:49:01.169]    DbgMCU_CR=0x00000007
[13:49:01.169]    DbgMCU_APB1_Fz=0x00000000
[13:49:01.169]    DbgMCU_APB2_Fz=0x00000000
[13:49:01.169]    TraceClk_Pin=0x00040002
[13:49:01.169]    TraceD0_Pin=0x00040003
[13:49:01.169]    TraceD1_Pin=0x00040004
[13:49:01.170]    TraceD2_Pin=0x00040005
[13:49:01.170]    TraceD3_Pin=0x00040006
[13:49:01.170]  </debugvars>
[13:49:01.170]  
[13:49:01.170]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:49:01.170]    <block atomic="false" info="">
[13:49:01.171]      Sequence("CheckID");
[13:49:01.171]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:49:01.171]          <block atomic="false" info="">
[13:49:01.171]            __var pidr1 = 0;
[13:49:01.171]              // -> [pidr1 <= 0x00000000]
[13:49:01.171]            __var pidr2 = 0;
[13:49:01.172]              // -> [pidr2 <= 0x00000000]
[13:49:01.172]            __var jep106id = 0;
[13:49:01.172]              // -> [jep106id <= 0x00000000]
[13:49:01.172]            __var ROMTableBase = 0;
[13:49:01.172]              // -> [ROMTableBase <= 0x00000000]
[13:49:01.172]            __ap = 0;      // AHB-AP
[13:49:01.173]              // -> [__ap <= 0x00000000]
[13:49:01.173]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:49:01.173]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.173]              // -> [ROMTableBase <= 0xE00FD000]
[13:49:01.174]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:49:01.174]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.174]              // -> [pidr1 <= 0x00000004]
[13:49:01.174]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:49:01.175]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.175]              // -> [pidr2 <= 0x0000001A]
[13:49:01.175]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:49:01.175]              // -> [jep106id <= 0x00000020]
[13:49:01.176]          </block>
[13:49:01.176]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:49:01.176]            // if-block "jep106id != 0x20"
[13:49:01.176]              // =>  FALSE
[13:49:01.176]            // skip if-block "jep106id != 0x20"
[13:49:01.176]          </control>
[13:49:01.177]        </sequence>
[13:49:01.177]    </block>
[13:49:01.177]  </sequence>
[13:49:01.177]  
[13:49:01.192]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:49:01.192]  
[13:49:01.192]  <debugvars>
[13:49:01.192]    // Pre-defined
[13:49:01.192]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:49:01.192]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:49:01.193]    __dp=0x00000000
[13:49:01.193]    __ap=0x00000000
[13:49:01.193]    __traceout=0x00000001      (SWO Trace)
[13:49:01.193]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:49:01.193]    __FlashAddr=0x00000000
[13:49:01.194]    __FlashLen=0x00000000
[13:49:01.194]    __FlashArg=0x00000000
[13:49:01.194]    __FlashOp=0x00000000
[13:49:01.194]    __Result=0x00000000
[13:49:01.194]    
[13:49:01.194]    // User-defined
[13:49:01.195]    DbgMCU_CR=0x00000007
[13:49:01.195]    DbgMCU_APB1_Fz=0x00000000
[13:49:01.195]    DbgMCU_APB2_Fz=0x00000000
[13:49:01.195]    TraceClk_Pin=0x00040002
[13:49:01.195]    TraceD0_Pin=0x00040003
[13:49:01.196]    TraceD1_Pin=0x00040004
[13:49:01.196]    TraceD2_Pin=0x00040005
[13:49:01.196]    TraceD3_Pin=0x00040006
[13:49:01.196]  </debugvars>
[13:49:01.196]  
[13:49:01.197]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:49:01.197]    <block atomic="false" info="">
[13:49:01.197]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:49:01.197]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.197]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:49:01.198]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.198]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:49:01.199]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.200]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:49:01.200]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:49:01.200]    </block>
[13:49:01.201]  </sequence>
[13:49:01.201]  
[13:50:57.334]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:50:57.334]  
[13:50:57.335]  <debugvars>
[13:50:57.335]    // Pre-defined
[13:50:57.335]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:50:57.335]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:50:57.335]    __dp=0x00000000
[13:50:57.335]    __ap=0x00000000
[13:50:57.335]    __traceout=0x00000001      (SWO Trace)
[13:50:57.335]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:50:57.336]    __FlashAddr=0x00000000
[13:50:57.336]    __FlashLen=0x00000000
[13:50:57.336]    __FlashArg=0x00000000
[13:50:57.336]    __FlashOp=0x00000000
[13:50:57.336]    __Result=0x00000000
[13:50:57.336]    
[13:50:57.336]    // User-defined
[13:50:57.337]    DbgMCU_CR=0x00000007
[13:50:57.337]    DbgMCU_APB1_Fz=0x00000000
[13:50:57.337]    DbgMCU_APB2_Fz=0x00000000
[13:50:57.337]    TraceClk_Pin=0x00040002
[13:50:57.337]    TraceD0_Pin=0x00040003
[13:50:57.337]    TraceD1_Pin=0x00040004
[13:50:57.337]    TraceD2_Pin=0x00040005
[13:50:57.337]    TraceD3_Pin=0x00040006
[13:50:57.338]  </debugvars>
[13:50:57.338]  
[13:50:57.338]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:50:57.338]    <block atomic="false" info="">
[13:50:57.338]      Sequence("CheckID");
[13:50:57.338]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:50:57.338]          <block atomic="false" info="">
[13:50:57.338]            __var pidr1 = 0;
[13:50:57.338]              // -> [pidr1 <= 0x00000000]
[13:50:57.339]            __var pidr2 = 0;
[13:50:57.339]              // -> [pidr2 <= 0x00000000]
[13:50:57.339]            __var jep106id = 0;
[13:50:57.339]              // -> [jep106id <= 0x00000000]
[13:50:57.339]            __var ROMTableBase = 0;
[13:50:57.339]              // -> [ROMTableBase <= 0x00000000]
[13:50:57.339]            __ap = 0;      // AHB-AP
[13:50:57.339]              // -> [__ap <= 0x00000000]
[13:50:57.340]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:50:57.340]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.340]              // -> [ROMTableBase <= 0xE00FD000]
[13:50:57.340]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:50:57.341]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.341]              // -> [pidr1 <= 0x00000004]
[13:50:57.341]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:50:57.341]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.342]              // -> [pidr2 <= 0x0000001A]
[13:50:57.342]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:50:57.342]              // -> [jep106id <= 0x00000020]
[13:50:57.342]          </block>
[13:50:57.342]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:50:57.342]            // if-block "jep106id != 0x20"
[13:50:57.342]              // =>  FALSE
[13:50:57.343]            // skip if-block "jep106id != 0x20"
[13:50:57.343]          </control>
[13:50:57.343]        </sequence>
[13:50:57.343]    </block>
[13:50:57.343]  </sequence>
[13:50:57.343]  
[13:50:57.358]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:50:57.358]  
[13:50:57.359]  <debugvars>
[13:50:57.359]    // Pre-defined
[13:50:57.359]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:50:57.359]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:50:57.359]    __dp=0x00000000
[13:50:57.360]    __ap=0x00000000
[13:50:57.360]    __traceout=0x00000001      (SWO Trace)
[13:50:57.360]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:50:57.360]    __FlashAddr=0x00000000
[13:50:57.360]    __FlashLen=0x00000000
[13:50:57.361]    __FlashArg=0x00000000
[13:50:57.361]    __FlashOp=0x00000000
[13:50:57.361]    __Result=0x00000000
[13:50:57.361]    
[13:50:57.361]    // User-defined
[13:50:57.362]    DbgMCU_CR=0x00000007
[13:50:57.362]    DbgMCU_APB1_Fz=0x00000000
[13:50:57.362]    DbgMCU_APB2_Fz=0x00000000
[13:50:57.362]    TraceClk_Pin=0x00040002
[13:50:57.362]    TraceD0_Pin=0x00040003
[13:50:57.363]    TraceD1_Pin=0x00040004
[13:50:57.363]    TraceD2_Pin=0x00040005
[13:50:57.363]    TraceD3_Pin=0x00040006
[13:50:57.363]  </debugvars>
[13:50:57.363]  
[13:50:57.363]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:50:57.364]    <block atomic="false" info="">
[13:50:57.364]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:50:57.364]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.365]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:50:57.365]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.365]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:50:57.366]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.366]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:50:57.366]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:50:57.366]    </block>
[13:50:57.366]  </sequence>
[13:50:57.366]  
[13:53:09.443]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:53:09.443]  
[13:53:09.444]  <debugvars>
[13:53:09.444]    // Pre-defined
[13:53:09.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:09.444]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:53:09.444]    __dp=0x00000000
[13:53:09.445]    __ap=0x00000000
[13:53:09.445]    __traceout=0x00000001      (SWO Trace)
[13:53:09.445]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:09.445]    __FlashAddr=0x00000000
[13:53:09.445]    __FlashLen=0x00000000
[13:53:09.445]    __FlashArg=0x00000000
[13:53:09.446]    __FlashOp=0x00000000
[13:53:09.446]    __Result=0x00000000
[13:53:09.446]    
[13:53:09.446]    // User-defined
[13:53:09.446]    DbgMCU_CR=0x00000007
[13:53:09.446]    DbgMCU_APB1_Fz=0x00000000
[13:53:09.447]    DbgMCU_APB2_Fz=0x00000000
[13:53:09.447]    TraceClk_Pin=0x00040002
[13:53:09.447]    TraceD0_Pin=0x00040003
[13:53:09.447]    TraceD1_Pin=0x00040004
[13:53:09.447]    TraceD2_Pin=0x00040005
[13:53:09.447]    TraceD3_Pin=0x00040006
[13:53:09.447]  </debugvars>
[13:53:09.447]  
[13:53:09.447]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:53:09.447]    <block atomic="false" info="">
[13:53:09.448]      Sequence("CheckID");
[13:53:09.448]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:53:09.448]          <block atomic="false" info="">
[13:53:09.448]            __var pidr1 = 0;
[13:53:09.448]              // -> [pidr1 <= 0x00000000]
[13:53:09.448]            __var pidr2 = 0;
[13:53:09.448]              // -> [pidr2 <= 0x00000000]
[13:53:09.448]            __var jep106id = 0;
[13:53:09.449]              // -> [jep106id <= 0x00000000]
[13:53:09.449]            __var ROMTableBase = 0;
[13:53:09.449]              // -> [ROMTableBase <= 0x00000000]
[13:53:09.449]            __ap = 0;      // AHB-AP
[13:53:09.449]              // -> [__ap <= 0x00000000]
[13:53:09.449]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:53:09.450]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.450]              // -> [ROMTableBase <= 0xE00FD000]
[13:53:09.450]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:53:09.450]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.450]              // -> [pidr1 <= 0x00000004]
[13:53:09.451]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:53:09.451]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.451]              // -> [pidr2 <= 0x0000001A]
[13:53:09.451]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:53:09.451]              // -> [jep106id <= 0x00000020]
[13:53:09.452]          </block>
[13:53:09.452]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:53:09.452]            // if-block "jep106id != 0x20"
[13:53:09.452]              // =>  FALSE
[13:53:09.452]            // skip if-block "jep106id != 0x20"
[13:53:09.452]          </control>
[13:53:09.452]        </sequence>
[13:53:09.452]    </block>
[13:53:09.453]  </sequence>
[13:53:09.453]  
[13:53:09.468]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:53:09.468]  
[13:53:09.468]  <debugvars>
[13:53:09.468]    // Pre-defined
[13:53:09.469]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:09.469]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:53:09.469]    __dp=0x00000000
[13:53:09.469]    __ap=0x00000000
[13:53:09.469]    __traceout=0x00000001      (SWO Trace)
[13:53:09.469]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:09.470]    __FlashAddr=0x00000000
[13:53:09.471]    __FlashLen=0x00000000
[13:53:09.471]    __FlashArg=0x00000000
[13:53:09.471]    __FlashOp=0x00000000
[13:53:09.471]    __Result=0x00000000
[13:53:09.471]    
[13:53:09.471]    // User-defined
[13:53:09.471]    DbgMCU_CR=0x00000007
[13:53:09.471]    DbgMCU_APB1_Fz=0x00000000
[13:53:09.471]    DbgMCU_APB2_Fz=0x00000000
[13:53:09.471]    TraceClk_Pin=0x00040002
[13:53:09.471]    TraceD0_Pin=0x00040003
[13:53:09.472]    TraceD1_Pin=0x00040004
[13:53:09.472]    TraceD2_Pin=0x00040005
[13:53:09.472]    TraceD3_Pin=0x00040006
[13:53:09.472]  </debugvars>
[13:53:09.472]  
[13:53:09.472]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:53:09.472]    <block atomic="false" info="">
[13:53:09.473]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:53:09.473]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.473]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:53:09.474]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.474]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:53:09.475]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.475]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:53:09.475]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.475]    </block>
[13:53:09.476]  </sequence>
[13:53:09.476]  
[13:53:09.493]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[13:53:09.493]  
[13:53:09.493]  <debugvars>
[13:53:09.493]    // Pre-defined
[13:53:09.493]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:09.494]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:53:09.494]    __dp=0x00000000
[13:53:09.494]    __ap=0x00000000
[13:53:09.494]    __traceout=0x00000001      (SWO Trace)
[13:53:09.494]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:09.494]    __FlashAddr=0x00000000
[13:53:09.495]    __FlashLen=0x00000000
[13:53:09.495]    __FlashArg=0x00000000
[13:53:09.495]    __FlashOp=0x00000000
[13:53:09.495]    __Result=0x00000000
[13:53:09.495]    
[13:53:09.495]    // User-defined
[13:53:09.496]    DbgMCU_CR=0x00000007
[13:53:09.496]    DbgMCU_APB1_Fz=0x00000000
[13:53:09.496]    DbgMCU_APB2_Fz=0x00000000
[13:53:09.496]    TraceClk_Pin=0x00040002
[13:53:09.496]    TraceD0_Pin=0x00040003
[13:53:09.496]    TraceD1_Pin=0x00040004
[13:53:09.497]    TraceD2_Pin=0x00040005
[13:53:09.497]    TraceD3_Pin=0x00040006
[13:53:09.497]  </debugvars>
[13:53:09.497]  
[13:53:09.497]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:53:09.498]    <block atomic="false" info="">
[13:53:09.498]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:53:09.498]        // -> [traceSWO <= 0x00000001]
[13:53:09.498]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:53:09.498]        // -> [traceTPIU <= 0x00000000]
[13:53:09.498]    </block>
[13:53:09.499]    <control if="traceSWO" while="" timeout="0" info="">
[13:53:09.499]      // if-block "traceSWO"
[13:53:09.499]        // =>  TRUE
[13:53:09.499]      <block atomic="false" info="">
[13:53:09.499]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:53:09.499]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:53:09.500]            <block atomic="false" info="">
[13:53:09.500]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:53:09.500]                // -> [dbgmcu_val <= 0x00000000]
[13:53:09.500]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:53:09.500]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:53:09.500]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:53:09.501]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.501]                // -> [dbgmcu_val <= 0x00000007]
[13:53:09.502]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:53:09.502]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:53:09.502]              Sequence("ConfigureTraceSWOPin");
[13:53:09.502]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:53:09.502]                  <block atomic="false" info="">
[13:53:09.502]                    __var pin     = 0;
[13:53:09.502]                      // -> [pin <= 0x00000000]
[13:53:09.503]                    __var port    = 0;
[13:53:09.503]                      // -> [port <= 0x00000000]
[13:53:09.503]                    __var portAdr = 0;
[13:53:09.503]                      // -> [portAdr <= 0x00000000]
[13:53:09.503]                    __var pos     = 0;
[13:53:09.503]                      // -> [pos <= 0x00000000]
[13:53:09.504]                    __var SWO_Pin = 0x00010003;          // PB3
[13:53:09.504]                      // -> [SWO_Pin <= 0x00010003]
[13:53:09.504]                  </block>
[13:53:09.504]                  <block atomic="false" info="configure SWO">
[13:53:09.504]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:53:09.504]                      // -> [pin <= 0x00000003]
[13:53:09.505]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:53:09.505]                      // -> [port <= 0x00000001]
[13:53:09.505]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:53:09.505]                      // -> [portAdr <= 0x40020400]
[13:53:09.505]                    pos = pin * 2;
[13:53:09.505]                      // -> [pos <= 0x00000006]
[13:53:09.506]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:53:09.507]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.507]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.507]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:53:09.507]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.508]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.508]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:53:09.508]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.509]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.509]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:53:09.509]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.510]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.510]                  </block>
[13:53:09.511]                  <control if="pin <  8" while="" timeout="0" info="">
[13:53:09.511]                    // if-block "pin <  8"
[13:53:09.511]                      // =>  TRUE
[13:53:09.511]                    <block atomic="false" info="">
[13:53:09.511]                      pos = ((pin    ) & 7) * 4;
[13:53:09.511]                        // -> [pos <= 0x0000000C]
[13:53:09.511]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:53:09.512]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.512]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.513]                    </block>
[13:53:09.513]                    // end if-block "pin <  8"
[13:53:09.513]                  </control>
[13:53:09.513]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:53:09.513]                    // if-block "pin >= 8"
[13:53:09.513]                      // =>  FALSE
[13:53:09.514]                    // skip if-block "pin >= 8"
[13:53:09.514]                  </control>
[13:53:09.514]                </sequence>
[13:53:09.514]            </block>
[13:53:09.514]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:53:09.514]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:53:09.515]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.515]            </block>
[13:53:09.515]          </sequence>
[13:53:09.515]      </block>
[13:53:09.515]      // end if-block "traceSWO"
[13:53:09.515]    </control>
[13:53:09.516]    <control if="traceTPIU" while="" timeout="0" info="">
[13:53:09.516]      // if-block "traceTPIU"
[13:53:09.516]        // =>  FALSE
[13:53:09.516]      // skip if-block "traceTPIU"
[13:53:09.516]    </control>
[13:53:09.516]  </sequence>
[13:53:09.516]  
[13:53:09.520]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:53:09.520]  
[13:53:09.520]  <debugvars>
[13:53:09.521]    // Pre-defined
[13:53:09.521]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:09.522]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:53:09.522]    __dp=0x00000000
[13:53:09.522]    __ap=0x00000000
[13:53:09.522]    __traceout=0x00000001      (SWO Trace)
[13:53:09.522]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:09.522]    __FlashAddr=0x00000000
[13:53:09.522]    __FlashLen=0x00000000
[13:53:09.522]    __FlashArg=0x00000000
[13:53:09.522]    __FlashOp=0x00000000
[13:53:09.523]    __Result=0x00000000
[13:53:09.523]    
[13:53:09.523]    // User-defined
[13:53:09.523]    DbgMCU_CR=0x00000007
[13:53:09.523]    DbgMCU_APB1_Fz=0x00000000
[13:53:09.523]    DbgMCU_APB2_Fz=0x00000000
[13:53:09.524]    TraceClk_Pin=0x00040002
[13:53:09.525]    TraceD0_Pin=0x00040003
[13:53:09.525]    TraceD1_Pin=0x00040004
[13:53:09.525]    TraceD2_Pin=0x00040005
[13:53:09.526]    TraceD3_Pin=0x00040006
[13:53:09.526]  </debugvars>
[13:53:09.526]  
[13:53:09.526]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:53:09.526]    <block atomic="false" info="">
[13:53:09.527]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:53:09.527]        // -> [traceSWO <= 0x00000001]
[13:53:09.528]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:53:09.528]        // -> [traceTPIU <= 0x00000000]
[13:53:09.528]    </block>
[13:53:09.528]    <control if="traceSWO" while="" timeout="0" info="">
[13:53:09.528]      // if-block "traceSWO"
[13:53:09.528]        // =>  TRUE
[13:53:09.528]      <block atomic="false" info="">
[13:53:09.528]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:53:09.529]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:53:09.529]            <block atomic="false" info="">
[13:53:09.529]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:53:09.529]                // -> [dbgmcu_val <= 0x00000000]
[13:53:09.529]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:53:09.530]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:53:09.530]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:53:09.530]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.531]                // -> [dbgmcu_val <= 0x00000007]
[13:53:09.531]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:53:09.531]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:53:09.531]              Sequence("ConfigureTraceSWOPin");
[13:53:09.531]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:53:09.531]                  <block atomic="false" info="">
[13:53:09.532]                    __var pin     = 0;
[13:53:09.532]                      // -> [pin <= 0x00000000]
[13:53:09.532]                    __var port    = 0;
[13:53:09.532]                      // -> [port <= 0x00000000]
[13:53:09.532]                    __var portAdr = 0;
[13:53:09.533]                      // -> [portAdr <= 0x00000000]
[13:53:09.533]                    __var pos     = 0;
[13:53:09.533]                      // -> [pos <= 0x00000000]
[13:53:09.533]                    __var SWO_Pin = 0x00010003;          // PB3
[13:53:09.533]                      // -> [SWO_Pin <= 0x00010003]
[13:53:09.533]                  </block>
[13:53:09.534]                  <block atomic="false" info="configure SWO">
[13:53:09.534]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:53:09.534]                      // -> [pin <= 0x00000003]
[13:53:09.534]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:53:09.534]                      // -> [port <= 0x00000001]
[13:53:09.534]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:53:09.535]                      // -> [portAdr <= 0x40020400]
[13:53:09.535]                    pos = pin * 2;
[13:53:09.535]                      // -> [pos <= 0x00000006]
[13:53:09.535]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:53:09.536]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.536]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.536]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:53:09.537]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.537]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.538]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:53:09.538]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.539]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.539]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:53:09.539]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.540]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.540]                  </block>
[13:53:09.540]                  <control if="pin <  8" while="" timeout="0" info="">
[13:53:09.540]                    // if-block "pin <  8"
[13:53:09.540]                      // =>  TRUE
[13:53:09.541]                    <block atomic="false" info="">
[13:53:09.541]                      pos = ((pin    ) & 7) * 4;
[13:53:09.542]                        // -> [pos <= 0x0000000C]
[13:53:09.542]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:53:09.542]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.542]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.542]                    </block>
[13:53:09.542]                    // end if-block "pin <  8"
[13:53:09.542]                  </control>
[13:53:09.543]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:53:09.543]                    // if-block "pin >= 8"
[13:53:09.543]                      // =>  FALSE
[13:53:09.543]                    // skip if-block "pin >= 8"
[13:53:09.543]                  </control>
[13:53:09.543]                </sequence>
[13:53:09.544]            </block>
[13:53:09.544]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:53:09.544]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:53:09.544]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.544]            </block>
[13:53:09.545]          </sequence>
[13:53:09.545]      </block>
[13:53:09.545]      // end if-block "traceSWO"
[13:53:09.545]    </control>
[13:53:09.545]    <control if="traceTPIU" while="" timeout="0" info="">
[13:53:09.545]      // if-block "traceTPIU"
[13:53:09.546]        // =>  FALSE
[13:53:09.546]      // skip if-block "traceTPIU"
[13:53:09.546]    </control>
[13:53:09.546]  </sequence>
[13:53:09.546]  
[13:53:09.782]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:53:09.782]  
[13:53:09.782]  <debugvars>
[13:53:09.782]    // Pre-defined
[13:53:09.782]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:09.783]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:53:09.783]    __dp=0x00000000
[13:53:09.783]    __ap=0x00000000
[13:53:09.783]    __traceout=0x00000001      (SWO Trace)
[13:53:09.783]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:09.783]    __FlashAddr=0x00000000
[13:53:09.784]    __FlashLen=0x00000000
[13:53:09.784]    __FlashArg=0x00000000
[13:53:09.784]    __FlashOp=0x00000000
[13:53:09.784]    __Result=0x00000000
[13:53:09.784]    
[13:53:09.784]    // User-defined
[13:53:09.785]    DbgMCU_CR=0x00000007
[13:53:09.785]    DbgMCU_APB1_Fz=0x00000000
[13:53:09.785]    DbgMCU_APB2_Fz=0x00000000
[13:53:09.785]    TraceClk_Pin=0x00040002
[13:53:09.785]    TraceD0_Pin=0x00040003
[13:53:09.785]    TraceD1_Pin=0x00040004
[13:53:09.785]    TraceD2_Pin=0x00040005
[13:53:09.786]    TraceD3_Pin=0x00040006
[13:53:09.786]  </debugvars>
[13:53:09.786]  
[13:53:09.786]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:53:09.786]    <block atomic="false" info="">
[13:53:09.786]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:53:09.787]        // -> [traceSWO <= 0x00000001]
[13:53:09.787]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:53:09.787]        // -> [traceTPIU <= 0x00000000]
[13:53:09.787]    </block>
[13:53:09.787]    <control if="traceSWO" while="" timeout="0" info="">
[13:53:09.787]      // if-block "traceSWO"
[13:53:09.787]        // =>  TRUE
[13:53:09.788]      <block atomic="false" info="">
[13:53:09.788]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:53:09.788]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:53:09.788]            <block atomic="false" info="">
[13:53:09.788]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:53:09.788]                // -> [dbgmcu_val <= 0x00000000]
[13:53:09.789]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:53:09.789]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:53:09.789]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:53:09.789]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.789]                // -> [dbgmcu_val <= 0x00000007]
[13:53:09.790]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:53:09.790]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:53:09.790]              Sequence("ConfigureTraceSWOPin");
[13:53:09.790]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:53:09.791]                  <block atomic="false" info="">
[13:53:09.791]                    __var pin     = 0;
[13:53:09.791]                      // -> [pin <= 0x00000000]
[13:53:09.791]                    __var port    = 0;
[13:53:09.791]                      // -> [port <= 0x00000000]
[13:53:09.791]                    __var portAdr = 0;
[13:53:09.791]                      // -> [portAdr <= 0x00000000]
[13:53:09.791]                    __var pos     = 0;
[13:53:09.791]                      // -> [pos <= 0x00000000]
[13:53:09.791]                    __var SWO_Pin = 0x00010003;          // PB3
[13:53:09.791]                      // -> [SWO_Pin <= 0x00010003]
[13:53:09.792]                  </block>
[13:53:09.792]                  <block atomic="false" info="configure SWO">
[13:53:09.792]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:53:09.792]                      // -> [pin <= 0x00000003]
[13:53:09.792]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:53:09.792]                      // -> [port <= 0x00000001]
[13:53:09.792]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:53:09.792]                      // -> [portAdr <= 0x40020400]
[13:53:09.793]                    pos = pin * 2;
[13:53:09.793]                      // -> [pos <= 0x00000006]
[13:53:09.793]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:53:09.793]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.794]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.794]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:53:09.794]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.795]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.795]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:53:09.795]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.795]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.796]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:53:09.796]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.797]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.797]                  </block>
[13:53:09.797]                  <control if="pin <  8" while="" timeout="0" info="">
[13:53:09.797]                    // if-block "pin <  8"
[13:53:09.797]                      // =>  TRUE
[13:53:09.797]                    <block atomic="false" info="">
[13:53:09.797]                      pos = ((pin    ) & 7) * 4;
[13:53:09.798]                        // -> [pos <= 0x0000000C]
[13:53:09.798]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:53:09.798]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.799]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.799]                    </block>
[13:53:09.799]                    // end if-block "pin <  8"
[13:53:09.799]                  </control>
[13:53:09.799]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:53:09.799]                    // if-block "pin >= 8"
[13:53:09.800]                      // =>  FALSE
[13:53:09.800]                    // skip if-block "pin >= 8"
[13:53:09.800]                  </control>
[13:53:09.800]                </sequence>
[13:53:09.800]            </block>
[13:53:09.800]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:53:09.800]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:53:09.801]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:09.801]            </block>
[13:53:09.801]          </sequence>
[13:53:09.801]      </block>
[13:53:09.801]      // end if-block "traceSWO"
[13:53:09.801]    </control>
[13:53:09.801]    <control if="traceTPIU" while="" timeout="0" info="">
[13:53:09.802]      // if-block "traceTPIU"
[13:53:09.802]        // =>  FALSE
[13:53:09.802]      // skip if-block "traceTPIU"
[13:53:09.802]    </control>
[13:53:09.802]  </sequence>
[13:53:09.802]  
[13:54:05.897]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:54:05.897]  
[13:54:05.897]  <debugvars>
[13:54:05.897]    // Pre-defined
[13:54:05.897]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:54:05.897]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:54:05.898]    __dp=0x00000000
[13:54:05.898]    __ap=0x00000000
[13:54:05.898]    __traceout=0x00000001      (SWO Trace)
[13:54:05.898]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:54:05.898]    __FlashAddr=0x00000000
[13:54:05.899]    __FlashLen=0x00000000
[13:54:05.899]    __FlashArg=0x00000000
[13:54:05.899]    __FlashOp=0x00000000
[13:54:05.899]    __Result=0x00000000
[13:54:05.899]    
[13:54:05.899]    // User-defined
[13:54:05.900]    DbgMCU_CR=0x00000007
[13:54:05.900]    DbgMCU_APB1_Fz=0x00000000
[13:54:05.900]    DbgMCU_APB2_Fz=0x00000000
[13:54:05.900]    TraceClk_Pin=0x00040002
[13:54:05.901]    TraceD0_Pin=0x00040003
[13:54:05.901]    TraceD1_Pin=0x00040004
[13:54:05.902]    TraceD2_Pin=0x00040005
[13:54:05.902]    TraceD3_Pin=0x00040006
[13:54:05.902]  </debugvars>
[13:54:05.902]  
[13:54:05.902]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:54:05.902]    <block atomic="false" info="">
[13:54:05.902]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:54:05.902]        // -> [traceSWO <= 0x00000001]
[13:54:05.902]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:54:05.903]        // -> [traceTPIU <= 0x00000000]
[13:54:05.903]    </block>
[13:54:05.903]    <control if="traceSWO" while="" timeout="0" info="">
[13:54:05.903]      // if-block "traceSWO"
[13:54:05.903]        // =>  TRUE
[13:54:05.904]      <block atomic="false" info="">
[13:54:05.904]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:54:05.904]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:54:05.904]            <block atomic="false" info="">
[13:54:05.904]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:54:05.904]                // -> [dbgmcu_val <= 0x00000000]
[13:54:05.905]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:54:05.905]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:54:05.905]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:54:05.905]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.906]                // -> [dbgmcu_val <= 0x00000007]
[13:54:05.906]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:54:05.906]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:54:05.906]              Sequence("ConfigureTraceSWOPin");
[13:54:05.906]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:54:05.906]                  <block atomic="false" info="">
[13:54:05.907]                    __var pin     = 0;
[13:54:05.907]                      // -> [pin <= 0x00000000]
[13:54:05.907]                    __var port    = 0;
[13:54:05.907]                      // -> [port <= 0x00000000]
[13:54:05.907]                    __var portAdr = 0;
[13:54:05.907]                      // -> [portAdr <= 0x00000000]
[13:54:05.908]                    __var pos     = 0;
[13:54:05.908]                      // -> [pos <= 0x00000000]
[13:54:05.908]                    __var SWO_Pin = 0x00010003;          // PB3
[13:54:05.908]                      // -> [SWO_Pin <= 0x00010003]
[13:54:05.908]                  </block>
[13:54:05.908]                  <block atomic="false" info="configure SWO">
[13:54:05.909]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:54:05.909]                      // -> [pin <= 0x00000003]
[13:54:05.909]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:54:05.909]                      // -> [port <= 0x00000001]
[13:54:05.909]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:54:05.909]                      // -> [portAdr <= 0x40020400]
[13:54:05.910]                    pos = pin * 2;
[13:54:05.910]                      // -> [pos <= 0x00000006]
[13:54:05.910]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:54:05.911]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.911]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.911]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:54:05.912]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.912]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.912]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:54:05.913]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.913]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.914]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:54:05.914]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.915]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.915]                  </block>
[13:54:05.915]                  <control if="pin <  8" while="" timeout="0" info="">
[13:54:05.915]                    // if-block "pin <  8"
[13:54:05.915]                      // =>  TRUE
[13:54:05.916]                    <block atomic="false" info="">
[13:54:05.916]                      pos = ((pin    ) & 7) * 4;
[13:54:05.916]                        // -> [pos <= 0x0000000C]
[13:54:05.916]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:54:05.917]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.917]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.918]                    </block>
[13:54:05.918]                    // end if-block "pin <  8"
[13:54:05.918]                  </control>
[13:54:05.918]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:54:05.918]                    // if-block "pin >= 8"
[13:54:05.918]                      // =>  FALSE
[13:54:05.919]                    // skip if-block "pin >= 8"
[13:54:05.919]                  </control>
[13:54:05.919]                </sequence>
[13:54:05.919]            </block>
[13:54:05.919]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:54:05.919]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:54:05.921]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:54:05.921]            </block>
[13:54:05.921]          </sequence>
[13:54:05.921]      </block>
[13:54:05.921]      // end if-block "traceSWO"
[13:54:05.921]    </control>
[13:54:05.921]    <control if="traceTPIU" while="" timeout="0" info="">
[13:54:05.921]      // if-block "traceTPIU"
[13:54:05.921]        // =>  FALSE
[13:54:05.921]      // skip if-block "traceTPIU"
[13:54:05.922]    </control>
[13:54:05.922]  </sequence>
[13:54:05.922]  
[13:57:10.815]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:57:10.815]  
[13:57:10.815]  <debugvars>
[13:57:10.815]    // Pre-defined
[13:57:10.815]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:57:10.816]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:57:10.816]    __dp=0x00000000
[13:57:10.817]    __ap=0x00000000
[13:57:10.817]    __traceout=0x00000001      (SWO Trace)
[13:57:10.817]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:57:10.817]    __FlashAddr=0x00000000
[13:57:10.817]    __FlashLen=0x00000000
[13:57:10.818]    __FlashArg=0x00000000
[13:57:10.818]    __FlashOp=0x00000000
[13:57:10.818]    __Result=0x00000000
[13:57:10.818]    
[13:57:10.818]    // User-defined
[13:57:10.818]    DbgMCU_CR=0x00000007
[13:57:10.819]    DbgMCU_APB1_Fz=0x00000000
[13:57:10.819]    DbgMCU_APB2_Fz=0x00000000
[13:57:10.819]    TraceClk_Pin=0x00040002
[13:57:10.819]    TraceD0_Pin=0x00040003
[13:57:10.819]    TraceD1_Pin=0x00040004
[13:57:10.820]    TraceD2_Pin=0x00040005
[13:57:10.820]    TraceD3_Pin=0x00040006
[13:57:10.820]  </debugvars>
[13:57:10.820]  
[13:57:10.820]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:57:10.821]    <block atomic="false" info="">
[13:57:10.821]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:57:10.821]        // -> [traceSWO <= 0x00000001]
[13:57:10.821]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:57:10.821]        // -> [traceTPIU <= 0x00000000]
[13:57:10.821]    </block>
[13:57:10.822]    <control if="traceSWO" while="" timeout="0" info="">
[13:57:10.822]      // if-block "traceSWO"
[13:57:10.822]        // =>  TRUE
[13:57:10.822]      <block atomic="false" info="">
[13:57:10.822]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:57:10.822]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:57:10.823]            <block atomic="false" info="">
[13:57:10.823]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:57:10.823]                // -> [dbgmcu_val <= 0x00000000]
[13:57:10.823]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:57:10.823]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:57:10.823]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:57:10.824]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.824]                // -> [dbgmcu_val <= 0x00000007]
[13:57:10.824]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:57:10.825]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:57:10.825]              Sequence("ConfigureTraceSWOPin");
[13:57:10.825]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:57:10.825]                  <block atomic="false" info="">
[13:57:10.825]                    __var pin     = 0;
[13:57:10.825]                      // -> [pin <= 0x00000000]
[13:57:10.826]                    __var port    = 0;
[13:57:10.826]                      // -> [port <= 0x00000000]
[13:57:10.826]                    __var portAdr = 0;
[13:57:10.826]                      // -> [portAdr <= 0x00000000]
[13:57:10.826]                    __var pos     = 0;
[13:57:10.827]                      // -> [pos <= 0x00000000]
[13:57:10.827]                    __var SWO_Pin = 0x00010003;          // PB3
[13:57:10.827]                      // -> [SWO_Pin <= 0x00010003]
[13:57:10.827]                  </block>
[13:57:10.827]                  <block atomic="false" info="configure SWO">
[13:57:10.828]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:57:10.828]                      // -> [pin <= 0x00000003]
[13:57:10.828]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:57:10.828]                      // -> [port <= 0x00000001]
[13:57:10.828]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:57:10.828]                      // -> [portAdr <= 0x40020400]
[13:57:10.829]                    pos = pin * 2;
[13:57:10.829]                      // -> [pos <= 0x00000006]
[13:57:10.829]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:57:10.829]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.830]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.830]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:57:10.831]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.831]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.831]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:57:10.832]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.832]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.832]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:57:10.833]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.833]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.834]                  </block>
[13:57:10.834]                  <control if="pin <  8" while="" timeout="0" info="">
[13:57:10.834]                    // if-block "pin <  8"
[13:57:10.834]                      // =>  TRUE
[13:57:10.834]                    <block atomic="false" info="">
[13:57:10.834]                      pos = ((pin    ) & 7) * 4;
[13:57:10.835]                        // -> [pos <= 0x0000000C]
[13:57:10.835]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:57:10.835]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.836]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.836]                    </block>
[13:57:10.836]                    // end if-block "pin <  8"
[13:57:10.836]                  </control>
[13:57:10.837]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:57:10.837]                    // if-block "pin >= 8"
[13:57:10.837]                      // =>  FALSE
[13:57:10.837]                    // skip if-block "pin >= 8"
[13:57:10.837]                  </control>
[13:57:10.838]                </sequence>
[13:57:10.838]            </block>
[13:57:10.838]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:57:10.838]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:57:10.839]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:57:10.839]            </block>
[13:57:10.839]          </sequence>
[13:57:10.839]      </block>
[13:57:10.840]      // end if-block "traceSWO"
[13:57:10.840]    </control>
[13:57:10.840]    <control if="traceTPIU" while="" timeout="0" info="">
[13:57:10.840]      // if-block "traceTPIU"
[13:57:10.840]        // =>  FALSE
[13:57:10.840]      // skip if-block "traceTPIU"
[13:57:10.841]    </control>
[13:57:10.841]  </sequence>
[13:57:10.841]  
[14:02:21.753]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[14:02:21.753]  
[14:02:21.753]  <debugvars>
[14:02:21.754]    // Pre-defined
[14:02:21.755]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[14:02:21.755]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[14:02:21.756]    __dp=0x00000000
[14:02:21.757]    __ap=0x00000000
[14:02:21.757]    __traceout=0x00000001      (SWO Trace)
[14:02:21.757]    __errorcontrol=0x00000000  (Skip Errors="False")
[14:02:21.758]    __FlashAddr=0x00000000
[14:02:21.758]    __FlashLen=0x00000000
[14:02:21.758]    __FlashArg=0x00000000
[14:02:21.759]    __FlashOp=0x00000000
[14:02:21.760]    __Result=0x00000000
[14:02:21.760]    
[14:02:21.760]    // User-defined
[14:02:21.761]    DbgMCU_CR=0x00000007
[14:02:21.761]    DbgMCU_APB1_Fz=0x00000000
[14:02:21.762]    DbgMCU_APB2_Fz=0x00000000
[14:02:21.762]    TraceClk_Pin=0x00040002
[14:02:21.763]    TraceD0_Pin=0x00040003
[14:02:21.763]    TraceD1_Pin=0x00040004
[14:02:21.764]    TraceD2_Pin=0x00040005
[14:02:21.764]    TraceD3_Pin=0x00040006
[14:02:21.765]  </debugvars>
[14:02:21.765]  
[14:02:21.765]  <sequence name="TraceStop" Pname="" disable="false" info="">
[14:02:21.766]    <block atomic="false" info="">
[14:02:21.766]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[14:02:21.767]        // -> [traceSWO <= 0x00000001]
[14:02:21.767]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[14:02:21.767]        // -> [traceTPIU <= 0x00000000]
[14:02:21.768]    </block>
[14:02:21.768]    <control if="traceSWO" while="" timeout="0" info="">
[14:02:21.769]      // if-block "traceSWO"
[14:02:21.769]        // =>  TRUE
[14:02:21.769]      <block atomic="false" info="">
[14:02:21.769]        Sequence("DisableTraceSWO");
[14:02:21.769]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[14:02:21.770]            <block atomic="false" info="">
[14:02:21.771]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[14:02:21.771]                // -> [dbgmcu_val <= 0x00000000]
[14:02:21.771]            </block>
[14:02:21.771]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[14:02:21.771]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[14:02:21.771]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[14:02:21.772]                // -> [dbgmcu_val <= 0x00000007]
[14:02:21.772]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[14:02:21.772]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[14:02:21.773]            </block>
[14:02:21.773]          </sequence>
[14:02:21.773]      </block>
[14:02:21.773]      // end if-block "traceSWO"
[14:02:21.773]    </control>
[14:02:21.774]    <control if="traceTPIU" while="" timeout="0" info="">
[14:02:21.774]      // if-block "traceTPIU"
[14:02:21.774]        // =>  FALSE
[14:02:21.774]      // skip if-block "traceTPIU"
[14:02:21.774]    </control>
[14:02:21.774]  </sequence>
[14:02:21.775]  
[14:07:29.611]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[14:07:29.611]  
[14:07:29.612]  <debugvars>
[14:07:29.612]    // Pre-defined
[14:07:29.612]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[14:07:29.612]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[14:07:29.613]    __dp=0x00000000
[14:07:29.613]    __ap=0x00000000
[14:07:29.613]    __traceout=0x00000001      (SWO Trace)
[14:07:29.613]    __errorcontrol=0x00000000  (Skip Errors="False")
[14:07:29.613]    __FlashAddr=0x00000000
[14:07:29.613]    __FlashLen=0x00000000
[14:07:29.614]    __FlashArg=0x00000000
[14:07:29.614]    __FlashOp=0x00000000
[14:07:29.614]    __Result=0x00000000
[14:07:29.614]    
[14:07:29.614]    // User-defined
[14:07:29.614]    DbgMCU_CR=0x00000007
[14:07:29.614]    DbgMCU_APB1_Fz=0x00000000
[14:07:29.615]    DbgMCU_APB2_Fz=0x00000000
[14:07:29.615]    TraceClk_Pin=0x00040002
[14:07:29.615]    TraceD0_Pin=0x00040003
[14:07:29.615]    TraceD1_Pin=0x00040004
[14:07:29.615]    TraceD2_Pin=0x00040005
[14:07:29.616]    TraceD3_Pin=0x00040006
[14:07:29.616]  </debugvars>
[14:07:29.616]  
[14:07:29.616]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[14:07:29.616]    <block atomic="false" info="">
[14:07:29.616]      Sequence("CheckID");
[14:07:29.616]        <sequence name="CheckID" Pname="" disable="false" info="">
[14:07:29.617]          <block atomic="false" info="">
[14:07:29.617]            __var pidr1 = 0;
[14:07:29.617]              // -> [pidr1 <= 0x00000000]
[14:07:29.617]            __var pidr2 = 0;
[14:07:29.617]              // -> [pidr2 <= 0x00000000]
[14:07:29.617]            __var jep106id = 0;
[14:07:29.618]              // -> [jep106id <= 0x00000000]
[14:07:29.618]            __var ROMTableBase = 0;
[14:07:29.618]              // -> [ROMTableBase <= 0x00000000]
[14:07:29.618]            __ap = 0;      // AHB-AP
[14:07:29.619]              // -> [__ap <= 0x00000000]
[14:07:29.619]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[14:07:29.619]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.619]              // -> [ROMTableBase <= 0xE00FD000]
[14:07:29.619]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[14:07:29.620]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.620]              // -> [pidr1 <= 0x00000004]
[14:07:29.620]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[14:07:29.620]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.620]              // -> [pidr2 <= 0x0000001A]
[14:07:29.620]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[14:07:29.620]              // -> [jep106id <= 0x00000020]
[14:07:29.621]          </block>
[14:07:29.621]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[14:07:29.621]            // if-block "jep106id != 0x20"
[14:07:29.621]              // =>  FALSE
[14:07:29.621]            // skip if-block "jep106id != 0x20"
[14:07:29.621]          </control>
[14:07:29.621]        </sequence>
[14:07:29.621]    </block>
[14:07:29.622]  </sequence>
[14:07:29.622]  
[14:07:29.637]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[14:07:29.637]  
[14:07:29.637]  <debugvars>
[14:07:29.638]    // Pre-defined
[14:07:29.638]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[14:07:29.638]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[14:07:29.638]    __dp=0x00000000
[14:07:29.638]    __ap=0x00000000
[14:07:29.638]    __traceout=0x00000001      (SWO Trace)
[14:07:29.639]    __errorcontrol=0x00000000  (Skip Errors="False")
[14:07:29.639]    __FlashAddr=0x00000000
[14:07:29.639]    __FlashLen=0x00000000
[14:07:29.639]    __FlashArg=0x00000000
[14:07:29.639]    __FlashOp=0x00000000
[14:07:29.639]    __Result=0x00000000
[14:07:29.640]    
[14:07:29.640]    // User-defined
[14:07:29.640]    DbgMCU_CR=0x00000007
[14:07:29.640]    DbgMCU_APB1_Fz=0x00000000
[14:07:29.640]    DbgMCU_APB2_Fz=0x00000000
[14:07:29.640]    TraceClk_Pin=0x00040002
[14:07:29.640]    TraceD0_Pin=0x00040003
[14:07:29.640]    TraceD1_Pin=0x00040004
[14:07:29.641]    TraceD2_Pin=0x00040005
[14:07:29.641]    TraceD3_Pin=0x00040006
[14:07:29.641]  </debugvars>
[14:07:29.641]  
[14:07:29.641]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[14:07:29.641]    <block atomic="false" info="">
[14:07:29.641]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[14:07:29.642]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.642]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[14:07:29.643]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.643]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[14:07:29.643]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.643]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[14:07:29.644]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[14:07:29.644]    </block>
[14:07:29.644]  </sequence>
[14:07:29.644]  
[14:08:22.793]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[14:08:22.793]  
[14:08:22.793]  <debugvars>
[14:08:22.793]    // Pre-defined
[14:08:22.793]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[14:08:22.794]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[14:08:22.794]    __dp=0x00000000
[14:08:22.794]    __ap=0x00000000
[14:08:22.794]    __traceout=0x00000001      (SWO Trace)
[14:08:22.794]    __errorcontrol=0x00000000  (Skip Errors="False")
[14:08:22.795]    __FlashAddr=0x00000000
[14:08:22.795]    __FlashLen=0x00000000
[14:08:22.795]    __FlashArg=0x00000000
[14:08:22.795]    __FlashOp=0x00000000
[14:08:22.795]    __Result=0x00000000
[14:08:22.796]    
[14:08:22.796]    // User-defined
[14:08:22.796]    DbgMCU_CR=0x00000007
[14:08:22.796]    DbgMCU_APB1_Fz=0x00000000
[14:08:22.796]    DbgMCU_APB2_Fz=0x00000000
[14:08:22.796]    TraceClk_Pin=0x00040002
[14:08:22.797]    TraceD0_Pin=0x00040003
[14:08:22.797]    TraceD1_Pin=0x00040004
[14:08:22.797]    TraceD2_Pin=0x00040005
[14:08:22.797]    TraceD3_Pin=0x00040006
[14:08:22.797]  </debugvars>
[14:08:22.797]  
[14:08:22.798]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[14:08:22.798]    <block atomic="false" info="">
[14:08:22.798]      Sequence("CheckID");
[14:08:22.798]        <sequence name="CheckID" Pname="" disable="false" info="">
[14:08:22.798]          <block atomic="false" info="">
[14:08:22.798]            __var pidr1 = 0;
[14:08:22.800]              // -> [pidr1 <= 0x00000000]
[14:08:22.800]            __var pidr2 = 0;
[14:08:22.800]              // -> [pidr2 <= 0x00000000]
[14:08:22.800]            __var jep106id = 0;
[14:08:22.800]              // -> [jep106id <= 0x00000000]
[14:08:22.800]            __var ROMTableBase = 0;
[14:08:22.800]              // -> [ROMTableBase <= 0x00000000]
[14:08:22.800]            __ap = 0;      // AHB-AP
[14:08:22.800]              // -> [__ap <= 0x00000000]
[14:08:22.800]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[14:08:22.800]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.800]              // -> [ROMTableBase <= 0xE00FD000]
[14:08:22.801]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[14:08:22.801]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.801]              // -> [pidr1 <= 0x00000004]
[14:08:22.801]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[14:08:22.802]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.802]              // -> [pidr2 <= 0x0000001A]
[14:08:22.802]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[14:08:22.802]              // -> [jep106id <= 0x00000020]
[14:08:22.802]          </block>
[14:08:22.802]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[14:08:22.803]            // if-block "jep106id != 0x20"
[14:08:22.804]              // =>  FALSE
[14:08:22.804]            // skip if-block "jep106id != 0x20"
[14:08:22.804]          </control>
[14:08:22.804]        </sequence>
[14:08:22.804]    </block>
[14:08:22.804]  </sequence>
[14:08:22.805]  
[14:08:22.819]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[14:08:22.819]  
[14:08:22.819]  <debugvars>
[14:08:22.819]    // Pre-defined
[14:08:22.820]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[14:08:22.820]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[14:08:22.820]    __dp=0x00000000
[14:08:22.820]    __ap=0x00000000
[14:08:22.820]    __traceout=0x00000001      (SWO Trace)
[14:08:22.820]    __errorcontrol=0x00000000  (Skip Errors="False")
[14:08:22.821]    __FlashAddr=0x00000000
[14:08:22.821]    __FlashLen=0x00000000
[14:08:22.821]    __FlashArg=0x00000000
[14:08:22.821]    __FlashOp=0x00000000
[14:08:22.821]    __Result=0x00000000
[14:08:22.821]    
[14:08:22.821]    // User-defined
[14:08:22.822]    DbgMCU_CR=0x00000007
[14:08:22.822]    DbgMCU_APB1_Fz=0x00000000
[14:08:22.822]    DbgMCU_APB2_Fz=0x00000000
[14:08:22.822]    TraceClk_Pin=0x00040002
[14:08:22.822]    TraceD0_Pin=0x00040003
[14:08:22.822]    TraceD1_Pin=0x00040004
[14:08:22.823]    TraceD2_Pin=0x00040005
[14:08:22.823]    TraceD3_Pin=0x00040006
[14:08:22.823]  </debugvars>
[14:08:22.823]  
[14:08:22.823]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[14:08:22.823]    <block atomic="false" info="">
[14:08:22.824]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[14:08:22.824]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.824]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[14:08:22.825]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.825]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[14:08:22.825]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.826]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[14:08:22.826]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[14:08:22.826]    </block>
[14:08:22.826]  </sequence>
[14:08:22.826]  
[15:38:49.695]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[15:38:49.695]  
[15:38:49.695]  <debugvars>
[15:38:49.695]    // Pre-defined
[15:38:49.695]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:38:49.695]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[15:38:49.696]    __dp=0x00000000
[15:38:49.696]    __ap=0x00000000
[15:38:49.696]    __traceout=0x00000001      (SWO Trace)
[15:38:49.696]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:38:49.696]    __FlashAddr=0x00000000
[15:38:49.697]    __FlashLen=0x00000000
[15:38:49.697]    __FlashArg=0x00000000
[15:38:49.697]    __FlashOp=0x00000000
[15:38:49.697]    __Result=0x00000000
[15:38:49.697]    
[15:38:49.697]    // User-defined
[15:38:49.698]    DbgMCU_CR=0x00000007
[15:38:49.698]    DbgMCU_APB1_Fz=0x00000000
[15:38:49.698]    DbgMCU_APB2_Fz=0x00000000
[15:38:49.698]    TraceClk_Pin=0x00040002
[15:38:49.698]    TraceD0_Pin=0x00040003
[15:38:49.698]    TraceD1_Pin=0x00040004
[15:38:49.699]    TraceD2_Pin=0x00040005
[15:38:49.699]    TraceD3_Pin=0x00040006
[15:38:49.699]  </debugvars>
[15:38:49.699]  
[15:38:49.699]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[15:38:49.699]    <block atomic="false" info="">
[15:38:49.700]      Sequence("CheckID");
[15:38:49.700]        <sequence name="CheckID" Pname="" disable="false" info="">
[15:38:49.700]          <block atomic="false" info="">
[15:38:49.700]            __var pidr1 = 0;
[15:38:49.700]              // -> [pidr1 <= 0x00000000]
[15:38:49.700]            __var pidr2 = 0;
[15:38:49.701]              // -> [pidr2 <= 0x00000000]
[15:38:49.701]            __var jep106id = 0;
[15:38:49.701]              // -> [jep106id <= 0x00000000]
[15:38:49.701]            __var ROMTableBase = 0;
[15:38:49.701]              // -> [ROMTableBase <= 0x00000000]
[15:38:49.701]            __ap = 0;      // AHB-AP
[15:38:49.702]              // -> [__ap <= 0x00000000]
[15:38:49.702]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[15:38:49.702]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.702]              // -> [ROMTableBase <= 0xE00FD000]
[15:38:49.702]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[15:38:49.703]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.703]              // -> [pidr1 <= 0x00000004]
[15:38:49.703]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[15:38:49.704]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.705]              // -> [pidr2 <= 0x0000001A]
[15:38:49.705]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[15:38:49.705]              // -> [jep106id <= 0x00000020]
[15:38:49.705]          </block>
[15:38:49.705]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[15:38:49.705]            // if-block "jep106id != 0x20"
[15:38:49.706]              // =>  FALSE
[15:38:49.706]            // skip if-block "jep106id != 0x20"
[15:38:49.706]          </control>
[15:38:49.706]        </sequence>
[15:38:49.706]    </block>
[15:38:49.706]  </sequence>
[15:38:49.706]  
[15:38:49.721]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[15:38:49.721]  
[15:38:49.721]  <debugvars>
[15:38:49.721]    // Pre-defined
[15:38:49.721]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:38:49.721]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[15:38:49.721]    __dp=0x00000000
[15:38:49.722]    __ap=0x00000000
[15:38:49.722]    __traceout=0x00000001      (SWO Trace)
[15:38:49.722]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:38:49.722]    __FlashAddr=0x00000000
[15:38:49.722]    __FlashLen=0x00000000
[15:38:49.723]    __FlashArg=0x00000000
[15:38:49.723]    __FlashOp=0x00000000
[15:38:49.723]    __Result=0x00000000
[15:38:49.723]    
[15:38:49.723]    // User-defined
[15:38:49.723]    DbgMCU_CR=0x00000007
[15:38:49.724]    DbgMCU_APB1_Fz=0x00000000
[15:38:49.724]    DbgMCU_APB2_Fz=0x00000000
[15:38:49.724]    TraceClk_Pin=0x00040002
[15:38:49.724]    TraceD0_Pin=0x00040003
[15:38:49.724]    TraceD1_Pin=0x00040004
[15:38:49.725]    TraceD2_Pin=0x00040005
[15:38:49.725]    TraceD3_Pin=0x00040006
[15:38:49.725]  </debugvars>
[15:38:49.725]  
[15:38:49.725]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[15:38:49.726]    <block atomic="false" info="">
[15:38:49.726]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[15:38:49.726]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.727]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[15:38:49.727]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.727]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[15:38:49.728]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.728]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[15:38:49.729]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:38:49.729]    </block>
[15:38:49.729]  </sequence>
[15:38:49.729]  
[15:45:00.221]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[15:45:00.221]  
[15:45:00.221]  <debugvars>
[15:45:00.221]    // Pre-defined
[15:45:00.221]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:45:00.222]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[15:45:00.222]    __dp=0x00000000
[15:45:00.222]    __ap=0x00000000
[15:45:00.222]    __traceout=0x00000001      (SWO Trace)
[15:45:00.222]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:45:00.222]    __FlashAddr=0x00000000
[15:45:00.222]    __FlashLen=0x00000000
[15:45:00.222]    __FlashArg=0x00000000
[15:45:00.223]    __FlashOp=0x00000000
[15:45:00.223]    __Result=0x00000000
[15:45:00.223]    
[15:45:00.223]    // User-defined
[15:45:00.223]    DbgMCU_CR=0x00000007
[15:45:00.223]    DbgMCU_APB1_Fz=0x00000000
[15:45:00.224]    DbgMCU_APB2_Fz=0x00000000
[15:45:00.224]    TraceClk_Pin=0x00040002
[15:45:00.225]    TraceD0_Pin=0x00040003
[15:45:00.225]    TraceD1_Pin=0x00040004
[15:45:00.225]    TraceD2_Pin=0x00040005
[15:45:00.225]    TraceD3_Pin=0x00040006
[15:45:00.225]  </debugvars>
[15:45:00.226]  
[15:45:00.226]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[15:45:00.226]    <block atomic="false" info="">
[15:45:00.226]      Sequence("CheckID");
[15:45:00.226]        <sequence name="CheckID" Pname="" disable="false" info="">
[15:45:00.226]          <block atomic="false" info="">
[15:45:00.226]            __var pidr1 = 0;
[15:45:00.226]              // -> [pidr1 <= 0x00000000]
[15:45:00.226]            __var pidr2 = 0;
[15:45:00.227]              // -> [pidr2 <= 0x00000000]
[15:45:00.227]            __var jep106id = 0;
[15:45:00.227]              // -> [jep106id <= 0x00000000]
[15:45:00.227]            __var ROMTableBase = 0;
[15:45:00.227]              // -> [ROMTableBase <= 0x00000000]
[15:45:00.227]            __ap = 0;      // AHB-AP
[15:45:00.227]              // -> [__ap <= 0x00000000]
[15:45:00.228]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[15:45:00.228]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.228]              // -> [ROMTableBase <= 0xE00FD000]
[15:45:00.228]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[15:45:00.229]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.229]              // -> [pidr1 <= 0x00000004]
[15:45:00.229]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[15:45:00.230]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.230]              // -> [pidr2 <= 0x0000001A]
[15:45:00.230]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[15:45:00.230]              // -> [jep106id <= 0x00000020]
[15:45:00.231]          </block>
[15:45:00.231]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[15:45:00.231]            // if-block "jep106id != 0x20"
[15:45:00.231]              // =>  FALSE
[15:45:00.231]            // skip if-block "jep106id != 0x20"
[15:45:00.231]          </control>
[15:45:00.232]        </sequence>
[15:45:00.232]    </block>
[15:45:00.232]  </sequence>
[15:45:00.232]  
[15:45:00.247]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[15:45:00.247]  
[15:45:00.247]  <debugvars>
[15:45:00.247]    // Pre-defined
[15:45:00.247]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:45:00.247]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[15:45:00.248]    __dp=0x00000000
[15:45:00.248]    __ap=0x00000000
[15:45:00.248]    __traceout=0x00000001      (SWO Trace)
[15:45:00.248]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:45:00.248]    __FlashAddr=0x00000000
[15:45:00.248]    __FlashLen=0x00000000
[15:45:00.249]    __FlashArg=0x00000000
[15:45:00.249]    __FlashOp=0x00000000
[15:45:00.249]    __Result=0x00000000
[15:45:00.249]    
[15:45:00.249]    // User-defined
[15:45:00.249]    DbgMCU_CR=0x00000007
[15:45:00.250]    DbgMCU_APB1_Fz=0x00000000
[15:45:00.250]    DbgMCU_APB2_Fz=0x00000000
[15:45:00.250]    TraceClk_Pin=0x00040002
[15:45:00.250]    TraceD0_Pin=0x00040003
[15:45:00.251]    TraceD1_Pin=0x00040004
[15:45:00.251]    TraceD2_Pin=0x00040005
[15:45:00.251]    TraceD3_Pin=0x00040006
[15:45:00.251]  </debugvars>
[15:45:00.251]  
[15:45:00.251]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[15:45:00.252]    <block atomic="false" info="">
[15:45:00.252]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[15:45:00.252]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.252]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[15:45:00.253]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.253]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[15:45:00.254]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.255]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[15:45:00.255]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:45:00.255]    </block>
[15:45:00.255]  </sequence>
[15:45:00.255]  
[15:46:14.857]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[15:46:14.857]  
[15:46:14.857]  <debugvars>
[15:46:14.857]    // Pre-defined
[15:46:14.858]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:46:14.858]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:46:14.858]    __dp=0x00000000
[15:46:14.858]    __ap=0x00000000
[15:46:14.858]    __traceout=0x00000001      (SWO Trace)
[15:46:14.859]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:46:14.859]    __FlashAddr=0x00000000
[15:46:14.859]    __FlashLen=0x00000000
[15:46:14.859]    __FlashArg=0x00000000
[15:46:14.859]    __FlashOp=0x00000000
[15:46:14.859]    __Result=0x00000000
[15:46:14.860]    
[15:46:14.860]    // User-defined
[15:46:14.860]    DbgMCU_CR=0x00000007
[15:46:14.860]    DbgMCU_APB1_Fz=0x00000000
[15:46:14.860]    DbgMCU_APB2_Fz=0x00000000
[15:46:14.860]    TraceClk_Pin=0x00040002
[15:46:14.861]    TraceD0_Pin=0x00040003
[15:46:14.861]    TraceD1_Pin=0x00040004
[15:46:14.861]    TraceD2_Pin=0x00040005
[15:46:14.861]    TraceD3_Pin=0x00040006
[15:46:14.861]  </debugvars>
[15:46:14.861]  
[15:46:14.862]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[15:46:14.862]    <block atomic="false" info="">
[15:46:14.862]      Sequence("CheckID");
[15:46:14.862]        <sequence name="CheckID" Pname="" disable="false" info="">
[15:46:14.862]          <block atomic="false" info="">
[15:46:14.862]            __var pidr1 = 0;
[15:46:14.863]              // -> [pidr1 <= 0x00000000]
[15:46:14.863]            __var pidr2 = 0;
[15:46:14.863]              // -> [pidr2 <= 0x00000000]
[15:46:14.863]            __var jep106id = 0;
[15:46:14.863]              // -> [jep106id <= 0x00000000]
[15:46:14.863]            __var ROMTableBase = 0;
[15:46:14.864]              // -> [ROMTableBase <= 0x00000000]
[15:46:14.864]            __ap = 0;      // AHB-AP
[15:46:14.864]              // -> [__ap <= 0x00000000]
[15:46:14.864]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[15:46:14.865]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.865]              // -> [ROMTableBase <= 0xE00FD000]
[15:46:14.865]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[15:46:14.865]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.867]              // -> [pidr1 <= 0x00000004]
[15:46:14.867]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[15:46:14.867]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.867]              // -> [pidr2 <= 0x0000001A]
[15:46:14.867]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[15:46:14.867]              // -> [jep106id <= 0x00000020]
[15:46:14.867]          </block>
[15:46:14.867]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[15:46:14.867]            // if-block "jep106id != 0x20"
[15:46:14.867]              // =>  FALSE
[15:46:14.868]            // skip if-block "jep106id != 0x20"
[15:46:14.868]          </control>
[15:46:14.868]        </sequence>
[15:46:14.868]    </block>
[15:46:14.868]  </sequence>
[15:46:14.868]  
[15:46:14.884]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[15:46:14.884]  
[15:46:14.884]  <debugvars>
[15:46:14.884]    // Pre-defined
[15:46:14.884]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:46:14.884]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:46:14.885]    __dp=0x00000000
[15:46:14.885]    __ap=0x00000000
[15:46:14.885]    __traceout=0x00000001      (SWO Trace)
[15:46:14.885]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:46:14.885]    __FlashAddr=0x00000000
[15:46:14.885]    __FlashLen=0x00000000
[15:46:14.885]    __FlashArg=0x00000000
[15:46:14.886]    __FlashOp=0x00000000
[15:46:14.886]    __Result=0x00000000
[15:46:14.886]    
[15:46:14.886]    // User-defined
[15:46:14.886]    DbgMCU_CR=0x00000007
[15:46:14.886]    DbgMCU_APB1_Fz=0x00000000
[15:46:14.886]    DbgMCU_APB2_Fz=0x00000000
[15:46:14.886]    TraceClk_Pin=0x00040002
[15:46:14.886]    TraceD0_Pin=0x00040003
[15:46:14.886]    TraceD1_Pin=0x00040004
[15:46:14.886]    TraceD2_Pin=0x00040005
[15:46:14.886]    TraceD3_Pin=0x00040006
[15:46:14.887]  </debugvars>
[15:46:14.887]  
[15:46:14.887]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[15:46:14.887]    <block atomic="false" info="">
[15:46:14.887]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[15:46:14.887]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.888]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[15:46:14.889]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.889]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[15:46:14.889]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.889]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[15:46:14.889]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.889]    </block>
[15:46:14.890]  </sequence>
[15:46:14.890]  
[15:46:14.906]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[15:46:14.906]  
[15:46:14.906]  <debugvars>
[15:46:14.906]    // Pre-defined
[15:46:14.907]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:46:14.907]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:46:14.907]    __dp=0x00000000
[15:46:14.907]    __ap=0x00000000
[15:46:14.907]    __traceout=0x00000001      (SWO Trace)
[15:46:14.907]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:46:14.907]    __FlashAddr=0x00000000
[15:46:14.907]    __FlashLen=0x00000000
[15:46:14.908]    __FlashArg=0x00000000
[15:46:14.908]    __FlashOp=0x00000000
[15:46:14.908]    __Result=0x00000000
[15:46:14.908]    
[15:46:14.908]    // User-defined
[15:46:14.908]    DbgMCU_CR=0x00000007
[15:46:14.908]    DbgMCU_APB1_Fz=0x00000000
[15:46:14.909]    DbgMCU_APB2_Fz=0x00000000
[15:46:14.909]    TraceClk_Pin=0x00040002
[15:46:14.909]    TraceD0_Pin=0x00040003
[15:46:14.909]    TraceD1_Pin=0x00040004
[15:46:14.909]    TraceD2_Pin=0x00040005
[15:46:14.909]    TraceD3_Pin=0x00040006
[15:46:14.910]  </debugvars>
[15:46:14.910]  
[15:46:14.910]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:46:14.910]    <block atomic="false" info="">
[15:46:14.910]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:46:14.910]        // -> [traceSWO <= 0x00000001]
[15:46:14.911]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:46:14.911]        // -> [traceTPIU <= 0x00000000]
[15:46:14.911]    </block>
[15:46:14.911]    <control if="traceSWO" while="" timeout="0" info="">
[15:46:14.911]      // if-block "traceSWO"
[15:46:14.911]        // =>  TRUE
[15:46:14.911]      <block atomic="false" info="">
[15:46:14.912]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:46:14.912]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:46:14.912]            <block atomic="false" info="">
[15:46:14.912]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:46:14.912]                // -> [dbgmcu_val <= 0x00000000]
[15:46:14.912]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:46:14.912]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:46:14.913]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:46:14.913]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.913]                // -> [dbgmcu_val <= 0x00000007]
[15:46:14.913]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:46:14.914]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:46:14.914]              Sequence("ConfigureTraceSWOPin");
[15:46:14.914]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:46:14.914]                  <block atomic="false" info="">
[15:46:14.914]                    __var pin     = 0;
[15:46:14.914]                      // -> [pin <= 0x00000000]
[15:46:14.915]                    __var port    = 0;
[15:46:14.915]                      // -> [port <= 0x00000000]
[15:46:14.915]                    __var portAdr = 0;
[15:46:14.915]                      // -> [portAdr <= 0x00000000]
[15:46:14.915]                    __var pos     = 0;
[15:46:14.915]                      // -> [pos <= 0x00000000]
[15:46:14.915]                    __var SWO_Pin = 0x00010003;          // PB3
[15:46:14.915]                      // -> [SWO_Pin <= 0x00010003]
[15:46:14.916]                  </block>
[15:46:14.916]                  <block atomic="false" info="configure SWO">
[15:46:14.916]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:46:14.916]                      // -> [pin <= 0x00000003]
[15:46:14.916]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:46:14.916]                      // -> [port <= 0x00000001]
[15:46:14.917]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:46:14.917]                      // -> [portAdr <= 0x40020400]
[15:46:14.917]                    pos = pin * 2;
[15:46:14.917]                      // -> [pos <= 0x00000006]
[15:46:14.917]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:46:14.917]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.918]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.918]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:46:14.918]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.919]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.919]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:46:14.919]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.920]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.920]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:46:14.921]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.921]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.921]                  </block>
[15:46:14.921]                  <control if="pin <  8" while="" timeout="0" info="">
[15:46:14.922]                    // if-block "pin <  8"
[15:46:14.922]                      // =>  TRUE
[15:46:14.922]                    <block atomic="false" info="">
[15:46:14.922]                      pos = ((pin    ) & 7) * 4;
[15:46:14.922]                        // -> [pos <= 0x0000000C]
[15:46:14.922]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:46:14.923]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.923]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.924]                    </block>
[15:46:14.924]                    // end if-block "pin <  8"
[15:46:14.924]                  </control>
[15:46:14.924]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:46:14.924]                    // if-block "pin >= 8"
[15:46:14.924]                      // =>  FALSE
[15:46:14.925]                    // skip if-block "pin >= 8"
[15:46:14.925]                  </control>
[15:46:14.925]                </sequence>
[15:46:14.925]            </block>
[15:46:14.925]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:46:14.925]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:46:14.926]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.926]            </block>
[15:46:14.926]          </sequence>
[15:46:14.927]      </block>
[15:46:14.927]      // end if-block "traceSWO"
[15:46:14.927]    </control>
[15:46:14.927]    <control if="traceTPIU" while="" timeout="0" info="">
[15:46:14.927]      // if-block "traceTPIU"
[15:46:14.927]        // =>  FALSE
[15:46:14.928]      // skip if-block "traceTPIU"
[15:46:14.928]    </control>
[15:46:14.928]  </sequence>
[15:46:14.928]  
[15:46:14.932]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[15:46:14.932]  
[15:46:14.932]  <debugvars>
[15:46:14.932]    // Pre-defined
[15:46:14.932]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:46:14.932]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:46:14.933]    __dp=0x00000000
[15:46:14.933]    __ap=0x00000000
[15:46:14.933]    __traceout=0x00000001      (SWO Trace)
[15:46:14.933]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:46:14.933]    __FlashAddr=0x00000000
[15:46:14.934]    __FlashLen=0x00000000
[15:46:14.934]    __FlashArg=0x00000000
[15:46:14.934]    __FlashOp=0x00000000
[15:46:14.934]    __Result=0x00000000
[15:46:14.934]    
[15:46:14.934]    // User-defined
[15:46:14.935]    DbgMCU_CR=0x00000007
[15:46:14.935]    DbgMCU_APB1_Fz=0x00000000
[15:46:14.935]    DbgMCU_APB2_Fz=0x00000000
[15:46:14.935]    TraceClk_Pin=0x00040002
[15:46:14.935]    TraceD0_Pin=0x00040003
[15:46:14.935]    TraceD1_Pin=0x00040004
[15:46:14.936]    TraceD2_Pin=0x00040005
[15:46:14.936]    TraceD3_Pin=0x00040006
[15:46:14.936]  </debugvars>
[15:46:14.936]  
[15:46:14.936]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:46:14.936]    <block atomic="false" info="">
[15:46:14.937]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:46:14.937]        // -> [traceSWO <= 0x00000001]
[15:46:14.937]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:46:14.937]        // -> [traceTPIU <= 0x00000000]
[15:46:14.937]    </block>
[15:46:14.937]    <control if="traceSWO" while="" timeout="0" info="">
[15:46:14.939]      // if-block "traceSWO"
[15:46:14.939]        // =>  TRUE
[15:46:14.939]      <block atomic="false" info="">
[15:46:14.939]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:46:14.939]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:46:14.939]            <block atomic="false" info="">
[15:46:14.939]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:46:14.940]                // -> [dbgmcu_val <= 0x00000000]
[15:46:14.940]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:46:14.940]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:46:14.940]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:46:14.940]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.941]                // -> [dbgmcu_val <= 0x00000007]
[15:46:14.941]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:46:14.941]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:46:14.941]              Sequence("ConfigureTraceSWOPin");
[15:46:14.941]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:46:14.941]                  <block atomic="false" info="">
[15:46:14.941]                    __var pin     = 0;
[15:46:14.942]                      // -> [pin <= 0x00000000]
[15:46:14.942]                    __var port    = 0;
[15:46:14.942]                      // -> [port <= 0x00000000]
[15:46:14.942]                    __var portAdr = 0;
[15:46:14.942]                      // -> [portAdr <= 0x00000000]
[15:46:14.942]                    __var pos     = 0;
[15:46:14.942]                      // -> [pos <= 0x00000000]
[15:46:14.942]                    __var SWO_Pin = 0x00010003;          // PB3
[15:46:14.942]                      // -> [SWO_Pin <= 0x00010003]
[15:46:14.942]                  </block>
[15:46:14.942]                  <block atomic="false" info="configure SWO">
[15:46:14.943]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:46:14.943]                      // -> [pin <= 0x00000003]
[15:46:14.943]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:46:14.943]                      // -> [port <= 0x00000001]
[15:46:14.943]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:46:14.943]                      // -> [portAdr <= 0x40020400]
[15:46:14.943]                    pos = pin * 2;
[15:46:14.944]                      // -> [pos <= 0x00000006]
[15:46:14.944]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:46:14.944]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.945]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.945]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:46:14.945]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.946]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.946]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:46:14.946]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.946]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.947]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:46:14.947]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.947]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.948]                  </block>
[15:46:14.948]                  <control if="pin <  8" while="" timeout="0" info="">
[15:46:14.948]                    // if-block "pin <  8"
[15:46:14.948]                      // =>  TRUE
[15:46:14.948]                    <block atomic="false" info="">
[15:46:14.948]                      pos = ((pin    ) & 7) * 4;
[15:46:14.948]                        // -> [pos <= 0x0000000C]
[15:46:14.948]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:46:14.950]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.950]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.950]                    </block>
[15:46:14.950]                    // end if-block "pin <  8"
[15:46:14.950]                  </control>
[15:46:14.950]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:46:14.950]                    // if-block "pin >= 8"
[15:46:14.950]                      // =>  FALSE
[15:46:14.950]                    // skip if-block "pin >= 8"
[15:46:14.950]                  </control>
[15:46:14.950]                </sequence>
[15:46:14.950]            </block>
[15:46:14.951]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:46:14.951]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:46:14.951]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:14.951]            </block>
[15:46:14.951]          </sequence>
[15:46:14.951]      </block>
[15:46:14.952]      // end if-block "traceSWO"
[15:46:14.952]    </control>
[15:46:14.952]    <control if="traceTPIU" while="" timeout="0" info="">
[15:46:14.952]      // if-block "traceTPIU"
[15:46:14.952]        // =>  FALSE
[15:46:14.952]      // skip if-block "traceTPIU"
[15:46:14.952]    </control>
[15:46:14.952]  </sequence>
[15:46:14.952]  
[15:46:15.161]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[15:46:15.161]  
[15:46:15.161]  <debugvars>
[15:46:15.161]    // Pre-defined
[15:46:15.161]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:46:15.161]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:46:15.162]    __dp=0x00000000
[15:46:15.162]    __ap=0x00000000
[15:46:15.162]    __traceout=0x00000001      (SWO Trace)
[15:46:15.162]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:46:15.162]    __FlashAddr=0x00000000
[15:46:15.163]    __FlashLen=0x00000000
[15:46:15.163]    __FlashArg=0x00000000
[15:46:15.163]    __FlashOp=0x00000000
[15:46:15.163]    __Result=0x00000000
[15:46:15.163]    
[15:46:15.163]    // User-defined
[15:46:15.164]    DbgMCU_CR=0x00000007
[15:46:15.164]    DbgMCU_APB1_Fz=0x00000000
[15:46:15.165]    DbgMCU_APB2_Fz=0x00000000
[15:46:15.165]    TraceClk_Pin=0x00040002
[15:46:15.165]    TraceD0_Pin=0x00040003
[15:46:15.165]    TraceD1_Pin=0x00040004
[15:46:15.165]    TraceD2_Pin=0x00040005
[15:46:15.165]    TraceD3_Pin=0x00040006
[15:46:15.165]  </debugvars>
[15:46:15.165]  
[15:46:15.166]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:46:15.166]    <block atomic="false" info="">
[15:46:15.166]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:46:15.166]        // -> [traceSWO <= 0x00000001]
[15:46:15.166]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:46:15.166]        // -> [traceTPIU <= 0x00000000]
[15:46:15.167]    </block>
[15:46:15.167]    <control if="traceSWO" while="" timeout="0" info="">
[15:46:15.167]      // if-block "traceSWO"
[15:46:15.167]        // =>  TRUE
[15:46:15.168]      <block atomic="false" info="">
[15:46:15.168]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:46:15.168]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:46:15.168]            <block atomic="false" info="">
[15:46:15.168]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:46:15.168]                // -> [dbgmcu_val <= 0x00000000]
[15:46:15.169]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:46:15.169]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:46:15.169]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:46:15.169]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.170]                // -> [dbgmcu_val <= 0x00000007]
[15:46:15.170]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:46:15.170]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:46:15.170]              Sequence("ConfigureTraceSWOPin");
[15:46:15.170]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:46:15.170]                  <block atomic="false" info="">
[15:46:15.171]                    __var pin     = 0;
[15:46:15.171]                      // -> [pin <= 0x00000000]
[15:46:15.171]                    __var port    = 0;
[15:46:15.171]                      // -> [port <= 0x00000000]
[15:46:15.171]                    __var portAdr = 0;
[15:46:15.171]                      // -> [portAdr <= 0x00000000]
[15:46:15.171]                    __var pos     = 0;
[15:46:15.172]                      // -> [pos <= 0x00000000]
[15:46:15.172]                    __var SWO_Pin = 0x00010003;          // PB3
[15:46:15.172]                      // -> [SWO_Pin <= 0x00010003]
[15:46:15.172]                  </block>
[15:46:15.172]                  <block atomic="false" info="configure SWO">
[15:46:15.172]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:46:15.173]                      // -> [pin <= 0x00000003]
[15:46:15.173]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:46:15.173]                      // -> [port <= 0x00000001]
[15:46:15.173]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:46:15.173]                      // -> [portAdr <= 0x40020400]
[15:46:15.173]                    pos = pin * 2;
[15:46:15.174]                      // -> [pos <= 0x00000006]
[15:46:15.174]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:46:15.174]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.175]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.175]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:46:15.176]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.176]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.176]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:46:15.177]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.177]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.178]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:46:15.178]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.179]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.179]                  </block>
[15:46:15.179]                  <control if="pin <  8" while="" timeout="0" info="">
[15:46:15.179]                    // if-block "pin <  8"
[15:46:15.179]                      // =>  TRUE
[15:46:15.179]                    <block atomic="false" info="">
[15:46:15.180]                      pos = ((pin    ) & 7) * 4;
[15:46:15.180]                        // -> [pos <= 0x0000000C]
[15:46:15.180]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:46:15.180]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.181]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.181]                    </block>
[15:46:15.181]                    // end if-block "pin <  8"
[15:46:15.182]                  </control>
[15:46:15.182]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:46:15.182]                    // if-block "pin >= 8"
[15:46:15.182]                      // =>  FALSE
[15:46:15.182]                    // skip if-block "pin >= 8"
[15:46:15.182]                  </control>
[15:46:15.182]                </sequence>
[15:46:15.182]            </block>
[15:46:15.183]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:46:15.183]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:46:15.183]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:15.183]            </block>
[15:46:15.183]          </sequence>
[15:46:15.184]      </block>
[15:46:15.184]      // end if-block "traceSWO"
[15:46:15.184]    </control>
[15:46:15.184]    <control if="traceTPIU" while="" timeout="0" info="">
[15:46:15.184]      // if-block "traceTPIU"
[15:46:15.184]        // =>  FALSE
[15:46:15.184]      // skip if-block "traceTPIU"
[15:46:15.184]    </control>
[15:46:15.185]  </sequence>
[15:46:15.185]  
[15:46:51.029]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[15:46:51.029]  
[15:46:51.030]  <debugvars>
[15:46:51.030]    // Pre-defined
[15:46:51.030]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:46:51.031]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:46:51.031]    __dp=0x00000000
[15:46:51.031]    __ap=0x00000000
[15:46:51.031]    __traceout=0x00000001      (SWO Trace)
[15:46:51.031]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:46:51.031]    __FlashAddr=0x00000000
[15:46:51.031]    __FlashLen=0x00000000
[15:46:51.031]    __FlashArg=0x00000000
[15:46:51.031]    __FlashOp=0x00000000
[15:46:51.031]    __Result=0x00000000
[15:46:51.032]    
[15:46:51.032]    // User-defined
[15:46:51.032]    DbgMCU_CR=0x00000007
[15:46:51.032]    DbgMCU_APB1_Fz=0x00000000
[15:46:51.032]    DbgMCU_APB2_Fz=0x00000000
[15:46:51.032]    TraceClk_Pin=0x00040002
[15:46:51.032]    TraceD0_Pin=0x00040003
[15:46:51.032]    TraceD1_Pin=0x00040004
[15:46:51.033]    TraceD2_Pin=0x00040005
[15:46:51.034]    TraceD3_Pin=0x00040006
[15:46:51.034]  </debugvars>
[15:46:51.034]  
[15:46:51.034]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:46:51.034]    <block atomic="false" info="">
[15:46:51.034]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:46:51.034]        // -> [traceSWO <= 0x00000001]
[15:46:51.034]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:46:51.034]        // -> [traceTPIU <= 0x00000000]
[15:46:51.034]    </block>
[15:46:51.034]    <control if="traceSWO" while="" timeout="0" info="">
[15:46:51.034]      // if-block "traceSWO"
[15:46:51.035]        // =>  TRUE
[15:46:51.035]      <block atomic="false" info="">
[15:46:51.035]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:46:51.035]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:46:51.035]            <block atomic="false" info="">
[15:46:51.035]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:46:51.035]                // -> [dbgmcu_val <= 0x00000000]
[15:46:51.035]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:46:51.036]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:46:51.036]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:46:51.036]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.036]                // -> [dbgmcu_val <= 0x00000007]
[15:46:51.036]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:46:51.036]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:46:51.036]              Sequence("ConfigureTraceSWOPin");
[15:46:51.037]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:46:51.037]                  <block atomic="false" info="">
[15:46:51.037]                    __var pin     = 0;
[15:46:51.037]                      // -> [pin <= 0x00000000]
[15:46:51.037]                    __var port    = 0;
[15:46:51.037]                      // -> [port <= 0x00000000]
[15:46:51.037]                    __var portAdr = 0;
[15:46:51.037]                      // -> [portAdr <= 0x00000000]
[15:46:51.037]                    __var pos     = 0;
[15:46:51.038]                      // -> [pos <= 0x00000000]
[15:46:51.038]                    __var SWO_Pin = 0x00010003;          // PB3
[15:46:51.038]                      // -> [SWO_Pin <= 0x00010003]
[15:46:51.038]                  </block>
[15:46:51.038]                  <block atomic="false" info="configure SWO">
[15:46:51.039]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:46:51.039]                      // -> [pin <= 0x00000003]
[15:46:51.039]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:46:51.039]                      // -> [port <= 0x00000001]
[15:46:51.039]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:46:51.039]                      // -> [portAdr <= 0x40020400]
[15:46:51.039]                    pos = pin * 2;
[15:46:51.039]                      // -> [pos <= 0x00000006]
[15:46:51.039]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:46:51.040]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.040]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.040]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:46:51.041]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.041]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.041]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:46:51.041]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.042]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.042]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:46:51.042]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.043]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.043]                  </block>
[15:46:51.043]                  <control if="pin <  8" while="" timeout="0" info="">
[15:46:51.043]                    // if-block "pin <  8"
[15:46:51.043]                      // =>  TRUE
[15:46:51.043]                    <block atomic="false" info="">
[15:46:51.044]                      pos = ((pin    ) & 7) * 4;
[15:46:51.044]                        // -> [pos <= 0x0000000C]
[15:46:51.044]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:46:51.044]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.045]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.045]                    </block>
[15:46:51.045]                    // end if-block "pin <  8"
[15:46:51.045]                  </control>
[15:46:51.045]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:46:51.045]                    // if-block "pin >= 8"
[15:46:51.045]                      // =>  FALSE
[15:46:51.045]                    // skip if-block "pin >= 8"
[15:46:51.045]                  </control>
[15:46:51.046]                </sequence>
[15:46:51.046]            </block>
[15:46:51.046]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:46:51.046]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:46:51.046]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:46:51.046]            </block>
[15:46:51.047]          </sequence>
[15:46:51.047]      </block>
[15:46:51.047]      // end if-block "traceSWO"
[15:46:51.047]    </control>
[15:46:51.047]    <control if="traceTPIU" while="" timeout="0" info="">
[15:46:51.047]      // if-block "traceTPIU"
[15:46:51.047]        // =>  FALSE
[15:46:51.047]      // skip if-block "traceTPIU"
[15:46:51.047]    </control>
[15:46:51.048]  </sequence>
[15:46:51.048]  
[15:47:19.446]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[15:47:19.446]  
[15:47:19.446]  <debugvars>
[15:47:19.446]    // Pre-defined
[15:47:19.446]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:47:19.447]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:47:19.447]    __dp=0x00000000
[15:47:19.447]    __ap=0x00000000
[15:47:19.447]    __traceout=0x00000001      (SWO Trace)
[15:47:19.447]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:47:19.447]    __FlashAddr=0x00000000
[15:47:19.448]    __FlashLen=0x00000000
[15:47:19.448]    __FlashArg=0x00000000
[15:47:19.448]    __FlashOp=0x00000000
[15:47:19.448]    __Result=0x00000000
[15:47:19.448]    
[15:47:19.448]    // User-defined
[15:47:19.449]    DbgMCU_CR=0x00000007
[15:47:19.449]    DbgMCU_APB1_Fz=0x00000000
[15:47:19.449]    DbgMCU_APB2_Fz=0x00000000
[15:47:19.449]    TraceClk_Pin=0x00040002
[15:47:19.449]    TraceD0_Pin=0x00040003
[15:47:19.449]    TraceD1_Pin=0x00040004
[15:47:19.450]    TraceD2_Pin=0x00040005
[15:47:19.450]    TraceD3_Pin=0x00040006
[15:47:19.450]  </debugvars>
[15:47:19.450]  
[15:47:19.450]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:47:19.451]    <block atomic="false" info="">
[15:47:19.451]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:47:19.451]        // -> [traceSWO <= 0x00000001]
[15:47:19.451]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:47:19.451]        // -> [traceTPIU <= 0x00000000]
[15:47:19.451]    </block>
[15:47:19.452]    <control if="traceSWO" while="" timeout="0" info="">
[15:47:19.452]      // if-block "traceSWO"
[15:47:19.452]        // =>  TRUE
[15:47:19.452]      <block atomic="false" info="">
[15:47:19.452]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:47:19.452]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:47:19.453]            <block atomic="false" info="">
[15:47:19.453]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:47:19.453]                // -> [dbgmcu_val <= 0x00000000]
[15:47:19.453]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:47:19.453]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:47:19.453]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:47:19.455]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.455]                // -> [dbgmcu_val <= 0x00000007]
[15:47:19.455]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:47:19.455]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:47:19.455]              Sequence("ConfigureTraceSWOPin");
[15:47:19.455]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:47:19.455]                  <block atomic="false" info="">
[15:47:19.455]                    __var pin     = 0;
[15:47:19.455]                      // -> [pin <= 0x00000000]
[15:47:19.456]                    __var port    = 0;
[15:47:19.456]                      // -> [port <= 0x00000000]
[15:47:19.456]                    __var portAdr = 0;
[15:47:19.456]                      // -> [portAdr <= 0x00000000]
[15:47:19.456]                    __var pos     = 0;
[15:47:19.456]                      // -> [pos <= 0x00000000]
[15:47:19.457]                    __var SWO_Pin = 0x00010003;          // PB3
[15:47:19.457]                      // -> [SWO_Pin <= 0x00010003]
[15:47:19.457]                  </block>
[15:47:19.457]                  <block atomic="false" info="configure SWO">
[15:47:19.457]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:47:19.457]                      // -> [pin <= 0x00000003]
[15:47:19.458]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:47:19.458]                      // -> [port <= 0x00000001]
[15:47:19.458]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:47:19.458]                      // -> [portAdr <= 0x40020400]
[15:47:19.458]                    pos = pin * 2;
[15:47:19.459]                      // -> [pos <= 0x00000006]
[15:47:19.459]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:47:19.459]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.460]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.460]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:47:19.460]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.461]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.461]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:47:19.462]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.462]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.462]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:47:19.463]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.463]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.463]                  </block>
[15:47:19.463]                  <control if="pin <  8" while="" timeout="0" info="">
[15:47:19.464]                    // if-block "pin <  8"
[15:47:19.464]                      // =>  TRUE
[15:47:19.464]                    <block atomic="false" info="">
[15:47:19.464]                      pos = ((pin    ) & 7) * 4;
[15:47:19.464]                        // -> [pos <= 0x0000000C]
[15:47:19.464]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:47:19.465]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.465]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.466]                    </block>
[15:47:19.466]                    // end if-block "pin <  8"
[15:47:19.466]                  </control>
[15:47:19.466]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:47:19.466]                    // if-block "pin >= 8"
[15:47:19.466]                      // =>  FALSE
[15:47:19.467]                    // skip if-block "pin >= 8"
[15:47:19.467]                  </control>
[15:47:19.467]                </sequence>
[15:47:19.467]            </block>
[15:47:19.467]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:47:19.467]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:47:19.468]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:47:19.468]            </block>
[15:47:19.468]          </sequence>
[15:47:19.468]      </block>
[15:47:19.468]      // end if-block "traceSWO"
[15:47:19.469]    </control>
[15:47:19.469]    <control if="traceTPIU" while="" timeout="0" info="">
[15:47:19.469]      // if-block "traceTPIU"
[15:47:19.469]        // =>  FALSE
[15:47:19.469]      // skip if-block "traceTPIU"
[15:47:19.469]    </control>
[15:47:19.470]  </sequence>
[15:47:19.470]  
[15:49:51.527]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[15:49:51.527]  
[15:49:51.527]  <debugvars>
[15:49:51.527]    // Pre-defined
[15:49:51.527]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:49:51.528]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:49:51.528]    __dp=0x00000000
[15:49:51.528]    __ap=0x00000000
[15:49:51.528]    __traceout=0x00000001      (SWO Trace)
[15:49:51.528]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:49:51.529]    __FlashAddr=0x00000000
[15:49:51.530]    __FlashLen=0x00000000
[15:49:51.530]    __FlashArg=0x00000000
[15:49:51.530]    __FlashOp=0x00000000
[15:49:51.530]    __Result=0x00000000
[15:49:51.530]    
[15:49:51.530]    // User-defined
[15:49:51.530]    DbgMCU_CR=0x00000007
[15:49:51.530]    DbgMCU_APB1_Fz=0x00000000
[15:49:51.530]    DbgMCU_APB2_Fz=0x00000000
[15:49:51.530]    TraceClk_Pin=0x00040002
[15:49:51.531]    TraceD0_Pin=0x00040003
[15:49:51.531]    TraceD1_Pin=0x00040004
[15:49:51.531]    TraceD2_Pin=0x00040005
[15:49:51.531]    TraceD3_Pin=0x00040006
[15:49:51.531]  </debugvars>
[15:49:51.532]  
[15:49:51.532]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:49:51.532]    <block atomic="false" info="">
[15:49:51.532]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:49:51.532]        // -> [traceSWO <= 0x00000001]
[15:49:51.532]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:49:51.533]        // -> [traceTPIU <= 0x00000000]
[15:49:51.533]    </block>
[15:49:51.533]    <control if="traceSWO" while="" timeout="0" info="">
[15:49:51.533]      // if-block "traceSWO"
[15:49:51.533]        // =>  TRUE
[15:49:51.533]      <block atomic="false" info="">
[15:49:51.534]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:49:51.534]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:49:51.534]            <block atomic="false" info="">
[15:49:51.534]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:49:51.534]                // -> [dbgmcu_val <= 0x00000000]
[15:49:51.534]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:49:51.535]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:49:51.535]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:49:51.535]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.535]                // -> [dbgmcu_val <= 0x00000007]
[15:49:51.536]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:49:51.536]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:49:51.536]              Sequence("ConfigureTraceSWOPin");
[15:49:51.536]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:49:51.536]                  <block atomic="false" info="">
[15:49:51.536]                    __var pin     = 0;
[15:49:51.537]                      // -> [pin <= 0x00000000]
[15:49:51.537]                    __var port    = 0;
[15:49:51.537]                      // -> [port <= 0x00000000]
[15:49:51.537]                    __var portAdr = 0;
[15:49:51.537]                      // -> [portAdr <= 0x00000000]
[15:49:51.537]                    __var pos     = 0;
[15:49:51.538]                      // -> [pos <= 0x00000000]
[15:49:51.538]                    __var SWO_Pin = 0x00010003;          // PB3
[15:49:51.538]                      // -> [SWO_Pin <= 0x00010003]
[15:49:51.538]                  </block>
[15:49:51.538]                  <block atomic="false" info="configure SWO">
[15:49:51.538]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:49:51.539]                      // -> [pin <= 0x00000003]
[15:49:51.539]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:49:51.539]                      // -> [port <= 0x00000001]
[15:49:51.539]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:49:51.539]                      // -> [portAdr <= 0x40020400]
[15:49:51.539]                    pos = pin * 2;
[15:49:51.540]                      // -> [pos <= 0x00000006]
[15:49:51.540]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:49:51.540]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.541]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.541]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:49:51.541]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.542]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.542]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:49:51.543]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.543]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.543]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:49:51.544]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.544]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.544]                  </block>
[15:49:51.544]                  <control if="pin <  8" while="" timeout="0" info="">
[15:49:51.545]                    // if-block "pin <  8"
[15:49:51.545]                      // =>  TRUE
[15:49:51.545]                    <block atomic="false" info="">
[15:49:51.545]                      pos = ((pin    ) & 7) * 4;
[15:49:51.545]                        // -> [pos <= 0x0000000C]
[15:49:51.545]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:49:51.546]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.546]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.546]                    </block>
[15:49:51.547]                    // end if-block "pin <  8"
[15:49:51.547]                  </control>
[15:49:51.547]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:49:51.547]                    // if-block "pin >= 8"
[15:49:51.547]                      // =>  FALSE
[15:49:51.547]                    // skip if-block "pin >= 8"
[15:49:51.547]                  </control>
[15:49:51.548]                </sequence>
[15:49:51.548]            </block>
[15:49:51.548]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:49:51.548]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:49:51.549]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:49:51.549]            </block>
[15:49:51.549]          </sequence>
[15:49:51.549]      </block>
[15:49:51.549]      // end if-block "traceSWO"
[15:49:51.549]    </control>
[15:49:51.550]    <control if="traceTPIU" while="" timeout="0" info="">
[15:49:51.550]      // if-block "traceTPIU"
[15:49:51.550]        // =>  FALSE
[15:49:51.550]      // skip if-block "traceTPIU"
[15:49:51.550]    </control>
[15:49:51.550]  </sequence>
[15:49:51.550]  
[15:50:41.032]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[15:50:41.032]  
[15:50:41.032]  <debugvars>
[15:50:41.033]    // Pre-defined
[15:50:41.033]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:50:41.033]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:50:41.033]    __dp=0x00000000
[15:50:41.033]    __ap=0x00000000
[15:50:41.033]    __traceout=0x00000001      (SWO Trace)
[15:50:41.034]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:50:41.034]    __FlashAddr=0x00000000
[15:50:41.034]    __FlashLen=0x00000000
[15:50:41.034]    __FlashArg=0x00000000
[15:50:41.034]    __FlashOp=0x00000000
[15:50:41.034]    __Result=0x00000000
[15:50:41.035]    
[15:50:41.035]    // User-defined
[15:50:41.035]    DbgMCU_CR=0x00000007
[15:50:41.035]    DbgMCU_APB1_Fz=0x00000000
[15:50:41.035]    DbgMCU_APB2_Fz=0x00000000
[15:50:41.035]    TraceClk_Pin=0x00040002
[15:50:41.035]    TraceD0_Pin=0x00040003
[15:50:41.036]    TraceD1_Pin=0x00040004
[15:50:41.036]    TraceD2_Pin=0x00040005
[15:50:41.036]    TraceD3_Pin=0x00040006
[15:50:41.036]  </debugvars>
[15:50:41.036]  
[15:50:41.036]  <sequence name="TraceStart" Pname="" disable="false" info="">
[15:50:41.036]    <block atomic="false" info="">
[15:50:41.036]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[15:50:41.036]        // -> [traceSWO <= 0x00000001]
[15:50:41.036]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[15:50:41.037]        // -> [traceTPIU <= 0x00000000]
[15:50:41.037]    </block>
[15:50:41.037]    <control if="traceSWO" while="" timeout="0" info="">
[15:50:41.037]      // if-block "traceSWO"
[15:50:41.037]        // =>  TRUE
[15:50:41.037]      <block atomic="false" info="">
[15:50:41.037]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[15:50:41.037]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[15:50:41.038]            <block atomic="false" info="">
[15:50:41.038]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:50:41.038]                // -> [dbgmcu_val <= 0x00000000]
[15:50:41.038]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[15:50:41.038]                // -> [dbgmcu_trace_val <= 0x00000000]
[15:50:41.038]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[15:50:41.039]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.039]                // -> [dbgmcu_val <= 0x00000007]
[15:50:41.039]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[15:50:41.039]                // -> [dbgmcu_trace_val <= 0x00000020]
[15:50:41.039]              Sequence("ConfigureTraceSWOPin");
[15:50:41.039]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[15:50:41.039]                  <block atomic="false" info="">
[15:50:41.039]                    __var pin     = 0;
[15:50:41.039]                      // -> [pin <= 0x00000000]
[15:50:41.040]                    __var port    = 0;
[15:50:41.040]                      // -> [port <= 0x00000000]
[15:50:41.040]                    __var portAdr = 0;
[15:50:41.040]                      // -> [portAdr <= 0x00000000]
[15:50:41.040]                    __var pos     = 0;
[15:50:41.040]                      // -> [pos <= 0x00000000]
[15:50:41.040]                    __var SWO_Pin = 0x00010003;          // PB3
[15:50:41.040]                      // -> [SWO_Pin <= 0x00010003]
[15:50:41.040]                  </block>
[15:50:41.041]                  <block atomic="false" info="configure SWO">
[15:50:41.041]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[15:50:41.041]                      // -> [pin <= 0x00000003]
[15:50:41.041]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[15:50:41.041]                      // -> [port <= 0x00000001]
[15:50:41.041]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[15:50:41.041]                      // -> [portAdr <= 0x40020400]
[15:50:41.041]                    pos = pin * 2;
[15:50:41.041]                      // -> [pos <= 0x00000006]
[15:50:41.042]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[15:50:41.042]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.042]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.042]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[15:50:41.043]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.043]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.043]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[15:50:41.044]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.044]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.044]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[15:50:41.045]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.045]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.045]                  </block>
[15:50:41.045]                  <control if="pin <  8" while="" timeout="0" info="">
[15:50:41.046]                    // if-block "pin <  8"
[15:50:41.046]                      // =>  TRUE
[15:50:41.046]                    <block atomic="false" info="">
[15:50:41.046]                      pos = ((pin    ) & 7) * 4;
[15:50:41.046]                        // -> [pos <= 0x0000000C]
[15:50:41.046]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[15:50:41.047]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.047]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.047]                    </block>
[15:50:41.047]                    // end if-block "pin <  8"
[15:50:41.047]                  </control>
[15:50:41.047]                  <control if="pin >= 8" while="" timeout="0" info="">
[15:50:41.048]                    // if-block "pin >= 8"
[15:50:41.048]                      // =>  FALSE
[15:50:41.048]                    // skip if-block "pin >= 8"
[15:50:41.048]                  </control>
[15:50:41.048]                </sequence>
[15:50:41.048]            </block>
[15:50:41.048]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[15:50:41.048]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[15:50:41.049]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[15:50:41.049]            </block>
[15:50:41.049]          </sequence>
[15:50:41.049]      </block>
[15:50:41.049]      // end if-block "traceSWO"
[15:50:41.049]    </control>
[15:50:41.049]    <control if="traceTPIU" while="" timeout="0" info="">
[15:50:41.050]      // if-block "traceTPIU"
[15:50:41.050]        // =>  FALSE
[15:50:41.050]      // skip if-block "traceTPIU"
[15:50:41.050]    </control>
[15:50:41.050]  </sequence>
[15:50:41.050]  
[15:53:33.318]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[15:53:33.318]  
[15:53:33.318]  <debugvars>
[15:53:33.319]    // Pre-defined
[15:53:33.319]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[15:53:33.319]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[15:53:33.319]    __dp=0x00000000
[15:53:33.319]    __ap=0x00000000
[15:53:33.319]    __traceout=0x00000001      (SWO Trace)
[15:53:33.319]    __errorcontrol=0x00000000  (Skip Errors="False")
[15:53:33.319]    __FlashAddr=0x00000000
[15:53:33.320]    __FlashLen=0x00000000
[15:53:33.320]    __FlashArg=0x00000000
[15:53:33.320]    __FlashOp=0x00000000
[15:53:33.320]    __Result=0x00000000
[15:53:33.320]    
[15:53:33.320]    // User-defined
[15:53:33.320]    DbgMCU_CR=0x00000007
[15:53:33.320]    DbgMCU_APB1_Fz=0x00000000
[15:53:33.321]    DbgMCU_APB2_Fz=0x00000000
[15:53:33.321]    TraceClk_Pin=0x00040002
[15:53:33.321]    TraceD0_Pin=0x00040003
[15:53:33.321]    TraceD1_Pin=0x00040004
[15:53:33.321]    TraceD2_Pin=0x00040005
[15:53:33.321]    TraceD3_Pin=0x00040006
[15:53:33.321]  </debugvars>
[15:53:33.321]  
[15:53:33.322]  <sequence name="TraceStop" Pname="" disable="false" info="">
[15:53:33.322]    <block atomic="false" info="">
[15:53:33.322]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[15:53:33.322]        // -> [traceSWO <= 0x00000001]
[15:53:33.322]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[15:53:33.322]        // -> [traceTPIU <= 0x00000000]
[15:53:33.322]    </block>
[15:53:33.323]    <control if="traceSWO" while="" timeout="0" info="">
[15:53:33.323]      // if-block "traceSWO"
[15:53:33.323]        // =>  TRUE
[15:53:33.323]      <block atomic="false" info="">
[15:53:33.323]        Sequence("DisableTraceSWO");
[15:53:33.323]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[15:53:33.323]            <block atomic="false" info="">
[15:53:33.323]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[15:53:33.323]                // -> [dbgmcu_val <= 0x00000000]
[15:53:33.324]            </block>
[15:53:33.324]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[15:53:33.324]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[15:53:33.324]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[15:53:33.324]                // -> [dbgmcu_val <= 0x00000007]
[15:53:33.324]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[15:53:33.325]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[15:53:33.325]            </block>
[15:53:33.325]          </sequence>
[15:53:33.325]      </block>
[15:53:33.325]      // end if-block "traceSWO"
[15:53:33.325]    </control>
[15:53:33.326]    <control if="traceTPIU" while="" timeout="0" info="">
[15:53:33.326]      // if-block "traceTPIU"
[15:53:33.326]        // =>  FALSE
[15:53:33.326]      // skip if-block "traceTPIU"
[15:53:33.326]    </control>
[15:53:33.326]  </sequence>
[15:53:33.326]  
[16:01:34.157]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:01:34.157]  
[16:01:34.157]  <debugvars>
[16:01:34.157]    // Pre-defined
[16:01:34.157]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:01:34.157]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:01:34.158]    __dp=0x00000000
[16:01:34.158]    __ap=0x00000000
[16:01:34.158]    __traceout=0x00000001      (SWO Trace)
[16:01:34.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:01:34.158]    __FlashAddr=0x00000000
[16:01:34.159]    __FlashLen=0x00000000
[16:01:34.159]    __FlashArg=0x00000000
[16:01:34.159]    __FlashOp=0x00000000
[16:01:34.159]    __Result=0x00000000
[16:01:34.159]    
[16:01:34.159]    // User-defined
[16:01:34.160]    DbgMCU_CR=0x00000007
[16:01:34.160]    DbgMCU_APB1_Fz=0x00000000
[16:01:34.160]    DbgMCU_APB2_Fz=0x00000000
[16:01:34.160]    TraceClk_Pin=0x00040002
[16:01:34.160]    TraceD0_Pin=0x00040003
[16:01:34.161]    TraceD1_Pin=0x00040004
[16:01:34.161]    TraceD2_Pin=0x00040005
[16:01:34.161]    TraceD3_Pin=0x00040006
[16:01:34.161]  </debugvars>
[16:01:34.161]  
[16:01:34.162]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:01:34.162]    <block atomic="false" info="">
[16:01:34.162]      Sequence("CheckID");
[16:01:34.162]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:01:34.162]          <block atomic="false" info="">
[16:01:34.162]            __var pidr1 = 0;
[16:01:34.163]              // -> [pidr1 <= 0x00000000]
[16:01:34.163]            __var pidr2 = 0;
[16:01:34.163]              // -> [pidr2 <= 0x00000000]
[16:01:34.163]            __var jep106id = 0;
[16:01:34.163]              // -> [jep106id <= 0x00000000]
[16:01:34.164]            __var ROMTableBase = 0;
[16:01:34.164]              // -> [ROMTableBase <= 0x00000000]
[16:01:34.164]            __ap = 0;      // AHB-AP
[16:01:34.164]              // -> [__ap <= 0x00000000]
[16:01:34.164]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:01:34.165]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.165]              // -> [ROMTableBase <= 0xE00FD000]
[16:01:34.165]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:01:34.166]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.166]              // -> [pidr1 <= 0x00000004]
[16:01:34.166]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:01:34.167]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.167]              // -> [pidr2 <= 0x0000001A]
[16:01:34.167]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:01:34.167]              // -> [jep106id <= 0x00000020]
[16:01:34.167]          </block>
[16:01:34.167]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:01:34.168]            // if-block "jep106id != 0x20"
[16:01:34.168]              // =>  FALSE
[16:01:34.168]            // skip if-block "jep106id != 0x20"
[16:01:34.168]          </control>
[16:01:34.168]        </sequence>
[16:01:34.168]    </block>
[16:01:34.169]  </sequence>
[16:01:34.169]  
[16:01:34.183]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:01:34.183]  
[16:01:34.183]  <debugvars>
[16:01:34.183]    // Pre-defined
[16:01:34.184]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:01:34.184]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:01:34.184]    __dp=0x00000000
[16:01:34.184]    __ap=0x00000000
[16:01:34.184]    __traceout=0x00000001      (SWO Trace)
[16:01:34.185]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:01:34.185]    __FlashAddr=0x00000000
[16:01:34.185]    __FlashLen=0x00000000
[16:01:34.186]    __FlashArg=0x00000000
[16:01:34.186]    __FlashOp=0x00000000
[16:01:34.186]    __Result=0x00000000
[16:01:34.186]    
[16:01:34.186]    // User-defined
[16:01:34.186]    DbgMCU_CR=0x00000007
[16:01:34.186]    DbgMCU_APB1_Fz=0x00000000
[16:01:34.186]    DbgMCU_APB2_Fz=0x00000000
[16:01:34.187]    TraceClk_Pin=0x00040002
[16:01:34.187]    TraceD0_Pin=0x00040003
[16:01:34.187]    TraceD1_Pin=0x00040004
[16:01:34.187]    TraceD2_Pin=0x00040005
[16:01:34.187]    TraceD3_Pin=0x00040006
[16:01:34.187]  </debugvars>
[16:01:34.188]  
[16:01:34.188]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:01:34.188]    <block atomic="false" info="">
[16:01:34.188]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:01:34.189]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.189]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:01:34.190]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.190]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:01:34.190]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.191]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:01:34.191]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:01:34.191]    </block>
[16:01:34.192]  </sequence>
[16:01:34.192]  
[16:03:42.095]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:03:42.095]  
[16:03:42.095]  <debugvars>
[16:03:42.095]    // Pre-defined
[16:03:42.095]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:03:42.096]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:03:42.096]    __dp=0x00000000
[16:03:42.096]    __ap=0x00000000
[16:03:42.096]    __traceout=0x00000001      (SWO Trace)
[16:03:42.096]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:03:42.096]    __FlashAddr=0x00000000
[16:03:42.097]    __FlashLen=0x00000000
[16:03:42.097]    __FlashArg=0x00000000
[16:03:42.097]    __FlashOp=0x00000000
[16:03:42.097]    __Result=0x00000000
[16:03:42.097]    
[16:03:42.097]    // User-defined
[16:03:42.098]    DbgMCU_CR=0x00000007
[16:03:42.098]    DbgMCU_APB1_Fz=0x00000000
[16:03:42.098]    DbgMCU_APB2_Fz=0x00000000
[16:03:42.098]    TraceClk_Pin=0x00040002
[16:03:42.098]    TraceD0_Pin=0x00040003
[16:03:42.099]    TraceD1_Pin=0x00040004
[16:03:42.099]    TraceD2_Pin=0x00040005
[16:03:42.099]    TraceD3_Pin=0x00040006
[16:03:42.099]  </debugvars>
[16:03:42.099]  
[16:03:42.100]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:03:42.100]    <block atomic="false" info="">
[16:03:42.100]      Sequence("CheckID");
[16:03:42.100]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:03:42.100]          <block atomic="false" info="">
[16:03:42.100]            __var pidr1 = 0;
[16:03:42.101]              // -> [pidr1 <= 0x00000000]
[16:03:42.101]            __var pidr2 = 0;
[16:03:42.101]              // -> [pidr2 <= 0x00000000]
[16:03:42.101]            __var jep106id = 0;
[16:03:42.101]              // -> [jep106id <= 0x00000000]
[16:03:42.102]            __var ROMTableBase = 0;
[16:03:42.102]              // -> [ROMTableBase <= 0x00000000]
[16:03:42.102]            __ap = 0;      // AHB-AP
[16:03:42.102]              // -> [__ap <= 0x00000000]
[16:03:42.102]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:03:42.103]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.103]              // -> [ROMTableBase <= 0xE00FD000]
[16:03:42.103]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:03:42.104]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.104]              // -> [pidr1 <= 0x00000004]
[16:03:42.104]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:03:42.105]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.105]              // -> [pidr2 <= 0x0000001A]
[16:03:42.106]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:03:42.106]              // -> [jep106id <= 0x00000020]
[16:03:42.106]          </block>
[16:03:42.106]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:03:42.106]            // if-block "jep106id != 0x20"
[16:03:42.106]              // =>  FALSE
[16:03:42.106]            // skip if-block "jep106id != 0x20"
[16:03:42.106]          </control>
[16:03:42.106]        </sequence>
[16:03:42.107]    </block>
[16:03:42.107]  </sequence>
[16:03:42.107]  
[16:03:42.122]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:03:42.122]  
[16:03:42.122]  <debugvars>
[16:03:42.123]    // Pre-defined
[16:03:42.123]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:03:42.123]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:03:42.123]    __dp=0x00000000
[16:03:42.123]    __ap=0x00000000
[16:03:42.123]    __traceout=0x00000001      (SWO Trace)
[16:03:42.124]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:03:42.124]    __FlashAddr=0x00000000
[16:03:42.124]    __FlashLen=0x00000000
[16:03:42.125]    __FlashArg=0x00000000
[16:03:42.125]    __FlashOp=0x00000000
[16:03:42.125]    __Result=0x00000000
[16:03:42.125]    
[16:03:42.125]    // User-defined
[16:03:42.125]    DbgMCU_CR=0x00000007
[16:03:42.125]    DbgMCU_APB1_Fz=0x00000000
[16:03:42.125]    DbgMCU_APB2_Fz=0x00000000
[16:03:42.125]    TraceClk_Pin=0x00040002
[16:03:42.126]    TraceD0_Pin=0x00040003
[16:03:42.126]    TraceD1_Pin=0x00040004
[16:03:42.126]    TraceD2_Pin=0x00040005
[16:03:42.127]    TraceD3_Pin=0x00040006
[16:03:42.127]  </debugvars>
[16:03:42.127]  
[16:03:42.127]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:03:42.127]    <block atomic="false" info="">
[16:03:42.127]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:03:42.128]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.128]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:03:42.129]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.129]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:03:42.129]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.129]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:03:42.130]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.130]    </block>
[16:03:42.130]  </sequence>
[16:03:42.130]  
[16:03:42.147]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[16:03:42.147]  
[16:03:42.148]  <debugvars>
[16:03:42.148]    // Pre-defined
[16:03:42.148]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:03:42.148]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:03:42.148]    __dp=0x00000000
[16:03:42.149]    __ap=0x00000000
[16:03:42.149]    __traceout=0x00000001      (SWO Trace)
[16:03:42.149]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:03:42.149]    __FlashAddr=0x00000000
[16:03:42.150]    __FlashLen=0x00000000
[16:03:42.150]    __FlashArg=0x00000000
[16:03:42.150]    __FlashOp=0x00000000
[16:03:42.150]    __Result=0x00000000
[16:03:42.150]    
[16:03:42.150]    // User-defined
[16:03:42.150]    DbgMCU_CR=0x00000007
[16:03:42.151]    DbgMCU_APB1_Fz=0x00000000
[16:03:42.151]    DbgMCU_APB2_Fz=0x00000000
[16:03:42.151]    TraceClk_Pin=0x00040002
[16:03:42.151]    TraceD0_Pin=0x00040003
[16:03:42.151]    TraceD1_Pin=0x00040004
[16:03:42.152]    TraceD2_Pin=0x00040005
[16:03:42.152]    TraceD3_Pin=0x00040006
[16:03:42.152]  </debugvars>
[16:03:42.152]  
[16:03:42.152]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:03:42.153]    <block atomic="false" info="">
[16:03:42.153]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:03:42.153]        // -> [traceSWO <= 0x00000001]
[16:03:42.153]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:03:42.153]        // -> [traceTPIU <= 0x00000000]
[16:03:42.154]    </block>
[16:03:42.154]    <control if="traceSWO" while="" timeout="0" info="">
[16:03:42.154]      // if-block "traceSWO"
[16:03:42.154]        // =>  TRUE
[16:03:42.154]      <block atomic="false" info="">
[16:03:42.154]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:03:42.155]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:03:42.155]            <block atomic="false" info="">
[16:03:42.155]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:03:42.155]                // -> [dbgmcu_val <= 0x00000000]
[16:03:42.155]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:03:42.156]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:03:42.156]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:03:42.156]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.156]                // -> [dbgmcu_val <= 0x00000007]
[16:03:42.157]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:03:42.157]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:03:42.157]              Sequence("ConfigureTraceSWOPin");
[16:03:42.157]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:03:42.157]                  <block atomic="false" info="">
[16:03:42.157]                    __var pin     = 0;
[16:03:42.158]                      // -> [pin <= 0x00000000]
[16:03:42.158]                    __var port    = 0;
[16:03:42.158]                      // -> [port <= 0x00000000]
[16:03:42.158]                    __var portAdr = 0;
[16:03:42.158]                      // -> [portAdr <= 0x00000000]
[16:03:42.159]                    __var pos     = 0;
[16:03:42.159]                      // -> [pos <= 0x00000000]
[16:03:42.159]                    __var SWO_Pin = 0x00010003;          // PB3
[16:03:42.159]                      // -> [SWO_Pin <= 0x00010003]
[16:03:42.159]                  </block>
[16:03:42.159]                  <block atomic="false" info="configure SWO">
[16:03:42.160]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:03:42.160]                      // -> [pin <= 0x00000003]
[16:03:42.160]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:03:42.160]                      // -> [port <= 0x00000001]
[16:03:42.160]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:03:42.160]                      // -> [portAdr <= 0x40020400]
[16:03:42.161]                    pos = pin * 2;
[16:03:42.161]                      // -> [pos <= 0x00000006]
[16:03:42.161]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:03:42.162]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.162]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.162]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:03:42.163]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.163]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.163]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:03:42.164]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.164]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.165]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:03:42.165]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.166]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.166]                  </block>
[16:03:42.166]                  <control if="pin <  8" while="" timeout="0" info="">
[16:03:42.166]                    // if-block "pin <  8"
[16:03:42.166]                      // =>  TRUE
[16:03:42.166]                    <block atomic="false" info="">
[16:03:42.167]                      pos = ((pin    ) & 7) * 4;
[16:03:42.167]                        // -> [pos <= 0x0000000C]
[16:03:42.167]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:03:42.167]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.168]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.168]                    </block>
[16:03:42.168]                    // end if-block "pin <  8"
[16:03:42.169]                  </control>
[16:03:42.169]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:03:42.169]                    // if-block "pin >= 8"
[16:03:42.169]                      // =>  FALSE
[16:03:42.169]                    // skip if-block "pin >= 8"
[16:03:42.169]                  </control>
[16:03:42.170]                </sequence>
[16:03:42.170]            </block>
[16:03:42.170]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:03:42.170]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:03:42.171]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.171]            </block>
[16:03:42.171]          </sequence>
[16:03:42.171]      </block>
[16:03:42.171]      // end if-block "traceSWO"
[16:03:42.172]    </control>
[16:03:42.172]    <control if="traceTPIU" while="" timeout="0" info="">
[16:03:42.172]      // if-block "traceTPIU"
[16:03:42.172]        // =>  FALSE
[16:03:42.172]      // skip if-block "traceTPIU"
[16:03:42.172]    </control>
[16:03:42.173]  </sequence>
[16:03:42.173]  
[16:03:42.176]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:03:42.176]  
[16:03:42.177]  <debugvars>
[16:03:42.177]    // Pre-defined
[16:03:42.177]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:03:42.177]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:03:42.177]    __dp=0x00000000
[16:03:42.177]    __ap=0x00000000
[16:03:42.178]    __traceout=0x00000001      (SWO Trace)
[16:03:42.178]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:03:42.178]    __FlashAddr=0x00000000
[16:03:42.178]    __FlashLen=0x00000000
[16:03:42.178]    __FlashArg=0x00000000
[16:03:42.178]    __FlashOp=0x00000000
[16:03:42.179]    __Result=0x00000000
[16:03:42.179]    
[16:03:42.179]    // User-defined
[16:03:42.179]    DbgMCU_CR=0x00000007
[16:03:42.179]    DbgMCU_APB1_Fz=0x00000000
[16:03:42.179]    DbgMCU_APB2_Fz=0x00000000
[16:03:42.179]    TraceClk_Pin=0x00040002
[16:03:42.180]    TraceD0_Pin=0x00040003
[16:03:42.180]    TraceD1_Pin=0x00040004
[16:03:42.180]    TraceD2_Pin=0x00040005
[16:03:42.180]    TraceD3_Pin=0x00040006
[16:03:42.180]  </debugvars>
[16:03:42.180]  
[16:03:42.181]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:03:42.181]    <block atomic="false" info="">
[16:03:42.181]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:03:42.181]        // -> [traceSWO <= 0x00000001]
[16:03:42.181]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:03:42.181]        // -> [traceTPIU <= 0x00000000]
[16:03:42.182]    </block>
[16:03:42.182]    <control if="traceSWO" while="" timeout="0" info="">
[16:03:42.182]      // if-block "traceSWO"
[16:03:42.182]        // =>  TRUE
[16:03:42.182]      <block atomic="false" info="">
[16:03:42.182]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:03:42.183]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:03:42.183]            <block atomic="false" info="">
[16:03:42.183]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:03:42.183]                // -> [dbgmcu_val <= 0x00000000]
[16:03:42.183]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:03:42.184]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:03:42.184]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:03:42.184]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.184]                // -> [dbgmcu_val <= 0x00000007]
[16:03:42.185]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:03:42.185]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:03:42.185]              Sequence("ConfigureTraceSWOPin");
[16:03:42.185]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:03:42.185]                  <block atomic="false" info="">
[16:03:42.185]                    __var pin     = 0;
[16:03:42.186]                      // -> [pin <= 0x00000000]
[16:03:42.186]                    __var port    = 0;
[16:03:42.186]                      // -> [port <= 0x00000000]
[16:03:42.186]                    __var portAdr = 0;
[16:03:42.186]                      // -> [portAdr <= 0x00000000]
[16:03:42.186]                    __var pos     = 0;
[16:03:42.186]                      // -> [pos <= 0x00000000]
[16:03:42.187]                    __var SWO_Pin = 0x00010003;          // PB3
[16:03:42.187]                      // -> [SWO_Pin <= 0x00010003]
[16:03:42.187]                  </block>
[16:03:42.187]                  <block atomic="false" info="configure SWO">
[16:03:42.187]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:03:42.187]                      // -> [pin <= 0x00000003]
[16:03:42.187]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:03:42.188]                      // -> [port <= 0x00000001]
[16:03:42.188]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:03:42.188]                      // -> [portAdr <= 0x40020400]
[16:03:42.188]                    pos = pin * 2;
[16:03:42.188]                      // -> [pos <= 0x00000006]
[16:03:42.188]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:03:42.189]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.189]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.189]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:03:42.190]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.190]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.190]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:03:42.191]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.191]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.191]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:03:42.192]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.192]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.192]                  </block>
[16:03:42.192]                  <control if="pin <  8" while="" timeout="0" info="">
[16:03:42.192]                    // if-block "pin <  8"
[16:03:42.193]                      // =>  TRUE
[16:03:42.193]                    <block atomic="false" info="">
[16:03:42.193]                      pos = ((pin    ) & 7) * 4;
[16:03:42.193]                        // -> [pos <= 0x0000000C]
[16:03:42.193]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:03:42.193]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.194]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.194]                    </block>
[16:03:42.194]                    // end if-block "pin <  8"
[16:03:42.194]                  </control>
[16:03:42.194]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:03:42.195]                    // if-block "pin >= 8"
[16:03:42.195]                      // =>  FALSE
[16:03:42.195]                    // skip if-block "pin >= 8"
[16:03:42.195]                  </control>
[16:03:42.195]                </sequence>
[16:03:42.195]            </block>
[16:03:42.195]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:03:42.196]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:03:42.196]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.196]            </block>
[16:03:42.196]          </sequence>
[16:03:42.197]      </block>
[16:03:42.197]      // end if-block "traceSWO"
[16:03:42.197]    </control>
[16:03:42.197]    <control if="traceTPIU" while="" timeout="0" info="">
[16:03:42.197]      // if-block "traceTPIU"
[16:03:42.197]        // =>  FALSE
[16:03:42.197]      // skip if-block "traceTPIU"
[16:03:42.197]    </control>
[16:03:42.198]  </sequence>
[16:03:42.198]  
[16:03:42.412]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:03:42.412]  
[16:03:42.412]  <debugvars>
[16:03:42.412]    // Pre-defined
[16:03:42.412]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:03:42.412]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:03:42.412]    __dp=0x00000000
[16:03:42.412]    __ap=0x00000000
[16:03:42.413]    __traceout=0x00000001      (SWO Trace)
[16:03:42.413]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:03:42.413]    __FlashAddr=0x00000000
[16:03:42.413]    __FlashLen=0x00000000
[16:03:42.413]    __FlashArg=0x00000000
[16:03:42.413]    __FlashOp=0x00000000
[16:03:42.413]    __Result=0x00000000
[16:03:42.414]    
[16:03:42.414]    // User-defined
[16:03:42.414]    DbgMCU_CR=0x00000007
[16:03:42.414]    DbgMCU_APB1_Fz=0x00000000
[16:03:42.414]    DbgMCU_APB2_Fz=0x00000000
[16:03:42.414]    TraceClk_Pin=0x00040002
[16:03:42.414]    TraceD0_Pin=0x00040003
[16:03:42.414]    TraceD1_Pin=0x00040004
[16:03:42.414]    TraceD2_Pin=0x00040005
[16:03:42.415]    TraceD3_Pin=0x00040006
[16:03:42.415]  </debugvars>
[16:03:42.415]  
[16:03:42.415]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:03:42.415]    <block atomic="false" info="">
[16:03:42.415]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:03:42.415]        // -> [traceSWO <= 0x00000001]
[16:03:42.416]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:03:42.416]        // -> [traceTPIU <= 0x00000000]
[16:03:42.416]    </block>
[16:03:42.416]    <control if="traceSWO" while="" timeout="0" info="">
[16:03:42.416]      // if-block "traceSWO"
[16:03:42.416]        // =>  TRUE
[16:03:42.416]      <block atomic="false" info="">
[16:03:42.417]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:03:42.417]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:03:42.417]            <block atomic="false" info="">
[16:03:42.417]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:03:42.417]                // -> [dbgmcu_val <= 0x00000000]
[16:03:42.417]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:03:42.417]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:03:42.418]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:03:42.418]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.418]                // -> [dbgmcu_val <= 0x00000007]
[16:03:42.418]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:03:42.418]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:03:42.419]              Sequence("ConfigureTraceSWOPin");
[16:03:42.419]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:03:42.419]                  <block atomic="false" info="">
[16:03:42.419]                    __var pin     = 0;
[16:03:42.419]                      // -> [pin <= 0x00000000]
[16:03:42.419]                    __var port    = 0;
[16:03:42.419]                      // -> [port <= 0x00000000]
[16:03:42.419]                    __var portAdr = 0;
[16:03:42.419]                      // -> [portAdr <= 0x00000000]
[16:03:42.420]                    __var pos     = 0;
[16:03:42.420]                      // -> [pos <= 0x00000000]
[16:03:42.420]                    __var SWO_Pin = 0x00010003;          // PB3
[16:03:42.420]                      // -> [SWO_Pin <= 0x00010003]
[16:03:42.420]                  </block>
[16:03:42.420]                  <block atomic="false" info="configure SWO">
[16:03:42.420]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:03:42.420]                      // -> [pin <= 0x00000003]
[16:03:42.420]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:03:42.421]                      // -> [port <= 0x00000001]
[16:03:42.421]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:03:42.421]                      // -> [portAdr <= 0x40020400]
[16:03:42.421]                    pos = pin * 2;
[16:03:42.421]                      // -> [pos <= 0x00000006]
[16:03:42.421]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:03:42.422]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.422]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.422]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:03:42.423]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.423]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.423]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:03:42.424]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.424]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.424]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:03:42.425]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.425]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.425]                  </block>
[16:03:42.425]                  <control if="pin <  8" while="" timeout="0" info="">
[16:03:42.425]                    // if-block "pin <  8"
[16:03:42.425]                      // =>  TRUE
[16:03:42.426]                    <block atomic="false" info="">
[16:03:42.426]                      pos = ((pin    ) & 7) * 4;
[16:03:42.426]                        // -> [pos <= 0x0000000C]
[16:03:42.426]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:03:42.426]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.427]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.427]                    </block>
[16:03:42.427]                    // end if-block "pin <  8"
[16:03:42.427]                  </control>
[16:03:42.427]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:03:42.427]                    // if-block "pin >= 8"
[16:03:42.427]                      // =>  FALSE
[16:03:42.428]                    // skip if-block "pin >= 8"
[16:03:42.428]                  </control>
[16:03:42.428]                </sequence>
[16:03:42.428]            </block>
[16:03:42.428]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:03:42.428]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:03:42.429]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:03:42.429]            </block>
[16:03:42.429]          </sequence>
[16:03:42.429]      </block>
[16:03:42.429]      // end if-block "traceSWO"
[16:03:42.429]    </control>
[16:03:42.429]    <control if="traceTPIU" while="" timeout="0" info="">
[16:03:42.429]      // if-block "traceTPIU"
[16:03:42.429]        // =>  FALSE
[16:03:42.430]      // skip if-block "traceTPIU"
[16:03:42.430]    </control>
[16:03:42.430]  </sequence>
[16:03:42.430]  
[16:07:30.005]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[16:07:30.005]  
[16:07:30.005]  <debugvars>
[16:07:30.005]    // Pre-defined
[16:07:30.005]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:07:30.006]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:07:30.006]    __dp=0x00000000
[16:07:30.006]    __ap=0x00000000
[16:07:30.006]    __traceout=0x00000001      (SWO Trace)
[16:07:30.006]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:07:30.006]    __FlashAddr=0x00000000
[16:07:30.007]    __FlashLen=0x00000000
[16:07:30.008]    __FlashArg=0x00000000
[16:07:30.008]    __FlashOp=0x00000000
[16:07:30.008]    __Result=0x00000000
[16:07:30.008]    
[16:07:30.008]    // User-defined
[16:07:30.008]    DbgMCU_CR=0x00000007
[16:07:30.008]    DbgMCU_APB1_Fz=0x00000000
[16:07:30.008]    DbgMCU_APB2_Fz=0x00000000
[16:07:30.008]    TraceClk_Pin=0x00040002
[16:07:30.009]    TraceD0_Pin=0x00040003
[16:07:30.009]    TraceD1_Pin=0x00040004
[16:07:30.009]    TraceD2_Pin=0x00040005
[16:07:30.009]    TraceD3_Pin=0x00040006
[16:07:30.009]  </debugvars>
[16:07:30.009]  
[16:07:30.010]  <sequence name="TraceStop" Pname="" disable="false" info="">
[16:07:30.010]    <block atomic="false" info="">
[16:07:30.010]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[16:07:30.010]        // -> [traceSWO <= 0x00000001]
[16:07:30.010]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[16:07:30.010]        // -> [traceTPIU <= 0x00000000]
[16:07:30.010]    </block>
[16:07:30.011]    <control if="traceSWO" while="" timeout="0" info="">
[16:07:30.011]      // if-block "traceSWO"
[16:07:30.011]        // =>  TRUE
[16:07:30.011]      <block atomic="false" info="">
[16:07:30.011]        Sequence("DisableTraceSWO");
[16:07:30.011]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[16:07:30.012]            <block atomic="false" info="">
[16:07:30.012]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:07:30.012]                // -> [dbgmcu_val <= 0x00000000]
[16:07:30.012]            </block>
[16:07:30.012]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[16:07:30.012]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[16:07:30.013]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:07:30.013]                // -> [dbgmcu_val <= 0x00000007]
[16:07:30.013]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[16:07:30.013]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:07:30.013]            </block>
[16:07:30.014]          </sequence>
[16:07:30.014]      </block>
[16:07:30.014]      // end if-block "traceSWO"
[16:07:30.014]    </control>
[16:07:30.014]    <control if="traceTPIU" while="" timeout="0" info="">
[16:07:30.014]      // if-block "traceTPIU"
[16:07:30.014]        // =>  FALSE
[16:07:30.014]      // skip if-block "traceTPIU"
[16:07:30.015]    </control>
[16:07:30.015]  </sequence>
[16:07:30.015]  
[16:07:56.164]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:07:56.164]  
[16:07:56.165]  <debugvars>
[16:07:56.165]    // Pre-defined
[16:07:56.165]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:07:56.165]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:07:56.165]    __dp=0x00000000
[16:07:56.166]    __ap=0x00000000
[16:07:56.166]    __traceout=0x00000001      (SWO Trace)
[16:07:56.166]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:07:56.166]    __FlashAddr=0x00000000
[16:07:56.166]    __FlashLen=0x00000000
[16:07:56.166]    __FlashArg=0x00000000
[16:07:56.167]    __FlashOp=0x00000000
[16:07:56.167]    __Result=0x00000000
[16:07:56.167]    
[16:07:56.167]    // User-defined
[16:07:56.167]    DbgMCU_CR=0x00000007
[16:07:56.167]    DbgMCU_APB1_Fz=0x00000000
[16:07:56.168]    DbgMCU_APB2_Fz=0x00000000
[16:07:56.168]    TraceClk_Pin=0x00040002
[16:07:56.168]    TraceD0_Pin=0x00040003
[16:07:56.168]    TraceD1_Pin=0x00040004
[16:07:56.168]    TraceD2_Pin=0x00040005
[16:07:56.169]    TraceD3_Pin=0x00040006
[16:07:56.169]  </debugvars>
[16:07:56.169]  
[16:07:56.169]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:07:56.169]    <block atomic="false" info="">
[16:07:56.169]      Sequence("CheckID");
[16:07:56.170]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:07:56.170]          <block atomic="false" info="">
[16:07:56.170]            __var pidr1 = 0;
[16:07:56.170]              // -> [pidr1 <= 0x00000000]
[16:07:56.170]            __var pidr2 = 0;
[16:07:56.170]              // -> [pidr2 <= 0x00000000]
[16:07:56.171]            __var jep106id = 0;
[16:07:56.171]              // -> [jep106id <= 0x00000000]
[16:07:56.171]            __var ROMTableBase = 0;
[16:07:56.171]              // -> [ROMTableBase <= 0x00000000]
[16:07:56.171]            __ap = 0;      // AHB-AP
[16:07:56.171]              // -> [__ap <= 0x00000000]
[16:07:56.172]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:07:56.172]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.172]              // -> [ROMTableBase <= 0xE00FD000]
[16:07:56.172]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:07:56.173]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.173]              // -> [pidr1 <= 0x00000004]
[16:07:56.173]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:07:56.174]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.174]              // -> [pidr2 <= 0x0000001A]
[16:07:56.174]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:07:56.174]              // -> [jep106id <= 0x00000020]
[16:07:56.174]          </block>
[16:07:56.174]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:07:56.175]            // if-block "jep106id != 0x20"
[16:07:56.175]              // =>  FALSE
[16:07:56.175]            // skip if-block "jep106id != 0x20"
[16:07:56.175]          </control>
[16:07:56.175]        </sequence>
[16:07:56.175]    </block>
[16:07:56.175]  </sequence>
[16:07:56.176]  
[16:07:56.190]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:07:56.190]  
[16:07:56.191]  <debugvars>
[16:07:56.191]    // Pre-defined
[16:07:56.191]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:07:56.191]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:07:56.191]    __dp=0x00000000
[16:07:56.192]    __ap=0x00000000
[16:07:56.192]    __traceout=0x00000001      (SWO Trace)
[16:07:56.192]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:07:56.192]    __FlashAddr=0x00000000
[16:07:56.192]    __FlashLen=0x00000000
[16:07:56.192]    __FlashArg=0x00000000
[16:07:56.193]    __FlashOp=0x00000000
[16:07:56.193]    __Result=0x00000000
[16:07:56.193]    
[16:07:56.193]    // User-defined
[16:07:56.193]    DbgMCU_CR=0x00000007
[16:07:56.193]    DbgMCU_APB1_Fz=0x00000000
[16:07:56.194]    DbgMCU_APB2_Fz=0x00000000
[16:07:56.194]    TraceClk_Pin=0x00040002
[16:07:56.194]    TraceD0_Pin=0x00040003
[16:07:56.194]    TraceD1_Pin=0x00040004
[16:07:56.194]    TraceD2_Pin=0x00040005
[16:07:56.195]    TraceD3_Pin=0x00040006
[16:07:56.195]  </debugvars>
[16:07:56.195]  
[16:07:56.195]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:07:56.195]    <block atomic="false" info="">
[16:07:56.195]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:07:56.196]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.196]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:07:56.197]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.197]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:07:56.197]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.197]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:07:56.199]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:07:56.199]    </block>
[16:07:56.199]  </sequence>
[16:07:56.199]  
[16:09:12.095]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:09:12.095]  
[16:09:12.095]  <debugvars>
[16:09:12.096]    // Pre-defined
[16:09:12.096]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:09:12.096]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:09:12.097]    __dp=0x00000000
[16:09:12.097]    __ap=0x00000000
[16:09:12.097]    __traceout=0x00000001      (SWO Trace)
[16:09:12.097]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:09:12.097]    __FlashAddr=0x00000000
[16:09:12.097]    __FlashLen=0x00000000
[16:09:12.097]    __FlashArg=0x00000000
[16:09:12.098]    __FlashOp=0x00000000
[16:09:12.098]    __Result=0x00000000
[16:09:12.098]    
[16:09:12.098]    // User-defined
[16:09:12.098]    DbgMCU_CR=0x00000007
[16:09:12.098]    DbgMCU_APB1_Fz=0x00000000
[16:09:12.098]    DbgMCU_APB2_Fz=0x00000000
[16:09:12.099]    TraceClk_Pin=0x00040002
[16:09:12.099]    TraceD0_Pin=0x00040003
[16:09:12.099]    TraceD1_Pin=0x00040004
[16:09:12.099]    TraceD2_Pin=0x00040005
[16:09:12.099]    TraceD3_Pin=0x00040006
[16:09:12.100]  </debugvars>
[16:09:12.100]  
[16:09:12.100]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:09:12.100]    <block atomic="false" info="">
[16:09:12.100]      Sequence("CheckID");
[16:09:12.100]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:09:12.101]          <block atomic="false" info="">
[16:09:12.101]            __var pidr1 = 0;
[16:09:12.101]              // -> [pidr1 <= 0x00000000]
[16:09:12.101]            __var pidr2 = 0;
[16:09:12.101]              // -> [pidr2 <= 0x00000000]
[16:09:12.101]            __var jep106id = 0;
[16:09:12.102]              // -> [jep106id <= 0x00000000]
[16:09:12.102]            __var ROMTableBase = 0;
[16:09:12.102]              // -> [ROMTableBase <= 0x00000000]
[16:09:12.102]            __ap = 0;      // AHB-AP
[16:09:12.102]              // -> [__ap <= 0x00000000]
[16:09:12.102]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:09:12.103]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.103]              // -> [ROMTableBase <= 0xE00FD000]
[16:09:12.103]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:09:12.104]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.104]              // -> [pidr1 <= 0x00000004]
[16:09:12.104]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:09:12.105]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.105]              // -> [pidr2 <= 0x0000001A]
[16:09:12.105]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:09:12.105]              // -> [jep106id <= 0x00000020]
[16:09:12.105]          </block>
[16:09:12.106]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:09:12.106]            // if-block "jep106id != 0x20"
[16:09:12.106]              // =>  FALSE
[16:09:12.106]            // skip if-block "jep106id != 0x20"
[16:09:12.106]          </control>
[16:09:12.106]        </sequence>
[16:09:12.106]    </block>
[16:09:12.107]  </sequence>
[16:09:12.107]  
[16:09:12.121]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:09:12.121]  
[16:09:12.121]  <debugvars>
[16:09:12.121]    // Pre-defined
[16:09:12.121]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:09:12.122]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:09:12.122]    __dp=0x00000000
[16:09:12.122]    __ap=0x00000000
[16:09:12.122]    __traceout=0x00000001      (SWO Trace)
[16:09:12.122]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:09:12.123]    __FlashAddr=0x00000000
[16:09:12.123]    __FlashLen=0x00000000
[16:09:12.123]    __FlashArg=0x00000000
[16:09:12.123]    __FlashOp=0x00000000
[16:09:12.123]    __Result=0x00000000
[16:09:12.124]    
[16:09:12.124]    // User-defined
[16:09:12.124]    DbgMCU_CR=0x00000007
[16:09:12.124]    DbgMCU_APB1_Fz=0x00000000
[16:09:12.124]    DbgMCU_APB2_Fz=0x00000000
[16:09:12.125]    TraceClk_Pin=0x00040002
[16:09:12.125]    TraceD0_Pin=0x00040003
[16:09:12.125]    TraceD1_Pin=0x00040004
[16:09:12.125]    TraceD2_Pin=0x00040005
[16:09:12.125]    TraceD3_Pin=0x00040006
[16:09:12.126]  </debugvars>
[16:09:12.126]  
[16:09:12.126]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:09:12.126]    <block atomic="false" info="">
[16:09:12.126]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:09:12.127]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.127]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:09:12.128]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.128]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:09:12.129]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.129]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:09:12.130]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.130]    </block>
[16:09:12.130]  </sequence>
[16:09:12.130]  
[16:09:12.146]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[16:09:12.146]  
[16:09:12.146]  <debugvars>
[16:09:12.146]    // Pre-defined
[16:09:12.147]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:09:12.147]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:09:12.147]    __dp=0x00000000
[16:09:12.147]    __ap=0x00000000
[16:09:12.147]    __traceout=0x00000001      (SWO Trace)
[16:09:12.148]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:09:12.148]    __FlashAddr=0x00000000
[16:09:12.148]    __FlashLen=0x00000000
[16:09:12.148]    __FlashArg=0x00000000
[16:09:12.148]    __FlashOp=0x00000000
[16:09:12.149]    __Result=0x00000000
[16:09:12.149]    
[16:09:12.149]    // User-defined
[16:09:12.149]    DbgMCU_CR=0x00000007
[16:09:12.149]    DbgMCU_APB1_Fz=0x00000000
[16:09:12.150]    DbgMCU_APB2_Fz=0x00000000
[16:09:12.150]    TraceClk_Pin=0x00040002
[16:09:12.150]    TraceD0_Pin=0x00040003
[16:09:12.151]    TraceD1_Pin=0x00040004
[16:09:12.151]    TraceD2_Pin=0x00040005
[16:09:12.151]    TraceD3_Pin=0x00040006
[16:09:12.151]  </debugvars>
[16:09:12.151]  
[16:09:12.152]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:09:12.152]    <block atomic="false" info="">
[16:09:12.152]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:09:12.152]        // -> [traceSWO <= 0x00000001]
[16:09:12.152]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:09:12.152]        // -> [traceTPIU <= 0x00000000]
[16:09:12.152]    </block>
[16:09:12.152]    <control if="traceSWO" while="" timeout="0" info="">
[16:09:12.152]      // if-block "traceSWO"
[16:09:12.153]        // =>  TRUE
[16:09:12.153]      <block atomic="false" info="">
[16:09:12.153]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:09:12.153]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:09:12.153]            <block atomic="false" info="">
[16:09:12.154]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:09:12.154]                // -> [dbgmcu_val <= 0x00000000]
[16:09:12.154]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:09:12.154]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:09:12.154]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:09:12.155]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.155]                // -> [dbgmcu_val <= 0x00000007]
[16:09:12.155]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:09:12.155]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:09:12.156]              Sequence("ConfigureTraceSWOPin");
[16:09:12.156]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:09:12.156]                  <block atomic="false" info="">
[16:09:12.156]                    __var pin     = 0;
[16:09:12.156]                      // -> [pin <= 0x00000000]
[16:09:12.156]                    __var port    = 0;
[16:09:12.157]                      // -> [port <= 0x00000000]
[16:09:12.157]                    __var portAdr = 0;
[16:09:12.157]                      // -> [portAdr <= 0x00000000]
[16:09:12.157]                    __var pos     = 0;
[16:09:12.157]                      // -> [pos <= 0x00000000]
[16:09:12.158]                    __var SWO_Pin = 0x00010003;          // PB3
[16:09:12.158]                      // -> [SWO_Pin <= 0x00010003]
[16:09:12.158]                  </block>
[16:09:12.158]                  <block atomic="false" info="configure SWO">
[16:09:12.158]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:09:12.158]                      // -> [pin <= 0x00000003]
[16:09:12.158]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:09:12.159]                      // -> [port <= 0x00000001]
[16:09:12.159]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:09:12.159]                      // -> [portAdr <= 0x40020400]
[16:09:12.159]                    pos = pin * 2;
[16:09:12.159]                      // -> [pos <= 0x00000006]
[16:09:12.159]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:09:12.160]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.161]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.161]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:09:12.161]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.162]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.162]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:09:12.162]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.163]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.163]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:09:12.163]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.164]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.164]                  </block>
[16:09:12.164]                  <control if="pin <  8" while="" timeout="0" info="">
[16:09:12.164]                    // if-block "pin <  8"
[16:09:12.165]                      // =>  TRUE
[16:09:12.165]                    <block atomic="false" info="">
[16:09:12.165]                      pos = ((pin    ) & 7) * 4;
[16:09:12.165]                        // -> [pos <= 0x0000000C]
[16:09:12.165]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:09:12.166]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.166]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.166]                    </block>
[16:09:12.167]                    // end if-block "pin <  8"
[16:09:12.167]                  </control>
[16:09:12.167]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:09:12.167]                    // if-block "pin >= 8"
[16:09:12.167]                      // =>  FALSE
[16:09:12.167]                    // skip if-block "pin >= 8"
[16:09:12.167]                  </control>
[16:09:12.168]                </sequence>
[16:09:12.168]            </block>
[16:09:12.168]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:09:12.168]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:09:12.168]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.169]            </block>
[16:09:12.169]          </sequence>
[16:09:12.169]      </block>
[16:09:12.169]      // end if-block "traceSWO"
[16:09:12.169]    </control>
[16:09:12.169]    <control if="traceTPIU" while="" timeout="0" info="">
[16:09:12.169]      // if-block "traceTPIU"
[16:09:12.170]        // =>  FALSE
[16:09:12.170]      // skip if-block "traceTPIU"
[16:09:12.170]    </control>
[16:09:12.170]  </sequence>
[16:09:12.170]  
[16:09:12.174]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:09:12.174]  
[16:09:12.174]  <debugvars>
[16:09:12.174]    // Pre-defined
[16:09:12.174]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:09:12.175]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:09:12.175]    __dp=0x00000000
[16:09:12.175]    __ap=0x00000000
[16:09:12.175]    __traceout=0x00000001      (SWO Trace)
[16:09:12.175]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:09:12.175]    __FlashAddr=0x00000000
[16:09:12.176]    __FlashLen=0x00000000
[16:09:12.176]    __FlashArg=0x00000000
[16:09:12.176]    __FlashOp=0x00000000
[16:09:12.176]    __Result=0x00000000
[16:09:12.176]    
[16:09:12.176]    // User-defined
[16:09:12.176]    DbgMCU_CR=0x00000007
[16:09:12.177]    DbgMCU_APB1_Fz=0x00000000
[16:09:12.177]    DbgMCU_APB2_Fz=0x00000000
[16:09:12.177]    TraceClk_Pin=0x00040002
[16:09:12.177]    TraceD0_Pin=0x00040003
[16:09:12.177]    TraceD1_Pin=0x00040004
[16:09:12.177]    TraceD2_Pin=0x00040005
[16:09:12.178]    TraceD3_Pin=0x00040006
[16:09:12.178]  </debugvars>
[16:09:12.178]  
[16:09:12.178]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:09:12.178]    <block atomic="false" info="">
[16:09:12.178]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:09:12.179]        // -> [traceSWO <= 0x00000001]
[16:09:12.179]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:09:12.179]        // -> [traceTPIU <= 0x00000000]
[16:09:12.179]    </block>
[16:09:12.180]    <control if="traceSWO" while="" timeout="0" info="">
[16:09:12.180]      // if-block "traceSWO"
[16:09:12.180]        // =>  TRUE
[16:09:12.180]      <block atomic="false" info="">
[16:09:12.180]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:09:12.180]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:09:12.180]            <block atomic="false" info="">
[16:09:12.180]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:09:12.180]                // -> [dbgmcu_val <= 0x00000000]
[16:09:12.180]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:09:12.181]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:09:12.181]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:09:12.181]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.181]                // -> [dbgmcu_val <= 0x00000007]
[16:09:12.182]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:09:12.182]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:09:12.182]              Sequence("ConfigureTraceSWOPin");
[16:09:12.182]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:09:12.182]                  <block atomic="false" info="">
[16:09:12.182]                    __var pin     = 0;
[16:09:12.182]                      // -> [pin <= 0x00000000]
[16:09:12.183]                    __var port    = 0;
[16:09:12.183]                      // -> [port <= 0x00000000]
[16:09:12.183]                    __var portAdr = 0;
[16:09:12.183]                      // -> [portAdr <= 0x00000000]
[16:09:12.183]                    __var pos     = 0;
[16:09:12.183]                      // -> [pos <= 0x00000000]
[16:09:12.183]                    __var SWO_Pin = 0x00010003;          // PB3
[16:09:12.183]                      // -> [SWO_Pin <= 0x00010003]
[16:09:12.184]                  </block>
[16:09:12.184]                  <block atomic="false" info="configure SWO">
[16:09:12.184]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:09:12.184]                      // -> [pin <= 0x00000003]
[16:09:12.184]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:09:12.184]                      // -> [port <= 0x00000001]
[16:09:12.184]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:09:12.184]                      // -> [portAdr <= 0x40020400]
[16:09:12.184]                    pos = pin * 2;
[16:09:12.185]                      // -> [pos <= 0x00000006]
[16:09:12.185]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:09:12.185]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.186]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.186]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:09:12.186]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.187]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.187]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:09:12.187]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.188]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.188]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:09:12.188]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.189]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.189]                  </block>
[16:09:12.189]                  <control if="pin <  8" while="" timeout="0" info="">
[16:09:12.189]                    // if-block "pin <  8"
[16:09:12.189]                      // =>  TRUE
[16:09:12.189]                    <block atomic="false" info="">
[16:09:12.190]                      pos = ((pin    ) & 7) * 4;
[16:09:12.190]                        // -> [pos <= 0x0000000C]
[16:09:12.190]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:09:12.190]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.191]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.191]                    </block>
[16:09:12.191]                    // end if-block "pin <  8"
[16:09:12.191]                  </control>
[16:09:12.192]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:09:12.192]                    // if-block "pin >= 8"
[16:09:12.192]                      // =>  FALSE
[16:09:12.192]                    // skip if-block "pin >= 8"
[16:09:12.192]                  </control>
[16:09:12.192]                </sequence>
[16:09:12.193]            </block>
[16:09:12.193]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:09:12.193]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:09:12.194]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.194]            </block>
[16:09:12.194]          </sequence>
[16:09:12.194]      </block>
[16:09:12.194]      // end if-block "traceSWO"
[16:09:12.194]    </control>
[16:09:12.194]    <control if="traceTPIU" while="" timeout="0" info="">
[16:09:12.195]      // if-block "traceTPIU"
[16:09:12.195]        // =>  FALSE
[16:09:12.195]      // skip if-block "traceTPIU"
[16:09:12.195]    </control>
[16:09:12.195]  </sequence>
[16:09:12.195]  
[16:09:12.403]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:09:12.403]  
[16:09:12.403]  <debugvars>
[16:09:12.404]    // Pre-defined
[16:09:12.404]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:09:12.404]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:09:12.404]    __dp=0x00000000
[16:09:12.404]    __ap=0x00000000
[16:09:12.404]    __traceout=0x00000001      (SWO Trace)
[16:09:12.405]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:09:12.405]    __FlashAddr=0x00000000
[16:09:12.405]    __FlashLen=0x00000000
[16:09:12.405]    __FlashArg=0x00000000
[16:09:12.405]    __FlashOp=0x00000000
[16:09:12.405]    __Result=0x00000000
[16:09:12.405]    
[16:09:12.405]    // User-defined
[16:09:12.405]    DbgMCU_CR=0x00000007
[16:09:12.405]    DbgMCU_APB1_Fz=0x00000000
[16:09:12.406]    DbgMCU_APB2_Fz=0x00000000
[16:09:12.406]    TraceClk_Pin=0x00040002
[16:09:12.406]    TraceD0_Pin=0x00040003
[16:09:12.406]    TraceD1_Pin=0x00040004
[16:09:12.406]    TraceD2_Pin=0x00040005
[16:09:12.406]    TraceD3_Pin=0x00040006
[16:09:12.406]  </debugvars>
[16:09:12.406]  
[16:09:12.407]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:09:12.407]    <block atomic="false" info="">
[16:09:12.407]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:09:12.407]        // -> [traceSWO <= 0x00000001]
[16:09:12.407]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:09:12.407]        // -> [traceTPIU <= 0x00000000]
[16:09:12.407]    </block>
[16:09:12.408]    <control if="traceSWO" while="" timeout="0" info="">
[16:09:12.408]      // if-block "traceSWO"
[16:09:12.408]        // =>  TRUE
[16:09:12.408]      <block atomic="false" info="">
[16:09:12.408]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:09:12.408]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:09:12.408]            <block atomic="false" info="">
[16:09:12.408]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:09:12.409]                // -> [dbgmcu_val <= 0x00000000]
[16:09:12.409]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:09:12.409]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:09:12.409]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:09:12.409]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.409]                // -> [dbgmcu_val <= 0x00000007]
[16:09:12.410]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:09:12.410]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:09:12.410]              Sequence("ConfigureTraceSWOPin");
[16:09:12.410]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:09:12.410]                  <block atomic="false" info="">
[16:09:12.410]                    __var pin     = 0;
[16:09:12.410]                      // -> [pin <= 0x00000000]
[16:09:12.410]                    __var port    = 0;
[16:09:12.410]                      // -> [port <= 0x00000000]
[16:09:12.411]                    __var portAdr = 0;
[16:09:12.411]                      // -> [portAdr <= 0x00000000]
[16:09:12.411]                    __var pos     = 0;
[16:09:12.411]                      // -> [pos <= 0x00000000]
[16:09:12.411]                    __var SWO_Pin = 0x00010003;          // PB3
[16:09:12.411]                      // -> [SWO_Pin <= 0x00010003]
[16:09:12.411]                  </block>
[16:09:12.411]                  <block atomic="false" info="configure SWO">
[16:09:12.411]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:09:12.412]                      // -> [pin <= 0x00000003]
[16:09:12.412]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:09:12.412]                      // -> [port <= 0x00000001]
[16:09:12.412]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:09:12.412]                      // -> [portAdr <= 0x40020400]
[16:09:12.412]                    pos = pin * 2;
[16:09:12.412]                      // -> [pos <= 0x00000006]
[16:09:12.413]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:09:12.413]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.413]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.414]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:09:12.414]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.415]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.415]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:09:12.415]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.416]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.416]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:09:12.416]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.417]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.417]                  </block>
[16:09:12.417]                  <control if="pin <  8" while="" timeout="0" info="">
[16:09:12.417]                    // if-block "pin <  8"
[16:09:12.417]                      // =>  TRUE
[16:09:12.417]                    <block atomic="false" info="">
[16:09:12.417]                      pos = ((pin    ) & 7) * 4;
[16:09:12.417]                        // -> [pos <= 0x0000000C]
[16:09:12.418]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:09:12.418]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.418]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.419]                    </block>
[16:09:12.419]                    // end if-block "pin <  8"
[16:09:12.419]                  </control>
[16:09:12.419]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:09:12.419]                    // if-block "pin >= 8"
[16:09:12.419]                      // =>  FALSE
[16:09:12.419]                    // skip if-block "pin >= 8"
[16:09:12.419]                  </control>
[16:09:12.419]                </sequence>
[16:09:12.420]            </block>
[16:09:12.420]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:09:12.420]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:09:12.420]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:09:12.420]            </block>
[16:09:12.420]          </sequence>
[16:09:12.421]      </block>
[16:09:12.421]      // end if-block "traceSWO"
[16:09:12.421]    </control>
[16:09:12.421]    <control if="traceTPIU" while="" timeout="0" info="">
[16:09:12.421]      // if-block "traceTPIU"
[16:09:12.421]        // =>  FALSE
[16:09:12.421]      // skip if-block "traceTPIU"
[16:09:12.421]    </control>
[16:09:12.422]  </sequence>
[16:09:12.422]  
[16:10:52.653]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[16:10:52.653]  
[16:10:52.654]  <debugvars>
[16:10:52.654]    // Pre-defined
[16:10:52.654]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:10:52.654]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:10:52.654]    __dp=0x00000000
[16:10:52.654]    __ap=0x00000000
[16:10:52.654]    __traceout=0x00000001      (SWO Trace)
[16:10:52.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:10:52.655]    __FlashAddr=0x00000000
[16:10:52.655]    __FlashLen=0x00000000
[16:10:52.655]    __FlashArg=0x00000000
[16:10:52.655]    __FlashOp=0x00000000
[16:10:52.655]    __Result=0x00000000
[16:10:52.656]    
[16:10:52.656]    // User-defined
[16:10:52.656]    DbgMCU_CR=0x00000007
[16:10:52.656]    DbgMCU_APB1_Fz=0x00000000
[16:10:52.656]    DbgMCU_APB2_Fz=0x00000000
[16:10:52.656]    TraceClk_Pin=0x00040002
[16:10:52.656]    TraceD0_Pin=0x00040003
[16:10:52.656]    TraceD1_Pin=0x00040004
[16:10:52.657]    TraceD2_Pin=0x00040005
[16:10:52.657]    TraceD3_Pin=0x00040006
[16:10:52.657]  </debugvars>
[16:10:52.657]  
[16:10:52.657]  <sequence name="TraceStop" Pname="" disable="false" info="">
[16:10:52.657]    <block atomic="false" info="">
[16:10:52.657]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[16:10:52.657]        // -> [traceSWO <= 0x00000001]
[16:10:52.658]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[16:10:52.658]        // -> [traceTPIU <= 0x00000000]
[16:10:52.658]    </block>
[16:10:52.658]    <control if="traceSWO" while="" timeout="0" info="">
[16:10:52.658]      // if-block "traceSWO"
[16:10:52.658]        // =>  TRUE
[16:10:52.658]      <block atomic="false" info="">
[16:10:52.658]        Sequence("DisableTraceSWO");
[16:10:52.659]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[16:10:52.659]            <block atomic="false" info="">
[16:10:52.659]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:10:52.659]                // -> [dbgmcu_val <= 0x00000000]
[16:10:52.659]            </block>
[16:10:52.659]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[16:10:52.659]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[16:10:52.660]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:10:52.660]                // -> [dbgmcu_val <= 0x00000007]
[16:10:52.660]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[16:10:52.660]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:10:52.660]            </block>
[16:10:52.661]          </sequence>
[16:10:52.661]      </block>
[16:10:52.661]      // end if-block "traceSWO"
[16:10:52.661]    </control>
[16:10:52.661]    <control if="traceTPIU" while="" timeout="0" info="">
[16:10:52.661]      // if-block "traceTPIU"
[16:10:52.661]        // =>  FALSE
[16:10:52.661]      // skip if-block "traceTPIU"
[16:10:52.662]    </control>
[16:10:52.662]  </sequence>
[16:10:52.662]  
[16:30:12.402]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:30:12.402]  
[16:30:12.402]  <debugvars>
[16:30:12.403]    // Pre-defined
[16:30:12.403]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:30:12.403]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:30:12.403]    __dp=0x00000000
[16:30:12.403]    __ap=0x00000000
[16:30:12.403]    __traceout=0x00000001      (SWO Trace)
[16:30:12.404]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:30:12.404]    __FlashAddr=0x00000000
[16:30:12.404]    __FlashLen=0x00000000
[16:30:12.404]    __FlashArg=0x00000000
[16:30:12.404]    __FlashOp=0x00000000
[16:30:12.404]    __Result=0x00000000
[16:30:12.405]    
[16:30:12.405]    // User-defined
[16:30:12.405]    DbgMCU_CR=0x00000007
[16:30:12.405]    DbgMCU_APB1_Fz=0x00000000
[16:30:12.405]    DbgMCU_APB2_Fz=0x00000000
[16:30:12.405]    TraceClk_Pin=0x00040002
[16:30:12.405]    TraceD0_Pin=0x00040003
[16:30:12.405]    TraceD1_Pin=0x00040004
[16:30:12.406]    TraceD2_Pin=0x00040005
[16:30:12.406]    TraceD3_Pin=0x00040006
[16:30:12.406]  </debugvars>
[16:30:12.406]  
[16:30:12.406]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:30:12.406]    <block atomic="false" info="">
[16:30:12.406]      Sequence("CheckID");
[16:30:12.406]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:30:12.407]          <block atomic="false" info="">
[16:30:12.407]            __var pidr1 = 0;
[16:30:12.407]              // -> [pidr1 <= 0x00000000]
[16:30:12.407]            __var pidr2 = 0;
[16:30:12.407]              // -> [pidr2 <= 0x00000000]
[16:30:12.407]            __var jep106id = 0;
[16:30:12.408]              // -> [jep106id <= 0x00000000]
[16:30:12.408]            __var ROMTableBase = 0;
[16:30:12.408]              // -> [ROMTableBase <= 0x00000000]
[16:30:12.408]            __ap = 0;      // AHB-AP
[16:30:12.408]              // -> [__ap <= 0x00000000]
[16:30:12.408]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:30:12.409]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.409]              // -> [ROMTableBase <= 0xE00FD000]
[16:30:12.409]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:30:12.410]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.410]              // -> [pidr1 <= 0x00000004]
[16:30:12.410]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:30:12.410]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.410]              // -> [pidr2 <= 0x0000001A]
[16:30:12.410]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:30:12.411]              // -> [jep106id <= 0x00000020]
[16:30:12.411]          </block>
[16:30:12.411]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:30:12.411]            // if-block "jep106id != 0x20"
[16:30:12.411]              // =>  FALSE
[16:30:12.411]            // skip if-block "jep106id != 0x20"
[16:30:12.411]          </control>
[16:30:12.411]        </sequence>
[16:30:12.411]    </block>
[16:30:12.412]  </sequence>
[16:30:12.412]  
[16:30:12.427]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:30:12.427]  
[16:30:12.427]  <debugvars>
[16:30:12.427]    // Pre-defined
[16:30:12.428]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:30:12.428]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:30:12.428]    __dp=0x00000000
[16:30:12.428]    __ap=0x00000000
[16:30:12.428]    __traceout=0x00000001      (SWO Trace)
[16:30:12.429]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:30:12.429]    __FlashAddr=0x00000000
[16:30:12.429]    __FlashLen=0x00000000
[16:30:12.429]    __FlashArg=0x00000000
[16:30:12.429]    __FlashOp=0x00000000
[16:30:12.430]    __Result=0x00000000
[16:30:12.430]    
[16:30:12.430]    // User-defined
[16:30:12.430]    DbgMCU_CR=0x00000007
[16:30:12.430]    DbgMCU_APB1_Fz=0x00000000
[16:30:12.430]    DbgMCU_APB2_Fz=0x00000000
[16:30:12.430]    TraceClk_Pin=0x00040002
[16:30:12.431]    TraceD0_Pin=0x00040003
[16:30:12.431]    TraceD1_Pin=0x00040004
[16:30:12.431]    TraceD2_Pin=0x00040005
[16:30:12.431]    TraceD3_Pin=0x00040006
[16:30:12.431]  </debugvars>
[16:30:12.432]  
[16:30:12.432]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:30:12.432]    <block atomic="false" info="">
[16:30:12.432]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:30:12.433]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.433]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:30:12.433]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.434]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:30:12.434]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.434]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:30:12.438]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:30:12.438]    </block>
[16:30:12.438]  </sequence>
[16:30:12.439]  
[16:35:52.616]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:35:52.616]  
[16:35:52.617]  <debugvars>
[16:35:52.617]    // Pre-defined
[16:35:52.617]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:35:52.617]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:35:52.618]    __dp=0x00000000
[16:35:52.618]    __ap=0x00000000
[16:35:52.619]    __traceout=0x00000001      (SWO Trace)
[16:35:52.619]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:35:52.619]    __FlashAddr=0x00000000
[16:35:52.619]    __FlashLen=0x00000000
[16:35:52.619]    __FlashArg=0x00000000
[16:35:52.619]    __FlashOp=0x00000000
[16:35:52.619]    __Result=0x00000000
[16:35:52.619]    
[16:35:52.619]    // User-defined
[16:35:52.619]    DbgMCU_CR=0x00000007
[16:35:52.620]    DbgMCU_APB1_Fz=0x00000000
[16:35:52.620]    DbgMCU_APB2_Fz=0x00000000
[16:35:52.620]    TraceClk_Pin=0x00040002
[16:35:52.620]    TraceD0_Pin=0x00040003
[16:35:52.620]    TraceD1_Pin=0x00040004
[16:35:52.620]    TraceD2_Pin=0x00040005
[16:35:52.621]    TraceD3_Pin=0x00040006
[16:35:52.621]  </debugvars>
[16:35:52.621]  
[16:35:52.621]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:35:52.621]    <block atomic="false" info="">
[16:35:52.621]      Sequence("CheckID");
[16:35:52.622]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:35:52.622]          <block atomic="false" info="">
[16:35:52.622]            __var pidr1 = 0;
[16:35:52.622]              // -> [pidr1 <= 0x00000000]
[16:35:52.622]            __var pidr2 = 0;
[16:35:52.622]              // -> [pidr2 <= 0x00000000]
[16:35:52.622]            __var jep106id = 0;
[16:35:52.623]              // -> [jep106id <= 0x00000000]
[16:35:52.623]            __var ROMTableBase = 0;
[16:35:52.623]              // -> [ROMTableBase <= 0x00000000]
[16:35:52.623]            __ap = 0;      // AHB-AP
[16:35:52.623]              // -> [__ap <= 0x00000000]
[16:35:52.623]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:35:52.624]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.624]              // -> [ROMTableBase <= 0xE00FD000]
[16:35:52.624]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:35:52.624]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.625]              // -> [pidr1 <= 0x00000004]
[16:35:52.625]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:35:52.625]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.625]              // -> [pidr2 <= 0x0000001A]
[16:35:52.625]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:35:52.626]              // -> [jep106id <= 0x00000020]
[16:35:52.626]          </block>
[16:35:52.626]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:35:52.626]            // if-block "jep106id != 0x20"
[16:35:52.626]              // =>  FALSE
[16:35:52.626]            // skip if-block "jep106id != 0x20"
[16:35:52.626]          </control>
[16:35:52.626]        </sequence>
[16:35:52.627]    </block>
[16:35:52.627]  </sequence>
[16:35:52.627]  
[16:35:52.642]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:35:52.642]  
[16:35:52.642]  <debugvars>
[16:35:52.642]    // Pre-defined
[16:35:52.642]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:35:52.642]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:35:52.643]    __dp=0x00000000
[16:35:52.643]    __ap=0x00000000
[16:35:52.643]    __traceout=0x00000001      (SWO Trace)
[16:35:52.643]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:35:52.644]    __FlashAddr=0x00000000
[16:35:52.644]    __FlashLen=0x00000000
[16:35:52.644]    __FlashArg=0x00000000
[16:35:52.644]    __FlashOp=0x00000000
[16:35:52.644]    __Result=0x00000000
[16:35:52.644]    
[16:35:52.644]    // User-defined
[16:35:52.645]    DbgMCU_CR=0x00000007
[16:35:52.645]    DbgMCU_APB1_Fz=0x00000000
[16:35:52.645]    DbgMCU_APB2_Fz=0x00000000
[16:35:52.645]    TraceClk_Pin=0x00040002
[16:35:52.645]    TraceD0_Pin=0x00040003
[16:35:52.646]    TraceD1_Pin=0x00040004
[16:35:52.646]    TraceD2_Pin=0x00040005
[16:35:52.646]    TraceD3_Pin=0x00040006
[16:35:52.646]  </debugvars>
[16:35:52.646]  
[16:35:52.647]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:35:52.647]    <block atomic="false" info="">
[16:35:52.647]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:35:52.648]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.648]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:35:52.648]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.649]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:35:52.649]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.649]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:35:52.650]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:35:52.650]    </block>
[16:35:52.650]  </sequence>
[16:35:52.651]  
[16:48:11.332]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:48:11.332]  
[16:48:11.332]  <debugvars>
[16:48:11.332]    // Pre-defined
[16:48:11.333]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:48:11.333]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:48:11.333]    __dp=0x00000000
[16:48:11.333]    __ap=0x00000000
[16:48:11.333]    __traceout=0x00000001      (SWO Trace)
[16:48:11.334]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:48:11.334]    __FlashAddr=0x00000000
[16:48:11.334]    __FlashLen=0x00000000
[16:48:11.335]    __FlashArg=0x00000000
[16:48:11.335]    __FlashOp=0x00000000
[16:48:11.335]    __Result=0x00000000
[16:48:11.335]    
[16:48:11.335]    // User-defined
[16:48:11.335]    DbgMCU_CR=0x00000007
[16:48:11.335]    DbgMCU_APB1_Fz=0x00000000
[16:48:11.335]    DbgMCU_APB2_Fz=0x00000000
[16:48:11.335]    TraceClk_Pin=0x00040002
[16:48:11.335]    TraceD0_Pin=0x00040003
[16:48:11.336]    TraceD1_Pin=0x00040004
[16:48:11.336]    TraceD2_Pin=0x00040005
[16:48:11.336]    TraceD3_Pin=0x00040006
[16:48:11.336]  </debugvars>
[16:48:11.336]  
[16:48:11.336]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:48:11.336]    <block atomic="false" info="">
[16:48:11.337]      Sequence("CheckID");
[16:48:11.337]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:48:11.337]          <block atomic="false" info="">
[16:48:11.337]            __var pidr1 = 0;
[16:48:11.337]              // -> [pidr1 <= 0x00000000]
[16:48:11.337]            __var pidr2 = 0;
[16:48:11.338]              // -> [pidr2 <= 0x00000000]
[16:48:11.338]            __var jep106id = 0;
[16:48:11.338]              // -> [jep106id <= 0x00000000]
[16:48:11.338]            __var ROMTableBase = 0;
[16:48:11.338]              // -> [ROMTableBase <= 0x00000000]
[16:48:11.338]            __ap = 0;      // AHB-AP
[16:48:11.338]              // -> [__ap <= 0x00000000]
[16:48:11.339]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:48:11.339]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.339]              // -> [ROMTableBase <= 0xE00FD000]
[16:48:11.339]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:48:11.340]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.340]              // -> [pidr1 <= 0x00000004]
[16:48:11.340]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:48:11.340]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.341]              // -> [pidr2 <= 0x0000001A]
[16:48:11.341]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:48:11.341]              // -> [jep106id <= 0x00000020]
[16:48:11.341]          </block>
[16:48:11.341]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:48:11.341]            // if-block "jep106id != 0x20"
[16:48:11.341]              // =>  FALSE
[16:48:11.341]            // skip if-block "jep106id != 0x20"
[16:48:11.342]          </control>
[16:48:11.342]        </sequence>
[16:48:11.342]    </block>
[16:48:11.342]  </sequence>
[16:48:11.342]  
[16:48:11.357]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:48:11.357]  
[16:48:11.357]  <debugvars>
[16:48:11.357]    // Pre-defined
[16:48:11.357]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:48:11.358]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:48:11.358]    __dp=0x00000000
[16:48:11.358]    __ap=0x00000000
[16:48:11.358]    __traceout=0x00000001      (SWO Trace)
[16:48:11.358]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:48:11.358]    __FlashAddr=0x00000000
[16:48:11.359]    __FlashLen=0x00000000
[16:48:11.359]    __FlashArg=0x00000000
[16:48:11.359]    __FlashOp=0x00000000
[16:48:11.359]    __Result=0x00000000
[16:48:11.360]    
[16:48:11.360]    // User-defined
[16:48:11.360]    DbgMCU_CR=0x00000007
[16:48:11.360]    DbgMCU_APB1_Fz=0x00000000
[16:48:11.360]    DbgMCU_APB2_Fz=0x00000000
[16:48:11.360]    TraceClk_Pin=0x00040002
[16:48:11.361]    TraceD0_Pin=0x00040003
[16:48:11.361]    TraceD1_Pin=0x00040004
[16:48:11.361]    TraceD2_Pin=0x00040005
[16:48:11.361]    TraceD3_Pin=0x00040006
[16:48:11.361]  </debugvars>
[16:48:11.362]  
[16:48:11.362]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:48:11.362]    <block atomic="false" info="">
[16:48:11.362]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:48:11.363]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.363]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:48:11.364]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.364]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:48:11.364]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.365]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:48:11.365]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:48:11.365]    </block>
[16:48:11.365]  </sequence>
[16:48:11.366]  
[16:53:01.121]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:53:01.121]  
[16:53:01.121]  <debugvars>
[16:53:01.122]    // Pre-defined
[16:53:01.122]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:53:01.122]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:53:01.122]    __dp=0x00000000
[16:53:01.122]    __ap=0x00000000
[16:53:01.122]    __traceout=0x00000001      (SWO Trace)
[16:53:01.123]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:53:01.123]    __FlashAddr=0x00000000
[16:53:01.123]    __FlashLen=0x00000000
[16:53:01.123]    __FlashArg=0x00000000
[16:53:01.123]    __FlashOp=0x00000000
[16:53:01.123]    __Result=0x00000000
[16:53:01.124]    
[16:53:01.124]    // User-defined
[16:53:01.124]    DbgMCU_CR=0x00000007
[16:53:01.124]    DbgMCU_APB1_Fz=0x00000000
[16:53:01.124]    DbgMCU_APB2_Fz=0x00000000
[16:53:01.124]    TraceClk_Pin=0x00040002
[16:53:01.124]    TraceD0_Pin=0x00040003
[16:53:01.125]    TraceD1_Pin=0x00040004
[16:53:01.125]    TraceD2_Pin=0x00040005
[16:53:01.125]    TraceD3_Pin=0x00040006
[16:53:01.125]  </debugvars>
[16:53:01.125]  
[16:53:01.126]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:53:01.126]    <block atomic="false" info="">
[16:53:01.126]      Sequence("CheckID");
[16:53:01.126]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:53:01.126]          <block atomic="false" info="">
[16:53:01.126]            __var pidr1 = 0;
[16:53:01.127]              // -> [pidr1 <= 0x00000000]
[16:53:01.127]            __var pidr2 = 0;
[16:53:01.127]              // -> [pidr2 <= 0x00000000]
[16:53:01.127]            __var jep106id = 0;
[16:53:01.127]              // -> [jep106id <= 0x00000000]
[16:53:01.127]            __var ROMTableBase = 0;
[16:53:01.127]              // -> [ROMTableBase <= 0x00000000]
[16:53:01.128]            __ap = 0;      // AHB-AP
[16:53:01.128]              // -> [__ap <= 0x00000000]
[16:53:01.128]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:53:01.128]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.128]              // -> [ROMTableBase <= 0xE00FD000]
[16:53:01.129]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:53:01.129]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.129]              // -> [pidr1 <= 0x00000004]
[16:53:01.130]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:53:01.130]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.130]              // -> [pidr2 <= 0x0000001A]
[16:53:01.130]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:53:01.131]              // -> [jep106id <= 0x00000020]
[16:53:01.131]          </block>
[16:53:01.131]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:53:01.131]            // if-block "jep106id != 0x20"
[16:53:01.131]              // =>  FALSE
[16:53:01.131]            // skip if-block "jep106id != 0x20"
[16:53:01.132]          </control>
[16:53:01.132]        </sequence>
[16:53:01.132]    </block>
[16:53:01.132]  </sequence>
[16:53:01.132]  
[16:53:01.147]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:53:01.147]  
[16:53:01.148]  <debugvars>
[16:53:01.148]    // Pre-defined
[16:53:01.148]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:53:01.148]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:53:01.148]    __dp=0x00000000
[16:53:01.149]    __ap=0x00000000
[16:53:01.149]    __traceout=0x00000001      (SWO Trace)
[16:53:01.149]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:53:01.149]    __FlashAddr=0x00000000
[16:53:01.149]    __FlashLen=0x00000000
[16:53:01.149]    __FlashArg=0x00000000
[16:53:01.150]    __FlashOp=0x00000000
[16:53:01.150]    __Result=0x00000000
[16:53:01.150]    
[16:53:01.150]    // User-defined
[16:53:01.150]    DbgMCU_CR=0x00000007
[16:53:01.150]    DbgMCU_APB1_Fz=0x00000000
[16:53:01.151]    DbgMCU_APB2_Fz=0x00000000
[16:53:01.151]    TraceClk_Pin=0x00040002
[16:53:01.151]    TraceD0_Pin=0x00040003
[16:53:01.151]    TraceD1_Pin=0x00040004
[16:53:01.151]    TraceD2_Pin=0x00040005
[16:53:01.152]    TraceD3_Pin=0x00040006
[16:53:01.152]  </debugvars>
[16:53:01.152]  
[16:53:01.152]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:53:01.152]    <block atomic="false" info="">
[16:53:01.152]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:53:01.153]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.153]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:53:01.154]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.154]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:53:01.155]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.155]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:53:01.155]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.156]    </block>
[16:53:01.156]  </sequence>
[16:53:01.156]  
[16:53:01.172]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[16:53:01.172]  
[16:53:01.173]  <debugvars>
[16:53:01.173]    // Pre-defined
[16:53:01.173]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:53:01.173]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:53:01.173]    __dp=0x00000000
[16:53:01.174]    __ap=0x00000000
[16:53:01.174]    __traceout=0x00000001      (SWO Trace)
[16:53:01.174]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:53:01.174]    __FlashAddr=0x00000000
[16:53:01.174]    __FlashLen=0x00000000
[16:53:01.175]    __FlashArg=0x00000000
[16:53:01.175]    __FlashOp=0x00000000
[16:53:01.175]    __Result=0x00000000
[16:53:01.175]    
[16:53:01.175]    // User-defined
[16:53:01.175]    DbgMCU_CR=0x00000007
[16:53:01.176]    DbgMCU_APB1_Fz=0x00000000
[16:53:01.176]    DbgMCU_APB2_Fz=0x00000000
[16:53:01.176]    TraceClk_Pin=0x00040002
[16:53:01.176]    TraceD0_Pin=0x00040003
[16:53:01.177]    TraceD1_Pin=0x00040004
[16:53:01.177]    TraceD2_Pin=0x00040005
[16:53:01.177]    TraceD3_Pin=0x00040006
[16:53:01.177]  </debugvars>
[16:53:01.177]  
[16:53:01.177]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:53:01.178]    <block atomic="false" info="">
[16:53:01.178]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:53:01.178]        // -> [traceSWO <= 0x00000001]
[16:53:01.178]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:53:01.178]        // -> [traceTPIU <= 0x00000000]
[16:53:01.179]    </block>
[16:53:01.179]    <control if="traceSWO" while="" timeout="0" info="">
[16:53:01.179]      // if-block "traceSWO"
[16:53:01.179]        // =>  TRUE
[16:53:01.179]      <block atomic="false" info="">
[16:53:01.179]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:53:01.180]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:53:01.180]            <block atomic="false" info="">
[16:53:01.180]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:53:01.180]                // -> [dbgmcu_val <= 0x00000000]
[16:53:01.180]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:53:01.180]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:53:01.181]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:53:01.181]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.181]                // -> [dbgmcu_val <= 0x00000007]
[16:53:01.181]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:53:01.182]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:53:01.182]              Sequence("ConfigureTraceSWOPin");
[16:53:01.182]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:53:01.182]                  <block atomic="false" info="">
[16:53:01.182]                    __var pin     = 0;
[16:53:01.182]                      // -> [pin <= 0x00000000]
[16:53:01.182]                    __var port    = 0;
[16:53:01.183]                      // -> [port <= 0x00000000]
[16:53:01.183]                    __var portAdr = 0;
[16:53:01.183]                      // -> [portAdr <= 0x00000000]
[16:53:01.183]                    __var pos     = 0;
[16:53:01.184]                      // -> [pos <= 0x00000000]
[16:53:01.184]                    __var SWO_Pin = 0x00010003;          // PB3
[16:53:01.184]                      // -> [SWO_Pin <= 0x00010003]
[16:53:01.184]                  </block>
[16:53:01.184]                  <block atomic="false" info="configure SWO">
[16:53:01.184]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:53:01.185]                      // -> [pin <= 0x00000003]
[16:53:01.185]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:53:01.185]                      // -> [port <= 0x00000001]
[16:53:01.185]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:53:01.185]                      // -> [portAdr <= 0x40020400]
[16:53:01.185]                    pos = pin * 2;
[16:53:01.186]                      // -> [pos <= 0x00000006]
[16:53:01.186]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:53:01.186]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.187]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.187]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:53:01.188]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.188]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.188]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:53:01.189]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.189]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.189]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:53:01.190]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.190]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.191]                  </block>
[16:53:01.191]                  <control if="pin <  8" while="" timeout="0" info="">
[16:53:01.191]                    // if-block "pin <  8"
[16:53:01.191]                      // =>  TRUE
[16:53:01.191]                    <block atomic="false" info="">
[16:53:01.191]                      pos = ((pin    ) & 7) * 4;
[16:53:01.191]                        // -> [pos <= 0x0000000C]
[16:53:01.192]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:53:01.192]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.193]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.193]                    </block>
[16:53:01.193]                    // end if-block "pin <  8"
[16:53:01.193]                  </control>
[16:53:01.193]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:53:01.194]                    // if-block "pin >= 8"
[16:53:01.194]                      // =>  FALSE
[16:53:01.194]                    // skip if-block "pin >= 8"
[16:53:01.194]                  </control>
[16:53:01.194]                </sequence>
[16:53:01.194]            </block>
[16:53:01.194]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:53:01.195]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:53:01.195]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.195]            </block>
[16:53:01.195]          </sequence>
[16:53:01.196]      </block>
[16:53:01.196]      // end if-block "traceSWO"
[16:53:01.196]    </control>
[16:53:01.196]    <control if="traceTPIU" while="" timeout="0" info="">
[16:53:01.196]      // if-block "traceTPIU"
[16:53:01.196]        // =>  FALSE
[16:53:01.197]      // skip if-block "traceTPIU"
[16:53:01.197]    </control>
[16:53:01.197]  </sequence>
[16:53:01.197]  
[16:53:01.201]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:53:01.201]  
[16:53:01.201]  <debugvars>
[16:53:01.201]    // Pre-defined
[16:53:01.201]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:53:01.202]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:53:01.202]    __dp=0x00000000
[16:53:01.202]    __ap=0x00000000
[16:53:01.202]    __traceout=0x00000001      (SWO Trace)
[16:53:01.202]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:53:01.203]    __FlashAddr=0x00000000
[16:53:01.203]    __FlashLen=0x00000000
[16:53:01.203]    __FlashArg=0x00000000
[16:53:01.203]    __FlashOp=0x00000000
[16:53:01.203]    __Result=0x00000000
[16:53:01.204]    
[16:53:01.204]    // User-defined
[16:53:01.204]    DbgMCU_CR=0x00000007
[16:53:01.204]    DbgMCU_APB1_Fz=0x00000000
[16:53:01.204]    DbgMCU_APB2_Fz=0x00000000
[16:53:01.205]    TraceClk_Pin=0x00040002
[16:53:01.205]    TraceD0_Pin=0x00040003
[16:53:01.205]    TraceD1_Pin=0x00040004
[16:53:01.205]    TraceD2_Pin=0x00040005
[16:53:01.205]    TraceD3_Pin=0x00040006
[16:53:01.205]  </debugvars>
[16:53:01.205]  
[16:53:01.206]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:53:01.206]    <block atomic="false" info="">
[16:53:01.206]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:53:01.206]        // -> [traceSWO <= 0x00000001]
[16:53:01.206]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:53:01.206]        // -> [traceTPIU <= 0x00000000]
[16:53:01.207]    </block>
[16:53:01.207]    <control if="traceSWO" while="" timeout="0" info="">
[16:53:01.207]      // if-block "traceSWO"
[16:53:01.207]        // =>  TRUE
[16:53:01.207]      <block atomic="false" info="">
[16:53:01.207]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:53:01.208]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:53:01.208]            <block atomic="false" info="">
[16:53:01.208]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:53:01.208]                // -> [dbgmcu_val <= 0x00000000]
[16:53:01.208]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:53:01.209]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:53:01.209]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:53:01.209]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.209]                // -> [dbgmcu_val <= 0x00000007]
[16:53:01.210]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:53:01.210]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:53:01.210]              Sequence("ConfigureTraceSWOPin");
[16:53:01.210]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:53:01.210]                  <block atomic="false" info="">
[16:53:01.210]                    __var pin     = 0;
[16:53:01.211]                      // -> [pin <= 0x00000000]
[16:53:01.211]                    __var port    = 0;
[16:53:01.211]                      // -> [port <= 0x00000000]
[16:53:01.211]                    __var portAdr = 0;
[16:53:01.211]                      // -> [portAdr <= 0x00000000]
[16:53:01.211]                    __var pos     = 0;
[16:53:01.212]                      // -> [pos <= 0x00000000]
[16:53:01.212]                    __var SWO_Pin = 0x00010003;          // PB3
[16:53:01.212]                      // -> [SWO_Pin <= 0x00010003]
[16:53:01.212]                  </block>
[16:53:01.212]                  <block atomic="false" info="configure SWO">
[16:53:01.212]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:53:01.213]                      // -> [pin <= 0x00000003]
[16:53:01.213]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:53:01.213]                      // -> [port <= 0x00000001]
[16:53:01.213]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:53:01.213]                      // -> [portAdr <= 0x40020400]
[16:53:01.213]                    pos = pin * 2;
[16:53:01.214]                      // -> [pos <= 0x00000006]
[16:53:01.214]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:53:01.214]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.215]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.215]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:53:01.216]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.216]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.216]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:53:01.217]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.217]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.218]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:53:01.218]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.219]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.219]                  </block>
[16:53:01.219]                  <control if="pin <  8" while="" timeout="0" info="">
[16:53:01.219]                    // if-block "pin <  8"
[16:53:01.220]                      // =>  TRUE
[16:53:01.220]                    <block atomic="false" info="">
[16:53:01.220]                      pos = ((pin    ) & 7) * 4;
[16:53:01.220]                        // -> [pos <= 0x0000000C]
[16:53:01.220]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:53:01.221]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.221]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.222]                    </block>
[16:53:01.222]                    // end if-block "pin <  8"
[16:53:01.222]                  </control>
[16:53:01.222]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:53:01.222]                    // if-block "pin >= 8"
[16:53:01.222]                      // =>  FALSE
[16:53:01.223]                    // skip if-block "pin >= 8"
[16:53:01.223]                  </control>
[16:53:01.223]                </sequence>
[16:53:01.223]            </block>
[16:53:01.223]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:53:01.223]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:53:01.224]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.224]            </block>
[16:53:01.224]          </sequence>
[16:53:01.225]      </block>
[16:53:01.225]      // end if-block "traceSWO"
[16:53:01.225]    </control>
[16:53:01.225]    <control if="traceTPIU" while="" timeout="0" info="">
[16:53:01.225]      // if-block "traceTPIU"
[16:53:01.226]        // =>  FALSE
[16:53:01.226]      // skip if-block "traceTPIU"
[16:53:01.226]    </control>
[16:53:01.226]  </sequence>
[16:53:01.226]  
[16:53:01.436]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:53:01.436]  
[16:53:01.437]  <debugvars>
[16:53:01.437]    // Pre-defined
[16:53:01.437]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:53:01.437]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:53:01.437]    __dp=0x00000000
[16:53:01.437]    __ap=0x00000000
[16:53:01.438]    __traceout=0x00000001      (SWO Trace)
[16:53:01.438]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:53:01.438]    __FlashAddr=0x00000000
[16:53:01.438]    __FlashLen=0x00000000
[16:53:01.438]    __FlashArg=0x00000000
[16:53:01.439]    __FlashOp=0x00000000
[16:53:01.439]    __Result=0x00000000
[16:53:01.439]    
[16:53:01.439]    // User-defined
[16:53:01.439]    DbgMCU_CR=0x00000007
[16:53:01.439]    DbgMCU_APB1_Fz=0x00000000
[16:53:01.439]    DbgMCU_APB2_Fz=0x00000000
[16:53:01.440]    TraceClk_Pin=0x00040002
[16:53:01.440]    TraceD0_Pin=0x00040003
[16:53:01.440]    TraceD1_Pin=0x00040004
[16:53:01.440]    TraceD2_Pin=0x00040005
[16:53:01.440]    TraceD3_Pin=0x00040006
[16:53:01.440]  </debugvars>
[16:53:01.441]  
[16:53:01.441]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:53:01.441]    <block atomic="false" info="">
[16:53:01.441]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:53:01.442]        // -> [traceSWO <= 0x00000001]
[16:53:01.442]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:53:01.442]        // -> [traceTPIU <= 0x00000000]
[16:53:01.442]    </block>
[16:53:01.442]    <control if="traceSWO" while="" timeout="0" info="">
[16:53:01.442]      // if-block "traceSWO"
[16:53:01.443]        // =>  TRUE
[16:53:01.443]      <block atomic="false" info="">
[16:53:01.443]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:53:01.443]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:53:01.443]            <block atomic="false" info="">
[16:53:01.443]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:53:01.444]                // -> [dbgmcu_val <= 0x00000000]
[16:53:01.444]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:53:01.444]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:53:01.444]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:53:01.445]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.445]                // -> [dbgmcu_val <= 0x00000007]
[16:53:01.445]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:53:01.445]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:53:01.445]              Sequence("ConfigureTraceSWOPin");
[16:53:01.445]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:53:01.446]                  <block atomic="false" info="">
[16:53:01.446]                    __var pin     = 0;
[16:53:01.446]                      // -> [pin <= 0x00000000]
[16:53:01.446]                    __var port    = 0;
[16:53:01.446]                      // -> [port <= 0x00000000]
[16:53:01.447]                    __var portAdr = 0;
[16:53:01.447]                      // -> [portAdr <= 0x00000000]
[16:53:01.447]                    __var pos     = 0;
[16:53:01.447]                      // -> [pos <= 0x00000000]
[16:53:01.447]                    __var SWO_Pin = 0x00010003;          // PB3
[16:53:01.447]                      // -> [SWO_Pin <= 0x00010003]
[16:53:01.448]                  </block>
[16:53:01.448]                  <block atomic="false" info="configure SWO">
[16:53:01.448]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:53:01.448]                      // -> [pin <= 0x00000003]
[16:53:01.448]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:53:01.448]                      // -> [port <= 0x00000001]
[16:53:01.448]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:53:01.449]                      // -> [portAdr <= 0x40020400]
[16:53:01.449]                    pos = pin * 2;
[16:53:01.449]                      // -> [pos <= 0x00000006]
[16:53:01.449]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:53:01.450]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.450]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.450]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:53:01.451]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.451]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.452]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:53:01.452]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.453]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.453]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:53:01.453]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.454]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.454]                  </block>
[16:53:01.454]                  <control if="pin <  8" while="" timeout="0" info="">
[16:53:01.454]                    // if-block "pin <  8"
[16:53:01.454]                      // =>  TRUE
[16:53:01.454]                    <block atomic="false" info="">
[16:53:01.454]                      pos = ((pin    ) & 7) * 4;
[16:53:01.455]                        // -> [pos <= 0x0000000C]
[16:53:01.455]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:53:01.455]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.456]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.456]                    </block>
[16:53:01.456]                    // end if-block "pin <  8"
[16:53:01.456]                  </control>
[16:53:01.456]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:53:01.456]                    // if-block "pin >= 8"
[16:53:01.456]                      // =>  FALSE
[16:53:01.456]                    // skip if-block "pin >= 8"
[16:53:01.457]                  </control>
[16:53:01.457]                </sequence>
[16:53:01.457]            </block>
[16:53:01.457]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:53:01.457]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:53:01.458]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:53:01.458]            </block>
[16:53:01.458]          </sequence>
[16:53:01.458]      </block>
[16:53:01.458]      // end if-block "traceSWO"
[16:53:01.458]    </control>
[16:53:01.458]    <control if="traceTPIU" while="" timeout="0" info="">
[16:53:01.458]      // if-block "traceTPIU"
[16:53:01.459]        // =>  FALSE
[16:53:01.459]      // skip if-block "traceTPIU"
[16:53:01.459]    </control>
[16:53:01.459]  </sequence>
[16:53:01.459]  
[16:54:27.116]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:54:27.116]  
[16:54:27.116]  <debugvars>
[16:54:27.116]    // Pre-defined
[16:54:27.116]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:54:27.116]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:54:27.116]    __dp=0x00000000
[16:54:27.117]    __ap=0x00000000
[16:54:27.117]    __traceout=0x00000001      (SWO Trace)
[16:54:27.117]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:54:27.117]    __FlashAddr=0x00000000
[16:54:27.117]    __FlashLen=0x00000000
[16:54:27.118]    __FlashArg=0x00000000
[16:54:27.118]    __FlashOp=0x00000000
[16:54:27.118]    __Result=0x00000000
[16:54:27.118]    
[16:54:27.118]    // User-defined
[16:54:27.118]    DbgMCU_CR=0x00000007
[16:54:27.119]    DbgMCU_APB1_Fz=0x00000000
[16:54:27.119]    DbgMCU_APB2_Fz=0x00000000
[16:54:27.119]    TraceClk_Pin=0x00040002
[16:54:27.119]    TraceD0_Pin=0x00040003
[16:54:27.119]    TraceD1_Pin=0x00040004
[16:54:27.120]    TraceD2_Pin=0x00040005
[16:54:27.120]    TraceD3_Pin=0x00040006
[16:54:27.120]  </debugvars>
[16:54:27.120]  
[16:54:27.120]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:54:27.120]    <block atomic="false" info="">
[16:54:27.121]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:54:27.121]        // -> [traceSWO <= 0x00000001]
[16:54:27.121]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:54:27.121]        // -> [traceTPIU <= 0x00000000]
[16:54:27.121]    </block>
[16:54:27.121]    <control if="traceSWO" while="" timeout="0" info="">
[16:54:27.122]      // if-block "traceSWO"
[16:54:27.122]        // =>  TRUE
[16:54:27.122]      <block atomic="false" info="">
[16:54:27.122]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:54:27.122]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:54:27.122]            <block atomic="false" info="">
[16:54:27.123]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:54:27.123]                // -> [dbgmcu_val <= 0x00000000]
[16:54:27.123]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:54:27.123]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:54:27.123]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:54:27.124]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.124]                // -> [dbgmcu_val <= 0x00000007]
[16:54:27.124]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:54:27.124]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:54:27.124]              Sequence("ConfigureTraceSWOPin");
[16:54:27.125]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:54:27.125]                  <block atomic="false" info="">
[16:54:27.125]                    __var pin     = 0;
[16:54:27.125]                      // -> [pin <= 0x00000000]
[16:54:27.125]                    __var port    = 0;
[16:54:27.126]                      // -> [port <= 0x00000000]
[16:54:27.126]                    __var portAdr = 0;
[16:54:27.126]                      // -> [portAdr <= 0x00000000]
[16:54:27.126]                    __var pos     = 0;
[16:54:27.126]                      // -> [pos <= 0x00000000]
[16:54:27.126]                    __var SWO_Pin = 0x00010003;          // PB3
[16:54:27.127]                      // -> [SWO_Pin <= 0x00010003]
[16:54:27.127]                  </block>
[16:54:27.127]                  <block atomic="false" info="configure SWO">
[16:54:27.127]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:54:27.127]                      // -> [pin <= 0x00000003]
[16:54:27.127]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:54:27.127]                      // -> [port <= 0x00000001]
[16:54:27.128]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:54:27.128]                      // -> [portAdr <= 0x40020400]
[16:54:27.128]                    pos = pin * 2;
[16:54:27.128]                      // -> [pos <= 0x00000006]
[16:54:27.128]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:54:27.129]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.129]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.129]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:54:27.130]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.130]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.130]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:54:27.131]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.131]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.131]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:54:27.132]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.132]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.132]                  </block>
[16:54:27.133]                  <control if="pin <  8" while="" timeout="0" info="">
[16:54:27.133]                    // if-block "pin <  8"
[16:54:27.133]                      // =>  TRUE
[16:54:27.133]                    <block atomic="false" info="">
[16:54:27.133]                      pos = ((pin    ) & 7) * 4;
[16:54:27.133]                        // -> [pos <= 0x0000000C]
[16:54:27.133]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:54:27.134]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.135]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.135]                    </block>
[16:54:27.135]                    // end if-block "pin <  8"
[16:54:27.135]                  </control>
[16:54:27.135]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:54:27.135]                    // if-block "pin >= 8"
[16:54:27.135]                      // =>  FALSE
[16:54:27.136]                    // skip if-block "pin >= 8"
[16:54:27.136]                  </control>
[16:54:27.136]                </sequence>
[16:54:27.136]            </block>
[16:54:27.136]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:54:27.136]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:54:27.137]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:54:27.137]            </block>
[16:54:27.137]          </sequence>
[16:54:27.137]      </block>
[16:54:27.137]      // end if-block "traceSWO"
[16:54:27.137]    </control>
[16:54:27.137]    <control if="traceTPIU" while="" timeout="0" info="">
[16:54:27.138]      // if-block "traceTPIU"
[16:54:27.138]        // =>  FALSE
[16:54:27.138]      // skip if-block "traceTPIU"
[16:54:27.138]    </control>
[16:54:27.138]  </sequence>
[16:54:27.138]  
[16:55:22.714]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:55:22.714]  
[16:55:22.714]  <debugvars>
[16:55:22.714]    // Pre-defined
[16:55:22.715]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:55:22.715]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:55:22.715]    __dp=0x00000000
[16:55:22.715]    __ap=0x00000000
[16:55:22.715]    __traceout=0x00000001      (SWO Trace)
[16:55:22.716]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:55:22.716]    __FlashAddr=0x00000000
[16:55:22.716]    __FlashLen=0x00000000
[16:55:22.716]    __FlashArg=0x00000000
[16:55:22.716]    __FlashOp=0x00000000
[16:55:22.717]    __Result=0x00000000
[16:55:22.717]    
[16:55:22.717]    // User-defined
[16:55:22.717]    DbgMCU_CR=0x00000007
[16:55:22.717]    DbgMCU_APB1_Fz=0x00000000
[16:55:22.717]    DbgMCU_APB2_Fz=0x00000000
[16:55:22.717]    TraceClk_Pin=0x00040002
[16:55:22.718]    TraceD0_Pin=0x00040003
[16:55:22.718]    TraceD1_Pin=0x00040004
[16:55:22.718]    TraceD2_Pin=0x00040005
[16:55:22.718]    TraceD3_Pin=0x00040006
[16:55:22.718]  </debugvars>
[16:55:22.719]  
[16:55:22.719]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:55:22.719]    <block atomic="false" info="">
[16:55:22.719]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:55:22.719]        // -> [traceSWO <= 0x00000001]
[16:55:22.719]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:55:22.720]        // -> [traceTPIU <= 0x00000000]
[16:55:22.720]    </block>
[16:55:22.720]    <control if="traceSWO" while="" timeout="0" info="">
[16:55:22.720]      // if-block "traceSWO"
[16:55:22.720]        // =>  TRUE
[16:55:22.720]      <block atomic="false" info="">
[16:55:22.721]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:55:22.721]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:55:22.721]            <block atomic="false" info="">
[16:55:22.721]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:55:22.721]                // -> [dbgmcu_val <= 0x00000000]
[16:55:22.721]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:55:22.721]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:55:22.722]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:55:22.722]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.722]                // -> [dbgmcu_val <= 0x00000007]
[16:55:22.722]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:55:22.723]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:55:22.723]              Sequence("ConfigureTraceSWOPin");
[16:55:22.723]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:55:22.723]                  <block atomic="false" info="">
[16:55:22.723]                    __var pin     = 0;
[16:55:22.723]                      // -> [pin <= 0x00000000]
[16:55:22.724]                    __var port    = 0;
[16:55:22.724]                      // -> [port <= 0x00000000]
[16:55:22.724]                    __var portAdr = 0;
[16:55:22.724]                      // -> [portAdr <= 0x00000000]
[16:55:22.724]                    __var pos     = 0;
[16:55:22.724]                      // -> [pos <= 0x00000000]
[16:55:22.725]                    __var SWO_Pin = 0x00010003;          // PB3
[16:55:22.725]                      // -> [SWO_Pin <= 0x00010003]
[16:55:22.725]                  </block>
[16:55:22.725]                  <block atomic="false" info="configure SWO">
[16:55:22.725]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:55:22.725]                      // -> [pin <= 0x00000003]
[16:55:22.726]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:55:22.726]                      // -> [port <= 0x00000001]
[16:55:22.726]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:55:22.726]                      // -> [portAdr <= 0x40020400]
[16:55:22.726]                    pos = pin * 2;
[16:55:22.726]                      // -> [pos <= 0x00000006]
[16:55:22.726]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:55:22.727]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.727]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.728]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:55:22.728]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.729]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.729]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:55:22.729]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.730]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.730]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:55:22.730]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.731]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.731]                  </block>
[16:55:22.731]                  <control if="pin <  8" while="" timeout="0" info="">
[16:55:22.731]                    // if-block "pin <  8"
[16:55:22.731]                      // =>  TRUE
[16:55:22.732]                    <block atomic="false" info="">
[16:55:22.732]                      pos = ((pin    ) & 7) * 4;
[16:55:22.732]                        // -> [pos <= 0x0000000C]
[16:55:22.732]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:55:22.733]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.733]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.733]                    </block>
[16:55:22.734]                    // end if-block "pin <  8"
[16:55:22.734]                  </control>
[16:55:22.734]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:55:22.734]                    // if-block "pin >= 8"
[16:55:22.734]                      // =>  FALSE
[16:55:22.734]                    // skip if-block "pin >= 8"
[16:55:22.735]                  </control>
[16:55:22.735]                </sequence>
[16:55:22.735]            </block>
[16:55:22.735]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:55:22.735]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:55:22.736]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:55:22.736]            </block>
[16:55:22.736]          </sequence>
[16:55:22.736]      </block>
[16:55:22.736]      // end if-block "traceSWO"
[16:55:22.737]    </control>
[16:55:22.737]    <control if="traceTPIU" while="" timeout="0" info="">
[16:55:22.737]      // if-block "traceTPIU"
[16:55:22.737]        // =>  FALSE
[16:55:22.737]      // skip if-block "traceTPIU"
[16:55:22.737]    </control>
[16:55:22.737]  </sequence>
[16:55:22.738]  
[16:56:47.544]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[16:56:47.544]  
[16:56:47.544]  <debugvars>
[16:56:47.545]    // Pre-defined
[16:56:47.545]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:56:47.545]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:56:47.545]    __dp=0x00000000
[16:56:47.545]    __ap=0x00000000
[16:56:47.546]    __traceout=0x00000001      (SWO Trace)
[16:56:47.546]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:56:47.546]    __FlashAddr=0x00000000
[16:56:47.546]    __FlashLen=0x00000000
[16:56:47.546]    __FlashArg=0x00000000
[16:56:47.547]    __FlashOp=0x00000000
[16:56:47.547]    __Result=0x00000000
[16:56:47.547]    
[16:56:47.547]    // User-defined
[16:56:47.547]    DbgMCU_CR=0x00000007
[16:56:47.547]    DbgMCU_APB1_Fz=0x00000000
[16:56:47.547]    DbgMCU_APB2_Fz=0x00000000
[16:56:47.547]    TraceClk_Pin=0x00040002
[16:56:47.548]    TraceD0_Pin=0x00040003
[16:56:47.548]    TraceD1_Pin=0x00040004
[16:56:47.548]    TraceD2_Pin=0x00040005
[16:56:47.548]    TraceD3_Pin=0x00040006
[16:56:47.548]  </debugvars>
[16:56:47.548]  
[16:56:47.549]  <sequence name="TraceStop" Pname="" disable="false" info="">
[16:56:47.549]    <block atomic="false" info="">
[16:56:47.549]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[16:56:47.549]        // -> [traceSWO <= 0x00000001]
[16:56:47.549]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[16:56:47.549]        // -> [traceTPIU <= 0x00000000]
[16:56:47.550]    </block>
[16:56:47.550]    <control if="traceSWO" while="" timeout="0" info="">
[16:56:47.550]      // if-block "traceSWO"
[16:56:47.550]        // =>  TRUE
[16:56:47.550]      <block atomic="false" info="">
[16:56:47.550]        Sequence("DisableTraceSWO");
[16:56:47.550]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[16:56:47.551]            <block atomic="false" info="">
[16:56:47.551]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:56:47.551]                // -> [dbgmcu_val <= 0x00000000]
[16:56:47.551]            </block>
[16:56:47.551]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[16:56:47.551]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[16:56:47.552]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:56:47.552]                // -> [dbgmcu_val <= 0x00000007]
[16:56:47.552]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[16:56:47.553]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:56:47.553]            </block>
[16:56:47.553]          </sequence>
[16:56:47.553]      </block>
[16:56:47.553]      // end if-block "traceSWO"
[16:56:47.554]    </control>
[16:56:47.554]    <control if="traceTPIU" while="" timeout="0" info="">
[16:56:47.554]      // if-block "traceTPIU"
[16:56:47.554]        // =>  FALSE
[16:56:47.554]      // skip if-block "traceTPIU"
[16:56:47.554]    </control>
[16:56:47.554]  </sequence>
[16:56:47.555]  
[16:57:39.235]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:57:39.235]  
[16:57:39.236]  <debugvars>
[16:57:39.236]    // Pre-defined
[16:57:39.236]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:57:39.236]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:57:39.237]    __dp=0x00000000
[16:57:39.237]    __ap=0x00000000
[16:57:39.237]    __traceout=0x00000001      (SWO Trace)
[16:57:39.237]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:57:39.237]    __FlashAddr=0x00000000
[16:57:39.237]    __FlashLen=0x00000000
[16:57:39.238]    __FlashArg=0x00000000
[16:57:39.238]    __FlashOp=0x00000000
[16:57:39.238]    __Result=0x00000000
[16:57:39.238]    
[16:57:39.238]    // User-defined
[16:57:39.238]    DbgMCU_CR=0x00000007
[16:57:39.239]    DbgMCU_APB1_Fz=0x00000000
[16:57:39.239]    DbgMCU_APB2_Fz=0x00000000
[16:57:39.239]    TraceClk_Pin=0x00040002
[16:57:39.239]    TraceD0_Pin=0x00040003
[16:57:39.239]    TraceD1_Pin=0x00040004
[16:57:39.240]    TraceD2_Pin=0x00040005
[16:57:39.240]    TraceD3_Pin=0x00040006
[16:57:39.240]  </debugvars>
[16:57:39.240]  
[16:57:39.241]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:57:39.241]    <block atomic="false" info="">
[16:57:39.241]      Sequence("CheckID");
[16:57:39.241]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:57:39.241]          <block atomic="false" info="">
[16:57:39.242]            __var pidr1 = 0;
[16:57:39.242]              // -> [pidr1 <= 0x00000000]
[16:57:39.242]            __var pidr2 = 0;
[16:57:39.242]              // -> [pidr2 <= 0x00000000]
[16:57:39.242]            __var jep106id = 0;
[16:57:39.243]              // -> [jep106id <= 0x00000000]
[16:57:39.243]            __var ROMTableBase = 0;
[16:57:39.243]              // -> [ROMTableBase <= 0x00000000]
[16:57:39.243]            __ap = 0;      // AHB-AP
[16:57:39.243]              // -> [__ap <= 0x00000000]
[16:57:39.243]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:57:39.244]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.244]              // -> [ROMTableBase <= 0xE00FD000]
[16:57:39.244]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:57:39.245]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.245]              // -> [pidr1 <= 0x00000004]
[16:57:39.245]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:57:39.246]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.246]              // -> [pidr2 <= 0x0000001A]
[16:57:39.246]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:57:39.246]              // -> [jep106id <= 0x00000020]
[16:57:39.246]          </block>
[16:57:39.247]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:57:39.247]            // if-block "jep106id != 0x20"
[16:57:39.247]              // =>  FALSE
[16:57:39.247]            // skip if-block "jep106id != 0x20"
[16:57:39.247]          </control>
[16:57:39.248]        </sequence>
[16:57:39.248]    </block>
[16:57:39.248]  </sequence>
[16:57:39.248]  
[16:57:39.263]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:57:39.263]  
[16:57:39.264]  <debugvars>
[16:57:39.264]    // Pre-defined
[16:57:39.264]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:57:39.264]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:57:39.264]    __dp=0x00000000
[16:57:39.265]    __ap=0x00000000
[16:57:39.265]    __traceout=0x00000001      (SWO Trace)
[16:57:39.265]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:57:39.265]    __FlashAddr=0x00000000
[16:57:39.265]    __FlashLen=0x00000000
[16:57:39.266]    __FlashArg=0x00000000
[16:57:39.266]    __FlashOp=0x00000000
[16:57:39.266]    __Result=0x00000000
[16:57:39.266]    
[16:57:39.266]    // User-defined
[16:57:39.266]    DbgMCU_CR=0x00000007
[16:57:39.267]    DbgMCU_APB1_Fz=0x00000000
[16:57:39.267]    DbgMCU_APB2_Fz=0x00000000
[16:57:39.267]    TraceClk_Pin=0x00040002
[16:57:39.267]    TraceD0_Pin=0x00040003
[16:57:39.267]    TraceD1_Pin=0x00040004
[16:57:39.267]    TraceD2_Pin=0x00040005
[16:57:39.267]    TraceD3_Pin=0x00040006
[16:57:39.268]  </debugvars>
[16:57:39.268]  
[16:57:39.268]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:57:39.268]    <block atomic="false" info="">
[16:57:39.268]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:57:39.269]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.269]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:57:39.270]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.270]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:57:39.270]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.271]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:57:39.271]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:57:39.271]    </block>
[16:57:39.271]  </sequence>
[16:57:39.272]  
[16:58:10.130]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:58:10.130]  
[16:58:10.131]  <debugvars>
[16:58:10.131]    // Pre-defined
[16:58:10.131]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:58:10.131]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:58:10.131]    __dp=0x00000000
[16:58:10.132]    __ap=0x00000000
[16:58:10.132]    __traceout=0x00000001      (SWO Trace)
[16:58:10.132]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:58:10.132]    __FlashAddr=0x00000000
[16:58:10.132]    __FlashLen=0x00000000
[16:58:10.133]    __FlashArg=0x00000000
[16:58:10.133]    __FlashOp=0x00000000
[16:58:10.133]    __Result=0x00000000
[16:58:10.133]    
[16:58:10.133]    // User-defined
[16:58:10.133]    DbgMCU_CR=0x00000007
[16:58:10.133]    DbgMCU_APB1_Fz=0x00000000
[16:58:10.134]    DbgMCU_APB2_Fz=0x00000000
[16:58:10.134]    TraceClk_Pin=0x00040002
[16:58:10.134]    TraceD0_Pin=0x00040003
[16:58:10.134]    TraceD1_Pin=0x00040004
[16:58:10.134]    TraceD2_Pin=0x00040005
[16:58:10.135]    TraceD3_Pin=0x00040006
[16:58:10.135]  </debugvars>
[16:58:10.135]  
[16:58:10.135]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:58:10.135]    <block atomic="false" info="">
[16:58:10.136]      Sequence("CheckID");
[16:58:10.136]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:58:10.136]          <block atomic="false" info="">
[16:58:10.136]            __var pidr1 = 0;
[16:58:10.136]              // -> [pidr1 <= 0x00000000]
[16:58:10.136]            __var pidr2 = 0;
[16:58:10.137]              // -> [pidr2 <= 0x00000000]
[16:58:10.137]            __var jep106id = 0;
[16:58:10.137]              // -> [jep106id <= 0x00000000]
[16:58:10.137]            __var ROMTableBase = 0;
[16:58:10.137]              // -> [ROMTableBase <= 0x00000000]
[16:58:10.138]            __ap = 0;      // AHB-AP
[16:58:10.138]              // -> [__ap <= 0x00000000]
[16:58:10.138]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:58:10.138]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.139]              // -> [ROMTableBase <= 0xE00FD000]
[16:58:10.139]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:58:10.139]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.139]              // -> [pidr1 <= 0x00000004]
[16:58:10.140]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:58:10.140]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.140]              // -> [pidr2 <= 0x0000001A]
[16:58:10.141]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:58:10.141]              // -> [jep106id <= 0x00000020]
[16:58:10.141]          </block>
[16:58:10.141]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:58:10.141]            // if-block "jep106id != 0x20"
[16:58:10.141]              // =>  FALSE
[16:58:10.142]            // skip if-block "jep106id != 0x20"
[16:58:10.142]          </control>
[16:58:10.142]        </sequence>
[16:58:10.142]    </block>
[16:58:10.142]  </sequence>
[16:58:10.142]  
[16:58:10.156]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:58:10.156]  
[16:58:10.157]  <debugvars>
[16:58:10.157]    // Pre-defined
[16:58:10.157]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:58:10.157]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:58:10.158]    __dp=0x00000000
[16:58:10.158]    __ap=0x00000000
[16:58:10.158]    __traceout=0x00000001      (SWO Trace)
[16:58:10.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:58:10.158]    __FlashAddr=0x00000000
[16:58:10.159]    __FlashLen=0x00000000
[16:58:10.159]    __FlashArg=0x00000000
[16:58:10.159]    __FlashOp=0x00000000
[16:58:10.159]    __Result=0x00000000
[16:58:10.159]    
[16:58:10.159]    // User-defined
[16:58:10.160]    DbgMCU_CR=0x00000007
[16:58:10.160]    DbgMCU_APB1_Fz=0x00000000
[16:58:10.160]    DbgMCU_APB2_Fz=0x00000000
[16:58:10.160]    TraceClk_Pin=0x00040002
[16:58:10.160]    TraceD0_Pin=0x00040003
[16:58:10.161]    TraceD1_Pin=0x00040004
[16:58:10.161]    TraceD2_Pin=0x00040005
[16:58:10.161]    TraceD3_Pin=0x00040006
[16:58:10.161]  </debugvars>
[16:58:10.161]  
[16:58:10.162]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:58:10.162]    <block atomic="false" info="">
[16:58:10.162]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:58:10.162]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.163]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:58:10.163]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.163]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:58:10.164]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.164]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:58:10.165]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.165]    </block>
[16:58:10.165]  </sequence>
[16:58:10.165]  
[16:58:10.181]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[16:58:10.181]  
[16:58:10.181]  <debugvars>
[16:58:10.182]    // Pre-defined
[16:58:10.182]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:58:10.182]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:58:10.182]    __dp=0x00000000
[16:58:10.182]    __ap=0x00000000
[16:58:10.183]    __traceout=0x00000001      (SWO Trace)
[16:58:10.183]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:58:10.183]    __FlashAddr=0x00000000
[16:58:10.183]    __FlashLen=0x00000000
[16:58:10.183]    __FlashArg=0x00000000
[16:58:10.183]    __FlashOp=0x00000000
[16:58:10.184]    __Result=0x00000000
[16:58:10.184]    
[16:58:10.184]    // User-defined
[16:58:10.184]    DbgMCU_CR=0x00000007
[16:58:10.184]    DbgMCU_APB1_Fz=0x00000000
[16:58:10.184]    DbgMCU_APB2_Fz=0x00000000
[16:58:10.185]    TraceClk_Pin=0x00040002
[16:58:10.185]    TraceD0_Pin=0x00040003
[16:58:10.185]    TraceD1_Pin=0x00040004
[16:58:10.185]    TraceD2_Pin=0x00040005
[16:58:10.185]    TraceD3_Pin=0x00040006
[16:58:10.185]  </debugvars>
[16:58:10.186]  
[16:58:10.186]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:58:10.186]    <block atomic="false" info="">
[16:58:10.186]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:58:10.186]        // -> [traceSWO <= 0x00000001]
[16:58:10.187]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:58:10.187]        // -> [traceTPIU <= 0x00000000]
[16:58:10.187]    </block>
[16:58:10.187]    <control if="traceSWO" while="" timeout="0" info="">
[16:58:10.187]      // if-block "traceSWO"
[16:58:10.187]        // =>  TRUE
[16:58:10.188]      <block atomic="false" info="">
[16:58:10.188]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:58:10.188]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:58:10.188]            <block atomic="false" info="">
[16:58:10.188]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:58:10.188]                // -> [dbgmcu_val <= 0x00000000]
[16:58:10.189]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:58:10.189]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:58:10.189]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:58:10.190]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.190]                // -> [dbgmcu_val <= 0x00000007]
[16:58:10.190]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:58:10.190]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:58:10.190]              Sequence("ConfigureTraceSWOPin");
[16:58:10.190]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:58:10.191]                  <block atomic="false" info="">
[16:58:10.191]                    __var pin     = 0;
[16:58:10.191]                      // -> [pin <= 0x00000000]
[16:58:10.191]                    __var port    = 0;
[16:58:10.191]                      // -> [port <= 0x00000000]
[16:58:10.191]                    __var portAdr = 0;
[16:58:10.192]                      // -> [portAdr <= 0x00000000]
[16:58:10.192]                    __var pos     = 0;
[16:58:10.192]                      // -> [pos <= 0x00000000]
[16:58:10.192]                    __var SWO_Pin = 0x00010003;          // PB3
[16:58:10.192]                      // -> [SWO_Pin <= 0x00010003]
[16:58:10.193]                  </block>
[16:58:10.193]                  <block atomic="false" info="configure SWO">
[16:58:10.193]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:58:10.193]                      // -> [pin <= 0x00000003]
[16:58:10.193]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:58:10.193]                      // -> [port <= 0x00000001]
[16:58:10.194]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:58:10.194]                      // -> [portAdr <= 0x40020400]
[16:58:10.194]                    pos = pin * 2;
[16:58:10.194]                      // -> [pos <= 0x00000006]
[16:58:10.194]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:58:10.195]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.195]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.195]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:58:10.196]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.197]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.197]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:58:10.197]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.198]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.198]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:58:10.199]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.199]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.199]                  </block>
[16:58:10.199]                  <control if="pin <  8" while="" timeout="0" info="">
[16:58:10.200]                    // if-block "pin <  8"
[16:58:10.200]                      // =>  TRUE
[16:58:10.200]                    <block atomic="false" info="">
[16:58:10.200]                      pos = ((pin    ) & 7) * 4;
[16:58:10.200]                        // -> [pos <= 0x0000000C]
[16:58:10.201]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:58:10.201]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.202]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.202]                    </block>
[16:58:10.202]                    // end if-block "pin <  8"
[16:58:10.202]                  </control>
[16:58:10.202]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:58:10.203]                    // if-block "pin >= 8"
[16:58:10.203]                      // =>  FALSE
[16:58:10.203]                    // skip if-block "pin >= 8"
[16:58:10.203]                  </control>
[16:58:10.203]                </sequence>
[16:58:10.204]            </block>
[16:58:10.204]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:58:10.204]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:58:10.204]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.205]            </block>
[16:58:10.205]          </sequence>
[16:58:10.205]      </block>
[16:58:10.205]      // end if-block "traceSWO"
[16:58:10.205]    </control>
[16:58:10.205]    <control if="traceTPIU" while="" timeout="0" info="">
[16:58:10.206]      // if-block "traceTPIU"
[16:58:10.206]        // =>  FALSE
[16:58:10.206]      // skip if-block "traceTPIU"
[16:58:10.206]    </control>
[16:58:10.206]  </sequence>
[16:58:10.207]  
[16:58:10.211]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:58:10.211]  
[16:58:10.211]  <debugvars>
[16:58:10.211]    // Pre-defined
[16:58:10.211]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:58:10.212]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:58:10.212]    __dp=0x00000000
[16:58:10.212]    __ap=0x00000000
[16:58:10.212]    __traceout=0x00000001      (SWO Trace)
[16:58:10.212]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:58:10.213]    __FlashAddr=0x00000000
[16:58:10.213]    __FlashLen=0x00000000
[16:58:10.213]    __FlashArg=0x00000000
[16:58:10.213]    __FlashOp=0x00000000
[16:58:10.213]    __Result=0x00000000
[16:58:10.214]    
[16:58:10.214]    // User-defined
[16:58:10.214]    DbgMCU_CR=0x00000007
[16:58:10.214]    DbgMCU_APB1_Fz=0x00000000
[16:58:10.214]    DbgMCU_APB2_Fz=0x00000000
[16:58:10.214]    TraceClk_Pin=0x00040002
[16:58:10.215]    TraceD0_Pin=0x00040003
[16:58:10.215]    TraceD1_Pin=0x00040004
[16:58:10.215]    TraceD2_Pin=0x00040005
[16:58:10.215]    TraceD3_Pin=0x00040006
[16:58:10.215]  </debugvars>
[16:58:10.215]  
[16:58:10.216]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:58:10.216]    <block atomic="false" info="">
[16:58:10.216]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:58:10.216]        // -> [traceSWO <= 0x00000001]
[16:58:10.216]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:58:10.217]        // -> [traceTPIU <= 0x00000000]
[16:58:10.217]    </block>
[16:58:10.217]    <control if="traceSWO" while="" timeout="0" info="">
[16:58:10.217]      // if-block "traceSWO"
[16:58:10.217]        // =>  TRUE
[16:58:10.217]      <block atomic="false" info="">
[16:58:10.218]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:58:10.218]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:58:10.218]            <block atomic="false" info="">
[16:58:10.218]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:58:10.218]                // -> [dbgmcu_val <= 0x00000000]
[16:58:10.219]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:58:10.219]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:58:10.219]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:58:10.219]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.220]                // -> [dbgmcu_val <= 0x00000007]
[16:58:10.220]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:58:10.220]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:58:10.220]              Sequence("ConfigureTraceSWOPin");
[16:58:10.220]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:58:10.220]                  <block atomic="false" info="">
[16:58:10.221]                    __var pin     = 0;
[16:58:10.221]                      // -> [pin <= 0x00000000]
[16:58:10.221]                    __var port    = 0;
[16:58:10.221]                      // -> [port <= 0x00000000]
[16:58:10.221]                    __var portAdr = 0;
[16:58:10.221]                      // -> [portAdr <= 0x00000000]
[16:58:10.222]                    __var pos     = 0;
[16:58:10.222]                      // -> [pos <= 0x00000000]
[16:58:10.222]                    __var SWO_Pin = 0x00010003;          // PB3
[16:58:10.222]                      // -> [SWO_Pin <= 0x00010003]
[16:58:10.222]                  </block>
[16:58:10.223]                  <block atomic="false" info="configure SWO">
[16:58:10.223]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:58:10.223]                      // -> [pin <= 0x00000003]
[16:58:10.223]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:58:10.223]                      // -> [port <= 0x00000001]
[16:58:10.223]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:58:10.224]                      // -> [portAdr <= 0x40020400]
[16:58:10.224]                    pos = pin * 2;
[16:58:10.224]                      // -> [pos <= 0x00000006]
[16:58:10.224]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:58:10.225]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.225]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.225]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:58:10.226]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.227]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.227]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:58:10.227]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.228]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.228]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:58:10.229]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.229]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.230]                  </block>
[16:58:10.230]                  <control if="pin <  8" while="" timeout="0" info="">
[16:58:10.230]                    // if-block "pin <  8"
[16:58:10.230]                      // =>  TRUE
[16:58:10.230]                    <block atomic="false" info="">
[16:58:10.231]                      pos = ((pin    ) & 7) * 4;
[16:58:10.231]                        // -> [pos <= 0x0000000C]
[16:58:10.232]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:58:10.232]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.232]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.232]                    </block>
[16:58:10.233]                    // end if-block "pin <  8"
[16:58:10.233]                  </control>
[16:58:10.233]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:58:10.233]                    // if-block "pin >= 8"
[16:58:10.233]                      // =>  FALSE
[16:58:10.234]                    // skip if-block "pin >= 8"
[16:58:10.234]                  </control>
[16:58:10.234]                </sequence>
[16:58:10.234]            </block>
[16:58:10.234]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:58:10.235]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:58:10.235]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.235]            </block>
[16:58:10.235]          </sequence>
[16:58:10.236]      </block>
[16:58:10.236]      // end if-block "traceSWO"
[16:58:10.236]    </control>
[16:58:10.236]    <control if="traceTPIU" while="" timeout="0" info="">
[16:58:10.236]      // if-block "traceTPIU"
[16:58:10.236]        // =>  FALSE
[16:58:10.237]      // skip if-block "traceTPIU"
[16:58:10.237]    </control>
[16:58:10.237]  </sequence>
[16:58:10.237]  
[16:58:10.443]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[16:58:10.443]  
[16:58:10.443]  <debugvars>
[16:58:10.443]    // Pre-defined
[16:58:10.443]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:58:10.444]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:58:10.444]    __dp=0x00000000
[16:58:10.444]    __ap=0x00000000
[16:58:10.444]    __traceout=0x00000001      (SWO Trace)
[16:58:10.444]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:58:10.445]    __FlashAddr=0x00000000
[16:58:10.445]    __FlashLen=0x00000000
[16:58:10.445]    __FlashArg=0x00000000
[16:58:10.445]    __FlashOp=0x00000000
[16:58:10.445]    __Result=0x00000000
[16:58:10.446]    
[16:58:10.446]    // User-defined
[16:58:10.446]    DbgMCU_CR=0x00000007
[16:58:10.446]    DbgMCU_APB1_Fz=0x00000000
[16:58:10.446]    DbgMCU_APB2_Fz=0x00000000
[16:58:10.447]    TraceClk_Pin=0x00040002
[16:58:10.447]    TraceD0_Pin=0x00040003
[16:58:10.447]    TraceD1_Pin=0x00040004
[16:58:10.447]    TraceD2_Pin=0x00040005
[16:58:10.447]    TraceD3_Pin=0x00040006
[16:58:10.448]  </debugvars>
[16:58:10.448]  
[16:58:10.448]  <sequence name="TraceStart" Pname="" disable="false" info="">
[16:58:10.448]    <block atomic="false" info="">
[16:58:10.448]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[16:58:10.449]        // -> [traceSWO <= 0x00000001]
[16:58:10.449]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[16:58:10.449]        // -> [traceTPIU <= 0x00000000]
[16:58:10.449]    </block>
[16:58:10.449]    <control if="traceSWO" while="" timeout="0" info="">
[16:58:10.450]      // if-block "traceSWO"
[16:58:10.450]        // =>  TRUE
[16:58:10.450]      <block atomic="false" info="">
[16:58:10.450]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[16:58:10.450]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[16:58:10.451]            <block atomic="false" info="">
[16:58:10.451]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:58:10.451]                // -> [dbgmcu_val <= 0x00000000]
[16:58:10.451]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[16:58:10.451]                // -> [dbgmcu_trace_val <= 0x00000000]
[16:58:10.452]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[16:58:10.452]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.452]                // -> [dbgmcu_val <= 0x00000007]
[16:58:10.452]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[16:58:10.453]                // -> [dbgmcu_trace_val <= 0x00000020]
[16:58:10.453]              Sequence("ConfigureTraceSWOPin");
[16:58:10.453]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[16:58:10.453]                  <block atomic="false" info="">
[16:58:10.453]                    __var pin     = 0;
[16:58:10.453]                      // -> [pin <= 0x00000000]
[16:58:10.454]                    __var port    = 0;
[16:58:10.454]                      // -> [port <= 0x00000000]
[16:58:10.454]                    __var portAdr = 0;
[16:58:10.454]                      // -> [portAdr <= 0x00000000]
[16:58:10.454]                    __var pos     = 0;
[16:58:10.454]                      // -> [pos <= 0x00000000]
[16:58:10.455]                    __var SWO_Pin = 0x00010003;          // PB3
[16:58:10.455]                      // -> [SWO_Pin <= 0x00010003]
[16:58:10.455]                  </block>
[16:58:10.455]                  <block atomic="false" info="configure SWO">
[16:58:10.455]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[16:58:10.455]                      // -> [pin <= 0x00000003]
[16:58:10.456]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[16:58:10.456]                      // -> [port <= 0x00000001]
[16:58:10.456]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[16:58:10.456]                      // -> [portAdr <= 0x40020400]
[16:58:10.456]                    pos = pin * 2;
[16:58:10.456]                      // -> [pos <= 0x00000006]
[16:58:10.456]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[16:58:10.457]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.457]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.458]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[16:58:10.458]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.459]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.459]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[16:58:10.459]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.460]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.460]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[16:58:10.460]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.461]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.461]                  </block>
[16:58:10.461]                  <control if="pin <  8" while="" timeout="0" info="">
[16:58:10.461]                    // if-block "pin <  8"
[16:58:10.461]                      // =>  TRUE
[16:58:10.461]                    <block atomic="false" info="">
[16:58:10.461]                      pos = ((pin    ) & 7) * 4;
[16:58:10.461]                        // -> [pos <= 0x0000000C]
[16:58:10.462]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[16:58:10.462]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.462]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.463]                    </block>
[16:58:10.463]                    // end if-block "pin <  8"
[16:58:10.463]                  </control>
[16:58:10.463]                  <control if="pin >= 8" while="" timeout="0" info="">
[16:58:10.463]                    // if-block "pin >= 8"
[16:58:10.463]                      // =>  FALSE
[16:58:10.464]                    // skip if-block "pin >= 8"
[16:58:10.464]                  </control>
[16:58:10.464]                </sequence>
[16:58:10.464]            </block>
[16:58:10.464]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[16:58:10.464]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[16:58:10.465]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:10.465]            </block>
[16:58:10.465]          </sequence>
[16:58:10.465]      </block>
[16:58:10.465]      // end if-block "traceSWO"
[16:58:10.465]    </control>
[16:58:10.465]    <control if="traceTPIU" while="" timeout="0" info="">
[16:58:10.466]      // if-block "traceTPIU"
[16:58:10.466]        // =>  FALSE
[16:58:10.466]      // skip if-block "traceTPIU"
[16:58:10.466]    </control>
[16:58:10.466]  </sequence>
[16:58:10.466]  
[16:58:43.923]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[16:58:43.923]  
[16:58:43.924]  <debugvars>
[16:58:43.925]    // Pre-defined
[16:58:43.925]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:58:43.926]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[16:58:43.926]    __dp=0x00000000
[16:58:43.927]    __ap=0x00000000
[16:58:43.927]    __traceout=0x00000001      (SWO Trace)
[16:58:43.928]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:58:43.928]    __FlashAddr=0x00000000
[16:58:43.929]    __FlashLen=0x00000000
[16:58:43.930]    __FlashArg=0x00000000
[16:58:43.931]    __FlashOp=0x00000000
[16:58:43.931]    __Result=0x00000000
[16:58:43.931]    
[16:58:43.931]    // User-defined
[16:58:43.932]    DbgMCU_CR=0x00000007
[16:58:43.932]    DbgMCU_APB1_Fz=0x00000000
[16:58:43.933]    DbgMCU_APB2_Fz=0x00000000
[16:58:43.933]    TraceClk_Pin=0x00040002
[16:58:43.934]    TraceD0_Pin=0x00040003
[16:58:43.935]    TraceD1_Pin=0x00040004
[16:58:43.935]    TraceD2_Pin=0x00040005
[16:58:43.936]    TraceD3_Pin=0x00040006
[16:58:43.936]  </debugvars>
[16:58:43.937]  
[16:58:43.937]  <sequence name="TraceStop" Pname="" disable="false" info="">
[16:58:43.937]    <block atomic="false" info="">
[16:58:43.938]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[16:58:43.938]        // -> [traceSWO <= 0x00000001]
[16:58:43.939]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[16:58:43.939]        // -> [traceTPIU <= 0x00000000]
[16:58:43.940]    </block>
[16:58:43.941]    <control if="traceSWO" while="" timeout="0" info="">
[16:58:43.941]      // if-block "traceSWO"
[16:58:43.941]        // =>  TRUE
[16:58:43.942]      <block atomic="false" info="">
[16:58:43.942]        Sequence("DisableTraceSWO");
[16:58:43.943]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[16:58:43.943]            <block atomic="false" info="">
[16:58:43.944]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[16:58:43.944]                // -> [dbgmcu_val <= 0x00000000]
[16:58:43.945]            </block>
[16:58:43.945]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[16:58:43.946]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[16:58:43.947]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[16:58:43.947]                // -> [dbgmcu_val <= 0x00000007]
[16:58:43.948]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[16:58:43.948]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:58:43.949]            </block>
[16:58:43.949]          </sequence>
[16:58:43.949]      </block>
[16:58:43.949]      // end if-block "traceSWO"
[16:58:43.950]    </control>
[16:58:43.950]    <control if="traceTPIU" while="" timeout="0" info="">
[16:58:43.950]      // if-block "traceTPIU"
[16:58:43.950]        // =>  FALSE
[16:58:43.950]      // skip if-block "traceTPIU"
[16:58:43.950]    </control>
[16:58:43.951]  </sequence>
[16:58:43.951]  
[16:59:56.481]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[16:59:56.481]  
[16:59:56.482]  <debugvars>
[16:59:56.482]    // Pre-defined
[16:59:56.482]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:59:56.482]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:59:56.482]    __dp=0x00000000
[16:59:56.483]    __ap=0x00000000
[16:59:56.483]    __traceout=0x00000001      (SWO Trace)
[16:59:56.483]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:59:56.483]    __FlashAddr=0x00000000
[16:59:56.483]    __FlashLen=0x00000000
[16:59:56.484]    __FlashArg=0x00000000
[16:59:56.484]    __FlashOp=0x00000000
[16:59:56.484]    __Result=0x00000000
[16:59:56.484]    
[16:59:56.484]    // User-defined
[16:59:56.484]    DbgMCU_CR=0x00000007
[16:59:56.484]    DbgMCU_APB1_Fz=0x00000000
[16:59:56.485]    DbgMCU_APB2_Fz=0x00000000
[16:59:56.485]    TraceClk_Pin=0x00040002
[16:59:56.485]    TraceD0_Pin=0x00040003
[16:59:56.485]    TraceD1_Pin=0x00040004
[16:59:56.486]    TraceD2_Pin=0x00040005
[16:59:56.486]    TraceD3_Pin=0x00040006
[16:59:56.486]  </debugvars>
[16:59:56.486]  
[16:59:56.486]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[16:59:56.487]    <block atomic="false" info="">
[16:59:56.487]      Sequence("CheckID");
[16:59:56.487]        <sequence name="CheckID" Pname="" disable="false" info="">
[16:59:56.487]          <block atomic="false" info="">
[16:59:56.487]            __var pidr1 = 0;
[16:59:56.487]              // -> [pidr1 <= 0x00000000]
[16:59:56.488]            __var pidr2 = 0;
[16:59:56.488]              // -> [pidr2 <= 0x00000000]
[16:59:56.488]            __var jep106id = 0;
[16:59:56.488]              // -> [jep106id <= 0x00000000]
[16:59:56.488]            __var ROMTableBase = 0;
[16:59:56.488]              // -> [ROMTableBase <= 0x00000000]
[16:59:56.489]            __ap = 0;      // AHB-AP
[16:59:56.489]              // -> [__ap <= 0x00000000]
[16:59:56.489]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[16:59:56.489]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.490]              // -> [ROMTableBase <= 0xE00FD000]
[16:59:56.490]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[16:59:56.490]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.491]              // -> [pidr1 <= 0x00000004]
[16:59:56.491]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[16:59:56.491]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.492]              // -> [pidr2 <= 0x0000001A]
[16:59:56.492]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[16:59:56.492]              // -> [jep106id <= 0x00000020]
[16:59:56.492]          </block>
[16:59:56.492]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[16:59:56.492]            // if-block "jep106id != 0x20"
[16:59:56.492]              // =>  FALSE
[16:59:56.492]            // skip if-block "jep106id != 0x20"
[16:59:56.492]          </control>
[16:59:56.493]        </sequence>
[16:59:56.493]    </block>
[16:59:56.493]  </sequence>
[16:59:56.493]  
[16:59:56.507]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[16:59:56.507]  
[16:59:56.508]  <debugvars>
[16:59:56.508]    // Pre-defined
[16:59:56.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[16:59:56.508]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[16:59:56.508]    __dp=0x00000000
[16:59:56.509]    __ap=0x00000000
[16:59:56.509]    __traceout=0x00000001      (SWO Trace)
[16:59:56.509]    __errorcontrol=0x00000000  (Skip Errors="False")
[16:59:56.509]    __FlashAddr=0x00000000
[16:59:56.509]    __FlashLen=0x00000000
[16:59:56.509]    __FlashArg=0x00000000
[16:59:56.509]    __FlashOp=0x00000000
[16:59:56.510]    __Result=0x00000000
[16:59:56.510]    
[16:59:56.510]    // User-defined
[16:59:56.510]    DbgMCU_CR=0x00000007
[16:59:56.510]    DbgMCU_APB1_Fz=0x00000000
[16:59:56.510]    DbgMCU_APB2_Fz=0x00000000
[16:59:56.510]    TraceClk_Pin=0x00040002
[16:59:56.511]    TraceD0_Pin=0x00040003
[16:59:56.511]    TraceD1_Pin=0x00040004
[16:59:56.511]    TraceD2_Pin=0x00040005
[16:59:56.511]    TraceD3_Pin=0x00040006
[16:59:56.511]  </debugvars>
[16:59:56.511]  
[16:59:56.511]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[16:59:56.512]    <block atomic="false" info="">
[16:59:56.512]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[16:59:56.512]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.513]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[16:59:56.513]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.513]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[16:59:56.514]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.514]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[16:59:56.514]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[16:59:56.514]    </block>
[16:59:56.515]  </sequence>
[16:59:56.515]  
[17:00:27.187]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:00:27.187]  
[17:00:27.187]  <debugvars>
[17:00:27.187]    // Pre-defined
[17:00:27.188]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:00:27.188]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:00:27.188]    __dp=0x00000000
[17:00:27.188]    __ap=0x00000000
[17:00:27.188]    __traceout=0x00000001      (SWO Trace)
[17:00:27.189]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:00:27.189]    __FlashAddr=0x00000000
[17:00:27.189]    __FlashLen=0x00000000
[17:00:27.189]    __FlashArg=0x00000000
[17:00:27.189]    __FlashOp=0x00000000
[17:00:27.190]    __Result=0x00000000
[17:00:27.190]    
[17:00:27.190]    // User-defined
[17:00:27.190]    DbgMCU_CR=0x00000007
[17:00:27.190]    DbgMCU_APB1_Fz=0x00000000
[17:00:27.190]    DbgMCU_APB2_Fz=0x00000000
[17:00:27.191]    TraceClk_Pin=0x00040002
[17:00:27.191]    TraceD0_Pin=0x00040003
[17:00:27.191]    TraceD1_Pin=0x00040004
[17:00:27.191]    TraceD2_Pin=0x00040005
[17:00:27.191]    TraceD3_Pin=0x00040006
[17:00:27.192]  </debugvars>
[17:00:27.192]  
[17:00:27.192]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:00:27.192]    <block atomic="false" info="">
[17:00:27.192]      Sequence("CheckID");
[17:00:27.192]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:00:27.193]          <block atomic="false" info="">
[17:00:27.193]            __var pidr1 = 0;
[17:00:27.193]              // -> [pidr1 <= 0x00000000]
[17:00:27.193]            __var pidr2 = 0;
[17:00:27.193]              // -> [pidr2 <= 0x00000000]
[17:00:27.194]            __var jep106id = 0;
[17:00:27.194]              // -> [jep106id <= 0x00000000]
[17:00:27.194]            __var ROMTableBase = 0;
[17:00:27.194]              // -> [ROMTableBase <= 0x00000000]
[17:00:27.194]            __ap = 0;      // AHB-AP
[17:00:27.195]              // -> [__ap <= 0x00000000]
[17:00:27.195]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:00:27.195]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.195]              // -> [ROMTableBase <= 0xE00FD000]
[17:00:27.196]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:00:27.196]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.196]              // -> [pidr1 <= 0x00000004]
[17:00:27.196]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:00:27.197]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.197]              // -> [pidr2 <= 0x0000001A]
[17:00:27.197]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:00:27.198]              // -> [jep106id <= 0x00000020]
[17:00:27.198]          </block>
[17:00:27.198]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:00:27.198]            // if-block "jep106id != 0x20"
[17:00:27.198]              // =>  FALSE
[17:00:27.199]            // skip if-block "jep106id != 0x20"
[17:00:27.199]          </control>
[17:00:27.199]        </sequence>
[17:00:27.199]    </block>
[17:00:27.199]  </sequence>
[17:00:27.200]  
[17:00:27.213]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:00:27.213]  
[17:00:27.214]  <debugvars>
[17:00:27.214]    // Pre-defined
[17:00:27.214]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:00:27.214]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:00:27.214]    __dp=0x00000000
[17:00:27.215]    __ap=0x00000000
[17:00:27.215]    __traceout=0x00000001      (SWO Trace)
[17:00:27.215]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:00:27.215]    __FlashAddr=0x00000000
[17:00:27.215]    __FlashLen=0x00000000
[17:00:27.216]    __FlashArg=0x00000000
[17:00:27.216]    __FlashOp=0x00000000
[17:00:27.216]    __Result=0x00000000
[17:00:27.216]    
[17:00:27.216]    // User-defined
[17:00:27.217]    DbgMCU_CR=0x00000007
[17:00:27.217]    DbgMCU_APB1_Fz=0x00000000
[17:00:27.217]    DbgMCU_APB2_Fz=0x00000000
[17:00:27.217]    TraceClk_Pin=0x00040002
[17:00:27.218]    TraceD0_Pin=0x00040003
[17:00:27.218]    TraceD1_Pin=0x00040004
[17:00:27.218]    TraceD2_Pin=0x00040005
[17:00:27.218]    TraceD3_Pin=0x00040006
[17:00:27.219]  </debugvars>
[17:00:27.219]  
[17:00:27.219]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:00:27.219]    <block atomic="false" info="">
[17:00:27.219]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:00:27.220]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.220]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:00:27.221]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.222]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:00:27.222]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.222]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:00:27.222]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.222]    </block>
[17:00:27.223]  </sequence>
[17:00:27.223]  
[17:00:27.238]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[17:00:27.238]  
[17:00:27.239]  <debugvars>
[17:00:27.239]    // Pre-defined
[17:00:27.239]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:00:27.239]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:00:27.239]    __dp=0x00000000
[17:00:27.240]    __ap=0x00000000
[17:00:27.240]    __traceout=0x00000001      (SWO Trace)
[17:00:27.240]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:00:27.240]    __FlashAddr=0x00000000
[17:00:27.240]    __FlashLen=0x00000000
[17:00:27.241]    __FlashArg=0x00000000
[17:00:27.241]    __FlashOp=0x00000000
[17:00:27.241]    __Result=0x00000000
[17:00:27.241]    
[17:00:27.241]    // User-defined
[17:00:27.241]    DbgMCU_CR=0x00000007
[17:00:27.242]    DbgMCU_APB1_Fz=0x00000000
[17:00:27.242]    DbgMCU_APB2_Fz=0x00000000
[17:00:27.242]    TraceClk_Pin=0x00040002
[17:00:27.242]    TraceD0_Pin=0x00040003
[17:00:27.242]    TraceD1_Pin=0x00040004
[17:00:27.243]    TraceD2_Pin=0x00040005
[17:00:27.243]    TraceD3_Pin=0x00040006
[17:00:27.243]  </debugvars>
[17:00:27.243]  
[17:00:27.244]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:00:27.244]    <block atomic="false" info="">
[17:00:27.244]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:00:27.244]        // -> [traceSWO <= 0x00000001]
[17:00:27.244]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:00:27.245]        // -> [traceTPIU <= 0x00000000]
[17:00:27.245]    </block>
[17:00:27.245]    <control if="traceSWO" while="" timeout="0" info="">
[17:00:27.245]      // if-block "traceSWO"
[17:00:27.245]        // =>  TRUE
[17:00:27.245]      <block atomic="false" info="">
[17:00:27.246]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:00:27.246]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:00:27.246]            <block atomic="false" info="">
[17:00:27.246]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:00:27.246]                // -> [dbgmcu_val <= 0x00000000]
[17:00:27.247]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:00:27.247]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:00:27.247]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:00:27.247]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.248]                // -> [dbgmcu_val <= 0x00000007]
[17:00:27.248]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:00:27.248]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:00:27.248]              Sequence("ConfigureTraceSWOPin");
[17:00:27.248]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:00:27.248]                  <block atomic="false" info="">
[17:00:27.249]                    __var pin     = 0;
[17:00:27.249]                      // -> [pin <= 0x00000000]
[17:00:27.249]                    __var port    = 0;
[17:00:27.249]                      // -> [port <= 0x00000000]
[17:00:27.249]                    __var portAdr = 0;
[17:00:27.249]                      // -> [portAdr <= 0x00000000]
[17:00:27.250]                    __var pos     = 0;
[17:00:27.250]                      // -> [pos <= 0x00000000]
[17:00:27.250]                    __var SWO_Pin = 0x00010003;          // PB3
[17:00:27.250]                      // -> [SWO_Pin <= 0x00010003]
[17:00:27.250]                  </block>
[17:00:27.251]                  <block atomic="false" info="configure SWO">
[17:00:27.251]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:00:27.251]                      // -> [pin <= 0x00000003]
[17:00:27.251]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:00:27.251]                      // -> [port <= 0x00000001]
[17:00:27.251]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:00:27.251]                      // -> [portAdr <= 0x40020400]
[17:00:27.252]                    pos = pin * 2;
[17:00:27.252]                      // -> [pos <= 0x00000006]
[17:00:27.252]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:00:27.253]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.254]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.254]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:00:27.254]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.255]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.255]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:00:27.255]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.256]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.256]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:00:27.256]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.257]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.257]                  </block>
[17:00:27.257]                  <control if="pin <  8" while="" timeout="0" info="">
[17:00:27.257]                    // if-block "pin <  8"
[17:00:27.257]                      // =>  TRUE
[17:00:27.257]                    <block atomic="false" info="">
[17:00:27.258]                      pos = ((pin    ) & 7) * 4;
[17:00:27.258]                        // -> [pos <= 0x0000000C]
[17:00:27.258]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:00:27.259]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.259]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.259]                    </block>
[17:00:27.259]                    // end if-block "pin <  8"
[17:00:27.259]                  </control>
[17:00:27.260]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:00:27.260]                    // if-block "pin >= 8"
[17:00:27.260]                      // =>  FALSE
[17:00:27.260]                    // skip if-block "pin >= 8"
[17:00:27.260]                  </control>
[17:00:27.260]                </sequence>
[17:00:27.261]            </block>
[17:00:27.261]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:00:27.261]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:00:27.261]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.262]            </block>
[17:00:27.262]          </sequence>
[17:00:27.262]      </block>
[17:00:27.262]      // end if-block "traceSWO"
[17:00:27.262]    </control>
[17:00:27.262]    <control if="traceTPIU" while="" timeout="0" info="">
[17:00:27.262]      // if-block "traceTPIU"
[17:00:27.263]        // =>  FALSE
[17:00:27.263]      // skip if-block "traceTPIU"
[17:00:27.263]    </control>
[17:00:27.263]  </sequence>
[17:00:27.263]  
[17:00:27.267]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:00:27.267]  
[17:00:27.267]  <debugvars>
[17:00:27.267]    // Pre-defined
[17:00:27.268]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:00:27.268]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:00:27.268]    __dp=0x00000000
[17:00:27.268]    __ap=0x00000000
[17:00:27.268]    __traceout=0x00000001      (SWO Trace)
[17:00:27.269]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:00:27.269]    __FlashAddr=0x00000000
[17:00:27.269]    __FlashLen=0x00000000
[17:00:27.269]    __FlashArg=0x00000000
[17:00:27.269]    __FlashOp=0x00000000
[17:00:27.269]    __Result=0x00000000
[17:00:27.269]    
[17:00:27.269]    // User-defined
[17:00:27.270]    DbgMCU_CR=0x00000007
[17:00:27.270]    DbgMCU_APB1_Fz=0x00000000
[17:00:27.270]    DbgMCU_APB2_Fz=0x00000000
[17:00:27.270]    TraceClk_Pin=0x00040002
[17:00:27.270]    TraceD0_Pin=0x00040003
[17:00:27.270]    TraceD1_Pin=0x00040004
[17:00:27.271]    TraceD2_Pin=0x00040005
[17:00:27.271]    TraceD3_Pin=0x00040006
[17:00:27.271]  </debugvars>
[17:00:27.272]  
[17:00:27.272]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:00:27.272]    <block atomic="false" info="">
[17:00:27.272]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:00:27.272]        // -> [traceSWO <= 0x00000001]
[17:00:27.272]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:00:27.272]        // -> [traceTPIU <= 0x00000000]
[17:00:27.272]    </block>
[17:00:27.272]    <control if="traceSWO" while="" timeout="0" info="">
[17:00:27.272]      // if-block "traceSWO"
[17:00:27.272]        // =>  TRUE
[17:00:27.272]      <block atomic="false" info="">
[17:00:27.273]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:00:27.273]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:00:27.273]            <block atomic="false" info="">
[17:00:27.273]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:00:27.273]                // -> [dbgmcu_val <= 0x00000000]
[17:00:27.273]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:00:27.273]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:00:27.273]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:00:27.274]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.274]                // -> [dbgmcu_val <= 0x00000007]
[17:00:27.274]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:00:27.274]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:00:27.274]              Sequence("ConfigureTraceSWOPin");
[17:00:27.275]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:00:27.275]                  <block atomic="false" info="">
[17:00:27.275]                    __var pin     = 0;
[17:00:27.275]                      // -> [pin <= 0x00000000]
[17:00:27.275]                    __var port    = 0;
[17:00:27.275]                      // -> [port <= 0x00000000]
[17:00:27.275]                    __var portAdr = 0;
[17:00:27.275]                      // -> [portAdr <= 0x00000000]
[17:00:27.276]                    __var pos     = 0;
[17:00:27.276]                      // -> [pos <= 0x00000000]
[17:00:27.276]                    __var SWO_Pin = 0x00010003;          // PB3
[17:00:27.276]                      // -> [SWO_Pin <= 0x00010003]
[17:00:27.277]                  </block>
[17:00:27.277]                  <block atomic="false" info="configure SWO">
[17:00:27.277]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:00:27.277]                      // -> [pin <= 0x00000003]
[17:00:27.277]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:00:27.277]                      // -> [port <= 0x00000001]
[17:00:27.277]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:00:27.277]                      // -> [portAdr <= 0x40020400]
[17:00:27.277]                    pos = pin * 2;
[17:00:27.277]                      // -> [pos <= 0x00000006]
[17:00:27.277]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:00:27.278]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.278]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.278]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:00:27.279]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.279]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.279]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:00:27.280]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.280]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.280]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:00:27.280]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.281]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.281]                  </block>
[17:00:27.281]                  <control if="pin <  8" while="" timeout="0" info="">
[17:00:27.281]                    // if-block "pin <  8"
[17:00:27.282]                      // =>  TRUE
[17:00:27.282]                    <block atomic="false" info="">
[17:00:27.282]                      pos = ((pin    ) & 7) * 4;
[17:00:27.282]                        // -> [pos <= 0x0000000C]
[17:00:27.282]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:00:27.283]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.283]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.283]                    </block>
[17:00:27.283]                    // end if-block "pin <  8"
[17:00:27.283]                  </control>
[17:00:27.284]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:00:27.284]                    // if-block "pin >= 8"
[17:00:27.284]                      // =>  FALSE
[17:00:27.284]                    // skip if-block "pin >= 8"
[17:00:27.284]                  </control>
[17:00:27.284]                </sequence>
[17:00:27.284]            </block>
[17:00:27.284]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:00:27.285]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:00:27.285]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.285]            </block>
[17:00:27.285]          </sequence>
[17:00:27.286]      </block>
[17:00:27.286]      // end if-block "traceSWO"
[17:00:27.286]    </control>
[17:00:27.286]    <control if="traceTPIU" while="" timeout="0" info="">
[17:00:27.286]      // if-block "traceTPIU"
[17:00:27.286]        // =>  FALSE
[17:00:27.286]      // skip if-block "traceTPIU"
[17:00:27.286]    </control>
[17:00:27.287]  </sequence>
[17:00:27.287]  
[17:00:27.511]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:00:27.511]  
[17:00:27.511]  <debugvars>
[17:00:27.512]    // Pre-defined
[17:00:27.512]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:00:27.512]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:00:27.512]    __dp=0x00000000
[17:00:27.512]    __ap=0x00000000
[17:00:27.512]    __traceout=0x00000001      (SWO Trace)
[17:00:27.512]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:00:27.512]    __FlashAddr=0x00000000
[17:00:27.513]    __FlashLen=0x00000000
[17:00:27.513]    __FlashArg=0x00000000
[17:00:27.513]    __FlashOp=0x00000000
[17:00:27.513]    __Result=0x00000000
[17:00:27.513]    
[17:00:27.513]    // User-defined
[17:00:27.513]    DbgMCU_CR=0x00000007
[17:00:27.514]    DbgMCU_APB1_Fz=0x00000000
[17:00:27.514]    DbgMCU_APB2_Fz=0x00000000
[17:00:27.514]    TraceClk_Pin=0x00040002
[17:00:27.514]    TraceD0_Pin=0x00040003
[17:00:27.514]    TraceD1_Pin=0x00040004
[17:00:27.514]    TraceD2_Pin=0x00040005
[17:00:27.515]    TraceD3_Pin=0x00040006
[17:00:27.515]  </debugvars>
[17:00:27.515]  
[17:00:27.515]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:00:27.515]    <block atomic="false" info="">
[17:00:27.515]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:00:27.515]        // -> [traceSWO <= 0x00000001]
[17:00:27.516]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:00:27.516]        // -> [traceTPIU <= 0x00000000]
[17:00:27.516]    </block>
[17:00:27.516]    <control if="traceSWO" while="" timeout="0" info="">
[17:00:27.516]      // if-block "traceSWO"
[17:00:27.517]        // =>  TRUE
[17:00:27.517]      <block atomic="false" info="">
[17:00:27.517]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:00:27.517]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:00:27.517]            <block atomic="false" info="">
[17:00:27.517]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:00:27.517]                // -> [dbgmcu_val <= 0x00000000]
[17:00:27.517]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:00:27.518]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:00:27.518]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:00:27.518]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.518]                // -> [dbgmcu_val <= 0x00000007]
[17:00:27.519]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:00:27.519]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:00:27.519]              Sequence("ConfigureTraceSWOPin");
[17:00:27.519]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:00:27.519]                  <block atomic="false" info="">
[17:00:27.519]                    __var pin     = 0;
[17:00:27.519]                      // -> [pin <= 0x00000000]
[17:00:27.519]                    __var port    = 0;
[17:00:27.520]                      // -> [port <= 0x00000000]
[17:00:27.520]                    __var portAdr = 0;
[17:00:27.520]                      // -> [portAdr <= 0x00000000]
[17:00:27.520]                    __var pos     = 0;
[17:00:27.520]                      // -> [pos <= 0x00000000]
[17:00:27.520]                    __var SWO_Pin = 0x00010003;          // PB3
[17:00:27.520]                      // -> [SWO_Pin <= 0x00010003]
[17:00:27.520]                  </block>
[17:00:27.521]                  <block atomic="false" info="configure SWO">
[17:00:27.521]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:00:27.521]                      // -> [pin <= 0x00000003]
[17:00:27.522]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:00:27.522]                      // -> [port <= 0x00000001]
[17:00:27.522]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:00:27.522]                      // -> [portAdr <= 0x40020400]
[17:00:27.522]                    pos = pin * 2;
[17:00:27.522]                      // -> [pos <= 0x00000006]
[17:00:27.522]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:00:27.522]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.522]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.523]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:00:27.523]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.523]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.523]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:00:27.524]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.524]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.524]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:00:27.525]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.525]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.525]                  </block>
[17:00:27.525]                  <control if="pin <  8" while="" timeout="0" info="">
[17:00:27.525]                    // if-block "pin <  8"
[17:00:27.526]                      // =>  TRUE
[17:00:27.526]                    <block atomic="false" info="">
[17:00:27.526]                      pos = ((pin    ) & 7) * 4;
[17:00:27.526]                        // -> [pos <= 0x0000000C]
[17:00:27.526]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:00:27.527]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.527]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.527]                    </block>
[17:00:27.527]                    // end if-block "pin <  8"
[17:00:27.528]                  </control>
[17:00:27.528]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:00:27.528]                    // if-block "pin >= 8"
[17:00:27.528]                      // =>  FALSE
[17:00:27.528]                    // skip if-block "pin >= 8"
[17:00:27.528]                  </control>
[17:00:27.528]                </sequence>
[17:00:27.528]            </block>
[17:00:27.528]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:00:27.529]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:00:27.529]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:00:27.529]            </block>
[17:00:27.529]          </sequence>
[17:00:27.530]      </block>
[17:00:27.530]      // end if-block "traceSWO"
[17:00:27.530]    </control>
[17:00:27.530]    <control if="traceTPIU" while="" timeout="0" info="">
[17:00:27.530]      // if-block "traceTPIU"
[17:00:27.530]        // =>  FALSE
[17:00:27.530]      // skip if-block "traceTPIU"
[17:00:27.530]    </control>
[17:00:27.530]  </sequence>
[17:00:27.531]  
[17:02:11.750]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[17:02:11.750]  
[17:02:11.750]  <debugvars>
[17:02:11.751]    // Pre-defined
[17:02:11.751]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:02:11.752]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:02:11.752]    __dp=0x00000000
[17:02:11.753]    __ap=0x00000000
[17:02:11.754]    __traceout=0x00000001      (SWO Trace)
[17:02:11.754]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:02:11.755]    __FlashAddr=0x00000000
[17:02:11.755]    __FlashLen=0x00000000
[17:02:11.755]    __FlashArg=0x00000000
[17:02:11.756]    __FlashOp=0x00000000
[17:02:11.757]    __Result=0x00000000
[17:02:11.757]    
[17:02:11.757]    // User-defined
[17:02:11.758]    DbgMCU_CR=0x00000007
[17:02:11.758]    DbgMCU_APB1_Fz=0x00000000
[17:02:11.758]    DbgMCU_APB2_Fz=0x00000000
[17:02:11.759]    TraceClk_Pin=0x00040002
[17:02:11.759]    TraceD0_Pin=0x00040003
[17:02:11.760]    TraceD1_Pin=0x00040004
[17:02:11.760]    TraceD2_Pin=0x00040005
[17:02:11.760]    TraceD3_Pin=0x00040006
[17:02:11.761]  </debugvars>
[17:02:11.761]  
[17:02:11.762]  <sequence name="TraceStop" Pname="" disable="false" info="">
[17:02:11.762]    <block atomic="false" info="">
[17:02:11.763]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[17:02:11.763]        // -> [traceSWO <= 0x00000001]
[17:02:11.763]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[17:02:11.764]        // -> [traceTPIU <= 0x00000000]
[17:02:11.764]    </block>
[17:02:11.764]    <control if="traceSWO" while="" timeout="0" info="">
[17:02:11.765]      // if-block "traceSWO"
[17:02:11.765]        // =>  TRUE
[17:02:11.765]      <block atomic="false" info="">
[17:02:11.766]        Sequence("DisableTraceSWO");
[17:02:11.766]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[17:02:11.766]            <block atomic="false" info="">
[17:02:11.766]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:02:11.766]                // -> [dbgmcu_val <= 0x00000000]
[17:02:11.766]            </block>
[17:02:11.766]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[17:02:11.767]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[17:02:11.767]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:02:11.768]                // -> [dbgmcu_val <= 0x00000007]
[17:02:11.768]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[17:02:11.768]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:02:11.769]            </block>
[17:02:11.769]          </sequence>
[17:02:11.769]      </block>
[17:02:11.769]      // end if-block "traceSWO"
[17:02:11.769]    </control>
[17:02:11.770]    <control if="traceTPIU" while="" timeout="0" info="">
[17:02:11.770]      // if-block "traceTPIU"
[17:02:11.770]        // =>  FALSE
[17:02:11.770]      // skip if-block "traceTPIU"
[17:02:11.770]    </control>
[17:02:11.771]  </sequence>
[17:02:11.771]  
[17:05:56.904]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:05:56.904]  
[17:05:56.904]  <debugvars>
[17:05:56.904]    // Pre-defined
[17:05:56.904]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:05:56.904]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[17:05:56.905]    __dp=0x00000000
[17:05:56.905]    __ap=0x00000000
[17:05:56.905]    __traceout=0x00000001      (SWO Trace)
[17:05:56.905]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:05:56.906]    __FlashAddr=0x00000000
[17:05:56.906]    __FlashLen=0x00000000
[17:05:56.906]    __FlashArg=0x00000000
[17:05:56.906]    __FlashOp=0x00000000
[17:05:56.906]    __Result=0x00000000
[17:05:56.906]    
[17:05:56.906]    // User-defined
[17:05:56.907]    DbgMCU_CR=0x00000007
[17:05:56.908]    DbgMCU_APB1_Fz=0x00000000
[17:05:56.908]    DbgMCU_APB2_Fz=0x00000000
[17:05:56.908]    TraceClk_Pin=0x00040002
[17:05:56.908]    TraceD0_Pin=0x00040003
[17:05:56.908]    TraceD1_Pin=0x00040004
[17:05:56.909]    TraceD2_Pin=0x00040005
[17:05:56.909]    TraceD3_Pin=0x00040006
[17:05:56.909]  </debugvars>
[17:05:56.909]  
[17:05:56.909]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:05:56.909]    <block atomic="false" info="">
[17:05:56.909]      Sequence("CheckID");
[17:05:56.909]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:05:56.909]          <block atomic="false" info="">
[17:05:56.910]            __var pidr1 = 0;
[17:05:56.910]              // -> [pidr1 <= 0x00000000]
[17:05:56.910]            __var pidr2 = 0;
[17:05:56.910]              // -> [pidr2 <= 0x00000000]
[17:05:56.910]            __var jep106id = 0;
[17:05:56.910]              // -> [jep106id <= 0x00000000]
[17:05:56.911]            __var ROMTableBase = 0;
[17:05:56.911]              // -> [ROMTableBase <= 0x00000000]
[17:05:56.911]            __ap = 0;      // AHB-AP
[17:05:56.911]              // -> [__ap <= 0x00000000]
[17:05:56.911]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:05:56.912]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.912]              // -> [ROMTableBase <= 0xE00FD000]
[17:05:56.912]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:05:56.913]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.913]              // -> [pidr1 <= 0x00000004]
[17:05:56.913]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:05:56.913]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.914]              // -> [pidr2 <= 0x0000001A]
[17:05:56.914]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:05:56.914]              // -> [jep106id <= 0x00000020]
[17:05:56.914]          </block>
[17:05:56.914]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:05:56.915]            // if-block "jep106id != 0x20"
[17:05:56.915]              // =>  FALSE
[17:05:56.915]            // skip if-block "jep106id != 0x20"
[17:05:56.915]          </control>
[17:05:56.915]        </sequence>
[17:05:56.916]    </block>
[17:05:56.916]  </sequence>
[17:05:56.916]  
[17:05:56.930]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:05:56.930]  
[17:05:56.930]  <debugvars>
[17:05:56.930]    // Pre-defined
[17:05:56.931]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:05:56.931]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[17:05:56.931]    __dp=0x00000000
[17:05:56.931]    __ap=0x00000000
[17:05:56.931]    __traceout=0x00000001      (SWO Trace)
[17:05:56.932]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:05:56.932]    __FlashAddr=0x00000000
[17:05:56.932]    __FlashLen=0x00000000
[17:05:56.932]    __FlashArg=0x00000000
[17:05:56.932]    __FlashOp=0x00000000
[17:05:56.933]    __Result=0x00000000
[17:05:56.933]    
[17:05:56.933]    // User-defined
[17:05:56.933]    DbgMCU_CR=0x00000007
[17:05:56.933]    DbgMCU_APB1_Fz=0x00000000
[17:05:56.934]    DbgMCU_APB2_Fz=0x00000000
[17:05:56.934]    TraceClk_Pin=0x00040002
[17:05:56.934]    TraceD0_Pin=0x00040003
[17:05:56.934]    TraceD1_Pin=0x00040004
[17:05:56.934]    TraceD2_Pin=0x00040005
[17:05:56.934]    TraceD3_Pin=0x00040006
[17:05:56.935]  </debugvars>
[17:05:56.935]  
[17:05:56.935]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:05:56.935]    <block atomic="false" info="">
[17:05:56.936]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:05:56.936]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.936]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:05:56.937]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.937]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:05:56.938]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.939]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:05:56.939]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:05:56.939]    </block>
[17:05:56.939]  </sequence>
[17:05:56.939]  
[17:06:28.122]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:06:28.122]  
[17:06:28.122]  <debugvars>
[17:06:28.122]    // Pre-defined
[17:06:28.122]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:06:28.122]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:06:28.122]    __dp=0x00000000
[17:06:28.122]    __ap=0x00000000
[17:06:28.123]    __traceout=0x00000001      (SWO Trace)
[17:06:28.123]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:06:28.123]    __FlashAddr=0x00000000
[17:06:28.123]    __FlashLen=0x00000000
[17:06:28.123]    __FlashArg=0x00000000
[17:06:28.123]    __FlashOp=0x00000000
[17:06:28.123]    __Result=0x00000000
[17:06:28.124]    
[17:06:28.124]    // User-defined
[17:06:28.124]    DbgMCU_CR=0x00000007
[17:06:28.124]    DbgMCU_APB1_Fz=0x00000000
[17:06:28.124]    DbgMCU_APB2_Fz=0x00000000
[17:06:28.124]    TraceClk_Pin=0x00040002
[17:06:28.124]    TraceD0_Pin=0x00040003
[17:06:28.125]    TraceD1_Pin=0x00040004
[17:06:28.125]    TraceD2_Pin=0x00040005
[17:06:28.125]    TraceD3_Pin=0x00040006
[17:06:28.125]  </debugvars>
[17:06:28.125]  
[17:06:28.125]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:06:28.125]    <block atomic="false" info="">
[17:06:28.125]      Sequence("CheckID");
[17:06:28.125]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:06:28.126]          <block atomic="false" info="">
[17:06:28.126]            __var pidr1 = 0;
[17:06:28.126]              // -> [pidr1 <= 0x00000000]
[17:06:28.126]            __var pidr2 = 0;
[17:06:28.126]              // -> [pidr2 <= 0x00000000]
[17:06:28.126]            __var jep106id = 0;
[17:06:28.127]              // -> [jep106id <= 0x00000000]
[17:06:28.127]            __var ROMTableBase = 0;
[17:06:28.127]              // -> [ROMTableBase <= 0x00000000]
[17:06:28.127]            __ap = 0;      // AHB-AP
[17:06:28.127]              // -> [__ap <= 0x00000000]
[17:06:28.127]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:06:28.127]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.128]              // -> [ROMTableBase <= 0xE00FD000]
[17:06:28.128]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:06:28.128]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.129]              // -> [pidr1 <= 0x00000004]
[17:06:28.129]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:06:28.129]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.129]              // -> [pidr2 <= 0x0000001A]
[17:06:28.129]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:06:28.129]              // -> [jep106id <= 0x00000020]
[17:06:28.130]          </block>
[17:06:28.130]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:06:28.130]            // if-block "jep106id != 0x20"
[17:06:28.130]              // =>  FALSE
[17:06:28.130]            // skip if-block "jep106id != 0x20"
[17:06:28.130]          </control>
[17:06:28.130]        </sequence>
[17:06:28.130]    </block>
[17:06:28.131]  </sequence>
[17:06:28.131]  
[17:06:28.146]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:06:28.146]  
[17:06:28.146]  <debugvars>
[17:06:28.146]    // Pre-defined
[17:06:28.146]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:06:28.146]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:06:28.146]    __dp=0x00000000
[17:06:28.147]    __ap=0x00000000
[17:06:28.147]    __traceout=0x00000001      (SWO Trace)
[17:06:28.147]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:06:28.147]    __FlashAddr=0x00000000
[17:06:28.147]    __FlashLen=0x00000000
[17:06:28.147]    __FlashArg=0x00000000
[17:06:28.147]    __FlashOp=0x00000000
[17:06:28.148]    __Result=0x00000000
[17:06:28.148]    
[17:06:28.148]    // User-defined
[17:06:28.148]    DbgMCU_CR=0x00000007
[17:06:28.148]    DbgMCU_APB1_Fz=0x00000000
[17:06:28.148]    DbgMCU_APB2_Fz=0x00000000
[17:06:28.148]    TraceClk_Pin=0x00040002
[17:06:28.148]    TraceD0_Pin=0x00040003
[17:06:28.149]    TraceD1_Pin=0x00040004
[17:06:28.149]    TraceD2_Pin=0x00040005
[17:06:28.149]    TraceD3_Pin=0x00040006
[17:06:28.149]  </debugvars>
[17:06:28.149]  
[17:06:28.149]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:06:28.149]    <block atomic="false" info="">
[17:06:28.150]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:06:28.150]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.150]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:06:28.151]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.151]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:06:28.151]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.152]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:06:28.152]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.152]    </block>
[17:06:28.152]  </sequence>
[17:06:28.152]  
[17:06:28.168]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[17:06:28.168]  
[17:06:28.168]  <debugvars>
[17:06:28.169]    // Pre-defined
[17:06:28.169]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:06:28.169]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:06:28.169]    __dp=0x00000000
[17:06:28.169]    __ap=0x00000000
[17:06:28.169]    __traceout=0x00000001      (SWO Trace)
[17:06:28.169]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:06:28.170]    __FlashAddr=0x00000000
[17:06:28.170]    __FlashLen=0x00000000
[17:06:28.170]    __FlashArg=0x00000000
[17:06:28.170]    __FlashOp=0x00000000
[17:06:28.170]    __Result=0x00000000
[17:06:28.170]    
[17:06:28.170]    // User-defined
[17:06:28.170]    DbgMCU_CR=0x00000007
[17:06:28.170]    DbgMCU_APB1_Fz=0x00000000
[17:06:28.171]    DbgMCU_APB2_Fz=0x00000000
[17:06:28.171]    TraceClk_Pin=0x00040002
[17:06:28.171]    TraceD0_Pin=0x00040003
[17:06:28.171]    TraceD1_Pin=0x00040004
[17:06:28.171]    TraceD2_Pin=0x00040005
[17:06:28.171]    TraceD3_Pin=0x00040006
[17:06:28.172]  </debugvars>
[17:06:28.172]  
[17:06:28.172]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:06:28.172]    <block atomic="false" info="">
[17:06:28.172]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:06:28.172]        // -> [traceSWO <= 0x00000001]
[17:06:28.172]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:06:28.172]        // -> [traceTPIU <= 0x00000000]
[17:06:28.172]    </block>
[17:06:28.173]    <control if="traceSWO" while="" timeout="0" info="">
[17:06:28.173]      // if-block "traceSWO"
[17:06:28.173]        // =>  TRUE
[17:06:28.173]      <block atomic="false" info="">
[17:06:28.173]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:06:28.173]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:06:28.174]            <block atomic="false" info="">
[17:06:28.174]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:06:28.174]                // -> [dbgmcu_val <= 0x00000000]
[17:06:28.174]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:06:28.174]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:06:28.174]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:06:28.175]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.175]                // -> [dbgmcu_val <= 0x00000007]
[17:06:28.175]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:06:28.175]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:06:28.175]              Sequence("ConfigureTraceSWOPin");
[17:06:28.175]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:06:28.176]                  <block atomic="false" info="">
[17:06:28.176]                    __var pin     = 0;
[17:06:28.176]                      // -> [pin <= 0x00000000]
[17:06:28.176]                    __var port    = 0;
[17:06:28.176]                      // -> [port <= 0x00000000]
[17:06:28.176]                    __var portAdr = 0;
[17:06:28.176]                      // -> [portAdr <= 0x00000000]
[17:06:28.176]                    __var pos     = 0;
[17:06:28.176]                      // -> [pos <= 0x00000000]
[17:06:28.177]                    __var SWO_Pin = 0x00010003;          // PB3
[17:06:28.177]                      // -> [SWO_Pin <= 0x00010003]
[17:06:28.177]                  </block>
[17:06:28.177]                  <block atomic="false" info="configure SWO">
[17:06:28.177]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:06:28.177]                      // -> [pin <= 0x00000003]
[17:06:28.178]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:06:28.178]                      // -> [port <= 0x00000001]
[17:06:28.178]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:06:28.178]                      // -> [portAdr <= 0x40020400]
[17:06:28.178]                    pos = pin * 2;
[17:06:28.178]                      // -> [pos <= 0x00000006]
[17:06:28.178]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:06:28.179]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.179]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.179]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:06:28.180]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.180]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.180]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:06:28.181]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.181]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.181]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:06:28.182]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.182]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.182]                  </block>
[17:06:28.183]                  <control if="pin <  8" while="" timeout="0" info="">
[17:06:28.183]                    // if-block "pin <  8"
[17:06:28.183]                      // =>  TRUE
[17:06:28.183]                    <block atomic="false" info="">
[17:06:28.183]                      pos = ((pin    ) & 7) * 4;
[17:06:28.183]                        // -> [pos <= 0x0000000C]
[17:06:28.183]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:06:28.184]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.184]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.184]                    </block>
[17:06:28.184]                    // end if-block "pin <  8"
[17:06:28.185]                  </control>
[17:06:28.185]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:06:28.185]                    // if-block "pin >= 8"
[17:06:28.185]                      // =>  FALSE
[17:06:28.185]                    // skip if-block "pin >= 8"
[17:06:28.185]                  </control>
[17:06:28.185]                </sequence>
[17:06:28.185]            </block>
[17:06:28.186]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:06:28.186]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:06:28.186]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.186]            </block>
[17:06:28.186]          </sequence>
[17:06:28.187]      </block>
[17:06:28.187]      // end if-block "traceSWO"
[17:06:28.187]    </control>
[17:06:28.187]    <control if="traceTPIU" while="" timeout="0" info="">
[17:06:28.187]      // if-block "traceTPIU"
[17:06:28.187]        // =>  FALSE
[17:06:28.187]      // skip if-block "traceTPIU"
[17:06:28.187]    </control>
[17:06:28.187]  </sequence>
[17:06:28.188]  
[17:06:28.192]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:06:28.192]  
[17:06:28.192]  <debugvars>
[17:06:28.192]    // Pre-defined
[17:06:28.192]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:06:28.192]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:06:28.192]    __dp=0x00000000
[17:06:28.192]    __ap=0x00000000
[17:06:28.193]    __traceout=0x00000001      (SWO Trace)
[17:06:28.193]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:06:28.193]    __FlashAddr=0x00000000
[17:06:28.193]    __FlashLen=0x00000000
[17:06:28.193]    __FlashArg=0x00000000
[17:06:28.193]    __FlashOp=0x00000000
[17:06:28.193]    __Result=0x00000000
[17:06:28.193]    
[17:06:28.193]    // User-defined
[17:06:28.194]    DbgMCU_CR=0x00000007
[17:06:28.194]    DbgMCU_APB1_Fz=0x00000000
[17:06:28.194]    DbgMCU_APB2_Fz=0x00000000
[17:06:28.194]    TraceClk_Pin=0x00040002
[17:06:28.194]    TraceD0_Pin=0x00040003
[17:06:28.194]    TraceD1_Pin=0x00040004
[17:06:28.195]    TraceD2_Pin=0x00040005
[17:06:28.195]    TraceD3_Pin=0x00040006
[17:06:28.195]  </debugvars>
[17:06:28.195]  
[17:06:28.195]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:06:28.195]    <block atomic="false" info="">
[17:06:28.195]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:06:28.195]        // -> [traceSWO <= 0x00000001]
[17:06:28.196]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:06:28.196]        // -> [traceTPIU <= 0x00000000]
[17:06:28.196]    </block>
[17:06:28.196]    <control if="traceSWO" while="" timeout="0" info="">
[17:06:28.196]      // if-block "traceSWO"
[17:06:28.196]        // =>  TRUE
[17:06:28.196]      <block atomic="false" info="">
[17:06:28.197]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:06:28.197]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:06:28.197]            <block atomic="false" info="">
[17:06:28.197]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:06:28.197]                // -> [dbgmcu_val <= 0x00000000]
[17:06:28.197]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:06:28.197]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:06:28.197]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:06:28.198]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.198]                // -> [dbgmcu_val <= 0x00000007]
[17:06:28.198]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:06:28.198]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:06:28.199]              Sequence("ConfigureTraceSWOPin");
[17:06:28.199]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:06:28.199]                  <block atomic="false" info="">
[17:06:28.199]                    __var pin     = 0;
[17:06:28.199]                      // -> [pin <= 0x00000000]
[17:06:28.199]                    __var port    = 0;
[17:06:28.200]                      // -> [port <= 0x00000000]
[17:06:28.200]                    __var portAdr = 0;
[17:06:28.200]                      // -> [portAdr <= 0x00000000]
[17:06:28.200]                    __var pos     = 0;
[17:06:28.200]                      // -> [pos <= 0x00000000]
[17:06:28.200]                    __var SWO_Pin = 0x00010003;          // PB3
[17:06:28.200]                      // -> [SWO_Pin <= 0x00010003]
[17:06:28.200]                  </block>
[17:06:28.201]                  <block atomic="false" info="configure SWO">
[17:06:28.201]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:06:28.201]                      // -> [pin <= 0x00000003]
[17:06:28.201]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:06:28.201]                      // -> [port <= 0x00000001]
[17:06:28.201]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:06:28.201]                      // -> [portAdr <= 0x40020400]
[17:06:28.201]                    pos = pin * 2;
[17:06:28.201]                      // -> [pos <= 0x00000006]
[17:06:28.202]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:06:28.202]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.202]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.203]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:06:28.203]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.204]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.204]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:06:28.204]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.205]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.205]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:06:28.205]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.206]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.206]                  </block>
[17:06:28.206]                  <control if="pin <  8" while="" timeout="0" info="">
[17:06:28.206]                    // if-block "pin <  8"
[17:06:28.206]                      // =>  TRUE
[17:06:28.206]                    <block atomic="false" info="">
[17:06:28.206]                      pos = ((pin    ) & 7) * 4;
[17:06:28.206]                        // -> [pos <= 0x0000000C]
[17:06:28.207]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:06:28.207]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.208]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.208]                    </block>
[17:06:28.208]                    // end if-block "pin <  8"
[17:06:28.208]                  </control>
[17:06:28.208]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:06:28.208]                    // if-block "pin >= 8"
[17:06:28.208]                      // =>  FALSE
[17:06:28.208]                    // skip if-block "pin >= 8"
[17:06:28.209]                  </control>
[17:06:28.209]                </sequence>
[17:06:28.209]            </block>
[17:06:28.209]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:06:28.209]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:06:28.210]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.210]            </block>
[17:06:28.210]          </sequence>
[17:06:28.210]      </block>
[17:06:28.210]      // end if-block "traceSWO"
[17:06:28.210]    </control>
[17:06:28.210]    <control if="traceTPIU" while="" timeout="0" info="">
[17:06:28.211]      // if-block "traceTPIU"
[17:06:28.211]        // =>  FALSE
[17:06:28.211]      // skip if-block "traceTPIU"
[17:06:28.211]    </control>
[17:06:28.211]  </sequence>
[17:06:28.211]  
[17:06:28.417]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:06:28.417]  
[17:06:28.417]  <debugvars>
[17:06:28.418]    // Pre-defined
[17:06:28.418]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:06:28.418]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:06:28.418]    __dp=0x00000000
[17:06:28.418]    __ap=0x00000000
[17:06:28.418]    __traceout=0x00000001      (SWO Trace)
[17:06:28.418]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:06:28.418]    __FlashAddr=0x00000000
[17:06:28.418]    __FlashLen=0x00000000
[17:06:28.419]    __FlashArg=0x00000000
[17:06:28.419]    __FlashOp=0x00000000
[17:06:28.419]    __Result=0x00000000
[17:06:28.419]    
[17:06:28.419]    // User-defined
[17:06:28.419]    DbgMCU_CR=0x00000007
[17:06:28.419]    DbgMCU_APB1_Fz=0x00000000
[17:06:28.419]    DbgMCU_APB2_Fz=0x00000000
[17:06:28.420]    TraceClk_Pin=0x00040002
[17:06:28.420]    TraceD0_Pin=0x00040003
[17:06:28.420]    TraceD1_Pin=0x00040004
[17:06:28.420]    TraceD2_Pin=0x00040005
[17:06:28.420]    TraceD3_Pin=0x00040006
[17:06:28.420]  </debugvars>
[17:06:28.420]  
[17:06:28.420]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:06:28.420]    <block atomic="false" info="">
[17:06:28.421]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:06:28.421]        // -> [traceSWO <= 0x00000001]
[17:06:28.421]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:06:28.421]        // -> [traceTPIU <= 0x00000000]
[17:06:28.421]    </block>
[17:06:28.421]    <control if="traceSWO" while="" timeout="0" info="">
[17:06:28.421]      // if-block "traceSWO"
[17:06:28.422]        // =>  TRUE
[17:06:28.422]      <block atomic="false" info="">
[17:06:28.422]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:06:28.422]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:06:28.422]            <block atomic="false" info="">
[17:06:28.422]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:06:28.422]                // -> [dbgmcu_val <= 0x00000000]
[17:06:28.423]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:06:28.423]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:06:28.423]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:06:28.423]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.423]                // -> [dbgmcu_val <= 0x00000007]
[17:06:28.424]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:06:28.424]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:06:28.424]              Sequence("ConfigureTraceSWOPin");
[17:06:28.424]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:06:28.424]                  <block atomic="false" info="">
[17:06:28.424]                    __var pin     = 0;
[17:06:28.424]                      // -> [pin <= 0x00000000]
[17:06:28.424]                    __var port    = 0;
[17:06:28.424]                      // -> [port <= 0x00000000]
[17:06:28.425]                    __var portAdr = 0;
[17:06:28.425]                      // -> [portAdr <= 0x00000000]
[17:06:28.425]                    __var pos     = 0;
[17:06:28.425]                      // -> [pos <= 0x00000000]
[17:06:28.425]                    __var SWO_Pin = 0x00010003;          // PB3
[17:06:28.425]                      // -> [SWO_Pin <= 0x00010003]
[17:06:28.425]                  </block>
[17:06:28.426]                  <block atomic="false" info="configure SWO">
[17:06:28.426]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:06:28.426]                      // -> [pin <= 0x00000003]
[17:06:28.426]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:06:28.426]                      // -> [port <= 0x00000001]
[17:06:28.426]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:06:28.426]                      // -> [portAdr <= 0x40020400]
[17:06:28.427]                    pos = pin * 2;
[17:06:28.427]                      // -> [pos <= 0x00000006]
[17:06:28.427]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:06:28.427]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.428]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.428]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:06:28.428]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.429]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.429]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:06:28.429]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.430]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.430]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:06:28.430]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.431]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.431]                  </block>
[17:06:28.431]                  <control if="pin <  8" while="" timeout="0" info="">
[17:06:28.431]                    // if-block "pin <  8"
[17:06:28.431]                      // =>  TRUE
[17:06:28.431]                    <block atomic="false" info="">
[17:06:28.431]                      pos = ((pin    ) & 7) * 4;
[17:06:28.432]                        // -> [pos <= 0x0000000C]
[17:06:28.432]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:06:28.432]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.433]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.433]                    </block>
[17:06:28.433]                    // end if-block "pin <  8"
[17:06:28.433]                  </control>
[17:06:28.433]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:06:28.433]                    // if-block "pin >= 8"
[17:06:28.434]                      // =>  FALSE
[17:06:28.434]                    // skip if-block "pin >= 8"
[17:06:28.434]                  </control>
[17:06:28.434]                </sequence>
[17:06:28.434]            </block>
[17:06:28.434]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:06:28.434]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:06:28.435]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:06:28.435]            </block>
[17:06:28.435]          </sequence>
[17:06:28.435]      </block>
[17:06:28.435]      // end if-block "traceSWO"
[17:06:28.436]    </control>
[17:06:28.436]    <control if="traceTPIU" while="" timeout="0" info="">
[17:06:28.436]      // if-block "traceTPIU"
[17:06:28.436]        // =>  FALSE
[17:06:28.436]      // skip if-block "traceTPIU"
[17:06:28.436]    </control>
[17:06:28.436]  </sequence>
[17:06:28.436]  
[17:08:07.493]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:08:07.493]  
[17:08:07.493]  <debugvars>
[17:08:07.493]    // Pre-defined
[17:08:07.494]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:08:07.494]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:08:07.494]    __dp=0x00000000
[17:08:07.494]    __ap=0x00000000
[17:08:07.494]    __traceout=0x00000001      (SWO Trace)
[17:08:07.495]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:08:07.495]    __FlashAddr=0x00000000
[17:08:07.495]    __FlashLen=0x00000000
[17:08:07.495]    __FlashArg=0x00000000
[17:08:07.495]    __FlashOp=0x00000000
[17:08:07.496]    __Result=0x00000000
[17:08:07.496]    
[17:08:07.496]    // User-defined
[17:08:07.496]    DbgMCU_CR=0x00000007
[17:08:07.496]    DbgMCU_APB1_Fz=0x00000000
[17:08:07.496]    DbgMCU_APB2_Fz=0x00000000
[17:08:07.497]    TraceClk_Pin=0x00040002
[17:08:07.497]    TraceD0_Pin=0x00040003
[17:08:07.497]    TraceD1_Pin=0x00040004
[17:08:07.497]    TraceD2_Pin=0x00040005
[17:08:07.497]    TraceD3_Pin=0x00040006
[17:08:07.497]  </debugvars>
[17:08:07.498]  
[17:08:07.498]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:08:07.498]    <block atomic="false" info="">
[17:08:07.498]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:08:07.498]        // -> [traceSWO <= 0x00000001]
[17:08:07.499]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:08:07.499]        // -> [traceTPIU <= 0x00000000]
[17:08:07.499]    </block>
[17:08:07.499]    <control if="traceSWO" while="" timeout="0" info="">
[17:08:07.499]      // if-block "traceSWO"
[17:08:07.500]        // =>  TRUE
[17:08:07.500]      <block atomic="false" info="">
[17:08:07.500]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:08:07.500]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:08:07.500]            <block atomic="false" info="">
[17:08:07.500]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:08:07.501]                // -> [dbgmcu_val <= 0x00000000]
[17:08:07.501]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:08:07.501]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:08:07.501]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:08:07.502]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.502]                // -> [dbgmcu_val <= 0x00000007]
[17:08:07.502]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:08:07.502]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:08:07.502]              Sequence("ConfigureTraceSWOPin");
[17:08:07.503]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:08:07.503]                  <block atomic="false" info="">
[17:08:07.503]                    __var pin     = 0;
[17:08:07.503]                      // -> [pin <= 0x00000000]
[17:08:07.503]                    __var port    = 0;
[17:08:07.503]                      // -> [port <= 0x00000000]
[17:08:07.504]                    __var portAdr = 0;
[17:08:07.504]                      // -> [portAdr <= 0x00000000]
[17:08:07.504]                    __var pos     = 0;
[17:08:07.504]                      // -> [pos <= 0x00000000]
[17:08:07.504]                    __var SWO_Pin = 0x00010003;          // PB3
[17:08:07.504]                      // -> [SWO_Pin <= 0x00010003]
[17:08:07.505]                  </block>
[17:08:07.505]                  <block atomic="false" info="configure SWO">
[17:08:07.505]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:08:07.505]                      // -> [pin <= 0x00000003]
[17:08:07.505]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:08:07.506]                      // -> [port <= 0x00000001]
[17:08:07.506]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:08:07.506]                      // -> [portAdr <= 0x40020400]
[17:08:07.506]                    pos = pin * 2;
[17:08:07.506]                      // -> [pos <= 0x00000006]
[17:08:07.506]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:08:07.507]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.507]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.507]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:08:07.508]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.508]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.509]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:08:07.509]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.510]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.510]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:08:07.511]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.511]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.511]                  </block>
[17:08:07.512]                  <control if="pin <  8" while="" timeout="0" info="">
[17:08:07.512]                    // if-block "pin <  8"
[17:08:07.512]                      // =>  TRUE
[17:08:07.512]                    <block atomic="false" info="">
[17:08:07.512]                      pos = ((pin    ) & 7) * 4;
[17:08:07.513]                        // -> [pos <= 0x0000000C]
[17:08:07.513]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:08:07.513]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.514]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.514]                    </block>
[17:08:07.514]                    // end if-block "pin <  8"
[17:08:07.514]                  </control>
[17:08:07.515]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:08:07.515]                    // if-block "pin >= 8"
[17:08:07.515]                      // =>  FALSE
[17:08:07.515]                    // skip if-block "pin >= 8"
[17:08:07.515]                  </control>
[17:08:07.516]                </sequence>
[17:08:07.516]            </block>
[17:08:07.516]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:08:07.516]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:08:07.517]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:08:07.517]            </block>
[17:08:07.517]          </sequence>
[17:08:07.517]      </block>
[17:08:07.518]      // end if-block "traceSWO"
[17:08:07.518]    </control>
[17:08:07.518]    <control if="traceTPIU" while="" timeout="0" info="">
[17:08:07.518]      // if-block "traceTPIU"
[17:08:07.518]        // =>  FALSE
[17:08:07.518]      // skip if-block "traceTPIU"
[17:08:07.519]    </control>
[17:08:07.519]  </sequence>
[17:08:07.519]  
[17:36:53.740]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[17:36:53.740]  
[17:36:53.741]  <debugvars>
[17:36:53.741]    // Pre-defined
[17:36:53.741]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:36:53.741]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:36:53.741]    __dp=0x00000000
[17:36:53.741]    __ap=0x00000000
[17:36:53.742]    __traceout=0x00000001      (SWO Trace)
[17:36:53.742]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:36:53.742]    __FlashAddr=0x00000000
[17:36:53.742]    __FlashLen=0x00000000
[17:36:53.742]    __FlashArg=0x00000000
[17:36:53.742]    __FlashOp=0x00000000
[17:36:53.742]    __Result=0x00000000
[17:36:53.743]    
[17:36:53.743]    // User-defined
[17:36:53.743]    DbgMCU_CR=0x00000007
[17:36:53.743]    DbgMCU_APB1_Fz=0x00000000
[17:36:53.743]    DbgMCU_APB2_Fz=0x00000000
[17:36:53.743]    TraceClk_Pin=0x00040002
[17:36:53.743]    TraceD0_Pin=0x00040003
[17:36:53.743]    TraceD1_Pin=0x00040004
[17:36:53.744]    TraceD2_Pin=0x00040005
[17:36:53.744]    TraceD3_Pin=0x00040006
[17:36:53.744]  </debugvars>
[17:36:53.744]  
[17:36:53.744]  <sequence name="TraceStop" Pname="" disable="false" info="">
[17:36:53.744]    <block atomic="false" info="">
[17:36:53.744]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[17:36:53.744]        // -> [traceSWO <= 0x00000001]
[17:36:53.745]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[17:36:53.745]        // -> [traceTPIU <= 0x00000000]
[17:36:53.745]    </block>
[17:36:53.745]    <control if="traceSWO" while="" timeout="0" info="">
[17:36:53.745]      // if-block "traceSWO"
[17:36:53.745]        // =>  TRUE
[17:36:53.746]      <block atomic="false" info="">
[17:36:53.746]        Sequence("DisableTraceSWO");
[17:36:53.746]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[17:36:53.746]            <block atomic="false" info="">
[17:36:53.746]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:36:53.746]                // -> [dbgmcu_val <= 0x00000000]
[17:36:53.746]            </block>
[17:36:53.746]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[17:36:53.747]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[17:36:53.747]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:36:53.747]                // -> [dbgmcu_val <= 0x00000007]
[17:36:53.747]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[17:36:53.748]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:36:53.748]            </block>
[17:36:53.748]          </sequence>
[17:36:53.748]      </block>
[17:36:53.748]      // end if-block "traceSWO"
[17:36:53.748]    </control>
[17:36:53.748]    <control if="traceTPIU" while="" timeout="0" info="">
[17:36:53.749]      // if-block "traceTPIU"
[17:36:53.749]        // =>  FALSE
[17:36:53.749]      // skip if-block "traceTPIU"
[17:36:53.749]    </control>
[17:36:53.749]  </sequence>
[17:36:53.749]  
[17:43:44.794]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:43:44.794]  
[17:43:44.794]  <debugvars>
[17:43:44.794]    // Pre-defined
[17:43:44.794]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:43:44.795]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[17:43:44.795]    __dp=0x00000000
[17:43:44.795]    __ap=0x00000000
[17:43:44.795]    __traceout=0x00000001      (SWO Trace)
[17:43:44.795]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:43:44.796]    __FlashAddr=0x00000000
[17:43:44.796]    __FlashLen=0x00000000
[17:43:44.796]    __FlashArg=0x00000000
[17:43:44.796]    __FlashOp=0x00000000
[17:43:44.796]    __Result=0x00000000
[17:43:44.796]    
[17:43:44.796]    // User-defined
[17:43:44.797]    DbgMCU_CR=0x00000007
[17:43:44.797]    DbgMCU_APB1_Fz=0x00000000
[17:43:44.797]    DbgMCU_APB2_Fz=0x00000000
[17:43:44.797]    TraceClk_Pin=0x00040002
[17:43:44.797]    TraceD0_Pin=0x00040003
[17:43:44.797]    TraceD1_Pin=0x00040004
[17:43:44.798]    TraceD2_Pin=0x00040005
[17:43:44.798]    TraceD3_Pin=0x00040006
[17:43:44.798]  </debugvars>
[17:43:44.798]  
[17:43:44.798]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:43:44.799]    <block atomic="false" info="">
[17:43:44.799]      Sequence("CheckID");
[17:43:44.799]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:43:44.799]          <block atomic="false" info="">
[17:43:44.799]            __var pidr1 = 0;
[17:43:44.800]              // -> [pidr1 <= 0x00000000]
[17:43:44.800]            __var pidr2 = 0;
[17:43:44.800]              // -> [pidr2 <= 0x00000000]
[17:43:44.800]            __var jep106id = 0;
[17:43:44.800]              // -> [jep106id <= 0x00000000]
[17:43:44.800]            __var ROMTableBase = 0;
[17:43:44.801]              // -> [ROMTableBase <= 0x00000000]
[17:43:44.801]            __ap = 0;      // AHB-AP
[17:43:44.801]              // -> [__ap <= 0x00000000]
[17:43:44.801]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:43:44.801]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.802]              // -> [ROMTableBase <= 0xE00FD000]
[17:43:44.802]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:43:44.802]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.802]              // -> [pidr1 <= 0x00000004]
[17:43:44.803]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:43:44.803]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.803]              // -> [pidr2 <= 0x0000001A]
[17:43:44.803]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:43:44.804]              // -> [jep106id <= 0x00000020]
[17:43:44.804]          </block>
[17:43:44.804]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:43:44.804]            // if-block "jep106id != 0x20"
[17:43:44.804]              // =>  FALSE
[17:43:44.804]            // skip if-block "jep106id != 0x20"
[17:43:44.806]          </control>
[17:43:44.806]        </sequence>
[17:43:44.806]    </block>
[17:43:44.806]  </sequence>
[17:43:44.806]  
[17:43:44.821]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:43:44.821]  
[17:43:44.821]  <debugvars>
[17:43:44.822]    // Pre-defined
[17:43:44.822]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:43:44.822]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[17:43:44.822]    __dp=0x00000000
[17:43:44.822]    __ap=0x00000000
[17:43:44.822]    __traceout=0x00000001      (SWO Trace)
[17:43:44.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:43:44.822]    __FlashAddr=0x00000000
[17:43:44.823]    __FlashLen=0x00000000
[17:43:44.823]    __FlashArg=0x00000000
[17:43:44.823]    __FlashOp=0x00000000
[17:43:44.823]    __Result=0x00000000
[17:43:44.823]    
[17:43:44.823]    // User-defined
[17:43:44.823]    DbgMCU_CR=0x00000007
[17:43:44.824]    DbgMCU_APB1_Fz=0x00000000
[17:43:44.825]    DbgMCU_APB2_Fz=0x00000000
[17:43:44.825]    TraceClk_Pin=0x00040002
[17:43:44.825]    TraceD0_Pin=0x00040003
[17:43:44.825]    TraceD1_Pin=0x00040004
[17:43:44.825]    TraceD2_Pin=0x00040005
[17:43:44.825]    TraceD3_Pin=0x00040006
[17:43:44.825]  </debugvars>
[17:43:44.825]  
[17:43:44.825]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:43:44.825]    <block atomic="false" info="">
[17:43:44.825]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:43:44.826]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.826]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:43:44.827]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.827]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:43:44.827]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.827]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:43:44.828]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:43:44.828]    </block>
[17:43:44.828]  </sequence>
[17:43:44.828]  
[17:45:03.987]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:45:03.987]  
[17:45:03.987]  <debugvars>
[17:45:03.987]    // Pre-defined
[17:45:03.988]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:45:03.988]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:45:03.988]    __dp=0x00000000
[17:45:03.988]    __ap=0x00000000
[17:45:03.988]    __traceout=0x00000001      (SWO Trace)
[17:45:03.989]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:45:03.989]    __FlashAddr=0x00000000
[17:45:03.989]    __FlashLen=0x00000000
[17:45:03.989]    __FlashArg=0x00000000
[17:45:03.989]    __FlashOp=0x00000000
[17:45:03.990]    __Result=0x00000000
[17:45:03.990]    
[17:45:03.990]    // User-defined
[17:45:03.990]    DbgMCU_CR=0x00000007
[17:45:03.990]    DbgMCU_APB1_Fz=0x00000000
[17:45:03.990]    DbgMCU_APB2_Fz=0x00000000
[17:45:03.991]    TraceClk_Pin=0x00040002
[17:45:03.991]    TraceD0_Pin=0x00040003
[17:45:03.991]    TraceD1_Pin=0x00040004
[17:45:03.991]    TraceD2_Pin=0x00040005
[17:45:03.991]    TraceD3_Pin=0x00040006
[17:45:03.992]  </debugvars>
[17:45:03.992]  
[17:45:03.992]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:45:03.992]    <block atomic="false" info="">
[17:45:03.992]      Sequence("CheckID");
[17:45:03.993]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:45:03.993]          <block atomic="false" info="">
[17:45:03.993]            __var pidr1 = 0;
[17:45:03.993]              // -> [pidr1 <= 0x00000000]
[17:45:03.994]            __var pidr2 = 0;
[17:45:03.994]              // -> [pidr2 <= 0x00000000]
[17:45:03.994]            __var jep106id = 0;
[17:45:03.994]              // -> [jep106id <= 0x00000000]
[17:45:03.994]            __var ROMTableBase = 0;
[17:45:03.995]              // -> [ROMTableBase <= 0x00000000]
[17:45:03.995]            __ap = 0;      // AHB-AP
[17:45:03.995]              // -> [__ap <= 0x00000000]
[17:45:03.995]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:45:03.996]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:45:03.996]              // -> [ROMTableBase <= 0xE00FD000]
[17:45:03.996]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:45:03.997]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:45:03.997]              // -> [pidr1 <= 0x00000004]
[17:45:03.997]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:45:03.997]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:45:03.998]              // -> [pidr2 <= 0x0000001A]
[17:45:03.998]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:45:03.998]              // -> [jep106id <= 0x00000020]
[17:45:03.998]          </block>
[17:45:03.998]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:45:03.999]            // if-block "jep106id != 0x20"
[17:45:03.999]              // =>  FALSE
[17:45:03.999]            // skip if-block "jep106id != 0x20"
[17:45:03.999]          </control>
[17:45:03.999]        </sequence>
[17:45:03.999]    </block>
[17:45:04.000]  </sequence>
[17:45:04.000]  
[17:45:04.015]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:45:04.015]  
[17:45:04.015]  <debugvars>
[17:45:04.015]    // Pre-defined
[17:45:04.016]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:45:04.016]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:45:04.016]    __dp=0x00000000
[17:45:04.016]    __ap=0x00000000
[17:45:04.016]    __traceout=0x00000001      (SWO Trace)
[17:45:04.016]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:45:04.017]    __FlashAddr=0x00000000
[17:45:04.017]    __FlashLen=0x00000000
[17:45:04.017]    __FlashArg=0x00000000
[17:45:04.017]    __FlashOp=0x00000000
[17:45:04.017]    __Result=0x00000000
[17:45:04.017]    
[17:45:04.017]    // User-defined
[17:45:04.018]    DbgMCU_CR=0x00000007
[17:45:04.018]    DbgMCU_APB1_Fz=0x00000000
[17:45:04.018]    DbgMCU_APB2_Fz=0x00000000
[17:45:04.018]    TraceClk_Pin=0x00040002
[17:45:04.018]    TraceD0_Pin=0x00040003
[17:45:04.019]    TraceD1_Pin=0x00040004
[17:45:04.019]    TraceD2_Pin=0x00040005
[17:45:04.019]    TraceD3_Pin=0x00040006
[17:45:04.019]  </debugvars>
[17:45:04.019]  
[17:45:04.019]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:45:04.020]    <block atomic="false" info="">
[17:45:04.020]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:45:04.020]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.021]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:45:04.021]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.022]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:45:04.022]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.022]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:45:04.023]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.023]    </block>
[17:45:04.023]  </sequence>
[17:45:04.023]  
[17:45:04.039]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[17:45:04.039]  
[17:45:04.040]  <debugvars>
[17:45:04.040]    // Pre-defined
[17:45:04.040]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:45:04.040]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:45:04.040]    __dp=0x00000000
[17:45:04.040]    __ap=0x00000000
[17:45:04.041]    __traceout=0x00000001      (SWO Trace)
[17:45:04.041]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:45:04.041]    __FlashAddr=0x00000000
[17:45:04.041]    __FlashLen=0x00000000
[17:45:04.042]    __FlashArg=0x00000000
[17:45:04.042]    __FlashOp=0x00000000
[17:45:04.042]    __Result=0x00000000
[17:45:04.042]    
[17:45:04.042]    // User-defined
[17:45:04.042]    DbgMCU_CR=0x00000007
[17:45:04.043]    DbgMCU_APB1_Fz=0x00000000
[17:45:04.043]    DbgMCU_APB2_Fz=0x00000000
[17:45:04.043]    TraceClk_Pin=0x00040002
[17:45:04.043]    TraceD0_Pin=0x00040003
[17:45:04.043]    TraceD1_Pin=0x00040004
[17:45:04.043]    TraceD2_Pin=0x00040005
[17:45:04.044]    TraceD3_Pin=0x00040006
[17:45:04.044]  </debugvars>
[17:45:04.044]  
[17:45:04.044]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:45:04.044]    <block atomic="false" info="">
[17:45:04.045]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:45:04.045]        // -> [traceSWO <= 0x00000001]
[17:45:04.045]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:45:04.045]        // -> [traceTPIU <= 0x00000000]
[17:45:04.045]    </block>
[17:45:04.045]    <control if="traceSWO" while="" timeout="0" info="">
[17:45:04.046]      // if-block "traceSWO"
[17:45:04.046]        // =>  TRUE
[17:45:04.046]      <block atomic="false" info="">
[17:45:04.046]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:45:04.046]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:45:04.046]            <block atomic="false" info="">
[17:45:04.047]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:45:04.047]                // -> [dbgmcu_val <= 0x00000000]
[17:45:04.047]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:45:04.047]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:45:04.047]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:45:04.047]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.048]                // -> [dbgmcu_val <= 0x00000007]
[17:45:04.049]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:45:04.049]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:45:04.049]              Sequence("ConfigureTraceSWOPin");
[17:45:04.049]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:45:04.049]                  <block atomic="false" info="">
[17:45:04.049]                    __var pin     = 0;
[17:45:04.049]                      // -> [pin <= 0x00000000]
[17:45:04.049]                    __var port    = 0;
[17:45:04.050]                      // -> [port <= 0x00000000]
[17:45:04.050]                    __var portAdr = 0;
[17:45:04.050]                      // -> [portAdr <= 0x00000000]
[17:45:04.050]                    __var pos     = 0;
[17:45:04.050]                      // -> [pos <= 0x00000000]
[17:45:04.050]                    __var SWO_Pin = 0x00010003;          // PB3
[17:45:04.051]                      // -> [SWO_Pin <= 0x00010003]
[17:45:04.051]                  </block>
[17:45:04.051]                  <block atomic="false" info="configure SWO">
[17:45:04.051]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:45:04.051]                      // -> [pin <= 0x00000003]
[17:45:04.052]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:45:04.052]                      // -> [port <= 0x00000001]
[17:45:04.052]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:45:04.052]                      // -> [portAdr <= 0x40020400]
[17:45:04.052]                    pos = pin * 2;
[17:45:04.052]                      // -> [pos <= 0x00000006]
[17:45:04.053]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:45:04.053]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.054]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.054]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:45:04.055]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.055]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.055]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:45:04.056]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.057]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.057]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:45:04.057]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.058]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.058]                  </block>
[17:45:04.059]                  <control if="pin <  8" while="" timeout="0" info="">
[17:45:04.059]                    // if-block "pin <  8"
[17:45:04.059]                      // =>  TRUE
[17:45:04.059]                    <block atomic="false" info="">
[17:45:04.059]                      pos = ((pin    ) & 7) * 4;
[17:45:04.060]                        // -> [pos <= 0x0000000C]
[17:45:04.060]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:45:04.060]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.061]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.061]                    </block>
[17:45:04.061]                    // end if-block "pin <  8"
[17:45:04.062]                  </control>
[17:45:04.062]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:45:04.062]                    // if-block "pin >= 8"
[17:45:04.062]                      // =>  FALSE
[17:45:04.063]                    // skip if-block "pin >= 8"
[17:45:04.063]                  </control>
[17:45:04.063]                </sequence>
[17:45:04.063]            </block>
[17:45:04.063]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:45:04.063]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:45:04.064]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.064]            </block>
[17:45:04.064]          </sequence>
[17:45:04.065]      </block>
[17:45:04.065]      // end if-block "traceSWO"
[17:45:04.065]    </control>
[17:45:04.065]    <control if="traceTPIU" while="" timeout="0" info="">
[17:45:04.065]      // if-block "traceTPIU"
[17:45:04.066]        // =>  FALSE
[17:45:04.066]      // skip if-block "traceTPIU"
[17:45:04.066]    </control>
[17:45:04.066]  </sequence>
[17:45:04.067]  
[17:45:04.071]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:45:04.071]  
[17:45:04.071]  <debugvars>
[17:45:04.071]    // Pre-defined
[17:45:04.071]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:45:04.071]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:45:04.072]    __dp=0x00000000
[17:45:04.072]    __ap=0x00000000
[17:45:04.072]    __traceout=0x00000001      (SWO Trace)
[17:45:04.072]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:45:04.072]    __FlashAddr=0x00000000
[17:45:04.072]    __FlashLen=0x00000000
[17:45:04.073]    __FlashArg=0x00000000
[17:45:04.073]    __FlashOp=0x00000000
[17:45:04.073]    __Result=0x00000000
[17:45:04.073]    
[17:45:04.073]    // User-defined
[17:45:04.073]    DbgMCU_CR=0x00000007
[17:45:04.074]    DbgMCU_APB1_Fz=0x00000000
[17:45:04.074]    DbgMCU_APB2_Fz=0x00000000
[17:45:04.074]    TraceClk_Pin=0x00040002
[17:45:04.074]    TraceD0_Pin=0x00040003
[17:45:04.074]    TraceD1_Pin=0x00040004
[17:45:04.074]    TraceD2_Pin=0x00040005
[17:45:04.075]    TraceD3_Pin=0x00040006
[17:45:04.075]  </debugvars>
[17:45:04.075]  
[17:45:04.075]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:45:04.075]    <block atomic="false" info="">
[17:45:04.075]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:45:04.076]        // -> [traceSWO <= 0x00000001]
[17:45:04.076]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:45:04.076]        // -> [traceTPIU <= 0x00000000]
[17:45:04.076]    </block>
[17:45:04.076]    <control if="traceSWO" while="" timeout="0" info="">
[17:45:04.077]      // if-block "traceSWO"
[17:45:04.077]        // =>  TRUE
[17:45:04.077]      <block atomic="false" info="">
[17:45:04.077]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:45:04.077]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:45:04.078]            <block atomic="false" info="">
[17:45:04.078]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:45:04.078]                // -> [dbgmcu_val <= 0x00000000]
[17:45:04.078]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:45:04.078]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:45:04.078]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:45:04.079]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.079]                // -> [dbgmcu_val <= 0x00000007]
[17:45:04.079]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:45:04.079]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:45:04.080]              Sequence("ConfigureTraceSWOPin");
[17:45:04.080]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:45:04.080]                  <block atomic="false" info="">
[17:45:04.080]                    __var pin     = 0;
[17:45:04.081]                      // -> [pin <= 0x00000000]
[17:45:04.081]                    __var port    = 0;
[17:45:04.081]                      // -> [port <= 0x00000000]
[17:45:04.081]                    __var portAdr = 0;
[17:45:04.081]                      // -> [portAdr <= 0x00000000]
[17:45:04.081]                    __var pos     = 0;
[17:45:04.082]                      // -> [pos <= 0x00000000]
[17:45:04.082]                    __var SWO_Pin = 0x00010003;          // PB3
[17:45:04.082]                      // -> [SWO_Pin <= 0x00010003]
[17:45:04.082]                  </block>
[17:45:04.082]                  <block atomic="false" info="configure SWO">
[17:45:04.082]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:45:04.083]                      // -> [pin <= 0x00000003]
[17:45:04.083]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:45:04.083]                      // -> [port <= 0x00000001]
[17:45:04.083]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:45:04.083]                      // -> [portAdr <= 0x40020400]
[17:45:04.083]                    pos = pin * 2;
[17:45:04.084]                      // -> [pos <= 0x00000006]
[17:45:04.084]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:45:04.084]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.085]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.085]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:45:04.086]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.086]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.086]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:45:04.087]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.087]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.088]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:45:04.088]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.089]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.089]                  </block>
[17:45:04.089]                  <control if="pin <  8" while="" timeout="0" info="">
[17:45:04.089]                    // if-block "pin <  8"
[17:45:04.089]                      // =>  TRUE
[17:45:04.089]                    <block atomic="false" info="">
[17:45:04.090]                      pos = ((pin    ) & 7) * 4;
[17:45:04.090]                        // -> [pos <= 0x0000000C]
[17:45:04.090]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:45:04.090]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.091]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.091]                    </block>
[17:45:04.091]                    // end if-block "pin <  8"
[17:45:04.092]                  </control>
[17:45:04.092]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:45:04.092]                    // if-block "pin >= 8"
[17:45:04.092]                      // =>  FALSE
[17:45:04.092]                    // skip if-block "pin >= 8"
[17:45:04.093]                  </control>
[17:45:04.093]                </sequence>
[17:45:04.093]            </block>
[17:45:04.093]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:45:04.093]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:45:04.094]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.094]            </block>
[17:45:04.094]          </sequence>
[17:45:04.095]      </block>
[17:45:04.095]      // end if-block "traceSWO"
[17:45:04.095]    </control>
[17:45:04.095]    <control if="traceTPIU" while="" timeout="0" info="">
[17:45:04.095]      // if-block "traceTPIU"
[17:45:04.096]        // =>  FALSE
[17:45:04.096]      // skip if-block "traceTPIU"
[17:45:04.096]    </control>
[17:45:04.096]  </sequence>
[17:45:04.096]  
[17:45:04.318]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:45:04.318]  
[17:45:04.319]  <debugvars>
[17:45:04.319]    // Pre-defined
[17:45:04.319]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:45:04.319]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:45:04.319]    __dp=0x00000000
[17:45:04.320]    __ap=0x00000000
[17:45:04.320]    __traceout=0x00000001      (SWO Trace)
[17:45:04.320]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:45:04.320]    __FlashAddr=0x00000000
[17:45:04.320]    __FlashLen=0x00000000
[17:45:04.321]    __FlashArg=0x00000000
[17:45:04.321]    __FlashOp=0x00000000
[17:45:04.321]    __Result=0x00000000
[17:45:04.321]    
[17:45:04.321]    // User-defined
[17:45:04.322]    DbgMCU_CR=0x00000007
[17:45:04.322]    DbgMCU_APB1_Fz=0x00000000
[17:45:04.322]    DbgMCU_APB2_Fz=0x00000000
[17:45:04.322]    TraceClk_Pin=0x00040002
[17:45:04.322]    TraceD0_Pin=0x00040003
[17:45:04.322]    TraceD1_Pin=0x00040004
[17:45:04.323]    TraceD2_Pin=0x00040005
[17:45:04.323]    TraceD3_Pin=0x00040006
[17:45:04.323]  </debugvars>
[17:45:04.323]  
[17:45:04.323]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:45:04.324]    <block atomic="false" info="">
[17:45:04.324]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:45:04.324]        // -> [traceSWO <= 0x00000001]
[17:45:04.324]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:45:04.324]        // -> [traceTPIU <= 0x00000000]
[17:45:04.325]    </block>
[17:45:04.325]    <control if="traceSWO" while="" timeout="0" info="">
[17:45:04.325]      // if-block "traceSWO"
[17:45:04.325]        // =>  TRUE
[17:45:04.326]      <block atomic="false" info="">
[17:45:04.326]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:45:04.326]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:45:04.326]            <block atomic="false" info="">
[17:45:04.326]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:45:04.326]                // -> [dbgmcu_val <= 0x00000000]
[17:45:04.327]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:45:04.327]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:45:04.327]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:45:04.327]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.328]                // -> [dbgmcu_val <= 0x00000007]
[17:45:04.328]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:45:04.328]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:45:04.328]              Sequence("ConfigureTraceSWOPin");
[17:45:04.328]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:45:04.329]                  <block atomic="false" info="">
[17:45:04.329]                    __var pin     = 0;
[17:45:04.329]                      // -> [pin <= 0x00000000]
[17:45:04.329]                    __var port    = 0;
[17:45:04.329]                      // -> [port <= 0x00000000]
[17:45:04.330]                    __var portAdr = 0;
[17:45:04.330]                      // -> [portAdr <= 0x00000000]
[17:45:04.330]                    __var pos     = 0;
[17:45:04.330]                      // -> [pos <= 0x00000000]
[17:45:04.330]                    __var SWO_Pin = 0x00010003;          // PB3
[17:45:04.330]                      // -> [SWO_Pin <= 0x00010003]
[17:45:04.331]                  </block>
[17:45:04.331]                  <block atomic="false" info="configure SWO">
[17:45:04.331]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:45:04.331]                      // -> [pin <= 0x00000003]
[17:45:04.331]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:45:04.331]                      // -> [port <= 0x00000001]
[17:45:04.332]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:45:04.332]                      // -> [portAdr <= 0x40020400]
[17:45:04.332]                    pos = pin * 2;
[17:45:04.332]                      // -> [pos <= 0x00000006]
[17:45:04.332]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:45:04.333]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.333]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.334]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:45:04.334]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.335]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.335]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:45:04.335]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.336]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.336]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:45:04.337]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.337]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.337]                  </block>
[17:45:04.338]                  <control if="pin <  8" while="" timeout="0" info="">
[17:45:04.338]                    // if-block "pin <  8"
[17:45:04.338]                      // =>  TRUE
[17:45:04.338]                    <block atomic="false" info="">
[17:45:04.338]                      pos = ((pin    ) & 7) * 4;
[17:45:04.338]                        // -> [pos <= 0x0000000C]
[17:45:04.339]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:45:04.339]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.340]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.340]                    </block>
[17:45:04.340]                    // end if-block "pin <  8"
[17:45:04.341]                  </control>
[17:45:04.341]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:45:04.341]                    // if-block "pin >= 8"
[17:45:04.341]                      // =>  FALSE
[17:45:04.341]                    // skip if-block "pin >= 8"
[17:45:04.341]                  </control>
[17:45:04.342]                </sequence>
[17:45:04.342]            </block>
[17:45:04.342]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:45:04.342]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:45:04.343]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:04.343]            </block>
[17:45:04.343]          </sequence>
[17:45:04.343]      </block>
[17:45:04.344]      // end if-block "traceSWO"
[17:45:04.344]    </control>
[17:45:04.344]    <control if="traceTPIU" while="" timeout="0" info="">
[17:45:04.344]      // if-block "traceTPIU"
[17:45:04.344]        // =>  FALSE
[17:45:04.344]      // skip if-block "traceTPIU"
[17:45:04.344]    </control>
[17:45:04.345]  </sequence>
[17:45:04.345]  
[17:45:52.051]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:45:52.051]  
[17:45:52.051]  <debugvars>
[17:45:52.051]    // Pre-defined
[17:45:52.051]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:45:52.052]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:45:52.052]    __dp=0x00000000
[17:45:52.052]    __ap=0x00000000
[17:45:52.052]    __traceout=0x00000001      (SWO Trace)
[17:45:52.052]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:45:52.052]    __FlashAddr=0x00000000
[17:45:52.053]    __FlashLen=0x00000000
[17:45:52.053]    __FlashArg=0x00000000
[17:45:52.053]    __FlashOp=0x00000000
[17:45:52.053]    __Result=0x00000000
[17:45:52.053]    
[17:45:52.053]    // User-defined
[17:45:52.054]    DbgMCU_CR=0x00000007
[17:45:52.054]    DbgMCU_APB1_Fz=0x00000000
[17:45:52.054]    DbgMCU_APB2_Fz=0x00000000
[17:45:52.054]    TraceClk_Pin=0x00040002
[17:45:52.054]    TraceD0_Pin=0x00040003
[17:45:52.055]    TraceD1_Pin=0x00040004
[17:45:52.055]    TraceD2_Pin=0x00040005
[17:45:52.055]    TraceD3_Pin=0x00040006
[17:45:52.055]  </debugvars>
[17:45:52.055]  
[17:45:52.055]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:45:52.056]    <block atomic="false" info="">
[17:45:52.056]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:45:52.056]        // -> [traceSWO <= 0x00000001]
[17:45:52.056]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:45:52.057]        // -> [traceTPIU <= 0x00000000]
[17:45:52.057]    </block>
[17:45:52.057]    <control if="traceSWO" while="" timeout="0" info="">
[17:45:52.057]      // if-block "traceSWO"
[17:45:52.057]        // =>  TRUE
[17:45:52.057]      <block atomic="false" info="">
[17:45:52.058]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:45:52.058]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:45:52.058]            <block atomic="false" info="">
[17:45:52.058]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:45:52.058]                // -> [dbgmcu_val <= 0x00000000]
[17:45:52.058]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:45:52.058]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:45:52.059]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:45:52.059]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.059]                // -> [dbgmcu_val <= 0x00000007]
[17:45:52.059]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:45:52.060]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:45:52.060]              Sequence("ConfigureTraceSWOPin");
[17:45:52.060]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:45:52.060]                  <block atomic="false" info="">
[17:45:52.060]                    __var pin     = 0;
[17:45:52.061]                      // -> [pin <= 0x00000000]
[17:45:52.061]                    __var port    = 0;
[17:45:52.061]                      // -> [port <= 0x00000000]
[17:45:52.061]                    __var portAdr = 0;
[17:45:52.061]                      // -> [portAdr <= 0x00000000]
[17:45:52.061]                    __var pos     = 0;
[17:45:52.062]                      // -> [pos <= 0x00000000]
[17:45:52.062]                    __var SWO_Pin = 0x00010003;          // PB3
[17:45:52.062]                      // -> [SWO_Pin <= 0x00010003]
[17:45:52.062]                  </block>
[17:45:52.062]                  <block atomic="false" info="configure SWO">
[17:45:52.063]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:45:52.063]                      // -> [pin <= 0x00000003]
[17:45:52.063]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:45:52.063]                      // -> [port <= 0x00000001]
[17:45:52.063]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:45:52.063]                      // -> [portAdr <= 0x40020400]
[17:45:52.064]                    pos = pin * 2;
[17:45:52.064]                      // -> [pos <= 0x00000006]
[17:45:52.064]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:45:52.064]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.065]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.065]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:45:52.066]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.066]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.066]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:45:52.066]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.067]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.067]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:45:52.067]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.068]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.068]                  </block>
[17:45:52.068]                  <control if="pin <  8" while="" timeout="0" info="">
[17:45:52.068]                    // if-block "pin <  8"
[17:45:52.068]                      // =>  TRUE
[17:45:52.068]                    <block atomic="false" info="">
[17:45:52.069]                      pos = ((pin    ) & 7) * 4;
[17:45:52.069]                        // -> [pos <= 0x0000000C]
[17:45:52.069]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:45:52.070]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.070]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.070]                    </block>
[17:45:52.070]                    // end if-block "pin <  8"
[17:45:52.070]                  </control>
[17:45:52.071]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:45:52.071]                    // if-block "pin >= 8"
[17:45:52.071]                      // =>  FALSE
[17:45:52.071]                    // skip if-block "pin >= 8"
[17:45:52.071]                  </control>
[17:45:52.071]                </sequence>
[17:45:52.071]            </block>
[17:45:52.072]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:45:52.072]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:45:52.072]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:45:52.073]            </block>
[17:45:52.073]          </sequence>
[17:45:52.073]      </block>
[17:45:52.073]      // end if-block "traceSWO"
[17:45:52.073]    </control>
[17:45:52.074]    <control if="traceTPIU" while="" timeout="0" info="">
[17:45:52.074]      // if-block "traceTPIU"
[17:45:52.074]        // =>  FALSE
[17:45:52.074]      // skip if-block "traceTPIU"
[17:45:52.074]    </control>
[17:45:52.074]  </sequence>
[17:45:52.075]  
[17:46:04.374]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:46:04.374]  
[17:46:04.374]  <debugvars>
[17:46:04.375]    // Pre-defined
[17:46:04.375]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:46:04.375]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:46:04.375]    __dp=0x00000000
[17:46:04.375]    __ap=0x00000000
[17:46:04.376]    __traceout=0x00000001      (SWO Trace)
[17:46:04.376]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:46:04.376]    __FlashAddr=0x00000000
[17:46:04.376]    __FlashLen=0x00000000
[17:46:04.376]    __FlashArg=0x00000000
[17:46:04.377]    __FlashOp=0x00000000
[17:46:04.377]    __Result=0x00000000
[17:46:04.377]    
[17:46:04.377]    // User-defined
[17:46:04.377]    DbgMCU_CR=0x00000007
[17:46:04.377]    DbgMCU_APB1_Fz=0x00000000
[17:46:04.378]    DbgMCU_APB2_Fz=0x00000000
[17:46:04.378]    TraceClk_Pin=0x00040002
[17:46:04.378]    TraceD0_Pin=0x00040003
[17:46:04.378]    TraceD1_Pin=0x00040004
[17:46:04.378]    TraceD2_Pin=0x00040005
[17:46:04.378]    TraceD3_Pin=0x00040006
[17:46:04.379]  </debugvars>
[17:46:04.379]  
[17:46:04.379]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:46:04.379]    <block atomic="false" info="">
[17:46:04.379]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:46:04.380]        // -> [traceSWO <= 0x00000001]
[17:46:04.380]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:46:04.380]        // -> [traceTPIU <= 0x00000000]
[17:46:04.380]    </block>
[17:46:04.380]    <control if="traceSWO" while="" timeout="0" info="">
[17:46:04.380]      // if-block "traceSWO"
[17:46:04.381]        // =>  TRUE
[17:46:04.381]      <block atomic="false" info="">
[17:46:04.381]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:46:04.381]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:46:04.381]            <block atomic="false" info="">
[17:46:04.381]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:46:04.382]                // -> [dbgmcu_val <= 0x00000000]
[17:46:04.382]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:46:04.382]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:46:04.382]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:46:04.383]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.383]                // -> [dbgmcu_val <= 0x00000007]
[17:46:04.383]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:46:04.383]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:46:04.383]              Sequence("ConfigureTraceSWOPin");
[17:46:04.383]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:46:04.383]                  <block atomic="false" info="">
[17:46:04.384]                    __var pin     = 0;
[17:46:04.384]                      // -> [pin <= 0x00000000]
[17:46:04.384]                    __var port    = 0;
[17:46:04.384]                      // -> [port <= 0x00000000]
[17:46:04.384]                    __var portAdr = 0;
[17:46:04.384]                      // -> [portAdr <= 0x00000000]
[17:46:04.385]                    __var pos     = 0;
[17:46:04.385]                      // -> [pos <= 0x00000000]
[17:46:04.385]                    __var SWO_Pin = 0x00010003;          // PB3
[17:46:04.385]                      // -> [SWO_Pin <= 0x00010003]
[17:46:04.385]                  </block>
[17:46:04.385]                  <block atomic="false" info="configure SWO">
[17:46:04.386]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:46:04.386]                      // -> [pin <= 0x00000003]
[17:46:04.386]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:46:04.386]                      // -> [port <= 0x00000001]
[17:46:04.386]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:46:04.386]                      // -> [portAdr <= 0x40020400]
[17:46:04.386]                    pos = pin * 2;
[17:46:04.387]                      // -> [pos <= 0x00000006]
[17:46:04.387]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:46:04.387]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.388]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.388]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:46:04.389]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.389]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.389]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:46:04.390]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.390]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.390]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:46:04.391]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.392]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.392]                  </block>
[17:46:04.392]                  <control if="pin <  8" while="" timeout="0" info="">
[17:46:04.392]                    // if-block "pin <  8"
[17:46:04.392]                      // =>  TRUE
[17:46:04.393]                    <block atomic="false" info="">
[17:46:04.393]                      pos = ((pin    ) & 7) * 4;
[17:46:04.393]                        // -> [pos <= 0x0000000C]
[17:46:04.393]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:46:04.394]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.394]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.394]                    </block>
[17:46:04.395]                    // end if-block "pin <  8"
[17:46:04.395]                  </control>
[17:46:04.396]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:46:04.396]                    // if-block "pin >= 8"
[17:46:04.396]                      // =>  FALSE
[17:46:04.396]                    // skip if-block "pin >= 8"
[17:46:04.396]                  </control>
[17:46:04.396]                </sequence>
[17:46:04.396]            </block>
[17:46:04.396]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:46:04.396]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:46:04.397]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:46:04.397]            </block>
[17:46:04.397]          </sequence>
[17:46:04.397]      </block>
[17:46:04.397]      // end if-block "traceSWO"
[17:46:04.397]    </control>
[17:46:04.398]    <control if="traceTPIU" while="" timeout="0" info="">
[17:46:04.398]      // if-block "traceTPIU"
[17:46:04.398]        // =>  FALSE
[17:46:04.398]      // skip if-block "traceTPIU"
[17:46:04.398]    </control>
[17:46:04.398]  </sequence>
[17:46:04.398]  
[17:47:53.966]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[17:47:53.966]  
[17:47:53.966]  <debugvars>
[17:47:53.967]    // Pre-defined
[17:47:53.967]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:47:53.967]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:47:53.968]    __dp=0x00000000
[17:47:53.968]    __ap=0x00000000
[17:47:53.968]    __traceout=0x00000001      (SWO Trace)
[17:47:53.968]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:47:53.969]    __FlashAddr=0x00000000
[17:47:53.969]    __FlashLen=0x00000000
[17:47:53.969]    __FlashArg=0x00000000
[17:47:53.969]    __FlashOp=0x00000000
[17:47:53.969]    __Result=0x00000000
[17:47:53.970]    
[17:47:53.970]    // User-defined
[17:47:53.970]    DbgMCU_CR=0x00000007
[17:47:53.970]    DbgMCU_APB1_Fz=0x00000000
[17:47:53.970]    DbgMCU_APB2_Fz=0x00000000
[17:47:53.970]    TraceClk_Pin=0x00040002
[17:47:53.971]    TraceD0_Pin=0x00040003
[17:47:53.971]    TraceD1_Pin=0x00040004
[17:47:53.971]    TraceD2_Pin=0x00040005
[17:47:53.971]    TraceD3_Pin=0x00040006
[17:47:53.971]  </debugvars>
[17:47:53.972]  
[17:47:53.972]  <sequence name="TraceStop" Pname="" disable="false" info="">
[17:47:53.972]    <block atomic="false" info="">
[17:47:53.972]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[17:47:53.972]        // -> [traceSWO <= 0x00000001]
[17:47:53.972]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[17:47:53.973]        // -> [traceTPIU <= 0x00000000]
[17:47:53.973]    </block>
[17:47:53.973]    <control if="traceSWO" while="" timeout="0" info="">
[17:47:53.973]      // if-block "traceSWO"
[17:47:53.974]        // =>  TRUE
[17:47:53.974]      <block atomic="false" info="">
[17:47:53.975]        Sequence("DisableTraceSWO");
[17:47:53.975]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[17:47:53.975]            <block atomic="false" info="">
[17:47:53.975]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:47:53.975]                // -> [dbgmcu_val <= 0x00000000]
[17:47:53.975]            </block>
[17:47:53.975]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[17:47:53.975]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[17:47:53.976]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:47:53.976]                // -> [dbgmcu_val <= 0x00000007]
[17:47:53.976]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[17:47:53.977]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:47:53.977]            </block>
[17:47:53.977]          </sequence>
[17:47:53.977]      </block>
[17:47:53.977]      // end if-block "traceSWO"
[17:47:53.977]    </control>
[17:47:53.977]    <control if="traceTPIU" while="" timeout="0" info="">
[17:47:53.978]      // if-block "traceTPIU"
[17:47:53.978]        // =>  FALSE
[17:47:53.978]      // skip if-block "traceTPIU"
[17:47:53.978]    </control>
[17:47:53.978]  </sequence>
[17:47:53.978]  
[17:48:02.233]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:48:02.233]  
[17:48:02.233]  <debugvars>
[17:48:02.233]    // Pre-defined
[17:48:02.233]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:02.233]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[17:48:02.234]    __dp=0x00000000
[17:48:02.234]    __ap=0x00000000
[17:48:02.234]    __traceout=0x00000001      (SWO Trace)
[17:48:02.234]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:02.234]    __FlashAddr=0x00000000
[17:48:02.235]    __FlashLen=0x00000000
[17:48:02.235]    __FlashArg=0x00000000
[17:48:02.235]    __FlashOp=0x00000000
[17:48:02.235]    __Result=0x00000000
[17:48:02.236]    
[17:48:02.236]    // User-defined
[17:48:02.236]    DbgMCU_CR=0x00000007
[17:48:02.236]    DbgMCU_APB1_Fz=0x00000000
[17:48:02.236]    DbgMCU_APB2_Fz=0x00000000
[17:48:02.236]    TraceClk_Pin=0x00040002
[17:48:02.236]    TraceD0_Pin=0x00040003
[17:48:02.237]    TraceD1_Pin=0x00040004
[17:48:02.237]    TraceD2_Pin=0x00040005
[17:48:02.237]    TraceD3_Pin=0x00040006
[17:48:02.237]  </debugvars>
[17:48:02.237]  
[17:48:02.238]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:48:02.238]    <block atomic="false" info="">
[17:48:02.238]      Sequence("CheckID");
[17:48:02.238]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:48:02.238]          <block atomic="false" info="">
[17:48:02.239]            __var pidr1 = 0;
[17:48:02.239]              // -> [pidr1 <= 0x00000000]
[17:48:02.239]            __var pidr2 = 0;
[17:48:02.239]              // -> [pidr2 <= 0x00000000]
[17:48:02.239]            __var jep106id = 0;
[17:48:02.240]              // -> [jep106id <= 0x00000000]
[17:48:02.240]            __var ROMTableBase = 0;
[17:48:02.240]              // -> [ROMTableBase <= 0x00000000]
[17:48:02.240]            __ap = 0;      // AHB-AP
[17:48:02.240]              // -> [__ap <= 0x00000000]
[17:48:02.240]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:48:02.241]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.241]              // -> [ROMTableBase <= 0xE00FD000]
[17:48:02.241]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:48:02.242]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.242]              // -> [pidr1 <= 0x00000004]
[17:48:02.242]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:48:02.243]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.243]              // -> [pidr2 <= 0x0000001A]
[17:48:02.243]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:48:02.243]              // -> [jep106id <= 0x00000020]
[17:48:02.243]          </block>
[17:48:02.243]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:48:02.244]            // if-block "jep106id != 0x20"
[17:48:02.244]              // =>  FALSE
[17:48:02.244]            // skip if-block "jep106id != 0x20"
[17:48:02.244]          </control>
[17:48:02.244]        </sequence>
[17:48:02.245]    </block>
[17:48:02.245]  </sequence>
[17:48:02.245]  
[17:48:02.260]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:48:02.260]  
[17:48:02.260]  <debugvars>
[17:48:02.260]    // Pre-defined
[17:48:02.260]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:02.260]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[17:48:02.260]    __dp=0x00000000
[17:48:02.261]    __ap=0x00000000
[17:48:02.261]    __traceout=0x00000001      (SWO Trace)
[17:48:02.261]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:02.261]    __FlashAddr=0x00000000
[17:48:02.262]    __FlashLen=0x00000000
[17:48:02.262]    __FlashArg=0x00000000
[17:48:02.262]    __FlashOp=0x00000000
[17:48:02.262]    __Result=0x00000000
[17:48:02.262]    
[17:48:02.262]    // User-defined
[17:48:02.263]    DbgMCU_CR=0x00000007
[17:48:02.263]    DbgMCU_APB1_Fz=0x00000000
[17:48:02.263]    DbgMCU_APB2_Fz=0x00000000
[17:48:02.263]    TraceClk_Pin=0x00040002
[17:48:02.263]    TraceD0_Pin=0x00040003
[17:48:02.264]    TraceD1_Pin=0x00040004
[17:48:02.264]    TraceD2_Pin=0x00040005
[17:48:02.264]    TraceD3_Pin=0x00040006
[17:48:02.264]  </debugvars>
[17:48:02.264]  
[17:48:02.264]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:48:02.265]    <block atomic="false" info="">
[17:48:02.265]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:48:02.265]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.266]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:48:02.266]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.266]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:48:02.267]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.267]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:48:02.268]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:02.268]    </block>
[17:48:02.268]  </sequence>
[17:48:02.268]  
[17:48:33.120]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[17:48:33.120]  
[17:48:33.120]  <debugvars>
[17:48:33.120]    // Pre-defined
[17:48:33.121]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:33.121]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:48:33.121]    __dp=0x00000000
[17:48:33.121]    __ap=0x00000000
[17:48:33.121]    __traceout=0x00000001      (SWO Trace)
[17:48:33.121]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:33.121]    __FlashAddr=0x00000000
[17:48:33.121]    __FlashLen=0x00000000
[17:48:33.121]    __FlashArg=0x00000000
[17:48:33.122]    __FlashOp=0x00000000
[17:48:33.122]    __Result=0x00000000
[17:48:33.122]    
[17:48:33.122]    // User-defined
[17:48:33.122]    DbgMCU_CR=0x00000007
[17:48:33.122]    DbgMCU_APB1_Fz=0x00000000
[17:48:33.122]    DbgMCU_APB2_Fz=0x00000000
[17:48:33.122]    TraceClk_Pin=0x00040002
[17:48:33.122]    TraceD0_Pin=0x00040003
[17:48:33.123]    TraceD1_Pin=0x00040004
[17:48:33.123]    TraceD2_Pin=0x00040005
[17:48:33.123]    TraceD3_Pin=0x00040006
[17:48:33.123]  </debugvars>
[17:48:33.123]  
[17:48:33.123]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[17:48:33.123]    <block atomic="false" info="">
[17:48:33.123]      Sequence("CheckID");
[17:48:33.124]        <sequence name="CheckID" Pname="" disable="false" info="">
[17:48:33.124]          <block atomic="false" info="">
[17:48:33.124]            __var pidr1 = 0;
[17:48:33.124]              // -> [pidr1 <= 0x00000000]
[17:48:33.124]            __var pidr2 = 0;
[17:48:33.124]              // -> [pidr2 <= 0x00000000]
[17:48:33.124]            __var jep106id = 0;
[17:48:33.124]              // -> [jep106id <= 0x00000000]
[17:48:33.124]            __var ROMTableBase = 0;
[17:48:33.125]              // -> [ROMTableBase <= 0x00000000]
[17:48:33.125]            __ap = 0;      // AHB-AP
[17:48:33.125]              // -> [__ap <= 0x00000000]
[17:48:33.125]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[17:48:33.125]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.125]              // -> [ROMTableBase <= 0xE00FD000]
[17:48:33.125]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[17:48:33.126]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.126]              // -> [pidr1 <= 0x00000004]
[17:48:33.126]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[17:48:33.127]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.127]              // -> [pidr2 <= 0x0000001A]
[17:48:33.127]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[17:48:33.127]              // -> [jep106id <= 0x00000020]
[17:48:33.127]          </block>
[17:48:33.127]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[17:48:33.127]            // if-block "jep106id != 0x20"
[17:48:33.127]              // =>  FALSE
[17:48:33.127]            // skip if-block "jep106id != 0x20"
[17:48:33.128]          </control>
[17:48:33.128]        </sequence>
[17:48:33.128]    </block>
[17:48:33.128]  </sequence>
[17:48:33.128]  
[17:48:33.142]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[17:48:33.142]  
[17:48:33.143]  <debugvars>
[17:48:33.143]    // Pre-defined
[17:48:33.143]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:33.143]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:48:33.143]    __dp=0x00000000
[17:48:33.143]    __ap=0x00000000
[17:48:33.143]    __traceout=0x00000001      (SWO Trace)
[17:48:33.143]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:33.144]    __FlashAddr=0x00000000
[17:48:33.144]    __FlashLen=0x00000000
[17:48:33.144]    __FlashArg=0x00000000
[17:48:33.144]    __FlashOp=0x00000000
[17:48:33.144]    __Result=0x00000000
[17:48:33.144]    
[17:48:33.144]    // User-defined
[17:48:33.144]    DbgMCU_CR=0x00000007
[17:48:33.144]    DbgMCU_APB1_Fz=0x00000000
[17:48:33.144]    DbgMCU_APB2_Fz=0x00000000
[17:48:33.145]    TraceClk_Pin=0x00040002
[17:48:33.145]    TraceD0_Pin=0x00040003
[17:48:33.145]    TraceD1_Pin=0x00040004
[17:48:33.145]    TraceD2_Pin=0x00040005
[17:48:33.145]    TraceD3_Pin=0x00040006
[17:48:33.145]  </debugvars>
[17:48:33.145]  
[17:48:33.145]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[17:48:33.145]    <block atomic="false" info="">
[17:48:33.146]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[17:48:33.146]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.146]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[17:48:33.147]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.147]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[17:48:33.147]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.148]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[17:48:33.148]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.148]    </block>
[17:48:33.148]  </sequence>
[17:48:33.148]  
[17:48:33.164]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[17:48:33.164]  
[17:48:33.164]  <debugvars>
[17:48:33.165]    // Pre-defined
[17:48:33.165]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:33.165]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:48:33.165]    __dp=0x00000000
[17:48:33.165]    __ap=0x00000000
[17:48:33.165]    __traceout=0x00000001      (SWO Trace)
[17:48:33.165]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:33.166]    __FlashAddr=0x00000000
[17:48:33.166]    __FlashLen=0x00000000
[17:48:33.166]    __FlashArg=0x00000000
[17:48:33.166]    __FlashOp=0x00000000
[17:48:33.166]    __Result=0x00000000
[17:48:33.166]    
[17:48:33.166]    // User-defined
[17:48:33.166]    DbgMCU_CR=0x00000007
[17:48:33.166]    DbgMCU_APB1_Fz=0x00000000
[17:48:33.166]    DbgMCU_APB2_Fz=0x00000000
[17:48:33.167]    TraceClk_Pin=0x00040002
[17:48:33.167]    TraceD0_Pin=0x00040003
[17:48:33.167]    TraceD1_Pin=0x00040004
[17:48:33.167]    TraceD2_Pin=0x00040005
[17:48:33.167]    TraceD3_Pin=0x00040006
[17:48:33.167]  </debugvars>
[17:48:33.167]  
[17:48:33.167]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:48:33.168]    <block atomic="false" info="">
[17:48:33.168]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:48:33.168]        // -> [traceSWO <= 0x00000001]
[17:48:33.168]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:48:33.168]        // -> [traceTPIU <= 0x00000000]
[17:48:33.168]    </block>
[17:48:33.168]    <control if="traceSWO" while="" timeout="0" info="">
[17:48:33.168]      // if-block "traceSWO"
[17:48:33.168]        // =>  TRUE
[17:48:33.169]      <block atomic="false" info="">
[17:48:33.169]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:48:33.169]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:48:33.169]            <block atomic="false" info="">
[17:48:33.169]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:48:33.169]                // -> [dbgmcu_val <= 0x00000000]
[17:48:33.169]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:48:33.169]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:48:33.170]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:48:33.170]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.170]                // -> [dbgmcu_val <= 0x00000007]
[17:48:33.170]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:48:33.170]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:48:33.170]              Sequence("ConfigureTraceSWOPin");
[17:48:33.171]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:48:33.171]                  <block atomic="false" info="">
[17:48:33.171]                    __var pin     = 0;
[17:48:33.171]                      // -> [pin <= 0x00000000]
[17:48:33.171]                    __var port    = 0;
[17:48:33.171]                      // -> [port <= 0x00000000]
[17:48:33.171]                    __var portAdr = 0;
[17:48:33.171]                      // -> [portAdr <= 0x00000000]
[17:48:33.171]                    __var pos     = 0;
[17:48:33.172]                      // -> [pos <= 0x00000000]
[17:48:33.172]                    __var SWO_Pin = 0x00010003;          // PB3
[17:48:33.172]                      // -> [SWO_Pin <= 0x00010003]
[17:48:33.172]                  </block>
[17:48:33.172]                  <block atomic="false" info="configure SWO">
[17:48:33.172]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:48:33.172]                      // -> [pin <= 0x00000003]
[17:48:33.172]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:48:33.172]                      // -> [port <= 0x00000001]
[17:48:33.173]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:48:33.173]                      // -> [portAdr <= 0x40020400]
[17:48:33.173]                    pos = pin * 2;
[17:48:33.173]                      // -> [pos <= 0x00000006]
[17:48:33.173]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:48:33.174]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.174]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.174]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:48:33.175]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.175]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.175]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:48:33.175]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.176]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.176]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:48:33.176]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.177]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.177]                  </block>
[17:48:33.177]                  <control if="pin <  8" while="" timeout="0" info="">
[17:48:33.177]                    // if-block "pin <  8"
[17:48:33.177]                      // =>  TRUE
[17:48:33.177]                    <block atomic="false" info="">
[17:48:33.177]                      pos = ((pin    ) & 7) * 4;
[17:48:33.178]                        // -> [pos <= 0x0000000C]
[17:48:33.178]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:48:33.178]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.179]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.179]                    </block>
[17:48:33.179]                    // end if-block "pin <  8"
[17:48:33.179]                  </control>
[17:48:33.179]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:48:33.179]                    // if-block "pin >= 8"
[17:48:33.179]                      // =>  FALSE
[17:48:33.179]                    // skip if-block "pin >= 8"
[17:48:33.179]                  </control>
[17:48:33.180]                </sequence>
[17:48:33.180]            </block>
[17:48:33.180]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:48:33.180]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:48:33.180]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.180]            </block>
[17:48:33.180]          </sequence>
[17:48:33.181]      </block>
[17:48:33.181]      // end if-block "traceSWO"
[17:48:33.181]    </control>
[17:48:33.181]    <control if="traceTPIU" while="" timeout="0" info="">
[17:48:33.181]      // if-block "traceTPIU"
[17:48:33.181]        // =>  FALSE
[17:48:33.181]      // skip if-block "traceTPIU"
[17:48:33.181]    </control>
[17:48:33.182]  </sequence>
[17:48:33.182]  
[17:48:33.186]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:48:33.186]  
[17:48:33.186]  <debugvars>
[17:48:33.186]    // Pre-defined
[17:48:33.186]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:33.186]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:48:33.186]    __dp=0x00000000
[17:48:33.186]    __ap=0x00000000
[17:48:33.187]    __traceout=0x00000001      (SWO Trace)
[17:48:33.187]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:33.187]    __FlashAddr=0x00000000
[17:48:33.187]    __FlashLen=0x00000000
[17:48:33.187]    __FlashArg=0x00000000
[17:48:33.187]    __FlashOp=0x00000000
[17:48:33.187]    __Result=0x00000000
[17:48:33.187]    
[17:48:33.187]    // User-defined
[17:48:33.187]    DbgMCU_CR=0x00000007
[17:48:33.188]    DbgMCU_APB1_Fz=0x00000000
[17:48:33.188]    DbgMCU_APB2_Fz=0x00000000
[17:48:33.188]    TraceClk_Pin=0x00040002
[17:48:33.188]    TraceD0_Pin=0x00040003
[17:48:33.188]    TraceD1_Pin=0x00040004
[17:48:33.188]    TraceD2_Pin=0x00040005
[17:48:33.188]    TraceD3_Pin=0x00040006
[17:48:33.188]  </debugvars>
[17:48:33.188]  
[17:48:33.189]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:48:33.189]    <block atomic="false" info="">
[17:48:33.189]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:48:33.189]        // -> [traceSWO <= 0x00000001]
[17:48:33.189]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:48:33.189]        // -> [traceTPIU <= 0x00000000]
[17:48:33.189]    </block>
[17:48:33.189]    <control if="traceSWO" while="" timeout="0" info="">
[17:48:33.189]      // if-block "traceSWO"
[17:48:33.189]        // =>  TRUE
[17:48:33.189]      <block atomic="false" info="">
[17:48:33.190]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:48:33.190]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:48:33.190]            <block atomic="false" info="">
[17:48:33.190]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:48:33.190]                // -> [dbgmcu_val <= 0x00000000]
[17:48:33.190]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:48:33.190]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:48:33.190]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:48:33.191]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.191]                // -> [dbgmcu_val <= 0x00000007]
[17:48:33.191]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:48:33.191]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:48:33.191]              Sequence("ConfigureTraceSWOPin");
[17:48:33.191]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:48:33.191]                  <block atomic="false" info="">
[17:48:33.192]                    __var pin     = 0;
[17:48:33.192]                      // -> [pin <= 0x00000000]
[17:48:33.192]                    __var port    = 0;
[17:48:33.192]                      // -> [port <= 0x00000000]
[17:48:33.192]                    __var portAdr = 0;
[17:48:33.192]                      // -> [portAdr <= 0x00000000]
[17:48:33.192]                    __var pos     = 0;
[17:48:33.192]                      // -> [pos <= 0x00000000]
[17:48:33.192]                    __var SWO_Pin = 0x00010003;          // PB3
[17:48:33.193]                      // -> [SWO_Pin <= 0x00010003]
[17:48:33.193]                  </block>
[17:48:33.193]                  <block atomic="false" info="configure SWO">
[17:48:33.193]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:48:33.193]                      // -> [pin <= 0x00000003]
[17:48:33.193]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:48:33.193]                      // -> [port <= 0x00000001]
[17:48:33.193]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:48:33.193]                      // -> [portAdr <= 0x40020400]
[17:48:33.194]                    pos = pin * 2;
[17:48:33.194]                      // -> [pos <= 0x00000006]
[17:48:33.194]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:48:33.194]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.195]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.195]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:48:33.195]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.196]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.196]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:48:33.196]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.197]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.197]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:48:33.197]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.198]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.198]                  </block>
[17:48:33.198]                  <control if="pin <  8" while="" timeout="0" info="">
[17:48:33.198]                    // if-block "pin <  8"
[17:48:33.198]                      // =>  TRUE
[17:48:33.198]                    <block atomic="false" info="">
[17:48:33.198]                      pos = ((pin    ) & 7) * 4;
[17:48:33.198]                        // -> [pos <= 0x0000000C]
[17:48:33.199]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:48:33.199]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.199]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.200]                    </block>
[17:48:33.200]                    // end if-block "pin <  8"
[17:48:33.200]                  </control>
[17:48:33.200]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:48:33.200]                    // if-block "pin >= 8"
[17:48:33.200]                      // =>  FALSE
[17:48:33.200]                    // skip if-block "pin >= 8"
[17:48:33.200]                  </control>
[17:48:33.201]                </sequence>
[17:48:33.201]            </block>
[17:48:33.201]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:48:33.201]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:48:33.201]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.201]            </block>
[17:48:33.201]          </sequence>
[17:48:33.202]      </block>
[17:48:33.202]      // end if-block "traceSWO"
[17:48:33.202]    </control>
[17:48:33.202]    <control if="traceTPIU" while="" timeout="0" info="">
[17:48:33.202]      // if-block "traceTPIU"
[17:48:33.202]        // =>  FALSE
[17:48:33.202]      // skip if-block "traceTPIU"
[17:48:33.202]    </control>
[17:48:33.203]  </sequence>
[17:48:33.203]  
[17:48:33.408]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[17:48:33.408]  
[17:48:33.409]  <debugvars>
[17:48:33.409]    // Pre-defined
[17:48:33.409]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:33.409]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:48:33.409]    __dp=0x00000000
[17:48:33.409]    __ap=0x00000000
[17:48:33.409]    __traceout=0x00000001      (SWO Trace)
[17:48:33.409]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:33.410]    __FlashAddr=0x00000000
[17:48:33.410]    __FlashLen=0x00000000
[17:48:33.410]    __FlashArg=0x00000000
[17:48:33.410]    __FlashOp=0x00000000
[17:48:33.410]    __Result=0x00000000
[17:48:33.410]    
[17:48:33.410]    // User-defined
[17:48:33.410]    DbgMCU_CR=0x00000007
[17:48:33.410]    DbgMCU_APB1_Fz=0x00000000
[17:48:33.411]    DbgMCU_APB2_Fz=0x00000000
[17:48:33.411]    TraceClk_Pin=0x00040002
[17:48:33.411]    TraceD0_Pin=0x00040003
[17:48:33.411]    TraceD1_Pin=0x00040004
[17:48:33.411]    TraceD2_Pin=0x00040005
[17:48:33.411]    TraceD3_Pin=0x00040006
[17:48:33.411]  </debugvars>
[17:48:33.411]  
[17:48:33.412]  <sequence name="TraceStart" Pname="" disable="false" info="">
[17:48:33.412]    <block atomic="false" info="">
[17:48:33.412]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[17:48:33.412]        // -> [traceSWO <= 0x00000001]
[17:48:33.412]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[17:48:33.412]        // -> [traceTPIU <= 0x00000000]
[17:48:33.412]    </block>
[17:48:33.412]    <control if="traceSWO" while="" timeout="0" info="">
[17:48:33.413]      // if-block "traceSWO"
[17:48:33.413]        // =>  TRUE
[17:48:33.413]      <block atomic="false" info="">
[17:48:33.413]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[17:48:33.413]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[17:48:33.413]            <block atomic="false" info="">
[17:48:33.413]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:48:33.413]                // -> [dbgmcu_val <= 0x00000000]
[17:48:33.414]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[17:48:33.414]                // -> [dbgmcu_trace_val <= 0x00000000]
[17:48:33.414]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[17:48:33.414]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.414]                // -> [dbgmcu_val <= 0x00000007]
[17:48:33.414]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[17:48:33.415]                // -> [dbgmcu_trace_val <= 0x00000020]
[17:48:33.415]              Sequence("ConfigureTraceSWOPin");
[17:48:33.415]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[17:48:33.415]                  <block atomic="false" info="">
[17:48:33.415]                    __var pin     = 0;
[17:48:33.415]                      // -> [pin <= 0x00000000]
[17:48:33.415]                    __var port    = 0;
[17:48:33.415]                      // -> [port <= 0x00000000]
[17:48:33.416]                    __var portAdr = 0;
[17:48:33.416]                      // -> [portAdr <= 0x00000000]
[17:48:33.416]                    __var pos     = 0;
[17:48:33.416]                      // -> [pos <= 0x00000000]
[17:48:33.416]                    __var SWO_Pin = 0x00010003;          // PB3
[17:48:33.416]                      // -> [SWO_Pin <= 0x00010003]
[17:48:33.416]                  </block>
[17:48:33.417]                  <block atomic="false" info="configure SWO">
[17:48:33.417]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[17:48:33.417]                      // -> [pin <= 0x00000003]
[17:48:33.417]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[17:48:33.417]                      // -> [port <= 0x00000001]
[17:48:33.417]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[17:48:33.417]                      // -> [portAdr <= 0x40020400]
[17:48:33.417]                    pos = pin * 2;
[17:48:33.417]                      // -> [pos <= 0x00000006]
[17:48:33.418]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[17:48:33.418]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.418]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.418]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[17:48:33.419]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.419]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.420]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[17:48:33.420]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.420]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.420]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[17:48:33.421]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.421]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.421]                  </block>
[17:48:33.421]                  <control if="pin <  8" while="" timeout="0" info="">
[17:48:33.422]                    // if-block "pin <  8"
[17:48:33.422]                      // =>  TRUE
[17:48:33.422]                    <block atomic="false" info="">
[17:48:33.422]                      pos = ((pin    ) & 7) * 4;
[17:48:33.422]                        // -> [pos <= 0x0000000C]
[17:48:33.422]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[17:48:33.423]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.423]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.423]                    </block>
[17:48:33.423]                    // end if-block "pin <  8"
[17:48:33.424]                  </control>
[17:48:33.424]                  <control if="pin >= 8" while="" timeout="0" info="">
[17:48:33.424]                    // if-block "pin >= 8"
[17:48:33.424]                      // =>  FALSE
[17:48:33.424]                    // skip if-block "pin >= 8"
[17:48:33.424]                  </control>
[17:48:33.424]                </sequence>
[17:48:33.424]            </block>
[17:48:33.425]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[17:48:33.425]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[17:48:33.425]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:33.425]            </block>
[17:48:33.425]          </sequence>
[17:48:33.426]      </block>
[17:48:33.426]      // end if-block "traceSWO"
[17:48:33.426]    </control>
[17:48:33.426]    <control if="traceTPIU" while="" timeout="0" info="">
[17:48:33.426]      // if-block "traceTPIU"
[17:48:33.426]        // =>  FALSE
[17:48:33.426]      // skip if-block "traceTPIU"
[17:48:33.426]    </control>
[17:48:33.427]  </sequence>
[17:48:33.427]  
[17:48:56.903]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[17:48:56.903]  
[17:48:56.904]  <debugvars>
[17:48:56.905]    // Pre-defined
[17:48:56.905]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[17:48:56.906]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[17:48:56.906]    __dp=0x00000000
[17:48:56.907]    __ap=0x00000000
[17:48:56.907]    __traceout=0x00000001      (SWO Trace)
[17:48:56.908]    __errorcontrol=0x00000000  (Skip Errors="False")
[17:48:56.909]    __FlashAddr=0x00000000
[17:48:56.909]    __FlashLen=0x00000000
[17:48:56.910]    __FlashArg=0x00000000
[17:48:56.910]    __FlashOp=0x00000000
[17:48:56.911]    __Result=0x00000000
[17:48:56.911]    
[17:48:56.911]    // User-defined
[17:48:56.912]    DbgMCU_CR=0x00000007
[17:48:56.912]    DbgMCU_APB1_Fz=0x00000000
[17:48:56.913]    DbgMCU_APB2_Fz=0x00000000
[17:48:56.913]    TraceClk_Pin=0x00040002
[17:48:56.913]    TraceD0_Pin=0x00040003
[17:48:56.914]    TraceD1_Pin=0x00040004
[17:48:56.914]    TraceD2_Pin=0x00040005
[17:48:56.915]    TraceD3_Pin=0x00040006
[17:48:56.915]  </debugvars>
[17:48:56.916]  
[17:48:56.916]  <sequence name="TraceStop" Pname="" disable="false" info="">
[17:48:56.917]    <block atomic="false" info="">
[17:48:56.917]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[17:48:56.917]        // -> [traceSWO <= 0x00000001]
[17:48:56.918]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[17:48:56.918]        // -> [traceTPIU <= 0x00000000]
[17:48:56.919]    </block>
[17:48:56.919]    <control if="traceSWO" while="" timeout="0" info="">
[17:48:56.920]      // if-block "traceSWO"
[17:48:56.920]        // =>  TRUE
[17:48:56.921]      <block atomic="false" info="">
[17:48:56.921]        Sequence("DisableTraceSWO");
[17:48:56.921]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[17:48:56.922]            <block atomic="false" info="">
[17:48:56.922]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[17:48:56.922]                // -> [dbgmcu_val <= 0x00000000]
[17:48:56.922]            </block>
[17:48:56.923]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[17:48:56.923]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[17:48:56.924]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[17:48:56.924]                // -> [dbgmcu_val <= 0x00000007]
[17:48:56.924]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[17:48:56.925]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[17:48:56.925]            </block>
[17:48:56.925]          </sequence>
[17:48:56.925]      </block>
[17:48:56.925]      // end if-block "traceSWO"
[17:48:56.926]    </control>
[17:48:56.926]    <control if="traceTPIU" while="" timeout="0" info="">
[17:48:56.926]      // if-block "traceTPIU"
[17:48:56.926]        // =>  FALSE
[17:48:56.926]      // skip if-block "traceTPIU"
[17:48:56.927]    </control>
[17:48:56.927]  </sequence>
[17:48:56.927]  
