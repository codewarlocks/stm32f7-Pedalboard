/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0009.log
 *  Created     : 09:45:05 (01/05/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[09:45:05.217]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:45:05.217]  
[09:45:05.217]  <debugvars>
[09:45:05.217]    // Pre-defined
[09:45:05.217]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:45:05.217]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:45:05.218]    __dp=0x00000000
[09:45:05.218]    __ap=0x00000000
[09:45:05.218]    __traceout=0x00000001      (SWO Trace)
[09:45:05.218]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:45:05.218]    __FlashAddr=0x00000000
[09:45:05.218]    __FlashLen=0x00000000
[09:45:05.218]    __FlashArg=0x00000000
[09:45:05.219]    __FlashOp=0x00000000
[09:45:05.219]    __Result=0x00000000
[09:45:05.219]    
[09:45:05.219]    // User-defined
[09:45:05.219]    DbgMCU_CR=0x00000007
[09:45:05.219]    DbgMCU_APB1_Fz=0x00000000
[09:45:05.219]    DbgMCU_APB2_Fz=0x00000000
[09:45:05.219]    TraceClk_Pin=0x00040002
[09:45:05.219]    TraceD0_Pin=0x00040003
[09:45:05.219]    TraceD1_Pin=0x00040004
[09:45:05.220]    TraceD2_Pin=0x00040005
[09:45:05.220]    TraceD3_Pin=0x00040006
[09:45:05.220]  </debugvars>
[09:45:05.220]  
[09:45:05.220]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:45:05.220]    <block atomic="false" info="">
[09:45:05.220]      Sequence("CheckID");
[09:45:05.221]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:45:05.221]          <block atomic="false" info="">
[09:45:05.221]            __var pidr1 = 0;
[09:45:05.221]              // -> [pidr1 <= 0x00000000]
[09:45:05.221]            __var pidr2 = 0;
[09:45:05.221]              // -> [pidr2 <= 0x00000000]
[09:45:05.221]            __var jep106id = 0;
[09:45:05.221]              // -> [jep106id <= 0x00000000]
[09:45:05.222]            __var ROMTableBase = 0;
[09:45:05.222]              // -> [ROMTableBase <= 0x00000000]
[09:45:05.222]            __ap = 0;      // AHB-AP
[09:45:05.222]              // -> [__ap <= 0x00000000]
[09:45:05.222]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:45:05.222]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.223]              // -> [ROMTableBase <= 0xE00FD000]
[09:45:05.223]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:45:05.223]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.224]              // -> [pidr1 <= 0x00000004]
[09:45:05.224]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:45:05.224]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.224]              // -> [pidr2 <= 0x0000001A]
[09:45:05.224]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:45:05.225]              // -> [jep106id <= 0x00000020]
[09:45:05.225]          </block>
[09:45:05.225]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:45:05.225]            // if-block "jep106id != 0x20"
[09:45:05.225]              // =>  FALSE
[09:45:05.225]            // skip if-block "jep106id != 0x20"
[09:45:05.225]          </control>
[09:45:05.226]        </sequence>
[09:45:05.226]    </block>
[09:45:05.226]  </sequence>
[09:45:05.226]  
[09:45:05.241]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:45:05.241]  
[09:45:05.241]  <debugvars>
[09:45:05.241]    // Pre-defined
[09:45:05.241]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:45:05.242]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:45:05.242]    __dp=0x00000000
[09:45:05.242]    __ap=0x00000000
[09:45:05.242]    __traceout=0x00000001      (SWO Trace)
[09:45:05.242]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:45:05.242]    __FlashAddr=0x00000000
[09:45:05.243]    __FlashLen=0x00000000
[09:45:05.243]    __FlashArg=0x00000000
[09:45:05.243]    __FlashOp=0x00000000
[09:45:05.243]    __Result=0x00000000
[09:45:05.243]    
[09:45:05.243]    // User-defined
[09:45:05.243]    DbgMCU_CR=0x00000007
[09:45:05.243]    DbgMCU_APB1_Fz=0x00000000
[09:45:05.244]    DbgMCU_APB2_Fz=0x00000000
[09:45:05.244]    TraceClk_Pin=0x00040002
[09:45:05.244]    TraceD0_Pin=0x00040003
[09:45:05.244]    TraceD1_Pin=0x00040004
[09:45:05.244]    TraceD2_Pin=0x00040005
[09:45:05.244]    TraceD3_Pin=0x00040006
[09:45:05.245]  </debugvars>
[09:45:05.245]  
[09:45:05.245]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:45:05.245]    <block atomic="false" info="">
[09:45:05.245]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:45:05.245]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.246]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:45:05.246]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.246]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:45:05.247]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.247]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:45:05.247]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:45:05.248]    </block>
[09:45:05.248]  </sequence>
[09:45:05.248]  
[09:50:32.932]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:50:32.932]  
[09:50:32.932]  <debugvars>
[09:50:32.932]    // Pre-defined
[09:50:32.932]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:32.933]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:50:32.933]    __dp=0x00000000
[09:50:32.933]    __ap=0x00000000
[09:50:32.933]    __traceout=0x00000001      (SWO Trace)
[09:50:32.933]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:32.934]    __FlashAddr=0x00000000
[09:50:32.934]    __FlashLen=0x00000000
[09:50:32.934]    __FlashArg=0x00000000
[09:50:32.934]    __FlashOp=0x00000000
[09:50:32.934]    __Result=0x00000000
[09:50:32.934]    
[09:50:32.934]    // User-defined
[09:50:32.935]    DbgMCU_CR=0x00000007
[09:50:32.935]    DbgMCU_APB1_Fz=0x00000000
[09:50:32.935]    DbgMCU_APB2_Fz=0x00000000
[09:50:32.935]    TraceClk_Pin=0x00040002
[09:50:32.935]    TraceD0_Pin=0x00040003
[09:50:32.936]    TraceD1_Pin=0x00040004
[09:50:32.936]    TraceD2_Pin=0x00040005
[09:50:32.936]    TraceD3_Pin=0x00040006
[09:50:32.936]  </debugvars>
[09:50:32.936]  
[09:50:32.936]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:50:32.937]    <block atomic="false" info="">
[09:50:32.937]      Sequence("CheckID");
[09:50:32.937]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:50:32.937]          <block atomic="false" info="">
[09:50:32.937]            __var pidr1 = 0;
[09:50:32.937]              // -> [pidr1 <= 0x00000000]
[09:50:32.938]            __var pidr2 = 0;
[09:50:32.938]              // -> [pidr2 <= 0x00000000]
[09:50:32.938]            __var jep106id = 0;
[09:50:32.938]              // -> [jep106id <= 0x00000000]
[09:50:32.938]            __var ROMTableBase = 0;
[09:50:32.938]              // -> [ROMTableBase <= 0x00000000]
[09:50:32.939]            __ap = 0;      // AHB-AP
[09:50:32.939]              // -> [__ap <= 0x00000000]
[09:50:32.939]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:50:32.939]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.939]              // -> [ROMTableBase <= 0xE00FD000]
[09:50:32.940]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:50:32.940]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.940]              // -> [pidr1 <= 0x00000004]
[09:50:32.941]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:50:32.941]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.941]              // -> [pidr2 <= 0x0000001A]
[09:50:32.941]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:50:32.941]              // -> [jep106id <= 0x00000020]
[09:50:32.942]          </block>
[09:50:32.942]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:50:32.942]            // if-block "jep106id != 0x20"
[09:50:32.942]              // =>  FALSE
[09:50:32.942]            // skip if-block "jep106id != 0x20"
[09:50:32.942]          </control>
[09:50:32.943]        </sequence>
[09:50:32.943]    </block>
[09:50:32.943]  </sequence>
[09:50:32.943]  
[09:50:32.958]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:50:32.958]  
[09:50:32.958]  <debugvars>
[09:50:32.958]    // Pre-defined
[09:50:32.959]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:32.959]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:50:32.959]    __dp=0x00000000
[09:50:32.959]    __ap=0x00000000
[09:50:32.959]    __traceout=0x00000001      (SWO Trace)
[09:50:32.959]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:32.960]    __FlashAddr=0x00000000
[09:50:32.960]    __FlashLen=0x00000000
[09:50:32.960]    __FlashArg=0x00000000
[09:50:32.960]    __FlashOp=0x00000000
[09:50:32.960]    __Result=0x00000000
[09:50:32.960]    
[09:50:32.960]    // User-defined
[09:50:32.961]    DbgMCU_CR=0x00000007
[09:50:32.961]    DbgMCU_APB1_Fz=0x00000000
[09:50:32.961]    DbgMCU_APB2_Fz=0x00000000
[09:50:32.961]    TraceClk_Pin=0x00040002
[09:50:32.961]    TraceD0_Pin=0x00040003
[09:50:32.962]    TraceD1_Pin=0x00040004
[09:50:32.962]    TraceD2_Pin=0x00040005
[09:50:32.962]    TraceD3_Pin=0x00040006
[09:50:32.962]  </debugvars>
[09:50:32.962]  
[09:50:32.962]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:50:32.962]    <block atomic="false" info="">
[09:50:32.963]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:50:32.963]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.963]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:50:32.964]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.964]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:50:32.965]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.965]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:50:32.965]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:32.965]    </block>
[09:50:32.966]  </sequence>
[09:50:32.966]  
[09:51:03.902]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:51:03.902]  
[09:51:03.903]  <debugvars>
[09:51:03.903]    // Pre-defined
[09:51:03.904]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:03.904]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:51:03.904]    __dp=0x00000000
[09:51:03.904]    __ap=0x00000000
[09:51:03.905]    __traceout=0x00000001      (SWO Trace)
[09:51:03.905]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:03.905]    __FlashAddr=0x00000000
[09:51:03.905]    __FlashLen=0x00000000
[09:51:03.905]    __FlashArg=0x00000000
[09:51:03.906]    __FlashOp=0x00000000
[09:51:03.906]    __Result=0x00000000
[09:51:03.906]    
[09:51:03.906]    // User-defined
[09:51:03.906]    DbgMCU_CR=0x00000007
[09:51:03.907]    DbgMCU_APB1_Fz=0x00000000
[09:51:03.907]    DbgMCU_APB2_Fz=0x00000000
[09:51:03.907]    TraceClk_Pin=0x00040002
[09:51:03.907]    TraceD0_Pin=0x00040003
[09:51:03.907]    TraceD1_Pin=0x00040004
[09:51:03.908]    TraceD2_Pin=0x00040005
[09:51:03.908]    TraceD3_Pin=0x00040006
[09:51:03.908]  </debugvars>
[09:51:03.908]  
[09:51:03.908]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:51:03.909]    <block atomic="false" info="">
[09:51:03.909]      Sequence("CheckID");
[09:51:03.909]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:51:03.909]          <block atomic="false" info="">
[09:51:03.909]            __var pidr1 = 0;
[09:51:03.910]              // -> [pidr1 <= 0x00000000]
[09:51:03.910]            __var pidr2 = 0;
[09:51:03.910]              // -> [pidr2 <= 0x00000000]
[09:51:03.910]            __var jep106id = 0;
[09:51:03.910]              // -> [jep106id <= 0x00000000]
[09:51:03.910]            __var ROMTableBase = 0;
[09:51:03.910]              // -> [ROMTableBase <= 0x00000000]
[09:51:03.911]            __ap = 0;      // AHB-AP
[09:51:03.911]              // -> [__ap <= 0x00000000]
[09:51:03.911]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:51:03.911]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.911]              // -> [ROMTableBase <= 0xE00FD000]
[09:51:03.911]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:51:03.912]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.912]              // -> [pidr1 <= 0x00000004]
[09:51:03.912]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:51:03.912]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.913]              // -> [pidr2 <= 0x0000001A]
[09:51:03.913]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:51:03.913]              // -> [jep106id <= 0x00000020]
[09:51:03.913]          </block>
[09:51:03.913]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:51:03.913]            // if-block "jep106id != 0x20"
[09:51:03.913]              // =>  FALSE
[09:51:03.914]            // skip if-block "jep106id != 0x20"
[09:51:03.914]          </control>
[09:51:03.914]        </sequence>
[09:51:03.914]    </block>
[09:51:03.914]  </sequence>
[09:51:03.914]  
[09:51:03.929]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:51:03.929]  
[09:51:03.929]  <debugvars>
[09:51:03.929]    // Pre-defined
[09:51:03.929]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:03.930]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:51:03.930]    __dp=0x00000000
[09:51:03.930]    __ap=0x00000000
[09:51:03.930]    __traceout=0x00000001      (SWO Trace)
[09:51:03.931]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:03.931]    __FlashAddr=0x00000000
[09:51:03.931]    __FlashLen=0x00000000
[09:51:03.931]    __FlashArg=0x00000000
[09:51:03.931]    __FlashOp=0x00000000
[09:51:03.931]    __Result=0x00000000
[09:51:03.932]    
[09:51:03.932]    // User-defined
[09:51:03.932]    DbgMCU_CR=0x00000007
[09:51:03.932]    DbgMCU_APB1_Fz=0x00000000
[09:51:03.932]    DbgMCU_APB2_Fz=0x00000000
[09:51:03.932]    TraceClk_Pin=0x00040002
[09:51:03.933]    TraceD0_Pin=0x00040003
[09:51:03.933]    TraceD1_Pin=0x00040004
[09:51:03.933]    TraceD2_Pin=0x00040005
[09:51:03.933]    TraceD3_Pin=0x00040006
[09:51:03.933]  </debugvars>
[09:51:03.933]  
[09:51:03.934]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:51:03.934]    <block atomic="false" info="">
[09:51:03.934]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:51:03.934]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.935]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:51:03.935]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.935]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:51:03.936]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.936]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:51:03.937]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.937]    </block>
[09:51:03.937]  </sequence>
[09:51:03.937]  
[09:51:03.954]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:51:03.954]  
[09:51:03.954]  <debugvars>
[09:51:03.955]    // Pre-defined
[09:51:03.955]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:03.955]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:51:03.955]    __dp=0x00000000
[09:51:03.955]    __ap=0x00000000
[09:51:03.955]    __traceout=0x00000001      (SWO Trace)
[09:51:03.956]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:03.956]    __FlashAddr=0x00000000
[09:51:03.956]    __FlashLen=0x00000000
[09:51:03.956]    __FlashArg=0x00000000
[09:51:03.956]    __FlashOp=0x00000000
[09:51:03.956]    __Result=0x00000000
[09:51:03.956]    
[09:51:03.956]    // User-defined
[09:51:03.956]    DbgMCU_CR=0x00000007
[09:51:03.956]    DbgMCU_APB1_Fz=0x00000000
[09:51:03.957]    DbgMCU_APB2_Fz=0x00000000
[09:51:03.957]    TraceClk_Pin=0x00040002
[09:51:03.957]    TraceD0_Pin=0x00040003
[09:51:03.957]    TraceD1_Pin=0x00040004
[09:51:03.957]    TraceD2_Pin=0x00040005
[09:51:03.958]    TraceD3_Pin=0x00040006
[09:51:03.958]  </debugvars>
[09:51:03.958]  
[09:51:03.958]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:51:03.958]    <block atomic="false" info="">
[09:51:03.958]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:51:03.958]        // -> [traceSWO <= 0x00000001]
[09:51:03.958]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:51:03.959]        // -> [traceTPIU <= 0x00000000]
[09:51:03.959]    </block>
[09:51:03.959]    <control if="traceSWO" while="" timeout="0" info="">
[09:51:03.959]      // if-block "traceSWO"
[09:51:03.959]        // =>  TRUE
[09:51:03.959]      <block atomic="false" info="">
[09:51:03.960]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:51:03.960]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:51:03.960]            <block atomic="false" info="">
[09:51:03.960]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:51:03.960]                // -> [dbgmcu_val <= 0x00000000]
[09:51:03.960]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:51:03.960]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:51:03.960]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:51:03.961]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.961]                // -> [dbgmcu_val <= 0x00000007]
[09:51:03.961]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:51:03.961]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:51:03.961]              Sequence("ConfigureTraceSWOPin");
[09:51:03.962]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:51:03.962]                  <block atomic="false" info="">
[09:51:03.962]                    __var pin     = 0;
[09:51:03.962]                      // -> [pin <= 0x00000000]
[09:51:03.962]                    __var port    = 0;
[09:51:03.962]                      // -> [port <= 0x00000000]
[09:51:03.962]                    __var portAdr = 0;
[09:51:03.962]                      // -> [portAdr <= 0x00000000]
[09:51:03.963]                    __var pos     = 0;
[09:51:03.963]                      // -> [pos <= 0x00000000]
[09:51:03.963]                    __var SWO_Pin = 0x00010003;          // PB3
[09:51:03.963]                      // -> [SWO_Pin <= 0x00010003]
[09:51:03.963]                  </block>
[09:51:03.963]                  <block atomic="false" info="configure SWO">
[09:51:03.963]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:51:03.964]                      // -> [pin <= 0x00000003]
[09:51:03.964]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:51:03.964]                      // -> [port <= 0x00000001]
[09:51:03.964]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:51:03.964]                      // -> [portAdr <= 0x40020400]
[09:51:03.964]                    pos = pin * 2;
[09:51:03.964]                      // -> [pos <= 0x00000006]
[09:51:03.964]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:51:03.965]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.965]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.966]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:51:03.966]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.966]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.967]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:51:03.967]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.967]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.968]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:51:03.968]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.969]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.969]                  </block>
[09:51:03.969]                  <control if="pin <  8" while="" timeout="0" info="">
[09:51:03.969]                    // if-block "pin <  8"
[09:51:03.969]                      // =>  TRUE
[09:51:03.969]                    <block atomic="false" info="">
[09:51:03.969]                      pos = ((pin    ) & 7) * 4;
[09:51:03.970]                        // -> [pos <= 0x0000000C]
[09:51:03.970]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:51:03.970]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.971]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.971]                    </block>
[09:51:03.971]                    // end if-block "pin <  8"
[09:51:03.971]                  </control>
[09:51:03.971]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:51:03.971]                    // if-block "pin >= 8"
[09:51:03.972]                      // =>  FALSE
[09:51:03.972]                    // skip if-block "pin >= 8"
[09:51:03.972]                  </control>
[09:51:03.972]                </sequence>
[09:51:03.972]            </block>
[09:51:03.972]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:51:03.973]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:51:03.973]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.973]            </block>
[09:51:03.974]          </sequence>
[09:51:03.974]      </block>
[09:51:03.974]      // end if-block "traceSWO"
[09:51:03.974]    </control>
[09:51:03.974]    <control if="traceTPIU" while="" timeout="0" info="">
[09:51:03.974]      // if-block "traceTPIU"
[09:51:03.974]        // =>  FALSE
[09:51:03.974]      // skip if-block "traceTPIU"
[09:51:03.975]    </control>
[09:51:03.975]  </sequence>
[09:51:03.975]  
[09:51:03.979]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:51:03.979]  
[09:51:03.979]  <debugvars>
[09:51:03.979]    // Pre-defined
[09:51:03.979]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:03.979]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:51:03.979]    __dp=0x00000000
[09:51:03.980]    __ap=0x00000000
[09:51:03.980]    __traceout=0x00000001      (SWO Trace)
[09:51:03.980]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:03.980]    __FlashAddr=0x00000000
[09:51:03.980]    __FlashLen=0x00000000
[09:51:03.980]    __FlashArg=0x00000000
[09:51:03.980]    __FlashOp=0x00000000
[09:51:03.980]    __Result=0x00000000
[09:51:03.981]    
[09:51:03.981]    // User-defined
[09:51:03.981]    DbgMCU_CR=0x00000007
[09:51:03.981]    DbgMCU_APB1_Fz=0x00000000
[09:51:03.981]    DbgMCU_APB2_Fz=0x00000000
[09:51:03.981]    TraceClk_Pin=0x00040002
[09:51:03.981]    TraceD0_Pin=0x00040003
[09:51:03.981]    TraceD1_Pin=0x00040004
[09:51:03.982]    TraceD2_Pin=0x00040005
[09:51:03.982]    TraceD3_Pin=0x00040006
[09:51:03.982]  </debugvars>
[09:51:03.982]  
[09:51:03.982]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:51:03.982]    <block atomic="false" info="">
[09:51:03.982]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:51:03.982]        // -> [traceSWO <= 0x00000001]
[09:51:03.982]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:51:03.983]        // -> [traceTPIU <= 0x00000000]
[09:51:03.983]    </block>
[09:51:03.983]    <control if="traceSWO" while="" timeout="0" info="">
[09:51:03.983]      // if-block "traceSWO"
[09:51:03.983]        // =>  TRUE
[09:51:03.983]      <block atomic="false" info="">
[09:51:03.983]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:51:03.984]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:51:03.984]            <block atomic="false" info="">
[09:51:03.984]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:51:03.984]                // -> [dbgmcu_val <= 0x00000000]
[09:51:03.984]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:51:03.984]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:51:03.984]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:51:03.985]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.985]                // -> [dbgmcu_val <= 0x00000007]
[09:51:03.985]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:51:03.985]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:51:03.985]              Sequence("ConfigureTraceSWOPin");
[09:51:03.985]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:51:03.986]                  <block atomic="false" info="">
[09:51:03.986]                    __var pin     = 0;
[09:51:03.986]                      // -> [pin <= 0x00000000]
[09:51:03.986]                    __var port    = 0;
[09:51:03.986]                      // -> [port <= 0x00000000]
[09:51:03.986]                    __var portAdr = 0;
[09:51:03.986]                      // -> [portAdr <= 0x00000000]
[09:51:03.986]                    __var pos     = 0;
[09:51:03.986]                      // -> [pos <= 0x00000000]
[09:51:03.987]                    __var SWO_Pin = 0x00010003;          // PB3
[09:51:03.987]                      // -> [SWO_Pin <= 0x00010003]
[09:51:03.987]                  </block>
[09:51:03.987]                  <block atomic="false" info="configure SWO">
[09:51:03.987]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:51:03.988]                      // -> [pin <= 0x00000003]
[09:51:03.988]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:51:03.988]                      // -> [port <= 0x00000001]
[09:51:03.988]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:51:03.988]                      // -> [portAdr <= 0x40020400]
[09:51:03.988]                    pos = pin * 2;
[09:51:03.988]                      // -> [pos <= 0x00000006]
[09:51:03.989]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:51:03.989]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.989]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.989]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:51:03.990]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.990]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.991]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:51:03.991]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.991]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.992]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:51:03.992]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.993]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.993]                  </block>
[09:51:03.993]                  <control if="pin <  8" while="" timeout="0" info="">
[09:51:03.993]                    // if-block "pin <  8"
[09:51:03.993]                      // =>  TRUE
[09:51:03.993]                    <block atomic="false" info="">
[09:51:03.994]                      pos = ((pin    ) & 7) * 4;
[09:51:03.994]                        // -> [pos <= 0x0000000C]
[09:51:03.994]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:51:03.994]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.995]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.995]                    </block>
[09:51:03.995]                    // end if-block "pin <  8"
[09:51:03.995]                  </control>
[09:51:03.995]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:51:03.995]                    // if-block "pin >= 8"
[09:51:03.996]                      // =>  FALSE
[09:51:03.996]                    // skip if-block "pin >= 8"
[09:51:03.996]                  </control>
[09:51:03.996]                </sequence>
[09:51:03.996]            </block>
[09:51:03.996]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:51:03.996]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:51:03.997]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:03.997]            </block>
[09:51:03.997]          </sequence>
[09:51:03.997]      </block>
[09:51:03.997]      // end if-block "traceSWO"
[09:51:03.998]    </control>
[09:51:03.998]    <control if="traceTPIU" while="" timeout="0" info="">
[09:51:03.998]      // if-block "traceTPIU"
[09:51:03.998]        // =>  FALSE
[09:51:03.998]      // skip if-block "traceTPIU"
[09:51:03.998]    </control>
[09:51:03.998]  </sequence>
[09:51:03.999]  
[09:51:04.221]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:51:04.221]  
[09:51:04.221]  <debugvars>
[09:51:04.221]    // Pre-defined
[09:51:04.222]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:04.222]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:51:04.222]    __dp=0x00000000
[09:51:04.224]    __ap=0x00000000
[09:51:04.225]    __traceout=0x00000001      (SWO Trace)
[09:51:04.226]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:04.227]    __FlashAddr=0x00000000
[09:51:04.227]    __FlashLen=0x00000000
[09:51:04.227]    __FlashArg=0x00000000
[09:51:04.227]    __FlashOp=0x00000000
[09:51:04.227]    __Result=0x00000000
[09:51:04.227]    
[09:51:04.227]    // User-defined
[09:51:04.227]    DbgMCU_CR=0x00000007
[09:51:04.227]    DbgMCU_APB1_Fz=0x00000000
[09:51:04.228]    DbgMCU_APB2_Fz=0x00000000
[09:51:04.228]    TraceClk_Pin=0x00040002
[09:51:04.228]    TraceD0_Pin=0x00040003
[09:51:04.228]    TraceD1_Pin=0x00040004
[09:51:04.228]    TraceD2_Pin=0x00040005
[09:51:04.228]    TraceD3_Pin=0x00040006
[09:51:04.229]  </debugvars>
[09:51:04.229]  
[09:51:04.229]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:51:04.229]    <block atomic="false" info="">
[09:51:04.229]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:51:04.229]        // -> [traceSWO <= 0x00000001]
[09:51:04.230]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:51:04.230]        // -> [traceTPIU <= 0x00000000]
[09:51:04.230]    </block>
[09:51:04.230]    <control if="traceSWO" while="" timeout="0" info="">
[09:51:04.230]      // if-block "traceSWO"
[09:51:04.230]        // =>  TRUE
[09:51:04.231]      <block atomic="false" info="">
[09:51:04.231]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:51:04.231]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:51:04.231]            <block atomic="false" info="">
[09:51:04.231]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:51:04.231]                // -> [dbgmcu_val <= 0x00000000]
[09:51:04.231]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:51:04.231]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:51:04.232]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:51:04.232]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.233]                // -> [dbgmcu_val <= 0x00000007]
[09:51:04.233]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:51:04.233]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:51:04.233]              Sequence("ConfigureTraceSWOPin");
[09:51:04.233]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:51:04.233]                  <block atomic="false" info="">
[09:51:04.234]                    __var pin     = 0;
[09:51:04.234]                      // -> [pin <= 0x00000000]
[09:51:04.234]                    __var port    = 0;
[09:51:04.234]                      // -> [port <= 0x00000000]
[09:51:04.234]                    __var portAdr = 0;
[09:51:04.234]                      // -> [portAdr <= 0x00000000]
[09:51:04.234]                    __var pos     = 0;
[09:51:04.235]                      // -> [pos <= 0x00000000]
[09:51:04.235]                    __var SWO_Pin = 0x00010003;          // PB3
[09:51:04.235]                      // -> [SWO_Pin <= 0x00010003]
[09:51:04.235]                  </block>
[09:51:04.235]                  <block atomic="false" info="configure SWO">
[09:51:04.236]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:51:04.236]                      // -> [pin <= 0x00000003]
[09:51:04.236]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:51:04.236]                      // -> [port <= 0x00000001]
[09:51:04.236]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:51:04.236]                      // -> [portAdr <= 0x40020400]
[09:51:04.236]                    pos = pin * 2;
[09:51:04.236]                      // -> [pos <= 0x00000006]
[09:51:04.237]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:51:04.237]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.238]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.238]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:51:04.239]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.239]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.239]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:51:04.240]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.240]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.240]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:51:04.241]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.241]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.241]                  </block>
[09:51:04.241]                  <control if="pin <  8" while="" timeout="0" info="">
[09:51:04.242]                    // if-block "pin <  8"
[09:51:04.242]                      // =>  TRUE
[09:51:04.242]                    <block atomic="false" info="">
[09:51:04.242]                      pos = ((pin    ) & 7) * 4;
[09:51:04.242]                        // -> [pos <= 0x0000000C]
[09:51:04.242]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:51:04.243]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.243]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.244]                    </block>
[09:51:04.244]                    // end if-block "pin <  8"
[09:51:04.244]                  </control>
[09:51:04.244]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:51:04.244]                    // if-block "pin >= 8"
[09:51:04.244]                      // =>  FALSE
[09:51:04.244]                    // skip if-block "pin >= 8"
[09:51:04.244]                  </control>
[09:51:04.245]                </sequence>
[09:51:04.245]            </block>
[09:51:04.245]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:51:04.245]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:51:04.246]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:04.246]            </block>
[09:51:04.246]          </sequence>
[09:51:04.246]      </block>
[09:51:04.246]      // end if-block "traceSWO"
[09:51:04.247]    </control>
[09:51:04.247]    <control if="traceTPIU" while="" timeout="0" info="">
[09:51:04.247]      // if-block "traceTPIU"
[09:51:04.247]        // =>  FALSE
[09:51:04.247]      // skip if-block "traceTPIU"
[09:51:04.247]    </control>
[09:51:04.247]  </sequence>
[09:51:04.248]  
[09:52:33.474]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:52:33.474]  
[09:52:33.474]  <debugvars>
[09:52:33.474]    // Pre-defined
[09:52:33.475]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:33.475]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:33.475]    __dp=0x00000000
[09:52:33.475]    __ap=0x00000000
[09:52:33.475]    __traceout=0x00000001      (SWO Trace)
[09:52:33.476]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:33.476]    __FlashAddr=0x00000000
[09:52:33.476]    __FlashLen=0x00000000
[09:52:33.476]    __FlashArg=0x00000000
[09:52:33.476]    __FlashOp=0x00000000
[09:52:33.477]    __Result=0x00000000
[09:52:33.477]    
[09:52:33.477]    // User-defined
[09:52:33.477]    DbgMCU_CR=0x00000007
[09:52:33.477]    DbgMCU_APB1_Fz=0x00000000
[09:52:33.477]    DbgMCU_APB2_Fz=0x00000000
[09:52:33.477]    TraceClk_Pin=0x00040002
[09:52:33.478]    TraceD0_Pin=0x00040003
[09:52:33.478]    TraceD1_Pin=0x00040004
[09:52:33.478]    TraceD2_Pin=0x00040005
[09:52:33.478]    TraceD3_Pin=0x00040006
[09:52:33.478]  </debugvars>
[09:52:33.479]  
[09:52:33.479]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:52:33.479]    <block atomic="false" info="">
[09:52:33.479]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:52:33.479]        // -> [traceSWO <= 0x00000001]
[09:52:33.480]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:52:33.480]        // -> [traceTPIU <= 0x00000000]
[09:52:33.480]    </block>
[09:52:33.480]    <control if="traceSWO" while="" timeout="0" info="">
[09:52:33.480]      // if-block "traceSWO"
[09:52:33.480]        // =>  TRUE
[09:52:33.481]      <block atomic="false" info="">
[09:52:33.481]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:52:33.481]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:52:33.481]            <block atomic="false" info="">
[09:52:33.481]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:52:33.482]                // -> [dbgmcu_val <= 0x00000000]
[09:52:33.482]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:52:33.482]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:52:33.482]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:52:33.483]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.483]                // -> [dbgmcu_val <= 0x00000007]
[09:52:33.483]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:52:33.483]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:52:33.483]              Sequence("ConfigureTraceSWOPin");
[09:52:33.483]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:52:33.484]                  <block atomic="false" info="">
[09:52:33.484]                    __var pin     = 0;
[09:52:33.484]                      // -> [pin <= 0x00000000]
[09:52:33.484]                    __var port    = 0;
[09:52:33.484]                      // -> [port <= 0x00000000]
[09:52:33.485]                    __var portAdr = 0;
[09:52:33.485]                      // -> [portAdr <= 0x00000000]
[09:52:33.485]                    __var pos     = 0;
[09:52:33.485]                      // -> [pos <= 0x00000000]
[09:52:33.485]                    __var SWO_Pin = 0x00010003;          // PB3
[09:52:33.485]                      // -> [SWO_Pin <= 0x00010003]
[09:52:33.485]                  </block>
[09:52:33.486]                  <block atomic="false" info="configure SWO">
[09:52:33.486]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:52:33.486]                      // -> [pin <= 0x00000003]
[09:52:33.486]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:52:33.486]                      // -> [port <= 0x00000001]
[09:52:33.486]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:52:33.486]                      // -> [portAdr <= 0x40020400]
[09:52:33.487]                    pos = pin * 2;
[09:52:33.487]                      // -> [pos <= 0x00000006]
[09:52:33.487]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:52:33.487]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.488]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.488]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:52:33.489]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.489]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.489]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:52:33.490]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.490]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.490]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:52:33.491]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.491]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.491]                  </block>
[09:52:33.492]                  <control if="pin <  8" while="" timeout="0" info="">
[09:52:33.492]                    // if-block "pin <  8"
[09:52:33.492]                      // =>  TRUE
[09:52:33.492]                    <block atomic="false" info="">
[09:52:33.492]                      pos = ((pin    ) & 7) * 4;
[09:52:33.492]                        // -> [pos <= 0x0000000C]
[09:52:33.492]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:52:33.493]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.493]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.493]                    </block>
[09:52:33.493]                    // end if-block "pin <  8"
[09:52:33.493]                  </control>
[09:52:33.494]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:52:33.494]                    // if-block "pin >= 8"
[09:52:33.494]                      // =>  FALSE
[09:52:33.494]                    // skip if-block "pin >= 8"
[09:52:33.494]                  </control>
[09:52:33.494]                </sequence>
[09:52:33.494]            </block>
[09:52:33.495]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:52:33.495]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:52:33.495]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:33.495]            </block>
[09:52:33.495]          </sequence>
[09:52:33.495]      </block>
[09:52:33.496]      // end if-block "traceSWO"
[09:52:33.496]    </control>
[09:52:33.496]    <control if="traceTPIU" while="" timeout="0" info="">
[09:52:33.496]      // if-block "traceTPIU"
[09:52:33.496]        // =>  FALSE
[09:52:33.496]      // skip if-block "traceTPIU"
[09:52:33.496]    </control>
[09:52:33.497]  </sequence>
[09:52:33.497]  
[09:52:35.929]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:52:35.929]  
[09:52:35.930]  <debugvars>
[09:52:35.930]    // Pre-defined
[09:52:35.931]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:35.931]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:35.931]    __dp=0x00000000
[09:52:35.931]    __ap=0x00000000
[09:52:35.932]    __traceout=0x00000001      (SWO Trace)
[09:52:35.932]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:35.932]    __FlashAddr=0x00000000
[09:52:35.932]    __FlashLen=0x00000000
[09:52:35.933]    __FlashArg=0x00000000
[09:52:35.933]    __FlashOp=0x00000000
[09:52:35.933]    __Result=0x00000000
[09:52:35.933]    
[09:52:35.933]    // User-defined
[09:52:35.934]    DbgMCU_CR=0x00000007
[09:52:35.934]    DbgMCU_APB1_Fz=0x00000000
[09:52:35.934]    DbgMCU_APB2_Fz=0x00000000
[09:52:35.934]    TraceClk_Pin=0x00040002
[09:52:35.934]    TraceD0_Pin=0x00040003
[09:52:35.935]    TraceD1_Pin=0x00040004
[09:52:35.935]    TraceD2_Pin=0x00040005
[09:52:35.935]    TraceD3_Pin=0x00040006
[09:52:35.935]  </debugvars>
[09:52:35.935]  
[09:52:35.936]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:52:35.936]    <block atomic="false" info="">
[09:52:35.936]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:52:35.936]        // -> [traceSWO <= 0x00000001]
[09:52:35.936]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:52:35.936]        // -> [traceTPIU <= 0x00000000]
[09:52:35.937]    </block>
[09:52:35.937]    <control if="traceSWO" while="" timeout="0" info="">
[09:52:35.937]      // if-block "traceSWO"
[09:52:35.937]        // =>  TRUE
[09:52:35.937]      <block atomic="false" info="">
[09:52:35.937]        Sequence("DisableTraceSWO");
[09:52:35.938]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:52:35.938]            <block atomic="false" info="">
[09:52:35.938]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:52:35.938]                // -> [dbgmcu_val <= 0x00000000]
[09:52:35.938]            </block>
[09:52:35.938]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:52:35.939]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:52:35.939]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:52:35.939]                // -> [dbgmcu_val <= 0x00000007]
[09:52:35.939]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:52:35.940]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:35.940]            </block>
[09:52:35.940]          </sequence>
[09:52:35.940]      </block>
[09:52:35.940]      // end if-block "traceSWO"
[09:52:35.940]    </control>
[09:52:35.940]    <control if="traceTPIU" while="" timeout="0" info="">
[09:52:35.941]      // if-block "traceTPIU"
[09:52:35.941]        // =>  FALSE
[09:52:35.941]      // skip if-block "traceTPIU"
[09:52:35.941]    </control>
[09:52:35.941]  </sequence>
[09:52:35.941]  
[09:53:10.813]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:53:10.813]  
[09:53:10.813]  <debugvars>
[09:53:10.814]    // Pre-defined
[09:53:10.814]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:10.814]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:53:10.814]    __dp=0x00000000
[09:53:10.814]    __ap=0x00000000
[09:53:10.814]    __traceout=0x00000001      (SWO Trace)
[09:53:10.815]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:10.815]    __FlashAddr=0x00000000
[09:53:10.815]    __FlashLen=0x00000000
[09:53:10.815]    __FlashArg=0x00000000
[09:53:10.815]    __FlashOp=0x00000000
[09:53:10.815]    __Result=0x00000000
[09:53:10.815]    
[09:53:10.815]    // User-defined
[09:53:10.816]    DbgMCU_CR=0x00000007
[09:53:10.816]    DbgMCU_APB1_Fz=0x00000000
[09:53:10.816]    DbgMCU_APB2_Fz=0x00000000
[09:53:10.816]    TraceClk_Pin=0x00040002
[09:53:10.816]    TraceD0_Pin=0x00040003
[09:53:10.816]    TraceD1_Pin=0x00040004
[09:53:10.816]    TraceD2_Pin=0x00040005
[09:53:10.817]    TraceD3_Pin=0x00040006
[09:53:10.817]  </debugvars>
[09:53:10.817]  
[09:53:10.817]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:53:10.817]    <block atomic="false" info="">
[09:53:10.817]      Sequence("CheckID");
[09:53:10.817]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:53:10.818]          <block atomic="false" info="">
[09:53:10.818]            __var pidr1 = 0;
[09:53:10.818]              // -> [pidr1 <= 0x00000000]
[09:53:10.818]            __var pidr2 = 0;
[09:53:10.818]              // -> [pidr2 <= 0x00000000]
[09:53:10.818]            __var jep106id = 0;
[09:53:10.818]              // -> [jep106id <= 0x00000000]
[09:53:10.818]            __var ROMTableBase = 0;
[09:53:10.819]              // -> [ROMTableBase <= 0x00000000]
[09:53:10.819]            __ap = 0;      // AHB-AP
[09:53:10.819]              // -> [__ap <= 0x00000000]
[09:53:10.819]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:53:10.819]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.819]              // -> [ROMTableBase <= 0xE00FD000]
[09:53:10.819]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:53:10.820]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.820]              // -> [pidr1 <= 0x00000004]
[09:53:10.820]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:53:10.821]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.821]              // -> [pidr2 <= 0x0000001A]
[09:53:10.821]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:53:10.821]              // -> [jep106id <= 0x00000020]
[09:53:10.821]          </block>
[09:53:10.822]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:53:10.822]            // if-block "jep106id != 0x20"
[09:53:10.822]              // =>  FALSE
[09:53:10.822]            // skip if-block "jep106id != 0x20"
[09:53:10.822]          </control>
[09:53:10.822]        </sequence>
[09:53:10.822]    </block>
[09:53:10.823]  </sequence>
[09:53:10.823]  
[09:53:10.838]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:53:10.838]  
[09:53:10.838]  <debugvars>
[09:53:10.838]    // Pre-defined
[09:53:10.838]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:10.838]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:53:10.839]    __dp=0x00000000
[09:53:10.839]    __ap=0x00000000
[09:53:10.839]    __traceout=0x00000001      (SWO Trace)
[09:53:10.839]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:10.839]    __FlashAddr=0x00000000
[09:53:10.839]    __FlashLen=0x00000000
[09:53:10.840]    __FlashArg=0x00000000
[09:53:10.840]    __FlashOp=0x00000000
[09:53:10.840]    __Result=0x00000000
[09:53:10.840]    
[09:53:10.840]    // User-defined
[09:53:10.840]    DbgMCU_CR=0x00000007
[09:53:10.841]    DbgMCU_APB1_Fz=0x00000000
[09:53:10.841]    DbgMCU_APB2_Fz=0x00000000
[09:53:10.841]    TraceClk_Pin=0x00040002
[09:53:10.841]    TraceD0_Pin=0x00040003
[09:53:10.841]    TraceD1_Pin=0x00040004
[09:53:10.842]    TraceD2_Pin=0x00040005
[09:53:10.842]    TraceD3_Pin=0x00040006
[09:53:10.842]  </debugvars>
[09:53:10.842]  
[09:53:10.843]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:53:10.843]    <block atomic="false" info="">
[09:53:10.843]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:53:10.844]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.844]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:53:10.844]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.844]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:53:10.845]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.845]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:53:10.846]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:10.846]    </block>
[09:53:10.846]  </sequence>
[09:53:10.846]  
[09:53:41.709]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:53:41.709]  
[09:53:41.709]  <debugvars>
[09:53:41.710]    // Pre-defined
[09:53:41.710]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:41.710]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:41.710]    __dp=0x00000000
[09:53:41.710]    __ap=0x00000000
[09:53:41.711]    __traceout=0x00000001      (SWO Trace)
[09:53:41.711]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:41.711]    __FlashAddr=0x00000000
[09:53:41.711]    __FlashLen=0x00000000
[09:53:41.711]    __FlashArg=0x00000000
[09:53:41.711]    __FlashOp=0x00000000
[09:53:41.712]    __Result=0x00000000
[09:53:41.712]    
[09:53:41.712]    // User-defined
[09:53:41.712]    DbgMCU_CR=0x00000007
[09:53:41.712]    DbgMCU_APB1_Fz=0x00000000
[09:53:41.712]    DbgMCU_APB2_Fz=0x00000000
[09:53:41.713]    TraceClk_Pin=0x00040002
[09:53:41.713]    TraceD0_Pin=0x00040003
[09:53:41.713]    TraceD1_Pin=0x00040004
[09:53:41.713]    TraceD2_Pin=0x00040005
[09:53:41.713]    TraceD3_Pin=0x00040006
[09:53:41.714]  </debugvars>
[09:53:41.714]  
[09:53:41.714]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:53:41.714]    <block atomic="false" info="">
[09:53:41.714]      Sequence("CheckID");
[09:53:41.714]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:53:41.715]          <block atomic="false" info="">
[09:53:41.715]            __var pidr1 = 0;
[09:53:41.715]              // -> [pidr1 <= 0x00000000]
[09:53:41.715]            __var pidr2 = 0;
[09:53:41.715]              // -> [pidr2 <= 0x00000000]
[09:53:41.715]            __var jep106id = 0;
[09:53:41.716]              // -> [jep106id <= 0x00000000]
[09:53:41.716]            __var ROMTableBase = 0;
[09:53:41.716]              // -> [ROMTableBase <= 0x00000000]
[09:53:41.716]            __ap = 0;      // AHB-AP
[09:53:41.716]              // -> [__ap <= 0x00000000]
[09:53:41.716]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:53:41.717]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.717]              // -> [ROMTableBase <= 0xE00FD000]
[09:53:41.717]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:53:41.718]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.718]              // -> [pidr1 <= 0x00000004]
[09:53:41.718]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:53:41.719]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.719]              // -> [pidr2 <= 0x0000001A]
[09:53:41.719]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:53:41.719]              // -> [jep106id <= 0x00000020]
[09:53:41.719]          </block>
[09:53:41.719]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:53:41.719]            // if-block "jep106id != 0x20"
[09:53:41.720]              // =>  FALSE
[09:53:41.720]            // skip if-block "jep106id != 0x20"
[09:53:41.720]          </control>
[09:53:41.720]        </sequence>
[09:53:41.720]    </block>
[09:53:41.720]  </sequence>
[09:53:41.720]  
[09:53:41.734]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:53:41.734]  
[09:53:41.734]  <debugvars>
[09:53:41.734]    // Pre-defined
[09:53:41.734]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:41.735]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:41.735]    __dp=0x00000000
[09:53:41.735]    __ap=0x00000000
[09:53:41.735]    __traceout=0x00000001      (SWO Trace)
[09:53:41.735]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:41.735]    __FlashAddr=0x00000000
[09:53:41.736]    __FlashLen=0x00000000
[09:53:41.736]    __FlashArg=0x00000000
[09:53:41.736]    __FlashOp=0x00000000
[09:53:41.736]    __Result=0x00000000
[09:53:41.736]    
[09:53:41.736]    // User-defined
[09:53:41.736]    DbgMCU_CR=0x00000007
[09:53:41.737]    DbgMCU_APB1_Fz=0x00000000
[09:53:41.737]    DbgMCU_APB2_Fz=0x00000000
[09:53:41.737]    TraceClk_Pin=0x00040002
[09:53:41.737]    TraceD0_Pin=0x00040003
[09:53:41.737]    TraceD1_Pin=0x00040004
[09:53:41.738]    TraceD2_Pin=0x00040005
[09:53:41.738]    TraceD3_Pin=0x00040006
[09:53:41.738]  </debugvars>
[09:53:41.738]  
[09:53:41.738]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:53:41.738]    <block atomic="false" info="">
[09:53:41.739]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:53:41.739]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.739]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:53:41.740]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.740]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:53:41.741]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.741]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:53:41.741]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.741]    </block>
[09:53:41.742]  </sequence>
[09:53:41.742]  
[09:53:41.758]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:53:41.758]  
[09:53:41.758]  <debugvars>
[09:53:41.758]    // Pre-defined
[09:53:41.758]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:41.758]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:41.758]    __dp=0x00000000
[09:53:41.759]    __ap=0x00000000
[09:53:41.759]    __traceout=0x00000001      (SWO Trace)
[09:53:41.759]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:41.759]    __FlashAddr=0x00000000
[09:53:41.759]    __FlashLen=0x00000000
[09:53:41.759]    __FlashArg=0x00000000
[09:53:41.760]    __FlashOp=0x00000000
[09:53:41.760]    __Result=0x00000000
[09:53:41.760]    
[09:53:41.760]    // User-defined
[09:53:41.760]    DbgMCU_CR=0x00000007
[09:53:41.760]    DbgMCU_APB1_Fz=0x00000000
[09:53:41.760]    DbgMCU_APB2_Fz=0x00000000
[09:53:41.760]    TraceClk_Pin=0x00040002
[09:53:41.761]    TraceD0_Pin=0x00040003
[09:53:41.761]    TraceD1_Pin=0x00040004
[09:53:41.761]    TraceD2_Pin=0x00040005
[09:53:41.761]    TraceD3_Pin=0x00040006
[09:53:41.761]  </debugvars>
[09:53:41.761]  
[09:53:41.761]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:53:41.762]    <block atomic="false" info="">
[09:53:41.762]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:53:41.762]        // -> [traceSWO <= 0x00000001]
[09:53:41.762]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:53:41.762]        // -> [traceTPIU <= 0x00000000]
[09:53:41.762]    </block>
[09:53:41.763]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:41.763]      // if-block "traceSWO"
[09:53:41.763]        // =>  TRUE
[09:53:41.763]      <block atomic="false" info="">
[09:53:41.763]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:53:41.763]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:53:41.763]            <block atomic="false" info="">
[09:53:41.763]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:41.764]                // -> [dbgmcu_val <= 0x00000000]
[09:53:41.764]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:53:41.764]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:53:41.764]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:53:41.765]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.765]                // -> [dbgmcu_val <= 0x00000007]
[09:53:41.765]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:53:41.765]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:53:41.765]              Sequence("ConfigureTraceSWOPin");
[09:53:41.765]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:53:41.765]                  <block atomic="false" info="">
[09:53:41.765]                    __var pin     = 0;
[09:53:41.766]                      // -> [pin <= 0x00000000]
[09:53:41.766]                    __var port    = 0;
[09:53:41.766]                      // -> [port <= 0x00000000]
[09:53:41.766]                    __var portAdr = 0;
[09:53:41.766]                      // -> [portAdr <= 0x00000000]
[09:53:41.766]                    __var pos     = 0;
[09:53:41.766]                      // -> [pos <= 0x00000000]
[09:53:41.766]                    __var SWO_Pin = 0x00010003;          // PB3
[09:53:41.767]                      // -> [SWO_Pin <= 0x00010003]
[09:53:41.767]                  </block>
[09:53:41.767]                  <block atomic="false" info="configure SWO">
[09:53:41.767]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:53:41.767]                      // -> [pin <= 0x00000003]
[09:53:41.767]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:53:41.767]                      // -> [port <= 0x00000001]
[09:53:41.767]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:53:41.767]                      // -> [portAdr <= 0x40020400]
[09:53:41.768]                    pos = pin * 2;
[09:53:41.768]                      // -> [pos <= 0x00000006]
[09:53:41.768]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:53:41.769]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.769]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.769]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:53:41.769]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.770]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.770]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:53:41.771]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.771]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.771]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:53:41.771]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.772]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.772]                  </block>
[09:53:41.772]                  <control if="pin <  8" while="" timeout="0" info="">
[09:53:41.772]                    // if-block "pin <  8"
[09:53:41.772]                      // =>  TRUE
[09:53:41.773]                    <block atomic="false" info="">
[09:53:41.773]                      pos = ((pin    ) & 7) * 4;
[09:53:41.773]                        // -> [pos <= 0x0000000C]
[09:53:41.773]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:53:41.773]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.774]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.774]                    </block>
[09:53:41.774]                    // end if-block "pin <  8"
[09:53:41.774]                  </control>
[09:53:41.774]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:53:41.774]                    // if-block "pin >= 8"
[09:53:41.774]                      // =>  FALSE
[09:53:41.775]                    // skip if-block "pin >= 8"
[09:53:41.775]                  </control>
[09:53:41.775]                </sequence>
[09:53:41.775]            </block>
[09:53:41.775]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:41.775]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:53:41.776]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.776]            </block>
[09:53:41.776]          </sequence>
[09:53:41.776]      </block>
[09:53:41.776]      // end if-block "traceSWO"
[09:53:41.777]    </control>
[09:53:41.777]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:41.777]      // if-block "traceTPIU"
[09:53:41.777]        // =>  FALSE
[09:53:41.777]      // skip if-block "traceTPIU"
[09:53:41.777]    </control>
[09:53:41.777]  </sequence>
[09:53:41.777]  
[09:53:41.781]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:53:41.781]  
[09:53:41.781]  <debugvars>
[09:53:41.781]    // Pre-defined
[09:53:41.782]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:41.782]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:41.782]    __dp=0x00000000
[09:53:41.782]    __ap=0x00000000
[09:53:41.782]    __traceout=0x00000001      (SWO Trace)
[09:53:41.782]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:41.783]    __FlashAddr=0x00000000
[09:53:41.783]    __FlashLen=0x00000000
[09:53:41.783]    __FlashArg=0x00000000
[09:53:41.783]    __FlashOp=0x00000000
[09:53:41.783]    __Result=0x00000000
[09:53:41.784]    
[09:53:41.784]    // User-defined
[09:53:41.784]    DbgMCU_CR=0x00000007
[09:53:41.784]    DbgMCU_APB1_Fz=0x00000000
[09:53:41.784]    DbgMCU_APB2_Fz=0x00000000
[09:53:41.784]    TraceClk_Pin=0x00040002
[09:53:41.784]    TraceD0_Pin=0x00040003
[09:53:41.785]    TraceD1_Pin=0x00040004
[09:53:41.785]    TraceD2_Pin=0x00040005
[09:53:41.785]    TraceD3_Pin=0x00040006
[09:53:41.785]  </debugvars>
[09:53:41.785]  
[09:53:41.786]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:53:41.786]    <block atomic="false" info="">
[09:53:41.786]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:53:41.786]        // -> [traceSWO <= 0x00000001]
[09:53:41.786]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:53:41.786]        // -> [traceTPIU <= 0x00000000]
[09:53:41.786]    </block>
[09:53:41.786]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:41.787]      // if-block "traceSWO"
[09:53:41.787]        // =>  TRUE
[09:53:41.787]      <block atomic="false" info="">
[09:53:41.787]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:53:41.787]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:53:41.787]            <block atomic="false" info="">
[09:53:41.787]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:41.788]                // -> [dbgmcu_val <= 0x00000000]
[09:53:41.788]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:53:41.788]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:53:41.788]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:53:41.788]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.788]                // -> [dbgmcu_val <= 0x00000007]
[09:53:41.789]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:53:41.789]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:53:41.789]              Sequence("ConfigureTraceSWOPin");
[09:53:41.789]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:53:41.789]                  <block atomic="false" info="">
[09:53:41.789]                    __var pin     = 0;
[09:53:41.789]                      // -> [pin <= 0x00000000]
[09:53:41.789]                    __var port    = 0;
[09:53:41.790]                      // -> [port <= 0x00000000]
[09:53:41.790]                    __var portAdr = 0;
[09:53:41.790]                      // -> [portAdr <= 0x00000000]
[09:53:41.790]                    __var pos     = 0;
[09:53:41.790]                      // -> [pos <= 0x00000000]
[09:53:41.790]                    __var SWO_Pin = 0x00010003;          // PB3
[09:53:41.790]                      // -> [SWO_Pin <= 0x00010003]
[09:53:41.790]                  </block>
[09:53:41.791]                  <block atomic="false" info="configure SWO">
[09:53:41.791]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:53:41.791]                      // -> [pin <= 0x00000003]
[09:53:41.791]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:53:41.791]                      // -> [port <= 0x00000001]
[09:53:41.791]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:53:41.791]                      // -> [portAdr <= 0x40020400]
[09:53:41.792]                    pos = pin * 2;
[09:53:41.792]                      // -> [pos <= 0x00000006]
[09:53:41.792]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:53:41.792]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.793]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.793]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:53:41.793]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.794]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.794]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:53:41.794]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.795]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.795]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:53:41.795]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.796]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.796]                  </block>
[09:53:41.796]                  <control if="pin <  8" while="" timeout="0" info="">
[09:53:41.796]                    // if-block "pin <  8"
[09:53:41.796]                      // =>  TRUE
[09:53:41.796]                    <block atomic="false" info="">
[09:53:41.796]                      pos = ((pin    ) & 7) * 4;
[09:53:41.796]                        // -> [pos <= 0x0000000C]
[09:53:41.797]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:53:41.797]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.797]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.797]                    </block>
[09:53:41.798]                    // end if-block "pin <  8"
[09:53:41.798]                  </control>
[09:53:41.798]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:53:41.798]                    // if-block "pin >= 8"
[09:53:41.798]                      // =>  FALSE
[09:53:41.798]                    // skip if-block "pin >= 8"
[09:53:41.798]                  </control>
[09:53:41.799]                </sequence>
[09:53:41.799]            </block>
[09:53:41.799]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:41.799]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:53:41.799]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:41.799]            </block>
[09:53:41.800]          </sequence>
[09:53:41.800]      </block>
[09:53:41.800]      // end if-block "traceSWO"
[09:53:41.800]    </control>
[09:53:41.800]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:41.800]      // if-block "traceTPIU"
[09:53:41.801]        // =>  FALSE
[09:53:41.801]      // skip if-block "traceTPIU"
[09:53:41.801]    </control>
[09:53:41.801]  </sequence>
[09:53:41.801]  
[09:53:42.025]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:53:42.025]  
[09:53:42.025]  <debugvars>
[09:53:42.025]    // Pre-defined
[09:53:42.025]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:42.026]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:42.026]    __dp=0x00000000
[09:53:42.026]    __ap=0x00000000
[09:53:42.026]    __traceout=0x00000001      (SWO Trace)
[09:53:42.026]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:42.027]    __FlashAddr=0x00000000
[09:53:42.027]    __FlashLen=0x00000000
[09:53:42.027]    __FlashArg=0x00000000
[09:53:42.027]    __FlashOp=0x00000000
[09:53:42.027]    __Result=0x00000000
[09:53:42.027]    
[09:53:42.027]    // User-defined
[09:53:42.028]    DbgMCU_CR=0x00000007
[09:53:42.028]    DbgMCU_APB1_Fz=0x00000000
[09:53:42.028]    DbgMCU_APB2_Fz=0x00000000
[09:53:42.028]    TraceClk_Pin=0x00040002
[09:53:42.028]    TraceD0_Pin=0x00040003
[09:53:42.029]    TraceD1_Pin=0x00040004
[09:53:42.029]    TraceD2_Pin=0x00040005
[09:53:42.029]    TraceD3_Pin=0x00040006
[09:53:42.029]  </debugvars>
[09:53:42.029]  
[09:53:42.030]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:53:42.030]    <block atomic="false" info="">
[09:53:42.030]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:53:42.030]        // -> [traceSWO <= 0x00000001]
[09:53:42.030]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:53:42.030]        // -> [traceTPIU <= 0x00000000]
[09:53:42.031]    </block>
[09:53:42.031]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:42.031]      // if-block "traceSWO"
[09:53:42.031]        // =>  TRUE
[09:53:42.031]      <block atomic="false" info="">
[09:53:42.031]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:53:42.032]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:53:42.032]            <block atomic="false" info="">
[09:53:42.032]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:42.032]                // -> [dbgmcu_val <= 0x00000000]
[09:53:42.032]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:53:42.033]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:53:42.033]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:53:42.033]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.033]                // -> [dbgmcu_val <= 0x00000007]
[09:53:42.034]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:53:42.034]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:53:42.034]              Sequence("ConfigureTraceSWOPin");
[09:53:42.034]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:53:42.034]                  <block atomic="false" info="">
[09:53:42.035]                    __var pin     = 0;
[09:53:42.035]                      // -> [pin <= 0x00000000]
[09:53:42.035]                    __var port    = 0;
[09:53:42.035]                      // -> [port <= 0x00000000]
[09:53:42.035]                    __var portAdr = 0;
[09:53:42.036]                      // -> [portAdr <= 0x00000000]
[09:53:42.036]                    __var pos     = 0;
[09:53:42.036]                      // -> [pos <= 0x00000000]
[09:53:42.036]                    __var SWO_Pin = 0x00010003;          // PB3
[09:53:42.036]                      // -> [SWO_Pin <= 0x00010003]
[09:53:42.036]                  </block>
[09:53:42.037]                  <block atomic="false" info="configure SWO">
[09:53:42.037]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:53:42.037]                      // -> [pin <= 0x00000003]
[09:53:42.037]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:53:42.037]                      // -> [port <= 0x00000001]
[09:53:42.037]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:53:42.037]                      // -> [portAdr <= 0x40020400]
[09:53:42.038]                    pos = pin * 2;
[09:53:42.038]                      // -> [pos <= 0x00000006]
[09:53:42.038]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:53:42.038]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.039]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.039]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:53:42.039]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.040]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.040]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:53:42.040]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.041]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.041]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:53:42.041]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.042]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.042]                  </block>
[09:53:42.042]                  <control if="pin <  8" while="" timeout="0" info="">
[09:53:42.042]                    // if-block "pin <  8"
[09:53:42.042]                      // =>  TRUE
[09:53:42.043]                    <block atomic="false" info="">
[09:53:42.043]                      pos = ((pin    ) & 7) * 4;
[09:53:42.043]                        // -> [pos <= 0x0000000C]
[09:53:42.043]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:53:42.044]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.044]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.045]                    </block>
[09:53:42.045]                    // end if-block "pin <  8"
[09:53:42.045]                  </control>
[09:53:42.045]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:53:42.045]                    // if-block "pin >= 8"
[09:53:42.045]                      // =>  FALSE
[09:53:42.046]                    // skip if-block "pin >= 8"
[09:53:42.046]                  </control>
[09:53:42.046]                </sequence>
[09:53:42.046]            </block>
[09:53:42.046]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:42.046]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:53:42.047]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:42.047]            </block>
[09:53:42.047]          </sequence>
[09:53:42.047]      </block>
[09:53:42.048]      // end if-block "traceSWO"
[09:53:42.048]    </control>
[09:53:42.048]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:42.048]      // if-block "traceTPIU"
[09:53:42.048]        // =>  FALSE
[09:53:42.048]      // skip if-block "traceTPIU"
[09:53:42.048]    </control>
[09:53:42.049]  </sequence>
[09:53:42.049]  
[09:56:59.774]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:56:59.774]  
[09:56:59.775]  <debugvars>
[09:56:59.775]    // Pre-defined
[09:56:59.775]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:56:59.775]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:56:59.776]    __dp=0x00000000
[09:56:59.776]    __ap=0x00000000
[09:56:59.776]    __traceout=0x00000001      (SWO Trace)
[09:56:59.776]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:56:59.776]    __FlashAddr=0x00000000
[09:56:59.777]    __FlashLen=0x00000000
[09:56:59.777]    __FlashArg=0x00000000
[09:56:59.777]    __FlashOp=0x00000000
[09:56:59.777]    __Result=0x00000000
[09:56:59.777]    
[09:56:59.777]    // User-defined
[09:56:59.778]    DbgMCU_CR=0x00000007
[09:56:59.778]    DbgMCU_APB1_Fz=0x00000000
[09:56:59.778]    DbgMCU_APB2_Fz=0x00000000
[09:56:59.778]    TraceClk_Pin=0x00040002
[09:56:59.778]    TraceD0_Pin=0x00040003
[09:56:59.778]    TraceD1_Pin=0x00040004
[09:56:59.779]    TraceD2_Pin=0x00040005
[09:56:59.779]    TraceD3_Pin=0x00040006
[09:56:59.779]  </debugvars>
[09:56:59.779]  
[09:56:59.779]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:56:59.779]    <block atomic="false" info="">
[09:56:59.779]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:56:59.780]        // -> [traceSWO <= 0x00000001]
[09:56:59.780]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:56:59.780]        // -> [traceTPIU <= 0x00000000]
[09:56:59.780]    </block>
[09:56:59.780]    <control if="traceSWO" while="" timeout="0" info="">
[09:56:59.781]      // if-block "traceSWO"
[09:56:59.781]        // =>  TRUE
[09:56:59.781]      <block atomic="false" info="">
[09:56:59.781]        Sequence("DisableTraceSWO");
[09:56:59.781]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:56:59.781]            <block atomic="false" info="">
[09:56:59.781]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:56:59.782]                // -> [dbgmcu_val <= 0x00000000]
[09:56:59.782]            </block>
[09:56:59.782]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:56:59.782]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:56:59.783]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:56:59.783]                // -> [dbgmcu_val <= 0x00000007]
[09:56:59.783]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:56:59.784]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:56:59.784]            </block>
[09:56:59.784]          </sequence>
[09:56:59.784]      </block>
[09:56:59.784]      // end if-block "traceSWO"
[09:56:59.784]    </control>
[09:56:59.785]    <control if="traceTPIU" while="" timeout="0" info="">
[09:56:59.785]      // if-block "traceTPIU"
[09:56:59.785]        // =>  FALSE
[09:56:59.785]      // skip if-block "traceTPIU"
[09:56:59.785]    </control>
[09:56:59.785]  </sequence>
[09:56:59.786]  
[09:58:17.442]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:58:17.442]  
[09:58:17.443]  <debugvars>
[09:58:17.443]    // Pre-defined
[09:58:17.443]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:17.443]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:58:17.443]    __dp=0x00000000
[09:58:17.444]    __ap=0x00000000
[09:58:17.444]    __traceout=0x00000001      (SWO Trace)
[09:58:17.444]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:17.444]    __FlashAddr=0x00000000
[09:58:17.444]    __FlashLen=0x00000000
[09:58:17.445]    __FlashArg=0x00000000
[09:58:17.445]    __FlashOp=0x00000000
[09:58:17.445]    __Result=0x00000000
[09:58:17.445]    
[09:58:17.445]    // User-defined
[09:58:17.445]    DbgMCU_CR=0x00000007
[09:58:17.446]    DbgMCU_APB1_Fz=0x00000000
[09:58:17.446]    DbgMCU_APB2_Fz=0x00000000
[09:58:17.446]    TraceClk_Pin=0x00040002
[09:58:17.446]    TraceD0_Pin=0x00040003
[09:58:17.446]    TraceD1_Pin=0x00040004
[09:58:17.447]    TraceD2_Pin=0x00040005
[09:58:17.447]    TraceD3_Pin=0x00040006
[09:58:17.447]  </debugvars>
[09:58:17.447]  
[09:58:17.447]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:58:17.448]    <block atomic="false" info="">
[09:58:17.448]      Sequence("CheckID");
[09:58:17.448]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:58:17.448]          <block atomic="false" info="">
[09:58:17.448]            __var pidr1 = 0;
[09:58:17.449]              // -> [pidr1 <= 0x00000000]
[09:58:17.449]            __var pidr2 = 0;
[09:58:17.449]              // -> [pidr2 <= 0x00000000]
[09:58:17.449]            __var jep106id = 0;
[09:58:17.449]              // -> [jep106id <= 0x00000000]
[09:58:17.450]            __var ROMTableBase = 0;
[09:58:17.450]              // -> [ROMTableBase <= 0x00000000]
[09:58:17.450]            __ap = 0;      // AHB-AP
[09:58:17.450]              // -> [__ap <= 0x00000000]
[09:58:17.450]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:58:17.451]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.451]              // -> [ROMTableBase <= 0xE00FD000]
[09:58:17.451]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:58:17.452]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.452]              // -> [pidr1 <= 0x00000004]
[09:58:17.452]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:58:17.453]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.453]              // -> [pidr2 <= 0x0000001A]
[09:58:17.453]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:58:17.453]              // -> [jep106id <= 0x00000020]
[09:58:17.453]          </block>
[09:58:17.454]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:58:17.454]            // if-block "jep106id != 0x20"
[09:58:17.454]              // =>  FALSE
[09:58:17.454]            // skip if-block "jep106id != 0x20"
[09:58:17.454]          </control>
[09:58:17.454]        </sequence>
[09:58:17.455]    </block>
[09:58:17.455]  </sequence>
[09:58:17.455]  
[09:58:17.470]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:58:17.470]  
[09:58:17.470]  <debugvars>
[09:58:17.470]    // Pre-defined
[09:58:17.470]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:17.470]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:58:17.470]    __dp=0x00000000
[09:58:17.471]    __ap=0x00000000
[09:58:17.471]    __traceout=0x00000001      (SWO Trace)
[09:58:17.471]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:17.471]    __FlashAddr=0x00000000
[09:58:17.471]    __FlashLen=0x00000000
[09:58:17.471]    __FlashArg=0x00000000
[09:58:17.472]    __FlashOp=0x00000000
[09:58:17.472]    __Result=0x00000000
[09:58:17.472]    
[09:58:17.472]    // User-defined
[09:58:17.472]    DbgMCU_CR=0x00000007
[09:58:17.472]    DbgMCU_APB1_Fz=0x00000000
[09:58:17.473]    DbgMCU_APB2_Fz=0x00000000
[09:58:17.473]    TraceClk_Pin=0x00040002
[09:58:17.473]    TraceD0_Pin=0x00040003
[09:58:17.473]    TraceD1_Pin=0x00040004
[09:58:17.473]    TraceD2_Pin=0x00040005
[09:58:17.473]    TraceD3_Pin=0x00040006
[09:58:17.474]  </debugvars>
[09:58:17.474]  
[09:58:17.474]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:58:17.474]    <block atomic="false" info="">
[09:58:17.474]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:58:17.475]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.475]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:58:17.476]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.476]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:58:17.476]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.476]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:58:17.477]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:17.477]    </block>
[09:58:17.477]  </sequence>
[09:58:17.477]  
[09:58:48.381]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:58:48.381]  
[09:58:48.382]  <debugvars>
[09:58:48.382]    // Pre-defined
[09:58:48.382]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:48.382]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:58:48.382]    __dp=0x00000000
[09:58:48.383]    __ap=0x00000000
[09:58:48.383]    __traceout=0x00000001      (SWO Trace)
[09:58:48.383]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:48.383]    __FlashAddr=0x00000000
[09:58:48.383]    __FlashLen=0x00000000
[09:58:48.383]    __FlashArg=0x00000000
[09:58:48.383]    __FlashOp=0x00000000
[09:58:48.384]    __Result=0x00000000
[09:58:48.384]    
[09:58:48.384]    // User-defined
[09:58:48.384]    DbgMCU_CR=0x00000007
[09:58:48.384]    DbgMCU_APB1_Fz=0x00000000
[09:58:48.384]    DbgMCU_APB2_Fz=0x00000000
[09:58:48.385]    TraceClk_Pin=0x00040002
[09:58:48.385]    TraceD0_Pin=0x00040003
[09:58:48.385]    TraceD1_Pin=0x00040004
[09:58:48.385]    TraceD2_Pin=0x00040005
[09:58:48.385]    TraceD3_Pin=0x00040006
[09:58:48.385]  </debugvars>
[09:58:48.385]  
[09:58:48.385]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:58:48.386]    <block atomic="false" info="">
[09:58:48.386]      Sequence("CheckID");
[09:58:48.386]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:58:48.386]          <block atomic="false" info="">
[09:58:48.386]            __var pidr1 = 0;
[09:58:48.386]              // -> [pidr1 <= 0x00000000]
[09:58:48.387]            __var pidr2 = 0;
[09:58:48.387]              // -> [pidr2 <= 0x00000000]
[09:58:48.387]            __var jep106id = 0;
[09:58:48.387]              // -> [jep106id <= 0x00000000]
[09:58:48.387]            __var ROMTableBase = 0;
[09:58:48.387]              // -> [ROMTableBase <= 0x00000000]
[09:58:48.387]            __ap = 0;      // AHB-AP
[09:58:48.387]              // -> [__ap <= 0x00000000]
[09:58:48.387]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:58:48.388]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.388]              // -> [ROMTableBase <= 0xE00FD000]
[09:58:48.388]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:58:48.388]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.389]              // -> [pidr1 <= 0x00000004]
[09:58:48.389]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:58:48.389]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.389]              // -> [pidr2 <= 0x0000001A]
[09:58:48.389]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:58:48.390]              // -> [jep106id <= 0x00000020]
[09:58:48.390]          </block>
[09:58:48.390]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:58:48.390]            // if-block "jep106id != 0x20"
[09:58:48.390]              // =>  FALSE
[09:58:48.390]            // skip if-block "jep106id != 0x20"
[09:58:48.390]          </control>
[09:58:48.390]        </sequence>
[09:58:48.390]    </block>
[09:58:48.391]  </sequence>
[09:58:48.391]  
[09:58:48.405]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:58:48.405]  
[09:58:48.405]  <debugvars>
[09:58:48.406]    // Pre-defined
[09:58:48.406]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:48.406]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:58:48.406]    __dp=0x00000000
[09:58:48.406]    __ap=0x00000000
[09:58:48.406]    __traceout=0x00000001      (SWO Trace)
[09:58:48.407]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:48.407]    __FlashAddr=0x00000000
[09:58:48.407]    __FlashLen=0x00000000
[09:58:48.407]    __FlashArg=0x00000000
[09:58:48.407]    __FlashOp=0x00000000
[09:58:48.407]    __Result=0x00000000
[09:58:48.408]    
[09:58:48.408]    // User-defined
[09:58:48.408]    DbgMCU_CR=0x00000007
[09:58:48.408]    DbgMCU_APB1_Fz=0x00000000
[09:58:48.408]    DbgMCU_APB2_Fz=0x00000000
[09:58:48.408]    TraceClk_Pin=0x00040002
[09:58:48.408]    TraceD0_Pin=0x00040003
[09:58:48.408]    TraceD1_Pin=0x00040004
[09:58:48.409]    TraceD2_Pin=0x00040005
[09:58:48.409]    TraceD3_Pin=0x00040006
[09:58:48.409]  </debugvars>
[09:58:48.409]  
[09:58:48.409]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:58:48.409]    <block atomic="false" info="">
[09:58:48.410]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:58:48.410]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.410]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:58:48.411]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.411]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:58:48.411]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.412]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:58:48.412]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.412]    </block>
[09:58:48.413]  </sequence>
[09:58:48.413]  
[09:58:48.429]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:58:48.429]  
[09:58:48.429]  <debugvars>
[09:58:48.429]    // Pre-defined
[09:58:48.430]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:48.430]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:58:48.430]    __dp=0x00000000
[09:58:48.430]    __ap=0x00000000
[09:58:48.430]    __traceout=0x00000001      (SWO Trace)
[09:58:48.430]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:48.431]    __FlashAddr=0x00000000
[09:58:48.431]    __FlashLen=0x00000000
[09:58:48.431]    __FlashArg=0x00000000
[09:58:48.431]    __FlashOp=0x00000000
[09:58:48.431]    __Result=0x00000000
[09:58:48.431]    
[09:58:48.431]    // User-defined
[09:58:48.431]    DbgMCU_CR=0x00000007
[09:58:48.432]    DbgMCU_APB1_Fz=0x00000000
[09:58:48.432]    DbgMCU_APB2_Fz=0x00000000
[09:58:48.432]    TraceClk_Pin=0x00040002
[09:58:48.432]    TraceD0_Pin=0x00040003
[09:58:48.432]    TraceD1_Pin=0x00040004
[09:58:48.432]    TraceD2_Pin=0x00040005
[09:58:48.433]    TraceD3_Pin=0x00040006
[09:58:48.433]  </debugvars>
[09:58:48.433]  
[09:58:48.433]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:58:48.433]    <block atomic="false" info="">
[09:58:48.433]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:58:48.434]        // -> [traceSWO <= 0x00000001]
[09:58:48.434]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:58:48.434]        // -> [traceTPIU <= 0x00000000]
[09:58:48.434]    </block>
[09:58:48.434]    <control if="traceSWO" while="" timeout="0" info="">
[09:58:48.434]      // if-block "traceSWO"
[09:58:48.434]        // =>  TRUE
[09:58:48.435]      <block atomic="false" info="">
[09:58:48.435]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:58:48.435]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:58:48.435]            <block atomic="false" info="">
[09:58:48.435]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:58:48.435]                // -> [dbgmcu_val <= 0x00000000]
[09:58:48.435]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:58:48.436]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:58:48.436]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:58:48.436]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.436]                // -> [dbgmcu_val <= 0x00000007]
[09:58:48.436]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:58:48.436]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:58:48.437]              Sequence("ConfigureTraceSWOPin");
[09:58:48.437]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:58:48.437]                  <block atomic="false" info="">
[09:58:48.437]                    __var pin     = 0;
[09:58:48.437]                      // -> [pin <= 0x00000000]
[09:58:48.437]                    __var port    = 0;
[09:58:48.437]                      // -> [port <= 0x00000000]
[09:58:48.437]                    __var portAdr = 0;
[09:58:48.438]                      // -> [portAdr <= 0x00000000]
[09:58:48.438]                    __var pos     = 0;
[09:58:48.438]                      // -> [pos <= 0x00000000]
[09:58:48.438]                    __var SWO_Pin = 0x00010003;          // PB3
[09:58:48.438]                      // -> [SWO_Pin <= 0x00010003]
[09:58:48.438]                  </block>
[09:58:48.438]                  <block atomic="false" info="configure SWO">
[09:58:48.438]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:58:48.438]                      // -> [pin <= 0x00000003]
[09:58:48.439]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:58:48.439]                      // -> [port <= 0x00000001]
[09:58:48.439]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:58:48.439]                      // -> [portAdr <= 0x40020400]
[09:58:48.439]                    pos = pin * 2;
[09:58:48.439]                      // -> [pos <= 0x00000006]
[09:58:48.439]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:58:48.440]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.440]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.441]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:58:48.441]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.441]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.441]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:58:48.442]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.442]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.442]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:58:48.443]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.443]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.443]                  </block>
[09:58:48.444]                  <control if="pin <  8" while="" timeout="0" info="">
[09:58:48.444]                    // if-block "pin <  8"
[09:58:48.444]                      // =>  TRUE
[09:58:48.444]                    <block atomic="false" info="">
[09:58:48.444]                      pos = ((pin    ) & 7) * 4;
[09:58:48.444]                        // -> [pos <= 0x0000000C]
[09:58:48.444]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:58:48.445]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.445]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.445]                    </block>
[09:58:48.446]                    // end if-block "pin <  8"
[09:58:48.446]                  </control>
[09:58:48.446]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:58:48.446]                    // if-block "pin >= 8"
[09:58:48.446]                      // =>  FALSE
[09:58:48.446]                    // skip if-block "pin >= 8"
[09:58:48.446]                  </control>
[09:58:48.447]                </sequence>
[09:58:48.447]            </block>
[09:58:48.447]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:58:48.447]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:58:48.447]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.447]            </block>
[09:58:48.448]          </sequence>
[09:58:48.448]      </block>
[09:58:48.448]      // end if-block "traceSWO"
[09:58:48.448]    </control>
[09:58:48.448]    <control if="traceTPIU" while="" timeout="0" info="">
[09:58:48.448]      // if-block "traceTPIU"
[09:58:48.449]        // =>  FALSE
[09:58:48.449]      // skip if-block "traceTPIU"
[09:58:48.449]    </control>
[09:58:48.449]  </sequence>
[09:58:48.449]  
[09:58:48.453]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:58:48.453]  
[09:58:48.453]  <debugvars>
[09:58:48.453]    // Pre-defined
[09:58:48.454]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:48.454]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:58:48.454]    __dp=0x00000000
[09:58:48.454]    __ap=0x00000000
[09:58:48.454]    __traceout=0x00000001      (SWO Trace)
[09:58:48.455]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:48.455]    __FlashAddr=0x00000000
[09:58:48.455]    __FlashLen=0x00000000
[09:58:48.455]    __FlashArg=0x00000000
[09:58:48.455]    __FlashOp=0x00000000
[09:58:48.456]    __Result=0x00000000
[09:58:48.456]    
[09:58:48.456]    // User-defined
[09:58:48.456]    DbgMCU_CR=0x00000007
[09:58:48.456]    DbgMCU_APB1_Fz=0x00000000
[09:58:48.456]    DbgMCU_APB2_Fz=0x00000000
[09:58:48.457]    TraceClk_Pin=0x00040002
[09:58:48.457]    TraceD0_Pin=0x00040003
[09:58:48.457]    TraceD1_Pin=0x00040004
[09:58:48.457]    TraceD2_Pin=0x00040005
[09:58:48.457]    TraceD3_Pin=0x00040006
[09:58:48.457]  </debugvars>
[09:58:48.457]  
[09:58:48.458]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:58:48.458]    <block atomic="false" info="">
[09:58:48.458]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:58:48.458]        // -> [traceSWO <= 0x00000001]
[09:58:48.458]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:58:48.458]        // -> [traceTPIU <= 0x00000000]
[09:58:48.459]    </block>
[09:58:48.459]    <control if="traceSWO" while="" timeout="0" info="">
[09:58:48.459]      // if-block "traceSWO"
[09:58:48.459]        // =>  TRUE
[09:58:48.459]      <block atomic="false" info="">
[09:58:48.459]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:58:48.460]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:58:48.460]            <block atomic="false" info="">
[09:58:48.460]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:58:48.460]                // -> [dbgmcu_val <= 0x00000000]
[09:58:48.460]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:58:48.460]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:58:48.461]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:58:48.461]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.461]                // -> [dbgmcu_val <= 0x00000007]
[09:58:48.461]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:58:48.462]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:58:48.462]              Sequence("ConfigureTraceSWOPin");
[09:58:48.462]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:58:48.462]                  <block atomic="false" info="">
[09:58:48.462]                    __var pin     = 0;
[09:58:48.462]                      // -> [pin <= 0x00000000]
[09:58:48.462]                    __var port    = 0;
[09:58:48.465]                      // -> [port <= 0x00000000]
[09:58:48.465]                    __var portAdr = 0;
[09:58:48.465]                      // -> [portAdr <= 0x00000000]
[09:58:48.465]                    __var pos     = 0;
[09:58:48.465]                      // -> [pos <= 0x00000000]
[09:58:48.465]                    __var SWO_Pin = 0x00010003;          // PB3
[09:58:48.466]                      // -> [SWO_Pin <= 0x00010003]
[09:58:48.466]                  </block>
[09:58:48.466]                  <block atomic="false" info="configure SWO">
[09:58:48.466]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:58:48.466]                      // -> [pin <= 0x00000003]
[09:58:48.466]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:58:48.467]                      // -> [port <= 0x00000001]
[09:58:48.467]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:58:48.467]                      // -> [portAdr <= 0x40020400]
[09:58:48.467]                    pos = pin * 2;
[09:58:48.467]                      // -> [pos <= 0x00000006]
[09:58:48.467]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:58:48.468]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.468]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.468]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:58:48.469]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.470]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.470]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:58:48.470]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.471]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.471]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:58:48.471]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.472]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.472]                  </block>
[09:58:48.472]                  <control if="pin <  8" while="" timeout="0" info="">
[09:58:48.472]                    // if-block "pin <  8"
[09:58:48.472]                      // =>  TRUE
[09:58:48.472]                    <block atomic="false" info="">
[09:58:48.473]                      pos = ((pin    ) & 7) * 4;
[09:58:48.473]                        // -> [pos <= 0x0000000C]
[09:58:48.473]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:58:48.473]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.474]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.474]                    </block>
[09:58:48.474]                    // end if-block "pin <  8"
[09:58:48.474]                  </control>
[09:58:48.474]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:58:48.474]                    // if-block "pin >= 8"
[09:58:48.475]                      // =>  FALSE
[09:58:48.475]                    // skip if-block "pin >= 8"
[09:58:48.475]                  </control>
[09:58:48.475]                </sequence>
[09:58:48.475]            </block>
[09:58:48.475]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:58:48.475]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:58:48.476]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.476]            </block>
[09:58:48.476]          </sequence>
[09:58:48.476]      </block>
[09:58:48.476]      // end if-block "traceSWO"
[09:58:48.476]    </control>
[09:58:48.476]    <control if="traceTPIU" while="" timeout="0" info="">
[09:58:48.477]      // if-block "traceTPIU"
[09:58:48.477]        // =>  FALSE
[09:58:48.477]      // skip if-block "traceTPIU"
[09:58:48.477]    </control>
[09:58:48.477]  </sequence>
[09:58:48.477]  
[09:58:48.689]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:58:48.689]  
[09:58:48.689]  <debugvars>
[09:58:48.690]    // Pre-defined
[09:58:48.690]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:48.690]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:58:48.690]    __dp=0x00000000
[09:58:48.690]    __ap=0x00000000
[09:58:48.690]    __traceout=0x00000001      (SWO Trace)
[09:58:48.691]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:48.691]    __FlashAddr=0x00000000
[09:58:48.691]    __FlashLen=0x00000000
[09:58:48.691]    __FlashArg=0x00000000
[09:58:48.691]    __FlashOp=0x00000000
[09:58:48.691]    __Result=0x00000000
[09:58:48.692]    
[09:58:48.692]    // User-defined
[09:58:48.692]    DbgMCU_CR=0x00000007
[09:58:48.692]    DbgMCU_APB1_Fz=0x00000000
[09:58:48.692]    DbgMCU_APB2_Fz=0x00000000
[09:58:48.693]    TraceClk_Pin=0x00040002
[09:58:48.693]    TraceD0_Pin=0x00040003
[09:58:48.693]    TraceD1_Pin=0x00040004
[09:58:48.693]    TraceD2_Pin=0x00040005
[09:58:48.693]    TraceD3_Pin=0x00040006
[09:58:48.693]  </debugvars>
[09:58:48.694]  
[09:58:48.694]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:58:48.694]    <block atomic="false" info="">
[09:58:48.694]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:58:48.694]        // -> [traceSWO <= 0x00000001]
[09:58:48.694]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:58:48.695]        // -> [traceTPIU <= 0x00000000]
[09:58:48.695]    </block>
[09:58:48.695]    <control if="traceSWO" while="" timeout="0" info="">
[09:58:48.695]      // if-block "traceSWO"
[09:58:48.695]        // =>  TRUE
[09:58:48.695]      <block atomic="false" info="">
[09:58:48.696]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:58:48.696]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:58:48.696]            <block atomic="false" info="">
[09:58:48.696]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:58:48.696]                // -> [dbgmcu_val <= 0x00000000]
[09:58:48.696]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:58:48.696]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:58:48.697]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:58:48.697]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.697]                // -> [dbgmcu_val <= 0x00000007]
[09:58:48.698]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:58:48.698]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:58:48.698]              Sequence("ConfigureTraceSWOPin");
[09:58:48.698]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:58:48.698]                  <block atomic="false" info="">
[09:58:48.698]                    __var pin     = 0;
[09:58:48.698]                      // -> [pin <= 0x00000000]
[09:58:48.699]                    __var port    = 0;
[09:58:48.699]                      // -> [port <= 0x00000000]
[09:58:48.699]                    __var portAdr = 0;
[09:58:48.699]                      // -> [portAdr <= 0x00000000]
[09:58:48.699]                    __var pos     = 0;
[09:58:48.699]                      // -> [pos <= 0x00000000]
[09:58:48.699]                    __var SWO_Pin = 0x00010003;          // PB3
[09:58:48.700]                      // -> [SWO_Pin <= 0x00010003]
[09:58:48.700]                  </block>
[09:58:48.700]                  <block atomic="false" info="configure SWO">
[09:58:48.700]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:58:48.700]                      // -> [pin <= 0x00000003]
[09:58:48.700]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:58:48.701]                      // -> [port <= 0x00000001]
[09:58:48.701]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:58:48.701]                      // -> [portAdr <= 0x40020400]
[09:58:48.701]                    pos = pin * 2;
[09:58:48.701]                      // -> [pos <= 0x00000006]
[09:58:48.701]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:58:48.702]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.702]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.702]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:58:48.703]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.703]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.703]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:58:48.704]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.704]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.704]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:58:48.705]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.705]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.705]                  </block>
[09:58:48.706]                  <control if="pin <  8" while="" timeout="0" info="">
[09:58:48.706]                    // if-block "pin <  8"
[09:58:48.706]                      // =>  TRUE
[09:58:48.706]                    <block atomic="false" info="">
[09:58:48.706]                      pos = ((pin    ) & 7) * 4;
[09:58:48.706]                        // -> [pos <= 0x0000000C]
[09:58:48.706]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:58:48.707]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.707]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.707]                    </block>
[09:58:48.707]                    // end if-block "pin <  8"
[09:58:48.708]                  </control>
[09:58:48.708]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:58:48.708]                    // if-block "pin >= 8"
[09:58:48.708]                      // =>  FALSE
[09:58:48.708]                    // skip if-block "pin >= 8"
[09:58:48.708]                  </control>
[09:58:48.708]                </sequence>
[09:58:48.709]            </block>
[09:58:48.709]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:58:48.709]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:58:48.709]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:48.709]            </block>
[09:58:48.710]          </sequence>
[09:58:48.710]      </block>
[09:58:48.710]      // end if-block "traceSWO"
[09:58:48.710]    </control>
[09:58:48.710]    <control if="traceTPIU" while="" timeout="0" info="">
[09:58:48.710]      // if-block "traceTPIU"
[09:58:48.710]        // =>  FALSE
[09:58:48.710]      // skip if-block "traceTPIU"
[09:58:48.711]    </control>
[09:58:48.711]  </sequence>
[09:58:48.711]  
[09:59:08.971]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:59:08.971]  
[09:59:08.971]  <debugvars>
[09:59:08.972]    // Pre-defined
[09:59:08.972]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:08.972]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:08.972]    __dp=0x00000000
[09:59:08.973]    __ap=0x00000000
[09:59:08.973]    __traceout=0x00000001      (SWO Trace)
[09:59:08.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:08.973]    __FlashAddr=0x00000000
[09:59:08.973]    __FlashLen=0x00000000
[09:59:08.974]    __FlashArg=0x00000000
[09:59:08.974]    __FlashOp=0x00000000
[09:59:08.974]    __Result=0x00000000
[09:59:08.974]    
[09:59:08.974]    // User-defined
[09:59:08.974]    DbgMCU_CR=0x00000007
[09:59:08.975]    DbgMCU_APB1_Fz=0x00000000
[09:59:08.975]    DbgMCU_APB2_Fz=0x00000000
[09:59:08.975]    TraceClk_Pin=0x00040002
[09:59:08.975]    TraceD0_Pin=0x00040003
[09:59:08.975]    TraceD1_Pin=0x00040004
[09:59:08.975]    TraceD2_Pin=0x00040005
[09:59:08.975]    TraceD3_Pin=0x00040006
[09:59:08.976]  </debugvars>
[09:59:08.976]  
[09:59:08.976]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:59:08.976]    <block atomic="false" info="">
[09:59:08.976]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:59:08.976]        // -> [traceSWO <= 0x00000001]
[09:59:08.976]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:59:08.977]        // -> [traceTPIU <= 0x00000000]
[09:59:08.977]    </block>
[09:59:08.977]    <control if="traceSWO" while="" timeout="0" info="">
[09:59:08.977]      // if-block "traceSWO"
[09:59:08.977]        // =>  TRUE
[09:59:08.977]      <block atomic="false" info="">
[09:59:08.977]        Sequence("DisableTraceSWO");
[09:59:08.978]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:59:08.978]            <block atomic="false" info="">
[09:59:08.978]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:59:08.978]                // -> [dbgmcu_val <= 0x00000000]
[09:59:08.978]            </block>
[09:59:08.978]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:59:08.978]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:59:08.979]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:59:08.979]                // -> [dbgmcu_val <= 0x00000007]
[09:59:08.979]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:59:08.979]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:08.980]            </block>
[09:59:08.980]          </sequence>
[09:59:08.980]      </block>
[09:59:08.980]      // end if-block "traceSWO"
[09:59:08.980]    </control>
[09:59:08.980]    <control if="traceTPIU" while="" timeout="0" info="">
[09:59:08.980]      // if-block "traceTPIU"
[09:59:08.980]        // =>  FALSE
[09:59:08.980]      // skip if-block "traceTPIU"
[09:59:08.980]    </control>
[09:59:08.981]  </sequence>
[09:59:08.981]  
