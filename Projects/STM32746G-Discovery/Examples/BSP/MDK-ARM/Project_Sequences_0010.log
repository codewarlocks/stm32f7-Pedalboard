/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0010.log
 *  Created     : 10:15:06 (01/05/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[10:15:06.557]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:15:06.557]  
[10:15:06.557]  <debugvars>
[10:15:06.558]    // Pre-defined
[10:15:06.558]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:06.558]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:15:06.558]    __dp=0x00000000
[10:15:06.558]    __ap=0x00000000
[10:15:06.559]    __traceout=0x00000001      (SWO Trace)
[10:15:06.559]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:06.559]    __FlashAddr=0x00000000
[10:15:06.559]    __FlashLen=0x00000000
[10:15:06.559]    __FlashArg=0x00000000
[10:15:06.560]    __FlashOp=0x00000000
[10:15:06.560]    __Result=0x00000000
[10:15:06.560]    
[10:15:06.560]    // User-defined
[10:15:06.560]    DbgMCU_CR=0x00000007
[10:15:06.560]    DbgMCU_APB1_Fz=0x00000000
[10:15:06.560]    DbgMCU_APB2_Fz=0x00000000
[10:15:06.561]    TraceClk_Pin=0x00040002
[10:15:06.561]    TraceD0_Pin=0x00040003
[10:15:06.561]    TraceD1_Pin=0x00040004
[10:15:06.561]    TraceD2_Pin=0x00040005
[10:15:06.561]    TraceD3_Pin=0x00040006
[10:15:06.562]  </debugvars>
[10:15:06.562]  
[10:15:06.562]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:15:06.562]    <block atomic="false" info="">
[10:15:06.562]      Sequence("CheckID");
[10:15:06.562]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:15:06.563]          <block atomic="false" info="">
[10:15:06.563]            __var pidr1 = 0;
[10:15:06.563]              // -> [pidr1 <= 0x00000000]
[10:15:06.563]            __var pidr2 = 0;
[10:15:06.563]              // -> [pidr2 <= 0x00000000]
[10:15:06.564]            __var jep106id = 0;
[10:15:06.564]              // -> [jep106id <= 0x00000000]
[10:15:06.564]            __var ROMTableBase = 0;
[10:15:06.564]              // -> [ROMTableBase <= 0x00000000]
[10:15:06.564]            __ap = 0;      // AHB-AP
[10:15:06.564]              // -> [__ap <= 0x00000000]
[10:15:06.565]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:15:06.565]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.565]              // -> [ROMTableBase <= 0xE00FD000]
[10:15:06.565]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:15:06.566]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.566]              // -> [pidr1 <= 0x00000004]
[10:15:06.566]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:15:06.567]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.567]              // -> [pidr2 <= 0x0000001A]
[10:15:06.567]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:15:06.567]              // -> [jep106id <= 0x00000020]
[10:15:06.567]          </block>
[10:15:06.567]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:15:06.568]            // if-block "jep106id != 0x20"
[10:15:06.568]              // =>  FALSE
[10:15:06.568]            // skip if-block "jep106id != 0x20"
[10:15:06.568]          </control>
[10:15:06.568]        </sequence>
[10:15:06.568]    </block>
[10:15:06.568]  </sequence>
[10:15:06.568]  
[10:15:06.583]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:15:06.583]  
[10:15:06.584]  <debugvars>
[10:15:06.584]    // Pre-defined
[10:15:06.584]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:06.584]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:15:06.584]    __dp=0x00000000
[10:15:06.584]    __ap=0x00000000
[10:15:06.584]    __traceout=0x00000001      (SWO Trace)
[10:15:06.585]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:06.585]    __FlashAddr=0x00000000
[10:15:06.585]    __FlashLen=0x00000000
[10:15:06.585]    __FlashArg=0x00000000
[10:15:06.585]    __FlashOp=0x00000000
[10:15:06.585]    __Result=0x00000000
[10:15:06.585]    
[10:15:06.585]    // User-defined
[10:15:06.585]    DbgMCU_CR=0x00000007
[10:15:06.585]    DbgMCU_APB1_Fz=0x00000000
[10:15:06.586]    DbgMCU_APB2_Fz=0x00000000
[10:15:06.586]    TraceClk_Pin=0x00040002
[10:15:06.586]    TraceD0_Pin=0x00040003
[10:15:06.586]    TraceD1_Pin=0x00040004
[10:15:06.586]    TraceD2_Pin=0x00040005
[10:15:06.586]    TraceD3_Pin=0x00040006
[10:15:06.586]  </debugvars>
[10:15:06.586]  
[10:15:06.586]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:15:06.587]    <block atomic="false" info="">
[10:15:06.587]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:15:06.587]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.587]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:15:06.588]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.588]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:15:06.588]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.588]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:15:06.589]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:06.589]    </block>
[10:15:06.589]  </sequence>
[10:15:06.589]  
[10:15:37.504]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:15:37.504]  
[10:15:37.504]  <debugvars>
[10:15:37.504]    // Pre-defined
[10:15:37.505]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:37.505]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:15:37.505]    __dp=0x00000000
[10:15:37.505]    __ap=0x00000000
[10:15:37.505]    __traceout=0x00000001      (SWO Trace)
[10:15:37.505]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:37.506]    __FlashAddr=0x00000000
[10:15:37.506]    __FlashLen=0x00000000
[10:15:37.506]    __FlashArg=0x00000000
[10:15:37.506]    __FlashOp=0x00000000
[10:15:37.506]    __Result=0x00000000
[10:15:37.506]    
[10:15:37.506]    // User-defined
[10:15:37.507]    DbgMCU_CR=0x00000007
[10:15:37.507]    DbgMCU_APB1_Fz=0x00000000
[10:15:37.507]    DbgMCU_APB2_Fz=0x00000000
[10:15:37.507]    TraceClk_Pin=0x00040002
[10:15:37.507]    TraceD0_Pin=0x00040003
[10:15:37.507]    TraceD1_Pin=0x00040004
[10:15:37.508]    TraceD2_Pin=0x00040005
[10:15:37.508]    TraceD3_Pin=0x00040006
[10:15:37.508]  </debugvars>
[10:15:37.508]  
[10:15:37.508]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:15:37.508]    <block atomic="false" info="">
[10:15:37.508]      Sequence("CheckID");
[10:15:37.509]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:15:37.509]          <block atomic="false" info="">
[10:15:37.509]            __var pidr1 = 0;
[10:15:37.509]              // -> [pidr1 <= 0x00000000]
[10:15:37.509]            __var pidr2 = 0;
[10:15:37.509]              // -> [pidr2 <= 0x00000000]
[10:15:37.510]            __var jep106id = 0;
[10:15:37.510]              // -> [jep106id <= 0x00000000]
[10:15:37.510]            __var ROMTableBase = 0;
[10:15:37.510]              // -> [ROMTableBase <= 0x00000000]
[10:15:37.510]            __ap = 0;      // AHB-AP
[10:15:37.510]              // -> [__ap <= 0x00000000]
[10:15:37.510]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:15:37.511]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.511]              // -> [ROMTableBase <= 0xE00FD000]
[10:15:37.511]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:15:37.512]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.512]              // -> [pidr1 <= 0x00000004]
[10:15:37.512]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:15:37.512]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.512]              // -> [pidr2 <= 0x0000001A]
[10:15:37.513]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:15:37.513]              // -> [jep106id <= 0x00000020]
[10:15:37.513]          </block>
[10:15:37.513]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:15:37.513]            // if-block "jep106id != 0x20"
[10:15:37.513]              // =>  FALSE
[10:15:37.514]            // skip if-block "jep106id != 0x20"
[10:15:37.514]          </control>
[10:15:37.514]        </sequence>
[10:15:37.514]    </block>
[10:15:37.514]  </sequence>
[10:15:37.514]  
[10:15:37.529]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:15:37.529]  
[10:15:37.530]  <debugvars>
[10:15:37.530]    // Pre-defined
[10:15:37.530]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:37.530]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:15:37.530]    __dp=0x00000000
[10:15:37.530]    __ap=0x00000000
[10:15:37.531]    __traceout=0x00000001      (SWO Trace)
[10:15:37.531]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:37.531]    __FlashAddr=0x00000000
[10:15:37.531]    __FlashLen=0x00000000
[10:15:37.531]    __FlashArg=0x00000000
[10:15:37.531]    __FlashOp=0x00000000
[10:15:37.531]    __Result=0x00000000
[10:15:37.531]    
[10:15:37.531]    // User-defined
[10:15:37.531]    DbgMCU_CR=0x00000007
[10:15:37.532]    DbgMCU_APB1_Fz=0x00000000
[10:15:37.532]    DbgMCU_APB2_Fz=0x00000000
[10:15:37.532]    TraceClk_Pin=0x00040002
[10:15:37.532]    TraceD0_Pin=0x00040003
[10:15:37.532]    TraceD1_Pin=0x00040004
[10:15:37.532]    TraceD2_Pin=0x00040005
[10:15:37.532]    TraceD3_Pin=0x00040006
[10:15:37.532]  </debugvars>
[10:15:37.533]  
[10:15:37.533]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:15:37.533]    <block atomic="false" info="">
[10:15:37.533]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:15:37.533]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.533]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:15:37.534]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.534]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:15:37.534]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.535]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:15:37.535]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.535]    </block>
[10:15:37.536]  </sequence>
[10:15:37.536]  
[10:15:37.552]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:15:37.552]  
[10:15:37.552]  <debugvars>
[10:15:37.552]    // Pre-defined
[10:15:37.552]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:37.552]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:15:37.553]    __dp=0x00000000
[10:15:37.553]    __ap=0x00000000
[10:15:37.553]    __traceout=0x00000001      (SWO Trace)
[10:15:37.553]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:37.553]    __FlashAddr=0x00000000
[10:15:37.553]    __FlashLen=0x00000000
[10:15:37.553]    __FlashArg=0x00000000
[10:15:37.554]    __FlashOp=0x00000000
[10:15:37.554]    __Result=0x00000000
[10:15:37.554]    
[10:15:37.554]    // User-defined
[10:15:37.554]    DbgMCU_CR=0x00000007
[10:15:37.554]    DbgMCU_APB1_Fz=0x00000000
[10:15:37.554]    DbgMCU_APB2_Fz=0x00000000
[10:15:37.555]    TraceClk_Pin=0x00040002
[10:15:37.555]    TraceD0_Pin=0x00040003
[10:15:37.555]    TraceD1_Pin=0x00040004
[10:15:37.555]    TraceD2_Pin=0x00040005
[10:15:37.555]    TraceD3_Pin=0x00040006
[10:15:37.555]  </debugvars>
[10:15:37.555]  
[10:15:37.555]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:15:37.556]    <block atomic="false" info="">
[10:15:37.556]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:15:37.556]        // -> [traceSWO <= 0x00000001]
[10:15:37.556]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:15:37.556]        // -> [traceTPIU <= 0x00000000]
[10:15:37.556]    </block>
[10:15:37.556]    <control if="traceSWO" while="" timeout="0" info="">
[10:15:37.557]      // if-block "traceSWO"
[10:15:37.557]        // =>  TRUE
[10:15:37.557]      <block atomic="false" info="">
[10:15:37.557]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:15:37.557]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:15:37.557]            <block atomic="false" info="">
[10:15:37.557]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:15:37.558]                // -> [dbgmcu_val <= 0x00000000]
[10:15:37.558]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:15:37.558]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:15:37.558]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:15:37.558]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.558]                // -> [dbgmcu_val <= 0x00000007]
[10:15:37.559]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:15:37.559]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:15:37.559]              Sequence("ConfigureTraceSWOPin");
[10:15:37.559]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:15:37.559]                  <block atomic="false" info="">
[10:15:37.559]                    __var pin     = 0;
[10:15:37.559]                      // -> [pin <= 0x00000000]
[10:15:37.559]                    __var port    = 0;
[10:15:37.559]                      // -> [port <= 0x00000000]
[10:15:37.560]                    __var portAdr = 0;
[10:15:37.560]                      // -> [portAdr <= 0x00000000]
[10:15:37.560]                    __var pos     = 0;
[10:15:37.560]                      // -> [pos <= 0x00000000]
[10:15:37.560]                    __var SWO_Pin = 0x00010003;          // PB3
[10:15:37.560]                      // -> [SWO_Pin <= 0x00010003]
[10:15:37.560]                  </block>
[10:15:37.560]                  <block atomic="false" info="configure SWO">
[10:15:37.560]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:15:37.561]                      // -> [pin <= 0x00000003]
[10:15:37.561]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:15:37.561]                      // -> [port <= 0x00000001]
[10:15:37.561]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:15:37.561]                      // -> [portAdr <= 0x40020400]
[10:15:37.561]                    pos = pin * 2;
[10:15:37.561]                      // -> [pos <= 0x00000006]
[10:15:37.561]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:15:37.562]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.562]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.562]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:15:37.563]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.563]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.563]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:15:37.564]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.564]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.564]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:15:37.565]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.565]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.565]                  </block>
[10:15:37.565]                  <control if="pin <  8" while="" timeout="0" info="">
[10:15:37.566]                    // if-block "pin <  8"
[10:15:37.566]                      // =>  TRUE
[10:15:37.566]                    <block atomic="false" info="">
[10:15:37.566]                      pos = ((pin    ) & 7) * 4;
[10:15:37.566]                        // -> [pos <= 0x0000000C]
[10:15:37.566]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:15:37.567]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.567]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.567]                    </block>
[10:15:37.567]                    // end if-block "pin <  8"
[10:15:37.567]                  </control>
[10:15:37.567]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:15:37.567]                    // if-block "pin >= 8"
[10:15:37.568]                      // =>  FALSE
[10:15:37.568]                    // skip if-block "pin >= 8"
[10:15:37.568]                  </control>
[10:15:37.568]                </sequence>
[10:15:37.568]            </block>
[10:15:37.568]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:15:37.568]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:15:37.569]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.569]            </block>
[10:15:37.569]          </sequence>
[10:15:37.569]      </block>
[10:15:37.569]      // end if-block "traceSWO"
[10:15:37.569]    </control>
[10:15:37.569]    <control if="traceTPIU" while="" timeout="0" info="">
[10:15:37.570]      // if-block "traceTPIU"
[10:15:37.570]        // =>  FALSE
[10:15:37.570]      // skip if-block "traceTPIU"
[10:15:37.570]    </control>
[10:15:37.570]  </sequence>
[10:15:37.570]  
[10:15:37.574]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:15:37.574]  
[10:15:37.574]  <debugvars>
[10:15:37.574]    // Pre-defined
[10:15:37.574]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:37.575]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:15:37.575]    __dp=0x00000000
[10:15:37.575]    __ap=0x00000000
[10:15:37.575]    __traceout=0x00000001      (SWO Trace)
[10:15:37.575]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:37.576]    __FlashAddr=0x00000000
[10:15:37.576]    __FlashLen=0x00000000
[10:15:37.576]    __FlashArg=0x00000000
[10:15:37.576]    __FlashOp=0x00000000
[10:15:37.576]    __Result=0x00000000
[10:15:37.576]    
[10:15:37.576]    // User-defined
[10:15:37.577]    DbgMCU_CR=0x00000007
[10:15:37.577]    DbgMCU_APB1_Fz=0x00000000
[10:15:37.577]    DbgMCU_APB2_Fz=0x00000000
[10:15:37.577]    TraceClk_Pin=0x00040002
[10:15:37.577]    TraceD0_Pin=0x00040003
[10:15:37.577]    TraceD1_Pin=0x00040004
[10:15:37.578]    TraceD2_Pin=0x00040005
[10:15:37.578]    TraceD3_Pin=0x00040006
[10:15:37.578]  </debugvars>
[10:15:37.578]  
[10:15:37.578]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:15:37.578]    <block atomic="false" info="">
[10:15:37.579]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:15:37.579]        // -> [traceSWO <= 0x00000001]
[10:15:37.579]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:15:37.579]        // -> [traceTPIU <= 0x00000000]
[10:15:37.579]    </block>
[10:15:37.579]    <control if="traceSWO" while="" timeout="0" info="">
[10:15:37.579]      // if-block "traceSWO"
[10:15:37.580]        // =>  TRUE
[10:15:37.580]      <block atomic="false" info="">
[10:15:37.580]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:15:37.580]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:15:37.580]            <block atomic="false" info="">
[10:15:37.580]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:15:37.580]                // -> [dbgmcu_val <= 0x00000000]
[10:15:37.580]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:15:37.580]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:15:37.580]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:15:37.580]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.580]                // -> [dbgmcu_val <= 0x00000007]
[10:15:37.580]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:15:37.580]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:15:37.581]              Sequence("ConfigureTraceSWOPin");
[10:15:37.581]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:15:37.581]                  <block atomic="false" info="">
[10:15:37.581]                    __var pin     = 0;
[10:15:37.581]                      // -> [pin <= 0x00000000]
[10:15:37.581]                    __var port    = 0;
[10:15:37.581]                      // -> [port <= 0x00000000]
[10:15:37.581]                    __var portAdr = 0;
[10:15:37.581]                      // -> [portAdr <= 0x00000000]
[10:15:37.582]                    __var pos     = 0;
[10:15:37.582]                      // -> [pos <= 0x00000000]
[10:15:37.582]                    __var SWO_Pin = 0x00010003;          // PB3
[10:15:37.582]                      // -> [SWO_Pin <= 0x00010003]
[10:15:37.582]                  </block>
[10:15:37.582]                  <block atomic="false" info="configure SWO">
[10:15:37.582]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:15:37.582]                      // -> [pin <= 0x00000003]
[10:15:37.583]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:15:37.583]                      // -> [port <= 0x00000001]
[10:15:37.583]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:15:37.583]                      // -> [portAdr <= 0x40020400]
[10:15:37.583]                    pos = pin * 2;
[10:15:37.583]                      // -> [pos <= 0x00000006]
[10:15:37.583]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:15:37.584]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.584]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.584]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:15:37.585]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.585]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.585]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:15:37.586]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.586]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.586]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:15:37.587]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.587]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.587]                  </block>
[10:15:37.587]                  <control if="pin <  8" while="" timeout="0" info="">
[10:15:37.587]                    // if-block "pin <  8"
[10:15:37.587]                      // =>  TRUE
[10:15:37.588]                    <block atomic="false" info="">
[10:15:37.588]                      pos = ((pin    ) & 7) * 4;
[10:15:37.588]                        // -> [pos <= 0x0000000C]
[10:15:37.588]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:15:37.588]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.589]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.589]                    </block>
[10:15:37.589]                    // end if-block "pin <  8"
[10:15:37.589]                  </control>
[10:15:37.589]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:15:37.589]                    // if-block "pin >= 8"
[10:15:37.589]                      // =>  FALSE
[10:15:37.590]                    // skip if-block "pin >= 8"
[10:15:37.590]                  </control>
[10:15:37.590]                </sequence>
[10:15:37.590]            </block>
[10:15:37.590]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:15:37.590]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:15:37.591]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.591]            </block>
[10:15:37.591]          </sequence>
[10:15:37.591]      </block>
[10:15:37.591]      // end if-block "traceSWO"
[10:15:37.591]    </control>
[10:15:37.592]    <control if="traceTPIU" while="" timeout="0" info="">
[10:15:37.592]      // if-block "traceTPIU"
[10:15:37.592]        // =>  FALSE
[10:15:37.592]      // skip if-block "traceTPIU"
[10:15:37.592]    </control>
[10:15:37.592]  </sequence>
[10:15:37.592]  
[10:15:37.804]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:15:37.804]  
[10:15:37.804]  <debugvars>
[10:15:37.805]    // Pre-defined
[10:15:37.805]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:15:37.805]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:15:37.805]    __dp=0x00000000
[10:15:37.805]    __ap=0x00000000
[10:15:37.805]    __traceout=0x00000001      (SWO Trace)
[10:15:37.805]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:15:37.806]    __FlashAddr=0x00000000
[10:15:37.806]    __FlashLen=0x00000000
[10:15:37.806]    __FlashArg=0x00000000
[10:15:37.806]    __FlashOp=0x00000000
[10:15:37.806]    __Result=0x00000000
[10:15:37.806]    
[10:15:37.806]    // User-defined
[10:15:37.807]    DbgMCU_CR=0x00000007
[10:15:37.807]    DbgMCU_APB1_Fz=0x00000000
[10:15:37.807]    DbgMCU_APB2_Fz=0x00000000
[10:15:37.807]    TraceClk_Pin=0x00040002
[10:15:37.807]    TraceD0_Pin=0x00040003
[10:15:37.807]    TraceD1_Pin=0x00040004
[10:15:37.807]    TraceD2_Pin=0x00040005
[10:15:37.807]    TraceD3_Pin=0x00040006
[10:15:37.808]  </debugvars>
[10:15:37.808]  
[10:15:37.808]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:15:37.808]    <block atomic="false" info="">
[10:15:37.808]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:15:37.808]        // -> [traceSWO <= 0x00000001]
[10:15:37.808]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:15:37.809]        // -> [traceTPIU <= 0x00000000]
[10:15:37.809]    </block>
[10:15:37.809]    <control if="traceSWO" while="" timeout="0" info="">
[10:15:37.809]      // if-block "traceSWO"
[10:15:37.809]        // =>  TRUE
[10:15:37.809]      <block atomic="false" info="">
[10:15:37.810]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:15:37.810]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:15:37.810]            <block atomic="false" info="">
[10:15:37.810]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:15:37.810]                // -> [dbgmcu_val <= 0x00000000]
[10:15:37.810]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:15:37.810]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:15:37.811]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:15:37.811]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.811]                // -> [dbgmcu_val <= 0x00000007]
[10:15:37.811]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:15:37.812]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:15:37.812]              Sequence("ConfigureTraceSWOPin");
[10:15:37.812]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:15:37.812]                  <block atomic="false" info="">
[10:15:37.812]                    __var pin     = 0;
[10:15:37.812]                      // -> [pin <= 0x00000000]
[10:15:37.812]                    __var port    = 0;
[10:15:37.812]                      // -> [port <= 0x00000000]
[10:15:37.812]                    __var portAdr = 0;
[10:15:37.813]                      // -> [portAdr <= 0x00000000]
[10:15:37.813]                    __var pos     = 0;
[10:15:37.813]                      // -> [pos <= 0x00000000]
[10:15:37.813]                    __var SWO_Pin = 0x00010003;          // PB3
[10:15:37.813]                      // -> [SWO_Pin <= 0x00010003]
[10:15:37.813]                  </block>
[10:15:37.813]                  <block atomic="false" info="configure SWO">
[10:15:37.813]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:15:37.814]                      // -> [pin <= 0x00000003]
[10:15:37.814]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:15:37.814]                      // -> [port <= 0x00000001]
[10:15:37.814]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:15:37.814]                      // -> [portAdr <= 0x40020400]
[10:15:37.814]                    pos = pin * 2;
[10:15:37.814]                      // -> [pos <= 0x00000006]
[10:15:37.814]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:15:37.815]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.815]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.815]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:15:37.816]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.816]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.816]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:15:37.817]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.817]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.817]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:15:37.818]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.818]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.818]                  </block>
[10:15:37.818]                  <control if="pin <  8" while="" timeout="0" info="">
[10:15:37.819]                    // if-block "pin <  8"
[10:15:37.819]                      // =>  TRUE
[10:15:37.819]                    <block atomic="false" info="">
[10:15:37.819]                      pos = ((pin    ) & 7) * 4;
[10:15:37.819]                        // -> [pos <= 0x0000000C]
[10:15:37.819]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:15:37.820]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.820]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.820]                    </block>
[10:15:37.820]                    // end if-block "pin <  8"
[10:15:37.820]                  </control>
[10:15:37.820]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:15:37.821]                    // if-block "pin >= 8"
[10:15:37.821]                      // =>  FALSE
[10:15:37.821]                    // skip if-block "pin >= 8"
[10:15:37.821]                  </control>
[10:15:37.821]                </sequence>
[10:15:37.821]            </block>
[10:15:37.821]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:15:37.821]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:15:37.822]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:15:37.822]            </block>
[10:15:37.822]          </sequence>
[10:15:37.822]      </block>
[10:15:37.822]      // end if-block "traceSWO"
[10:15:37.822]    </control>
[10:15:37.822]    <control if="traceTPIU" while="" timeout="0" info="">
[10:15:37.823]      // if-block "traceTPIU"
[10:15:37.823]        // =>  FALSE
[10:15:37.823]      // skip if-block "traceTPIU"
[10:15:37.823]    </control>
[10:15:37.823]  </sequence>
[10:15:37.823]  
[10:16:38.294]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:16:38.294]  
[10:16:38.294]  <debugvars>
[10:16:38.295]    // Pre-defined
[10:16:38.295]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:16:38.295]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:16:38.295]    __dp=0x00000000
[10:16:38.295]    __ap=0x00000000
[10:16:38.296]    __traceout=0x00000001      (SWO Trace)
[10:16:38.296]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:16:38.296]    __FlashAddr=0x00000000
[10:16:38.296]    __FlashLen=0x00000000
[10:16:38.296]    __FlashArg=0x00000000
[10:16:38.297]    __FlashOp=0x00000000
[10:16:38.297]    __Result=0x00000000
[10:16:38.297]    
[10:16:38.297]    // User-defined
[10:16:38.297]    DbgMCU_CR=0x00000007
[10:16:38.297]    DbgMCU_APB1_Fz=0x00000000
[10:16:38.297]    DbgMCU_APB2_Fz=0x00000000
[10:16:38.298]    TraceClk_Pin=0x00040002
[10:16:38.298]    TraceD0_Pin=0x00040003
[10:16:38.298]    TraceD1_Pin=0x00040004
[10:16:38.298]    TraceD2_Pin=0x00040005
[10:16:38.298]    TraceD3_Pin=0x00040006
[10:16:38.299]  </debugvars>
[10:16:38.299]  
[10:16:38.299]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:16:38.299]    <block atomic="false" info="">
[10:16:38.299]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:16:38.299]        // -> [traceSWO <= 0x00000001]
[10:16:38.300]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:16:38.300]        // -> [traceTPIU <= 0x00000000]
[10:16:38.300]    </block>
[10:16:38.300]    <control if="traceSWO" while="" timeout="0" info="">
[10:16:38.300]      // if-block "traceSWO"
[10:16:38.301]        // =>  TRUE
[10:16:38.301]      <block atomic="false" info="">
[10:16:38.301]        Sequence("DisableTraceSWO");
[10:16:38.301]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:16:38.301]            <block atomic="false" info="">
[10:16:38.301]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:16:38.302]                // -> [dbgmcu_val <= 0x00000000]
[10:16:38.302]            </block>
[10:16:38.302]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:16:38.302]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:16:38.303]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:16:38.303]                // -> [dbgmcu_val <= 0x00000007]
[10:16:38.303]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:16:38.304]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:16:38.304]            </block>
[10:16:38.304]          </sequence>
[10:16:38.304]      </block>
[10:16:38.304]      // end if-block "traceSWO"
[10:16:38.304]    </control>
[10:16:38.304]    <control if="traceTPIU" while="" timeout="0" info="">
[10:16:38.305]      // if-block "traceTPIU"
[10:16:38.305]        // =>  FALSE
[10:16:38.305]      // skip if-block "traceTPIU"
[10:16:38.305]    </control>
[10:16:38.305]  </sequence>
[10:16:38.305]  
[10:17:12.167]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:17:12.167]  
[10:17:12.168]  <debugvars>
[10:17:12.168]    // Pre-defined
[10:17:12.168]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:12.168]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:17:12.168]    __dp=0x00000000
[10:17:12.169]    __ap=0x00000000
[10:17:12.169]    __traceout=0x00000001      (SWO Trace)
[10:17:12.169]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:12.169]    __FlashAddr=0x00000000
[10:17:12.169]    __FlashLen=0x00000000
[10:17:12.169]    __FlashArg=0x00000000
[10:17:12.170]    __FlashOp=0x00000000
[10:17:12.170]    __Result=0x00000000
[10:17:12.170]    
[10:17:12.170]    // User-defined
[10:17:12.170]    DbgMCU_CR=0x00000007
[10:17:12.170]    DbgMCU_APB1_Fz=0x00000000
[10:17:12.170]    DbgMCU_APB2_Fz=0x00000000
[10:17:12.171]    TraceClk_Pin=0x00040002
[10:17:12.171]    TraceD0_Pin=0x00040003
[10:17:12.171]    TraceD1_Pin=0x00040004
[10:17:12.171]    TraceD2_Pin=0x00040005
[10:17:12.171]    TraceD3_Pin=0x00040006
[10:17:12.171]  </debugvars>
[10:17:12.172]  
[10:17:12.172]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:17:12.172]    <block atomic="false" info="">
[10:17:12.172]      Sequence("CheckID");
[10:17:12.172]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:17:12.172]          <block atomic="false" info="">
[10:17:12.173]            __var pidr1 = 0;
[10:17:12.173]              // -> [pidr1 <= 0x00000000]
[10:17:12.173]            __var pidr2 = 0;
[10:17:12.173]              // -> [pidr2 <= 0x00000000]
[10:17:12.173]            __var jep106id = 0;
[10:17:12.173]              // -> [jep106id <= 0x00000000]
[10:17:12.174]            __var ROMTableBase = 0;
[10:17:12.174]              // -> [ROMTableBase <= 0x00000000]
[10:17:12.174]            __ap = 0;      // AHB-AP
[10:17:12.174]              // -> [__ap <= 0x00000000]
[10:17:12.174]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:17:12.174]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.175]              // -> [ROMTableBase <= 0xE00FD000]
[10:17:12.175]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:17:12.175]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.176]              // -> [pidr1 <= 0x00000004]
[10:17:12.176]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:17:12.176]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.176]              // -> [pidr2 <= 0x0000001A]
[10:17:12.176]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:17:12.176]              // -> [jep106id <= 0x00000020]
[10:17:12.177]          </block>
[10:17:12.177]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:17:12.177]            // if-block "jep106id != 0x20"
[10:17:12.177]              // =>  FALSE
[10:17:12.177]            // skip if-block "jep106id != 0x20"
[10:17:12.177]          </control>
[10:17:12.177]        </sequence>
[10:17:12.178]    </block>
[10:17:12.178]  </sequence>
[10:17:12.178]  
[10:17:12.193]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:17:12.193]  
[10:17:12.193]  <debugvars>
[10:17:12.193]    // Pre-defined
[10:17:12.193]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:12.194]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:17:12.194]    __dp=0x00000000
[10:17:12.194]    __ap=0x00000000
[10:17:12.194]    __traceout=0x00000001      (SWO Trace)
[10:17:12.194]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:12.195]    __FlashAddr=0x00000000
[10:17:12.195]    __FlashLen=0x00000000
[10:17:12.195]    __FlashArg=0x00000000
[10:17:12.195]    __FlashOp=0x00000000
[10:17:12.195]    __Result=0x00000000
[10:17:12.196]    
[10:17:12.196]    // User-defined
[10:17:12.196]    DbgMCU_CR=0x00000007
[10:17:12.196]    DbgMCU_APB1_Fz=0x00000000
[10:17:12.196]    DbgMCU_APB2_Fz=0x00000000
[10:17:12.196]    TraceClk_Pin=0x00040002
[10:17:12.196]    TraceD0_Pin=0x00040003
[10:17:12.197]    TraceD1_Pin=0x00040004
[10:17:12.197]    TraceD2_Pin=0x00040005
[10:17:12.197]    TraceD3_Pin=0x00040006
[10:17:12.197]  </debugvars>
[10:17:12.197]  
[10:17:12.197]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:17:12.198]    <block atomic="false" info="">
[10:17:12.198]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:17:12.198]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.198]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:17:12.199]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.199]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:17:12.200]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.200]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:17:12.200]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:12.201]    </block>
[10:17:12.201]  </sequence>
[10:17:12.201]  
[10:17:43.015]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:17:43.015]  
[10:17:43.015]  <debugvars>
[10:17:43.015]    // Pre-defined
[10:17:43.015]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:43.015]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:17:43.015]    __dp=0x00000000
[10:17:43.016]    __ap=0x00000000
[10:17:43.016]    __traceout=0x00000001      (SWO Trace)
[10:17:43.016]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:43.016]    __FlashAddr=0x00000000
[10:17:43.016]    __FlashLen=0x00000000
[10:17:43.016]    __FlashArg=0x00000000
[10:17:43.017]    __FlashOp=0x00000000
[10:17:43.017]    __Result=0x00000000
[10:17:43.017]    
[10:17:43.017]    // User-defined
[10:17:43.017]    DbgMCU_CR=0x00000007
[10:17:43.017]    DbgMCU_APB1_Fz=0x00000000
[10:17:43.017]    DbgMCU_APB2_Fz=0x00000000
[10:17:43.018]    TraceClk_Pin=0x00040002
[10:17:43.018]    TraceD0_Pin=0x00040003
[10:17:43.018]    TraceD1_Pin=0x00040004
[10:17:43.018]    TraceD2_Pin=0x00040005
[10:17:43.018]    TraceD3_Pin=0x00040006
[10:17:43.018]  </debugvars>
[10:17:43.019]  
[10:17:43.019]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:17:43.019]    <block atomic="false" info="">
[10:17:43.019]      Sequence("CheckID");
[10:17:43.019]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:17:43.019]          <block atomic="false" info="">
[10:17:43.019]            __var pidr1 = 0;
[10:17:43.020]              // -> [pidr1 <= 0x00000000]
[10:17:43.020]            __var pidr2 = 0;
[10:17:43.020]              // -> [pidr2 <= 0x00000000]
[10:17:43.020]            __var jep106id = 0;
[10:17:43.020]              // -> [jep106id <= 0x00000000]
[10:17:43.020]            __var ROMTableBase = 0;
[10:17:43.021]              // -> [ROMTableBase <= 0x00000000]
[10:17:43.021]            __ap = 0;      // AHB-AP
[10:17:43.021]              // -> [__ap <= 0x00000000]
[10:17:43.021]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:17:43.021]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.022]              // -> [ROMTableBase <= 0xE00FD000]
[10:17:43.022]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:17:43.022]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.023]              // -> [pidr1 <= 0x00000004]
[10:17:43.023]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:17:43.023]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.023]              // -> [pidr2 <= 0x0000001A]
[10:17:43.024]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:17:43.024]              // -> [jep106id <= 0x00000020]
[10:17:43.024]          </block>
[10:17:43.024]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:17:43.024]            // if-block "jep106id != 0x20"
[10:17:43.024]              // =>  FALSE
[10:17:43.024]            // skip if-block "jep106id != 0x20"
[10:17:43.025]          </control>
[10:17:43.025]        </sequence>
[10:17:43.025]    </block>
[10:17:43.025]  </sequence>
[10:17:43.025]  
[10:17:43.040]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:17:43.040]  
[10:17:43.040]  <debugvars>
[10:17:43.040]    // Pre-defined
[10:17:43.040]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:43.040]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:17:43.040]    __dp=0x00000000
[10:17:43.041]    __ap=0x00000000
[10:17:43.041]    __traceout=0x00000001      (SWO Trace)
[10:17:43.041]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:43.041]    __FlashAddr=0x00000000
[10:17:43.041]    __FlashLen=0x00000000
[10:17:43.042]    __FlashArg=0x00000000
[10:17:43.042]    __FlashOp=0x00000000
[10:17:43.042]    __Result=0x00000000
[10:17:43.042]    
[10:17:43.042]    // User-defined
[10:17:43.042]    DbgMCU_CR=0x00000007
[10:17:43.042]    DbgMCU_APB1_Fz=0x00000000
[10:17:43.043]    DbgMCU_APB2_Fz=0x00000000
[10:17:43.043]    TraceClk_Pin=0x00040002
[10:17:43.043]    TraceD0_Pin=0x00040003
[10:17:43.043]    TraceD1_Pin=0x00040004
[10:17:43.043]    TraceD2_Pin=0x00040005
[10:17:43.043]    TraceD3_Pin=0x00040006
[10:17:43.044]  </debugvars>
[10:17:43.044]  
[10:17:43.044]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:17:43.044]    <block atomic="false" info="">
[10:17:43.044]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:17:43.045]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.045]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:17:43.045]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.046]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:17:43.046]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.046]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:17:43.047]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.047]    </block>
[10:17:43.047]  </sequence>
[10:17:43.047]  
[10:17:43.063]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:17:43.063]  
[10:17:43.063]  <debugvars>
[10:17:43.063]    // Pre-defined
[10:17:43.063]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:43.063]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:17:43.064]    __dp=0x00000000
[10:17:43.064]    __ap=0x00000000
[10:17:43.064]    __traceout=0x00000001      (SWO Trace)
[10:17:43.064]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:43.064]    __FlashAddr=0x00000000
[10:17:43.065]    __FlashLen=0x00000000
[10:17:43.065]    __FlashArg=0x00000000
[10:17:43.065]    __FlashOp=0x00000000
[10:17:43.065]    __Result=0x00000000
[10:17:43.065]    
[10:17:43.065]    // User-defined
[10:17:43.065]    DbgMCU_CR=0x00000007
[10:17:43.066]    DbgMCU_APB1_Fz=0x00000000
[10:17:43.066]    DbgMCU_APB2_Fz=0x00000000
[10:17:43.066]    TraceClk_Pin=0x00040002
[10:17:43.066]    TraceD0_Pin=0x00040003
[10:17:43.066]    TraceD1_Pin=0x00040004
[10:17:43.067]    TraceD2_Pin=0x00040005
[10:17:43.067]    TraceD3_Pin=0x00040006
[10:17:43.067]  </debugvars>
[10:17:43.067]  
[10:17:43.067]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:17:43.067]    <block atomic="false" info="">
[10:17:43.068]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:17:43.068]        // -> [traceSWO <= 0x00000001]
[10:17:43.068]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:17:43.068]        // -> [traceTPIU <= 0x00000000]
[10:17:43.068]    </block>
[10:17:43.069]    <control if="traceSWO" while="" timeout="0" info="">
[10:17:43.069]      // if-block "traceSWO"
[10:17:43.069]        // =>  TRUE
[10:17:43.069]      <block atomic="false" info="">
[10:17:43.069]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:17:43.069]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:17:43.070]            <block atomic="false" info="">
[10:17:43.070]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:17:43.070]                // -> [dbgmcu_val <= 0x00000000]
[10:17:43.070]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:17:43.070]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:17:43.070]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:17:43.071]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.071]                // -> [dbgmcu_val <= 0x00000007]
[10:17:43.071]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:17:43.072]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:17:43.072]              Sequence("ConfigureTraceSWOPin");
[10:17:43.072]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:17:43.072]                  <block atomic="false" info="">
[10:17:43.072]                    __var pin     = 0;
[10:17:43.072]                      // -> [pin <= 0x00000000]
[10:17:43.072]                    __var port    = 0;
[10:17:43.073]                      // -> [port <= 0x00000000]
[10:17:43.073]                    __var portAdr = 0;
[10:17:43.073]                      // -> [portAdr <= 0x00000000]
[10:17:43.073]                    __var pos     = 0;
[10:17:43.073]                      // -> [pos <= 0x00000000]
[10:17:43.073]                    __var SWO_Pin = 0x00010003;          // PB3
[10:17:43.073]                      // -> [SWO_Pin <= 0x00010003]
[10:17:43.074]                  </block>
[10:17:43.074]                  <block atomic="false" info="configure SWO">
[10:17:43.074]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:17:43.074]                      // -> [pin <= 0x00000003]
[10:17:43.074]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:17:43.074]                      // -> [port <= 0x00000001]
[10:17:43.074]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:17:43.075]                      // -> [portAdr <= 0x40020400]
[10:17:43.075]                    pos = pin * 2;
[10:17:43.075]                      // -> [pos <= 0x00000006]
[10:17:43.075]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:17:43.076]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.076]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.076]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:17:43.077]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.077]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.077]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:17:43.078]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.078]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.078]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:17:43.079]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.079]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.079]                  </block>
[10:17:43.079]                  <control if="pin <  8" while="" timeout="0" info="">
[10:17:43.079]                    // if-block "pin <  8"
[10:17:43.079]                      // =>  TRUE
[10:17:43.080]                    <block atomic="false" info="">
[10:17:43.080]                      pos = ((pin    ) & 7) * 4;
[10:17:43.080]                        // -> [pos <= 0x0000000C]
[10:17:43.080]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:17:43.080]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.081]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.081]                    </block>
[10:17:43.081]                    // end if-block "pin <  8"
[10:17:43.081]                  </control>
[10:17:43.081]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:17:43.081]                    // if-block "pin >= 8"
[10:17:43.081]                      // =>  FALSE
[10:17:43.081]                    // skip if-block "pin >= 8"
[10:17:43.082]                  </control>
[10:17:43.082]                </sequence>
[10:17:43.082]            </block>
[10:17:43.082]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:17:43.082]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:17:43.082]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.083]            </block>
[10:17:43.083]          </sequence>
[10:17:43.083]      </block>
[10:17:43.083]      // end if-block "traceSWO"
[10:17:43.083]    </control>
[10:17:43.083]    <control if="traceTPIU" while="" timeout="0" info="">
[10:17:43.083]      // if-block "traceTPIU"
[10:17:43.083]        // =>  FALSE
[10:17:43.084]      // skip if-block "traceTPIU"
[10:17:43.084]    </control>
[10:17:43.084]  </sequence>
[10:17:43.084]  
[10:17:43.088]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:17:43.088]  
[10:17:43.088]  <debugvars>
[10:17:43.088]    // Pre-defined
[10:17:43.088]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:43.088]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:17:43.088]    __dp=0x00000000
[10:17:43.089]    __ap=0x00000000
[10:17:43.089]    __traceout=0x00000001      (SWO Trace)
[10:17:43.089]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:43.089]    __FlashAddr=0x00000000
[10:17:43.089]    __FlashLen=0x00000000
[10:17:43.089]    __FlashArg=0x00000000
[10:17:43.090]    __FlashOp=0x00000000
[10:17:43.090]    __Result=0x00000000
[10:17:43.090]    
[10:17:43.090]    // User-defined
[10:17:43.090]    DbgMCU_CR=0x00000007
[10:17:43.090]    DbgMCU_APB1_Fz=0x00000000
[10:17:43.090]    DbgMCU_APB2_Fz=0x00000000
[10:17:43.090]    TraceClk_Pin=0x00040002
[10:17:43.091]    TraceD0_Pin=0x00040003
[10:17:43.091]    TraceD1_Pin=0x00040004
[10:17:43.091]    TraceD2_Pin=0x00040005
[10:17:43.091]    TraceD3_Pin=0x00040006
[10:17:43.091]  </debugvars>
[10:17:43.091]  
[10:17:43.091]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:17:43.092]    <block atomic="false" info="">
[10:17:43.092]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:17:43.092]        // -> [traceSWO <= 0x00000001]
[10:17:43.092]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:17:43.092]        // -> [traceTPIU <= 0x00000000]
[10:17:43.092]    </block>
[10:17:43.092]    <control if="traceSWO" while="" timeout="0" info="">
[10:17:43.093]      // if-block "traceSWO"
[10:17:43.093]        // =>  TRUE
[10:17:43.093]      <block atomic="false" info="">
[10:17:43.093]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:17:43.093]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:17:43.093]            <block atomic="false" info="">
[10:17:43.093]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:17:43.093]                // -> [dbgmcu_val <= 0x00000000]
[10:17:43.093]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:17:43.094]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:17:43.094]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:17:43.094]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.094]                // -> [dbgmcu_val <= 0x00000007]
[10:17:43.094]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:17:43.095]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:17:43.095]              Sequence("ConfigureTraceSWOPin");
[10:17:43.095]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:17:43.095]                  <block atomic="false" info="">
[10:17:43.095]                    __var pin     = 0;
[10:17:43.095]                      // -> [pin <= 0x00000000]
[10:17:43.095]                    __var port    = 0;
[10:17:43.095]                      // -> [port <= 0x00000000]
[10:17:43.095]                    __var portAdr = 0;
[10:17:43.096]                      // -> [portAdr <= 0x00000000]
[10:17:43.096]                    __var pos     = 0;
[10:17:43.096]                      // -> [pos <= 0x00000000]
[10:17:43.096]                    __var SWO_Pin = 0x00010003;          // PB3
[10:17:43.096]                      // -> [SWO_Pin <= 0x00010003]
[10:17:43.096]                  </block>
[10:17:43.096]                  <block atomic="false" info="configure SWO">
[10:17:43.096]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:17:43.096]                      // -> [pin <= 0x00000003]
[10:17:43.097]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:17:43.097]                      // -> [port <= 0x00000001]
[10:17:43.097]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:17:43.097]                      // -> [portAdr <= 0x40020400]
[10:17:43.097]                    pos = pin * 2;
[10:17:43.097]                      // -> [pos <= 0x00000006]
[10:17:43.097]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:17:43.098]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.098]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.098]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:17:43.099]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.099]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.099]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:17:43.100]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.100]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.100]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:17:43.101]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.101]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.101]                  </block>
[10:17:43.101]                  <control if="pin <  8" while="" timeout="0" info="">
[10:17:43.101]                    // if-block "pin <  8"
[10:17:43.102]                      // =>  TRUE
[10:17:43.102]                    <block atomic="false" info="">
[10:17:43.102]                      pos = ((pin    ) & 7) * 4;
[10:17:43.102]                        // -> [pos <= 0x0000000C]
[10:17:43.102]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:17:43.102]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.103]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.103]                    </block>
[10:17:43.103]                    // end if-block "pin <  8"
[10:17:43.103]                  </control>
[10:17:43.103]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:17:43.103]                    // if-block "pin >= 8"
[10:17:43.104]                      // =>  FALSE
[10:17:43.104]                    // skip if-block "pin >= 8"
[10:17:43.104]                  </control>
[10:17:43.104]                </sequence>
[10:17:43.104]            </block>
[10:17:43.104]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:17:43.104]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:17:43.105]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.105]            </block>
[10:17:43.105]          </sequence>
[10:17:43.105]      </block>
[10:17:43.105]      // end if-block "traceSWO"
[10:17:43.105]    </control>
[10:17:43.105]    <control if="traceTPIU" while="" timeout="0" info="">
[10:17:43.106]      // if-block "traceTPIU"
[10:17:43.106]        // =>  FALSE
[10:17:43.106]      // skip if-block "traceTPIU"
[10:17:43.106]    </control>
[10:17:43.106]  </sequence>
[10:17:43.106]  
[10:17:43.319]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:17:43.319]  
[10:17:43.319]  <debugvars>
[10:17:43.319]    // Pre-defined
[10:17:43.320]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:17:43.320]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:17:43.320]    __dp=0x00000000
[10:17:43.320]    __ap=0x00000000
[10:17:43.320]    __traceout=0x00000001      (SWO Trace)
[10:17:43.320]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:17:43.321]    __FlashAddr=0x00000000
[10:17:43.321]    __FlashLen=0x00000000
[10:17:43.321]    __FlashArg=0x00000000
[10:17:43.321]    __FlashOp=0x00000000
[10:17:43.321]    __Result=0x00000000
[10:17:43.321]    
[10:17:43.321]    // User-defined
[10:17:43.322]    DbgMCU_CR=0x00000007
[10:17:43.322]    DbgMCU_APB1_Fz=0x00000000
[10:17:43.322]    DbgMCU_APB2_Fz=0x00000000
[10:17:43.322]    TraceClk_Pin=0x00040002
[10:17:43.322]    TraceD0_Pin=0x00040003
[10:17:43.322]    TraceD1_Pin=0x00040004
[10:17:43.323]    TraceD2_Pin=0x00040005
[10:17:43.323]    TraceD3_Pin=0x00040006
[10:17:43.323]  </debugvars>
[10:17:43.323]  
[10:17:43.323]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:17:43.323]    <block atomic="false" info="">
[10:17:43.324]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:17:43.324]        // -> [traceSWO <= 0x00000001]
[10:17:43.324]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:17:43.324]        // -> [traceTPIU <= 0x00000000]
[10:17:43.324]    </block>
[10:17:43.324]    <control if="traceSWO" while="" timeout="0" info="">
[10:17:43.325]      // if-block "traceSWO"
[10:17:43.325]        // =>  TRUE
[10:17:43.325]      <block atomic="false" info="">
[10:17:43.325]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:17:43.325]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:17:43.325]            <block atomic="false" info="">
[10:17:43.325]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:17:43.326]                // -> [dbgmcu_val <= 0x00000000]
[10:17:43.326]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:17:43.326]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:17:43.326]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:17:43.326]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.327]                // -> [dbgmcu_val <= 0x00000007]
[10:17:43.327]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:17:43.327]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:17:43.327]              Sequence("ConfigureTraceSWOPin");
[10:17:43.327]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:17:43.327]                  <block atomic="false" info="">
[10:17:43.327]                    __var pin     = 0;
[10:17:43.328]                      // -> [pin <= 0x00000000]
[10:17:43.328]                    __var port    = 0;
[10:17:43.328]                      // -> [port <= 0x00000000]
[10:17:43.328]                    __var portAdr = 0;
[10:17:43.328]                      // -> [portAdr <= 0x00000000]
[10:17:43.328]                    __var pos     = 0;
[10:17:43.328]                      // -> [pos <= 0x00000000]
[10:17:43.328]                    __var SWO_Pin = 0x00010003;          // PB3
[10:17:43.328]                      // -> [SWO_Pin <= 0x00010003]
[10:17:43.329]                  </block>
[10:17:43.329]                  <block atomic="false" info="configure SWO">
[10:17:43.329]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:17:43.329]                      // -> [pin <= 0x00000003]
[10:17:43.329]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:17:43.329]                      // -> [port <= 0x00000001]
[10:17:43.329]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:17:43.329]                      // -> [portAdr <= 0x40020400]
[10:17:43.329]                    pos = pin * 2;
[10:17:43.330]                      // -> [pos <= 0x00000006]
[10:17:43.330]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:17:43.330]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.331]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.331]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:17:43.331]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.332]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.332]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:17:43.332]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.333]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.333]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:17:43.333]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.334]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.334]                  </block>
[10:17:43.334]                  <control if="pin <  8" while="" timeout="0" info="">
[10:17:43.334]                    // if-block "pin <  8"
[10:17:43.334]                      // =>  TRUE
[10:17:43.334]                    <block atomic="false" info="">
[10:17:43.334]                      pos = ((pin    ) & 7) * 4;
[10:17:43.334]                        // -> [pos <= 0x0000000C]
[10:17:43.334]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:17:43.335]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.335]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.335]                    </block>
[10:17:43.335]                    // end if-block "pin <  8"
[10:17:43.336]                  </control>
[10:17:43.336]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:17:43.336]                    // if-block "pin >= 8"
[10:17:43.336]                      // =>  FALSE
[10:17:43.336]                    // skip if-block "pin >= 8"
[10:17:43.336]                  </control>
[10:17:43.336]                </sequence>
[10:17:43.336]            </block>
[10:17:43.336]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:17:43.337]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:17:43.337]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:17:43.337]            </block>
[10:17:43.337]          </sequence>
[10:17:43.337]      </block>
[10:17:43.337]      // end if-block "traceSWO"
[10:17:43.338]    </control>
[10:17:43.338]    <control if="traceTPIU" while="" timeout="0" info="">
[10:17:43.338]      // if-block "traceTPIU"
[10:17:43.338]        // =>  FALSE
[10:17:43.338]      // skip if-block "traceTPIU"
[10:17:43.338]    </control>
[10:17:43.338]  </sequence>
[10:17:43.338]  
[10:25:08.971]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:25:08.971]  
[10:25:08.972]  <debugvars>
[10:25:08.972]    // Pre-defined
[10:25:08.972]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:25:08.972]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:25:08.973]    __dp=0x00000000
[10:25:08.973]    __ap=0x00000000
[10:25:08.973]    __traceout=0x00000001      (SWO Trace)
[10:25:08.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:25:08.973]    __FlashAddr=0x00000000
[10:25:08.974]    __FlashLen=0x00000000
[10:25:08.974]    __FlashArg=0x00000000
[10:25:08.974]    __FlashOp=0x00000000
[10:25:08.974]    __Result=0x00000000
[10:25:08.974]    
[10:25:08.974]    // User-defined
[10:25:08.974]    DbgMCU_CR=0x00000007
[10:25:08.974]    DbgMCU_APB1_Fz=0x00000000
[10:25:08.975]    DbgMCU_APB2_Fz=0x00000000
[10:25:08.975]    TraceClk_Pin=0x00040002
[10:25:08.975]    TraceD0_Pin=0x00040003
[10:25:08.975]    TraceD1_Pin=0x00040004
[10:25:08.975]    TraceD2_Pin=0x00040005
[10:25:08.975]    TraceD3_Pin=0x00040006
[10:25:08.975]  </debugvars>
[10:25:08.975]  
[10:25:08.975]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:25:08.976]    <block atomic="false" info="">
[10:25:08.976]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:25:08.976]        // -> [traceSWO <= 0x00000001]
[10:25:08.976]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:25:08.976]        // -> [traceTPIU <= 0x00000000]
[10:25:08.976]    </block>
[10:25:08.976]    <control if="traceSWO" while="" timeout="0" info="">
[10:25:08.977]      // if-block "traceSWO"
[10:25:08.977]        // =>  TRUE
[10:25:08.977]      <block atomic="false" info="">
[10:25:08.977]        Sequence("DisableTraceSWO");
[10:25:08.977]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:25:08.977]            <block atomic="false" info="">
[10:25:08.977]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:25:08.977]                // -> [dbgmcu_val <= 0x00000000]
[10:25:08.977]            </block>
[10:25:08.978]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:25:08.978]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:25:08.978]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:25:08.978]                // -> [dbgmcu_val <= 0x00000007]
[10:25:08.978]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:25:08.979]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:25:08.979]            </block>
[10:25:08.979]          </sequence>
[10:25:08.979]      </block>
[10:25:08.979]      // end if-block "traceSWO"
[10:25:08.979]    </control>
[10:25:08.979]    <control if="traceTPIU" while="" timeout="0" info="">
[10:25:08.980]      // if-block "traceTPIU"
[10:25:08.980]        // =>  FALSE
[10:25:08.980]      // skip if-block "traceTPIU"
[10:25:08.980]    </control>
[10:25:08.980]  </sequence>
[10:25:08.980]  
[10:27:29.812]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:27:29.812]  
[10:27:29.813]  <debugvars>
[10:27:29.813]    // Pre-defined
[10:27:29.813]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:27:29.813]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:27:29.813]    __dp=0x00000000
[10:27:29.814]    __ap=0x00000000
[10:27:29.814]    __traceout=0x00000001      (SWO Trace)
[10:27:29.814]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:27:29.814]    __FlashAddr=0x00000000
[10:27:29.814]    __FlashLen=0x00000000
[10:27:29.815]    __FlashArg=0x00000000
[10:27:29.815]    __FlashOp=0x00000000
[10:27:29.815]    __Result=0x00000000
[10:27:29.815]    
[10:27:29.815]    // User-defined
[10:27:29.815]    DbgMCU_CR=0x00000007
[10:27:29.816]    DbgMCU_APB1_Fz=0x00000000
[10:27:29.816]    DbgMCU_APB2_Fz=0x00000000
[10:27:29.816]    TraceClk_Pin=0x00040002
[10:27:29.816]    TraceD0_Pin=0x00040003
[10:27:29.816]    TraceD1_Pin=0x00040004
[10:27:29.856]    TraceD2_Pin=0x00040005
[10:27:29.856]    TraceD3_Pin=0x00040006
[10:27:29.856]  </debugvars>
[10:27:29.856]  
[10:27:29.856]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:27:29.856]    <block atomic="false" info="">
[10:27:29.857]      Sequence("CheckID");
[10:27:29.857]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:27:29.857]          <block atomic="false" info="">
[10:27:29.857]            __var pidr1 = 0;
[10:27:29.858]              // -> [pidr1 <= 0x00000000]
[10:27:29.858]            __var pidr2 = 0;
[10:27:29.858]              // -> [pidr2 <= 0x00000000]
[10:27:29.858]            __var jep106id = 0;
[10:27:29.858]              // -> [jep106id <= 0x00000000]
[10:27:29.859]            __var ROMTableBase = 0;
[10:27:29.859]              // -> [ROMTableBase <= 0x00000000]
[10:27:29.859]            __ap = 0;      // AHB-AP
[10:27:29.859]              // -> [__ap <= 0x00000000]
[10:27:29.859]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:27:29.860]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.860]              // -> [ROMTableBase <= 0xE00FD000]
[10:27:29.860]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:27:29.861]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.861]              // -> [pidr1 <= 0x00000004]
[10:27:29.861]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:27:29.862]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.862]              // -> [pidr2 <= 0x0000001A]
[10:27:29.862]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:27:29.862]              // -> [jep106id <= 0x00000020]
[10:27:29.863]          </block>
[10:27:29.863]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:27:29.863]            // if-block "jep106id != 0x20"
[10:27:29.863]              // =>  FALSE
[10:27:29.863]            // skip if-block "jep106id != 0x20"
[10:27:29.863]          </control>
[10:27:29.864]        </sequence>
[10:27:29.864]    </block>
[10:27:29.864]  </sequence>
[10:27:29.864]  
[10:27:29.879]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:27:29.879]  
[10:27:29.879]  <debugvars>
[10:27:29.879]    // Pre-defined
[10:27:29.879]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:27:29.880]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:27:29.880]    __dp=0x00000000
[10:27:29.880]    __ap=0x00000000
[10:27:29.880]    __traceout=0x00000001      (SWO Trace)
[10:27:29.880]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:27:29.880]    __FlashAddr=0x00000000
[10:27:29.881]    __FlashLen=0x00000000
[10:27:29.881]    __FlashArg=0x00000000
[10:27:29.881]    __FlashOp=0x00000000
[10:27:29.881]    __Result=0x00000000
[10:27:29.881]    
[10:27:29.881]    // User-defined
[10:27:29.881]    DbgMCU_CR=0x00000007
[10:27:29.881]    DbgMCU_APB1_Fz=0x00000000
[10:27:29.882]    DbgMCU_APB2_Fz=0x00000000
[10:27:29.882]    TraceClk_Pin=0x00040002
[10:27:29.882]    TraceD0_Pin=0x00040003
[10:27:29.882]    TraceD1_Pin=0x00040004
[10:27:29.882]    TraceD2_Pin=0x00040005
[10:27:29.882]    TraceD3_Pin=0x00040006
[10:27:29.882]  </debugvars>
[10:27:29.883]  
[10:27:29.883]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:27:29.883]    <block atomic="false" info="">
[10:27:29.883]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:27:29.884]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.884]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:27:29.884]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.884]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:27:29.885]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.885]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:27:29.885]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:27:29.886]    </block>
[10:27:29.886]  </sequence>
[10:27:29.886]  
[10:28:00.740]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:28:00.740]  
[10:28:00.740]  <debugvars>
[10:28:00.740]    // Pre-defined
[10:28:00.740]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:28:00.740]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:28:00.741]    __dp=0x00000000
[10:28:00.741]    __ap=0x00000000
[10:28:00.741]    __traceout=0x00000001      (SWO Trace)
[10:28:00.741]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:28:00.741]    __FlashAddr=0x00000000
[10:28:00.741]    __FlashLen=0x00000000
[10:28:00.741]    __FlashArg=0x00000000
[10:28:00.741]    __FlashOp=0x00000000
[10:28:00.742]    __Result=0x00000000
[10:28:00.742]    
[10:28:00.742]    // User-defined
[10:28:00.742]    DbgMCU_CR=0x00000007
[10:28:00.742]    DbgMCU_APB1_Fz=0x00000000
[10:28:00.742]    DbgMCU_APB2_Fz=0x00000000
[10:28:00.742]    TraceClk_Pin=0x00040002
[10:28:00.742]    TraceD0_Pin=0x00040003
[10:28:00.742]    TraceD1_Pin=0x00040004
[10:28:00.743]    TraceD2_Pin=0x00040005
[10:28:00.743]    TraceD3_Pin=0x00040006
[10:28:00.743]  </debugvars>
[10:28:00.743]  
[10:28:00.743]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:28:00.743]    <block atomic="false" info="">
[10:28:00.743]      Sequence("CheckID");
[10:28:00.743]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:28:00.744]          <block atomic="false" info="">
[10:28:00.744]            __var pidr1 = 0;
[10:28:00.744]              // -> [pidr1 <= 0x00000000]
[10:28:00.744]            __var pidr2 = 0;
[10:28:00.744]              // -> [pidr2 <= 0x00000000]
[10:28:00.744]            __var jep106id = 0;
[10:28:00.744]              // -> [jep106id <= 0x00000000]
[10:28:00.744]            __var ROMTableBase = 0;
[10:28:00.744]              // -> [ROMTableBase <= 0x00000000]
[10:28:00.745]            __ap = 0;      // AHB-AP
[10:28:00.745]              // -> [__ap <= 0x00000000]
[10:28:00.745]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:28:00.745]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.745]              // -> [ROMTableBase <= 0xE00FD000]
[10:28:00.745]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:28:00.746]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.746]              // -> [pidr1 <= 0x00000004]
[10:28:00.746]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:28:00.746]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.747]              // -> [pidr2 <= 0x0000001A]
[10:28:00.747]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:28:00.747]              // -> [jep106id <= 0x00000020]
[10:28:00.747]          </block>
[10:28:00.747]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:28:00.747]            // if-block "jep106id != 0x20"
[10:28:00.747]              // =>  FALSE
[10:28:00.747]            // skip if-block "jep106id != 0x20"
[10:28:00.747]          </control>
[10:28:00.748]        </sequence>
[10:28:00.748]    </block>
[10:28:00.748]  </sequence>
[10:28:00.748]  
[10:28:00.762]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:28:00.762]  
[10:28:00.762]  <debugvars>
[10:28:00.762]    // Pre-defined
[10:28:00.762]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:28:00.763]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:28:00.763]    __dp=0x00000000
[10:28:00.763]    __ap=0x00000000
[10:28:00.763]    __traceout=0x00000001      (SWO Trace)
[10:28:00.763]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:28:00.763]    __FlashAddr=0x00000000
[10:28:00.763]    __FlashLen=0x00000000
[10:28:00.764]    __FlashArg=0x00000000
[10:28:00.764]    __FlashOp=0x00000000
[10:28:00.764]    __Result=0x00000000
[10:28:00.764]    
[10:28:00.764]    // User-defined
[10:28:00.764]    DbgMCU_CR=0x00000007
[10:28:00.764]    DbgMCU_APB1_Fz=0x00000000
[10:28:00.764]    DbgMCU_APB2_Fz=0x00000000
[10:28:00.764]    TraceClk_Pin=0x00040002
[10:28:00.764]    TraceD0_Pin=0x00040003
[10:28:00.765]    TraceD1_Pin=0x00040004
[10:28:00.765]    TraceD2_Pin=0x00040005
[10:28:00.765]    TraceD3_Pin=0x00040006
[10:28:00.765]  </debugvars>
[10:28:00.765]  
[10:28:00.765]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:28:00.765]    <block atomic="false" info="">
[10:28:00.765]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:28:00.766]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.766]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:28:00.767]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.767]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:28:00.767]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.767]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:28:00.768]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.768]    </block>
[10:28:00.768]  </sequence>
[10:28:00.768]  
[10:28:00.784]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:28:00.784]  
[10:28:00.785]  <debugvars>
[10:28:00.785]    // Pre-defined
[10:28:00.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:28:00.785]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:28:00.785]    __dp=0x00000000
[10:28:00.785]    __ap=0x00000000
[10:28:00.786]    __traceout=0x00000001      (SWO Trace)
[10:28:00.786]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:28:00.786]    __FlashAddr=0x00000000
[10:28:00.786]    __FlashLen=0x00000000
[10:28:00.786]    __FlashArg=0x00000000
[10:28:00.786]    __FlashOp=0x00000000
[10:28:00.786]    __Result=0x00000000
[10:28:00.786]    
[10:28:00.786]    // User-defined
[10:28:00.787]    DbgMCU_CR=0x00000007
[10:28:00.787]    DbgMCU_APB1_Fz=0x00000000
[10:28:00.787]    DbgMCU_APB2_Fz=0x00000000
[10:28:00.787]    TraceClk_Pin=0x00040002
[10:28:00.787]    TraceD0_Pin=0x00040003
[10:28:00.787]    TraceD1_Pin=0x00040004
[10:28:00.787]    TraceD2_Pin=0x00040005
[10:28:00.788]    TraceD3_Pin=0x00040006
[10:28:00.788]  </debugvars>
[10:28:00.788]  
[10:28:00.788]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:28:00.788]    <block atomic="false" info="">
[10:28:00.788]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:28:00.788]        // -> [traceSWO <= 0x00000001]
[10:28:00.788]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:28:00.789]        // -> [traceTPIU <= 0x00000000]
[10:28:00.789]    </block>
[10:28:00.789]    <control if="traceSWO" while="" timeout="0" info="">
[10:28:00.789]      // if-block "traceSWO"
[10:28:00.789]        // =>  TRUE
[10:28:00.789]      <block atomic="false" info="">
[10:28:00.789]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:28:00.789]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:28:00.790]            <block atomic="false" info="">
[10:28:00.790]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:28:00.790]                // -> [dbgmcu_val <= 0x00000000]
[10:28:00.790]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:28:00.790]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:28:00.790]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:28:00.791]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.791]                // -> [dbgmcu_val <= 0x00000007]
[10:28:00.791]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:28:00.791]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:28:00.791]              Sequence("ConfigureTraceSWOPin");
[10:28:00.791]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:28:00.791]                  <block atomic="false" info="">
[10:28:00.792]                    __var pin     = 0;
[10:28:00.792]                      // -> [pin <= 0x00000000]
[10:28:00.792]                    __var port    = 0;
[10:28:00.792]                      // -> [port <= 0x00000000]
[10:28:00.792]                    __var portAdr = 0;
[10:28:00.792]                      // -> [portAdr <= 0x00000000]
[10:28:00.792]                    __var pos     = 0;
[10:28:00.792]                      // -> [pos <= 0x00000000]
[10:28:00.792]                    __var SWO_Pin = 0x00010003;          // PB3
[10:28:00.793]                      // -> [SWO_Pin <= 0x00010003]
[10:28:00.793]                  </block>
[10:28:00.793]                  <block atomic="false" info="configure SWO">
[10:28:00.793]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:28:00.793]                      // -> [pin <= 0x00000003]
[10:28:00.793]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:28:00.793]                      // -> [port <= 0x00000001]
[10:28:00.793]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:28:00.794]                      // -> [portAdr <= 0x40020400]
[10:28:00.794]                    pos = pin * 2;
[10:28:00.794]                      // -> [pos <= 0x00000006]
[10:28:00.794]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:28:00.794]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.795]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.795]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:28:00.795]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.796]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.796]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:28:00.796]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.797]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.797]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:28:00.797]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.798]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.798]                  </block>
[10:28:00.798]                  <control if="pin <  8" while="" timeout="0" info="">
[10:28:00.798]                    // if-block "pin <  8"
[10:28:00.798]                      // =>  TRUE
[10:28:00.798]                    <block atomic="false" info="">
[10:28:00.798]                      pos = ((pin    ) & 7) * 4;
[10:28:00.798]                        // -> [pos <= 0x0000000C]
[10:28:00.799]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:28:00.799]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.800]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.800]                    </block>
[10:28:00.800]                    // end if-block "pin <  8"
[10:28:00.800]                  </control>
[10:28:00.800]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:28:00.800]                    // if-block "pin >= 8"
[10:28:00.800]                      // =>  FALSE
[10:28:00.800]                    // skip if-block "pin >= 8"
[10:28:00.800]                  </control>
[10:28:00.801]                </sequence>
[10:28:00.801]            </block>
[10:28:00.801]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:28:00.801]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:28:00.801]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.802]            </block>
[10:28:00.802]          </sequence>
[10:28:00.802]      </block>
[10:28:00.802]      // end if-block "traceSWO"
[10:28:00.802]    </control>
[10:28:00.802]    <control if="traceTPIU" while="" timeout="0" info="">
[10:28:00.802]      // if-block "traceTPIU"
[10:28:00.802]        // =>  FALSE
[10:28:00.802]      // skip if-block "traceTPIU"
[10:28:00.803]    </control>
[10:28:00.803]  </sequence>
[10:28:00.803]  
[10:28:00.806]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:28:00.806]  
[10:28:00.807]  <debugvars>
[10:28:00.807]    // Pre-defined
[10:28:00.807]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:28:00.807]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:28:00.807]    __dp=0x00000000
[10:28:00.807]    __ap=0x00000000
[10:28:00.807]    __traceout=0x00000001      (SWO Trace)
[10:28:00.807]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:28:00.808]    __FlashAddr=0x00000000
[10:28:00.808]    __FlashLen=0x00000000
[10:28:00.808]    __FlashArg=0x00000000
[10:28:00.808]    __FlashOp=0x00000000
[10:28:00.808]    __Result=0x00000000
[10:28:00.808]    
[10:28:00.808]    // User-defined
[10:28:00.808]    DbgMCU_CR=0x00000007
[10:28:00.808]    DbgMCU_APB1_Fz=0x00000000
[10:28:00.808]    DbgMCU_APB2_Fz=0x00000000
[10:28:00.809]    TraceClk_Pin=0x00040002
[10:28:00.809]    TraceD0_Pin=0x00040003
[10:28:00.809]    TraceD1_Pin=0x00040004
[10:28:00.809]    TraceD2_Pin=0x00040005
[10:28:00.809]    TraceD3_Pin=0x00040006
[10:28:00.809]  </debugvars>
[10:28:00.809]  
[10:28:00.809]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:28:00.809]    <block atomic="false" info="">
[10:28:00.810]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:28:00.810]        // -> [traceSWO <= 0x00000001]
[10:28:00.810]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:28:00.810]        // -> [traceTPIU <= 0x00000000]
[10:28:00.810]    </block>
[10:28:00.810]    <control if="traceSWO" while="" timeout="0" info="">
[10:28:00.810]      // if-block "traceSWO"
[10:28:00.810]        // =>  TRUE
[10:28:00.810]      <block atomic="false" info="">
[10:28:00.811]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:28:00.811]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:28:00.811]            <block atomic="false" info="">
[10:28:00.811]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:28:00.811]                // -> [dbgmcu_val <= 0x00000000]
[10:28:00.811]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:28:00.811]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:28:00.811]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:28:00.812]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.812]                // -> [dbgmcu_val <= 0x00000007]
[10:28:00.812]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:28:00.812]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:28:00.812]              Sequence("ConfigureTraceSWOPin");
[10:28:00.812]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:28:00.812]                  <block atomic="false" info="">
[10:28:00.813]                    __var pin     = 0;
[10:28:00.813]                      // -> [pin <= 0x00000000]
[10:28:00.813]                    __var port    = 0;
[10:28:00.813]                      // -> [port <= 0x00000000]
[10:28:00.813]                    __var portAdr = 0;
[10:28:00.813]                      // -> [portAdr <= 0x00000000]
[10:28:00.813]                    __var pos     = 0;
[10:28:00.813]                      // -> [pos <= 0x00000000]
[10:28:00.814]                    __var SWO_Pin = 0x00010003;          // PB3
[10:28:00.814]                      // -> [SWO_Pin <= 0x00010003]
[10:28:00.814]                  </block>
[10:28:00.814]                  <block atomic="false" info="configure SWO">
[10:28:00.814]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:28:00.814]                      // -> [pin <= 0x00000003]
[10:28:00.814]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:28:00.814]                      // -> [port <= 0x00000001]
[10:28:00.814]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:28:00.815]                      // -> [portAdr <= 0x40020400]
[10:28:00.815]                    pos = pin * 2;
[10:28:00.815]                      // -> [pos <= 0x00000006]
[10:28:00.815]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:28:00.815]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.816]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.816]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:28:00.816]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.817]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.817]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:28:00.817]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.818]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.818]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:28:00.818]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.819]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.819]                  </block>
[10:28:00.819]                  <control if="pin <  8" while="" timeout="0" info="">
[10:28:00.819]                    // if-block "pin <  8"
[10:28:00.819]                      // =>  TRUE
[10:28:00.819]                    <block atomic="false" info="">
[10:28:00.819]                      pos = ((pin    ) & 7) * 4;
[10:28:00.820]                        // -> [pos <= 0x0000000C]
[10:28:00.820]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:28:00.820]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.821]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.821]                    </block>
[10:28:00.821]                    // end if-block "pin <  8"
[10:28:00.821]                  </control>
[10:28:00.821]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:28:00.821]                    // if-block "pin >= 8"
[10:28:00.821]                      // =>  FALSE
[10:28:00.821]                    // skip if-block "pin >= 8"
[10:28:00.821]                  </control>
[10:28:00.822]                </sequence>
[10:28:00.822]            </block>
[10:28:00.822]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:28:00.822]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:28:00.822]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:00.822]            </block>
[10:28:00.823]          </sequence>
[10:28:00.823]      </block>
[10:28:00.823]      // end if-block "traceSWO"
[10:28:00.823]    </control>
[10:28:00.823]    <control if="traceTPIU" while="" timeout="0" info="">
[10:28:00.823]      // if-block "traceTPIU"
[10:28:00.823]        // =>  FALSE
[10:28:00.823]      // skip if-block "traceTPIU"
[10:28:00.824]    </control>
[10:28:00.824]  </sequence>
[10:28:00.824]  
[10:28:01.053]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:28:01.053]  
[10:28:01.053]  <debugvars>
[10:28:01.053]    // Pre-defined
[10:28:01.053]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:28:01.054]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:28:01.054]    __dp=0x00000000
[10:28:01.054]    __ap=0x00000000
[10:28:01.054]    __traceout=0x00000001      (SWO Trace)
[10:28:01.054]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:28:01.054]    __FlashAddr=0x00000000
[10:28:01.055]    __FlashLen=0x00000000
[10:28:01.055]    __FlashArg=0x00000000
[10:28:01.055]    __FlashOp=0x00000000
[10:28:01.055]    __Result=0x00000000
[10:28:01.055]    
[10:28:01.055]    // User-defined
[10:28:01.055]    DbgMCU_CR=0x00000007
[10:28:01.056]    DbgMCU_APB1_Fz=0x00000000
[10:28:01.056]    DbgMCU_APB2_Fz=0x00000000
[10:28:01.056]    TraceClk_Pin=0x00040002
[10:28:01.056]    TraceD0_Pin=0x00040003
[10:28:01.056]    TraceD1_Pin=0x00040004
[10:28:01.056]    TraceD2_Pin=0x00040005
[10:28:01.057]    TraceD3_Pin=0x00040006
[10:28:01.057]  </debugvars>
[10:28:01.057]  
[10:28:01.057]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:28:01.057]    <block atomic="false" info="">
[10:28:01.057]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:28:01.058]        // -> [traceSWO <= 0x00000001]
[10:28:01.058]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:28:01.058]        // -> [traceTPIU <= 0x00000000]
[10:28:01.058]    </block>
[10:28:01.058]    <control if="traceSWO" while="" timeout="0" info="">
[10:28:01.058]      // if-block "traceSWO"
[10:28:01.059]        // =>  TRUE
[10:28:01.059]      <block atomic="false" info="">
[10:28:01.059]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:28:01.059]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:28:01.059]            <block atomic="false" info="">
[10:28:01.059]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:28:01.060]                // -> [dbgmcu_val <= 0x00000000]
[10:28:01.060]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:28:01.060]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:28:01.060]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:28:01.061]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.061]                // -> [dbgmcu_val <= 0x00000007]
[10:28:01.061]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:28:01.061]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:28:01.061]              Sequence("ConfigureTraceSWOPin");
[10:28:01.061]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:28:01.062]                  <block atomic="false" info="">
[10:28:01.062]                    __var pin     = 0;
[10:28:01.062]                      // -> [pin <= 0x00000000]
[10:28:01.062]                    __var port    = 0;
[10:28:01.062]                      // -> [port <= 0x00000000]
[10:28:01.062]                    __var portAdr = 0;
[10:28:01.063]                      // -> [portAdr <= 0x00000000]
[10:28:01.063]                    __var pos     = 0;
[10:28:01.063]                      // -> [pos <= 0x00000000]
[10:28:01.063]                    __var SWO_Pin = 0x00010003;          // PB3
[10:28:01.063]                      // -> [SWO_Pin <= 0x00010003]
[10:28:01.063]                  </block>
[10:28:01.063]                  <block atomic="false" info="configure SWO">
[10:28:01.064]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:28:01.064]                      // -> [pin <= 0x00000003]
[10:28:01.064]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:28:01.064]                      // -> [port <= 0x00000001]
[10:28:01.064]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:28:01.064]                      // -> [portAdr <= 0x40020400]
[10:28:01.064]                    pos = pin * 2;
[10:28:01.064]                      // -> [pos <= 0x00000006]
[10:28:01.065]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:28:01.065]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.066]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.066]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:28:01.066]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.067]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.067]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:28:01.067]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.067]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.068]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:28:01.068]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.068]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.069]                  </block>
[10:28:01.069]                  <control if="pin <  8" while="" timeout="0" info="">
[10:28:01.069]                    // if-block "pin <  8"
[10:28:01.069]                      // =>  TRUE
[10:28:01.069]                    <block atomic="false" info="">
[10:28:01.069]                      pos = ((pin    ) & 7) * 4;
[10:28:01.069]                        // -> [pos <= 0x0000000C]
[10:28:01.069]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:28:01.070]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.070]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.070]                    </block>
[10:28:01.070]                    // end if-block "pin <  8"
[10:28:01.071]                  </control>
[10:28:01.071]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:28:01.071]                    // if-block "pin >= 8"
[10:28:01.071]                      // =>  FALSE
[10:28:01.071]                    // skip if-block "pin >= 8"
[10:28:01.071]                  </control>
[10:28:01.071]                </sequence>
[10:28:01.071]            </block>
[10:28:01.071]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:28:01.072]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:28:01.072]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:28:01.072]            </block>
[10:28:01.072]          </sequence>
[10:28:01.072]      </block>
[10:28:01.072]      // end if-block "traceSWO"
[10:28:01.073]    </control>
[10:28:01.073]    <control if="traceTPIU" while="" timeout="0" info="">
[10:28:01.073]      // if-block "traceTPIU"
[10:28:01.073]        // =>  FALSE
[10:28:01.073]      // skip if-block "traceTPIU"
[10:28:01.073]    </control>
[10:28:01.073]  </sequence>
[10:28:01.073]  
[10:29:36.544]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:29:36.544]  
[10:29:36.545]  <debugvars>
[10:29:36.545]    // Pre-defined
[10:29:36.545]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:29:36.545]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:29:36.546]    __dp=0x00000000
[10:29:36.546]    __ap=0x00000000
[10:29:36.546]    __traceout=0x00000001      (SWO Trace)
[10:29:36.546]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:29:36.546]    __FlashAddr=0x00000000
[10:29:36.547]    __FlashLen=0x00000000
[10:29:36.547]    __FlashArg=0x00000000
[10:29:36.547]    __FlashOp=0x00000000
[10:29:36.547]    __Result=0x00000000
[10:29:36.547]    
[10:29:36.547]    // User-defined
[10:29:36.548]    DbgMCU_CR=0x00000007
[10:29:36.548]    DbgMCU_APB1_Fz=0x00000000
[10:29:36.548]    DbgMCU_APB2_Fz=0x00000000
[10:29:36.548]    TraceClk_Pin=0x00040002
[10:29:36.548]    TraceD0_Pin=0x00040003
[10:29:36.549]    TraceD1_Pin=0x00040004
[10:29:36.549]    TraceD2_Pin=0x00040005
[10:29:36.549]    TraceD3_Pin=0x00040006
[10:29:36.549]  </debugvars>
[10:29:36.549]  
[10:29:36.550]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:29:36.550]    <block atomic="false" info="">
[10:29:36.550]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:29:36.550]        // -> [traceSWO <= 0x00000001]
[10:29:36.550]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:29:36.550]        // -> [traceTPIU <= 0x00000000]
[10:29:36.551]    </block>
[10:29:36.551]    <control if="traceSWO" while="" timeout="0" info="">
[10:29:36.551]      // if-block "traceSWO"
[10:29:36.551]        // =>  TRUE
[10:29:36.551]      <block atomic="false" info="">
[10:29:36.551]        Sequence("DisableTraceSWO");
[10:29:36.552]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:29:36.552]            <block atomic="false" info="">
[10:29:36.552]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:29:36.552]                // -> [dbgmcu_val <= 0x00000000]
[10:29:36.552]            </block>
[10:29:36.552]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:29:36.553]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:29:36.553]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:29:36.553]                // -> [dbgmcu_val <= 0x00000007]
[10:29:36.553]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:29:36.554]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:29:36.554]            </block>
[10:29:36.554]          </sequence>
[10:29:36.554]      </block>
[10:29:36.555]      // end if-block "traceSWO"
[10:29:36.555]    </control>
[10:29:36.555]    <control if="traceTPIU" while="" timeout="0" info="">
[10:29:36.555]      // if-block "traceTPIU"
[10:29:36.555]        // =>  FALSE
[10:29:36.555]      // skip if-block "traceTPIU"
[10:29:36.555]    </control>
[10:29:36.555]  </sequence>
[10:29:36.556]  
[10:30:58.091]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:30:58.091]  
[10:30:58.092]  <debugvars>
[10:30:58.092]    // Pre-defined
[10:30:58.092]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:30:58.092]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:30:58.092]    __dp=0x00000000
[10:30:58.093]    __ap=0x00000000
[10:30:58.093]    __traceout=0x00000001      (SWO Trace)
[10:30:58.093]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:30:58.093]    __FlashAddr=0x00000000
[10:30:58.093]    __FlashLen=0x00000000
[10:30:58.094]    __FlashArg=0x00000000
[10:30:58.094]    __FlashOp=0x00000000
[10:30:58.094]    __Result=0x00000000
[10:30:58.094]    
[10:30:58.094]    // User-defined
[10:30:58.094]    DbgMCU_CR=0x00000007
[10:30:58.094]    DbgMCU_APB1_Fz=0x00000000
[10:30:58.095]    DbgMCU_APB2_Fz=0x00000000
[10:30:58.095]    TraceClk_Pin=0x00040002
[10:30:58.095]    TraceD0_Pin=0x00040003
[10:30:58.095]    TraceD1_Pin=0x00040004
[10:30:58.095]    TraceD2_Pin=0x00040005
[10:30:58.095]    TraceD3_Pin=0x00040006
[10:30:58.096]  </debugvars>
[10:30:58.096]  
[10:30:58.096]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:30:58.096]    <block atomic="false" info="">
[10:30:58.096]      Sequence("CheckID");
[10:30:58.096]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:30:58.096]          <block atomic="false" info="">
[10:30:58.097]            __var pidr1 = 0;
[10:30:58.097]              // -> [pidr1 <= 0x00000000]
[10:30:58.097]            __var pidr2 = 0;
[10:30:58.097]              // -> [pidr2 <= 0x00000000]
[10:30:58.097]            __var jep106id = 0;
[10:30:58.097]              // -> [jep106id <= 0x00000000]
[10:30:58.098]            __var ROMTableBase = 0;
[10:30:58.098]              // -> [ROMTableBase <= 0x00000000]
[10:30:58.098]            __ap = 0;      // AHB-AP
[10:30:58.098]              // -> [__ap <= 0x00000000]
[10:30:58.098]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:30:58.098]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.099]              // -> [ROMTableBase <= 0xE00FD000]
[10:30:58.099]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:30:58.099]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.099]              // -> [pidr1 <= 0x00000004]
[10:30:58.100]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:30:58.100]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.100]              // -> [pidr2 <= 0x0000001A]
[10:30:58.101]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:30:58.101]              // -> [jep106id <= 0x00000020]
[10:30:58.101]          </block>
[10:30:58.101]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:30:58.101]            // if-block "jep106id != 0x20"
[10:30:58.101]              // =>  FALSE
[10:30:58.101]            // skip if-block "jep106id != 0x20"
[10:30:58.102]          </control>
[10:30:58.102]        </sequence>
[10:30:58.102]    </block>
[10:30:58.102]  </sequence>
[10:30:58.102]  
[10:30:58.117]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:30:58.117]  
[10:30:58.117]  <debugvars>
[10:30:58.117]    // Pre-defined
[10:30:58.117]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:30:58.118]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:30:58.118]    __dp=0x00000000
[10:30:58.118]    __ap=0x00000000
[10:30:58.118]    __traceout=0x00000001      (SWO Trace)
[10:30:58.118]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:30:58.119]    __FlashAddr=0x00000000
[10:30:58.119]    __FlashLen=0x00000000
[10:30:58.119]    __FlashArg=0x00000000
[10:30:58.119]    __FlashOp=0x00000000
[10:30:58.119]    __Result=0x00000000
[10:30:58.119]    
[10:30:58.119]    // User-defined
[10:30:58.120]    DbgMCU_CR=0x00000007
[10:30:58.120]    DbgMCU_APB1_Fz=0x00000000
[10:30:58.120]    DbgMCU_APB2_Fz=0x00000000
[10:30:58.120]    TraceClk_Pin=0x00040002
[10:30:58.120]    TraceD0_Pin=0x00040003
[10:30:58.120]    TraceD1_Pin=0x00040004
[10:30:58.121]    TraceD2_Pin=0x00040005
[10:30:58.121]    TraceD3_Pin=0x00040006
[10:30:58.121]  </debugvars>
[10:30:58.121]  
[10:30:58.121]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:30:58.121]    <block atomic="false" info="">
[10:30:58.122]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:30:58.122]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.122]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:30:58.123]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.123]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:30:58.124]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.124]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:30:58.124]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:30:58.125]    </block>
[10:30:58.125]  </sequence>
[10:30:58.125]  
[10:31:29.011]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:31:29.011]  
[10:31:29.011]  <debugvars>
[10:31:29.011]    // Pre-defined
[10:31:29.011]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:31:29.012]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:31:29.012]    __dp=0x00000000
[10:31:29.012]    __ap=0x00000000
[10:31:29.012]    __traceout=0x00000001      (SWO Trace)
[10:31:29.012]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:31:29.012]    __FlashAddr=0x00000000
[10:31:29.013]    __FlashLen=0x00000000
[10:31:29.013]    __FlashArg=0x00000000
[10:31:29.013]    __FlashOp=0x00000000
[10:31:29.013]    __Result=0x00000000
[10:31:29.013]    
[10:31:29.013]    // User-defined
[10:31:29.014]    DbgMCU_CR=0x00000007
[10:31:29.014]    DbgMCU_APB1_Fz=0x00000000
[10:31:29.014]    DbgMCU_APB2_Fz=0x00000000
[10:31:29.014]    TraceClk_Pin=0x00040002
[10:31:29.014]    TraceD0_Pin=0x00040003
[10:31:29.014]    TraceD1_Pin=0x00040004
[10:31:29.015]    TraceD2_Pin=0x00040005
[10:31:29.015]    TraceD3_Pin=0x00040006
[10:31:29.015]  </debugvars>
[10:31:29.015]  
[10:31:29.015]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:31:29.015]    <block atomic="false" info="">
[10:31:29.015]      Sequence("CheckID");
[10:31:29.016]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:31:29.016]          <block atomic="false" info="">
[10:31:29.016]            __var pidr1 = 0;
[10:31:29.016]              // -> [pidr1 <= 0x00000000]
[10:31:29.016]            __var pidr2 = 0;
[10:31:29.016]              // -> [pidr2 <= 0x00000000]
[10:31:29.017]            __var jep106id = 0;
[10:31:29.017]              // -> [jep106id <= 0x00000000]
[10:31:29.017]            __var ROMTableBase = 0;
[10:31:29.017]              // -> [ROMTableBase <= 0x00000000]
[10:31:29.017]            __ap = 0;      // AHB-AP
[10:31:29.017]              // -> [__ap <= 0x00000000]
[10:31:29.018]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:31:29.018]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.018]              // -> [ROMTableBase <= 0xE00FD000]
[10:31:29.018]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:31:29.019]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.019]              // -> [pidr1 <= 0x00000004]
[10:31:29.019]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:31:29.020]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.020]              // -> [pidr2 <= 0x0000001A]
[10:31:29.020]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:31:29.020]              // -> [jep106id <= 0x00000020]
[10:31:29.020]          </block>
[10:31:29.020]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:31:29.020]            // if-block "jep106id != 0x20"
[10:31:29.020]              // =>  FALSE
[10:31:29.020]            // skip if-block "jep106id != 0x20"
[10:31:29.021]          </control>
[10:31:29.021]        </sequence>
[10:31:29.021]    </block>
[10:31:29.021]  </sequence>
[10:31:29.021]  
[10:31:29.036]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:31:29.036]  
[10:31:29.036]  <debugvars>
[10:31:29.036]    // Pre-defined
[10:31:29.036]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:31:29.036]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:31:29.037]    __dp=0x00000000
[10:31:29.037]    __ap=0x00000000
[10:31:29.037]    __traceout=0x00000001      (SWO Trace)
[10:31:29.037]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:31:29.037]    __FlashAddr=0x00000000
[10:31:29.037]    __FlashLen=0x00000000
[10:31:29.038]    __FlashArg=0x00000000
[10:31:29.038]    __FlashOp=0x00000000
[10:31:29.038]    __Result=0x00000000
[10:31:29.038]    
[10:31:29.038]    // User-defined
[10:31:29.038]    DbgMCU_CR=0x00000007
[10:31:29.038]    DbgMCU_APB1_Fz=0x00000000
[10:31:29.038]    DbgMCU_APB2_Fz=0x00000000
[10:31:29.038]    TraceClk_Pin=0x00040002
[10:31:29.039]    TraceD0_Pin=0x00040003
[10:31:29.039]    TraceD1_Pin=0x00040004
[10:31:29.039]    TraceD2_Pin=0x00040005
[10:31:29.039]    TraceD3_Pin=0x00040006
[10:31:29.039]  </debugvars>
[10:31:29.039]  
[10:31:29.039]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:31:29.039]    <block atomic="false" info="">
[10:31:29.040]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:31:29.040]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.040]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:31:29.041]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.041]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:31:29.041]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.041]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:31:29.042]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.042]    </block>
[10:31:29.042]  </sequence>
[10:31:29.042]  
[10:31:29.059]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:31:29.059]  
[10:31:29.059]  <debugvars>
[10:31:29.059]    // Pre-defined
[10:31:29.060]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:31:29.060]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:31:29.060]    __dp=0x00000000
[10:31:29.060]    __ap=0x00000000
[10:31:29.060]    __traceout=0x00000001      (SWO Trace)
[10:31:29.060]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:31:29.060]    __FlashAddr=0x00000000
[10:31:29.061]    __FlashLen=0x00000000
[10:31:29.061]    __FlashArg=0x00000000
[10:31:29.061]    __FlashOp=0x00000000
[10:31:29.061]    __Result=0x00000000
[10:31:29.061]    
[10:31:29.061]    // User-defined
[10:31:29.061]    DbgMCU_CR=0x00000007
[10:31:29.061]    DbgMCU_APB1_Fz=0x00000000
[10:31:29.062]    DbgMCU_APB2_Fz=0x00000000
[10:31:29.062]    TraceClk_Pin=0x00040002
[10:31:29.062]    TraceD0_Pin=0x00040003
[10:31:29.062]    TraceD1_Pin=0x00040004
[10:31:29.062]    TraceD2_Pin=0x00040005
[10:31:29.062]    TraceD3_Pin=0x00040006
[10:31:29.063]  </debugvars>
[10:31:29.063]  
[10:31:29.063]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:31:29.063]    <block atomic="false" info="">
[10:31:29.063]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:31:29.063]        // -> [traceSWO <= 0x00000001]
[10:31:29.063]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:31:29.063]        // -> [traceTPIU <= 0x00000000]
[10:31:29.064]    </block>
[10:31:29.064]    <control if="traceSWO" while="" timeout="0" info="">
[10:31:29.064]      // if-block "traceSWO"
[10:31:29.064]        // =>  TRUE
[10:31:29.064]      <block atomic="false" info="">
[10:31:29.064]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:31:29.064]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:31:29.064]            <block atomic="false" info="">
[10:31:29.064]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:31:29.065]                // -> [dbgmcu_val <= 0x00000000]
[10:31:29.065]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:31:29.065]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:31:29.065]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:31:29.065]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.065]                // -> [dbgmcu_val <= 0x00000007]
[10:31:29.066]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:31:29.066]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:31:29.066]              Sequence("ConfigureTraceSWOPin");
[10:31:29.066]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:31:29.066]                  <block atomic="false" info="">
[10:31:29.066]                    __var pin     = 0;
[10:31:29.066]                      // -> [pin <= 0x00000000]
[10:31:29.066]                    __var port    = 0;
[10:31:29.066]                      // -> [port <= 0x00000000]
[10:31:29.067]                    __var portAdr = 0;
[10:31:29.067]                      // -> [portAdr <= 0x00000000]
[10:31:29.067]                    __var pos     = 0;
[10:31:29.067]                      // -> [pos <= 0x00000000]
[10:31:29.067]                    __var SWO_Pin = 0x00010003;          // PB3
[10:31:29.067]                      // -> [SWO_Pin <= 0x00010003]
[10:31:29.067]                  </block>
[10:31:29.067]                  <block atomic="false" info="configure SWO">
[10:31:29.068]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:31:29.068]                      // -> [pin <= 0x00000003]
[10:31:29.068]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:31:29.068]                      // -> [port <= 0x00000001]
[10:31:29.068]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:31:29.068]                      // -> [portAdr <= 0x40020400]
[10:31:29.068]                    pos = pin * 2;
[10:31:29.068]                      // -> [pos <= 0x00000006]
[10:31:29.069]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:31:29.069]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.069]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.070]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:31:29.070]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.070]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.070]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:31:29.071]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.071]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.071]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:31:29.072]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.072]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.072]                  </block>
[10:31:29.073]                  <control if="pin <  8" while="" timeout="0" info="">
[10:31:29.073]                    // if-block "pin <  8"
[10:31:29.073]                      // =>  TRUE
[10:31:29.073]                    <block atomic="false" info="">
[10:31:29.073]                      pos = ((pin    ) & 7) * 4;
[10:31:29.073]                        // -> [pos <= 0x0000000C]
[10:31:29.073]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:31:29.074]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.074]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.074]                    </block>
[10:31:29.074]                    // end if-block "pin <  8"
[10:31:29.074]                  </control>
[10:31:29.074]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:31:29.075]                    // if-block "pin >= 8"
[10:31:29.075]                      // =>  FALSE
[10:31:29.075]                    // skip if-block "pin >= 8"
[10:31:29.075]                  </control>
[10:31:29.075]                </sequence>
[10:31:29.075]            </block>
[10:31:29.075]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:31:29.075]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:31:29.076]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.076]            </block>
[10:31:29.076]          </sequence>
[10:31:29.076]      </block>
[10:31:29.076]      // end if-block "traceSWO"
[10:31:29.076]    </control>
[10:31:29.076]    <control if="traceTPIU" while="" timeout="0" info="">
[10:31:29.077]      // if-block "traceTPIU"
[10:31:29.077]        // =>  FALSE
[10:31:29.077]      // skip if-block "traceTPIU"
[10:31:29.077]    </control>
[10:31:29.077]  </sequence>
[10:31:29.077]  
[10:31:29.081]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:31:29.081]  
[10:31:29.081]  <debugvars>
[10:31:29.081]    // Pre-defined
[10:31:29.081]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:31:29.082]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:31:29.082]    __dp=0x00000000
[10:31:29.082]    __ap=0x00000000
[10:31:29.082]    __traceout=0x00000001      (SWO Trace)
[10:31:29.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:31:29.083]    __FlashAddr=0x00000000
[10:31:29.083]    __FlashLen=0x00000000
[10:31:29.083]    __FlashArg=0x00000000
[10:31:29.083]    __FlashOp=0x00000000
[10:31:29.083]    __Result=0x00000000
[10:31:29.084]    
[10:31:29.084]    // User-defined
[10:31:29.084]    DbgMCU_CR=0x00000007
[10:31:29.084]    DbgMCU_APB1_Fz=0x00000000
[10:31:29.084]    DbgMCU_APB2_Fz=0x00000000
[10:31:29.084]    TraceClk_Pin=0x00040002
[10:31:29.084]    TraceD0_Pin=0x00040003
[10:31:29.085]    TraceD1_Pin=0x00040004
[10:31:29.085]    TraceD2_Pin=0x00040005
[10:31:29.085]    TraceD3_Pin=0x00040006
[10:31:29.085]  </debugvars>
[10:31:29.085]  
[10:31:29.085]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:31:29.085]    <block atomic="false" info="">
[10:31:29.085]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:31:29.085]        // -> [traceSWO <= 0x00000001]
[10:31:29.086]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:31:29.086]        // -> [traceTPIU <= 0x00000000]
[10:31:29.086]    </block>
[10:31:29.086]    <control if="traceSWO" while="" timeout="0" info="">
[10:31:29.086]      // if-block "traceSWO"
[10:31:29.086]        // =>  TRUE
[10:31:29.086]      <block atomic="false" info="">
[10:31:29.086]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:31:29.086]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:31:29.087]            <block atomic="false" info="">
[10:31:29.087]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:31:29.087]                // -> [dbgmcu_val <= 0x00000000]
[10:31:29.087]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:31:29.087]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:31:29.087]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:31:29.088]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.088]                // -> [dbgmcu_val <= 0x00000007]
[10:31:29.088]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:31:29.088]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:31:29.088]              Sequence("ConfigureTraceSWOPin");
[10:31:29.088]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:31:29.088]                  <block atomic="false" info="">
[10:31:29.088]                    __var pin     = 0;
[10:31:29.088]                      // -> [pin <= 0x00000000]
[10:31:29.089]                    __var port    = 0;
[10:31:29.089]                      // -> [port <= 0x00000000]
[10:31:29.089]                    __var portAdr = 0;
[10:31:29.089]                      // -> [portAdr <= 0x00000000]
[10:31:29.089]                    __var pos     = 0;
[10:31:29.089]                      // -> [pos <= 0x00000000]
[10:31:29.089]                    __var SWO_Pin = 0x00010003;          // PB3
[10:31:29.089]                      // -> [SWO_Pin <= 0x00010003]
[10:31:29.089]                  </block>
[10:31:29.090]                  <block atomic="false" info="configure SWO">
[10:31:29.090]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:31:29.090]                      // -> [pin <= 0x00000003]
[10:31:29.090]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:31:29.090]                      // -> [port <= 0x00000001]
[10:31:29.090]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:31:29.090]                      // -> [portAdr <= 0x40020400]
[10:31:29.090]                    pos = pin * 2;
[10:31:29.090]                      // -> [pos <= 0x00000006]
[10:31:29.091]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:31:29.091]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.091]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.092]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:31:29.092]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.092]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.093]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:31:29.093]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.093]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.094]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:31:29.094]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.094]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.095]                  </block>
[10:31:29.095]                  <control if="pin <  8" while="" timeout="0" info="">
[10:31:29.095]                    // if-block "pin <  8"
[10:31:29.095]                      // =>  TRUE
[10:31:29.095]                    <block atomic="false" info="">
[10:31:29.095]                      pos = ((pin    ) & 7) * 4;
[10:31:29.095]                        // -> [pos <= 0x0000000C]
[10:31:29.095]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:31:29.096]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.096]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.096]                    </block>
[10:31:29.096]                    // end if-block "pin <  8"
[10:31:29.096]                  </control>
[10:31:29.097]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:31:29.097]                    // if-block "pin >= 8"
[10:31:29.097]                      // =>  FALSE
[10:31:29.097]                    // skip if-block "pin >= 8"
[10:31:29.097]                  </control>
[10:31:29.097]                </sequence>
[10:31:29.097]            </block>
[10:31:29.097]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:31:29.097]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:31:29.098]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.098]            </block>
[10:31:29.098]          </sequence>
[10:31:29.098]      </block>
[10:31:29.098]      // end if-block "traceSWO"
[10:31:29.098]    </control>
[10:31:29.098]    <control if="traceTPIU" while="" timeout="0" info="">
[10:31:29.099]      // if-block "traceTPIU"
[10:31:29.099]        // =>  FALSE
[10:31:29.099]      // skip if-block "traceTPIU"
[10:31:29.099]    </control>
[10:31:29.099]  </sequence>
[10:31:29.099]  
[10:31:29.312]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:31:29.312]  
[10:31:29.312]  <debugvars>
[10:31:29.312]    // Pre-defined
[10:31:29.312]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:31:29.312]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:31:29.313]    __dp=0x00000000
[10:31:29.313]    __ap=0x00000000
[10:31:29.313]    __traceout=0x00000001      (SWO Trace)
[10:31:29.313]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:31:29.313]    __FlashAddr=0x00000000
[10:31:29.313]    __FlashLen=0x00000000
[10:31:29.313]    __FlashArg=0x00000000
[10:31:29.314]    __FlashOp=0x00000000
[10:31:29.314]    __Result=0x00000000
[10:31:29.314]    
[10:31:29.314]    // User-defined
[10:31:29.314]    DbgMCU_CR=0x00000007
[10:31:29.314]    DbgMCU_APB1_Fz=0x00000000
[10:31:29.314]    DbgMCU_APB2_Fz=0x00000000
[10:31:29.314]    TraceClk_Pin=0x00040002
[10:31:29.315]    TraceD0_Pin=0x00040003
[10:31:29.315]    TraceD1_Pin=0x00040004
[10:31:29.315]    TraceD2_Pin=0x00040005
[10:31:29.315]    TraceD3_Pin=0x00040006
[10:31:29.315]  </debugvars>
[10:31:29.315]  
[10:31:29.315]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:31:29.316]    <block atomic="false" info="">
[10:31:29.316]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:31:29.316]        // -> [traceSWO <= 0x00000001]
[10:31:29.316]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:31:29.316]        // -> [traceTPIU <= 0x00000000]
[10:31:29.316]    </block>
[10:31:29.316]    <control if="traceSWO" while="" timeout="0" info="">
[10:31:29.316]      // if-block "traceSWO"
[10:31:29.316]        // =>  TRUE
[10:31:29.317]      <block atomic="false" info="">
[10:31:29.317]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:31:29.317]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:31:29.317]            <block atomic="false" info="">
[10:31:29.317]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:31:29.317]                // -> [dbgmcu_val <= 0x00000000]
[10:31:29.317]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:31:29.317]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:31:29.318]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:31:29.318]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.318]                // -> [dbgmcu_val <= 0x00000007]
[10:31:29.318]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:31:29.319]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:31:29.319]              Sequence("ConfigureTraceSWOPin");
[10:31:29.319]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:31:29.319]                  <block atomic="false" info="">
[10:31:29.319]                    __var pin     = 0;
[10:31:29.319]                      // -> [pin <= 0x00000000]
[10:31:29.319]                    __var port    = 0;
[10:31:29.319]                      // -> [port <= 0x00000000]
[10:31:29.320]                    __var portAdr = 0;
[10:31:29.320]                      // -> [portAdr <= 0x00000000]
[10:31:29.320]                    __var pos     = 0;
[10:31:29.320]                      // -> [pos <= 0x00000000]
[10:31:29.320]                    __var SWO_Pin = 0x00010003;          // PB3
[10:31:29.320]                      // -> [SWO_Pin <= 0x00010003]
[10:31:29.320]                  </block>
[10:31:29.320]                  <block atomic="false" info="configure SWO">
[10:31:29.321]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:31:29.321]                      // -> [pin <= 0x00000003]
[10:31:29.321]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:31:29.321]                      // -> [port <= 0x00000001]
[10:31:29.321]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:31:29.321]                      // -> [portAdr <= 0x40020400]
[10:31:29.321]                    pos = pin * 2;
[10:31:29.322]                      // -> [pos <= 0x00000006]
[10:31:29.322]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:31:29.322]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.323]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.323]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:31:29.323]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.324]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.324]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:31:29.324]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.324]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.325]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:31:29.325]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.325]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.326]                  </block>
[10:31:29.326]                  <control if="pin <  8" while="" timeout="0" info="">
[10:31:29.326]                    // if-block "pin <  8"
[10:31:29.326]                      // =>  TRUE
[10:31:29.326]                    <block atomic="false" info="">
[10:31:29.326]                      pos = ((pin    ) & 7) * 4;
[10:31:29.326]                        // -> [pos <= 0x0000000C]
[10:31:29.326]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:31:29.327]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.327]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.327]                    </block>
[10:31:29.327]                    // end if-block "pin <  8"
[10:31:29.328]                  </control>
[10:31:29.328]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:31:29.328]                    // if-block "pin >= 8"
[10:31:29.328]                      // =>  FALSE
[10:31:29.328]                    // skip if-block "pin >= 8"
[10:31:29.328]                  </control>
[10:31:29.328]                </sequence>
[10:31:29.328]            </block>
[10:31:29.328]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:31:29.329]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:31:29.329]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:31:29.329]            </block>
[10:31:29.329]          </sequence>
[10:31:29.329]      </block>
[10:31:29.329]      // end if-block "traceSWO"
[10:31:29.330]    </control>
[10:31:29.330]    <control if="traceTPIU" while="" timeout="0" info="">
[10:31:29.330]      // if-block "traceTPIU"
[10:31:29.330]        // =>  FALSE
[10:31:29.330]      // skip if-block "traceTPIU"
[10:31:29.330]    </control>
[10:31:29.330]  </sequence>
[10:31:29.330]  
[10:35:54.972]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:35:54.972]  
[10:35:54.973]  <debugvars>
[10:35:54.973]    // Pre-defined
[10:35:54.973]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:35:54.973]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:35:54.973]    __dp=0x00000000
[10:35:54.974]    __ap=0x00000000
[10:35:54.974]    __traceout=0x00000001      (SWO Trace)
[10:35:54.974]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:35:54.974]    __FlashAddr=0x00000000
[10:35:54.974]    __FlashLen=0x00000000
[10:35:54.975]    __FlashArg=0x00000000
[10:35:54.975]    __FlashOp=0x00000000
[10:35:54.975]    __Result=0x00000000
[10:35:54.975]    
[10:35:54.975]    // User-defined
[10:35:54.975]    DbgMCU_CR=0x00000007
[10:35:54.976]    DbgMCU_APB1_Fz=0x00000000
[10:35:54.976]    DbgMCU_APB2_Fz=0x00000000
[10:35:54.976]    TraceClk_Pin=0x00040002
[10:35:54.976]    TraceD0_Pin=0x00040003
[10:35:54.976]    TraceD1_Pin=0x00040004
[10:35:54.976]    TraceD2_Pin=0x00040005
[10:35:54.976]    TraceD3_Pin=0x00040006
[10:35:54.977]  </debugvars>
[10:35:54.977]  
[10:35:54.977]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:35:54.977]    <block atomic="false" info="">
[10:35:54.977]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:35:54.977]        // -> [traceSWO <= 0x00000001]
[10:35:54.978]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:35:54.978]        // -> [traceTPIU <= 0x00000000]
[10:35:54.978]    </block>
[10:35:54.978]    <control if="traceSWO" while="" timeout="0" info="">
[10:35:54.978]      // if-block "traceSWO"
[10:35:54.979]        // =>  TRUE
[10:35:54.979]      <block atomic="false" info="">
[10:35:54.979]        Sequence("DisableTraceSWO");
[10:35:54.979]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:35:54.979]            <block atomic="false" info="">
[10:35:54.979]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:35:54.979]                // -> [dbgmcu_val <= 0x00000000]
[10:35:54.980]            </block>
[10:35:54.980]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:35:54.980]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:35:54.980]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:35:54.980]                // -> [dbgmcu_val <= 0x00000007]
[10:35:54.981]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:35:54.981]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:35:54.981]            </block>
[10:35:54.981]          </sequence>
[10:35:54.981]      </block>
[10:35:54.981]      // end if-block "traceSWO"
[10:35:54.982]    </control>
[10:35:54.982]    <control if="traceTPIU" while="" timeout="0" info="">
[10:35:54.982]      // if-block "traceTPIU"
[10:35:54.982]        // =>  FALSE
[10:35:54.982]      // skip if-block "traceTPIU"
[10:35:54.983]    </control>
[10:35:54.983]  </sequence>
[10:35:54.983]  
[10:36:35.159]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:36:35.159]  
[10:36:35.160]  <debugvars>
[10:36:35.160]    // Pre-defined
[10:36:35.160]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:36:35.160]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:36:35.160]    __dp=0x00000000
[10:36:35.160]    __ap=0x00000000
[10:36:35.161]    __traceout=0x00000001      (SWO Trace)
[10:36:35.161]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:36:35.161]    __FlashAddr=0x00000000
[10:36:35.161]    __FlashLen=0x00000000
[10:36:35.161]    __FlashArg=0x00000000
[10:36:35.161]    __FlashOp=0x00000000
[10:36:35.161]    __Result=0x00000000
[10:36:35.161]    
[10:36:35.161]    // User-defined
[10:36:35.162]    DbgMCU_CR=0x00000007
[10:36:35.162]    DbgMCU_APB1_Fz=0x00000000
[10:36:35.162]    DbgMCU_APB2_Fz=0x00000000
[10:36:35.162]    TraceClk_Pin=0x00040002
[10:36:35.162]    TraceD0_Pin=0x00040003
[10:36:35.162]    TraceD1_Pin=0x00040004
[10:36:35.162]    TraceD2_Pin=0x00040005
[10:36:35.163]    TraceD3_Pin=0x00040006
[10:36:35.163]  </debugvars>
[10:36:35.163]  
[10:36:35.163]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:36:35.163]    <block atomic="false" info="">
[10:36:35.163]      Sequence("CheckID");
[10:36:35.163]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:36:35.163]          <block atomic="false" info="">
[10:36:35.164]            __var pidr1 = 0;
[10:36:35.164]              // -> [pidr1 <= 0x00000000]
[10:36:35.164]            __var pidr2 = 0;
[10:36:35.164]              // -> [pidr2 <= 0x00000000]
[10:36:35.164]            __var jep106id = 0;
[10:36:35.164]              // -> [jep106id <= 0x00000000]
[10:36:35.164]            __var ROMTableBase = 0;
[10:36:35.165]              // -> [ROMTableBase <= 0x00000000]
[10:36:35.165]            __ap = 0;      // AHB-AP
[10:36:35.165]              // -> [__ap <= 0x00000000]
[10:36:35.165]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:36:35.165]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.165]              // -> [ROMTableBase <= 0xE00FD000]
[10:36:35.165]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:36:35.166]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.166]              // -> [pidr1 <= 0x00000004]
[10:36:35.166]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:36:35.167]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.167]              // -> [pidr2 <= 0x0000001A]
[10:36:35.167]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:36:35.167]              // -> [jep106id <= 0x00000020]
[10:36:35.167]          </block>
[10:36:35.167]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:36:35.168]            // if-block "jep106id != 0x20"
[10:36:35.168]              // =>  FALSE
[10:36:35.168]            // skip if-block "jep106id != 0x20"
[10:36:35.168]          </control>
[10:36:35.168]        </sequence>
[10:36:35.168]    </block>
[10:36:35.168]  </sequence>
[10:36:35.168]  
[10:36:35.184]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:36:35.184]  
[10:36:35.184]  <debugvars>
[10:36:35.184]    // Pre-defined
[10:36:35.184]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:36:35.184]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:36:35.184]    __dp=0x00000000
[10:36:35.184]    __ap=0x00000000
[10:36:35.185]    __traceout=0x00000001      (SWO Trace)
[10:36:35.185]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:36:35.185]    __FlashAddr=0x00000000
[10:36:35.185]    __FlashLen=0x00000000
[10:36:35.185]    __FlashArg=0x00000000
[10:36:35.185]    __FlashOp=0x00000000
[10:36:35.185]    __Result=0x00000000
[10:36:35.185]    
[10:36:35.185]    // User-defined
[10:36:35.186]    DbgMCU_CR=0x00000007
[10:36:35.186]    DbgMCU_APB1_Fz=0x00000000
[10:36:35.186]    DbgMCU_APB2_Fz=0x00000000
[10:36:35.186]    TraceClk_Pin=0x00040002
[10:36:35.186]    TraceD0_Pin=0x00040003
[10:36:35.186]    TraceD1_Pin=0x00040004
[10:36:35.187]    TraceD2_Pin=0x00040005
[10:36:35.187]    TraceD3_Pin=0x00040006
[10:36:35.187]  </debugvars>
[10:36:35.187]  
[10:36:35.187]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:36:35.187]    <block atomic="false" info="">
[10:36:35.187]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:36:35.188]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.188]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:36:35.189]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.189]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:36:35.189]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.189]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:36:35.189]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:36:35.189]    </block>
[10:36:35.189]  </sequence>
[10:36:35.189]  
[10:37:06.070]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:37:06.070]  
[10:37:06.070]  <debugvars>
[10:37:06.070]    // Pre-defined
[10:37:06.070]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:37:06.070]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:37:06.071]    __dp=0x00000000
[10:37:06.071]    __ap=0x00000000
[10:37:06.071]    __traceout=0x00000001      (SWO Trace)
[10:37:06.071]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:37:06.071]    __FlashAddr=0x00000000
[10:37:06.071]    __FlashLen=0x00000000
[10:37:06.071]    __FlashArg=0x00000000
[10:37:06.071]    __FlashOp=0x00000000
[10:37:06.072]    __Result=0x00000000
[10:37:06.072]    
[10:37:06.072]    // User-defined
[10:37:06.072]    DbgMCU_CR=0x00000007
[10:37:06.072]    DbgMCU_APB1_Fz=0x00000000
[10:37:06.072]    DbgMCU_APB2_Fz=0x00000000
[10:37:06.072]    TraceClk_Pin=0x00040002
[10:37:06.072]    TraceD0_Pin=0x00040003
[10:37:06.073]    TraceD1_Pin=0x00040004
[10:37:06.073]    TraceD2_Pin=0x00040005
[10:37:06.073]    TraceD3_Pin=0x00040006
[10:37:06.073]  </debugvars>
[10:37:06.073]  
[10:37:06.073]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:37:06.073]    <block atomic="false" info="">
[10:37:06.074]      Sequence("CheckID");
[10:37:06.074]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:37:06.074]          <block atomic="false" info="">
[10:37:06.074]            __var pidr1 = 0;
[10:37:06.074]              // -> [pidr1 <= 0x00000000]
[10:37:06.074]            __var pidr2 = 0;
[10:37:06.074]              // -> [pidr2 <= 0x00000000]
[10:37:06.075]            __var jep106id = 0;
[10:37:06.075]              // -> [jep106id <= 0x00000000]
[10:37:06.075]            __var ROMTableBase = 0;
[10:37:06.075]              // -> [ROMTableBase <= 0x00000000]
[10:37:06.075]            __ap = 0;      // AHB-AP
[10:37:06.075]              // -> [__ap <= 0x00000000]
[10:37:06.075]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:37:06.076]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.076]              // -> [ROMTableBase <= 0xE00FD000]
[10:37:06.076]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:37:06.077]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.077]              // -> [pidr1 <= 0x00000004]
[10:37:06.077]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:37:06.077]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.077]              // -> [pidr2 <= 0x0000001A]
[10:37:06.077]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:37:06.078]              // -> [jep106id <= 0x00000020]
[10:37:06.078]          </block>
[10:37:06.078]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:37:06.078]            // if-block "jep106id != 0x20"
[10:37:06.078]              // =>  FALSE
[10:37:06.078]            // skip if-block "jep106id != 0x20"
[10:37:06.078]          </control>
[10:37:06.079]        </sequence>
[10:37:06.079]    </block>
[10:37:06.079]  </sequence>
[10:37:06.079]  
[10:37:06.093]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:37:06.093]  
[10:37:06.093]  <debugvars>
[10:37:06.093]    // Pre-defined
[10:37:06.093]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:37:06.094]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:37:06.094]    __dp=0x00000000
[10:37:06.094]    __ap=0x00000000
[10:37:06.094]    __traceout=0x00000001      (SWO Trace)
[10:37:06.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:37:06.094]    __FlashAddr=0x00000000
[10:37:06.094]    __FlashLen=0x00000000
[10:37:06.095]    __FlashArg=0x00000000
[10:37:06.095]    __FlashOp=0x00000000
[10:37:06.095]    __Result=0x00000000
[10:37:06.095]    
[10:37:06.095]    // User-defined
[10:37:06.095]    DbgMCU_CR=0x00000007
[10:37:06.095]    DbgMCU_APB1_Fz=0x00000000
[10:37:06.095]    DbgMCU_APB2_Fz=0x00000000
[10:37:06.095]    TraceClk_Pin=0x00040002
[10:37:06.095]    TraceD0_Pin=0x00040003
[10:37:06.096]    TraceD1_Pin=0x00040004
[10:37:06.096]    TraceD2_Pin=0x00040005
[10:37:06.096]    TraceD3_Pin=0x00040006
[10:37:06.096]  </debugvars>
[10:37:06.096]  
[10:37:06.096]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:37:06.096]    <block atomic="false" info="">
[10:37:06.097]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:37:06.097]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.097]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:37:06.098]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.098]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:37:06.098]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.098]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:37:06.099]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.099]    </block>
[10:37:06.099]  </sequence>
[10:37:06.099]  
[10:37:06.115]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:37:06.115]  
[10:37:06.115]  <debugvars>
[10:37:06.116]    // Pre-defined
[10:37:06.116]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:37:06.116]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:37:06.116]    __dp=0x00000000
[10:37:06.116]    __ap=0x00000000
[10:37:06.116]    __traceout=0x00000001      (SWO Trace)
[10:37:06.116]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:37:06.117]    __FlashAddr=0x00000000
[10:37:06.117]    __FlashLen=0x00000000
[10:37:06.117]    __FlashArg=0x00000000
[10:37:06.117]    __FlashOp=0x00000000
[10:37:06.117]    __Result=0x00000000
[10:37:06.117]    
[10:37:06.117]    // User-defined
[10:37:06.117]    DbgMCU_CR=0x00000007
[10:37:06.117]    DbgMCU_APB1_Fz=0x00000000
[10:37:06.118]    DbgMCU_APB2_Fz=0x00000000
[10:37:06.118]    TraceClk_Pin=0x00040002
[10:37:06.118]    TraceD0_Pin=0x00040003
[10:37:06.118]    TraceD1_Pin=0x00040004
[10:37:06.118]    TraceD2_Pin=0x00040005
[10:37:06.118]    TraceD3_Pin=0x00040006
[10:37:06.119]  </debugvars>
[10:37:06.119]  
[10:37:06.119]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:37:06.119]    <block atomic="false" info="">
[10:37:06.119]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:37:06.119]        // -> [traceSWO <= 0x00000001]
[10:37:06.119]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:37:06.119]        // -> [traceTPIU <= 0x00000000]
[10:37:06.120]    </block>
[10:37:06.120]    <control if="traceSWO" while="" timeout="0" info="">
[10:37:06.120]      // if-block "traceSWO"
[10:37:06.120]        // =>  TRUE
[10:37:06.120]      <block atomic="false" info="">
[10:37:06.120]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:37:06.121]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:37:06.121]            <block atomic="false" info="">
[10:37:06.121]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:37:06.121]                // -> [dbgmcu_val <= 0x00000000]
[10:37:06.121]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:37:06.121]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:37:06.122]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:37:06.122]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.122]                // -> [dbgmcu_val <= 0x00000007]
[10:37:06.122]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:37:06.122]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:37:06.122]              Sequence("ConfigureTraceSWOPin");
[10:37:06.123]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:37:06.123]                  <block atomic="false" info="">
[10:37:06.123]                    __var pin     = 0;
[10:37:06.123]                      // -> [pin <= 0x00000000]
[10:37:06.123]                    __var port    = 0;
[10:37:06.123]                      // -> [port <= 0x00000000]
[10:37:06.123]                    __var portAdr = 0;
[10:37:06.124]                      // -> [portAdr <= 0x00000000]
[10:37:06.124]                    __var pos     = 0;
[10:37:06.124]                      // -> [pos <= 0x00000000]
[10:37:06.124]                    __var SWO_Pin = 0x00010003;          // PB3
[10:37:06.124]                      // -> [SWO_Pin <= 0x00010003]
[10:37:06.124]                  </block>
[10:37:06.124]                  <block atomic="false" info="configure SWO">
[10:37:06.124]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:37:06.125]                      // -> [pin <= 0x00000003]
[10:37:06.125]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:37:06.125]                      // -> [port <= 0x00000001]
[10:37:06.125]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:37:06.125]                      // -> [portAdr <= 0x40020400]
[10:37:06.125]                    pos = pin * 2;
[10:37:06.125]                      // -> [pos <= 0x00000006]
[10:37:06.126]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:37:06.126]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.126]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.127]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:37:06.127]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.127]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.127]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:37:06.128]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.128]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.129]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:37:06.129]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.129]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.129]                  </block>
[10:37:06.130]                  <control if="pin <  8" while="" timeout="0" info="">
[10:37:06.130]                    // if-block "pin <  8"
[10:37:06.130]                      // =>  TRUE
[10:37:06.130]                    <block atomic="false" info="">
[10:37:06.130]                      pos = ((pin    ) & 7) * 4;
[10:37:06.130]                        // -> [pos <= 0x0000000C]
[10:37:06.130]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:37:06.131]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.131]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.131]                    </block>
[10:37:06.131]                    // end if-block "pin <  8"
[10:37:06.131]                  </control>
[10:37:06.132]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:37:06.132]                    // if-block "pin >= 8"
[10:37:06.132]                      // =>  FALSE
[10:37:06.132]                    // skip if-block "pin >= 8"
[10:37:06.132]                  </control>
[10:37:06.132]                </sequence>
[10:37:06.132]            </block>
[10:37:06.133]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:37:06.133]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:37:06.133]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.133]            </block>
[10:37:06.133]          </sequence>
[10:37:06.133]      </block>
[10:37:06.134]      // end if-block "traceSWO"
[10:37:06.134]    </control>
[10:37:06.134]    <control if="traceTPIU" while="" timeout="0" info="">
[10:37:06.134]      // if-block "traceTPIU"
[10:37:06.134]        // =>  FALSE
[10:37:06.134]      // skip if-block "traceTPIU"
[10:37:06.134]    </control>
[10:37:06.134]  </sequence>
[10:37:06.134]  
[10:37:06.138]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:37:06.138]  
[10:37:06.138]  <debugvars>
[10:37:06.138]    // Pre-defined
[10:37:06.139]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:37:06.139]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:37:06.139]    __dp=0x00000000
[10:37:06.139]    __ap=0x00000000
[10:37:06.139]    __traceout=0x00000001      (SWO Trace)
[10:37:06.139]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:37:06.139]    __FlashAddr=0x00000000
[10:37:06.139]    __FlashLen=0x00000000
[10:37:06.140]    __FlashArg=0x00000000
[10:37:06.140]    __FlashOp=0x00000000
[10:37:06.140]    __Result=0x00000000
[10:37:06.140]    
[10:37:06.140]    // User-defined
[10:37:06.140]    DbgMCU_CR=0x00000007
[10:37:06.140]    DbgMCU_APB1_Fz=0x00000000
[10:37:06.140]    DbgMCU_APB2_Fz=0x00000000
[10:37:06.141]    TraceClk_Pin=0x00040002
[10:37:06.141]    TraceD0_Pin=0x00040003
[10:37:06.141]    TraceD1_Pin=0x00040004
[10:37:06.141]    TraceD2_Pin=0x00040005
[10:37:06.141]    TraceD3_Pin=0x00040006
[10:37:06.141]  </debugvars>
[10:37:06.141]  
[10:37:06.141]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:37:06.142]    <block atomic="false" info="">
[10:37:06.142]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:37:06.142]        // -> [traceSWO <= 0x00000001]
[10:37:06.142]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:37:06.142]        // -> [traceTPIU <= 0x00000000]
[10:37:06.142]    </block>
[10:37:06.142]    <control if="traceSWO" while="" timeout="0" info="">
[10:37:06.143]      // if-block "traceSWO"
[10:37:06.143]        // =>  TRUE
[10:37:06.143]      <block atomic="false" info="">
[10:37:06.143]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:37:06.143]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:37:06.143]            <block atomic="false" info="">
[10:37:06.143]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:37:06.143]                // -> [dbgmcu_val <= 0x00000000]
[10:37:06.144]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:37:06.144]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:37:06.144]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:37:06.144]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.145]                // -> [dbgmcu_val <= 0x00000007]
[10:37:06.145]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:37:06.145]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:37:06.145]              Sequence("ConfigureTraceSWOPin");
[10:37:06.145]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:37:06.145]                  <block atomic="false" info="">
[10:37:06.145]                    __var pin     = 0;
[10:37:06.145]                      // -> [pin <= 0x00000000]
[10:37:06.145]                    __var port    = 0;
[10:37:06.146]                      // -> [port <= 0x00000000]
[10:37:06.146]                    __var portAdr = 0;
[10:37:06.146]                      // -> [portAdr <= 0x00000000]
[10:37:06.146]                    __var pos     = 0;
[10:37:06.146]                      // -> [pos <= 0x00000000]
[10:37:06.147]                    __var SWO_Pin = 0x00010003;          // PB3
[10:37:06.147]                      // -> [SWO_Pin <= 0x00010003]
[10:37:06.147]                  </block>
[10:37:06.147]                  <block atomic="false" info="configure SWO">
[10:37:06.147]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:37:06.147]                      // -> [pin <= 0x00000003]
[10:37:06.147]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:37:06.147]                      // -> [port <= 0x00000001]
[10:37:06.148]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:37:06.148]                      // -> [portAdr <= 0x40020400]
[10:37:06.148]                    pos = pin * 2;
[10:37:06.148]                      // -> [pos <= 0x00000006]
[10:37:06.148]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:37:06.148]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.149]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.149]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:37:06.149]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.150]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.150]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:37:06.150]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.151]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.151]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:37:06.151]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.152]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.152]                  </block>
[10:37:06.152]                  <control if="pin <  8" while="" timeout="0" info="">
[10:37:06.152]                    // if-block "pin <  8"
[10:37:06.152]                      // =>  TRUE
[10:37:06.153]                    <block atomic="false" info="">
[10:37:06.153]                      pos = ((pin    ) & 7) * 4;
[10:37:06.153]                        // -> [pos <= 0x0000000C]
[10:37:06.153]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:37:06.153]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.154]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.154]                    </block>
[10:37:06.154]                    // end if-block "pin <  8"
[10:37:06.154]                  </control>
[10:37:06.154]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:37:06.155]                    // if-block "pin >= 8"
[10:37:06.155]                      // =>  FALSE
[10:37:06.155]                    // skip if-block "pin >= 8"
[10:37:06.155]                  </control>
[10:37:06.155]                </sequence>
[10:37:06.155]            </block>
[10:37:06.155]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:37:06.156]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:37:06.156]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.156]            </block>
[10:37:06.156]          </sequence>
[10:37:06.156]      </block>
[10:37:06.156]      // end if-block "traceSWO"
[10:37:06.157]    </control>
[10:37:06.157]    <control if="traceTPIU" while="" timeout="0" info="">
[10:37:06.157]      // if-block "traceTPIU"
[10:37:06.157]        // =>  FALSE
[10:37:06.157]      // skip if-block "traceTPIU"
[10:37:06.157]    </control>
[10:37:06.157]  </sequence>
[10:37:06.157]  
[10:37:06.376]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:37:06.376]  
[10:37:06.376]  <debugvars>
[10:37:06.376]    // Pre-defined
[10:37:06.377]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:37:06.377]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:37:06.377]    __dp=0x00000000
[10:37:06.377]    __ap=0x00000000
[10:37:06.377]    __traceout=0x00000001      (SWO Trace)
[10:37:06.378]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:37:06.378]    __FlashAddr=0x00000000
[10:37:06.378]    __FlashLen=0x00000000
[10:37:06.378]    __FlashArg=0x00000000
[10:37:06.378]    __FlashOp=0x00000000
[10:37:06.379]    __Result=0x00000000
[10:37:06.379]    
[10:37:06.379]    // User-defined
[10:37:06.379]    DbgMCU_CR=0x00000007
[10:37:06.379]    DbgMCU_APB1_Fz=0x00000000
[10:37:06.379]    DbgMCU_APB2_Fz=0x00000000
[10:37:06.379]    TraceClk_Pin=0x00040002
[10:37:06.380]    TraceD0_Pin=0x00040003
[10:37:06.380]    TraceD1_Pin=0x00040004
[10:37:06.380]    TraceD2_Pin=0x00040005
[10:37:06.380]    TraceD3_Pin=0x00040006
[10:37:06.380]  </debugvars>
[10:37:06.380]  
[10:37:06.380]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:37:06.381]    <block atomic="false" info="">
[10:37:06.381]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:37:06.381]        // -> [traceSWO <= 0x00000001]
[10:37:06.381]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:37:06.381]        // -> [traceTPIU <= 0x00000000]
[10:37:06.381]    </block>
[10:37:06.381]    <control if="traceSWO" while="" timeout="0" info="">
[10:37:06.382]      // if-block "traceSWO"
[10:37:06.382]        // =>  TRUE
[10:37:06.382]      <block atomic="false" info="">
[10:37:06.382]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:37:06.382]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:37:06.382]            <block atomic="false" info="">
[10:37:06.382]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:37:06.382]                // -> [dbgmcu_val <= 0x00000000]
[10:37:06.383]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:37:06.383]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:37:06.383]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:37:06.383]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.383]                // -> [dbgmcu_val <= 0x00000007]
[10:37:06.383]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:37:06.384]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:37:06.384]              Sequence("ConfigureTraceSWOPin");
[10:37:06.384]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:37:06.384]                  <block atomic="false" info="">
[10:37:06.384]                    __var pin     = 0;
[10:37:06.384]                      // -> [pin <= 0x00000000]
[10:37:06.384]                    __var port    = 0;
[10:37:06.385]                      // -> [port <= 0x00000000]
[10:37:06.385]                    __var portAdr = 0;
[10:37:06.385]                      // -> [portAdr <= 0x00000000]
[10:37:06.385]                    __var pos     = 0;
[10:37:06.385]                      // -> [pos <= 0x00000000]
[10:37:06.385]                    __var SWO_Pin = 0x00010003;          // PB3
[10:37:06.385]                      // -> [SWO_Pin <= 0x00010003]
[10:37:06.385]                  </block>
[10:37:06.386]                  <block atomic="false" info="configure SWO">
[10:37:06.386]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:37:06.386]                      // -> [pin <= 0x00000003]
[10:37:06.386]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:37:06.386]                      // -> [port <= 0x00000001]
[10:37:06.386]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:37:06.386]                      // -> [portAdr <= 0x40020400]
[10:37:06.387]                    pos = pin * 2;
[10:37:06.387]                      // -> [pos <= 0x00000006]
[10:37:06.387]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:37:06.387]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.388]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.388]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:37:06.388]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.389]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.389]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:37:06.389]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.390]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.390]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:37:06.390]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.391]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.391]                  </block>
[10:37:06.391]                  <control if="pin <  8" while="" timeout="0" info="">
[10:37:06.391]                    // if-block "pin <  8"
[10:37:06.391]                      // =>  TRUE
[10:37:06.391]                    <block atomic="false" info="">
[10:37:06.391]                      pos = ((pin    ) & 7) * 4;
[10:37:06.391]                        // -> [pos <= 0x0000000C]
[10:37:06.392]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:37:06.392]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.392]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.393]                    </block>
[10:37:06.393]                    // end if-block "pin <  8"
[10:37:06.393]                  </control>
[10:37:06.393]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:37:06.393]                    // if-block "pin >= 8"
[10:37:06.393]                      // =>  FALSE
[10:37:06.393]                    // skip if-block "pin >= 8"
[10:37:06.393]                  </control>
[10:37:06.394]                </sequence>
[10:37:06.394]            </block>
[10:37:06.394]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:37:06.394]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:37:06.394]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:06.394]            </block>
[10:37:06.394]          </sequence>
[10:37:06.395]      </block>
[10:37:06.395]      // end if-block "traceSWO"
[10:37:06.395]    </control>
[10:37:06.395]    <control if="traceTPIU" while="" timeout="0" info="">
[10:37:06.395]      // if-block "traceTPIU"
[10:37:06.395]        // =>  FALSE
[10:37:06.395]      // skip if-block "traceTPIU"
[10:37:06.396]    </control>
[10:37:06.396]  </sequence>
[10:37:06.396]  
[10:37:37.495]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:37:37.495]  
[10:37:37.495]  <debugvars>
[10:37:37.495]    // Pre-defined
[10:37:37.496]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:37:37.496]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:37:37.496]    __dp=0x00000000
[10:37:37.496]    __ap=0x00000000
[10:37:37.496]    __traceout=0x00000001      (SWO Trace)
[10:37:37.496]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:37:37.496]    __FlashAddr=0x00000000
[10:37:37.497]    __FlashLen=0x00000000
[10:37:37.497]    __FlashArg=0x00000000
[10:37:37.497]    __FlashOp=0x00000000
[10:37:37.497]    __Result=0x00000000
[10:37:37.497]    
[10:37:37.497]    // User-defined
[10:37:37.497]    DbgMCU_CR=0x00000007
[10:37:37.498]    DbgMCU_APB1_Fz=0x00000000
[10:37:37.498]    DbgMCU_APB2_Fz=0x00000000
[10:37:37.498]    TraceClk_Pin=0x00040002
[10:37:37.498]    TraceD0_Pin=0x00040003
[10:37:37.498]    TraceD1_Pin=0x00040004
[10:37:37.498]    TraceD2_Pin=0x00040005
[10:37:37.498]    TraceD3_Pin=0x00040006
[10:37:37.498]  </debugvars>
[10:37:37.499]  
[10:37:37.499]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:37:37.499]    <block atomic="false" info="">
[10:37:37.499]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:37:37.499]        // -> [traceSWO <= 0x00000001]
[10:37:37.499]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:37:37.499]        // -> [traceTPIU <= 0x00000000]
[10:37:37.500]    </block>
[10:37:37.500]    <control if="traceSWO" while="" timeout="0" info="">
[10:37:37.500]      // if-block "traceSWO"
[10:37:37.500]        // =>  TRUE
[10:37:37.500]      <block atomic="false" info="">
[10:37:37.500]        Sequence("DisableTraceSWO");
[10:37:37.500]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:37:37.500]            <block atomic="false" info="">
[10:37:37.501]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:37:37.501]                // -> [dbgmcu_val <= 0x00000000]
[10:37:37.501]            </block>
[10:37:37.501]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:37:37.501]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:37:37.501]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:37:37.502]                // -> [dbgmcu_val <= 0x00000007]
[10:37:37.502]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:37:37.502]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:37:37.502]            </block>
[10:37:37.502]          </sequence>
[10:37:37.503]      </block>
[10:37:37.503]      // end if-block "traceSWO"
[10:37:37.503]    </control>
[10:37:37.503]    <control if="traceTPIU" while="" timeout="0" info="">
[10:37:37.503]      // if-block "traceTPIU"
[10:37:37.503]        // =>  FALSE
[10:37:37.503]      // skip if-block "traceTPIU"
[10:37:37.503]    </control>
[10:37:37.504]  </sequence>
[10:37:37.504]  
[10:41:15.426]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:41:15.426]  
[10:41:15.427]  <debugvars>
[10:41:15.427]    // Pre-defined
[10:41:15.427]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:41:15.427]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:41:15.427]    __dp=0x00000000
[10:41:15.428]    __ap=0x00000000
[10:41:15.428]    __traceout=0x00000001      (SWO Trace)
[10:41:15.428]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:41:15.428]    __FlashAddr=0x00000000
[10:41:15.428]    __FlashLen=0x00000000
[10:41:15.428]    __FlashArg=0x00000000
[10:41:15.429]    __FlashOp=0x00000000
[10:41:15.429]    __Result=0x00000000
[10:41:15.429]    
[10:41:15.429]    // User-defined
[10:41:15.429]    DbgMCU_CR=0x00000007
[10:41:15.429]    DbgMCU_APB1_Fz=0x00000000
[10:41:15.429]    DbgMCU_APB2_Fz=0x00000000
[10:41:15.430]    TraceClk_Pin=0x00040002
[10:41:15.430]    TraceD0_Pin=0x00040003
[10:41:15.430]    TraceD1_Pin=0x00040004
[10:41:15.430]    TraceD2_Pin=0x00040005
[10:41:15.430]    TraceD3_Pin=0x00040006
[10:41:15.430]  </debugvars>
[10:41:15.430]  
[10:41:15.431]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:41:15.431]    <block atomic="false" info="">
[10:41:15.431]      Sequence("CheckID");
[10:41:15.431]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:41:15.431]          <block atomic="false" info="">
[10:41:15.431]            __var pidr1 = 0;
[10:41:15.432]              // -> [pidr1 <= 0x00000000]
[10:41:15.432]            __var pidr2 = 0;
[10:41:15.432]              // -> [pidr2 <= 0x00000000]
[10:41:15.432]            __var jep106id = 0;
[10:41:15.432]              // -> [jep106id <= 0x00000000]
[10:41:15.432]            __var ROMTableBase = 0;
[10:41:15.433]              // -> [ROMTableBase <= 0x00000000]
[10:41:15.433]            __ap = 0;      // AHB-AP
[10:41:15.433]              // -> [__ap <= 0x00000000]
[10:41:15.433]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:41:15.433]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.433]              // -> [ROMTableBase <= 0xE00FD000]
[10:41:15.434]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:41:15.434]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.435]              // -> [pidr1 <= 0x00000004]
[10:41:15.435]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:41:15.435]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.435]              // -> [pidr2 <= 0x0000001A]
[10:41:15.436]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:41:15.436]              // -> [jep106id <= 0x00000020]
[10:41:15.436]          </block>
[10:41:15.436]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:41:15.436]            // if-block "jep106id != 0x20"
[10:41:15.436]              // =>  FALSE
[10:41:15.436]            // skip if-block "jep106id != 0x20"
[10:41:15.436]          </control>
[10:41:15.437]        </sequence>
[10:41:15.437]    </block>
[10:41:15.437]  </sequence>
[10:41:15.437]  
[10:41:15.452]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:41:15.452]  
[10:41:15.452]  <debugvars>
[10:41:15.452]    // Pre-defined
[10:41:15.452]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:41:15.453]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:41:15.453]    __dp=0x00000000
[10:41:15.453]    __ap=0x00000000
[10:41:15.453]    __traceout=0x00000001      (SWO Trace)
[10:41:15.453]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:41:15.453]    __FlashAddr=0x00000000
[10:41:15.453]    __FlashLen=0x00000000
[10:41:15.454]    __FlashArg=0x00000000
[10:41:15.454]    __FlashOp=0x00000000
[10:41:15.454]    __Result=0x00000000
[10:41:15.454]    
[10:41:15.454]    // User-defined
[10:41:15.454]    DbgMCU_CR=0x00000007
[10:41:15.455]    DbgMCU_APB1_Fz=0x00000000
[10:41:15.455]    DbgMCU_APB2_Fz=0x00000000
[10:41:15.455]    TraceClk_Pin=0x00040002
[10:41:15.455]    TraceD0_Pin=0x00040003
[10:41:15.455]    TraceD1_Pin=0x00040004
[10:41:15.455]    TraceD2_Pin=0x00040005
[10:41:15.455]    TraceD3_Pin=0x00040006
[10:41:15.456]  </debugvars>
[10:41:15.456]  
[10:41:15.456]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:41:15.456]    <block atomic="false" info="">
[10:41:15.456]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:41:15.457]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.457]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:41:15.457]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.458]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:41:15.458]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.458]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:41:15.459]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:41:15.459]    </block>
[10:41:15.459]  </sequence>
[10:41:15.459]  
[11:04:51.948]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:04:51.948]  
[11:04:51.948]  <debugvars>
[11:04:51.948]    // Pre-defined
[11:04:51.949]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:04:51.949]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:04:51.949]    __dp=0x00000000
[11:04:51.949]    __ap=0x00000000
[11:04:51.949]    __traceout=0x00000001      (SWO Trace)
[11:04:51.949]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:04:51.949]    __FlashAddr=0x00000000
[11:04:51.950]    __FlashLen=0x00000000
[11:04:51.950]    __FlashArg=0x00000000
[11:04:51.950]    __FlashOp=0x00000000
[11:04:51.950]    __Result=0x00000000
[11:04:51.950]    
[11:04:51.950]    // User-defined
[11:04:51.950]    DbgMCU_CR=0x00000007
[11:04:51.950]    DbgMCU_APB1_Fz=0x00000000
[11:04:51.951]    DbgMCU_APB2_Fz=0x00000000
[11:04:51.951]    TraceClk_Pin=0x00040002
[11:04:51.951]    TraceD0_Pin=0x00040003
[11:04:51.951]    TraceD1_Pin=0x00040004
[11:04:51.951]    TraceD2_Pin=0x00040005
[11:04:51.951]    TraceD3_Pin=0x00040006
[11:04:51.952]  </debugvars>
[11:04:51.952]  
[11:04:51.952]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:04:51.952]    <block atomic="false" info="">
[11:04:51.952]      Sequence("CheckID");
[11:04:51.952]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:04:51.952]          <block atomic="false" info="">
[11:04:51.953]            __var pidr1 = 0;
[11:04:51.953]              // -> [pidr1 <= 0x00000000]
[11:04:51.953]            __var pidr2 = 0;
[11:04:51.953]              // -> [pidr2 <= 0x00000000]
[11:04:51.953]            __var jep106id = 0;
[11:04:51.953]              // -> [jep106id <= 0x00000000]
[11:04:51.953]            __var ROMTableBase = 0;
[11:04:51.954]              // -> [ROMTableBase <= 0x00000000]
[11:04:51.954]            __ap = 0;      // AHB-AP
[11:04:51.954]              // -> [__ap <= 0x00000000]
[11:04:51.954]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:04:51.954]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.954]              // -> [ROMTableBase <= 0xE00FD000]
[11:04:51.955]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:04:51.955]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.955]              // -> [pidr1 <= 0x00000004]
[11:04:51.955]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:04:51.956]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.956]              // -> [pidr2 <= 0x0000001A]
[11:04:51.956]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:04:51.956]              // -> [jep106id <= 0x00000020]
[11:04:51.956]          </block>
[11:04:51.957]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:04:51.957]            // if-block "jep106id != 0x20"
[11:04:51.957]              // =>  FALSE
[11:04:51.957]            // skip if-block "jep106id != 0x20"
[11:04:51.957]          </control>
[11:04:51.957]        </sequence>
[11:04:51.957]    </block>
[11:04:51.958]  </sequence>
[11:04:51.958]  
[11:04:51.972]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:04:51.972]  
[11:04:51.972]  <debugvars>
[11:04:51.972]    // Pre-defined
[11:04:51.972]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:04:51.973]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:04:51.973]    __dp=0x00000000
[11:04:51.973]    __ap=0x00000000
[11:04:51.973]    __traceout=0x00000001      (SWO Trace)
[11:04:51.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:04:51.973]    __FlashAddr=0x00000000
[11:04:51.974]    __FlashLen=0x00000000
[11:04:51.974]    __FlashArg=0x00000000
[11:04:51.974]    __FlashOp=0x00000000
[11:04:51.974]    __Result=0x00000000
[11:04:51.974]    
[11:04:51.974]    // User-defined
[11:04:51.975]    DbgMCU_CR=0x00000007
[11:04:51.975]    DbgMCU_APB1_Fz=0x00000000
[11:04:51.975]    DbgMCU_APB2_Fz=0x00000000
[11:04:51.975]    TraceClk_Pin=0x00040002
[11:04:51.975]    TraceD0_Pin=0x00040003
[11:04:51.975]    TraceD1_Pin=0x00040004
[11:04:51.976]    TraceD2_Pin=0x00040005
[11:04:51.976]    TraceD3_Pin=0x00040006
[11:04:51.976]  </debugvars>
[11:04:51.976]  
[11:04:51.976]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:04:51.976]    <block atomic="false" info="">
[11:04:51.976]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:04:51.977]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.977]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:04:51.978]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.978]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:04:51.979]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.979]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:04:51.979]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:04:51.980]    </block>
[11:04:51.980]  </sequence>
[11:04:51.980]  
[11:09:14.108]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:09:14.108]  
[11:09:14.108]  <debugvars>
[11:09:14.108]    // Pre-defined
[11:09:14.108]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:09:14.109]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:09:14.109]    __dp=0x00000000
[11:09:14.109]    __ap=0x00000000
[11:09:14.109]    __traceout=0x00000001      (SWO Trace)
[11:09:14.109]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:09:14.109]    __FlashAddr=0x00000000
[11:09:14.110]    __FlashLen=0x00000000
[11:09:14.110]    __FlashArg=0x00000000
[11:09:14.110]    __FlashOp=0x00000000
[11:09:14.110]    __Result=0x00000000
[11:09:14.110]    
[11:09:14.110]    // User-defined
[11:09:14.110]    DbgMCU_CR=0x00000007
[11:09:14.111]    DbgMCU_APB1_Fz=0x00000000
[11:09:14.111]    DbgMCU_APB2_Fz=0x00000000
[11:09:14.111]    TraceClk_Pin=0x00040002
[11:09:14.111]    TraceD0_Pin=0x00040003
[11:09:14.111]    TraceD1_Pin=0x00040004
[11:09:14.111]    TraceD2_Pin=0x00040005
[11:09:14.112]    TraceD3_Pin=0x00040006
[11:09:14.112]  </debugvars>
[11:09:14.112]  
[11:09:14.112]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:09:14.112]    <block atomic="false" info="">
[11:09:14.112]      Sequence("CheckID");
[11:09:14.113]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:09:14.113]          <block atomic="false" info="">
[11:09:14.113]            __var pidr1 = 0;
[11:09:14.113]              // -> [pidr1 <= 0x00000000]
[11:09:14.113]            __var pidr2 = 0;
[11:09:14.113]              // -> [pidr2 <= 0x00000000]
[11:09:14.114]            __var jep106id = 0;
[11:09:14.114]              // -> [jep106id <= 0x00000000]
[11:09:14.114]            __var ROMTableBase = 0;
[11:09:14.114]              // -> [ROMTableBase <= 0x00000000]
[11:09:14.114]            __ap = 0;      // AHB-AP
[11:09:14.114]              // -> [__ap <= 0x00000000]
[11:09:14.114]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:09:14.115]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.115]              // -> [ROMTableBase <= 0xE00FD000]
[11:09:14.115]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:09:14.116]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.116]              // -> [pidr1 <= 0x00000004]
[11:09:14.116]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:09:14.116]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.117]              // -> [pidr2 <= 0x0000001A]
[11:09:14.117]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:09:14.117]              // -> [jep106id <= 0x00000020]
[11:09:14.117]          </block>
[11:09:14.117]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:09:14.117]            // if-block "jep106id != 0x20"
[11:09:14.117]              // =>  FALSE
[11:09:14.118]            // skip if-block "jep106id != 0x20"
[11:09:14.118]          </control>
[11:09:14.118]        </sequence>
[11:09:14.118]    </block>
[11:09:14.118]  </sequence>
[11:09:14.118]  
[11:09:14.133]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:09:14.133]  
[11:09:14.133]  <debugvars>
[11:09:14.133]    // Pre-defined
[11:09:14.134]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:09:14.134]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:09:14.134]    __dp=0x00000000
[11:09:14.134]    __ap=0x00000000
[11:09:14.134]    __traceout=0x00000001      (SWO Trace)
[11:09:14.135]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:09:14.135]    __FlashAddr=0x00000000
[11:09:14.135]    __FlashLen=0x00000000
[11:09:14.135]    __FlashArg=0x00000000
[11:09:14.135]    __FlashOp=0x00000000
[11:09:14.136]    __Result=0x00000000
[11:09:14.136]    
[11:09:14.136]    // User-defined
[11:09:14.136]    DbgMCU_CR=0x00000007
[11:09:14.136]    DbgMCU_APB1_Fz=0x00000000
[11:09:14.136]    DbgMCU_APB2_Fz=0x00000000
[11:09:14.136]    TraceClk_Pin=0x00040002
[11:09:14.137]    TraceD0_Pin=0x00040003
[11:09:14.137]    TraceD1_Pin=0x00040004
[11:09:14.137]    TraceD2_Pin=0x00040005
[11:09:14.137]    TraceD3_Pin=0x00040006
[11:09:14.137]  </debugvars>
[11:09:14.138]  
[11:09:14.138]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:09:14.138]    <block atomic="false" info="">
[11:09:14.138]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:09:14.139]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.139]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:09:14.140]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.140]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:09:14.140]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.141]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:09:14.141]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:09:14.141]    </block>
[11:09:14.142]  </sequence>
[11:09:14.142]  
[11:15:04.151]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:15:04.151]  
[11:15:04.151]  <debugvars>
[11:15:04.151]    // Pre-defined
[11:15:04.152]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:15:04.152]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:15:04.152]    __dp=0x00000000
[11:15:04.152]    __ap=0x00000000
[11:15:04.152]    __traceout=0x00000001      (SWO Trace)
[11:15:04.153]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:15:04.153]    __FlashAddr=0x00000000
[11:15:04.153]    __FlashLen=0x00000000
[11:15:04.153]    __FlashArg=0x00000000
[11:15:04.153]    __FlashOp=0x00000000
[11:15:04.153]    __Result=0x00000000
[11:15:04.154]    
[11:15:04.154]    // User-defined
[11:15:04.154]    DbgMCU_CR=0x00000007
[11:15:04.154]    DbgMCU_APB1_Fz=0x00000000
[11:15:04.154]    DbgMCU_APB2_Fz=0x00000000
[11:15:04.155]    TraceClk_Pin=0x00040002
[11:15:04.155]    TraceD0_Pin=0x00040003
[11:15:04.155]    TraceD1_Pin=0x00040004
[11:15:04.155]    TraceD2_Pin=0x00040005
[11:15:04.155]    TraceD3_Pin=0x00040006
[11:15:04.155]  </debugvars>
[11:15:04.156]  
[11:15:04.156]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:15:04.156]    <block atomic="false" info="">
[11:15:04.156]      Sequence("CheckID");
[11:15:04.156]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:15:04.156]          <block atomic="false" info="">
[11:15:04.157]            __var pidr1 = 0;
[11:15:04.157]              // -> [pidr1 <= 0x00000000]
[11:15:04.157]            __var pidr2 = 0;
[11:15:04.157]              // -> [pidr2 <= 0x00000000]
[11:15:04.157]            __var jep106id = 0;
[11:15:04.157]              // -> [jep106id <= 0x00000000]
[11:15:04.157]            __var ROMTableBase = 0;
[11:15:04.158]              // -> [ROMTableBase <= 0x00000000]
[11:15:04.158]            __ap = 0;      // AHB-AP
[11:15:04.158]              // -> [__ap <= 0x00000000]
[11:15:04.158]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:15:04.158]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.159]              // -> [ROMTableBase <= 0xE00FD000]
[11:15:04.159]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:15:04.159]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.159]              // -> [pidr1 <= 0x00000004]
[11:15:04.160]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:15:04.160]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.160]              // -> [pidr2 <= 0x0000001A]
[11:15:04.160]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:15:04.161]              // -> [jep106id <= 0x00000020]
[11:15:04.161]          </block>
[11:15:04.161]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:15:04.161]            // if-block "jep106id != 0x20"
[11:15:04.161]              // =>  FALSE
[11:15:04.161]            // skip if-block "jep106id != 0x20"
[11:15:04.161]          </control>
[11:15:04.161]        </sequence>
[11:15:04.162]    </block>
[11:15:04.162]  </sequence>
[11:15:04.162]  
[11:15:04.177]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:15:04.177]  
[11:15:04.177]  <debugvars>
[11:15:04.177]    // Pre-defined
[11:15:04.177]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:15:04.178]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:15:04.178]    __dp=0x00000000
[11:15:04.178]    __ap=0x00000000
[11:15:04.178]    __traceout=0x00000001      (SWO Trace)
[11:15:04.178]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:15:04.179]    __FlashAddr=0x00000000
[11:15:04.179]    __FlashLen=0x00000000
[11:15:04.179]    __FlashArg=0x00000000
[11:15:04.179]    __FlashOp=0x00000000
[11:15:04.179]    __Result=0x00000000
[11:15:04.180]    
[11:15:04.180]    // User-defined
[11:15:04.180]    DbgMCU_CR=0x00000007
[11:15:04.180]    DbgMCU_APB1_Fz=0x00000000
[11:15:04.180]    DbgMCU_APB2_Fz=0x00000000
[11:15:04.180]    TraceClk_Pin=0x00040002
[11:15:04.181]    TraceD0_Pin=0x00040003
[11:15:04.181]    TraceD1_Pin=0x00040004
[11:15:04.181]    TraceD2_Pin=0x00040005
[11:15:04.181]    TraceD3_Pin=0x00040006
[11:15:04.181]  </debugvars>
[11:15:04.181]  
[11:15:04.182]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:15:04.182]    <block atomic="false" info="">
[11:15:04.182]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:15:04.183]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.183]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:15:04.183]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.184]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:15:04.184]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.184]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:15:04.185]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:15:04.185]    </block>
[11:15:04.185]  </sequence>
[11:15:04.186]  
[11:16:14.106]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:16:14.106]  
[11:16:14.107]  <debugvars>
[11:16:14.107]    // Pre-defined
[11:16:14.107]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:16:14.107]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:16:14.107]    __dp=0x00000000
[11:16:14.108]    __ap=0x00000000
[11:16:14.108]    __traceout=0x00000001      (SWO Trace)
[11:16:14.108]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:16:14.108]    __FlashAddr=0x00000000
[11:16:14.108]    __FlashLen=0x00000000
[11:16:14.108]    __FlashArg=0x00000000
[11:16:14.109]    __FlashOp=0x00000000
[11:16:14.109]    __Result=0x00000000
[11:16:14.109]    
[11:16:14.109]    // User-defined
[11:16:14.109]    DbgMCU_CR=0x00000007
[11:16:14.109]    DbgMCU_APB1_Fz=0x00000000
[11:16:14.110]    DbgMCU_APB2_Fz=0x00000000
[11:16:14.110]    TraceClk_Pin=0x00040002
[11:16:14.110]    TraceD0_Pin=0x00040003
[11:16:14.110]    TraceD1_Pin=0x00040004
[11:16:14.110]    TraceD2_Pin=0x00040005
[11:16:14.110]    TraceD3_Pin=0x00040006
[11:16:14.111]  </debugvars>
[11:16:14.111]  
[11:16:14.111]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:16:14.111]    <block atomic="false" info="">
[11:16:14.111]      Sequence("CheckID");
[11:16:14.111]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:16:14.112]          <block atomic="false" info="">
[11:16:14.112]            __var pidr1 = 0;
[11:16:14.112]              // -> [pidr1 <= 0x00000000]
[11:16:14.112]            __var pidr2 = 0;
[11:16:14.112]              // -> [pidr2 <= 0x00000000]
[11:16:14.113]            __var jep106id = 0;
[11:16:14.113]              // -> [jep106id <= 0x00000000]
[11:16:14.113]            __var ROMTableBase = 0;
[11:16:14.113]              // -> [ROMTableBase <= 0x00000000]
[11:16:14.113]            __ap = 0;      // AHB-AP
[11:16:14.113]              // -> [__ap <= 0x00000000]
[11:16:14.114]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:16:14.114]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.114]              // -> [ROMTableBase <= 0xE00FD000]
[11:16:14.114]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:16:14.115]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.115]              // -> [pidr1 <= 0x00000004]
[11:16:14.115]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:16:14.115]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.116]              // -> [pidr2 <= 0x0000001A]
[11:16:14.116]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:16:14.116]              // -> [jep106id <= 0x00000020]
[11:16:14.116]          </block>
[11:16:14.116]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:16:14.116]            // if-block "jep106id != 0x20"
[11:16:14.116]              // =>  FALSE
[11:16:14.117]            // skip if-block "jep106id != 0x20"
[11:16:14.117]          </control>
[11:16:14.117]        </sequence>
[11:16:14.117]    </block>
[11:16:14.117]  </sequence>
[11:16:14.117]  
[11:16:14.133]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:16:14.133]  
[11:16:14.134]  <debugvars>
[11:16:14.134]    // Pre-defined
[11:16:14.134]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:16:14.134]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:16:14.134]    __dp=0x00000000
[11:16:14.135]    __ap=0x00000000
[11:16:14.135]    __traceout=0x00000001      (SWO Trace)
[11:16:14.135]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:16:14.135]    __FlashAddr=0x00000000
[11:16:14.135]    __FlashLen=0x00000000
[11:16:14.135]    __FlashArg=0x00000000
[11:16:14.136]    __FlashOp=0x00000000
[11:16:14.136]    __Result=0x00000000
[11:16:14.136]    
[11:16:14.136]    // User-defined
[11:16:14.136]    DbgMCU_CR=0x00000007
[11:16:14.136]    DbgMCU_APB1_Fz=0x00000000
[11:16:14.137]    DbgMCU_APB2_Fz=0x00000000
[11:16:14.137]    TraceClk_Pin=0x00040002
[11:16:14.137]    TraceD0_Pin=0x00040003
[11:16:14.137]    TraceD1_Pin=0x00040004
[11:16:14.137]    TraceD2_Pin=0x00040005
[11:16:14.137]    TraceD3_Pin=0x00040006
[11:16:14.138]  </debugvars>
[11:16:14.138]  
[11:16:14.138]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:16:14.138]    <block atomic="false" info="">
[11:16:14.138]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:16:14.139]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.139]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:16:14.140]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.140]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:16:14.141]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.141]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:16:14.141]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:16:14.142]    </block>
[11:16:14.142]  </sequence>
[11:16:14.142]  
[11:18:40.090]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:18:40.090]  
[11:18:40.090]  <debugvars>
[11:18:40.091]    // Pre-defined
[11:18:40.091]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:18:40.091]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:18:40.091]    __dp=0x00000000
[11:18:40.091]    __ap=0x00000000
[11:18:40.091]    __traceout=0x00000001      (SWO Trace)
[11:18:40.091]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:18:40.091]    __FlashAddr=0x00000000
[11:18:40.092]    __FlashLen=0x00000000
[11:18:40.092]    __FlashArg=0x00000000
[11:18:40.092]    __FlashOp=0x00000000
[11:18:40.092]    __Result=0x00000000
[11:18:40.092]    
[11:18:40.092]    // User-defined
[11:18:40.092]    DbgMCU_CR=0x00000007
[11:18:40.092]    DbgMCU_APB1_Fz=0x00000000
[11:18:40.092]    DbgMCU_APB2_Fz=0x00000000
[11:18:40.092]    TraceClk_Pin=0x00040002
[11:18:40.093]    TraceD0_Pin=0x00040003
[11:18:40.093]    TraceD1_Pin=0x00040004
[11:18:40.093]    TraceD2_Pin=0x00040005
[11:18:40.093]    TraceD3_Pin=0x00040006
[11:18:40.093]  </debugvars>
[11:18:40.093]  
[11:18:40.093]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:18:40.094]    <block atomic="false" info="">
[11:18:40.094]      Sequence("CheckID");
[11:18:40.094]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:18:40.094]          <block atomic="false" info="">
[11:18:40.094]            __var pidr1 = 0;
[11:18:40.094]              // -> [pidr1 <= 0x00000000]
[11:18:40.094]            __var pidr2 = 0;
[11:18:40.094]              // -> [pidr2 <= 0x00000000]
[11:18:40.094]            __var jep106id = 0;
[11:18:40.095]              // -> [jep106id <= 0x00000000]
[11:18:40.095]            __var ROMTableBase = 0;
[11:18:40.095]              // -> [ROMTableBase <= 0x00000000]
[11:18:40.095]            __ap = 0;      // AHB-AP
[11:18:40.095]              // -> [__ap <= 0x00000000]
[11:18:40.095]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:18:40.096]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.096]              // -> [ROMTableBase <= 0xE00FD000]
[11:18:40.096]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:18:40.096]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.097]              // -> [pidr1 <= 0x00000004]
[11:18:40.097]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:18:40.097]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.097]              // -> [pidr2 <= 0x0000001A]
[11:18:40.097]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:18:40.097]              // -> [jep106id <= 0x00000020]
[11:18:40.098]          </block>
[11:18:40.098]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:18:40.098]            // if-block "jep106id != 0x20"
[11:18:40.098]              // =>  FALSE
[11:18:40.098]            // skip if-block "jep106id != 0x20"
[11:18:40.098]          </control>
[11:18:40.098]        </sequence>
[11:18:40.099]    </block>
[11:18:40.099]  </sequence>
[11:18:40.099]  
[11:18:40.113]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:18:40.113]  
[11:18:40.113]  <debugvars>
[11:18:40.114]    // Pre-defined
[11:18:40.114]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:18:40.114]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:18:40.114]    __dp=0x00000000
[11:18:40.114]    __ap=0x00000000
[11:18:40.114]    __traceout=0x00000001      (SWO Trace)
[11:18:40.114]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:18:40.114]    __FlashAddr=0x00000000
[11:18:40.115]    __FlashLen=0x00000000
[11:18:40.115]    __FlashArg=0x00000000
[11:18:40.115]    __FlashOp=0x00000000
[11:18:40.115]    __Result=0x00000000
[11:18:40.115]    
[11:18:40.115]    // User-defined
[11:18:40.115]    DbgMCU_CR=0x00000007
[11:18:40.115]    DbgMCU_APB1_Fz=0x00000000
[11:18:40.115]    DbgMCU_APB2_Fz=0x00000000
[11:18:40.116]    TraceClk_Pin=0x00040002
[11:18:40.116]    TraceD0_Pin=0x00040003
[11:18:40.116]    TraceD1_Pin=0x00040004
[11:18:40.116]    TraceD2_Pin=0x00040005
[11:18:40.116]    TraceD3_Pin=0x00040006
[11:18:40.116]  </debugvars>
[11:18:40.116]  
[11:18:40.116]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:18:40.117]    <block atomic="false" info="">
[11:18:40.117]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:18:40.117]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.117]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:18:40.118]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.118]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:18:40.118]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.118]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:18:40.119]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:18:40.119]    </block>
[11:18:40.119]  </sequence>
[11:18:40.119]  
[11:26:03.811]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:26:03.811]  
[11:26:03.812]  <debugvars>
[11:26:03.812]    // Pre-defined
[11:26:03.812]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:26:03.812]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:26:03.813]    __dp=0x00000000
[11:26:03.813]    __ap=0x00000000
[11:26:03.813]    __traceout=0x00000001      (SWO Trace)
[11:26:03.813]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:26:03.813]    __FlashAddr=0x00000000
[11:26:03.814]    __FlashLen=0x00000000
[11:26:03.814]    __FlashArg=0x00000000
[11:26:03.814]    __FlashOp=0x00000000
[11:26:03.814]    __Result=0x00000000
[11:26:03.815]    
[11:26:03.815]    // User-defined
[11:26:03.815]    DbgMCU_CR=0x00000007
[11:26:03.815]    DbgMCU_APB1_Fz=0x00000000
[11:26:03.815]    DbgMCU_APB2_Fz=0x00000000
[11:26:03.815]    TraceClk_Pin=0x00040002
[11:26:03.816]    TraceD0_Pin=0x00040003
[11:26:03.816]    TraceD1_Pin=0x00040004
[11:26:03.816]    TraceD2_Pin=0x00040005
[11:26:03.816]    TraceD3_Pin=0x00040006
[11:26:03.816]  </debugvars>
[11:26:03.816]  
[11:26:03.817]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:26:03.817]    <block atomic="false" info="">
[11:26:03.817]      Sequence("CheckID");
[11:26:03.817]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:26:03.817]          <block atomic="false" info="">
[11:26:03.818]            __var pidr1 = 0;
[11:26:03.818]              // -> [pidr1 <= 0x00000000]
[11:26:03.818]            __var pidr2 = 0;
[11:26:03.818]              // -> [pidr2 <= 0x00000000]
[11:26:03.818]            __var jep106id = 0;
[11:26:03.818]              // -> [jep106id <= 0x00000000]
[11:26:03.818]            __var ROMTableBase = 0;
[11:26:03.819]              // -> [ROMTableBase <= 0x00000000]
[11:26:03.819]            __ap = 0;      // AHB-AP
[11:26:03.819]              // -> [__ap <= 0x00000000]
[11:26:03.819]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:26:03.820]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.820]              // -> [ROMTableBase <= 0xE00FD000]
[11:26:03.820]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:26:03.821]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.821]              // -> [pidr1 <= 0x00000004]
[11:26:03.821]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:26:03.822]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.822]              // -> [pidr2 <= 0x0000001A]
[11:26:03.822]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:26:03.822]              // -> [jep106id <= 0x00000020]
[11:26:03.822]          </block>
[11:26:03.823]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:26:03.823]            // if-block "jep106id != 0x20"
[11:26:03.823]              // =>  FALSE
[11:26:03.823]            // skip if-block "jep106id != 0x20"
[11:26:03.823]          </control>
[11:26:03.823]        </sequence>
[11:26:03.824]    </block>
[11:26:03.824]  </sequence>
[11:26:03.824]  
[11:26:03.839]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:26:03.839]  
[11:26:03.839]  <debugvars>
[11:26:03.839]    // Pre-defined
[11:26:03.840]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:26:03.840]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:26:03.840]    __dp=0x00000000
[11:26:03.840]    __ap=0x00000000
[11:26:03.840]    __traceout=0x00000001      (SWO Trace)
[11:26:03.841]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:26:03.841]    __FlashAddr=0x00000000
[11:26:03.841]    __FlashLen=0x00000000
[11:26:03.841]    __FlashArg=0x00000000
[11:26:03.841]    __FlashOp=0x00000000
[11:26:03.841]    __Result=0x00000000
[11:26:03.842]    
[11:26:03.842]    // User-defined
[11:26:03.842]    DbgMCU_CR=0x00000007
[11:26:03.842]    DbgMCU_APB1_Fz=0x00000000
[11:26:03.842]    DbgMCU_APB2_Fz=0x00000000
[11:26:03.842]    TraceClk_Pin=0x00040002
[11:26:03.843]    TraceD0_Pin=0x00040003
[11:26:03.843]    TraceD1_Pin=0x00040004
[11:26:03.843]    TraceD2_Pin=0x00040005
[11:26:03.843]    TraceD3_Pin=0x00040006
[11:26:03.843]  </debugvars>
[11:26:03.844]  
[11:26:03.844]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:26:03.844]    <block atomic="false" info="">
[11:26:03.844]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:26:03.845]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.845]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:26:03.845]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.846]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:26:03.846]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.846]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:26:03.847]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:26:03.847]    </block>
[11:26:03.847]  </sequence>
[11:26:03.847]  
[11:51:48.022]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[11:51:48.022]  
[11:51:48.022]  <debugvars>
[11:51:48.022]    // Pre-defined
[11:51:48.023]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:51:48.023]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:51:48.023]    __dp=0x00000000
[11:51:48.023]    __ap=0x00000000
[11:51:48.023]    __traceout=0x00000001      (SWO Trace)
[11:51:48.023]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:51:48.023]    __FlashAddr=0x00000000
[11:51:48.023]    __FlashLen=0x00000000
[11:51:48.023]    __FlashArg=0x00000000
[11:51:48.024]    __FlashOp=0x00000000
[11:51:48.024]    __Result=0x00000000
[11:51:48.024]    
[11:51:48.024]    // User-defined
[11:51:48.024]    DbgMCU_CR=0x00000007
[11:51:48.024]    DbgMCU_APB1_Fz=0x00000000
[11:51:48.024]    DbgMCU_APB2_Fz=0x00000000
[11:51:48.024]    TraceClk_Pin=0x00040002
[11:51:48.024]    TraceD0_Pin=0x00040003
[11:51:48.025]    TraceD1_Pin=0x00040004
[11:51:48.025]    TraceD2_Pin=0x00040005
[11:51:48.025]    TraceD3_Pin=0x00040006
[11:51:48.025]  </debugvars>
[11:51:48.025]  
[11:51:48.025]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[11:51:48.025]    <block atomic="false" info="">
[11:51:48.025]      Sequence("CheckID");
[11:51:48.025]        <sequence name="CheckID" Pname="" disable="false" info="">
[11:51:48.026]          <block atomic="false" info="">
[11:51:48.026]            __var pidr1 = 0;
[11:51:48.026]              // -> [pidr1 <= 0x00000000]
[11:51:48.026]            __var pidr2 = 0;
[11:51:48.026]              // -> [pidr2 <= 0x00000000]
[11:51:48.026]            __var jep106id = 0;
[11:51:48.026]              // -> [jep106id <= 0x00000000]
[11:51:48.026]            __var ROMTableBase = 0;
[11:51:48.026]              // -> [ROMTableBase <= 0x00000000]
[11:51:48.027]            __ap = 0;      // AHB-AP
[11:51:48.027]              // -> [__ap <= 0x00000000]
[11:51:48.027]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[11:51:48.027]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.027]              // -> [ROMTableBase <= 0xE00FD000]
[11:51:48.027]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[11:51:48.028]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.028]              // -> [pidr1 <= 0x00000004]
[11:51:48.028]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[11:51:48.029]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.029]              // -> [pidr2 <= 0x0000001A]
[11:51:48.029]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[11:51:48.029]              // -> [jep106id <= 0x00000020]
[11:51:48.029]          </block>
[11:51:48.029]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[11:51:48.029]            // if-block "jep106id != 0x20"
[11:51:48.029]              // =>  FALSE
[11:51:48.029]            // skip if-block "jep106id != 0x20"
[11:51:48.030]          </control>
[11:51:48.030]        </sequence>
[11:51:48.030]    </block>
[11:51:48.030]  </sequence>
[11:51:48.030]  
[11:51:48.045]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[11:51:48.045]  
[11:51:48.045]  <debugvars>
[11:51:48.045]    // Pre-defined
[11:51:48.045]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[11:51:48.045]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[11:51:48.045]    __dp=0x00000000
[11:51:48.045]    __ap=0x00000000
[11:51:48.046]    __traceout=0x00000001      (SWO Trace)
[11:51:48.046]    __errorcontrol=0x00000000  (Skip Errors="False")
[11:51:48.046]    __FlashAddr=0x00000000
[11:51:48.046]    __FlashLen=0x00000000
[11:51:48.046]    __FlashArg=0x00000000
[11:51:48.046]    __FlashOp=0x00000000
[11:51:48.046]    __Result=0x00000000
[11:51:48.046]    
[11:51:48.046]    // User-defined
[11:51:48.047]    DbgMCU_CR=0x00000007
[11:51:48.047]    DbgMCU_APB1_Fz=0x00000000
[11:51:48.047]    DbgMCU_APB2_Fz=0x00000000
[11:51:48.047]    TraceClk_Pin=0x00040002
[11:51:48.047]    TraceD0_Pin=0x00040003
[11:51:48.047]    TraceD1_Pin=0x00040004
[11:51:48.047]    TraceD2_Pin=0x00040005
[11:51:48.047]    TraceD3_Pin=0x00040006
[11:51:48.047]  </debugvars>
[11:51:48.048]  
[11:51:48.048]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[11:51:48.048]    <block atomic="false" info="">
[11:51:48.048]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[11:51:48.048]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.049]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[11:51:48.049]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.049]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[11:51:48.050]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.050]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[11:51:48.050]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[11:51:48.050]    </block>
[11:51:48.050]  </sequence>
[11:51:48.051]  
[12:16:43.672]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[12:16:43.672]  
[12:16:43.673]  <debugvars>
[12:16:43.673]    // Pre-defined
[12:16:43.673]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:16:43.673]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:16:43.673]    __dp=0x00000000
[12:16:43.673]    __ap=0x00000000
[12:16:43.674]    __traceout=0x00000001      (SWO Trace)
[12:16:43.674]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:16:43.674]    __FlashAddr=0x00000000
[12:16:43.674]    __FlashLen=0x00000000
[12:16:43.674]    __FlashArg=0x00000000
[12:16:43.674]    __FlashOp=0x00000000
[12:16:43.675]    __Result=0x00000000
[12:16:43.675]    
[12:16:43.675]    // User-defined
[12:16:43.675]    DbgMCU_CR=0x00000007
[12:16:43.675]    DbgMCU_APB1_Fz=0x00000000
[12:16:43.675]    DbgMCU_APB2_Fz=0x00000000
[12:16:43.675]    TraceClk_Pin=0x00040002
[12:16:43.676]    TraceD0_Pin=0x00040003
[12:16:43.676]    TraceD1_Pin=0x00040004
[12:16:43.676]    TraceD2_Pin=0x00040005
[12:16:43.676]    TraceD3_Pin=0x00040006
[12:16:43.676]  </debugvars>
[12:16:43.676]  
[12:16:43.676]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[12:16:43.677]    <block atomic="false" info="">
[12:16:43.677]      Sequence("CheckID");
[12:16:43.677]        <sequence name="CheckID" Pname="" disable="false" info="">
[12:16:43.677]          <block atomic="false" info="">
[12:16:43.677]            __var pidr1 = 0;
[12:16:43.677]              // -> [pidr1 <= 0x00000000]
[12:16:43.677]            __var pidr2 = 0;
[12:16:43.678]              // -> [pidr2 <= 0x00000000]
[12:16:43.678]            __var jep106id = 0;
[12:16:43.678]              // -> [jep106id <= 0x00000000]
[12:16:43.678]            __var ROMTableBase = 0;
[12:16:43.678]              // -> [ROMTableBase <= 0x00000000]
[12:16:43.678]            __ap = 0;      // AHB-AP
[12:16:43.678]              // -> [__ap <= 0x00000000]
[12:16:43.678]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[12:16:43.679]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.679]              // -> [ROMTableBase <= 0xE00FD000]
[12:16:43.679]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[12:16:43.680]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.680]              // -> [pidr1 <= 0x00000004]
[12:16:43.680]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[12:16:43.680]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.680]              // -> [pidr2 <= 0x0000001A]
[12:16:43.681]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[12:16:43.681]              // -> [jep106id <= 0x00000020]
[12:16:43.681]          </block>
[12:16:43.681]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[12:16:43.681]            // if-block "jep106id != 0x20"
[12:16:43.681]              // =>  FALSE
[12:16:43.681]            // skip if-block "jep106id != 0x20"
[12:16:43.681]          </control>
[12:16:43.682]        </sequence>
[12:16:43.682]    </block>
[12:16:43.682]  </sequence>
[12:16:43.682]  
[12:16:43.697]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[12:16:43.697]  
[12:16:43.697]  <debugvars>
[12:16:43.697]    // Pre-defined
[12:16:43.698]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:16:43.698]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:16:43.698]    __dp=0x00000000
[12:16:43.698]    __ap=0x00000000
[12:16:43.698]    __traceout=0x00000001      (SWO Trace)
[12:16:43.699]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:16:43.699]    __FlashAddr=0x00000000
[12:16:43.699]    __FlashLen=0x00000000
[12:16:43.699]    __FlashArg=0x00000000
[12:16:43.699]    __FlashOp=0x00000000
[12:16:43.700]    __Result=0x00000000
[12:16:43.700]    
[12:16:43.700]    // User-defined
[12:16:43.700]    DbgMCU_CR=0x00000007
[12:16:43.700]    DbgMCU_APB1_Fz=0x00000000
[12:16:43.700]    DbgMCU_APB2_Fz=0x00000000
[12:16:43.700]    TraceClk_Pin=0x00040002
[12:16:43.701]    TraceD0_Pin=0x00040003
[12:16:43.701]    TraceD1_Pin=0x00040004
[12:16:43.701]    TraceD2_Pin=0x00040005
[12:16:43.701]    TraceD3_Pin=0x00040006
[12:16:43.701]  </debugvars>
[12:16:43.702]  
[12:16:43.702]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[12:16:43.702]    <block atomic="false" info="">
[12:16:43.702]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[12:16:43.703]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.703]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[12:16:43.704]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.704]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[12:16:43.704]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.705]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[12:16:43.705]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.705]    </block>
[12:16:43.706]  </sequence>
[12:16:43.706]  
[12:16:43.722]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[12:16:43.722]  
[12:16:43.722]  <debugvars>
[12:16:43.723]    // Pre-defined
[12:16:43.723]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:16:43.723]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:16:43.723]    __dp=0x00000000
[12:16:43.723]    __ap=0x00000000
[12:16:43.724]    __traceout=0x00000001      (SWO Trace)
[12:16:43.724]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:16:43.724]    __FlashAddr=0x00000000
[12:16:43.724]    __FlashLen=0x00000000
[12:16:43.724]    __FlashArg=0x00000000
[12:16:43.724]    __FlashOp=0x00000000
[12:16:43.725]    __Result=0x00000000
[12:16:43.725]    
[12:16:43.725]    // User-defined
[12:16:43.725]    DbgMCU_CR=0x00000007
[12:16:43.725]    DbgMCU_APB1_Fz=0x00000000
[12:16:43.725]    DbgMCU_APB2_Fz=0x00000000
[12:16:43.726]    TraceClk_Pin=0x00040002
[12:16:43.726]    TraceD0_Pin=0x00040003
[12:16:43.726]    TraceD1_Pin=0x00040004
[12:16:43.726]    TraceD2_Pin=0x00040005
[12:16:43.726]    TraceD3_Pin=0x00040006
[12:16:43.726]  </debugvars>
[12:16:43.727]  
[12:16:43.727]  <sequence name="TraceStart" Pname="" disable="false" info="">
[12:16:43.727]    <block atomic="false" info="">
[12:16:43.727]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[12:16:43.727]        // -> [traceSWO <= 0x00000001]
[12:16:43.727]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[12:16:43.728]        // -> [traceTPIU <= 0x00000000]
[12:16:43.728]    </block>
[12:16:43.728]    <control if="traceSWO" while="" timeout="0" info="">
[12:16:43.728]      // if-block "traceSWO"
[12:16:43.728]        // =>  TRUE
[12:16:43.729]      <block atomic="false" info="">
[12:16:43.729]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[12:16:43.729]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[12:16:43.729]            <block atomic="false" info="">
[12:16:43.729]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[12:16:43.729]                // -> [dbgmcu_val <= 0x00000000]
[12:16:43.729]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[12:16:43.730]                // -> [dbgmcu_trace_val <= 0x00000000]
[12:16:43.730]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[12:16:43.730]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.730]                // -> [dbgmcu_val <= 0x00000007]
[12:16:43.731]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[12:16:43.731]                // -> [dbgmcu_trace_val <= 0x00000020]
[12:16:43.731]              Sequence("ConfigureTraceSWOPin");
[12:16:43.731]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[12:16:43.731]                  <block atomic="false" info="">
[12:16:43.731]                    __var pin     = 0;
[12:16:43.732]                      // -> [pin <= 0x00000000]
[12:16:43.732]                    __var port    = 0;
[12:16:43.732]                      // -> [port <= 0x00000000]
[12:16:43.732]                    __var portAdr = 0;
[12:16:43.732]                      // -> [portAdr <= 0x00000000]
[12:16:43.732]                    __var pos     = 0;
[12:16:43.732]                      // -> [pos <= 0x00000000]
[12:16:43.733]                    __var SWO_Pin = 0x00010003;          // PB3
[12:16:43.733]                      // -> [SWO_Pin <= 0x00010003]
[12:16:43.733]                  </block>
[12:16:43.733]                  <block atomic="false" info="configure SWO">
[12:16:43.733]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[12:16:43.733]                      // -> [pin <= 0x00000003]
[12:16:43.734]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[12:16:43.734]                      // -> [port <= 0x00000001]
[12:16:43.734]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[12:16:43.734]                      // -> [portAdr <= 0x40020400]
[12:16:43.734]                    pos = pin * 2;
[12:16:43.734]                      // -> [pos <= 0x00000006]
[12:16:43.734]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[12:16:43.735]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.736]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.736]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[12:16:43.736]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.737]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.737]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[12:16:43.738]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.738]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.739]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[12:16:43.739]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.740]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.740]                  </block>
[12:16:43.740]                  <control if="pin <  8" while="" timeout="0" info="">
[12:16:43.740]                    // if-block "pin <  8"
[12:16:43.740]                      // =>  TRUE
[12:16:43.740]                    <block atomic="false" info="">
[12:16:43.740]                      pos = ((pin    ) & 7) * 4;
[12:16:43.741]                        // -> [pos <= 0x0000000C]
[12:16:43.741]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[12:16:43.741]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.742]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.742]                    </block>
[12:16:43.742]                    // end if-block "pin <  8"
[12:16:43.742]                  </control>
[12:16:43.742]                  <control if="pin >= 8" while="" timeout="0" info="">
[12:16:43.742]                    // if-block "pin >= 8"
[12:16:43.742]                      // =>  FALSE
[12:16:43.743]                    // skip if-block "pin >= 8"
[12:16:43.743]                  </control>
[12:16:43.743]                </sequence>
[12:16:43.743]            </block>
[12:16:43.743]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[12:16:43.743]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[12:16:43.744]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.744]            </block>
[12:16:43.744]          </sequence>
[12:16:43.744]      </block>
[12:16:43.744]      // end if-block "traceSWO"
[12:16:43.744]    </control>
[12:16:43.744]    <control if="traceTPIU" while="" timeout="0" info="">
[12:16:43.745]      // if-block "traceTPIU"
[12:16:43.745]        // =>  FALSE
[12:16:43.745]      // skip if-block "traceTPIU"
[12:16:43.745]    </control>
[12:16:43.745]  </sequence>
[12:16:43.745]  
[12:16:43.749]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[12:16:43.749]  
[12:16:43.749]  <debugvars>
[12:16:43.750]    // Pre-defined
[12:16:43.750]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:16:43.750]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:16:43.750]    __dp=0x00000000
[12:16:43.750]    __ap=0x00000000
[12:16:43.750]    __traceout=0x00000001      (SWO Trace)
[12:16:43.751]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:16:43.751]    __FlashAddr=0x00000000
[12:16:43.751]    __FlashLen=0x00000000
[12:16:43.751]    __FlashArg=0x00000000
[12:16:43.751]    __FlashOp=0x00000000
[12:16:43.751]    __Result=0x00000000
[12:16:43.752]    
[12:16:43.752]    // User-defined
[12:16:43.752]    DbgMCU_CR=0x00000007
[12:16:43.752]    DbgMCU_APB1_Fz=0x00000000
[12:16:43.752]    DbgMCU_APB2_Fz=0x00000000
[12:16:43.752]    TraceClk_Pin=0x00040002
[12:16:43.753]    TraceD0_Pin=0x00040003
[12:16:43.753]    TraceD1_Pin=0x00040004
[12:16:43.753]    TraceD2_Pin=0x00040005
[12:16:43.753]    TraceD3_Pin=0x00040006
[12:16:43.753]  </debugvars>
[12:16:43.753]  
[12:16:43.754]  <sequence name="TraceStart" Pname="" disable="false" info="">
[12:16:43.754]    <block atomic="false" info="">
[12:16:43.754]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[12:16:43.754]        // -> [traceSWO <= 0x00000001]
[12:16:43.754]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[12:16:43.754]        // -> [traceTPIU <= 0x00000000]
[12:16:43.755]    </block>
[12:16:43.755]    <control if="traceSWO" while="" timeout="0" info="">
[12:16:43.755]      // if-block "traceSWO"
[12:16:43.755]        // =>  TRUE
[12:16:43.755]      <block atomic="false" info="">
[12:16:43.755]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[12:16:43.755]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[12:16:43.755]            <block atomic="false" info="">
[12:16:43.756]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[12:16:43.756]                // -> [dbgmcu_val <= 0x00000000]
[12:16:43.756]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[12:16:43.756]                // -> [dbgmcu_trace_val <= 0x00000000]
[12:16:43.756]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[12:16:43.757]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.757]                // -> [dbgmcu_val <= 0x00000007]
[12:16:43.757]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[12:16:43.757]                // -> [dbgmcu_trace_val <= 0x00000020]
[12:16:43.757]              Sequence("ConfigureTraceSWOPin");
[12:16:43.757]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[12:16:43.757]                  <block atomic="false" info="">
[12:16:43.757]                    __var pin     = 0;
[12:16:43.757]                      // -> [pin <= 0x00000000]
[12:16:43.758]                    __var port    = 0;
[12:16:43.758]                      // -> [port <= 0x00000000]
[12:16:43.758]                    __var portAdr = 0;
[12:16:43.758]                      // -> [portAdr <= 0x00000000]
[12:16:43.758]                    __var pos     = 0;
[12:16:43.758]                      // -> [pos <= 0x00000000]
[12:16:43.758]                    __var SWO_Pin = 0x00010003;          // PB3
[12:16:43.758]                      // -> [SWO_Pin <= 0x00010003]
[12:16:43.758]                  </block>
[12:16:43.759]                  <block atomic="false" info="configure SWO">
[12:16:43.759]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[12:16:43.759]                      // -> [pin <= 0x00000003]
[12:16:43.759]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[12:16:43.759]                      // -> [port <= 0x00000001]
[12:16:43.759]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[12:16:43.759]                      // -> [portAdr <= 0x40020400]
[12:16:43.759]                    pos = pin * 2;
[12:16:43.759]                      // -> [pos <= 0x00000006]
[12:16:43.760]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[12:16:43.760]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.760]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.761]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[12:16:43.761]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.761]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.762]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[12:16:43.762]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.762]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.763]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[12:16:43.763]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.763]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.764]                  </block>
[12:16:43.764]                  <control if="pin <  8" while="" timeout="0" info="">
[12:16:43.764]                    // if-block "pin <  8"
[12:16:43.764]                      // =>  TRUE
[12:16:43.764]                    <block atomic="false" info="">
[12:16:43.764]                      pos = ((pin    ) & 7) * 4;
[12:16:43.764]                        // -> [pos <= 0x0000000C]
[12:16:43.764]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[12:16:43.765]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.765]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.765]                    </block>
[12:16:43.765]                    // end if-block "pin <  8"
[12:16:43.765]                  </control>
[12:16:43.766]                  <control if="pin >= 8" while="" timeout="0" info="">
[12:16:43.766]                    // if-block "pin >= 8"
[12:16:43.766]                      // =>  FALSE
[12:16:43.766]                    // skip if-block "pin >= 8"
[12:16:43.766]                  </control>
[12:16:43.766]                </sequence>
[12:16:43.766]            </block>
[12:16:43.766]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[12:16:43.766]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[12:16:43.767]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.767]            </block>
[12:16:43.767]          </sequence>
[12:16:43.767]      </block>
[12:16:43.767]      // end if-block "traceSWO"
[12:16:43.767]    </control>
[12:16:43.768]    <control if="traceTPIU" while="" timeout="0" info="">
[12:16:43.768]      // if-block "traceTPIU"
[12:16:43.768]        // =>  FALSE
[12:16:43.768]      // skip if-block "traceTPIU"
[12:16:43.768]    </control>
[12:16:43.768]  </sequence>
[12:16:43.768]  
[12:16:43.984]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[12:16:43.984]  
[12:16:43.985]  <debugvars>
[12:16:43.985]    // Pre-defined
[12:16:43.985]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:16:43.985]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:16:43.985]    __dp=0x00000000
[12:16:43.986]    __ap=0x00000000
[12:16:43.986]    __traceout=0x00000001      (SWO Trace)
[12:16:43.986]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:16:43.986]    __FlashAddr=0x00000000
[12:16:43.986]    __FlashLen=0x00000000
[12:16:43.986]    __FlashArg=0x00000000
[12:16:43.987]    __FlashOp=0x00000000
[12:16:43.987]    __Result=0x00000000
[12:16:43.987]    
[12:16:43.987]    // User-defined
[12:16:43.987]    DbgMCU_CR=0x00000007
[12:16:43.987]    DbgMCU_APB1_Fz=0x00000000
[12:16:43.988]    DbgMCU_APB2_Fz=0x00000000
[12:16:43.988]    TraceClk_Pin=0x00040002
[12:16:43.988]    TraceD0_Pin=0x00040003
[12:16:43.988]    TraceD1_Pin=0x00040004
[12:16:43.988]    TraceD2_Pin=0x00040005
[12:16:43.988]    TraceD3_Pin=0x00040006
[12:16:43.989]  </debugvars>
[12:16:43.989]  
[12:16:43.989]  <sequence name="TraceStart" Pname="" disable="false" info="">
[12:16:43.989]    <block atomic="false" info="">
[12:16:43.989]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[12:16:43.989]        // -> [traceSWO <= 0x00000001]
[12:16:43.990]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[12:16:43.990]        // -> [traceTPIU <= 0x00000000]
[12:16:43.990]    </block>
[12:16:43.990]    <control if="traceSWO" while="" timeout="0" info="">
[12:16:43.990]      // if-block "traceSWO"
[12:16:43.990]        // =>  TRUE
[12:16:43.990]      <block atomic="false" info="">
[12:16:43.991]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[12:16:43.991]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[12:16:43.991]            <block atomic="false" info="">
[12:16:43.991]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[12:16:43.991]                // -> [dbgmcu_val <= 0x00000000]
[12:16:43.991]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[12:16:43.991]                // -> [dbgmcu_trace_val <= 0x00000000]
[12:16:43.991]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[12:16:43.992]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.992]                // -> [dbgmcu_val <= 0x00000007]
[12:16:43.992]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[12:16:43.992]                // -> [dbgmcu_trace_val <= 0x00000020]
[12:16:43.992]              Sequence("ConfigureTraceSWOPin");
[12:16:43.992]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[12:16:43.992]                  <block atomic="false" info="">
[12:16:43.992]                    __var pin     = 0;
[12:16:43.993]                      // -> [pin <= 0x00000000]
[12:16:43.993]                    __var port    = 0;
[12:16:43.993]                      // -> [port <= 0x00000000]
[12:16:43.993]                    __var portAdr = 0;
[12:16:43.993]                      // -> [portAdr <= 0x00000000]
[12:16:43.993]                    __var pos     = 0;
[12:16:43.993]                      // -> [pos <= 0x00000000]
[12:16:43.993]                    __var SWO_Pin = 0x00010003;          // PB3
[12:16:43.993]                      // -> [SWO_Pin <= 0x00010003]
[12:16:43.994]                  </block>
[12:16:43.994]                  <block atomic="false" info="configure SWO">
[12:16:43.994]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[12:16:43.994]                      // -> [pin <= 0x00000003]
[12:16:43.994]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[12:16:43.994]                      // -> [port <= 0x00000001]
[12:16:43.994]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[12:16:43.994]                      // -> [portAdr <= 0x40020400]
[12:16:43.995]                    pos = pin * 2;
[12:16:43.995]                      // -> [pos <= 0x00000006]
[12:16:43.995]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[12:16:43.995]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.996]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.996]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[12:16:43.996]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.997]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.997]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[12:16:43.997]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.998]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.998]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[12:16:43.998]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.999]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:43.999]                  </block>
[12:16:43.999]                  <control if="pin <  8" while="" timeout="0" info="">
[12:16:43.999]                    // if-block "pin <  8"
[12:16:43.999]                      // =>  TRUE
[12:16:43.999]                    <block atomic="false" info="">
[12:16:43.999]                      pos = ((pin    ) & 7) * 4;
[12:16:43.999]                        // -> [pos <= 0x0000000C]
[12:16:43.999]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[12:16:44.000]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[12:16:44.000]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:44.000]                    </block>
[12:16:44.001]                    // end if-block "pin <  8"
[12:16:44.001]                  </control>
[12:16:44.001]                  <control if="pin >= 8" while="" timeout="0" info="">
[12:16:44.001]                    // if-block "pin >= 8"
[12:16:44.001]                      // =>  FALSE
[12:16:44.001]                    // skip if-block "pin >= 8"
[12:16:44.001]                  </control>
[12:16:44.001]                </sequence>
[12:16:44.001]            </block>
[12:16:44.002]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[12:16:44.002]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[12:16:44.002]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[12:16:44.002]            </block>
[12:16:44.002]          </sequence>
[12:16:44.002]      </block>
[12:16:44.002]      // end if-block "traceSWO"
[12:16:44.003]    </control>
[12:16:44.003]    <control if="traceTPIU" while="" timeout="0" info="">
[12:16:44.003]      // if-block "traceTPIU"
[12:16:44.003]        // =>  FALSE
[12:16:44.003]      // skip if-block "traceTPIU"
[12:16:44.003]    </control>
[12:16:44.003]  </sequence>
[12:16:44.003]  
[12:18:39.298]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[12:18:39.298]  
[12:18:39.299]  <debugvars>
[12:18:39.299]    // Pre-defined
[12:18:39.299]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:18:39.299]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:18:39.299]    __dp=0x00000000
[12:18:39.300]    __ap=0x00000000
[12:18:39.300]    __traceout=0x00000001      (SWO Trace)
[12:18:39.300]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:18:39.300]    __FlashAddr=0x00000000
[12:18:39.300]    __FlashLen=0x00000000
[12:18:39.301]    __FlashArg=0x00000000
[12:18:39.301]    __FlashOp=0x00000000
[12:18:39.301]    __Result=0x00000000
[12:18:39.301]    
[12:18:39.301]    // User-defined
[12:18:39.302]    DbgMCU_CR=0x00000007
[12:18:39.302]    DbgMCU_APB1_Fz=0x00000000
[12:18:39.302]    DbgMCU_APB2_Fz=0x00000000
[12:18:39.302]    TraceClk_Pin=0x00040002
[12:18:39.302]    TraceD0_Pin=0x00040003
[12:18:39.302]    TraceD1_Pin=0x00040004
[12:18:39.303]    TraceD2_Pin=0x00040005
[12:18:39.303]    TraceD3_Pin=0x00040006
[12:18:39.303]  </debugvars>
[12:18:39.303]  
[12:18:39.303]  <sequence name="TraceStart" Pname="" disable="false" info="">
[12:18:39.303]    <block atomic="false" info="">
[12:18:39.304]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[12:18:39.304]        // -> [traceSWO <= 0x00000001]
[12:18:39.304]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[12:18:39.304]        // -> [traceTPIU <= 0x00000000]
[12:18:39.304]    </block>
[12:18:39.304]    <control if="traceSWO" while="" timeout="0" info="">
[12:18:39.304]      // if-block "traceSWO"
[12:18:39.305]        // =>  TRUE
[12:18:39.305]      <block atomic="false" info="">
[12:18:39.305]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[12:18:39.305]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[12:18:39.305]            <block atomic="false" info="">
[12:18:39.305]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[12:18:39.305]                // -> [dbgmcu_val <= 0x00000000]
[12:18:39.305]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[12:18:39.306]                // -> [dbgmcu_trace_val <= 0x00000000]
[12:18:39.306]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[12:18:39.306]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.306]                // -> [dbgmcu_val <= 0x00000007]
[12:18:39.306]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[12:18:39.307]                // -> [dbgmcu_trace_val <= 0x00000020]
[12:18:39.307]              Sequence("ConfigureTraceSWOPin");
[12:18:39.307]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[12:18:39.307]                  <block atomic="false" info="">
[12:18:39.307]                    __var pin     = 0;
[12:18:39.307]                      // -> [pin <= 0x00000000]
[12:18:39.307]                    __var port    = 0;
[12:18:39.307]                      // -> [port <= 0x00000000]
[12:18:39.308]                    __var portAdr = 0;
[12:18:39.308]                      // -> [portAdr <= 0x00000000]
[12:18:39.308]                    __var pos     = 0;
[12:18:39.308]                      // -> [pos <= 0x00000000]
[12:18:39.308]                    __var SWO_Pin = 0x00010003;          // PB3
[12:18:39.308]                      // -> [SWO_Pin <= 0x00010003]
[12:18:39.309]                  </block>
[12:18:39.309]                  <block atomic="false" info="configure SWO">
[12:18:39.309]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[12:18:39.309]                      // -> [pin <= 0x00000003]
[12:18:39.309]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[12:18:39.309]                      // -> [port <= 0x00000001]
[12:18:39.309]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[12:18:39.309]                      // -> [portAdr <= 0x40020400]
[12:18:39.309]                    pos = pin * 2;
[12:18:39.310]                      // -> [pos <= 0x00000006]
[12:18:39.310]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[12:18:39.310]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.311]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.311]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[12:18:39.311]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.312]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.312]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[12:18:39.312]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.313]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.313]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[12:18:39.313]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.314]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.314]                  </block>
[12:18:39.314]                  <control if="pin <  8" while="" timeout="0" info="">
[12:18:39.314]                    // if-block "pin <  8"
[12:18:39.314]                      // =>  TRUE
[12:18:39.314]                    <block atomic="false" info="">
[12:18:39.315]                      pos = ((pin    ) & 7) * 4;
[12:18:39.315]                        // -> [pos <= 0x0000000C]
[12:18:39.315]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[12:18:39.315]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.316]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.316]                    </block>
[12:18:39.316]                    // end if-block "pin <  8"
[12:18:39.316]                  </control>
[12:18:39.316]                  <control if="pin >= 8" while="" timeout="0" info="">
[12:18:39.316]                    // if-block "pin >= 8"
[12:18:39.317]                      // =>  FALSE
[12:18:39.317]                    // skip if-block "pin >= 8"
[12:18:39.317]                  </control>
[12:18:39.317]                </sequence>
[12:18:39.317]            </block>
[12:18:39.317]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[12:18:39.317]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[12:18:39.318]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:39.318]            </block>
[12:18:39.318]          </sequence>
[12:18:39.318]      </block>
[12:18:39.318]      // end if-block "traceSWO"
[12:18:39.318]    </control>
[12:18:39.318]    <control if="traceTPIU" while="" timeout="0" info="">
[12:18:39.319]      // if-block "traceTPIU"
[12:18:39.319]        // =>  FALSE
[12:18:39.319]      // skip if-block "traceTPIU"
[12:18:39.319]    </control>
[12:18:39.319]  </sequence>
[12:18:39.319]  
[12:18:48.281]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[12:18:48.281]  
[12:18:48.636]  <debugvars>
[12:18:48.637]    // Pre-defined
[12:18:48.637]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:18:48.637]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[12:18:48.638]    __dp=0x00000000
[12:18:48.638]    __ap=0x00000000
[12:18:48.638]    __traceout=0x00000001      (SWO Trace)
[12:18:48.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:18:48.639]    __FlashAddr=0x00000000
[12:18:48.639]    __FlashLen=0x00000000
[12:18:48.639]    __FlashArg=0x00000000
[12:18:48.639]    __FlashOp=0x00000000
[12:18:48.639]    __Result=0x00000000
[12:18:48.640]    
[12:18:48.640]    // User-defined
[12:18:48.640]    DbgMCU_CR=0x00000007
[12:18:48.640]    DbgMCU_APB1_Fz=0x00000000
[12:18:48.640]    DbgMCU_APB2_Fz=0x00000000
[12:18:48.640]    TraceClk_Pin=0x00040002
[12:18:48.641]    TraceD0_Pin=0x00040003
[12:18:48.641]    TraceD1_Pin=0x00040004
[12:18:48.641]    TraceD2_Pin=0x00040005
[12:18:48.641]    TraceD3_Pin=0x00040006
[12:18:48.641]  </debugvars>
[12:18:48.641]  
[12:18:48.642]  <sequence name="TraceStop" Pname="" disable="false" info="">
[12:18:48.642]    <block atomic="false" info="">
[12:18:48.642]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[12:18:48.642]        // -> [traceSWO <= 0x00000001]
[12:18:48.642]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[12:18:48.643]        // -> [traceTPIU <= 0x00000000]
[12:18:48.643]    </block>
[12:18:48.643]    <control if="traceSWO" while="" timeout="0" info="">
[12:18:48.643]      // if-block "traceSWO"
[12:18:48.643]        // =>  TRUE
[12:18:48.643]      <block atomic="false" info="">
[12:18:48.644]        Sequence("DisableTraceSWO");
[12:18:48.644]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[12:18:48.644]            <block atomic="false" info="">
[12:18:48.644]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[12:18:48.644]                // -> [dbgmcu_val <= 0x00000000]
[12:18:48.644]            </block>
[12:18:48.645]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[12:18:48.645]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[12:18:48.645]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[12:18:48.646]                // -> [dbgmcu_val <= 0x00000007]
[12:18:48.646]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[12:18:48.646]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[12:18:48.646]            </block>
[12:18:48.647]          </sequence>
[12:18:48.647]      </block>
[12:18:48.647]      // end if-block "traceSWO"
[12:18:48.647]    </control>
[12:18:48.647]    <control if="traceTPIU" while="" timeout="0" info="">
[12:18:48.647]      // if-block "traceTPIU"
[12:18:48.648]        // =>  FALSE
[12:18:48.648]      // skip if-block "traceTPIU"
[12:18:48.648]    </control>
[12:18:48.648]  </sequence>
[12:18:48.648]  
[12:22:56.826]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[12:22:56.826]  
[12:22:56.827]  <debugvars>
[12:22:56.827]    // Pre-defined
[12:22:56.827]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:22:56.827]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[12:22:56.827]    __dp=0x00000000
[12:22:56.828]    __ap=0x00000000
[12:22:56.828]    __traceout=0x00000001      (SWO Trace)
[12:22:56.828]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:22:56.828]    __FlashAddr=0x00000000
[12:22:56.828]    __FlashLen=0x00000000
[12:22:56.828]    __FlashArg=0x00000000
[12:22:56.829]    __FlashOp=0x00000000
[12:22:56.829]    __Result=0x00000000
[12:22:56.829]    
[12:22:56.829]    // User-defined
[12:22:56.829]    DbgMCU_CR=0x00000007
[12:22:56.829]    DbgMCU_APB1_Fz=0x00000000
[12:22:56.829]    DbgMCU_APB2_Fz=0x00000000
[12:22:56.830]    TraceClk_Pin=0x00040002
[12:22:56.830]    TraceD0_Pin=0x00040003
[12:22:56.830]    TraceD1_Pin=0x00040004
[12:22:56.830]    TraceD2_Pin=0x00040005
[12:22:56.830]    TraceD3_Pin=0x00040006
[12:22:56.830]  </debugvars>
[12:22:56.831]  
[12:22:56.831]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[12:22:56.831]    <block atomic="false" info="">
[12:22:56.831]      Sequence("CheckID");
[12:22:56.831]        <sequence name="CheckID" Pname="" disable="false" info="">
[12:22:56.831]          <block atomic="false" info="">
[12:22:56.832]            __var pidr1 = 0;
[12:22:56.832]              // -> [pidr1 <= 0x00000000]
[12:22:56.832]            __var pidr2 = 0;
[12:22:56.832]              // -> [pidr2 <= 0x00000000]
[12:22:56.832]            __var jep106id = 0;
[12:22:56.832]              // -> [jep106id <= 0x00000000]
[12:22:56.833]            __var ROMTableBase = 0;
[12:22:56.833]              // -> [ROMTableBase <= 0x00000000]
[12:22:56.833]            __ap = 0;      // AHB-AP
[12:22:56.833]              // -> [__ap <= 0x00000000]
[12:22:56.833]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[12:22:56.834]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.834]              // -> [ROMTableBase <= 0xE00FD000]
[12:22:56.834]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[12:22:56.835]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.835]              // -> [pidr1 <= 0x00000004]
[12:22:56.835]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[12:22:56.835]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.835]              // -> [pidr2 <= 0x0000001A]
[12:22:56.836]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[12:22:56.836]              // -> [jep106id <= 0x00000020]
[12:22:56.836]          </block>
[12:22:56.836]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[12:22:56.836]            // if-block "jep106id != 0x20"
[12:22:56.836]              // =>  FALSE
[12:22:56.837]            // skip if-block "jep106id != 0x20"
[12:22:56.837]          </control>
[12:22:56.837]        </sequence>
[12:22:56.837]    </block>
[12:22:56.837]  </sequence>
[12:22:56.837]  
[12:22:56.852]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[12:22:56.852]  
[12:22:56.852]  <debugvars>
[12:22:56.852]    // Pre-defined
[12:22:56.852]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:22:56.853]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[12:22:56.853]    __dp=0x00000000
[12:22:56.853]    __ap=0x00000000
[12:22:56.853]    __traceout=0x00000001      (SWO Trace)
[12:22:56.853]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:22:56.854]    __FlashAddr=0x00000000
[12:22:56.854]    __FlashLen=0x00000000
[12:22:56.854]    __FlashArg=0x00000000
[12:22:56.854]    __FlashOp=0x00000000
[12:22:56.854]    __Result=0x00000000
[12:22:56.854]    
[12:22:56.854]    // User-defined
[12:22:56.855]    DbgMCU_CR=0x00000007
[12:22:56.855]    DbgMCU_APB1_Fz=0x00000000
[12:22:56.855]    DbgMCU_APB2_Fz=0x00000000
[12:22:56.855]    TraceClk_Pin=0x00040002
[12:22:56.855]    TraceD0_Pin=0x00040003
[12:22:56.855]    TraceD1_Pin=0x00040004
[12:22:56.855]    TraceD2_Pin=0x00040005
[12:22:56.856]    TraceD3_Pin=0x00040006
[12:22:56.856]  </debugvars>
[12:22:56.856]  
[12:22:56.856]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[12:22:56.856]    <block atomic="false" info="">
[12:22:56.856]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[12:22:56.857]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.857]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[12:22:56.858]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.858]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[12:22:56.858]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.858]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[12:22:56.859]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:22:56.859]    </block>
[12:22:56.859]  </sequence>
[12:22:56.859]  
