/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0012.log
 *  Created     : 19:10:45 (05/05/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[19:10:45.107]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:10:45.107]  
[19:10:45.108]  <debugvars>
[19:10:45.108]    // Pre-defined
[19:10:45.108]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:10:45.108]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:10:45.108]    __dp=0x00000000
[19:10:45.109]    __ap=0x00000000
[19:10:45.109]    __traceout=0x00000001      (SWO Trace)
[19:10:45.109]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:10:45.109]    __FlashAddr=0x00000000
[19:10:45.109]    __FlashLen=0x00000000
[19:10:45.110]    __FlashArg=0x00000000
[19:10:45.110]    __FlashOp=0x00000000
[19:10:45.110]    __Result=0x00000000
[19:10:45.110]    
[19:10:45.110]    // User-defined
[19:10:45.110]    DbgMCU_CR=0x00000007
[19:10:45.110]    DbgMCU_APB1_Fz=0x00000000
[19:10:45.111]    DbgMCU_APB2_Fz=0x00000000
[19:10:45.111]    TraceClk_Pin=0x00040002
[19:10:45.111]    TraceD0_Pin=0x00040003
[19:10:45.111]    TraceD1_Pin=0x00040004
[19:10:45.111]    TraceD2_Pin=0x00040005
[19:10:45.112]    TraceD3_Pin=0x00040006
[19:10:45.112]  </debugvars>
[19:10:45.112]  
[19:10:45.112]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:10:45.112]    <block atomic="false" info="">
[19:10:45.112]      Sequence("CheckID");
[19:10:45.113]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:10:45.113]          <block atomic="false" info="">
[19:10:45.113]            __var pidr1 = 0;
[19:10:45.113]              // -> [pidr1 <= 0x00000000]
[19:10:45.113]            __var pidr2 = 0;
[19:10:45.113]              // -> [pidr2 <= 0x00000000]
[19:10:45.114]            __var jep106id = 0;
[19:10:45.114]              // -> [jep106id <= 0x00000000]
[19:10:45.114]            __var ROMTableBase = 0;
[19:10:45.114]              // -> [ROMTableBase <= 0x00000000]
[19:10:45.114]            __ap = 0;      // AHB-AP
[19:10:45.115]              // -> [__ap <= 0x00000000]
[19:10:45.115]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:10:45.118]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.118]              // -> [ROMTableBase <= 0xE00FD000]
[19:10:45.118]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:10:45.119]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.120]              // -> [pidr1 <= 0x00000004]
[19:10:45.120]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:10:45.121]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.121]              // -> [pidr2 <= 0x0000001A]
[19:10:45.121]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:10:45.121]              // -> [jep106id <= 0x00000020]
[19:10:45.121]          </block>
[19:10:45.122]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:10:45.122]            // if-block "jep106id != 0x20"
[19:10:45.122]              // =>  FALSE
[19:10:45.122]            // skip if-block "jep106id != 0x20"
[19:10:45.122]          </control>
[19:10:45.123]        </sequence>
[19:10:45.123]    </block>
[19:10:45.123]  </sequence>
[19:10:45.123]  
[19:10:45.139]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:10:45.139]  
[19:10:45.139]  <debugvars>
[19:10:45.140]    // Pre-defined
[19:10:45.140]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:10:45.140]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:10:45.140]    __dp=0x00000000
[19:10:45.141]    __ap=0x00000000
[19:10:45.141]    __traceout=0x00000001      (SWO Trace)
[19:10:45.141]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:10:45.141]    __FlashAddr=0x00000000
[19:10:45.141]    __FlashLen=0x00000000
[19:10:45.141]    __FlashArg=0x00000000
[19:10:45.142]    __FlashOp=0x00000000
[19:10:45.142]    __Result=0x00000000
[19:10:45.142]    
[19:10:45.142]    // User-defined
[19:10:45.142]    DbgMCU_CR=0x00000007
[19:10:45.142]    DbgMCU_APB1_Fz=0x00000000
[19:10:45.142]    DbgMCU_APB2_Fz=0x00000000
[19:10:45.143]    TraceClk_Pin=0x00040002
[19:10:45.143]    TraceD0_Pin=0x00040003
[19:10:45.143]    TraceD1_Pin=0x00040004
[19:10:45.143]    TraceD2_Pin=0x00040005
[19:10:45.143]    TraceD3_Pin=0x00040006
[19:10:45.143]  </debugvars>
[19:10:45.144]  
[19:10:45.144]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:10:45.144]    <block atomic="false" info="">
[19:10:45.144]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:10:45.145]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.145]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:10:45.145]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.145]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:10:45.145]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.145]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:10:45.146]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:10:45.146]    </block>
[19:10:45.146]  </sequence>
[19:10:45.147]  
[19:11:16.161]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:11:16.161]  
[19:11:16.162]  <debugvars>
[19:11:16.163]    // Pre-defined
[19:11:16.163]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:11:16.163]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:11:16.163]    __dp=0x00000000
[19:11:16.163]    __ap=0x00000000
[19:11:16.163]    __traceout=0x00000001      (SWO Trace)
[19:11:16.164]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:11:16.164]    __FlashAddr=0x00000000
[19:11:16.164]    __FlashLen=0x00000000
[19:11:16.164]    __FlashArg=0x00000000
[19:11:16.165]    __FlashOp=0x00000000
[19:11:16.165]    __Result=0x00000000
[19:11:16.165]    
[19:11:16.165]    // User-defined
[19:11:16.165]    DbgMCU_CR=0x00000007
[19:11:16.165]    DbgMCU_APB1_Fz=0x00000000
[19:11:16.166]    DbgMCU_APB2_Fz=0x00000000
[19:11:16.166]    TraceClk_Pin=0x00040002
[19:11:16.166]    TraceD0_Pin=0x00040003
[19:11:16.166]    TraceD1_Pin=0x00040004
[19:11:16.166]    TraceD2_Pin=0x00040005
[19:11:16.166]    TraceD3_Pin=0x00040006
[19:11:16.167]  </debugvars>
[19:11:16.167]  
[19:11:16.167]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:11:16.167]    <block atomic="false" info="">
[19:11:16.167]      Sequence("CheckID");
[19:11:16.167]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:11:16.167]          <block atomic="false" info="">
[19:11:16.167]            __var pidr1 = 0;
[19:11:16.168]              // -> [pidr1 <= 0x00000000]
[19:11:16.168]            __var pidr2 = 0;
[19:11:16.168]              // -> [pidr2 <= 0x00000000]
[19:11:16.168]            __var jep106id = 0;
[19:11:16.168]              // -> [jep106id <= 0x00000000]
[19:11:16.168]            __var ROMTableBase = 0;
[19:11:16.168]              // -> [ROMTableBase <= 0x00000000]
[19:11:16.169]            __ap = 0;      // AHB-AP
[19:11:16.169]              // -> [__ap <= 0x00000000]
[19:11:16.169]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:11:16.169]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.170]              // -> [ROMTableBase <= 0xE00FD000]
[19:11:16.170]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:11:16.170]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.170]              // -> [pidr1 <= 0x00000004]
[19:11:16.171]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:11:16.171]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.171]              // -> [pidr2 <= 0x0000001A]
[19:11:16.172]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:11:16.172]              // -> [jep106id <= 0x00000020]
[19:11:16.172]          </block>
[19:11:16.172]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:11:16.172]            // if-block "jep106id != 0x20"
[19:11:16.172]              // =>  FALSE
[19:11:16.173]            // skip if-block "jep106id != 0x20"
[19:11:16.173]          </control>
[19:11:16.173]        </sequence>
[19:11:16.173]    </block>
[19:11:16.173]  </sequence>
[19:11:16.173]  
[19:11:16.190]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:11:16.190]  
[19:11:16.190]  <debugvars>
[19:11:16.190]    // Pre-defined
[19:11:16.190]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:11:16.191]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:11:16.191]    __dp=0x00000000
[19:11:16.191]    __ap=0x00000000
[19:11:16.191]    __traceout=0x00000001      (SWO Trace)
[19:11:16.191]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:11:16.192]    __FlashAddr=0x00000000
[19:11:16.192]    __FlashLen=0x00000000
[19:11:16.192]    __FlashArg=0x00000000
[19:11:16.192]    __FlashOp=0x00000000
[19:11:16.192]    __Result=0x00000000
[19:11:16.192]    
[19:11:16.192]    // User-defined
[19:11:16.193]    DbgMCU_CR=0x00000007
[19:11:16.193]    DbgMCU_APB1_Fz=0x00000000
[19:11:16.193]    DbgMCU_APB2_Fz=0x00000000
[19:11:16.193]    TraceClk_Pin=0x00040002
[19:11:16.193]    TraceD0_Pin=0x00040003
[19:11:16.193]    TraceD1_Pin=0x00040004
[19:11:16.194]    TraceD2_Pin=0x00040005
[19:11:16.194]    TraceD3_Pin=0x00040006
[19:11:16.194]  </debugvars>
[19:11:16.194]  
[19:11:16.194]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:11:16.194]    <block atomic="false" info="">
[19:11:16.194]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:11:16.195]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.195]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:11:16.196]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.196]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:11:16.197]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.197]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:11:16.197]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.197]    </block>
[19:11:16.197]  </sequence>
[19:11:16.197]  
[19:11:16.215]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:11:16.215]  
[19:11:16.215]  <debugvars>
[19:11:16.216]    // Pre-defined
[19:11:16.216]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:11:16.216]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:11:16.216]    __dp=0x00000000
[19:11:16.216]    __ap=0x00000000
[19:11:16.216]    __traceout=0x00000001      (SWO Trace)
[19:11:16.217]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:11:16.217]    __FlashAddr=0x00000000
[19:11:16.217]    __FlashLen=0x00000000
[19:11:16.217]    __FlashArg=0x00000000
[19:11:16.217]    __FlashOp=0x00000000
[19:11:16.217]    __Result=0x00000000
[19:11:16.218]    
[19:11:16.218]    // User-defined
[19:11:16.218]    DbgMCU_CR=0x00000007
[19:11:16.218]    DbgMCU_APB1_Fz=0x00000000
[19:11:16.218]    DbgMCU_APB2_Fz=0x00000000
[19:11:16.218]    TraceClk_Pin=0x00040002
[19:11:16.218]    TraceD0_Pin=0x00040003
[19:11:16.219]    TraceD1_Pin=0x00040004
[19:11:16.219]    TraceD2_Pin=0x00040005
[19:11:16.219]    TraceD3_Pin=0x00040006
[19:11:16.219]  </debugvars>
[19:11:16.219]  
[19:11:16.219]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:11:16.220]    <block atomic="false" info="">
[19:11:16.220]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:11:16.220]        // -> [traceSWO <= 0x00000001]
[19:11:16.220]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:11:16.220]        // -> [traceTPIU <= 0x00000000]
[19:11:16.220]    </block>
[19:11:16.220]    <control if="traceSWO" while="" timeout="0" info="">
[19:11:16.221]      // if-block "traceSWO"
[19:11:16.221]        // =>  TRUE
[19:11:16.221]      <block atomic="false" info="">
[19:11:16.221]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:11:16.221]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:11:16.222]            <block atomic="false" info="">
[19:11:16.222]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:11:16.222]                // -> [dbgmcu_val <= 0x00000000]
[19:11:16.222]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:11:16.222]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:11:16.222]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:11:16.223]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.223]                // -> [dbgmcu_val <= 0x00000007]
[19:11:16.223]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:11:16.223]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:11:16.223]              Sequence("ConfigureTraceSWOPin");
[19:11:16.223]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:11:16.224]                  <block atomic="false" info="">
[19:11:16.224]                    __var pin     = 0;
[19:11:16.224]                      // -> [pin <= 0x00000000]
[19:11:16.224]                    __var port    = 0;
[19:11:16.224]                      // -> [port <= 0x00000000]
[19:11:16.224]                    __var portAdr = 0;
[19:11:16.224]                      // -> [portAdr <= 0x00000000]
[19:11:16.224]                    __var pos     = 0;
[19:11:16.224]                      // -> [pos <= 0x00000000]
[19:11:16.225]                    __var SWO_Pin = 0x00010003;          // PB3
[19:11:16.225]                      // -> [SWO_Pin <= 0x00010003]
[19:11:16.225]                  </block>
[19:11:16.225]                  <block atomic="false" info="configure SWO">
[19:11:16.225]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:11:16.225]                      // -> [pin <= 0x00000003]
[19:11:16.225]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:11:16.226]                      // -> [port <= 0x00000001]
[19:11:16.226]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:11:16.226]                      // -> [portAdr <= 0x40020400]
[19:11:16.226]                    pos = pin * 2;
[19:11:16.226]                      // -> [pos <= 0x00000006]
[19:11:16.226]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:11:16.227]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.227]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.227]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:11:16.228]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.228]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.228]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:11:16.229]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.229]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.229]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:11:16.230]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.230]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.230]                  </block>
[19:11:16.230]                  <control if="pin <  8" while="" timeout="0" info="">
[19:11:16.231]                    // if-block "pin <  8"
[19:11:16.231]                      // =>  TRUE
[19:11:16.231]                    <block atomic="false" info="">
[19:11:16.231]                      pos = ((pin    ) & 7) * 4;
[19:11:16.231]                        // -> [pos <= 0x0000000C]
[19:11:16.231]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:11:16.232]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.232]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.232]                    </block>
[19:11:16.233]                    // end if-block "pin <  8"
[19:11:16.233]                  </control>
[19:11:16.233]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:11:16.233]                    // if-block "pin >= 8"
[19:11:16.233]                      // =>  FALSE
[19:11:16.233]                    // skip if-block "pin >= 8"
[19:11:16.233]                  </control>
[19:11:16.234]                </sequence>
[19:11:16.234]            </block>
[19:11:16.234]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:11:16.234]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:11:16.234]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.235]            </block>
[19:11:16.235]          </sequence>
[19:11:16.235]      </block>
[19:11:16.235]      // end if-block "traceSWO"
[19:11:16.235]    </control>
[19:11:16.235]    <control if="traceTPIU" while="" timeout="0" info="">
[19:11:16.235]      // if-block "traceTPIU"
[19:11:16.236]        // =>  FALSE
[19:11:16.236]      // skip if-block "traceTPIU"
[19:11:16.236]    </control>
[19:11:16.236]  </sequence>
[19:11:16.236]  
[19:11:16.240]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:11:16.240]  
[19:11:16.240]  <debugvars>
[19:11:16.241]    // Pre-defined
[19:11:16.241]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:11:16.241]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:11:16.241]    __dp=0x00000000
[19:11:16.241]    __ap=0x00000000
[19:11:16.242]    __traceout=0x00000001      (SWO Trace)
[19:11:16.242]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:11:16.242]    __FlashAddr=0x00000000
[19:11:16.242]    __FlashLen=0x00000000
[19:11:16.242]    __FlashArg=0x00000000
[19:11:16.242]    __FlashOp=0x00000000
[19:11:16.243]    __Result=0x00000000
[19:11:16.243]    
[19:11:16.243]    // User-defined
[19:11:16.243]    DbgMCU_CR=0x00000007
[19:11:16.243]    DbgMCU_APB1_Fz=0x00000000
[19:11:16.243]    DbgMCU_APB2_Fz=0x00000000
[19:11:16.244]    TraceClk_Pin=0x00040002
[19:11:16.244]    TraceD0_Pin=0x00040003
[19:11:16.244]    TraceD1_Pin=0x00040004
[19:11:16.244]    TraceD2_Pin=0x00040005
[19:11:16.244]    TraceD3_Pin=0x00040006
[19:11:16.244]  </debugvars>
[19:11:16.244]  
[19:11:16.245]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:11:16.245]    <block atomic="false" info="">
[19:11:16.245]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:11:16.245]        // -> [traceSWO <= 0x00000001]
[19:11:16.245]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:11:16.245]        // -> [traceTPIU <= 0x00000000]
[19:11:16.246]    </block>
[19:11:16.246]    <control if="traceSWO" while="" timeout="0" info="">
[19:11:16.246]      // if-block "traceSWO"
[19:11:16.246]        // =>  TRUE
[19:11:16.246]      <block atomic="false" info="">
[19:11:16.247]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:11:16.247]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:11:16.247]            <block atomic="false" info="">
[19:11:16.247]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:11:16.247]                // -> [dbgmcu_val <= 0x00000000]
[19:11:16.248]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:11:16.248]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:11:16.248]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:11:16.248]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.248]                // -> [dbgmcu_val <= 0x00000007]
[19:11:16.248]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:11:16.249]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:11:16.249]              Sequence("ConfigureTraceSWOPin");
[19:11:16.249]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:11:16.249]                  <block atomic="false" info="">
[19:11:16.249]                    __var pin     = 0;
[19:11:16.249]                      // -> [pin <= 0x00000000]
[19:11:16.250]                    __var port    = 0;
[19:11:16.250]                      // -> [port <= 0x00000000]
[19:11:16.250]                    __var portAdr = 0;
[19:11:16.250]                      // -> [portAdr <= 0x00000000]
[19:11:16.250]                    __var pos     = 0;
[19:11:16.250]                      // -> [pos <= 0x00000000]
[19:11:16.250]                    __var SWO_Pin = 0x00010003;          // PB3
[19:11:16.251]                      // -> [SWO_Pin <= 0x00010003]
[19:11:16.251]                  </block>
[19:11:16.251]                  <block atomic="false" info="configure SWO">
[19:11:16.251]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:11:16.251]                      // -> [pin <= 0x00000003]
[19:11:16.251]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:11:16.251]                      // -> [port <= 0x00000001]
[19:11:16.252]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:11:16.252]                      // -> [portAdr <= 0x40020400]
[19:11:16.252]                    pos = pin * 2;
[19:11:16.252]                      // -> [pos <= 0x00000006]
[19:11:16.252]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:11:16.252]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.253]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.253]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:11:16.254]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.254]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.254]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:11:16.255]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.255]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.256]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:11:16.256]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.257]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.257]                  </block>
[19:11:16.257]                  <control if="pin <  8" while="" timeout="0" info="">
[19:11:16.257]                    // if-block "pin <  8"
[19:11:16.257]                      // =>  TRUE
[19:11:16.258]                    <block atomic="false" info="">
[19:11:16.258]                      pos = ((pin    ) & 7) * 4;
[19:11:16.258]                        // -> [pos <= 0x0000000C]
[19:11:16.258]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:11:16.259]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.259]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.259]                    </block>
[19:11:16.259]                    // end if-block "pin <  8"
[19:11:16.259]                  </control>
[19:11:16.260]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:11:16.260]                    // if-block "pin >= 8"
[19:11:16.260]                      // =>  FALSE
[19:11:16.260]                    // skip if-block "pin >= 8"
[19:11:16.260]                  </control>
[19:11:16.260]                </sequence>
[19:11:16.261]            </block>
[19:11:16.261]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:11:16.261]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:11:16.261]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.261]            </block>
[19:11:16.261]          </sequence>
[19:11:16.262]      </block>
[19:11:16.262]      // end if-block "traceSWO"
[19:11:16.262]    </control>
[19:11:16.262]    <control if="traceTPIU" while="" timeout="0" info="">
[19:11:16.262]      // if-block "traceTPIU"
[19:11:16.262]        // =>  FALSE
[19:11:16.263]      // skip if-block "traceTPIU"
[19:11:16.263]    </control>
[19:11:16.263]  </sequence>
[19:11:16.263]  
[19:11:16.496]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:11:16.496]  
[19:11:16.496]  <debugvars>
[19:11:16.497]    // Pre-defined
[19:11:16.497]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:11:16.497]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:11:16.497]    __dp=0x00000000
[19:11:16.497]    __ap=0x00000000
[19:11:16.498]    __traceout=0x00000001      (SWO Trace)
[19:11:16.498]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:11:16.498]    __FlashAddr=0x00000000
[19:11:16.498]    __FlashLen=0x00000000
[19:11:16.498]    __FlashArg=0x00000000
[19:11:16.498]    __FlashOp=0x00000000
[19:11:16.499]    __Result=0x00000000
[19:11:16.499]    
[19:11:16.499]    // User-defined
[19:11:16.499]    DbgMCU_CR=0x00000007
[19:11:16.499]    DbgMCU_APB1_Fz=0x00000000
[19:11:16.499]    DbgMCU_APB2_Fz=0x00000000
[19:11:16.499]    TraceClk_Pin=0x00040002
[19:11:16.500]    TraceD0_Pin=0x00040003
[19:11:16.500]    TraceD1_Pin=0x00040004
[19:11:16.500]    TraceD2_Pin=0x00040005
[19:11:16.500]    TraceD3_Pin=0x00040006
[19:11:16.500]  </debugvars>
[19:11:16.501]  
[19:11:16.501]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:11:16.501]    <block atomic="false" info="">
[19:11:16.501]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:11:16.501]        // -> [traceSWO <= 0x00000001]
[19:11:16.501]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:11:16.501]        // -> [traceTPIU <= 0x00000000]
[19:11:16.502]    </block>
[19:11:16.502]    <control if="traceSWO" while="" timeout="0" info="">
[19:11:16.502]      // if-block "traceSWO"
[19:11:16.502]        // =>  TRUE
[19:11:16.502]      <block atomic="false" info="">
[19:11:16.502]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:11:16.502]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:11:16.503]            <block atomic="false" info="">
[19:11:16.503]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:11:16.503]                // -> [dbgmcu_val <= 0x00000000]
[19:11:16.503]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:11:16.503]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:11:16.503]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:11:16.504]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.504]                // -> [dbgmcu_val <= 0x00000007]
[19:11:16.504]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:11:16.504]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:11:16.505]              Sequence("ConfigureTraceSWOPin");
[19:11:16.505]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:11:16.505]                  <block atomic="false" info="">
[19:11:16.505]                    __var pin     = 0;
[19:11:16.505]                      // -> [pin <= 0x00000000]
[19:11:16.505]                    __var port    = 0;
[19:11:16.506]                      // -> [port <= 0x00000000]
[19:11:16.506]                    __var portAdr = 0;
[19:11:16.506]                      // -> [portAdr <= 0x00000000]
[19:11:16.506]                    __var pos     = 0;
[19:11:16.506]                      // -> [pos <= 0x00000000]
[19:11:16.506]                    __var SWO_Pin = 0x00010003;          // PB3
[19:11:16.506]                      // -> [SWO_Pin <= 0x00010003]
[19:11:16.507]                  </block>
[19:11:16.507]                  <block atomic="false" info="configure SWO">
[19:11:16.507]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:11:16.507]                      // -> [pin <= 0x00000003]
[19:11:16.507]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:11:16.507]                      // -> [port <= 0x00000001]
[19:11:16.507]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:11:16.508]                      // -> [portAdr <= 0x40020400]
[19:11:16.508]                    pos = pin * 2;
[19:11:16.508]                      // -> [pos <= 0x00000006]
[19:11:16.508]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:11:16.509]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.509]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.509]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:11:16.510]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.510]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.510]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:11:16.510]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.511]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.511]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:11:16.511]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.512]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.512]                  </block>
[19:11:16.512]                  <control if="pin <  8" while="" timeout="0" info="">
[19:11:16.513]                    // if-block "pin <  8"
[19:11:16.513]                      // =>  TRUE
[19:11:16.513]                    <block atomic="false" info="">
[19:11:16.513]                      pos = ((pin    ) & 7) * 4;
[19:11:16.513]                        // -> [pos <= 0x0000000C]
[19:11:16.513]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:11:16.514]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.514]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.514]                    </block>
[19:11:16.514]                    // end if-block "pin <  8"
[19:11:16.514]                  </control>
[19:11:16.514]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:11:16.515]                    // if-block "pin >= 8"
[19:11:16.515]                      // =>  FALSE
[19:11:16.515]                    // skip if-block "pin >= 8"
[19:11:16.515]                  </control>
[19:11:16.515]                </sequence>
[19:11:16.515]            </block>
[19:11:16.515]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:11:16.516]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:11:16.516]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:16.516]            </block>
[19:11:16.516]          </sequence>
[19:11:16.516]      </block>
[19:11:16.517]      // end if-block "traceSWO"
[19:11:16.517]    </control>
[19:11:16.517]    <control if="traceTPIU" while="" timeout="0" info="">
[19:11:16.517]      // if-block "traceTPIU"
[19:11:16.517]        // =>  FALSE
[19:11:16.517]      // skip if-block "traceTPIU"
[19:11:16.517]    </control>
[19:11:16.518]  </sequence>
[19:11:16.518]  
[19:11:21.003]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:11:21.003]  
[19:11:21.004]  <debugvars>
[19:11:21.004]    // Pre-defined
[19:11:21.004]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:11:21.004]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:11:21.004]    __dp=0x00000000
[19:11:21.004]    __ap=0x00000000
[19:11:21.005]    __traceout=0x00000001      (SWO Trace)
[19:11:21.005]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:11:21.005]    __FlashAddr=0x00000000
[19:11:21.005]    __FlashLen=0x00000000
[19:11:21.006]    __FlashArg=0x00000000
[19:11:21.006]    __FlashOp=0x00000000
[19:11:21.006]    __Result=0x00000000
[19:11:21.006]    
[19:11:21.006]    // User-defined
[19:11:21.006]    DbgMCU_CR=0x00000007
[19:11:21.007]    DbgMCU_APB1_Fz=0x00000000
[19:11:21.007]    DbgMCU_APB2_Fz=0x00000000
[19:11:21.007]    TraceClk_Pin=0x00040002
[19:11:21.007]    TraceD0_Pin=0x00040003
[19:11:21.007]    TraceD1_Pin=0x00040004
[19:11:21.007]    TraceD2_Pin=0x00040005
[19:11:21.008]    TraceD3_Pin=0x00040006
[19:11:21.008]  </debugvars>
[19:11:21.008]  
[19:11:21.008]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:11:21.008]    <block atomic="false" info="">
[19:11:21.008]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:11:21.009]        // -> [traceSWO <= 0x00000001]
[19:11:21.009]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:11:21.009]        // -> [traceTPIU <= 0x00000000]
[19:11:21.009]    </block>
[19:11:21.009]    <control if="traceSWO" while="" timeout="0" info="">
[19:11:21.009]      // if-block "traceSWO"
[19:11:21.010]        // =>  TRUE
[19:11:21.010]      <block atomic="false" info="">
[19:11:21.010]        Sequence("DisableTraceSWO");
[19:11:21.010]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:11:21.010]            <block atomic="false" info="">
[19:11:21.010]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:11:21.011]                // -> [dbgmcu_val <= 0x00000000]
[19:11:21.011]            </block>
[19:11:21.011]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:11:21.011]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:11:21.012]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:11:21.012]                // -> [dbgmcu_val <= 0x00000007]
[19:11:21.012]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:11:21.012]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:11:21.012]            </block>
[19:11:21.013]          </sequence>
[19:11:21.013]      </block>
[19:11:21.013]      // end if-block "traceSWO"
[19:11:21.013]    </control>
[19:11:21.013]    <control if="traceTPIU" while="" timeout="0" info="">
[19:11:21.013]      // if-block "traceTPIU"
[19:11:21.013]        // =>  FALSE
[19:11:21.014]      // skip if-block "traceTPIU"
[19:11:21.014]    </control>
[19:11:21.014]  </sequence>
[19:11:21.014]  
[19:15:48.325]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:15:48.325]  
[19:15:48.326]  <debugvars>
[19:15:48.326]    // Pre-defined
[19:15:48.326]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:15:48.326]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:15:48.326]    __dp=0x00000000
[19:15:48.327]    __ap=0x00000000
[19:15:48.327]    __traceout=0x00000001      (SWO Trace)
[19:15:48.327]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:15:48.327]    __FlashAddr=0x00000000
[19:15:48.327]    __FlashLen=0x00000000
[19:15:48.327]    __FlashArg=0x00000000
[19:15:48.328]    __FlashOp=0x00000000
[19:15:48.328]    __Result=0x00000000
[19:15:48.328]    
[19:15:48.328]    // User-defined
[19:15:48.328]    DbgMCU_CR=0x00000007
[19:15:48.328]    DbgMCU_APB1_Fz=0x00000000
[19:15:48.329]    DbgMCU_APB2_Fz=0x00000000
[19:15:48.329]    TraceClk_Pin=0x00040002
[19:15:48.329]    TraceD0_Pin=0x00040003
[19:15:48.329]    TraceD1_Pin=0x00040004
[19:15:48.329]    TraceD2_Pin=0x00040005
[19:15:48.329]    TraceD3_Pin=0x00040006
[19:15:48.329]  </debugvars>
[19:15:48.330]  
[19:15:48.330]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:15:48.330]    <block atomic="false" info="">
[19:15:48.330]      Sequence("CheckID");
[19:15:48.330]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:15:48.330]          <block atomic="false" info="">
[19:15:48.331]            __var pidr1 = 0;
[19:15:48.331]              // -> [pidr1 <= 0x00000000]
[19:15:48.331]            __var pidr2 = 0;
[19:15:48.331]              // -> [pidr2 <= 0x00000000]
[19:15:48.331]            __var jep106id = 0;
[19:15:48.331]              // -> [jep106id <= 0x00000000]
[19:15:48.332]            __var ROMTableBase = 0;
[19:15:48.332]              // -> [ROMTableBase <= 0x00000000]
[19:15:48.332]            __ap = 0;      // AHB-AP
[19:15:48.332]              // -> [__ap <= 0x00000000]
[19:15:48.332]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:15:48.333]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.333]              // -> [ROMTableBase <= 0xE00FD000]
[19:15:48.333]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:15:48.333]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.333]              // -> [pidr1 <= 0x00000004]
[19:15:48.334]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:15:48.334]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.334]              // -> [pidr2 <= 0x0000001A]
[19:15:48.334]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:15:48.334]              // -> [jep106id <= 0x00000020]
[19:15:48.335]          </block>
[19:15:48.335]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:15:48.335]            // if-block "jep106id != 0x20"
[19:15:48.335]              // =>  FALSE
[19:15:48.335]            // skip if-block "jep106id != 0x20"
[19:15:48.335]          </control>
[19:15:48.335]        </sequence>
[19:15:48.335]    </block>
[19:15:48.336]  </sequence>
[19:15:48.336]  
[19:15:48.350]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:15:48.350]  
[19:15:48.350]  <debugvars>
[19:15:48.351]    // Pre-defined
[19:15:48.351]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:15:48.351]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:15:48.351]    __dp=0x00000000
[19:15:48.351]    __ap=0x00000000
[19:15:48.352]    __traceout=0x00000001      (SWO Trace)
[19:15:48.352]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:15:48.352]    __FlashAddr=0x00000000
[19:15:48.352]    __FlashLen=0x00000000
[19:15:48.352]    __FlashArg=0x00000000
[19:15:48.352]    __FlashOp=0x00000000
[19:15:48.353]    __Result=0x00000000
[19:15:48.353]    
[19:15:48.353]    // User-defined
[19:15:48.353]    DbgMCU_CR=0x00000007
[19:15:48.353]    DbgMCU_APB1_Fz=0x00000000
[19:15:48.353]    DbgMCU_APB2_Fz=0x00000000
[19:15:48.353]    TraceClk_Pin=0x00040002
[19:15:48.353]    TraceD0_Pin=0x00040003
[19:15:48.354]    TraceD1_Pin=0x00040004
[19:15:48.354]    TraceD2_Pin=0x00040005
[19:15:48.354]    TraceD3_Pin=0x00040006
[19:15:48.354]  </debugvars>
[19:15:48.354]  
[19:15:48.354]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:15:48.354]    <block atomic="false" info="">
[19:15:48.355]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:15:48.355]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.355]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:15:48.356]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.356]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:15:48.356]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.356]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:15:48.357]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:15:48.357]    </block>
[19:15:48.357]  </sequence>
[19:15:48.357]  
[19:16:19.102]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:16:19.102]  
[19:16:19.102]  <debugvars>
[19:16:19.102]    // Pre-defined
[19:16:19.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:16:19.103]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:16:19.103]    __dp=0x00000000
[19:16:19.103]    __ap=0x00000000
[19:16:19.103]    __traceout=0x00000001      (SWO Trace)
[19:16:19.103]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:16:19.105]    __FlashAddr=0x00000000
[19:16:19.105]    __FlashLen=0x00000000
[19:16:19.105]    __FlashArg=0x00000000
[19:16:19.105]    __FlashOp=0x00000000
[19:16:19.105]    __Result=0x00000000
[19:16:19.106]    
[19:16:19.106]    // User-defined
[19:16:19.106]    DbgMCU_CR=0x00000007
[19:16:19.106]    DbgMCU_APB1_Fz=0x00000000
[19:16:19.106]    DbgMCU_APB2_Fz=0x00000000
[19:16:19.106]    TraceClk_Pin=0x00040002
[19:16:19.106]    TraceD0_Pin=0x00040003
[19:16:19.107]    TraceD1_Pin=0x00040004
[19:16:19.107]    TraceD2_Pin=0x00040005
[19:16:19.107]    TraceD3_Pin=0x00040006
[19:16:19.107]  </debugvars>
[19:16:19.107]  
[19:16:19.107]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:16:19.108]    <block atomic="false" info="">
[19:16:19.108]      Sequence("CheckID");
[19:16:19.108]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:16:19.108]          <block atomic="false" info="">
[19:16:19.108]            __var pidr1 = 0;
[19:16:19.108]              // -> [pidr1 <= 0x00000000]
[19:16:19.109]            __var pidr2 = 0;
[19:16:19.109]              // -> [pidr2 <= 0x00000000]
[19:16:19.109]            __var jep106id = 0;
[19:16:19.109]              // -> [jep106id <= 0x00000000]
[19:16:19.109]            __var ROMTableBase = 0;
[19:16:19.109]              // -> [ROMTableBase <= 0x00000000]
[19:16:19.109]            __ap = 0;      // AHB-AP
[19:16:19.110]              // -> [__ap <= 0x00000000]
[19:16:19.110]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:16:19.110]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.110]              // -> [ROMTableBase <= 0xE00FD000]
[19:16:19.110]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:16:19.111]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.111]              // -> [pidr1 <= 0x00000004]
[19:16:19.111]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:16:19.111]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.111]              // -> [pidr2 <= 0x0000001A]
[19:16:19.111]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:16:19.111]              // -> [jep106id <= 0x00000020]
[19:16:19.111]          </block>
[19:16:19.112]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:16:19.112]            // if-block "jep106id != 0x20"
[19:16:19.112]              // =>  FALSE
[19:16:19.112]            // skip if-block "jep106id != 0x20"
[19:16:19.112]          </control>
[19:16:19.112]        </sequence>
[19:16:19.113]    </block>
[19:16:19.113]  </sequence>
[19:16:19.113]  
[19:16:19.129]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:16:19.129]  
[19:16:19.129]  <debugvars>
[19:16:19.129]    // Pre-defined
[19:16:19.129]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:16:19.129]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:16:19.130]    __dp=0x00000000
[19:16:19.130]    __ap=0x00000000
[19:16:19.130]    __traceout=0x00000001      (SWO Trace)
[19:16:19.130]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:16:19.130]    __FlashAddr=0x00000000
[19:16:19.131]    __FlashLen=0x00000000
[19:16:19.131]    __FlashArg=0x00000000
[19:16:19.131]    __FlashOp=0x00000000
[19:16:19.131]    __Result=0x00000000
[19:16:19.131]    
[19:16:19.131]    // User-defined
[19:16:19.132]    DbgMCU_CR=0x00000007
[19:16:19.132]    DbgMCU_APB1_Fz=0x00000000
[19:16:19.132]    DbgMCU_APB2_Fz=0x00000000
[19:16:19.132]    TraceClk_Pin=0x00040002
[19:16:19.132]    TraceD0_Pin=0x00040003
[19:16:19.133]    TraceD1_Pin=0x00040004
[19:16:19.133]    TraceD2_Pin=0x00040005
[19:16:19.133]    TraceD3_Pin=0x00040006
[19:16:19.133]  </debugvars>
[19:16:19.133]  
[19:16:19.133]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:16:19.134]    <block atomic="false" info="">
[19:16:19.134]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:16:19.134]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.135]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:16:19.135]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.135]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:16:19.136]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.136]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:16:19.137]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.137]    </block>
[19:16:19.137]  </sequence>
[19:16:19.137]  
[19:16:19.153]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:16:19.153]  
[19:16:19.154]  <debugvars>
[19:16:19.154]    // Pre-defined
[19:16:19.154]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:16:19.154]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:16:19.154]    __dp=0x00000000
[19:16:19.155]    __ap=0x00000000
[19:16:19.155]    __traceout=0x00000001      (SWO Trace)
[19:16:19.155]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:16:19.155]    __FlashAddr=0x00000000
[19:16:19.155]    __FlashLen=0x00000000
[19:16:19.156]    __FlashArg=0x00000000
[19:16:19.156]    __FlashOp=0x00000000
[19:16:19.156]    __Result=0x00000000
[19:16:19.156]    
[19:16:19.156]    // User-defined
[19:16:19.156]    DbgMCU_CR=0x00000007
[19:16:19.157]    DbgMCU_APB1_Fz=0x00000000
[19:16:19.157]    DbgMCU_APB2_Fz=0x00000000
[19:16:19.157]    TraceClk_Pin=0x00040002
[19:16:19.157]    TraceD0_Pin=0x00040003
[19:16:19.158]    TraceD1_Pin=0x00040004
[19:16:19.158]    TraceD2_Pin=0x00040005
[19:16:19.158]    TraceD3_Pin=0x00040006
[19:16:19.158]  </debugvars>
[19:16:19.158]  
[19:16:19.158]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:16:19.159]    <block atomic="false" info="">
[19:16:19.159]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:16:19.159]        // -> [traceSWO <= 0x00000001]
[19:16:19.159]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:16:19.159]        // -> [traceTPIU <= 0x00000000]
[19:16:19.159]    </block>
[19:16:19.159]    <control if="traceSWO" while="" timeout="0" info="">
[19:16:19.160]      // if-block "traceSWO"
[19:16:19.160]        // =>  TRUE
[19:16:19.160]      <block atomic="false" info="">
[19:16:19.160]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:16:19.160]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:16:19.161]            <block atomic="false" info="">
[19:16:19.161]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:16:19.161]                // -> [dbgmcu_val <= 0x00000000]
[19:16:19.161]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:16:19.161]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:16:19.161]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:16:19.162]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.162]                // -> [dbgmcu_val <= 0x00000007]
[19:16:19.162]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:16:19.162]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:16:19.162]              Sequence("ConfigureTraceSWOPin");
[19:16:19.163]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:16:19.163]                  <block atomic="false" info="">
[19:16:19.163]                    __var pin     = 0;
[19:16:19.163]                      // -> [pin <= 0x00000000]
[19:16:19.163]                    __var port    = 0;
[19:16:19.163]                      // -> [port <= 0x00000000]
[19:16:19.163]                    __var portAdr = 0;
[19:16:19.164]                      // -> [portAdr <= 0x00000000]
[19:16:19.164]                    __var pos     = 0;
[19:16:19.164]                      // -> [pos <= 0x00000000]
[19:16:19.164]                    __var SWO_Pin = 0x00010003;          // PB3
[19:16:19.164]                      // -> [SWO_Pin <= 0x00010003]
[19:16:19.164]                  </block>
[19:16:19.164]                  <block atomic="false" info="configure SWO">
[19:16:19.164]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:16:19.165]                      // -> [pin <= 0x00000003]
[19:16:19.165]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:16:19.165]                      // -> [port <= 0x00000001]
[19:16:19.165]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:16:19.165]                      // -> [portAdr <= 0x40020400]
[19:16:19.165]                    pos = pin * 2;
[19:16:19.165]                      // -> [pos <= 0x00000006]
[19:16:19.166]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:16:19.166]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.167]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.167]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:16:19.167]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.167]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.168]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:16:19.168]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.168]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.168]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:16:19.169]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.169]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.170]                  </block>
[19:16:19.170]                  <control if="pin <  8" while="" timeout="0" info="">
[19:16:19.170]                    // if-block "pin <  8"
[19:16:19.170]                      // =>  TRUE
[19:16:19.170]                    <block atomic="false" info="">
[19:16:19.170]                      pos = ((pin    ) & 7) * 4;
[19:16:19.170]                        // -> [pos <= 0x0000000C]
[19:16:19.171]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:16:19.171]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.171]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.172]                    </block>
[19:16:19.172]                    // end if-block "pin <  8"
[19:16:19.172]                  </control>
[19:16:19.172]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:16:19.172]                    // if-block "pin >= 8"
[19:16:19.172]                      // =>  FALSE
[19:16:19.172]                    // skip if-block "pin >= 8"
[19:16:19.173]                  </control>
[19:16:19.173]                </sequence>
[19:16:19.173]            </block>
[19:16:19.173]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:16:19.173]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:16:19.173]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.174]            </block>
[19:16:19.174]          </sequence>
[19:16:19.174]      </block>
[19:16:19.174]      // end if-block "traceSWO"
[19:16:19.174]    </control>
[19:16:19.174]    <control if="traceTPIU" while="" timeout="0" info="">
[19:16:19.174]      // if-block "traceTPIU"
[19:16:19.174]        // =>  FALSE
[19:16:19.175]      // skip if-block "traceTPIU"
[19:16:19.175]    </control>
[19:16:19.175]  </sequence>
[19:16:19.175]  
[19:16:19.179]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:16:19.179]  
[19:16:19.179]  <debugvars>
[19:16:19.179]    // Pre-defined
[19:16:19.179]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:16:19.179]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:16:19.179]    __dp=0x00000000
[19:16:19.180]    __ap=0x00000000
[19:16:19.180]    __traceout=0x00000001      (SWO Trace)
[19:16:19.180]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:16:19.180]    __FlashAddr=0x00000000
[19:16:19.180]    __FlashLen=0x00000000
[19:16:19.180]    __FlashArg=0x00000000
[19:16:19.181]    __FlashOp=0x00000000
[19:16:19.181]    __Result=0x00000000
[19:16:19.181]    
[19:16:19.181]    // User-defined
[19:16:19.181]    DbgMCU_CR=0x00000007
[19:16:19.181]    DbgMCU_APB1_Fz=0x00000000
[19:16:19.181]    DbgMCU_APB2_Fz=0x00000000
[19:16:19.182]    TraceClk_Pin=0x00040002
[19:16:19.182]    TraceD0_Pin=0x00040003
[19:16:19.182]    TraceD1_Pin=0x00040004
[19:16:19.182]    TraceD2_Pin=0x00040005
[19:16:19.182]    TraceD3_Pin=0x00040006
[19:16:19.182]  </debugvars>
[19:16:19.183]  
[19:16:19.183]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:16:19.183]    <block atomic="false" info="">
[19:16:19.183]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:16:19.183]        // -> [traceSWO <= 0x00000001]
[19:16:19.183]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:16:19.184]        // -> [traceTPIU <= 0x00000000]
[19:16:19.184]    </block>
[19:16:19.184]    <control if="traceSWO" while="" timeout="0" info="">
[19:16:19.184]      // if-block "traceSWO"
[19:16:19.184]        // =>  TRUE
[19:16:19.184]      <block atomic="false" info="">
[19:16:19.185]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:16:19.185]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:16:19.185]            <block atomic="false" info="">
[19:16:19.185]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:16:19.185]                // -> [dbgmcu_val <= 0x00000000]
[19:16:19.185]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:16:19.186]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:16:19.186]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:16:19.186]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.186]                // -> [dbgmcu_val <= 0x00000007]
[19:16:19.186]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:16:19.187]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:16:19.187]              Sequence("ConfigureTraceSWOPin");
[19:16:19.187]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:16:19.187]                  <block atomic="false" info="">
[19:16:19.187]                    __var pin     = 0;
[19:16:19.187]                      // -> [pin <= 0x00000000]
[19:16:19.188]                    __var port    = 0;
[19:16:19.188]                      // -> [port <= 0x00000000]
[19:16:19.188]                    __var portAdr = 0;
[19:16:19.188]                      // -> [portAdr <= 0x00000000]
[19:16:19.188]                    __var pos     = 0;
[19:16:19.188]                      // -> [pos <= 0x00000000]
[19:16:19.188]                    __var SWO_Pin = 0x00010003;          // PB3
[19:16:19.188]                      // -> [SWO_Pin <= 0x00010003]
[19:16:19.189]                  </block>
[19:16:19.189]                  <block atomic="false" info="configure SWO">
[19:16:19.189]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:16:19.189]                      // -> [pin <= 0x00000003]
[19:16:19.189]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:16:19.189]                      // -> [port <= 0x00000001]
[19:16:19.189]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:16:19.189]                      // -> [portAdr <= 0x40020400]
[19:16:19.190]                    pos = pin * 2;
[19:16:19.190]                      // -> [pos <= 0x00000006]
[19:16:19.190]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:16:19.190]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.191]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.191]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:16:19.191]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.192]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.192]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:16:19.192]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.194]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.194]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:16:19.194]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.195]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.195]                  </block>
[19:16:19.195]                  <control if="pin <  8" while="" timeout="0" info="">
[19:16:19.195]                    // if-block "pin <  8"
[19:16:19.195]                      // =>  TRUE
[19:16:19.195]                    <block atomic="false" info="">
[19:16:19.196]                      pos = ((pin    ) & 7) * 4;
[19:16:19.196]                        // -> [pos <= 0x0000000C]
[19:16:19.196]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:16:19.196]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.197]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.197]                    </block>
[19:16:19.197]                    // end if-block "pin <  8"
[19:16:19.197]                  </control>
[19:16:19.197]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:16:19.197]                    // if-block "pin >= 8"
[19:16:19.197]                      // =>  FALSE
[19:16:19.197]                    // skip if-block "pin >= 8"
[19:16:19.198]                  </control>
[19:16:19.198]                </sequence>
[19:16:19.198]            </block>
[19:16:19.198]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:16:19.198]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:16:19.198]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.199]            </block>
[19:16:19.199]          </sequence>
[19:16:19.199]      </block>
[19:16:19.199]      // end if-block "traceSWO"
[19:16:19.199]    </control>
[19:16:19.199]    <control if="traceTPIU" while="" timeout="0" info="">
[19:16:19.199]      // if-block "traceTPIU"
[19:16:19.199]        // =>  FALSE
[19:16:19.199]      // skip if-block "traceTPIU"
[19:16:19.200]    </control>
[19:16:19.200]  </sequence>
[19:16:19.200]  
[19:16:19.423]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:16:19.423]  
[19:16:19.424]  <debugvars>
[19:16:19.424]    // Pre-defined
[19:16:19.424]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:16:19.424]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:16:19.425]    __dp=0x00000000
[19:16:19.425]    __ap=0x00000000
[19:16:19.425]    __traceout=0x00000001      (SWO Trace)
[19:16:19.426]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:16:19.426]    __FlashAddr=0x00000000
[19:16:19.426]    __FlashLen=0x00000000
[19:16:19.426]    __FlashArg=0x00000000
[19:16:19.427]    __FlashOp=0x00000000
[19:16:19.427]    __Result=0x00000000
[19:16:19.427]    
[19:16:19.427]    // User-defined
[19:16:19.428]    DbgMCU_CR=0x00000007
[19:16:19.428]    DbgMCU_APB1_Fz=0x00000000
[19:16:19.428]    DbgMCU_APB2_Fz=0x00000000
[19:16:19.428]    TraceClk_Pin=0x00040002
[19:16:19.429]    TraceD0_Pin=0x00040003
[19:16:19.429]    TraceD1_Pin=0x00040004
[19:16:19.429]    TraceD2_Pin=0x00040005
[19:16:19.430]    TraceD3_Pin=0x00040006
[19:16:19.430]  </debugvars>
[19:16:19.430]  
[19:16:19.430]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:16:19.431]    <block atomic="false" info="">
[19:16:19.431]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:16:19.431]        // -> [traceSWO <= 0x00000001]
[19:16:19.432]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:16:19.432]        // -> [traceTPIU <= 0x00000000]
[19:16:19.432]    </block>
[19:16:19.432]    <control if="traceSWO" while="" timeout="0" info="">
[19:16:19.433]      // if-block "traceSWO"
[19:16:19.433]        // =>  TRUE
[19:16:19.433]      <block atomic="false" info="">
[19:16:19.433]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:16:19.433]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:16:19.434]            <block atomic="false" info="">
[19:16:19.434]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:16:19.434]                // -> [dbgmcu_val <= 0x00000000]
[19:16:19.434]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:16:19.435]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:16:19.435]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:16:19.436]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.436]                // -> [dbgmcu_val <= 0x00000007]
[19:16:19.436]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:16:19.436]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:16:19.437]              Sequence("ConfigureTraceSWOPin");
[19:16:19.437]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:16:19.437]                  <block atomic="false" info="">
[19:16:19.437]                    __var pin     = 0;
[19:16:19.438]                      // -> [pin <= 0x00000000]
[19:16:19.438]                    __var port    = 0;
[19:16:19.438]                      // -> [port <= 0x00000000]
[19:16:19.438]                    __var portAdr = 0;
[19:16:19.438]                      // -> [portAdr <= 0x00000000]
[19:16:19.439]                    __var pos     = 0;
[19:16:19.439]                      // -> [pos <= 0x00000000]
[19:16:19.439]                    __var SWO_Pin = 0x00010003;          // PB3
[19:16:19.439]                      // -> [SWO_Pin <= 0x00010003]
[19:16:19.440]                  </block>
[19:16:19.440]                  <block atomic="false" info="configure SWO">
[19:16:19.440]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:16:19.440]                      // -> [pin <= 0x00000003]
[19:16:19.440]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:16:19.441]                      // -> [port <= 0x00000001]
[19:16:19.441]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:16:19.441]                      // -> [portAdr <= 0x40020400]
[19:16:19.442]                    pos = pin * 2;
[19:16:19.442]                      // -> [pos <= 0x00000006]
[19:16:19.442]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:16:19.443]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.443]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.444]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:16:19.444]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.445]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.445]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:16:19.446]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.446]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.447]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:16:19.447]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.448]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.448]                  </block>
[19:16:19.448]                  <control if="pin <  8" while="" timeout="0" info="">
[19:16:19.448]                    // if-block "pin <  8"
[19:16:19.449]                      // =>  TRUE
[19:16:19.449]                    <block atomic="false" info="">
[19:16:19.449]                      pos = ((pin    ) & 7) * 4;
[19:16:19.449]                        // -> [pos <= 0x0000000C]
[19:16:19.450]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:16:19.450]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.451]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.451]                    </block>
[19:16:19.451]                    // end if-block "pin <  8"
[19:16:19.451]                  </control>
[19:16:19.452]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:16:19.452]                    // if-block "pin >= 8"
[19:16:19.452]                      // =>  FALSE
[19:16:19.452]                    // skip if-block "pin >= 8"
[19:16:19.453]                  </control>
[19:16:19.453]                </sequence>
[19:16:19.453]            </block>
[19:16:19.453]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:16:19.453]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:16:19.454]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:19.454]            </block>
[19:16:19.454]          </sequence>
[19:16:19.454]      </block>
[19:16:19.455]      // end if-block "traceSWO"
[19:16:19.455]    </control>
[19:16:19.455]    <control if="traceTPIU" while="" timeout="0" info="">
[19:16:19.455]      // if-block "traceTPIU"
[19:16:19.455]        // =>  FALSE
[19:16:19.455]      // skip if-block "traceTPIU"
[19:16:19.456]    </control>
[19:16:19.456]  </sequence>
[19:16:19.456]  
[19:16:43.327]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:16:43.327]  
[19:16:43.328]  <debugvars>
[19:16:43.328]    // Pre-defined
[19:16:43.329]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:16:43.329]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:16:43.330]    __dp=0x00000000
[19:16:43.330]    __ap=0x00000000
[19:16:43.331]    __traceout=0x00000001      (SWO Trace)
[19:16:43.331]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:16:43.332]    __FlashAddr=0x00000000
[19:16:43.332]    __FlashLen=0x00000000
[19:16:43.333]    __FlashArg=0x00000000
[19:16:43.333]    __FlashOp=0x00000000
[19:16:43.333]    __Result=0x00000000
[19:16:43.334]    
[19:16:43.334]    // User-defined
[19:16:43.334]    DbgMCU_CR=0x00000007
[19:16:43.335]    DbgMCU_APB1_Fz=0x00000000
[19:16:43.335]    DbgMCU_APB2_Fz=0x00000000
[19:16:43.335]    TraceClk_Pin=0x00040002
[19:16:43.336]    TraceD0_Pin=0x00040003
[19:16:43.336]    TraceD1_Pin=0x00040004
[19:16:43.337]    TraceD2_Pin=0x00040005
[19:16:43.337]    TraceD3_Pin=0x00040006
[19:16:43.337]  </debugvars>
[19:16:43.338]  
[19:16:43.338]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:16:43.338]    <block atomic="false" info="">
[19:16:43.338]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:16:43.339]        // -> [traceSWO <= 0x00000001]
[19:16:43.339]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:16:43.339]        // -> [traceTPIU <= 0x00000000]
[19:16:43.339]    </block>
[19:16:43.339]    <control if="traceSWO" while="" timeout="0" info="">
[19:16:43.340]      // if-block "traceSWO"
[19:16:43.340]        // =>  TRUE
[19:16:43.340]      <block atomic="false" info="">
[19:16:43.340]        Sequence("DisableTraceSWO");
[19:16:43.340]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:16:43.341]            <block atomic="false" info="">
[19:16:43.341]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:16:43.341]                // -> [dbgmcu_val <= 0x00000000]
[19:16:43.341]            </block>
[19:16:43.341]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:16:43.341]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:16:43.342]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:16:43.342]                // -> [dbgmcu_val <= 0x00000007]
[19:16:43.342]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:16:43.343]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:16:43.343]            </block>
[19:16:43.343]          </sequence>
[19:16:43.343]      </block>
[19:16:43.344]      // end if-block "traceSWO"
[19:16:43.344]    </control>
[19:16:43.344]    <control if="traceTPIU" while="" timeout="0" info="">
[19:16:43.344]      // if-block "traceTPIU"
[19:16:43.344]        // =>  FALSE
[19:16:43.344]      // skip if-block "traceTPIU"
[19:16:43.345]    </control>
[19:16:43.345]  </sequence>
[19:16:43.345]  
[19:17:31.168]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:17:31.168]  
[19:17:31.168]  <debugvars>
[19:17:31.168]    // Pre-defined
[19:17:31.169]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:17:31.169]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:17:31.169]    __dp=0x00000000
[19:17:31.169]    __ap=0x00000000
[19:17:31.170]    __traceout=0x00000001      (SWO Trace)
[19:17:31.170]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:17:31.170]    __FlashAddr=0x00000000
[19:17:31.170]    __FlashLen=0x00000000
[19:17:31.170]    __FlashArg=0x00000000
[19:17:31.170]    __FlashOp=0x00000000
[19:17:31.171]    __Result=0x00000000
[19:17:31.171]    
[19:17:31.171]    // User-defined
[19:17:31.171]    DbgMCU_CR=0x00000007
[19:17:31.171]    DbgMCU_APB1_Fz=0x00000000
[19:17:31.171]    DbgMCU_APB2_Fz=0x00000000
[19:17:31.172]    TraceClk_Pin=0x00040002
[19:17:31.172]    TraceD0_Pin=0x00040003
[19:17:31.172]    TraceD1_Pin=0x00040004
[19:17:31.172]    TraceD2_Pin=0x00040005
[19:17:31.172]    TraceD3_Pin=0x00040006
[19:17:31.172]  </debugvars>
[19:17:31.173]  
[19:17:31.173]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:17:31.173]    <block atomic="false" info="">
[19:17:31.173]      Sequence("CheckID");
[19:17:31.173]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:17:31.173]          <block atomic="false" info="">
[19:17:31.174]            __var pidr1 = 0;
[19:17:31.174]              // -> [pidr1 <= 0x00000000]
[19:17:31.174]            __var pidr2 = 0;
[19:17:31.174]              // -> [pidr2 <= 0x00000000]
[19:17:31.174]            __var jep106id = 0;
[19:17:31.175]              // -> [jep106id <= 0x00000000]
[19:17:31.175]            __var ROMTableBase = 0;
[19:17:31.175]              // -> [ROMTableBase <= 0x00000000]
[19:17:31.175]            __ap = 0;      // AHB-AP
[19:17:31.175]              // -> [__ap <= 0x00000000]
[19:17:31.175]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:17:31.176]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.176]              // -> [ROMTableBase <= 0xE00FD000]
[19:17:31.176]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:17:31.176]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.177]              // -> [pidr1 <= 0x00000004]
[19:17:31.177]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:17:31.177]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.177]              // -> [pidr2 <= 0x0000001A]
[19:17:31.177]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:17:31.177]              // -> [jep106id <= 0x00000020]
[19:17:31.178]          </block>
[19:17:31.178]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:17:31.178]            // if-block "jep106id != 0x20"
[19:17:31.178]              // =>  FALSE
[19:17:31.178]            // skip if-block "jep106id != 0x20"
[19:17:31.178]          </control>
[19:17:31.178]        </sequence>
[19:17:31.178]    </block>
[19:17:31.179]  </sequence>
[19:17:31.179]  
[19:17:31.194]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:17:31.194]  
[19:17:31.194]  <debugvars>
[19:17:31.194]    // Pre-defined
[19:17:31.194]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:17:31.195]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:17:31.195]    __dp=0x00000000
[19:17:31.195]    __ap=0x00000000
[19:17:31.195]    __traceout=0x00000001      (SWO Trace)
[19:17:31.195]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:17:31.195]    __FlashAddr=0x00000000
[19:17:31.195]    __FlashLen=0x00000000
[19:17:31.195]    __FlashArg=0x00000000
[19:17:31.196]    __FlashOp=0x00000000
[19:17:31.196]    __Result=0x00000000
[19:17:31.196]    
[19:17:31.196]    // User-defined
[19:17:31.196]    DbgMCU_CR=0x00000007
[19:17:31.196]    DbgMCU_APB1_Fz=0x00000000
[19:17:31.196]    DbgMCU_APB2_Fz=0x00000000
[19:17:31.196]    TraceClk_Pin=0x00040002
[19:17:31.196]    TraceD0_Pin=0x00040003
[19:17:31.196]    TraceD1_Pin=0x00040004
[19:17:31.197]    TraceD2_Pin=0x00040005
[19:17:31.197]    TraceD3_Pin=0x00040006
[19:17:31.197]  </debugvars>
[19:17:31.197]  
[19:17:31.197]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:17:31.197]    <block atomic="false" info="">
[19:17:31.197]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:17:31.198]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.198]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:17:31.198]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.198]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:17:31.199]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.199]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:17:31.199]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:17:31.200]    </block>
[19:17:31.200]  </sequence>
[19:17:31.200]  
[19:18:02.033]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:18:02.033]  
[19:18:02.034]  <debugvars>
[19:18:02.034]    // Pre-defined
[19:18:02.034]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:02.034]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:02.034]    __dp=0x00000000
[19:18:02.035]    __ap=0x00000000
[19:18:02.035]    __traceout=0x00000001      (SWO Trace)
[19:18:02.035]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:02.035]    __FlashAddr=0x00000000
[19:18:02.035]    __FlashLen=0x00000000
[19:18:02.035]    __FlashArg=0x00000000
[19:18:02.036]    __FlashOp=0x00000000
[19:18:02.036]    __Result=0x00000000
[19:18:02.036]    
[19:18:02.036]    // User-defined
[19:18:02.036]    DbgMCU_CR=0x00000007
[19:18:02.036]    DbgMCU_APB1_Fz=0x00000000
[19:18:02.037]    DbgMCU_APB2_Fz=0x00000000
[19:18:02.037]    TraceClk_Pin=0x00040002
[19:18:02.037]    TraceD0_Pin=0x00040003
[19:18:02.037]    TraceD1_Pin=0x00040004
[19:18:02.037]    TraceD2_Pin=0x00040005
[19:18:02.037]    TraceD3_Pin=0x00040006
[19:18:02.037]  </debugvars>
[19:18:02.038]  
[19:18:02.038]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:18:02.038]    <block atomic="false" info="">
[19:18:02.038]      Sequence("CheckID");
[19:18:02.038]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:18:02.038]          <block atomic="false" info="">
[19:18:02.038]            __var pidr1 = 0;
[19:18:02.038]              // -> [pidr1 <= 0x00000000]
[19:18:02.039]            __var pidr2 = 0;
[19:18:02.039]              // -> [pidr2 <= 0x00000000]
[19:18:02.039]            __var jep106id = 0;
[19:18:02.039]              // -> [jep106id <= 0x00000000]
[19:18:02.039]            __var ROMTableBase = 0;
[19:18:02.039]              // -> [ROMTableBase <= 0x00000000]
[19:18:02.039]            __ap = 0;      // AHB-AP
[19:18:02.040]              // -> [__ap <= 0x00000000]
[19:18:02.040]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:18:02.040]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.040]              // -> [ROMTableBase <= 0xE00FD000]
[19:18:02.040]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:18:02.041]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.041]              // -> [pidr1 <= 0x00000004]
[19:18:02.041]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:18:02.042]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.042]              // -> [pidr2 <= 0x0000001A]
[19:18:02.042]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:18:02.042]              // -> [jep106id <= 0x00000020]
[19:18:02.042]          </block>
[19:18:02.043]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:18:02.043]            // if-block "jep106id != 0x20"
[19:18:02.043]              // =>  FALSE
[19:18:02.043]            // skip if-block "jep106id != 0x20"
[19:18:02.043]          </control>
[19:18:02.043]        </sequence>
[19:18:02.043]    </block>
[19:18:02.043]  </sequence>
[19:18:02.044]  
[19:18:02.059]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:18:02.059]  
[19:18:02.059]  <debugvars>
[19:18:02.059]    // Pre-defined
[19:18:02.059]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:02.059]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:02.060]    __dp=0x00000000
[19:18:02.060]    __ap=0x00000000
[19:18:02.060]    __traceout=0x00000001      (SWO Trace)
[19:18:02.060]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:02.060]    __FlashAddr=0x00000000
[19:18:02.060]    __FlashLen=0x00000000
[19:18:02.061]    __FlashArg=0x00000000
[19:18:02.061]    __FlashOp=0x00000000
[19:18:02.061]    __Result=0x00000000
[19:18:02.061]    
[19:18:02.061]    // User-defined
[19:18:02.061]    DbgMCU_CR=0x00000007
[19:18:02.061]    DbgMCU_APB1_Fz=0x00000000
[19:18:02.062]    DbgMCU_APB2_Fz=0x00000000
[19:18:02.062]    TraceClk_Pin=0x00040002
[19:18:02.062]    TraceD0_Pin=0x00040003
[19:18:02.062]    TraceD1_Pin=0x00040004
[19:18:02.062]    TraceD2_Pin=0x00040005
[19:18:02.063]    TraceD3_Pin=0x00040006
[19:18:02.063]  </debugvars>
[19:18:02.063]  
[19:18:02.063]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:18:02.063]    <block atomic="false" info="">
[19:18:02.063]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:18:02.064]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.064]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:18:02.064]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.064]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:18:02.065]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.065]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:18:02.065]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.066]    </block>
[19:18:02.066]  </sequence>
[19:18:02.066]  
[19:18:02.083]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:18:02.083]  
[19:18:02.083]  <debugvars>
[19:18:02.083]    // Pre-defined
[19:18:02.083]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:02.083]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:02.083]    __dp=0x00000000
[19:18:02.083]    __ap=0x00000000
[19:18:02.084]    __traceout=0x00000001      (SWO Trace)
[19:18:02.084]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:02.084]    __FlashAddr=0x00000000
[19:18:02.084]    __FlashLen=0x00000000
[19:18:02.084]    __FlashArg=0x00000000
[19:18:02.084]    __FlashOp=0x00000000
[19:18:02.084]    __Result=0x00000000
[19:18:02.084]    
[19:18:02.084]    // User-defined
[19:18:02.084]    DbgMCU_CR=0x00000007
[19:18:02.085]    DbgMCU_APB1_Fz=0x00000000
[19:18:02.085]    DbgMCU_APB2_Fz=0x00000000
[19:18:02.085]    TraceClk_Pin=0x00040002
[19:18:02.085]    TraceD0_Pin=0x00040003
[19:18:02.085]    TraceD1_Pin=0x00040004
[19:18:02.085]    TraceD2_Pin=0x00040005
[19:18:02.085]    TraceD3_Pin=0x00040006
[19:18:02.085]  </debugvars>
[19:18:02.086]  
[19:18:02.086]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:18:02.086]    <block atomic="false" info="">
[19:18:02.086]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:18:02.086]        // -> [traceSWO <= 0x00000001]
[19:18:02.086]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:18:02.086]        // -> [traceTPIU <= 0x00000000]
[19:18:02.086]    </block>
[19:18:02.086]    <control if="traceSWO" while="" timeout="0" info="">
[19:18:02.087]      // if-block "traceSWO"
[19:18:02.087]        // =>  TRUE
[19:18:02.087]      <block atomic="false" info="">
[19:18:02.087]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:18:02.087]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:18:02.087]            <block atomic="false" info="">
[19:18:02.087]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:18:02.087]                // -> [dbgmcu_val <= 0x00000000]
[19:18:02.087]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:18:02.088]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:18:02.088]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:18:02.088]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.088]                // -> [dbgmcu_val <= 0x00000007]
[19:18:02.088]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:18:02.088]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:18:02.089]              Sequence("ConfigureTraceSWOPin");
[19:18:02.089]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:18:02.089]                  <block atomic="false" info="">
[19:18:02.089]                    __var pin     = 0;
[19:18:02.089]                      // -> [pin <= 0x00000000]
[19:18:02.089]                    __var port    = 0;
[19:18:02.089]                      // -> [port <= 0x00000000]
[19:18:02.089]                    __var portAdr = 0;
[19:18:02.089]                      // -> [portAdr <= 0x00000000]
[19:18:02.090]                    __var pos     = 0;
[19:18:02.090]                      // -> [pos <= 0x00000000]
[19:18:02.090]                    __var SWO_Pin = 0x00010003;          // PB3
[19:18:02.090]                      // -> [SWO_Pin <= 0x00010003]
[19:18:02.090]                  </block>
[19:18:02.090]                  <block atomic="false" info="configure SWO">
[19:18:02.090]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:18:02.090]                      // -> [pin <= 0x00000003]
[19:18:02.090]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:18:02.091]                      // -> [port <= 0x00000001]
[19:18:02.091]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:18:02.091]                      // -> [portAdr <= 0x40020400]
[19:18:02.091]                    pos = pin * 2;
[19:18:02.091]                      // -> [pos <= 0x00000006]
[19:18:02.091]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:18:02.092]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.092]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.093]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:18:02.093]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.093]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.094]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:18:02.094]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.094]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.094]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:18:02.095]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.095]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.095]                  </block>
[19:18:02.096]                  <control if="pin <  8" while="" timeout="0" info="">
[19:18:02.096]                    // if-block "pin <  8"
[19:18:02.096]                      // =>  TRUE
[19:18:02.096]                    <block atomic="false" info="">
[19:18:02.096]                      pos = ((pin    ) & 7) * 4;
[19:18:02.096]                        // -> [pos <= 0x0000000C]
[19:18:02.096]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:18:02.097]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.097]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.097]                    </block>
[19:18:02.097]                    // end if-block "pin <  8"
[19:18:02.097]                  </control>
[19:18:02.098]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:18:02.098]                    // if-block "pin >= 8"
[19:18:02.098]                      // =>  FALSE
[19:18:02.098]                    // skip if-block "pin >= 8"
[19:18:02.098]                  </control>
[19:18:02.098]                </sequence>
[19:18:02.098]            </block>
[19:18:02.098]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:18:02.098]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:18:02.099]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.099]            </block>
[19:18:02.099]          </sequence>
[19:18:02.099]      </block>
[19:18:02.099]      // end if-block "traceSWO"
[19:18:02.099]    </control>
[19:18:02.100]    <control if="traceTPIU" while="" timeout="0" info="">
[19:18:02.100]      // if-block "traceTPIU"
[19:18:02.100]        // =>  FALSE
[19:18:02.100]      // skip if-block "traceTPIU"
[19:18:02.100]    </control>
[19:18:02.100]  </sequence>
[19:18:02.100]  
[19:18:02.104]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:18:02.104]  
[19:18:02.104]  <debugvars>
[19:18:02.104]    // Pre-defined
[19:18:02.104]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:02.104]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:02.105]    __dp=0x00000000
[19:18:02.105]    __ap=0x00000000
[19:18:02.105]    __traceout=0x00000001      (SWO Trace)
[19:18:02.105]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:02.105]    __FlashAddr=0x00000000
[19:18:02.105]    __FlashLen=0x00000000
[19:18:02.105]    __FlashArg=0x00000000
[19:18:02.105]    __FlashOp=0x00000000
[19:18:02.105]    __Result=0x00000000
[19:18:02.106]    
[19:18:02.106]    // User-defined
[19:18:02.106]    DbgMCU_CR=0x00000007
[19:18:02.106]    DbgMCU_APB1_Fz=0x00000000
[19:18:02.106]    DbgMCU_APB2_Fz=0x00000000
[19:18:02.106]    TraceClk_Pin=0x00040002
[19:18:02.106]    TraceD0_Pin=0x00040003
[19:18:02.106]    TraceD1_Pin=0x00040004
[19:18:02.106]    TraceD2_Pin=0x00040005
[19:18:02.106]    TraceD3_Pin=0x00040006
[19:18:02.107]  </debugvars>
[19:18:02.107]  
[19:18:02.107]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:18:02.107]    <block atomic="false" info="">
[19:18:02.107]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:18:02.107]        // -> [traceSWO <= 0x00000001]
[19:18:02.107]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:18:02.107]        // -> [traceTPIU <= 0x00000000]
[19:18:02.108]    </block>
[19:18:02.108]    <control if="traceSWO" while="" timeout="0" info="">
[19:18:02.108]      // if-block "traceSWO"
[19:18:02.108]        // =>  TRUE
[19:18:02.108]      <block atomic="false" info="">
[19:18:02.108]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:18:02.109]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:18:02.109]            <block atomic="false" info="">
[19:18:02.109]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:18:02.109]                // -> [dbgmcu_val <= 0x00000000]
[19:18:02.109]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:18:02.109]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:18:02.109]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:18:02.110]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.110]                // -> [dbgmcu_val <= 0x00000007]
[19:18:02.110]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:18:02.110]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:18:02.110]              Sequence("ConfigureTraceSWOPin");
[19:18:02.110]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:18:02.111]                  <block atomic="false" info="">
[19:18:02.111]                    __var pin     = 0;
[19:18:02.111]                      // -> [pin <= 0x00000000]
[19:18:02.111]                    __var port    = 0;
[19:18:02.111]                      // -> [port <= 0x00000000]
[19:18:02.111]                    __var portAdr = 0;
[19:18:02.111]                      // -> [portAdr <= 0x00000000]
[19:18:02.112]                    __var pos     = 0;
[19:18:02.112]                      // -> [pos <= 0x00000000]
[19:18:02.112]                    __var SWO_Pin = 0x00010003;          // PB3
[19:18:02.112]                      // -> [SWO_Pin <= 0x00010003]
[19:18:02.112]                  </block>
[19:18:02.112]                  <block atomic="false" info="configure SWO">
[19:18:02.112]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:18:02.112]                      // -> [pin <= 0x00000003]
[19:18:02.113]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:18:02.113]                      // -> [port <= 0x00000001]
[19:18:02.113]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:18:02.113]                      // -> [portAdr <= 0x40020400]
[19:18:02.113]                    pos = pin * 2;
[19:18:02.113]                      // -> [pos <= 0x00000006]
[19:18:02.113]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:18:02.114]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.114]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.114]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:18:02.115]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.115]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.115]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:18:02.116]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.116]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.116]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:18:02.117]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.117]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.117]                  </block>
[19:18:02.118]                  <control if="pin <  8" while="" timeout="0" info="">
[19:18:02.118]                    // if-block "pin <  8"
[19:18:02.118]                      // =>  TRUE
[19:18:02.118]                    <block atomic="false" info="">
[19:18:02.118]                      pos = ((pin    ) & 7) * 4;
[19:18:02.118]                        // -> [pos <= 0x0000000C]
[19:18:02.118]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:18:02.119]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.119]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.119]                    </block>
[19:18:02.120]                    // end if-block "pin <  8"
[19:18:02.120]                  </control>
[19:18:02.120]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:18:02.120]                    // if-block "pin >= 8"
[19:18:02.120]                      // =>  FALSE
[19:18:02.120]                    // skip if-block "pin >= 8"
[19:18:02.120]                  </control>
[19:18:02.120]                </sequence>
[19:18:02.121]            </block>
[19:18:02.121]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:18:02.121]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:18:02.121]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.121]            </block>
[19:18:02.122]          </sequence>
[19:18:02.122]      </block>
[19:18:02.122]      // end if-block "traceSWO"
[19:18:02.122]    </control>
[19:18:02.122]    <control if="traceTPIU" while="" timeout="0" info="">
[19:18:02.122]      // if-block "traceTPIU"
[19:18:02.122]        // =>  FALSE
[19:18:02.122]      // skip if-block "traceTPIU"
[19:18:02.122]    </control>
[19:18:02.123]  </sequence>
[19:18:02.123]  
[19:18:02.335]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:18:02.335]  
[19:18:02.335]  <debugvars>
[19:18:02.335]    // Pre-defined
[19:18:02.335]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:18:02.335]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:18:02.335]    __dp=0x00000000
[19:18:02.336]    __ap=0x00000000
[19:18:02.336]    __traceout=0x00000001      (SWO Trace)
[19:18:02.336]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:18:02.336]    __FlashAddr=0x00000000
[19:18:02.336]    __FlashLen=0x00000000
[19:18:02.336]    __FlashArg=0x00000000
[19:18:02.336]    __FlashOp=0x00000000
[19:18:02.336]    __Result=0x00000000
[19:18:02.336]    
[19:18:02.336]    // User-defined
[19:18:02.337]    DbgMCU_CR=0x00000007
[19:18:02.337]    DbgMCU_APB1_Fz=0x00000000
[19:18:02.337]    DbgMCU_APB2_Fz=0x00000000
[19:18:02.337]    TraceClk_Pin=0x00040002
[19:18:02.337]    TraceD0_Pin=0x00040003
[19:18:02.337]    TraceD1_Pin=0x00040004
[19:18:02.337]    TraceD2_Pin=0x00040005
[19:18:02.337]    TraceD3_Pin=0x00040006
[19:18:02.338]  </debugvars>
[19:18:02.338]  
[19:18:02.338]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:18:02.338]    <block atomic="false" info="">
[19:18:02.338]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:18:02.338]        // -> [traceSWO <= 0x00000001]
[19:18:02.338]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:18:02.338]        // -> [traceTPIU <= 0x00000000]
[19:18:02.339]    </block>
[19:18:02.339]    <control if="traceSWO" while="" timeout="0" info="">
[19:18:02.339]      // if-block "traceSWO"
[19:18:02.339]        // =>  TRUE
[19:18:02.339]      <block atomic="false" info="">
[19:18:02.339]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:18:02.339]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:18:02.339]            <block atomic="false" info="">
[19:18:02.340]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:18:02.340]                // -> [dbgmcu_val <= 0x00000000]
[19:18:02.340]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:18:02.340]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:18:02.340]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:18:02.340]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.341]                // -> [dbgmcu_val <= 0x00000007]
[19:18:02.341]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:18:02.341]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:18:02.341]              Sequence("ConfigureTraceSWOPin");
[19:18:02.341]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:18:02.341]                  <block atomic="false" info="">
[19:18:02.341]                    __var pin     = 0;
[19:18:02.342]                      // -> [pin <= 0x00000000]
[19:18:02.342]                    __var port    = 0;
[19:18:02.342]                      // -> [port <= 0x00000000]
[19:18:02.342]                    __var portAdr = 0;
[19:18:02.342]                      // -> [portAdr <= 0x00000000]
[19:18:02.342]                    __var pos     = 0;
[19:18:02.342]                      // -> [pos <= 0x00000000]
[19:18:02.342]                    __var SWO_Pin = 0x00010003;          // PB3
[19:18:02.343]                      // -> [SWO_Pin <= 0x00010003]
[19:18:02.343]                  </block>
[19:18:02.343]                  <block atomic="false" info="configure SWO">
[19:18:02.343]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:18:02.343]                      // -> [pin <= 0x00000003]
[19:18:02.343]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:18:02.343]                      // -> [port <= 0x00000001]
[19:18:02.343]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:18:02.343]                      // -> [portAdr <= 0x40020400]
[19:18:02.344]                    pos = pin * 2;
[19:18:02.344]                      // -> [pos <= 0x00000006]
[19:18:02.344]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:18:02.344]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.345]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.345]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:18:02.345]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.346]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.346]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:18:02.346]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.347]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.347]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:18:02.347]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.347]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.348]                  </block>
[19:18:02.348]                  <control if="pin <  8" while="" timeout="0" info="">
[19:18:02.348]                    // if-block "pin <  8"
[19:18:02.348]                      // =>  TRUE
[19:18:02.348]                    <block atomic="false" info="">
[19:18:02.348]                      pos = ((pin    ) & 7) * 4;
[19:18:02.348]                        // -> [pos <= 0x0000000C]
[19:18:02.348]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:18:02.349]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.349]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.349]                    </block>
[19:18:02.349]                    // end if-block "pin <  8"
[19:18:02.350]                  </control>
[19:18:02.350]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:18:02.350]                    // if-block "pin >= 8"
[19:18:02.350]                      // =>  FALSE
[19:18:02.350]                    // skip if-block "pin >= 8"
[19:18:02.350]                  </control>
[19:18:02.350]                </sequence>
[19:18:02.350]            </block>
[19:18:02.350]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:18:02.351]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:18:02.351]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:18:02.351]            </block>
[19:18:02.351]          </sequence>
[19:18:02.351]      </block>
[19:18:02.351]      // end if-block "traceSWO"
[19:18:02.352]    </control>
[19:18:02.352]    <control if="traceTPIU" while="" timeout="0" info="">
[19:18:02.352]      // if-block "traceTPIU"
[19:18:02.352]        // =>  FALSE
[19:18:02.352]      // skip if-block "traceTPIU"
[19:18:02.352]    </control>
[19:18:02.352]  </sequence>
[19:18:02.352]  
[19:19:50.173]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:19:50.173]  
[19:19:50.174]  <debugvars>
[19:19:50.174]    // Pre-defined
[19:19:50.175]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:19:50.175]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:19:50.176]    __dp=0x00000000
[19:19:50.176]    __ap=0x00000000
[19:19:50.176]    __traceout=0x00000001      (SWO Trace)
[19:19:50.177]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:19:50.177]    __FlashAddr=0x00000000
[19:19:50.177]    __FlashLen=0x00000000
[19:19:50.178]    __FlashArg=0x00000000
[19:19:50.178]    __FlashOp=0x00000000
[19:19:50.179]    __Result=0x00000000
[19:19:50.179]    
[19:19:50.179]    // User-defined
[19:19:50.179]    DbgMCU_CR=0x00000007
[19:19:50.180]    DbgMCU_APB1_Fz=0x00000000
[19:19:50.180]    DbgMCU_APB2_Fz=0x00000000
[19:19:50.181]    TraceClk_Pin=0x00040002
[19:19:50.181]    TraceD0_Pin=0x00040003
[19:19:50.181]    TraceD1_Pin=0x00040004
[19:19:50.182]    TraceD2_Pin=0x00040005
[19:19:50.182]    TraceD3_Pin=0x00040006
[19:19:50.183]  </debugvars>
[19:19:50.184]  
[19:19:50.184]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:19:50.184]    <block atomic="false" info="">
[19:19:50.184]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:19:50.185]        // -> [traceSWO <= 0x00000001]
[19:19:50.185]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:19:50.185]        // -> [traceTPIU <= 0x00000000]
[19:19:50.186]    </block>
[19:19:50.186]    <control if="traceSWO" while="" timeout="0" info="">
[19:19:50.186]      // if-block "traceSWO"
[19:19:50.187]        // =>  TRUE
[19:19:50.187]      <block atomic="false" info="">
[19:19:50.187]        Sequence("DisableTraceSWO");
[19:19:50.187]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:19:50.187]            <block atomic="false" info="">
[19:19:50.188]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:19:50.188]                // -> [dbgmcu_val <= 0x00000000]
[19:19:50.188]            </block>
[19:19:50.188]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:19:50.188]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:19:50.189]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:19:50.189]                // -> [dbgmcu_val <= 0x00000007]
[19:19:50.189]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:19:50.190]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:19:50.190]            </block>
[19:19:50.190]          </sequence>
[19:19:50.190]      </block>
[19:19:50.191]      // end if-block "traceSWO"
[19:19:50.191]    </control>
[19:19:50.191]    <control if="traceTPIU" while="" timeout="0" info="">
[19:19:50.191]      // if-block "traceTPIU"
[19:19:50.191]        // =>  FALSE
[19:19:50.192]      // skip if-block "traceTPIU"
[19:19:50.192]    </control>
[19:19:50.192]  </sequence>
[19:19:50.192]  
[19:20:33.877]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:20:33.877]  
[19:20:33.877]  <debugvars>
[19:20:33.877]    // Pre-defined
[19:20:33.878]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:20:33.878]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:20:33.878]    __dp=0x00000000
[19:20:33.878]    __ap=0x00000000
[19:20:33.878]    __traceout=0x00000001      (SWO Trace)
[19:20:33.879]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:20:33.879]    __FlashAddr=0x00000000
[19:20:33.879]    __FlashLen=0x00000000
[19:20:33.879]    __FlashArg=0x00000000
[19:20:33.879]    __FlashOp=0x00000000
[19:20:33.879]    __Result=0x00000000
[19:20:33.880]    
[19:20:33.880]    // User-defined
[19:20:33.880]    DbgMCU_CR=0x00000007
[19:20:33.880]    DbgMCU_APB1_Fz=0x00000000
[19:20:33.880]    DbgMCU_APB2_Fz=0x00000000
[19:20:33.880]    TraceClk_Pin=0x00040002
[19:20:33.881]    TraceD0_Pin=0x00040003
[19:20:33.881]    TraceD1_Pin=0x00040004
[19:20:33.881]    TraceD2_Pin=0x00040005
[19:20:33.881]    TraceD3_Pin=0x00040006
[19:20:33.881]  </debugvars>
[19:20:33.881]  
[19:20:33.881]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:20:33.882]    <block atomic="false" info="">
[19:20:33.882]      Sequence("CheckID");
[19:20:33.882]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:20:33.882]          <block atomic="false" info="">
[19:20:33.882]            __var pidr1 = 0;
[19:20:33.882]              // -> [pidr1 <= 0x00000000]
[19:20:33.882]            __var pidr2 = 0;
[19:20:33.883]              // -> [pidr2 <= 0x00000000]
[19:20:33.883]            __var jep106id = 0;
[19:20:33.883]              // -> [jep106id <= 0x00000000]
[19:20:33.883]            __var ROMTableBase = 0;
[19:20:33.883]              // -> [ROMTableBase <= 0x00000000]
[19:20:33.883]            __ap = 0;      // AHB-AP
[19:20:33.883]              // -> [__ap <= 0x00000000]
[19:20:33.883]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:20:33.884]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.884]              // -> [ROMTableBase <= 0xE00FD000]
[19:20:33.884]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:20:33.885]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.885]              // -> [pidr1 <= 0x00000004]
[19:20:33.885]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:20:33.885]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.885]              // -> [pidr2 <= 0x0000001A]
[19:20:33.886]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:20:33.886]              // -> [jep106id <= 0x00000020]
[19:20:33.886]          </block>
[19:20:33.886]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:20:33.886]            // if-block "jep106id != 0x20"
[19:20:33.886]              // =>  FALSE
[19:20:33.886]            // skip if-block "jep106id != 0x20"
[19:20:33.886]          </control>
[19:20:33.887]        </sequence>
[19:20:33.887]    </block>
[19:20:33.887]  </sequence>
[19:20:33.887]  
[19:20:33.903]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:20:33.903]  
[19:20:33.903]  <debugvars>
[19:20:33.903]    // Pre-defined
[19:20:33.903]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:20:33.903]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:20:33.904]    __dp=0x00000000
[19:20:33.904]    __ap=0x00000000
[19:20:33.904]    __traceout=0x00000001      (SWO Trace)
[19:20:33.904]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:20:33.904]    __FlashAddr=0x00000000
[19:20:33.904]    __FlashLen=0x00000000
[19:20:33.904]    __FlashArg=0x00000000
[19:20:33.904]    __FlashOp=0x00000000
[19:20:33.905]    __Result=0x00000000
[19:20:33.905]    
[19:20:33.905]    // User-defined
[19:20:33.905]    DbgMCU_CR=0x00000007
[19:20:33.905]    DbgMCU_APB1_Fz=0x00000000
[19:20:33.905]    DbgMCU_APB2_Fz=0x00000000
[19:20:33.906]    TraceClk_Pin=0x00040002
[19:20:33.906]    TraceD0_Pin=0x00040003
[19:20:33.906]    TraceD1_Pin=0x00040004
[19:20:33.906]    TraceD2_Pin=0x00040005
[19:20:33.906]    TraceD3_Pin=0x00040006
[19:20:33.906]  </debugvars>
[19:20:33.907]  
[19:20:33.907]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:20:33.907]    <block atomic="false" info="">
[19:20:33.907]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:20:33.908]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.908]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:20:33.908]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.908]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:20:33.909]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.909]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:20:33.910]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:20:33.910]    </block>
[19:20:33.910]  </sequence>
[19:20:33.910]  
[19:21:04.745]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:21:04.745]  
[19:21:04.745]  <debugvars>
[19:21:04.745]    // Pre-defined
[19:21:04.745]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:04.746]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:04.746]    __dp=0x00000000
[19:21:04.746]    __ap=0x00000000
[19:21:04.746]    __traceout=0x00000001      (SWO Trace)
[19:21:04.746]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:04.746]    __FlashAddr=0x00000000
[19:21:04.747]    __FlashLen=0x00000000
[19:21:04.747]    __FlashArg=0x00000000
[19:21:04.747]    __FlashOp=0x00000000
[19:21:04.747]    __Result=0x00000000
[19:21:04.747]    
[19:21:04.747]    // User-defined
[19:21:04.748]    DbgMCU_CR=0x00000007
[19:21:04.748]    DbgMCU_APB1_Fz=0x00000000
[19:21:04.748]    DbgMCU_APB2_Fz=0x00000000
[19:21:04.748]    TraceClk_Pin=0x00040002
[19:21:04.748]    TraceD0_Pin=0x00040003
[19:21:04.748]    TraceD1_Pin=0x00040004
[19:21:04.749]    TraceD2_Pin=0x00040005
[19:21:04.749]    TraceD3_Pin=0x00040006
[19:21:04.749]  </debugvars>
[19:21:04.749]  
[19:21:04.749]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:21:04.750]    <block atomic="false" info="">
[19:21:04.750]      Sequence("CheckID");
[19:21:04.750]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:21:04.750]          <block atomic="false" info="">
[19:21:04.750]            __var pidr1 = 0;
[19:21:04.750]              // -> [pidr1 <= 0x00000000]
[19:21:04.750]            __var pidr2 = 0;
[19:21:04.751]              // -> [pidr2 <= 0x00000000]
[19:21:04.751]            __var jep106id = 0;
[19:21:04.751]              // -> [jep106id <= 0x00000000]
[19:21:04.751]            __var ROMTableBase = 0;
[19:21:04.751]              // -> [ROMTableBase <= 0x00000000]
[19:21:04.752]            __ap = 0;      // AHB-AP
[19:21:04.752]              // -> [__ap <= 0x00000000]
[19:21:04.752]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:21:04.752]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.752]              // -> [ROMTableBase <= 0xE00FD000]
[19:21:04.753]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:21:04.753]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.753]              // -> [pidr1 <= 0x00000004]
[19:21:04.753]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:21:04.754]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.754]              // -> [pidr2 <= 0x0000001A]
[19:21:04.754]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:21:04.754]              // -> [jep106id <= 0x00000020]
[19:21:04.754]          </block>
[19:21:04.754]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:21:04.755]            // if-block "jep106id != 0x20"
[19:21:04.755]              // =>  FALSE
[19:21:04.755]            // skip if-block "jep106id != 0x20"
[19:21:04.755]          </control>
[19:21:04.755]        </sequence>
[19:21:04.755]    </block>
[19:21:04.755]  </sequence>
[19:21:04.756]  
[19:21:04.771]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:21:04.771]  
[19:21:04.771]  <debugvars>
[19:21:04.771]    // Pre-defined
[19:21:04.771]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:04.772]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:04.772]    __dp=0x00000000
[19:21:04.772]    __ap=0x00000000
[19:21:04.772]    __traceout=0x00000001      (SWO Trace)
[19:21:04.772]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:04.772]    __FlashAddr=0x00000000
[19:21:04.773]    __FlashLen=0x00000000
[19:21:04.773]    __FlashArg=0x00000000
[19:21:04.773]    __FlashOp=0x00000000
[19:21:04.773]    __Result=0x00000000
[19:21:04.773]    
[19:21:04.773]    // User-defined
[19:21:04.773]    DbgMCU_CR=0x00000007
[19:21:04.773]    DbgMCU_APB1_Fz=0x00000000
[19:21:04.773]    DbgMCU_APB2_Fz=0x00000000
[19:21:04.773]    TraceClk_Pin=0x00040002
[19:21:04.774]    TraceD0_Pin=0x00040003
[19:21:04.774]    TraceD1_Pin=0x00040004
[19:21:04.774]    TraceD2_Pin=0x00040005
[19:21:04.774]    TraceD3_Pin=0x00040006
[19:21:04.774]  </debugvars>
[19:21:04.774]  
[19:21:04.774]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:21:04.775]    <block atomic="false" info="">
[19:21:04.775]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:21:04.775]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.775]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:21:04.776]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.776]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:21:04.776]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.776]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:21:04.777]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.777]    </block>
[19:21:04.777]  </sequence>
[19:21:04.777]  
[19:21:04.793]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:21:04.793]  
[19:21:04.794]  <debugvars>
[19:21:04.794]    // Pre-defined
[19:21:04.794]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:04.794]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:04.794]    __dp=0x00000000
[19:21:04.795]    __ap=0x00000000
[19:21:04.795]    __traceout=0x00000001      (SWO Trace)
[19:21:04.795]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:04.795]    __FlashAddr=0x00000000
[19:21:04.795]    __FlashLen=0x00000000
[19:21:04.796]    __FlashArg=0x00000000
[19:21:04.796]    __FlashOp=0x00000000
[19:21:04.796]    __Result=0x00000000
[19:21:04.796]    
[19:21:04.796]    // User-defined
[19:21:04.796]    DbgMCU_CR=0x00000007
[19:21:04.797]    DbgMCU_APB1_Fz=0x00000000
[19:21:04.797]    DbgMCU_APB2_Fz=0x00000000
[19:21:04.797]    TraceClk_Pin=0x00040002
[19:21:04.797]    TraceD0_Pin=0x00040003
[19:21:04.797]    TraceD1_Pin=0x00040004
[19:21:04.798]    TraceD2_Pin=0x00040005
[19:21:04.798]    TraceD3_Pin=0x00040006
[19:21:04.798]  </debugvars>
[19:21:04.798]  
[19:21:04.798]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:21:04.798]    <block atomic="false" info="">
[19:21:04.798]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:21:04.798]        // -> [traceSWO <= 0x00000001]
[19:21:04.799]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:21:04.799]        // -> [traceTPIU <= 0x00000000]
[19:21:04.799]    </block>
[19:21:04.799]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:04.799]      // if-block "traceSWO"
[19:21:04.799]        // =>  TRUE
[19:21:04.800]      <block atomic="false" info="">
[19:21:04.800]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:21:04.800]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:21:04.800]            <block atomic="false" info="">
[19:21:04.800]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:04.800]                // -> [dbgmcu_val <= 0x00000000]
[19:21:04.800]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:21:04.801]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:21:04.801]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:21:04.801]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.801]                // -> [dbgmcu_val <= 0x00000007]
[19:21:04.802]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:21:04.802]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:21:04.802]              Sequence("ConfigureTraceSWOPin");
[19:21:04.802]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:21:04.802]                  <block atomic="false" info="">
[19:21:04.802]                    __var pin     = 0;
[19:21:04.802]                      // -> [pin <= 0x00000000]
[19:21:04.802]                    __var port    = 0;
[19:21:04.802]                      // -> [port <= 0x00000000]
[19:21:04.803]                    __var portAdr = 0;
[19:21:04.803]                      // -> [portAdr <= 0x00000000]
[19:21:04.803]                    __var pos     = 0;
[19:21:04.803]                      // -> [pos <= 0x00000000]
[19:21:04.803]                    __var SWO_Pin = 0x00010003;          // PB3
[19:21:04.803]                      // -> [SWO_Pin <= 0x00010003]
[19:21:04.803]                  </block>
[19:21:04.804]                  <block atomic="false" info="configure SWO">
[19:21:04.804]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:21:04.804]                      // -> [pin <= 0x00000003]
[19:21:04.804]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:21:04.804]                      // -> [port <= 0x00000001]
[19:21:04.804]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:21:04.804]                      // -> [portAdr <= 0x40020400]
[19:21:04.804]                    pos = pin * 2;
[19:21:04.804]                      // -> [pos <= 0x00000006]
[19:21:04.805]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:21:04.805]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.805]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.806]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:21:04.806]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.806]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.807]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:21:04.807]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.808]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.808]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:21:04.808]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.809]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.809]                  </block>
[19:21:04.809]                  <control if="pin <  8" while="" timeout="0" info="">
[19:21:04.809]                    // if-block "pin <  8"
[19:21:04.809]                      // =>  TRUE
[19:21:04.809]                    <block atomic="false" info="">
[19:21:04.810]                      pos = ((pin    ) & 7) * 4;
[19:21:04.810]                        // -> [pos <= 0x0000000C]
[19:21:04.810]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:21:04.810]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.811]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.811]                    </block>
[19:21:04.811]                    // end if-block "pin <  8"
[19:21:04.811]                  </control>
[19:21:04.811]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:21:04.811]                    // if-block "pin >= 8"
[19:21:04.811]                      // =>  FALSE
[19:21:04.812]                    // skip if-block "pin >= 8"
[19:21:04.812]                  </control>
[19:21:04.812]                </sequence>
[19:21:04.812]            </block>
[19:21:04.812]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:04.812]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:21:04.813]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.813]            </block>
[19:21:04.813]          </sequence>
[19:21:04.813]      </block>
[19:21:04.813]      // end if-block "traceSWO"
[19:21:04.813]    </control>
[19:21:04.813]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:04.814]      // if-block "traceTPIU"
[19:21:04.814]        // =>  FALSE
[19:21:04.814]      // skip if-block "traceTPIU"
[19:21:04.814]    </control>
[19:21:04.814]  </sequence>
[19:21:04.814]  
[19:21:04.818]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:21:04.818]  
[19:21:04.818]  <debugvars>
[19:21:04.818]    // Pre-defined
[19:21:04.819]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:04.819]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:04.819]    __dp=0x00000000
[19:21:04.819]    __ap=0x00000000
[19:21:04.819]    __traceout=0x00000001      (SWO Trace)
[19:21:04.819]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:04.819]    __FlashAddr=0x00000000
[19:21:04.819]    __FlashLen=0x00000000
[19:21:04.820]    __FlashArg=0x00000000
[19:21:04.820]    __FlashOp=0x00000000
[19:21:04.820]    __Result=0x00000000
[19:21:04.820]    
[19:21:04.820]    // User-defined
[19:21:04.820]    DbgMCU_CR=0x00000007
[19:21:04.820]    DbgMCU_APB1_Fz=0x00000000
[19:21:04.821]    DbgMCU_APB2_Fz=0x00000000
[19:21:04.821]    TraceClk_Pin=0x00040002
[19:21:04.821]    TraceD0_Pin=0x00040003
[19:21:04.821]    TraceD1_Pin=0x00040004
[19:21:04.821]    TraceD2_Pin=0x00040005
[19:21:04.821]    TraceD3_Pin=0x00040006
[19:21:04.821]  </debugvars>
[19:21:04.821]  
[19:21:04.822]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:21:04.822]    <block atomic="false" info="">
[19:21:04.822]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:21:04.822]        // -> [traceSWO <= 0x00000001]
[19:21:04.822]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:21:04.822]        // -> [traceTPIU <= 0x00000000]
[19:21:04.822]    </block>
[19:21:04.823]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:04.823]      // if-block "traceSWO"
[19:21:04.823]        // =>  TRUE
[19:21:04.823]      <block atomic="false" info="">
[19:21:04.823]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:21:04.823]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:21:04.823]            <block atomic="false" info="">
[19:21:04.823]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:04.823]                // -> [dbgmcu_val <= 0x00000000]
[19:21:04.824]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:21:04.824]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:21:04.824]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:21:04.824]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.824]                // -> [dbgmcu_val <= 0x00000007]
[19:21:04.825]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:21:04.825]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:21:04.825]              Sequence("ConfigureTraceSWOPin");
[19:21:04.825]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:21:04.825]                  <block atomic="false" info="">
[19:21:04.825]                    __var pin     = 0;
[19:21:04.825]                      // -> [pin <= 0x00000000]
[19:21:04.825]                    __var port    = 0;
[19:21:04.826]                      // -> [port <= 0x00000000]
[19:21:04.826]                    __var portAdr = 0;
[19:21:04.826]                      // -> [portAdr <= 0x00000000]
[19:21:04.826]                    __var pos     = 0;
[19:21:04.826]                      // -> [pos <= 0x00000000]
[19:21:04.826]                    __var SWO_Pin = 0x00010003;          // PB3
[19:21:04.826]                      // -> [SWO_Pin <= 0x00010003]
[19:21:04.826]                  </block>
[19:21:04.827]                  <block atomic="false" info="configure SWO">
[19:21:04.827]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:21:04.827]                      // -> [pin <= 0x00000003]
[19:21:04.827]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:21:04.827]                      // -> [port <= 0x00000001]
[19:21:04.827]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:21:04.827]                      // -> [portAdr <= 0x40020400]
[19:21:04.827]                    pos = pin * 2;
[19:21:04.828]                      // -> [pos <= 0x00000006]
[19:21:04.828]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:21:04.828]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.828]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.829]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:21:04.829]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.830]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.830]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:21:04.830]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.831]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.831]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:21:04.831]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.832]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.832]                  </block>
[19:21:04.832]                  <control if="pin <  8" while="" timeout="0" info="">
[19:21:04.832]                    // if-block "pin <  8"
[19:21:04.832]                      // =>  TRUE
[19:21:04.832]                    <block atomic="false" info="">
[19:21:04.832]                      pos = ((pin    ) & 7) * 4;
[19:21:04.832]                        // -> [pos <= 0x0000000C]
[19:21:04.833]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:21:04.833]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.834]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.834]                    </block>
[19:21:04.834]                    // end if-block "pin <  8"
[19:21:04.834]                  </control>
[19:21:04.834]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:21:04.834]                    // if-block "pin >= 8"
[19:21:04.834]                      // =>  FALSE
[19:21:04.835]                    // skip if-block "pin >= 8"
[19:21:04.835]                  </control>
[19:21:04.835]                </sequence>
[19:21:04.835]            </block>
[19:21:04.835]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:04.835]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:21:04.836]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:04.836]            </block>
[19:21:04.836]          </sequence>
[19:21:04.836]      </block>
[19:21:04.836]      // end if-block "traceSWO"
[19:21:04.836]    </control>
[19:21:04.837]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:04.837]      // if-block "traceTPIU"
[19:21:04.837]        // =>  FALSE
[19:21:04.837]      // skip if-block "traceTPIU"
[19:21:04.837]    </control>
[19:21:04.837]  </sequence>
[19:21:04.837]  
[19:21:05.055]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:21:05.055]  
[19:21:05.055]  <debugvars>
[19:21:05.055]    // Pre-defined
[19:21:05.055]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:05.055]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:05.056]    __dp=0x00000000
[19:21:05.056]    __ap=0x00000000
[19:21:05.056]    __traceout=0x00000001      (SWO Trace)
[19:21:05.056]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:05.056]    __FlashAddr=0x00000000
[19:21:05.056]    __FlashLen=0x00000000
[19:21:05.057]    __FlashArg=0x00000000
[19:21:05.057]    __FlashOp=0x00000000
[19:21:05.057]    __Result=0x00000000
[19:21:05.057]    
[19:21:05.057]    // User-defined
[19:21:05.057]    DbgMCU_CR=0x00000007
[19:21:05.057]    DbgMCU_APB1_Fz=0x00000000
[19:21:05.057]    DbgMCU_APB2_Fz=0x00000000
[19:21:05.058]    TraceClk_Pin=0x00040002
[19:21:05.058]    TraceD0_Pin=0x00040003
[19:21:05.058]    TraceD1_Pin=0x00040004
[19:21:05.058]    TraceD2_Pin=0x00040005
[19:21:05.058]    TraceD3_Pin=0x00040006
[19:21:05.058]  </debugvars>
[19:21:05.059]  
[19:21:05.059]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:21:05.059]    <block atomic="false" info="">
[19:21:05.059]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:21:05.059]        // -> [traceSWO <= 0x00000001]
[19:21:05.059]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:21:05.059]        // -> [traceTPIU <= 0x00000000]
[19:21:05.060]    </block>
[19:21:05.060]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:05.060]      // if-block "traceSWO"
[19:21:05.060]        // =>  TRUE
[19:21:05.060]      <block atomic="false" info="">
[19:21:05.060]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:21:05.061]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:21:05.061]            <block atomic="false" info="">
[19:21:05.061]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:05.061]                // -> [dbgmcu_val <= 0x00000000]
[19:21:05.061]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:21:05.061]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:21:05.061]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:21:05.062]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.062]                // -> [dbgmcu_val <= 0x00000007]
[19:21:05.062]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:21:05.062]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:21:05.063]              Sequence("ConfigureTraceSWOPin");
[19:21:05.063]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:21:05.063]                  <block atomic="false" info="">
[19:21:05.063]                    __var pin     = 0;
[19:21:05.063]                      // -> [pin <= 0x00000000]
[19:21:05.063]                    __var port    = 0;
[19:21:05.063]                      // -> [port <= 0x00000000]
[19:21:05.064]                    __var portAdr = 0;
[19:21:05.064]                      // -> [portAdr <= 0x00000000]
[19:21:05.064]                    __var pos     = 0;
[19:21:05.064]                      // -> [pos <= 0x00000000]
[19:21:05.064]                    __var SWO_Pin = 0x00010003;          // PB3
[19:21:05.064]                      // -> [SWO_Pin <= 0x00010003]
[19:21:05.064]                  </block>
[19:21:05.064]                  <block atomic="false" info="configure SWO">
[19:21:05.065]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:21:05.065]                      // -> [pin <= 0x00000003]
[19:21:05.065]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:21:05.065]                      // -> [port <= 0x00000001]
[19:21:05.065]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:21:05.065]                      // -> [portAdr <= 0x40020400]
[19:21:05.065]                    pos = pin * 2;
[19:21:05.065]                      // -> [pos <= 0x00000006]
[19:21:05.066]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:21:05.066]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.066]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.067]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:21:05.067]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.067]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.067]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:21:05.068]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.068]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.069]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:21:05.069]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.070]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.070]                  </block>
[19:21:05.070]                  <control if="pin <  8" while="" timeout="0" info="">
[19:21:05.070]                    // if-block "pin <  8"
[19:21:05.070]                      // =>  TRUE
[19:21:05.070]                    <block atomic="false" info="">
[19:21:05.070]                      pos = ((pin    ) & 7) * 4;
[19:21:05.070]                        // -> [pos <= 0x0000000C]
[19:21:05.070]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:21:05.071]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.071]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.071]                    </block>
[19:21:05.072]                    // end if-block "pin <  8"
[19:21:05.072]                  </control>
[19:21:05.072]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:21:05.072]                    // if-block "pin >= 8"
[19:21:05.072]                      // =>  FALSE
[19:21:05.072]                    // skip if-block "pin >= 8"
[19:21:05.072]                  </control>
[19:21:05.072]                </sequence>
[19:21:05.072]            </block>
[19:21:05.073]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:05.073]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:21:05.073]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:05.073]            </block>
[19:21:05.073]          </sequence>
[19:21:05.074]      </block>
[19:21:05.074]      // end if-block "traceSWO"
[19:21:05.074]    </control>
[19:21:05.074]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:05.074]      // if-block "traceTPIU"
[19:21:05.074]        // =>  FALSE
[19:21:05.074]      // skip if-block "traceTPIU"
[19:21:05.074]    </control>
[19:21:05.074]  </sequence>
[19:21:05.075]  
[19:21:47.168]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:21:47.168]  
[19:21:47.169]  <debugvars>
[19:21:47.169]    // Pre-defined
[19:21:47.169]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:47.169]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:21:47.170]    __dp=0x00000000
[19:21:47.170]    __ap=0x00000000
[19:21:47.170]    __traceout=0x00000001      (SWO Trace)
[19:21:47.171]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:47.171]    __FlashAddr=0x00000000
[19:21:47.171]    __FlashLen=0x00000000
[19:21:47.171]    __FlashArg=0x00000000
[19:21:47.171]    __FlashOp=0x00000000
[19:21:47.172]    __Result=0x00000000
[19:21:47.172]    
[19:21:47.172]    // User-defined
[19:21:47.172]    DbgMCU_CR=0x00000007
[19:21:47.172]    DbgMCU_APB1_Fz=0x00000000
[19:21:47.172]    DbgMCU_APB2_Fz=0x00000000
[19:21:47.173]    TraceClk_Pin=0x00040002
[19:21:47.173]    TraceD0_Pin=0x00040003
[19:21:47.173]    TraceD1_Pin=0x00040004
[19:21:47.173]    TraceD2_Pin=0x00040005
[19:21:47.173]    TraceD3_Pin=0x00040006
[19:21:47.174]  </debugvars>
[19:21:47.174]  
[19:21:47.174]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:21:47.174]    <block atomic="false" info="">
[19:21:47.174]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:21:47.175]        // -> [traceSWO <= 0x00000001]
[19:21:47.175]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:21:47.175]        // -> [traceTPIU <= 0x00000000]
[19:21:47.175]    </block>
[19:21:47.175]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:47.175]      // if-block "traceSWO"
[19:21:47.176]        // =>  TRUE
[19:21:47.176]      <block atomic="false" info="">
[19:21:47.176]        Sequence("DisableTraceSWO");
[19:21:47.176]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:21:47.176]            <block atomic="false" info="">
[19:21:47.176]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:47.176]                // -> [dbgmcu_val <= 0x00000000]
[19:21:47.177]            </block>
[19:21:47.177]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:47.177]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:21:47.177]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:47.177]                // -> [dbgmcu_val <= 0x00000007]
[19:21:47.177]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:21:47.178]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:47.178]            </block>
[19:21:47.178]          </sequence>
[19:21:47.178]      </block>
[19:21:47.178]      // end if-block "traceSWO"
[19:21:47.178]    </control>
[19:21:47.179]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:47.179]      // if-block "traceTPIU"
[19:21:47.179]        // =>  FALSE
[19:21:47.179]      // skip if-block "traceTPIU"
[19:21:47.179]    </control>
[19:21:47.179]  </sequence>
[19:21:47.179]  
[19:22:42.684]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:22:42.684]  
[19:22:42.687]  <debugvars>
[19:22:42.688]    // Pre-defined
[19:22:42.688]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:22:42.688]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:22:42.688]    __dp=0x00000000
[19:22:42.689]    __ap=0x00000000
[19:22:42.689]    __traceout=0x00000001      (SWO Trace)
[19:22:42.689]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:22:42.689]    __FlashAddr=0x00000000
[19:22:42.689]    __FlashLen=0x00000000
[19:22:42.689]    __FlashArg=0x00000000
[19:22:42.689]    __FlashOp=0x00000000
[19:22:42.690]    __Result=0x00000000
[19:22:42.690]    
[19:22:42.690]    // User-defined
[19:22:42.690]    DbgMCU_CR=0x00000007
[19:22:42.690]    DbgMCU_APB1_Fz=0x00000000
[19:22:42.690]    DbgMCU_APB2_Fz=0x00000000
[19:22:42.690]    TraceClk_Pin=0x00040002
[19:22:42.691]    TraceD0_Pin=0x00040003
[19:22:42.691]    TraceD1_Pin=0x00040004
[19:22:42.691]    TraceD2_Pin=0x00040005
[19:22:42.691]    TraceD3_Pin=0x00040006
[19:22:42.691]  </debugvars>
[19:22:42.691]  
[19:22:42.691]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:22:42.692]    <block atomic="false" info="">
[19:22:42.692]      Sequence("CheckID");
[19:22:42.692]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:22:42.692]          <block atomic="false" info="">
[19:22:42.692]            __var pidr1 = 0;
[19:22:42.692]              // -> [pidr1 <= 0x00000000]
[19:22:42.692]            __var pidr2 = 0;
[19:22:42.693]              // -> [pidr2 <= 0x00000000]
[19:22:42.693]            __var jep106id = 0;
[19:22:42.693]              // -> [jep106id <= 0x00000000]
[19:22:42.693]            __var ROMTableBase = 0;
[19:22:42.693]              // -> [ROMTableBase <= 0x00000000]
[19:22:42.693]            __ap = 0;      // AHB-AP
[19:22:42.693]              // -> [__ap <= 0x00000000]
[19:22:42.693]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:22:42.694]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.694]              // -> [ROMTableBase <= 0xE00FD000]
[19:22:42.694]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:22:42.695]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.695]              // -> [pidr1 <= 0x00000004]
[19:22:42.695]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:22:42.695]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.695]              // -> [pidr2 <= 0x0000001A]
[19:22:42.696]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:22:42.696]              // -> [jep106id <= 0x00000020]
[19:22:42.696]          </block>
[19:22:42.696]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:22:42.696]            // if-block "jep106id != 0x20"
[19:22:42.696]              // =>  FALSE
[19:22:42.696]            // skip if-block "jep106id != 0x20"
[19:22:42.696]          </control>
[19:22:42.696]        </sequence>
[19:22:42.697]    </block>
[19:22:42.697]  </sequence>
[19:22:42.697]  
[19:22:42.712]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:22:42.712]  
[19:22:42.712]  <debugvars>
[19:22:42.713]    // Pre-defined
[19:22:42.713]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:22:42.713]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:22:42.713]    __dp=0x00000000
[19:22:42.713]    __ap=0x00000000
[19:22:42.713]    __traceout=0x00000001      (SWO Trace)
[19:22:42.714]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:22:42.714]    __FlashAddr=0x00000000
[19:22:42.714]    __FlashLen=0x00000000
[19:22:42.714]    __FlashArg=0x00000000
[19:22:42.714]    __FlashOp=0x00000000
[19:22:42.714]    __Result=0x00000000
[19:22:42.714]    
[19:22:42.714]    // User-defined
[19:22:42.714]    DbgMCU_CR=0x00000007
[19:22:42.715]    DbgMCU_APB1_Fz=0x00000000
[19:22:42.715]    DbgMCU_APB2_Fz=0x00000000
[19:22:42.715]    TraceClk_Pin=0x00040002
[19:22:42.715]    TraceD0_Pin=0x00040003
[19:22:42.715]    TraceD1_Pin=0x00040004
[19:22:42.715]    TraceD2_Pin=0x00040005
[19:22:42.715]    TraceD3_Pin=0x00040006
[19:22:42.716]  </debugvars>
[19:22:42.716]  
[19:22:42.716]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:22:42.716]    <block atomic="false" info="">
[19:22:42.716]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:22:42.717]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.717]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:22:42.717]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.717]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:22:42.718]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.718]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:22:42.719]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:42.719]    </block>
[19:22:42.719]  </sequence>
[19:22:42.719]  
[19:23:13.560]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:23:13.560]  
[19:23:13.560]  <debugvars>
[19:23:13.560]    // Pre-defined
[19:23:13.561]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:13.561]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:13.561]    __dp=0x00000000
[19:23:13.561]    __ap=0x00000000
[19:23:13.561]    __traceout=0x00000001      (SWO Trace)
[19:23:13.561]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:13.561]    __FlashAddr=0x00000000
[19:23:13.561]    __FlashLen=0x00000000
[19:23:13.562]    __FlashArg=0x00000000
[19:23:13.562]    __FlashOp=0x00000000
[19:23:13.562]    __Result=0x00000000
[19:23:13.562]    
[19:23:13.562]    // User-defined
[19:23:13.562]    DbgMCU_CR=0x00000007
[19:23:13.562]    DbgMCU_APB1_Fz=0x00000000
[19:23:13.562]    DbgMCU_APB2_Fz=0x00000000
[19:23:13.563]    TraceClk_Pin=0x00040002
[19:23:13.563]    TraceD0_Pin=0x00040003
[19:23:13.563]    TraceD1_Pin=0x00040004
[19:23:13.563]    TraceD2_Pin=0x00040005
[19:23:13.563]    TraceD3_Pin=0x00040006
[19:23:13.563]  </debugvars>
[19:23:13.563]  
[19:23:13.564]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:23:13.564]    <block atomic="false" info="">
[19:23:13.564]      Sequence("CheckID");
[19:23:13.564]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:23:13.564]          <block atomic="false" info="">
[19:23:13.564]            __var pidr1 = 0;
[19:23:13.564]              // -> [pidr1 <= 0x00000000]
[19:23:13.564]            __var pidr2 = 0;
[19:23:13.565]              // -> [pidr2 <= 0x00000000]
[19:23:13.565]            __var jep106id = 0;
[19:23:13.565]              // -> [jep106id <= 0x00000000]
[19:23:13.565]            __var ROMTableBase = 0;
[19:23:13.565]              // -> [ROMTableBase <= 0x00000000]
[19:23:13.565]            __ap = 0;      // AHB-AP
[19:23:13.565]              // -> [__ap <= 0x00000000]
[19:23:13.566]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:23:13.566]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.566]              // -> [ROMTableBase <= 0xE00FD000]
[19:23:13.566]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:23:13.567]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.567]              // -> [pidr1 <= 0x00000004]
[19:23:13.567]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:23:13.567]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.567]              // -> [pidr2 <= 0x0000001A]
[19:23:13.568]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:23:13.568]              // -> [jep106id <= 0x00000020]
[19:23:13.568]          </block>
[19:23:13.568]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:23:13.568]            // if-block "jep106id != 0x20"
[19:23:13.568]              // =>  FALSE
[19:23:13.568]            // skip if-block "jep106id != 0x20"
[19:23:13.568]          </control>
[19:23:13.569]        </sequence>
[19:23:13.569]    </block>
[19:23:13.569]  </sequence>
[19:23:13.569]  
[19:23:13.584]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:23:13.584]  
[19:23:13.584]  <debugvars>
[19:23:13.584]    // Pre-defined
[19:23:13.585]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:13.585]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:13.585]    __dp=0x00000000
[19:23:13.585]    __ap=0x00000000
[19:23:13.585]    __traceout=0x00000001      (SWO Trace)
[19:23:13.585]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:13.586]    __FlashAddr=0x00000000
[19:23:13.586]    __FlashLen=0x00000000
[19:23:13.586]    __FlashArg=0x00000000
[19:23:13.586]    __FlashOp=0x00000000
[19:23:13.586]    __Result=0x00000000
[19:23:13.586]    
[19:23:13.586]    // User-defined
[19:23:13.586]    DbgMCU_CR=0x00000007
[19:23:13.587]    DbgMCU_APB1_Fz=0x00000000
[19:23:13.587]    DbgMCU_APB2_Fz=0x00000000
[19:23:13.587]    TraceClk_Pin=0x00040002
[19:23:13.587]    TraceD0_Pin=0x00040003
[19:23:13.587]    TraceD1_Pin=0x00040004
[19:23:13.587]    TraceD2_Pin=0x00040005
[19:23:13.587]    TraceD3_Pin=0x00040006
[19:23:13.588]  </debugvars>
[19:23:13.588]  
[19:23:13.588]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:23:13.588]    <block atomic="false" info="">
[19:23:13.588]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:23:13.588]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.589]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:23:13.589]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.589]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:23:13.590]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.590]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:23:13.590]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.590]    </block>
[19:23:13.591]  </sequence>
[19:23:13.591]  
[19:23:13.607]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:23:13.607]  
[19:23:13.607]  <debugvars>
[19:23:13.607]    // Pre-defined
[19:23:13.607]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:13.608]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:13.608]    __dp=0x00000000
[19:23:13.608]    __ap=0x00000000
[19:23:13.608]    __traceout=0x00000001      (SWO Trace)
[19:23:13.609]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:13.609]    __FlashAddr=0x00000000
[19:23:13.609]    __FlashLen=0x00000000
[19:23:13.609]    __FlashArg=0x00000000
[19:23:13.609]    __FlashOp=0x00000000
[19:23:13.609]    __Result=0x00000000
[19:23:13.610]    
[19:23:13.610]    // User-defined
[19:23:13.610]    DbgMCU_CR=0x00000007
[19:23:13.610]    DbgMCU_APB1_Fz=0x00000000
[19:23:13.610]    DbgMCU_APB2_Fz=0x00000000
[19:23:13.610]    TraceClk_Pin=0x00040002
[19:23:13.610]    TraceD0_Pin=0x00040003
[19:23:13.611]    TraceD1_Pin=0x00040004
[19:23:13.611]    TraceD2_Pin=0x00040005
[19:23:13.611]    TraceD3_Pin=0x00040006
[19:23:13.611]  </debugvars>
[19:23:13.611]  
[19:23:13.611]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:23:13.612]    <block atomic="false" info="">
[19:23:13.612]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:23:13.612]        // -> [traceSWO <= 0x00000001]
[19:23:13.612]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:23:13.612]        // -> [traceTPIU <= 0x00000000]
[19:23:13.612]    </block>
[19:23:13.612]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:13.612]      // if-block "traceSWO"
[19:23:13.613]        // =>  TRUE
[19:23:13.613]      <block atomic="false" info="">
[19:23:13.613]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:23:13.613]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:23:13.613]            <block atomic="false" info="">
[19:23:13.613]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:13.613]                // -> [dbgmcu_val <= 0x00000000]
[19:23:13.614]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:23:13.614]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:23:13.614]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:23:13.614]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.614]                // -> [dbgmcu_val <= 0x00000007]
[19:23:13.615]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:23:13.615]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:23:13.615]              Sequence("ConfigureTraceSWOPin");
[19:23:13.615]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:23:13.615]                  <block atomic="false" info="">
[19:23:13.615]                    __var pin     = 0;
[19:23:13.615]                      // -> [pin <= 0x00000000]
[19:23:13.616]                    __var port    = 0;
[19:23:13.616]                      // -> [port <= 0x00000000]
[19:23:13.616]                    __var portAdr = 0;
[19:23:13.616]                      // -> [portAdr <= 0x00000000]
[19:23:13.616]                    __var pos     = 0;
[19:23:13.616]                      // -> [pos <= 0x00000000]
[19:23:13.616]                    __var SWO_Pin = 0x00010003;          // PB3
[19:23:13.616]                      // -> [SWO_Pin <= 0x00010003]
[19:23:13.616]                  </block>
[19:23:13.617]                  <block atomic="false" info="configure SWO">
[19:23:13.617]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:23:13.617]                      // -> [pin <= 0x00000003]
[19:23:13.617]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:23:13.617]                      // -> [port <= 0x00000001]
[19:23:13.617]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:23:13.617]                      // -> [portAdr <= 0x40020400]
[19:23:13.618]                    pos = pin * 2;
[19:23:13.618]                      // -> [pos <= 0x00000006]
[19:23:13.618]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:23:13.618]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.619]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.619]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:23:13.619]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.620]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.620]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:23:13.620]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.621]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.621]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:23:13.621]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.622]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.622]                  </block>
[19:23:13.622]                  <control if="pin <  8" while="" timeout="0" info="">
[19:23:13.622]                    // if-block "pin <  8"
[19:23:13.622]                      // =>  TRUE
[19:23:13.622]                    <block atomic="false" info="">
[19:23:13.623]                      pos = ((pin    ) & 7) * 4;
[19:23:13.623]                        // -> [pos <= 0x0000000C]
[19:23:13.623]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:23:13.623]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.624]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.624]                    </block>
[19:23:13.624]                    // end if-block "pin <  8"
[19:23:13.624]                  </control>
[19:23:13.624]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:23:13.624]                    // if-block "pin >= 8"
[19:23:13.625]                      // =>  FALSE
[19:23:13.625]                    // skip if-block "pin >= 8"
[19:23:13.625]                  </control>
[19:23:13.625]                </sequence>
[19:23:13.625]            </block>
[19:23:13.625]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:13.625]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:23:13.626]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.626]            </block>
[19:23:13.626]          </sequence>
[19:23:13.626]      </block>
[19:23:13.626]      // end if-block "traceSWO"
[19:23:13.627]    </control>
[19:23:13.627]    <control if="traceTPIU" while="" timeout="0" info="">
[19:23:13.627]      // if-block "traceTPIU"
[19:23:13.627]        // =>  FALSE
[19:23:13.627]      // skip if-block "traceTPIU"
[19:23:13.627]    </control>
[19:23:13.627]  </sequence>
[19:23:13.628]  
[19:23:13.631]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:23:13.631]  
[19:23:13.631]  <debugvars>
[19:23:13.632]    // Pre-defined
[19:23:13.632]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:13.632]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:13.632]    __dp=0x00000000
[19:23:13.632]    __ap=0x00000000
[19:23:13.632]    __traceout=0x00000001      (SWO Trace)
[19:23:13.632]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:13.633]    __FlashAddr=0x00000000
[19:23:13.633]    __FlashLen=0x00000000
[19:23:13.633]    __FlashArg=0x00000000
[19:23:13.633]    __FlashOp=0x00000000
[19:23:13.633]    __Result=0x00000000
[19:23:13.633]    
[19:23:13.633]    // User-defined
[19:23:13.633]    DbgMCU_CR=0x00000007
[19:23:13.634]    DbgMCU_APB1_Fz=0x00000000
[19:23:13.634]    DbgMCU_APB2_Fz=0x00000000
[19:23:13.634]    TraceClk_Pin=0x00040002
[19:23:13.634]    TraceD0_Pin=0x00040003
[19:23:13.634]    TraceD1_Pin=0x00040004
[19:23:13.634]    TraceD2_Pin=0x00040005
[19:23:13.634]    TraceD3_Pin=0x00040006
[19:23:13.635]  </debugvars>
[19:23:13.635]  
[19:23:13.635]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:23:13.635]    <block atomic="false" info="">
[19:23:13.635]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:23:13.635]        // -> [traceSWO <= 0x00000001]
[19:23:13.635]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:23:13.636]        // -> [traceTPIU <= 0x00000000]
[19:23:13.636]    </block>
[19:23:13.636]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:13.636]      // if-block "traceSWO"
[19:23:13.636]        // =>  TRUE
[19:23:13.636]      <block atomic="false" info="">
[19:23:13.636]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:23:13.637]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:23:13.637]            <block atomic="false" info="">
[19:23:13.637]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:13.637]                // -> [dbgmcu_val <= 0x00000000]
[19:23:13.637]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:23:13.637]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:23:13.637]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:23:13.638]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.638]                // -> [dbgmcu_val <= 0x00000007]
[19:23:13.638]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:23:13.638]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:23:13.638]              Sequence("ConfigureTraceSWOPin");
[19:23:13.638]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:23:13.639]                  <block atomic="false" info="">
[19:23:13.639]                    __var pin     = 0;
[19:23:13.639]                      // -> [pin <= 0x00000000]
[19:23:13.639]                    __var port    = 0;
[19:23:13.639]                      // -> [port <= 0x00000000]
[19:23:13.639]                    __var portAdr = 0;
[19:23:13.639]                      // -> [portAdr <= 0x00000000]
[19:23:13.639]                    __var pos     = 0;
[19:23:13.639]                      // -> [pos <= 0x00000000]
[19:23:13.640]                    __var SWO_Pin = 0x00010003;          // PB3
[19:23:13.640]                      // -> [SWO_Pin <= 0x00010003]
[19:23:13.640]                  </block>
[19:23:13.640]                  <block atomic="false" info="configure SWO">
[19:23:13.640]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:23:13.640]                      // -> [pin <= 0x00000003]
[19:23:13.640]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:23:13.641]                      // -> [port <= 0x00000001]
[19:23:13.641]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:23:13.641]                      // -> [portAdr <= 0x40020400]
[19:23:13.641]                    pos = pin * 2;
[19:23:13.641]                      // -> [pos <= 0x00000006]
[19:23:13.641]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:23:13.642]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.643]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.643]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:23:13.643]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.643]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.644]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:23:13.644]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.644]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.645]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:23:13.645]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.645]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.645]                  </block>
[19:23:13.645]                  <control if="pin <  8" while="" timeout="0" info="">
[19:23:13.645]                    // if-block "pin <  8"
[19:23:13.646]                      // =>  TRUE
[19:23:13.646]                    <block atomic="false" info="">
[19:23:13.646]                      pos = ((pin    ) & 7) * 4;
[19:23:13.646]                        // -> [pos <= 0x0000000C]
[19:23:13.646]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:23:13.646]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.647]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.647]                    </block>
[19:23:13.647]                    // end if-block "pin <  8"
[19:23:13.647]                  </control>
[19:23:13.647]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:23:13.648]                    // if-block "pin >= 8"
[19:23:13.648]                      // =>  FALSE
[19:23:13.648]                    // skip if-block "pin >= 8"
[19:23:13.648]                  </control>
[19:23:13.648]                </sequence>
[19:23:13.648]            </block>
[19:23:13.648]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:13.648]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:23:13.649]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.649]            </block>
[19:23:13.649]          </sequence>
[19:23:13.649]      </block>
[19:23:13.649]      // end if-block "traceSWO"
[19:23:13.650]    </control>
[19:23:13.650]    <control if="traceTPIU" while="" timeout="0" info="">
[19:23:13.650]      // if-block "traceTPIU"
[19:23:13.650]        // =>  FALSE
[19:23:13.650]      // skip if-block "traceTPIU"
[19:23:13.650]    </control>
[19:23:13.650]  </sequence>
[19:23:13.650]  
[19:23:13.868]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:23:13.868]  
[19:23:13.869]  <debugvars>
[19:23:13.869]    // Pre-defined
[19:23:13.869]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:13.869]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:13.869]    __dp=0x00000000
[19:23:13.870]    __ap=0x00000000
[19:23:13.870]    __traceout=0x00000001      (SWO Trace)
[19:23:13.870]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:13.870]    __FlashAddr=0x00000000
[19:23:13.870]    __FlashLen=0x00000000
[19:23:13.870]    __FlashArg=0x00000000
[19:23:13.870]    __FlashOp=0x00000000
[19:23:13.871]    __Result=0x00000000
[19:23:13.871]    
[19:23:13.871]    // User-defined
[19:23:13.871]    DbgMCU_CR=0x00000007
[19:23:13.871]    DbgMCU_APB1_Fz=0x00000000
[19:23:13.871]    DbgMCU_APB2_Fz=0x00000000
[19:23:13.872]    TraceClk_Pin=0x00040002
[19:23:13.872]    TraceD0_Pin=0x00040003
[19:23:13.872]    TraceD1_Pin=0x00040004
[19:23:13.872]    TraceD2_Pin=0x00040005
[19:23:13.872]    TraceD3_Pin=0x00040006
[19:23:13.872]  </debugvars>
[19:23:13.872]  
[19:23:13.872]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:23:13.873]    <block atomic="false" info="">
[19:23:13.873]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:23:13.873]        // -> [traceSWO <= 0x00000001]
[19:23:13.873]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:23:13.873]        // -> [traceTPIU <= 0x00000000]
[19:23:13.873]    </block>
[19:23:13.873]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:13.874]      // if-block "traceSWO"
[19:23:13.874]        // =>  TRUE
[19:23:13.874]      <block atomic="false" info="">
[19:23:13.874]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:23:13.874]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:23:13.875]            <block atomic="false" info="">
[19:23:13.875]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:13.875]                // -> [dbgmcu_val <= 0x00000000]
[19:23:13.875]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:23:13.875]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:23:13.875]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:23:13.876]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.876]                // -> [dbgmcu_val <= 0x00000007]
[19:23:13.876]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:23:13.876]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:23:13.876]              Sequence("ConfigureTraceSWOPin");
[19:23:13.877]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:23:13.877]                  <block atomic="false" info="">
[19:23:13.877]                    __var pin     = 0;
[19:23:13.877]                      // -> [pin <= 0x00000000]
[19:23:13.877]                    __var port    = 0;
[19:23:13.877]                      // -> [port <= 0x00000000]
[19:23:13.877]                    __var portAdr = 0;
[19:23:13.877]                      // -> [portAdr <= 0x00000000]
[19:23:13.878]                    __var pos     = 0;
[19:23:13.878]                      // -> [pos <= 0x00000000]
[19:23:13.878]                    __var SWO_Pin = 0x00010003;          // PB3
[19:23:13.878]                      // -> [SWO_Pin <= 0x00010003]
[19:23:13.878]                  </block>
[19:23:13.878]                  <block atomic="false" info="configure SWO">
[19:23:13.878]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:23:13.878]                      // -> [pin <= 0x00000003]
[19:23:13.879]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:23:13.879]                      // -> [port <= 0x00000001]
[19:23:13.879]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:23:13.879]                      // -> [portAdr <= 0x40020400]
[19:23:13.879]                    pos = pin * 2;
[19:23:13.879]                      // -> [pos <= 0x00000006]
[19:23:13.879]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:23:13.880]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.880]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.880]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:23:13.881]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.881]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.881]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:23:13.882]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.882]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.882]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:23:13.883]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.884]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.884]                  </block>
[19:23:13.884]                  <control if="pin <  8" while="" timeout="0" info="">
[19:23:13.884]                    // if-block "pin <  8"
[19:23:13.884]                      // =>  TRUE
[19:23:13.884]                    <block atomic="false" info="">
[19:23:13.884]                      pos = ((pin    ) & 7) * 4;
[19:23:13.884]                        // -> [pos <= 0x0000000C]
[19:23:13.885]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:23:13.885]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.885]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.886]                    </block>
[19:23:13.886]                    // end if-block "pin <  8"
[19:23:13.886]                  </control>
[19:23:13.886]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:23:13.886]                    // if-block "pin >= 8"
[19:23:13.886]                      // =>  FALSE
[19:23:13.886]                    // skip if-block "pin >= 8"
[19:23:13.886]                  </control>
[19:23:13.887]                </sequence>
[19:23:13.887]            </block>
[19:23:13.887]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:13.887]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:23:13.887]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:13.887]            </block>
[19:23:13.888]          </sequence>
[19:23:13.888]      </block>
[19:23:13.888]      // end if-block "traceSWO"
[19:23:13.888]    </control>
[19:23:13.888]    <control if="traceTPIU" while="" timeout="0" info="">
[19:23:13.888]      // if-block "traceTPIU"
[19:23:13.888]        // =>  FALSE
[19:23:13.889]      // skip if-block "traceTPIU"
[19:23:13.889]    </control>
[19:23:13.889]  </sequence>
[19:23:13.889]  
[19:24:14.421]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:24:14.421]  
[19:24:14.422]  <debugvars>
[19:24:14.422]    // Pre-defined
[19:24:14.422]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:24:14.423]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:24:14.423]    __dp=0x00000000
[19:24:14.423]    __ap=0x00000000
[19:24:14.423]    __traceout=0x00000001      (SWO Trace)
[19:24:14.424]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:24:14.424]    __FlashAddr=0x00000000
[19:24:14.424]    __FlashLen=0x00000000
[19:24:14.424]    __FlashArg=0x00000000
[19:24:14.425]    __FlashOp=0x00000000
[19:24:14.425]    __Result=0x00000000
[19:24:14.425]    
[19:24:14.425]    // User-defined
[19:24:14.425]    DbgMCU_CR=0x00000007
[19:24:14.425]    DbgMCU_APB1_Fz=0x00000000
[19:24:14.426]    DbgMCU_APB2_Fz=0x00000000
[19:24:14.426]    TraceClk_Pin=0x00040002
[19:24:14.426]    TraceD0_Pin=0x00040003
[19:24:14.426]    TraceD1_Pin=0x00040004
[19:24:14.426]    TraceD2_Pin=0x00040005
[19:24:14.427]    TraceD3_Pin=0x00040006
[19:24:14.427]  </debugvars>
[19:24:14.427]  
[19:24:14.427]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:24:14.427]    <block atomic="false" info="">
[19:24:14.428]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:24:14.428]        // -> [traceSWO <= 0x00000001]
[19:24:14.428]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:24:14.428]        // -> [traceTPIU <= 0x00000000]
[19:24:14.428]    </block>
[19:24:14.428]    <control if="traceSWO" while="" timeout="0" info="">
[19:24:14.429]      // if-block "traceSWO"
[19:24:14.429]        // =>  TRUE
[19:24:14.429]      <block atomic="false" info="">
[19:24:14.429]        Sequence("DisableTraceSWO");
[19:24:14.429]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:24:14.429]            <block atomic="false" info="">
[19:24:14.429]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:24:14.430]                // -> [dbgmcu_val <= 0x00000000]
[19:24:14.430]            </block>
[19:24:14.430]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:24:14.430]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:24:14.430]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:24:14.431]                // -> [dbgmcu_val <= 0x00000007]
[19:24:14.431]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:24:14.431]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:14.431]            </block>
[19:24:14.432]          </sequence>
[19:24:14.432]      </block>
[19:24:14.432]      // end if-block "traceSWO"
[19:24:14.432]    </control>
[19:24:14.432]    <control if="traceTPIU" while="" timeout="0" info="">
[19:24:14.432]      // if-block "traceTPIU"
[19:24:14.432]        // =>  FALSE
[19:24:14.432]      // skip if-block "traceTPIU"
[19:24:14.433]    </control>
[19:24:14.433]  </sequence>
[19:24:14.433]  
[19:26:31.843]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:26:31.843]  
[19:26:31.843]  <debugvars>
[19:26:31.843]    // Pre-defined
[19:26:31.844]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:26:31.844]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:26:31.844]    __dp=0x00000000
[19:26:31.844]    __ap=0x00000000
[19:26:31.845]    __traceout=0x00000001      (SWO Trace)
[19:26:31.845]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:26:31.845]    __FlashAddr=0x00000000
[19:26:31.845]    __FlashLen=0x00000000
[19:26:31.845]    __FlashArg=0x00000000
[19:26:31.845]    __FlashOp=0x00000000
[19:26:31.846]    __Result=0x00000000
[19:26:31.846]    
[19:26:31.846]    // User-defined
[19:26:31.846]    DbgMCU_CR=0x00000007
[19:26:31.846]    DbgMCU_APB1_Fz=0x00000000
[19:26:31.846]    DbgMCU_APB2_Fz=0x00000000
[19:26:31.846]    TraceClk_Pin=0x00040002
[19:26:31.846]    TraceD0_Pin=0x00040003
[19:26:31.847]    TraceD1_Pin=0x00040004
[19:26:31.847]    TraceD2_Pin=0x00040005
[19:26:31.847]    TraceD3_Pin=0x00040006
[19:26:31.847]  </debugvars>
[19:26:31.847]  
[19:26:31.847]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:26:31.848]    <block atomic="false" info="">
[19:26:31.848]      Sequence("CheckID");
[19:26:31.848]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:26:31.848]          <block atomic="false" info="">
[19:26:31.849]            __var pidr1 = 0;
[19:26:31.849]              // -> [pidr1 <= 0x00000000]
[19:26:31.849]            __var pidr2 = 0;
[19:26:31.849]              // -> [pidr2 <= 0x00000000]
[19:26:31.849]            __var jep106id = 0;
[19:26:31.849]              // -> [jep106id <= 0x00000000]
[19:26:31.849]            __var ROMTableBase = 0;
[19:26:31.850]              // -> [ROMTableBase <= 0x00000000]
[19:26:31.850]            __ap = 0;      // AHB-AP
[19:26:31.850]              // -> [__ap <= 0x00000000]
[19:26:31.850]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:26:31.850]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.851]              // -> [ROMTableBase <= 0xE00FD000]
[19:26:31.851]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:26:31.851]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.852]              // -> [pidr1 <= 0x00000004]
[19:26:31.852]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:26:31.852]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.852]              // -> [pidr2 <= 0x0000001A]
[19:26:31.852]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:26:31.853]              // -> [jep106id <= 0x00000020]
[19:26:31.853]          </block>
[19:26:31.853]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:26:31.853]            // if-block "jep106id != 0x20"
[19:26:31.853]              // =>  FALSE
[19:26:31.853]            // skip if-block "jep106id != 0x20"
[19:26:31.853]          </control>
[19:26:31.853]        </sequence>
[19:26:31.854]    </block>
[19:26:31.854]  </sequence>
[19:26:31.854]  
[19:26:31.869]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:26:31.869]  
[19:26:31.869]  <debugvars>
[19:26:31.870]    // Pre-defined
[19:26:31.870]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:26:31.870]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:26:31.870]    __dp=0x00000000
[19:26:31.870]    __ap=0x00000000
[19:26:31.870]    __traceout=0x00000001      (SWO Trace)
[19:26:31.871]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:26:31.871]    __FlashAddr=0x00000000
[19:26:31.871]    __FlashLen=0x00000000
[19:26:31.871]    __FlashArg=0x00000000
[19:26:31.872]    __FlashOp=0x00000000
[19:26:31.872]    __Result=0x00000000
[19:26:31.872]    
[19:26:31.872]    // User-defined
[19:26:31.872]    DbgMCU_CR=0x00000007
[19:26:31.872]    DbgMCU_APB1_Fz=0x00000000
[19:26:31.872]    DbgMCU_APB2_Fz=0x00000000
[19:26:31.872]    TraceClk_Pin=0x00040002
[19:26:31.872]    TraceD0_Pin=0x00040003
[19:26:31.873]    TraceD1_Pin=0x00040004
[19:26:31.873]    TraceD2_Pin=0x00040005
[19:26:31.873]    TraceD3_Pin=0x00040006
[19:26:31.873]  </debugvars>
[19:26:31.873]  
[19:26:31.873]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:26:31.873]    <block atomic="false" info="">
[19:26:31.873]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:26:31.874]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.874]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:26:31.875]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.875]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:26:31.875]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.875]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:26:31.876]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:26:31.876]    </block>
[19:26:31.876]  </sequence>
[19:26:31.876]  
[19:27:02.643]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:27:02.643]  
[19:27:02.643]  <debugvars>
[19:27:02.643]    // Pre-defined
[19:27:02.643]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:27:02.643]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:27:02.643]    __dp=0x00000000
[19:27:02.643]    __ap=0x00000000
[19:27:02.644]    __traceout=0x00000001      (SWO Trace)
[19:27:02.644]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:27:02.644]    __FlashAddr=0x00000000
[19:27:02.644]    __FlashLen=0x00000000
[19:27:02.644]    __FlashArg=0x00000000
[19:27:02.644]    __FlashOp=0x00000000
[19:27:02.645]    __Result=0x00000000
[19:27:02.645]    
[19:27:02.645]    // User-defined
[19:27:02.645]    DbgMCU_CR=0x00000007
[19:27:02.645]    DbgMCU_APB1_Fz=0x00000000
[19:27:02.645]    DbgMCU_APB2_Fz=0x00000000
[19:27:02.645]    TraceClk_Pin=0x00040002
[19:27:02.645]    TraceD0_Pin=0x00040003
[19:27:02.646]    TraceD1_Pin=0x00040004
[19:27:02.646]    TraceD2_Pin=0x00040005
[19:27:02.646]    TraceD3_Pin=0x00040006
[19:27:02.646]  </debugvars>
[19:27:02.646]  
[19:27:02.646]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:27:02.646]    <block atomic="false" info="">
[19:27:02.647]      Sequence("CheckID");
[19:27:02.647]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:27:02.647]          <block atomic="false" info="">
[19:27:02.647]            __var pidr1 = 0;
[19:27:02.647]              // -> [pidr1 <= 0x00000000]
[19:27:02.647]            __var pidr2 = 0;
[19:27:02.648]              // -> [pidr2 <= 0x00000000]
[19:27:02.648]            __var jep106id = 0;
[19:27:02.648]              // -> [jep106id <= 0x00000000]
[19:27:02.648]            __var ROMTableBase = 0;
[19:27:02.648]              // -> [ROMTableBase <= 0x00000000]
[19:27:02.648]            __ap = 0;      // AHB-AP
[19:27:02.648]              // -> [__ap <= 0x00000000]
[19:27:02.649]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:27:02.649]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.649]              // -> [ROMTableBase <= 0xE00FD000]
[19:27:02.649]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:27:02.650]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.650]              // -> [pidr1 <= 0x00000004]
[19:27:02.650]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:27:02.651]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.651]              // -> [pidr2 <= 0x0000001A]
[19:27:02.651]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:27:02.651]              // -> [jep106id <= 0x00000020]
[19:27:02.651]          </block>
[19:27:02.651]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:27:02.651]            // if-block "jep106id != 0x20"
[19:27:02.651]              // =>  FALSE
[19:27:02.652]            // skip if-block "jep106id != 0x20"
[19:27:02.652]          </control>
[19:27:02.652]        </sequence>
[19:27:02.652]    </block>
[19:27:02.652]  </sequence>
[19:27:02.652]  
[19:27:02.666]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:27:02.666]  
[19:27:02.667]  <debugvars>
[19:27:02.667]    // Pre-defined
[19:27:02.667]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:27:02.667]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:27:02.667]    __dp=0x00000000
[19:27:02.668]    __ap=0x00000000
[19:27:02.668]    __traceout=0x00000001      (SWO Trace)
[19:27:02.668]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:27:02.668]    __FlashAddr=0x00000000
[19:27:02.668]    __FlashLen=0x00000000
[19:27:02.668]    __FlashArg=0x00000000
[19:27:02.669]    __FlashOp=0x00000000
[19:27:02.669]    __Result=0x00000000
[19:27:02.669]    
[19:27:02.669]    // User-defined
[19:27:02.669]    DbgMCU_CR=0x00000007
[19:27:02.669]    DbgMCU_APB1_Fz=0x00000000
[19:27:02.669]    DbgMCU_APB2_Fz=0x00000000
[19:27:02.669]    TraceClk_Pin=0x00040002
[19:27:02.670]    TraceD0_Pin=0x00040003
[19:27:02.670]    TraceD1_Pin=0x00040004
[19:27:02.670]    TraceD2_Pin=0x00040005
[19:27:02.670]    TraceD3_Pin=0x00040006
[19:27:02.670]  </debugvars>
[19:27:02.670]  
[19:27:02.670]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:27:02.671]    <block atomic="false" info="">
[19:27:02.671]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:27:02.671]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.671]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:27:02.672]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.672]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:27:02.672]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.673]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:27:02.673]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.673]    </block>
[19:27:02.673]  </sequence>
[19:27:02.673]  
[19:27:02.690]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:27:02.690]  
[19:27:02.690]  <debugvars>
[19:27:02.690]    // Pre-defined
[19:27:02.691]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:27:02.691]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:27:02.691]    __dp=0x00000000
[19:27:02.691]    __ap=0x00000000
[19:27:02.691]    __traceout=0x00000001      (SWO Trace)
[19:27:02.691]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:27:02.691]    __FlashAddr=0x00000000
[19:27:02.691]    __FlashLen=0x00000000
[19:27:02.691]    __FlashArg=0x00000000
[19:27:02.692]    __FlashOp=0x00000000
[19:27:02.692]    __Result=0x00000000
[19:27:02.692]    
[19:27:02.692]    // User-defined
[19:27:02.692]    DbgMCU_CR=0x00000007
[19:27:02.692]    DbgMCU_APB1_Fz=0x00000000
[19:27:02.692]    DbgMCU_APB2_Fz=0x00000000
[19:27:02.693]    TraceClk_Pin=0x00040002
[19:27:02.693]    TraceD0_Pin=0x00040003
[19:27:02.693]    TraceD1_Pin=0x00040004
[19:27:02.693]    TraceD2_Pin=0x00040005
[19:27:02.693]    TraceD3_Pin=0x00040006
[19:27:02.693]  </debugvars>
[19:27:02.693]  
[19:27:02.693]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:27:02.693]    <block atomic="false" info="">
[19:27:02.694]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:27:02.694]        // -> [traceSWO <= 0x00000001]
[19:27:02.694]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:27:02.694]        // -> [traceTPIU <= 0x00000000]
[19:27:02.694]    </block>
[19:27:02.694]    <control if="traceSWO" while="" timeout="0" info="">
[19:27:02.694]      // if-block "traceSWO"
[19:27:02.695]        // =>  TRUE
[19:27:02.695]      <block atomic="false" info="">
[19:27:02.695]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:27:02.695]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:27:02.695]            <block atomic="false" info="">
[19:27:02.695]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:27:02.695]                // -> [dbgmcu_val <= 0x00000000]
[19:27:02.695]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:27:02.696]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:27:02.696]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:27:02.696]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.696]                // -> [dbgmcu_val <= 0x00000007]
[19:27:02.696]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:27:02.696]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:27:02.697]              Sequence("ConfigureTraceSWOPin");
[19:27:02.697]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:27:02.697]                  <block atomic="false" info="">
[19:27:02.697]                    __var pin     = 0;
[19:27:02.697]                      // -> [pin <= 0x00000000]
[19:27:02.697]                    __var port    = 0;
[19:27:02.697]                      // -> [port <= 0x00000000]
[19:27:02.697]                    __var portAdr = 0;
[19:27:02.697]                      // -> [portAdr <= 0x00000000]
[19:27:02.698]                    __var pos     = 0;
[19:27:02.698]                      // -> [pos <= 0x00000000]
[19:27:02.698]                    __var SWO_Pin = 0x00010003;          // PB3
[19:27:02.698]                      // -> [SWO_Pin <= 0x00010003]
[19:27:02.698]                  </block>
[19:27:02.698]                  <block atomic="false" info="configure SWO">
[19:27:02.699]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:27:02.699]                      // -> [pin <= 0x00000003]
[19:27:02.699]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:27:02.699]                      // -> [port <= 0x00000001]
[19:27:02.699]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:27:02.699]                      // -> [portAdr <= 0x40020400]
[19:27:02.699]                    pos = pin * 2;
[19:27:02.699]                      // -> [pos <= 0x00000006]
[19:27:02.699]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:27:02.700]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.700]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.701]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:27:02.701]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.702]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.702]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:27:02.702]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.703]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.703]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:27:02.703]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.704]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.704]                  </block>
[19:27:02.704]                  <control if="pin <  8" while="" timeout="0" info="">
[19:27:02.704]                    // if-block "pin <  8"
[19:27:02.704]                      // =>  TRUE
[19:27:02.704]                    <block atomic="false" info="">
[19:27:02.704]                      pos = ((pin    ) & 7) * 4;
[19:27:02.705]                        // -> [pos <= 0x0000000C]
[19:27:02.705]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:27:02.705]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.706]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.706]                    </block>
[19:27:02.706]                    // end if-block "pin <  8"
[19:27:02.706]                  </control>
[19:27:02.706]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:27:02.706]                    // if-block "pin >= 8"
[19:27:02.707]                      // =>  FALSE
[19:27:02.707]                    // skip if-block "pin >= 8"
[19:27:02.707]                  </control>
[19:27:02.707]                </sequence>
[19:27:02.707]            </block>
[19:27:02.707]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:27:02.707]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:27:02.708]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.708]            </block>
[19:27:02.708]          </sequence>
[19:27:02.708]      </block>
[19:27:02.708]      // end if-block "traceSWO"
[19:27:02.708]    </control>
[19:27:02.708]    <control if="traceTPIU" while="" timeout="0" info="">
[19:27:02.709]      // if-block "traceTPIU"
[19:27:02.709]        // =>  FALSE
[19:27:02.709]      // skip if-block "traceTPIU"
[19:27:02.709]    </control>
[19:27:02.709]  </sequence>
[19:27:02.709]  
[19:27:02.713]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:27:02.713]  
[19:27:02.713]  <debugvars>
[19:27:02.713]    // Pre-defined
[19:27:02.713]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:27:02.714]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:27:02.714]    __dp=0x00000000
[19:27:02.714]    __ap=0x00000000
[19:27:02.714]    __traceout=0x00000001      (SWO Trace)
[19:27:02.714]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:27:02.714]    __FlashAddr=0x00000000
[19:27:02.714]    __FlashLen=0x00000000
[19:27:02.714]    __FlashArg=0x00000000
[19:27:02.715]    __FlashOp=0x00000000
[19:27:02.715]    __Result=0x00000000
[19:27:02.715]    
[19:27:02.715]    // User-defined
[19:27:02.715]    DbgMCU_CR=0x00000007
[19:27:02.715]    DbgMCU_APB1_Fz=0x00000000
[19:27:02.715]    DbgMCU_APB2_Fz=0x00000000
[19:27:02.715]    TraceClk_Pin=0x00040002
[19:27:02.715]    TraceD0_Pin=0x00040003
[19:27:02.716]    TraceD1_Pin=0x00040004
[19:27:02.716]    TraceD2_Pin=0x00040005
[19:27:02.716]    TraceD3_Pin=0x00040006
[19:27:02.716]  </debugvars>
[19:27:02.716]  
[19:27:02.716]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:27:02.716]    <block atomic="false" info="">
[19:27:02.716]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:27:02.717]        // -> [traceSWO <= 0x00000001]
[19:27:02.717]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:27:02.717]        // -> [traceTPIU <= 0x00000000]
[19:27:02.717]    </block>
[19:27:02.717]    <control if="traceSWO" while="" timeout="0" info="">
[19:27:02.717]      // if-block "traceSWO"
[19:27:02.717]        // =>  TRUE
[19:27:02.718]      <block atomic="false" info="">
[19:27:02.718]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:27:02.718]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:27:02.718]            <block atomic="false" info="">
[19:27:02.718]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:27:02.718]                // -> [dbgmcu_val <= 0x00000000]
[19:27:02.718]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:27:02.718]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:27:02.718]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:27:02.719]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.719]                // -> [dbgmcu_val <= 0x00000007]
[19:27:02.719]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:27:02.719]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:27:02.720]              Sequence("ConfigureTraceSWOPin");
[19:27:02.720]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:27:02.720]                  <block atomic="false" info="">
[19:27:02.720]                    __var pin     = 0;
[19:27:02.720]                      // -> [pin <= 0x00000000]
[19:27:02.720]                    __var port    = 0;
[19:27:02.720]                      // -> [port <= 0x00000000]
[19:27:02.720]                    __var portAdr = 0;
[19:27:02.721]                      // -> [portAdr <= 0x00000000]
[19:27:02.721]                    __var pos     = 0;
[19:27:02.721]                      // -> [pos <= 0x00000000]
[19:27:02.721]                    __var SWO_Pin = 0x00010003;          // PB3
[19:27:02.721]                      // -> [SWO_Pin <= 0x00010003]
[19:27:02.721]                  </block>
[19:27:02.721]                  <block atomic="false" info="configure SWO">
[19:27:02.722]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:27:02.722]                      // -> [pin <= 0x00000003]
[19:27:02.722]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:27:02.722]                      // -> [port <= 0x00000001]
[19:27:02.722]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:27:02.722]                      // -> [portAdr <= 0x40020400]
[19:27:02.722]                    pos = pin * 2;
[19:27:02.723]                      // -> [pos <= 0x00000006]
[19:27:02.723]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:27:02.723]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.724]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.724]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:27:02.724]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.724]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.725]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:27:02.725]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.725]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.726]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:27:02.726]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.726]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.727]                  </block>
[19:27:02.727]                  <control if="pin <  8" while="" timeout="0" info="">
[19:27:02.727]                    // if-block "pin <  8"
[19:27:02.727]                      // =>  TRUE
[19:27:02.727]                    <block atomic="false" info="">
[19:27:02.727]                      pos = ((pin    ) & 7) * 4;
[19:27:02.727]                        // -> [pos <= 0x0000000C]
[19:27:02.727]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:27:02.728]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.728]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.728]                    </block>
[19:27:02.729]                    // end if-block "pin <  8"
[19:27:02.729]                  </control>
[19:27:02.729]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:27:02.729]                    // if-block "pin >= 8"
[19:27:02.729]                      // =>  FALSE
[19:27:02.729]                    // skip if-block "pin >= 8"
[19:27:02.729]                  </control>
[19:27:02.729]                </sequence>
[19:27:02.729]            </block>
[19:27:02.730]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:27:02.730]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:27:02.730]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.730]            </block>
[19:27:02.730]          </sequence>
[19:27:02.731]      </block>
[19:27:02.731]      // end if-block "traceSWO"
[19:27:02.731]    </control>
[19:27:02.731]    <control if="traceTPIU" while="" timeout="0" info="">
[19:27:02.731]      // if-block "traceTPIU"
[19:27:02.731]        // =>  FALSE
[19:27:02.731]      // skip if-block "traceTPIU"
[19:27:02.731]    </control>
[19:27:02.731]  </sequence>
[19:27:02.732]  
[19:27:02.940]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:27:02.940]  
[19:27:02.940]  <debugvars>
[19:27:02.940]    // Pre-defined
[19:27:02.940]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:27:02.941]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:27:02.941]    __dp=0x00000000
[19:27:02.941]    __ap=0x00000000
[19:27:02.941]    __traceout=0x00000001      (SWO Trace)
[19:27:02.941]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:27:02.941]    __FlashAddr=0x00000000
[19:27:02.942]    __FlashLen=0x00000000
[19:27:02.942]    __FlashArg=0x00000000
[19:27:02.942]    __FlashOp=0x00000000
[19:27:02.942]    __Result=0x00000000
[19:27:02.942]    
[19:27:02.942]    // User-defined
[19:27:02.942]    DbgMCU_CR=0x00000007
[19:27:02.942]    DbgMCU_APB1_Fz=0x00000000
[19:27:02.942]    DbgMCU_APB2_Fz=0x00000000
[19:27:02.943]    TraceClk_Pin=0x00040002
[19:27:02.943]    TraceD0_Pin=0x00040003
[19:27:02.943]    TraceD1_Pin=0x00040004
[19:27:02.943]    TraceD2_Pin=0x00040005
[19:27:02.943]    TraceD3_Pin=0x00040006
[19:27:02.943]  </debugvars>
[19:27:02.943]  
[19:27:02.943]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:27:02.944]    <block atomic="false" info="">
[19:27:02.944]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:27:02.944]        // -> [traceSWO <= 0x00000001]
[19:27:02.944]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:27:02.944]        // -> [traceTPIU <= 0x00000000]
[19:27:02.944]    </block>
[19:27:02.944]    <control if="traceSWO" while="" timeout="0" info="">
[19:27:02.944]      // if-block "traceSWO"
[19:27:02.945]        // =>  TRUE
[19:27:02.945]      <block atomic="false" info="">
[19:27:02.945]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:27:02.945]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:27:02.945]            <block atomic="false" info="">
[19:27:02.945]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:27:02.945]                // -> [dbgmcu_val <= 0x00000000]
[19:27:02.946]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:27:02.946]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:27:02.946]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:27:02.946]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.946]                // -> [dbgmcu_val <= 0x00000007]
[19:27:02.947]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:27:02.947]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:27:02.947]              Sequence("ConfigureTraceSWOPin");
[19:27:02.947]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:27:02.947]                  <block atomic="false" info="">
[19:27:02.947]                    __var pin     = 0;
[19:27:02.947]                      // -> [pin <= 0x00000000]
[19:27:02.948]                    __var port    = 0;
[19:27:02.948]                      // -> [port <= 0x00000000]
[19:27:02.948]                    __var portAdr = 0;
[19:27:02.948]                      // -> [portAdr <= 0x00000000]
[19:27:02.948]                    __var pos     = 0;
[19:27:02.948]                      // -> [pos <= 0x00000000]
[19:27:02.948]                    __var SWO_Pin = 0x00010003;          // PB3
[19:27:02.948]                      // -> [SWO_Pin <= 0x00010003]
[19:27:02.949]                  </block>
[19:27:02.949]                  <block atomic="false" info="configure SWO">
[19:27:02.949]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:27:02.949]                      // -> [pin <= 0x00000003]
[19:27:02.949]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:27:02.949]                      // -> [port <= 0x00000001]
[19:27:02.949]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:27:02.949]                      // -> [portAdr <= 0x40020400]
[19:27:02.950]                    pos = pin * 2;
[19:27:02.950]                      // -> [pos <= 0x00000006]
[19:27:02.950]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:27:02.950]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.951]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.951]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:27:02.951]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.952]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.952]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:27:02.952]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.953]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.953]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:27:02.953]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.954]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.954]                  </block>
[19:27:02.954]                  <control if="pin <  8" while="" timeout="0" info="">
[19:27:02.954]                    // if-block "pin <  8"
[19:27:02.954]                      // =>  TRUE
[19:27:02.955]                    <block atomic="false" info="">
[19:27:02.955]                      pos = ((pin    ) & 7) * 4;
[19:27:02.955]                        // -> [pos <= 0x0000000C]
[19:27:02.955]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:27:02.955]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.956]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.956]                    </block>
[19:27:02.956]                    // end if-block "pin <  8"
[19:27:02.956]                  </control>
[19:27:02.956]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:27:02.956]                    // if-block "pin >= 8"
[19:27:02.957]                      // =>  FALSE
[19:27:02.957]                    // skip if-block "pin >= 8"
[19:27:02.957]                  </control>
[19:27:02.957]                </sequence>
[19:27:02.957]            </block>
[19:27:02.957]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:27:02.957]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:27:02.958]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:27:02.958]            </block>
[19:27:02.958]          </sequence>
[19:27:02.958]      </block>
[19:27:02.958]      // end if-block "traceSWO"
[19:27:02.958]    </control>
[19:27:02.959]    <control if="traceTPIU" while="" timeout="0" info="">
[19:27:02.959]      // if-block "traceTPIU"
[19:27:02.959]        // =>  FALSE
[19:27:02.959]      // skip if-block "traceTPIU"
[19:27:02.959]    </control>
[19:27:02.959]  </sequence>
[19:27:02.959]  
[19:28:34.969]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:28:34.969]  
[19:28:34.970]  <debugvars>
[19:28:34.970]    // Pre-defined
[19:28:34.971]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:28:34.972]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:28:34.972]    __dp=0x00000000
[19:28:34.973]    __ap=0x00000000
[19:28:34.973]    __traceout=0x00000001      (SWO Trace)
[19:28:34.974]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:28:34.974]    __FlashAddr=0x00000000
[19:28:34.975]    __FlashLen=0x00000000
[19:28:34.975]    __FlashArg=0x00000000
[19:28:34.976]    __FlashOp=0x00000000
[19:28:34.976]    __Result=0x00000000
[19:28:34.977]    
[19:28:34.977]    // User-defined
[19:28:34.977]    DbgMCU_CR=0x00000007
[19:28:34.977]    DbgMCU_APB1_Fz=0x00000000
[19:28:34.978]    DbgMCU_APB2_Fz=0x00000000
[19:28:34.978]    TraceClk_Pin=0x00040002
[19:28:34.979]    TraceD0_Pin=0x00040003
[19:28:34.979]    TraceD1_Pin=0x00040004
[19:28:34.980]    TraceD2_Pin=0x00040005
[19:28:34.980]    TraceD3_Pin=0x00040006
[19:28:34.980]  </debugvars>
[19:28:34.981]  
[19:28:34.981]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:28:34.981]    <block atomic="false" info="">
[19:28:34.982]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:28:34.982]        // -> [traceSWO <= 0x00000001]
[19:28:34.982]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:28:34.983]        // -> [traceTPIU <= 0x00000000]
[19:28:34.983]    </block>
[19:28:34.984]    <control if="traceSWO" while="" timeout="0" info="">
[19:28:34.984]      // if-block "traceSWO"
[19:28:34.984]        // =>  TRUE
[19:28:34.985]      <block atomic="false" info="">
[19:28:34.985]        Sequence("DisableTraceSWO");
[19:28:34.985]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:28:34.986]            <block atomic="false" info="">
[19:28:34.986]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:28:34.986]                // -> [dbgmcu_val <= 0x00000000]
[19:28:34.986]            </block>
[19:28:34.987]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:28:34.987]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:28:34.987]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:28:34.988]                // -> [dbgmcu_val <= 0x00000007]
[19:28:34.988]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:28:34.989]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:34.989]            </block>
[19:28:34.989]          </sequence>
[19:28:34.989]      </block>
[19:28:34.989]      // end if-block "traceSWO"
[19:28:34.990]    </control>
[19:28:34.990]    <control if="traceTPIU" while="" timeout="0" info="">
[19:28:34.990]      // if-block "traceTPIU"
[19:28:34.990]        // =>  FALSE
[19:28:34.990]      // skip if-block "traceTPIU"
[19:28:34.990]    </control>
[19:28:34.991]  </sequence>
[19:28:34.991]  
[19:30:04.557]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:30:04.557]  
[19:30:04.557]  <debugvars>
[19:30:04.557]    // Pre-defined
[19:30:04.557]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:04.559]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:30:04.559]    __dp=0x00000000
[19:30:04.559]    __ap=0x00000000
[19:30:04.559]    __traceout=0x00000001      (SWO Trace)
[19:30:04.559]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:04.559]    __FlashAddr=0x00000000
[19:30:04.559]    __FlashLen=0x00000000
[19:30:04.559]    __FlashArg=0x00000000
[19:30:04.559]    __FlashOp=0x00000000
[19:30:04.559]    __Result=0x00000000
[19:30:04.559]    
[19:30:04.559]    // User-defined
[19:30:04.560]    DbgMCU_CR=0x00000007
[19:30:04.560]    DbgMCU_APB1_Fz=0x00000000
[19:30:04.560]    DbgMCU_APB2_Fz=0x00000000
[19:30:04.560]    TraceClk_Pin=0x00040002
[19:30:04.560]    TraceD0_Pin=0x00040003
[19:30:04.560]    TraceD1_Pin=0x00040004
[19:30:04.561]    TraceD2_Pin=0x00040005
[19:30:04.561]    TraceD3_Pin=0x00040006
[19:30:04.561]  </debugvars>
[19:30:04.561]  
[19:30:04.561]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:30:04.561]    <block atomic="false" info="">
[19:30:04.562]      Sequence("CheckID");
[19:30:04.562]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:30:04.562]          <block atomic="false" info="">
[19:30:04.562]            __var pidr1 = 0;
[19:30:04.562]              // -> [pidr1 <= 0x00000000]
[19:30:04.562]            __var pidr2 = 0;
[19:30:04.563]              // -> [pidr2 <= 0x00000000]
[19:30:04.563]            __var jep106id = 0;
[19:30:04.563]              // -> [jep106id <= 0x00000000]
[19:30:04.563]            __var ROMTableBase = 0;
[19:30:04.563]              // -> [ROMTableBase <= 0x00000000]
[19:30:04.563]            __ap = 0;      // AHB-AP
[19:30:04.563]              // -> [__ap <= 0x00000000]
[19:30:04.563]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:30:04.564]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.564]              // -> [ROMTableBase <= 0xE00FD000]
[19:30:04.564]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:30:04.565]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.565]              // -> [pidr1 <= 0x00000004]
[19:30:04.565]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:30:04.565]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.565]              // -> [pidr2 <= 0x0000001A]
[19:30:04.565]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:30:04.566]              // -> [jep106id <= 0x00000020]
[19:30:04.567]          </block>
[19:30:04.567]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:30:04.567]            // if-block "jep106id != 0x20"
[19:30:04.567]              // =>  FALSE
[19:30:04.567]            // skip if-block "jep106id != 0x20"
[19:30:04.567]          </control>
[19:30:04.567]        </sequence>
[19:30:04.567]    </block>
[19:30:04.567]  </sequence>
[19:30:04.567]  
[19:30:04.582]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:30:04.582]  
[19:30:04.583]  <debugvars>
[19:30:04.583]    // Pre-defined
[19:30:04.583]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:04.583]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:30:04.583]    __dp=0x00000000
[19:30:04.583]    __ap=0x00000000
[19:30:04.583]    __traceout=0x00000001      (SWO Trace)
[19:30:04.583]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:04.583]    __FlashAddr=0x00000000
[19:30:04.583]    __FlashLen=0x00000000
[19:30:04.583]    __FlashArg=0x00000000
[19:30:04.583]    __FlashOp=0x00000000
[19:30:04.583]    __Result=0x00000000
[19:30:04.584]    
[19:30:04.584]    // User-defined
[19:30:04.584]    DbgMCU_CR=0x00000007
[19:30:04.584]    DbgMCU_APB1_Fz=0x00000000
[19:30:04.584]    DbgMCU_APB2_Fz=0x00000000
[19:30:04.584]    TraceClk_Pin=0x00040002
[19:30:04.584]    TraceD0_Pin=0x00040003
[19:30:04.585]    TraceD1_Pin=0x00040004
[19:30:04.585]    TraceD2_Pin=0x00040005
[19:30:04.585]    TraceD3_Pin=0x00040006
[19:30:04.585]  </debugvars>
[19:30:04.585]  
[19:30:04.585]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:30:04.585]    <block atomic="false" info="">
[19:30:04.585]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:30:04.586]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.586]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:30:04.587]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.587]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:30:04.588]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.588]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:30:04.588]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:04.588]    </block>
[19:30:04.589]  </sequence>
[19:30:04.589]  
[19:30:35.495]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:30:35.495]  
[19:30:35.495]  <debugvars>
[19:30:35.495]    // Pre-defined
[19:30:35.495]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:35.495]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:30:35.495]    __dp=0x00000000
[19:30:35.496]    __ap=0x00000000
[19:30:35.496]    __traceout=0x00000001      (SWO Trace)
[19:30:35.496]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:35.496]    __FlashAddr=0x00000000
[19:30:35.496]    __FlashLen=0x00000000
[19:30:35.496]    __FlashArg=0x00000000
[19:30:35.496]    __FlashOp=0x00000000
[19:30:35.497]    __Result=0x00000000
[19:30:35.497]    
[19:30:35.497]    // User-defined
[19:30:35.497]    DbgMCU_CR=0x00000007
[19:30:35.497]    DbgMCU_APB1_Fz=0x00000000
[19:30:35.497]    DbgMCU_APB2_Fz=0x00000000
[19:30:35.497]    TraceClk_Pin=0x00040002
[19:30:35.497]    TraceD0_Pin=0x00040003
[19:30:35.498]    TraceD1_Pin=0x00040004
[19:30:35.498]    TraceD2_Pin=0x00040005
[19:30:35.498]    TraceD3_Pin=0x00040006
[19:30:35.498]  </debugvars>
[19:30:35.498]  
[19:30:35.498]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:30:35.498]    <block atomic="false" info="">
[19:30:35.499]      Sequence("CheckID");
[19:30:35.499]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:30:35.499]          <block atomic="false" info="">
[19:30:35.499]            __var pidr1 = 0;
[19:30:35.499]              // -> [pidr1 <= 0x00000000]
[19:30:35.499]            __var pidr2 = 0;
[19:30:35.499]              // -> [pidr2 <= 0x00000000]
[19:30:35.499]            __var jep106id = 0;
[19:30:35.500]              // -> [jep106id <= 0x00000000]
[19:30:35.500]            __var ROMTableBase = 0;
[19:30:35.500]              // -> [ROMTableBase <= 0x00000000]
[19:30:35.500]            __ap = 0;      // AHB-AP
[19:30:35.500]              // -> [__ap <= 0x00000000]
[19:30:35.500]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:30:35.500]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.501]              // -> [ROMTableBase <= 0xE00FD000]
[19:30:35.501]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:30:35.501]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.501]              // -> [pidr1 <= 0x00000004]
[19:30:35.501]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:30:35.502]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.502]              // -> [pidr2 <= 0x0000001A]
[19:30:35.502]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:30:35.502]              // -> [jep106id <= 0x00000020]
[19:30:35.502]          </block>
[19:30:35.502]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:30:35.503]            // if-block "jep106id != 0x20"
[19:30:35.503]              // =>  FALSE
[19:30:35.503]            // skip if-block "jep106id != 0x20"
[19:30:35.503]          </control>
[19:30:35.503]        </sequence>
[19:30:35.503]    </block>
[19:30:35.503]  </sequence>
[19:30:35.503]  
[19:30:35.518]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:30:35.518]  
[19:30:35.518]  <debugvars>
[19:30:35.519]    // Pre-defined
[19:30:35.519]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:35.519]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:30:35.519]    __dp=0x00000000
[19:30:35.519]    __ap=0x00000000
[19:30:35.520]    __traceout=0x00000001      (SWO Trace)
[19:30:35.520]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:35.520]    __FlashAddr=0x00000000
[19:30:35.520]    __FlashLen=0x00000000
[19:30:35.520]    __FlashArg=0x00000000
[19:30:35.520]    __FlashOp=0x00000000
[19:30:35.521]    __Result=0x00000000
[19:30:35.521]    
[19:30:35.521]    // User-defined
[19:30:35.521]    DbgMCU_CR=0x00000007
[19:30:35.521]    DbgMCU_APB1_Fz=0x00000000
[19:30:35.521]    DbgMCU_APB2_Fz=0x00000000
[19:30:35.521]    TraceClk_Pin=0x00040002
[19:30:35.522]    TraceD0_Pin=0x00040003
[19:30:35.522]    TraceD1_Pin=0x00040004
[19:30:35.522]    TraceD2_Pin=0x00040005
[19:30:35.522]    TraceD3_Pin=0x00040006
[19:30:35.522]  </debugvars>
[19:30:35.522]  
[19:30:35.523]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:30:35.523]    <block atomic="false" info="">
[19:30:35.523]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:30:35.523]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.524]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:30:35.524]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.524]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:30:35.525]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.525]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:30:35.526]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.526]    </block>
[19:30:35.526]  </sequence>
[19:30:35.527]  
[19:30:35.543]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:30:35.543]  
[19:30:35.543]  <debugvars>
[19:30:35.543]    // Pre-defined
[19:30:35.543]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:35.543]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:30:35.543]    __dp=0x00000000
[19:30:35.544]    __ap=0x00000000
[19:30:35.544]    __traceout=0x00000001      (SWO Trace)
[19:30:35.544]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:35.544]    __FlashAddr=0x00000000
[19:30:35.544]    __FlashLen=0x00000000
[19:30:35.544]    __FlashArg=0x00000000
[19:30:35.545]    __FlashOp=0x00000000
[19:30:35.545]    __Result=0x00000000
[19:30:35.545]    
[19:30:35.545]    // User-defined
[19:30:35.545]    DbgMCU_CR=0x00000007
[19:30:35.545]    DbgMCU_APB1_Fz=0x00000000
[19:30:35.545]    DbgMCU_APB2_Fz=0x00000000
[19:30:35.545]    TraceClk_Pin=0x00040002
[19:30:35.546]    TraceD0_Pin=0x00040003
[19:30:35.546]    TraceD1_Pin=0x00040004
[19:30:35.546]    TraceD2_Pin=0x00040005
[19:30:35.546]    TraceD3_Pin=0x00040006
[19:30:35.546]  </debugvars>
[19:30:35.546]  
[19:30:35.546]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:30:35.547]    <block atomic="false" info="">
[19:30:35.547]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:30:35.547]        // -> [traceSWO <= 0x00000001]
[19:30:35.547]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:30:35.547]        // -> [traceTPIU <= 0x00000000]
[19:30:35.548]    </block>
[19:30:35.548]    <control if="traceSWO" while="" timeout="0" info="">
[19:30:35.548]      // if-block "traceSWO"
[19:30:35.548]        // =>  TRUE
[19:30:35.548]      <block atomic="false" info="">
[19:30:35.548]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:30:35.548]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:30:35.549]            <block atomic="false" info="">
[19:30:35.549]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:30:35.549]                // -> [dbgmcu_val <= 0x00000000]
[19:30:35.549]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:30:35.549]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:30:35.549]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:30:35.550]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.550]                // -> [dbgmcu_val <= 0x00000007]
[19:30:35.550]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:30:35.550]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:30:35.550]              Sequence("ConfigureTraceSWOPin");
[19:30:35.550]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:30:35.550]                  <block atomic="false" info="">
[19:30:35.550]                    __var pin     = 0;
[19:30:35.550]                      // -> [pin <= 0x00000000]
[19:30:35.551]                    __var port    = 0;
[19:30:35.551]                      // -> [port <= 0x00000000]
[19:30:35.551]                    __var portAdr = 0;
[19:30:35.551]                      // -> [portAdr <= 0x00000000]
[19:30:35.551]                    __var pos     = 0;
[19:30:35.551]                      // -> [pos <= 0x00000000]
[19:30:35.551]                    __var SWO_Pin = 0x00010003;          // PB3
[19:30:35.551]                      // -> [SWO_Pin <= 0x00010003]
[19:30:35.552]                  </block>
[19:30:35.552]                  <block atomic="false" info="configure SWO">
[19:30:35.552]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:30:35.552]                      // -> [pin <= 0x00000003]
[19:30:35.552]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:30:35.552]                      // -> [port <= 0x00000001]
[19:30:35.552]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:30:35.552]                      // -> [portAdr <= 0x40020400]
[19:30:35.552]                    pos = pin * 2;
[19:30:35.553]                      // -> [pos <= 0x00000006]
[19:30:35.553]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:30:35.553]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.553]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.553]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:30:35.554]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.554]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.554]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:30:35.555]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.555]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.555]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:30:35.555]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.556]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.556]                  </block>
[19:30:35.556]                  <control if="pin <  8" while="" timeout="0" info="">
[19:30:35.556]                    // if-block "pin <  8"
[19:30:35.556]                      // =>  TRUE
[19:30:35.556]                    <block atomic="false" info="">
[19:30:35.556]                      pos = ((pin    ) & 7) * 4;
[19:30:35.557]                        // -> [pos <= 0x0000000C]
[19:30:35.557]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:30:35.557]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.558]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.558]                    </block>
[19:30:35.558]                    // end if-block "pin <  8"
[19:30:35.558]                  </control>
[19:30:35.558]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:30:35.558]                    // if-block "pin >= 8"
[19:30:35.558]                      // =>  FALSE
[19:30:35.558]                    // skip if-block "pin >= 8"
[19:30:35.558]                  </control>
[19:30:35.559]                </sequence>
[19:30:35.559]            </block>
[19:30:35.559]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:30:35.559]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:30:35.559]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.559]            </block>
[19:30:35.559]          </sequence>
[19:30:35.560]      </block>
[19:30:35.560]      // end if-block "traceSWO"
[19:30:35.560]    </control>
[19:30:35.560]    <control if="traceTPIU" while="" timeout="0" info="">
[19:30:35.560]      // if-block "traceTPIU"
[19:30:35.560]        // =>  FALSE
[19:30:35.560]      // skip if-block "traceTPIU"
[19:30:35.560]    </control>
[19:30:35.560]  </sequence>
[19:30:35.561]  
[19:30:35.565]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:30:35.565]  
[19:30:35.566]  <debugvars>
[19:30:35.566]    // Pre-defined
[19:30:35.566]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:35.566]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:30:35.566]    __dp=0x00000000
[19:30:35.566]    __ap=0x00000000
[19:30:35.566]    __traceout=0x00000001      (SWO Trace)
[19:30:35.566]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:35.566]    __FlashAddr=0x00000000
[19:30:35.566]    __FlashLen=0x00000000
[19:30:35.566]    __FlashArg=0x00000000
[19:30:35.567]    __FlashOp=0x00000000
[19:30:35.567]    __Result=0x00000000
[19:30:35.567]    
[19:30:35.567]    // User-defined
[19:30:35.567]    DbgMCU_CR=0x00000007
[19:30:35.567]    DbgMCU_APB1_Fz=0x00000000
[19:30:35.567]    DbgMCU_APB2_Fz=0x00000000
[19:30:35.567]    TraceClk_Pin=0x00040002
[19:30:35.567]    TraceD0_Pin=0x00040003
[19:30:35.568]    TraceD1_Pin=0x00040004
[19:30:35.568]    TraceD2_Pin=0x00040005
[19:30:35.568]    TraceD3_Pin=0x00040006
[19:30:35.568]  </debugvars>
[19:30:35.568]  
[19:30:35.568]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:30:35.568]    <block atomic="false" info="">
[19:30:35.568]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:30:35.569]        // -> [traceSWO <= 0x00000001]
[19:30:35.569]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:30:35.569]        // -> [traceTPIU <= 0x00000000]
[19:30:35.569]    </block>
[19:30:35.569]    <control if="traceSWO" while="" timeout="0" info="">
[19:30:35.569]      // if-block "traceSWO"
[19:30:35.569]        // =>  TRUE
[19:30:35.569]      <block atomic="false" info="">
[19:30:35.570]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:30:35.570]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:30:35.570]            <block atomic="false" info="">
[19:30:35.570]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:30:35.570]                // -> [dbgmcu_val <= 0x00000000]
[19:30:35.570]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:30:35.570]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:30:35.570]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:30:35.571]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.571]                // -> [dbgmcu_val <= 0x00000007]
[19:30:35.571]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:30:35.571]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:30:35.571]              Sequence("ConfigureTraceSWOPin");
[19:30:35.571]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:30:35.571]                  <block atomic="false" info="">
[19:30:35.572]                    __var pin     = 0;
[19:30:35.572]                      // -> [pin <= 0x00000000]
[19:30:35.572]                    __var port    = 0;
[19:30:35.572]                      // -> [port <= 0x00000000]
[19:30:35.572]                    __var portAdr = 0;
[19:30:35.572]                      // -> [portAdr <= 0x00000000]
[19:30:35.572]                    __var pos     = 0;
[19:30:35.572]                      // -> [pos <= 0x00000000]
[19:30:35.572]                    __var SWO_Pin = 0x00010003;          // PB3
[19:30:35.573]                      // -> [SWO_Pin <= 0x00010003]
[19:30:35.573]                  </block>
[19:30:35.573]                  <block atomic="false" info="configure SWO">
[19:30:35.573]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:30:35.573]                      // -> [pin <= 0x00000003]
[19:30:35.573]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:30:35.573]                      // -> [port <= 0x00000001]
[19:30:35.573]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:30:35.573]                      // -> [portAdr <= 0x40020400]
[19:30:35.574]                    pos = pin * 2;
[19:30:35.574]                      // -> [pos <= 0x00000006]
[19:30:35.574]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:30:35.574]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.575]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.575]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:30:35.575]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.576]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.576]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:30:35.576]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.576]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.577]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:30:35.577]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.577]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.577]                  </block>
[19:30:35.578]                  <control if="pin <  8" while="" timeout="0" info="">
[19:30:35.578]                    // if-block "pin <  8"
[19:30:35.578]                      // =>  TRUE
[19:30:35.578]                    <block atomic="false" info="">
[19:30:35.578]                      pos = ((pin    ) & 7) * 4;
[19:30:35.578]                        // -> [pos <= 0x0000000C]
[19:30:35.578]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:30:35.579]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.579]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.579]                    </block>
[19:30:35.579]                    // end if-block "pin <  8"
[19:30:35.579]                  </control>
[19:30:35.580]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:30:35.580]                    // if-block "pin >= 8"
[19:30:35.580]                      // =>  FALSE
[19:30:35.580]                    // skip if-block "pin >= 8"
[19:30:35.580]                  </control>
[19:30:35.580]                </sequence>
[19:30:35.580]            </block>
[19:30:35.580]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:30:35.580]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:30:35.581]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.581]            </block>
[19:30:35.581]          </sequence>
[19:30:35.581]      </block>
[19:30:35.581]      // end if-block "traceSWO"
[19:30:35.582]    </control>
[19:30:35.582]    <control if="traceTPIU" while="" timeout="0" info="">
[19:30:35.582]      // if-block "traceTPIU"
[19:30:35.582]        // =>  FALSE
[19:30:35.582]      // skip if-block "traceTPIU"
[19:30:35.582]    </control>
[19:30:35.582]  </sequence>
[19:30:35.582]  
[19:30:35.796]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:30:35.796]  
[19:30:35.797]  <debugvars>
[19:30:35.797]    // Pre-defined
[19:30:35.797]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:30:35.797]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:30:35.797]    __dp=0x00000000
[19:30:35.798]    __ap=0x00000000
[19:30:35.798]    __traceout=0x00000001      (SWO Trace)
[19:30:35.798]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:30:35.798]    __FlashAddr=0x00000000
[19:30:35.798]    __FlashLen=0x00000000
[19:30:35.799]    __FlashArg=0x00000000
[19:30:35.799]    __FlashOp=0x00000000
[19:30:35.799]    __Result=0x00000000
[19:30:35.799]    
[19:30:35.799]    // User-defined
[19:30:35.799]    DbgMCU_CR=0x00000007
[19:30:35.799]    DbgMCU_APB1_Fz=0x00000000
[19:30:35.800]    DbgMCU_APB2_Fz=0x00000000
[19:30:35.800]    TraceClk_Pin=0x00040002
[19:30:35.800]    TraceD0_Pin=0x00040003
[19:30:35.800]    TraceD1_Pin=0x00040004
[19:30:35.800]    TraceD2_Pin=0x00040005
[19:30:35.800]    TraceD3_Pin=0x00040006
[19:30:35.800]  </debugvars>
[19:30:35.801]  
[19:30:35.801]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:30:35.801]    <block atomic="false" info="">
[19:30:35.801]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:30:35.801]        // -> [traceSWO <= 0x00000001]
[19:30:35.801]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:30:35.801]        // -> [traceTPIU <= 0x00000000]
[19:30:35.801]    </block>
[19:30:35.802]    <control if="traceSWO" while="" timeout="0" info="">
[19:30:35.802]      // if-block "traceSWO"
[19:30:35.802]        // =>  TRUE
[19:30:35.802]      <block atomic="false" info="">
[19:30:35.802]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:30:35.802]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:30:35.802]            <block atomic="false" info="">
[19:30:35.802]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:30:35.803]                // -> [dbgmcu_val <= 0x00000000]
[19:30:35.803]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:30:35.803]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:30:35.803]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:30:35.803]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.803]                // -> [dbgmcu_val <= 0x00000007]
[19:30:35.804]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:30:35.804]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:30:35.804]              Sequence("ConfigureTraceSWOPin");
[19:30:35.804]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:30:35.804]                  <block atomic="false" info="">
[19:30:35.804]                    __var pin     = 0;
[19:30:35.804]                      // -> [pin <= 0x00000000]
[19:30:35.804]                    __var port    = 0;
[19:30:35.804]                      // -> [port <= 0x00000000]
[19:30:35.805]                    __var portAdr = 0;
[19:30:35.805]                      // -> [portAdr <= 0x00000000]
[19:30:35.805]                    __var pos     = 0;
[19:30:35.805]                      // -> [pos <= 0x00000000]
[19:30:35.805]                    __var SWO_Pin = 0x00010003;          // PB3
[19:30:35.805]                      // -> [SWO_Pin <= 0x00010003]
[19:30:35.805]                  </block>
[19:30:35.805]                  <block atomic="false" info="configure SWO">
[19:30:35.805]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:30:35.806]                      // -> [pin <= 0x00000003]
[19:30:35.806]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:30:35.806]                      // -> [port <= 0x00000001]
[19:30:35.806]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:30:35.806]                      // -> [portAdr <= 0x40020400]
[19:30:35.806]                    pos = pin * 2;
[19:30:35.806]                      // -> [pos <= 0x00000006]
[19:30:35.806]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:30:35.807]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.807]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.807]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:30:35.808]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.808]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.808]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:30:35.809]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.809]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.809]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:30:35.810]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.810]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.810]                  </block>
[19:30:35.810]                  <control if="pin <  8" while="" timeout="0" info="">
[19:30:35.811]                    // if-block "pin <  8"
[19:30:35.811]                      // =>  TRUE
[19:30:35.811]                    <block atomic="false" info="">
[19:30:35.811]                      pos = ((pin    ) & 7) * 4;
[19:30:35.811]                        // -> [pos <= 0x0000000C]
[19:30:35.811]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:30:35.812]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.812]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.812]                    </block>
[19:30:35.812]                    // end if-block "pin <  8"
[19:30:35.812]                  </control>
[19:30:35.812]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:30:35.813]                    // if-block "pin >= 8"
[19:30:35.813]                      // =>  FALSE
[19:30:35.813]                    // skip if-block "pin >= 8"
[19:30:35.813]                  </control>
[19:30:35.813]                </sequence>
[19:30:35.813]            </block>
[19:30:35.813]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:30:35.813]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:30:35.814]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:30:35.814]            </block>
[19:30:35.814]          </sequence>
[19:30:35.814]      </block>
[19:30:35.814]      // end if-block "traceSWO"
[19:30:35.815]    </control>
[19:30:35.815]    <control if="traceTPIU" while="" timeout="0" info="">
[19:30:35.815]      // if-block "traceTPIU"
[19:30:35.815]        // =>  FALSE
[19:30:35.815]      // skip if-block "traceTPIU"
[19:30:35.815]    </control>
[19:30:35.815]  </sequence>
[19:30:35.815]  
[19:31:50.827]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:31:50.827]  
[19:31:50.827]  <debugvars>
[19:31:50.828]    // Pre-defined
[19:31:50.828]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:31:50.828]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:31:50.828]    __dp=0x00000000
[19:31:50.828]    __ap=0x00000000
[19:31:50.829]    __traceout=0x00000001      (SWO Trace)
[19:31:50.829]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:31:50.829]    __FlashAddr=0x00000000
[19:31:50.829]    __FlashLen=0x00000000
[19:31:50.829]    __FlashArg=0x00000000
[19:31:50.830]    __FlashOp=0x00000000
[19:31:50.831]    __Result=0x00000000
[19:31:50.831]    
[19:31:50.831]    // User-defined
[19:31:50.831]    DbgMCU_CR=0x00000007
[19:31:50.831]    DbgMCU_APB1_Fz=0x00000000
[19:31:50.831]    DbgMCU_APB2_Fz=0x00000000
[19:31:50.831]    TraceClk_Pin=0x00040002
[19:31:50.831]    TraceD0_Pin=0x00040003
[19:31:50.831]    TraceD1_Pin=0x00040004
[19:31:50.831]    TraceD2_Pin=0x00040005
[19:31:50.832]    TraceD3_Pin=0x00040006
[19:31:50.832]  </debugvars>
[19:31:50.832]  
[19:31:50.832]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:31:50.832]    <block atomic="false" info="">
[19:31:50.832]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:31:50.832]        // -> [traceSWO <= 0x00000001]
[19:31:50.832]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:31:50.832]        // -> [traceTPIU <= 0x00000000]
[19:31:50.832]    </block>
[19:31:50.833]    <control if="traceSWO" while="" timeout="0" info="">
[19:31:50.833]      // if-block "traceSWO"
[19:31:50.833]        // =>  TRUE
[19:31:50.833]      <block atomic="false" info="">
[19:31:50.833]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:31:50.833]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:31:50.834]            <block atomic="false" info="">
[19:31:50.834]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:31:50.834]                // -> [dbgmcu_val <= 0x00000000]
[19:31:50.834]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:31:50.834]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:31:50.834]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:31:50.835]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.835]                // -> [dbgmcu_val <= 0x00000007]
[19:31:50.835]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:31:50.835]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:31:50.835]              Sequence("ConfigureTraceSWOPin");
[19:31:50.836]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:31:50.836]                  <block atomic="false" info="">
[19:31:50.836]                    __var pin     = 0;
[19:31:50.836]                      // -> [pin <= 0x00000000]
[19:31:50.836]                    __var port    = 0;
[19:31:50.836]                      // -> [port <= 0x00000000]
[19:31:50.836]                    __var portAdr = 0;
[19:31:50.836]                      // -> [portAdr <= 0x00000000]
[19:31:50.836]                    __var pos     = 0;
[19:31:50.837]                      // -> [pos <= 0x00000000]
[19:31:50.837]                    __var SWO_Pin = 0x00010003;          // PB3
[19:31:50.837]                      // -> [SWO_Pin <= 0x00010003]
[19:31:50.837]                  </block>
[19:31:50.837]                  <block atomic="false" info="configure SWO">
[19:31:50.837]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:31:50.837]                      // -> [pin <= 0x00000003]
[19:31:50.837]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:31:50.837]                      // -> [port <= 0x00000001]
[19:31:50.838]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:31:50.838]                      // -> [portAdr <= 0x40020400]
[19:31:50.838]                    pos = pin * 2;
[19:31:50.838]                      // -> [pos <= 0x00000006]
[19:31:50.838]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:31:50.838]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.839]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.839]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:31:50.839]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.840]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.840]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:31:50.840]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.841]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.841]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:31:50.841]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.842]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.842]                  </block>
[19:31:50.842]                  <control if="pin <  8" while="" timeout="0" info="">
[19:31:50.842]                    // if-block "pin <  8"
[19:31:50.842]                      // =>  TRUE
[19:31:50.842]                    <block atomic="false" info="">
[19:31:50.842]                      pos = ((pin    ) & 7) * 4;
[19:31:50.842]                        // -> [pos <= 0x0000000C]
[19:31:50.843]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:31:50.843]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.843]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.843]                    </block>
[19:31:50.844]                    // end if-block "pin <  8"
[19:31:50.844]                  </control>
[19:31:50.844]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:31:50.844]                    // if-block "pin >= 8"
[19:31:50.844]                      // =>  FALSE
[19:31:50.844]                    // skip if-block "pin >= 8"
[19:31:50.844]                  </control>
[19:31:50.844]                </sequence>
[19:31:50.844]            </block>
[19:31:50.845]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:31:50.845]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:31:50.845]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:31:50.845]            </block>
[19:31:50.845]          </sequence>
[19:31:50.845]      </block>
[19:31:50.845]      // end if-block "traceSWO"
[19:31:50.846]    </control>
[19:31:50.846]    <control if="traceTPIU" while="" timeout="0" info="">
[19:31:50.846]      // if-block "traceTPIU"
[19:31:50.846]        // =>  FALSE
[19:31:50.846]      // skip if-block "traceTPIU"
[19:31:50.846]    </control>
[19:31:50.846]  </sequence>
[19:31:50.846]  
[19:34:23.310]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:34:23.310]  
[19:34:23.311]  <debugvars>
[19:34:23.311]    // Pre-defined
[19:34:23.311]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:34:23.311]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:34:23.311]    __dp=0x00000000
[19:34:23.312]    __ap=0x00000000
[19:34:23.312]    __traceout=0x00000001      (SWO Trace)
[19:34:23.312]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:34:23.312]    __FlashAddr=0x00000000
[19:34:23.312]    __FlashLen=0x00000000
[19:34:23.312]    __FlashArg=0x00000000
[19:34:23.312]    __FlashOp=0x00000000
[19:34:23.313]    __Result=0x00000000
[19:34:23.313]    
[19:34:23.313]    // User-defined
[19:34:23.313]    DbgMCU_CR=0x00000007
[19:34:23.313]    DbgMCU_APB1_Fz=0x00000000
[19:34:23.313]    DbgMCU_APB2_Fz=0x00000000
[19:34:23.313]    TraceClk_Pin=0x00040002
[19:34:23.313]    TraceD0_Pin=0x00040003
[19:34:23.314]    TraceD1_Pin=0x00040004
[19:34:23.314]    TraceD2_Pin=0x00040005
[19:34:23.314]    TraceD3_Pin=0x00040006
[19:34:23.314]  </debugvars>
[19:34:23.314]  
[19:34:23.314]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:34:23.314]    <block atomic="false" info="">
[19:34:23.315]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:34:23.315]        // -> [traceSWO <= 0x00000001]
[19:34:23.315]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:34:23.315]        // -> [traceTPIU <= 0x00000000]
[19:34:23.315]    </block>
[19:34:23.315]    <control if="traceSWO" while="" timeout="0" info="">
[19:34:23.315]      // if-block "traceSWO"
[19:34:23.316]        // =>  TRUE
[19:34:23.316]      <block atomic="false" info="">
[19:34:23.316]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:34:23.316]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:34:23.316]            <block atomic="false" info="">
[19:34:23.316]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:34:23.316]                // -> [dbgmcu_val <= 0x00000000]
[19:34:23.317]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:34:23.317]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:34:23.317]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:34:23.317]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.317]                // -> [dbgmcu_val <= 0x00000007]
[19:34:23.317]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:34:23.317]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:34:23.318]              Sequence("ConfigureTraceSWOPin");
[19:34:23.318]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:34:23.318]                  <block atomic="false" info="">
[19:34:23.318]                    __var pin     = 0;
[19:34:23.318]                      // -> [pin <= 0x00000000]
[19:34:23.318]                    __var port    = 0;
[19:34:23.318]                      // -> [port <= 0x00000000]
[19:34:23.318]                    __var portAdr = 0;
[19:34:23.318]                      // -> [portAdr <= 0x00000000]
[19:34:23.319]                    __var pos     = 0;
[19:34:23.319]                      // -> [pos <= 0x00000000]
[19:34:23.319]                    __var SWO_Pin = 0x00010003;          // PB3
[19:34:23.319]                      // -> [SWO_Pin <= 0x00010003]
[19:34:23.319]                  </block>
[19:34:23.319]                  <block atomic="false" info="configure SWO">
[19:34:23.319]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:34:23.319]                      // -> [pin <= 0x00000003]
[19:34:23.319]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:34:23.320]                      // -> [port <= 0x00000001]
[19:34:23.320]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:34:23.320]                      // -> [portAdr <= 0x40020400]
[19:34:23.320]                    pos = pin * 2;
[19:34:23.320]                      // -> [pos <= 0x00000006]
[19:34:23.320]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:34:23.321]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.321]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.321]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:34:23.322]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.322]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.322]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:34:23.323]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.323]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.323]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:34:23.324]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.324]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.324]                  </block>
[19:34:23.324]                  <control if="pin <  8" while="" timeout="0" info="">
[19:34:23.324]                    // if-block "pin <  8"
[19:34:23.324]                      // =>  TRUE
[19:34:23.325]                    <block atomic="false" info="">
[19:34:23.325]                      pos = ((pin    ) & 7) * 4;
[19:34:23.325]                        // -> [pos <= 0x0000000C]
[19:34:23.325]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:34:23.325]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.326]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.326]                    </block>
[19:34:23.326]                    // end if-block "pin <  8"
[19:34:23.326]                  </control>
[19:34:23.326]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:34:23.327]                    // if-block "pin >= 8"
[19:34:23.327]                      // =>  FALSE
[19:34:23.327]                    // skip if-block "pin >= 8"
[19:34:23.327]                  </control>
[19:34:23.327]                </sequence>
[19:34:23.327]            </block>
[19:34:23.327]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:34:23.327]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:34:23.328]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:23.328]            </block>
[19:34:23.328]          </sequence>
[19:34:23.328]      </block>
[19:34:23.328]      // end if-block "traceSWO"
[19:34:23.328]    </control>
[19:34:23.329]    <control if="traceTPIU" while="" timeout="0" info="">
[19:34:23.329]      // if-block "traceTPIU"
[19:34:23.329]        // =>  FALSE
[19:34:23.329]      // skip if-block "traceTPIU"
[19:34:23.329]    </control>
[19:34:23.329]  </sequence>
[19:34:23.329]  
[19:34:28.639]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:34:28.639]  
[19:34:28.640]  <debugvars>
[19:34:28.640]    // Pre-defined
[19:34:28.640]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:34:28.640]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:34:28.641]    __dp=0x00000000
[19:34:28.641]    __ap=0x00000000
[19:34:28.641]    __traceout=0x00000001      (SWO Trace)
[19:34:28.641]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:34:28.641]    __FlashAddr=0x00000000
[19:34:28.641]    __FlashLen=0x00000000
[19:34:28.642]    __FlashArg=0x00000000
[19:34:28.642]    __FlashOp=0x00000000
[19:34:28.642]    __Result=0x00000000
[19:34:28.642]    
[19:34:28.642]    // User-defined
[19:34:28.642]    DbgMCU_CR=0x00000007
[19:34:28.642]    DbgMCU_APB1_Fz=0x00000000
[19:34:28.643]    DbgMCU_APB2_Fz=0x00000000
[19:34:28.643]    TraceClk_Pin=0x00040002
[19:34:28.643]    TraceD0_Pin=0x00040003
[19:34:28.643]    TraceD1_Pin=0x00040004
[19:34:28.643]    TraceD2_Pin=0x00040005
[19:34:28.643]    TraceD3_Pin=0x00040006
[19:34:28.644]  </debugvars>
[19:34:28.644]  
[19:34:28.644]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:34:28.644]    <block atomic="false" info="">
[19:34:28.644]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:34:28.645]        // -> [traceSWO <= 0x00000001]
[19:34:28.645]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:34:28.645]        // -> [traceTPIU <= 0x00000000]
[19:34:28.645]    </block>
[19:34:28.645]    <control if="traceSWO" while="" timeout="0" info="">
[19:34:28.645]      // if-block "traceSWO"
[19:34:28.645]        // =>  TRUE
[19:34:28.645]      <block atomic="false" info="">
[19:34:28.646]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:34:28.646]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:34:28.646]            <block atomic="false" info="">
[19:34:28.646]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:34:28.646]                // -> [dbgmcu_val <= 0x00000000]
[19:34:28.646]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:34:28.646]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:34:28.647]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:34:28.647]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.647]                // -> [dbgmcu_val <= 0x00000007]
[19:34:28.647]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:34:28.647]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:34:28.647]              Sequence("ConfigureTraceSWOPin");
[19:34:28.648]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:34:28.648]                  <block atomic="false" info="">
[19:34:28.648]                    __var pin     = 0;
[19:34:28.648]                      // -> [pin <= 0x00000000]
[19:34:28.648]                    __var port    = 0;
[19:34:28.648]                      // -> [port <= 0x00000000]
[19:34:28.648]                    __var portAdr = 0;
[19:34:28.648]                      // -> [portAdr <= 0x00000000]
[19:34:28.649]                    __var pos     = 0;
[19:34:28.649]                      // -> [pos <= 0x00000000]
[19:34:28.649]                    __var SWO_Pin = 0x00010003;          // PB3
[19:34:28.649]                      // -> [SWO_Pin <= 0x00010003]
[19:34:28.649]                  </block>
[19:34:28.649]                  <block atomic="false" info="configure SWO">
[19:34:28.649]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:34:28.649]                      // -> [pin <= 0x00000003]
[19:34:28.649]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:34:28.650]                      // -> [port <= 0x00000001]
[19:34:28.650]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:34:28.650]                      // -> [portAdr <= 0x40020400]
[19:34:28.650]                    pos = pin * 2;
[19:34:28.650]                      // -> [pos <= 0x00000006]
[19:34:28.650]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:34:28.650]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.651]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.651]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:34:28.651]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.652]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.652]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:34:28.652]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.653]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.653]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:34:28.653]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.654]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.654]                  </block>
[19:34:28.654]                  <control if="pin <  8" while="" timeout="0" info="">
[19:34:28.654]                    // if-block "pin <  8"
[19:34:28.654]                      // =>  TRUE
[19:34:28.654]                    <block atomic="false" info="">
[19:34:28.655]                      pos = ((pin    ) & 7) * 4;
[19:34:28.655]                        // -> [pos <= 0x0000000C]
[19:34:28.655]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:34:28.655]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.656]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.656]                    </block>
[19:34:28.656]                    // end if-block "pin <  8"
[19:34:28.656]                  </control>
[19:34:28.656]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:34:28.656]                    // if-block "pin >= 8"
[19:34:28.656]                      // =>  FALSE
[19:34:28.657]                    // skip if-block "pin >= 8"
[19:34:28.657]                  </control>
[19:34:28.657]                </sequence>
[19:34:28.657]            </block>
[19:34:28.657]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:34:28.657]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:34:28.658]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:34:28.658]            </block>
[19:34:28.658]          </sequence>
[19:34:28.658]      </block>
[19:34:28.658]      // end if-block "traceSWO"
[19:34:28.658]    </control>
[19:34:28.658]    <control if="traceTPIU" while="" timeout="0" info="">
[19:34:28.658]      // if-block "traceTPIU"
[19:34:28.659]        // =>  FALSE
[19:34:28.659]      // skip if-block "traceTPIU"
[19:34:28.659]    </control>
[19:34:28.659]  </sequence>
[19:34:28.659]  
[19:36:09.193]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:36:09.193]  
[19:36:09.193]  <debugvars>
[19:36:09.193]    // Pre-defined
[19:36:09.193]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:36:09.194]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:36:09.194]    __dp=0x00000000
[19:36:09.194]    __ap=0x00000000
[19:36:09.194]    __traceout=0x00000001      (SWO Trace)
[19:36:09.194]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:36:09.194]    __FlashAddr=0x00000000
[19:36:09.195]    __FlashLen=0x00000000
[19:36:09.195]    __FlashArg=0x00000000
[19:36:09.195]    __FlashOp=0x00000000
[19:36:09.195]    __Result=0x00000000
[19:36:09.195]    
[19:36:09.195]    // User-defined
[19:36:09.195]    DbgMCU_CR=0x00000007
[19:36:09.196]    DbgMCU_APB1_Fz=0x00000000
[19:36:09.196]    DbgMCU_APB2_Fz=0x00000000
[19:36:09.196]    TraceClk_Pin=0x00040002
[19:36:09.196]    TraceD0_Pin=0x00040003
[19:36:09.196]    TraceD1_Pin=0x00040004
[19:36:09.196]    TraceD2_Pin=0x00040005
[19:36:09.197]    TraceD3_Pin=0x00040006
[19:36:09.197]  </debugvars>
[19:36:09.197]  
[19:36:09.197]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:36:09.197]    <block atomic="false" info="">
[19:36:09.197]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:36:09.198]        // -> [traceSWO <= 0x00000001]
[19:36:09.198]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:36:09.198]        // -> [traceTPIU <= 0x00000000]
[19:36:09.198]    </block>
[19:36:09.198]    <control if="traceSWO" while="" timeout="0" info="">
[19:36:09.198]      // if-block "traceSWO"
[19:36:09.199]        // =>  TRUE
[19:36:09.199]      <block atomic="false" info="">
[19:36:09.199]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:36:09.199]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:36:09.199]            <block atomic="false" info="">
[19:36:09.199]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:36:09.199]                // -> [dbgmcu_val <= 0x00000000]
[19:36:09.199]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:36:09.200]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:36:09.200]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:36:09.200]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.200]                // -> [dbgmcu_val <= 0x00000007]
[19:36:09.200]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:36:09.201]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:36:09.201]              Sequence("ConfigureTraceSWOPin");
[19:36:09.201]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:36:09.201]                  <block atomic="false" info="">
[19:36:09.201]                    __var pin     = 0;
[19:36:09.201]                      // -> [pin <= 0x00000000]
[19:36:09.201]                    __var port    = 0;
[19:36:09.201]                      // -> [port <= 0x00000000]
[19:36:09.202]                    __var portAdr = 0;
[19:36:09.202]                      // -> [portAdr <= 0x00000000]
[19:36:09.202]                    __var pos     = 0;
[19:36:09.202]                      // -> [pos <= 0x00000000]
[19:36:09.202]                    __var SWO_Pin = 0x00010003;          // PB3
[19:36:09.202]                      // -> [SWO_Pin <= 0x00010003]
[19:36:09.202]                  </block>
[19:36:09.202]                  <block atomic="false" info="configure SWO">
[19:36:09.202]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:36:09.203]                      // -> [pin <= 0x00000003]
[19:36:09.203]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:36:09.203]                      // -> [port <= 0x00000001]
[19:36:09.203]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:36:09.203]                      // -> [portAdr <= 0x40020400]
[19:36:09.203]                    pos = pin * 2;
[19:36:09.203]                      // -> [pos <= 0x00000006]
[19:36:09.203]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:36:09.204]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.204]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.204]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:36:09.205]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.205]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.205]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:36:09.206]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.206]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.206]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:36:09.207]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.207]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.207]                  </block>
[19:36:09.207]                  <control if="pin <  8" while="" timeout="0" info="">
[19:36:09.207]                    // if-block "pin <  8"
[19:36:09.208]                      // =>  TRUE
[19:36:09.208]                    <block atomic="false" info="">
[19:36:09.208]                      pos = ((pin    ) & 7) * 4;
[19:36:09.208]                        // -> [pos <= 0x0000000C]
[19:36:09.208]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:36:09.209]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.209]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.209]                    </block>
[19:36:09.209]                    // end if-block "pin <  8"
[19:36:09.209]                  </control>
[19:36:09.209]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:36:09.210]                    // if-block "pin >= 8"
[19:36:09.210]                      // =>  FALSE
[19:36:09.210]                    // skip if-block "pin >= 8"
[19:36:09.210]                  </control>
[19:36:09.210]                </sequence>
[19:36:09.210]            </block>
[19:36:09.210]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:36:09.210]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:36:09.211]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:09.211]            </block>
[19:36:09.211]          </sequence>
[19:36:09.211]      </block>
[19:36:09.211]      // end if-block "traceSWO"
[19:36:09.211]    </control>
[19:36:09.211]    <control if="traceTPIU" while="" timeout="0" info="">
[19:36:09.211]      // if-block "traceTPIU"
[19:36:09.212]        // =>  FALSE
[19:36:09.212]      // skip if-block "traceTPIU"
[19:36:09.212]    </control>
[19:36:09.212]  </sequence>
[19:36:09.212]  
[19:37:16.077]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:37:16.077]  
[19:37:16.077]  <debugvars>
[19:37:16.077]    // Pre-defined
[19:37:16.077]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:37:16.077]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:37:16.078]    __dp=0x00000000
[19:37:16.078]    __ap=0x00000000
[19:37:16.078]    __traceout=0x00000001      (SWO Trace)
[19:37:16.078]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:37:16.078]    __FlashAddr=0x00000000
[19:37:16.078]    __FlashLen=0x00000000
[19:37:16.079]    __FlashArg=0x00000000
[19:37:16.079]    __FlashOp=0x00000000
[19:37:16.079]    __Result=0x00000000
[19:37:16.079]    
[19:37:16.079]    // User-defined
[19:37:16.079]    DbgMCU_CR=0x00000007
[19:37:16.080]    DbgMCU_APB1_Fz=0x00000000
[19:37:16.080]    DbgMCU_APB2_Fz=0x00000000
[19:37:16.080]    TraceClk_Pin=0x00040002
[19:37:16.080]    TraceD0_Pin=0x00040003
[19:37:16.080]    TraceD1_Pin=0x00040004
[19:37:16.080]    TraceD2_Pin=0x00040005
[19:37:16.081]    TraceD3_Pin=0x00040006
[19:37:16.081]  </debugvars>
[19:37:16.081]  
[19:37:16.081]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:37:16.081]    <block atomic="false" info="">
[19:37:16.081]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:37:16.082]        // -> [traceSWO <= 0x00000001]
[19:37:16.082]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:37:16.082]        // -> [traceTPIU <= 0x00000000]
[19:37:16.082]    </block>
[19:37:16.082]    <control if="traceSWO" while="" timeout="0" info="">
[19:37:16.083]      // if-block "traceSWO"
[19:37:16.083]        // =>  TRUE
[19:37:16.083]      <block atomic="false" info="">
[19:37:16.083]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:37:16.083]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:37:16.083]            <block atomic="false" info="">
[19:37:16.083]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:37:16.084]                // -> [dbgmcu_val <= 0x00000000]
[19:37:16.084]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:37:16.084]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:37:16.084]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:37:16.085]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.085]                // -> [dbgmcu_val <= 0x00000007]
[19:37:16.085]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:37:16.085]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:37:16.085]              Sequence("ConfigureTraceSWOPin");
[19:37:16.086]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:37:16.086]                  <block atomic="false" info="">
[19:37:16.086]                    __var pin     = 0;
[19:37:16.086]                      // -> [pin <= 0x00000000]
[19:37:16.086]                    __var port    = 0;
[19:37:16.086]                      // -> [port <= 0x00000000]
[19:37:16.087]                    __var portAdr = 0;
[19:37:16.087]                      // -> [portAdr <= 0x00000000]
[19:37:16.087]                    __var pos     = 0;
[19:37:16.087]                      // -> [pos <= 0x00000000]
[19:37:16.087]                    __var SWO_Pin = 0x00010003;          // PB3
[19:37:16.087]                      // -> [SWO_Pin <= 0x00010003]
[19:37:16.087]                  </block>
[19:37:16.088]                  <block atomic="false" info="configure SWO">
[19:37:16.088]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:37:16.088]                      // -> [pin <= 0x00000003]
[19:37:16.088]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:37:16.088]                      // -> [port <= 0x00000001]
[19:37:16.089]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:37:16.089]                      // -> [portAdr <= 0x40020400]
[19:37:16.089]                    pos = pin * 2;
[19:37:16.089]                      // -> [pos <= 0x00000006]
[19:37:16.089]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:37:16.090]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.090]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.090]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:37:16.091]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.091]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.092]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:37:16.092]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.093]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.093]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:37:16.093]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.094]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.094]                  </block>
[19:37:16.094]                  <control if="pin <  8" while="" timeout="0" info="">
[19:37:16.094]                    // if-block "pin <  8"
[19:37:16.094]                      // =>  TRUE
[19:37:16.094]                    <block atomic="false" info="">
[19:37:16.095]                      pos = ((pin    ) & 7) * 4;
[19:37:16.095]                        // -> [pos <= 0x0000000C]
[19:37:16.095]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:37:16.095]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.096]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.096]                    </block>
[19:37:16.096]                    // end if-block "pin <  8"
[19:37:16.096]                  </control>
[19:37:16.097]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:37:16.097]                    // if-block "pin >= 8"
[19:37:16.097]                      // =>  FALSE
[19:37:16.097]                    // skip if-block "pin >= 8"
[19:37:16.097]                  </control>
[19:37:16.097]                </sequence>
[19:37:16.097]            </block>
[19:37:16.098]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:37:16.098]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:37:16.098]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:16.098]            </block>
[19:37:16.098]          </sequence>
[19:37:16.099]      </block>
[19:37:16.099]      // end if-block "traceSWO"
[19:37:16.099]    </control>
[19:37:16.099]    <control if="traceTPIU" while="" timeout="0" info="">
[19:37:16.099]      // if-block "traceTPIU"
[19:37:16.099]        // =>  FALSE
[19:37:16.100]      // skip if-block "traceTPIU"
[19:37:16.100]    </control>
[19:37:16.100]  </sequence>
[19:37:16.100]  
[19:39:30.747]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:39:30.747]  
[19:39:30.747]  <debugvars>
[19:39:30.747]    // Pre-defined
[19:39:30.747]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:30.747]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:39:30.748]    __dp=0x00000000
[19:39:30.748]    __ap=0x00000000
[19:39:30.748]    __traceout=0x00000001      (SWO Trace)
[19:39:30.748]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:30.748]    __FlashAddr=0x00000000
[19:39:30.748]    __FlashLen=0x00000000
[19:39:30.749]    __FlashArg=0x00000000
[19:39:30.749]    __FlashOp=0x00000000
[19:39:30.749]    __Result=0x00000000
[19:39:30.749]    
[19:39:30.749]    // User-defined
[19:39:30.749]    DbgMCU_CR=0x00000007
[19:39:30.750]    DbgMCU_APB1_Fz=0x00000000
[19:39:30.750]    DbgMCU_APB2_Fz=0x00000000
[19:39:30.750]    TraceClk_Pin=0x00040002
[19:39:30.750]    TraceD0_Pin=0x00040003
[19:39:30.750]    TraceD1_Pin=0x00040004
[19:39:30.750]    TraceD2_Pin=0x00040005
[19:39:30.750]    TraceD3_Pin=0x00040006
[19:39:30.751]  </debugvars>
[19:39:30.751]  
[19:39:30.751]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:39:30.751]    <block atomic="false" info="">
[19:39:30.751]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:39:30.751]        // -> [traceSWO <= 0x00000001]
[19:39:30.751]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:39:30.752]        // -> [traceTPIU <= 0x00000000]
[19:39:30.752]    </block>
[19:39:30.752]    <control if="traceSWO" while="" timeout="0" info="">
[19:39:30.752]      // if-block "traceSWO"
[19:39:30.752]        // =>  TRUE
[19:39:30.753]      <block atomic="false" info="">
[19:39:30.753]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:39:30.753]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:39:30.753]            <block atomic="false" info="">
[19:39:30.753]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:39:30.753]                // -> [dbgmcu_val <= 0x00000000]
[19:39:30.753]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:39:30.754]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:39:30.754]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:39:30.754]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.754]                // -> [dbgmcu_val <= 0x00000007]
[19:39:30.754]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:39:30.754]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:39:30.755]              Sequence("ConfigureTraceSWOPin");
[19:39:30.755]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:39:30.755]                  <block atomic="false" info="">
[19:39:30.755]                    __var pin     = 0;
[19:39:30.755]                      // -> [pin <= 0x00000000]
[19:39:30.755]                    __var port    = 0;
[19:39:30.755]                      // -> [port <= 0x00000000]
[19:39:30.756]                    __var portAdr = 0;
[19:39:30.756]                      // -> [portAdr <= 0x00000000]
[19:39:30.756]                    __var pos     = 0;
[19:39:30.756]                      // -> [pos <= 0x00000000]
[19:39:30.756]                    __var SWO_Pin = 0x00010003;          // PB3
[19:39:30.756]                      // -> [SWO_Pin <= 0x00010003]
[19:39:30.756]                  </block>
[19:39:30.756]                  <block atomic="false" info="configure SWO">
[19:39:30.756]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:39:30.757]                      // -> [pin <= 0x00000003]
[19:39:30.757]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:39:30.757]                      // -> [port <= 0x00000001]
[19:39:30.757]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:39:30.757]                      // -> [portAdr <= 0x40020400]
[19:39:30.757]                    pos = pin * 2;
[19:39:30.757]                      // -> [pos <= 0x00000006]
[19:39:30.757]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:39:30.758]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.758]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.759]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:39:30.759]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.760]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.760]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:39:30.760]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.761]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.761]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:39:30.761]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.762]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.762]                  </block>
[19:39:30.762]                  <control if="pin <  8" while="" timeout="0" info="">
[19:39:30.762]                    // if-block "pin <  8"
[19:39:30.762]                      // =>  TRUE
[19:39:30.762]                    <block atomic="false" info="">
[19:39:30.762]                      pos = ((pin    ) & 7) * 4;
[19:39:30.762]                        // -> [pos <= 0x0000000C]
[19:39:30.763]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:39:30.763]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.763]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.764]                    </block>
[19:39:30.764]                    // end if-block "pin <  8"
[19:39:30.764]                  </control>
[19:39:30.764]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:39:30.764]                    // if-block "pin >= 8"
[19:39:30.764]                      // =>  FALSE
[19:39:30.764]                    // skip if-block "pin >= 8"
[19:39:30.764]                  </control>
[19:39:30.765]                </sequence>
[19:39:30.765]            </block>
[19:39:30.765]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:39:30.765]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:39:30.765]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:30.766]            </block>
[19:39:30.766]          </sequence>
[19:39:30.766]      </block>
[19:39:30.766]      // end if-block "traceSWO"
[19:39:30.766]    </control>
[19:39:30.766]    <control if="traceTPIU" while="" timeout="0" info="">
[19:39:30.766]      // if-block "traceTPIU"
[19:39:30.766]        // =>  FALSE
[19:39:30.767]      // skip if-block "traceTPIU"
[19:39:30.767]    </control>
[19:39:30.767]  </sequence>
[19:39:30.767]  
[19:45:01.405]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:45:01.405]  
[19:45:01.405]  <debugvars>
[19:45:01.405]    // Pre-defined
[19:45:01.405]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:45:01.406]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:45:01.406]    __dp=0x00000000
[19:45:01.406]    __ap=0x00000000
[19:45:01.406]    __traceout=0x00000001      (SWO Trace)
[19:45:01.406]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:45:01.407]    __FlashAddr=0x00000000
[19:45:01.407]    __FlashLen=0x00000000
[19:45:01.407]    __FlashArg=0x00000000
[19:45:01.407]    __FlashOp=0x00000000
[19:45:01.407]    __Result=0x00000000
[19:45:01.408]    
[19:45:01.408]    // User-defined
[19:45:01.408]    DbgMCU_CR=0x00000007
[19:45:01.408]    DbgMCU_APB1_Fz=0x00000000
[19:45:01.408]    DbgMCU_APB2_Fz=0x00000000
[19:45:01.409]    TraceClk_Pin=0x00040002
[19:45:01.409]    TraceD0_Pin=0x00040003
[19:45:01.409]    TraceD1_Pin=0x00040004
[19:45:01.409]    TraceD2_Pin=0x00040005
[19:45:01.410]    TraceD3_Pin=0x00040006
[19:45:01.410]  </debugvars>
[19:45:01.410]  
[19:45:01.410]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:45:01.410]    <block atomic="false" info="">
[19:45:01.411]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:45:01.411]        // -> [traceSWO <= 0x00000001]
[19:45:01.411]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:45:01.411]        // -> [traceTPIU <= 0x00000000]
[19:45:01.411]    </block>
[19:45:01.412]    <control if="traceSWO" while="" timeout="0" info="">
[19:45:01.412]      // if-block "traceSWO"
[19:45:01.412]        // =>  TRUE
[19:45:01.412]      <block atomic="false" info="">
[19:45:01.413]        Sequence("DisableTraceSWO");
[19:45:01.413]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:45:01.413]            <block atomic="false" info="">
[19:45:01.413]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:45:01.413]                // -> [dbgmcu_val <= 0x00000000]
[19:45:01.414]            </block>
[19:45:01.414]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:45:01.414]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:45:01.414]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:45:01.415]                // -> [dbgmcu_val <= 0x00000007]
[19:45:01.415]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:45:01.415]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:01.415]            </block>
[19:45:01.416]          </sequence>
[19:45:01.416]      </block>
[19:45:01.416]      // end if-block "traceSWO"
[19:45:01.416]    </control>
[19:45:01.416]    <control if="traceTPIU" while="" timeout="0" info="">
[19:45:01.416]      // if-block "traceTPIU"
[19:45:01.416]        // =>  FALSE
[19:45:01.417]      // skip if-block "traceTPIU"
[19:45:01.417]    </control>
[19:45:01.417]  </sequence>
[19:45:01.417]  
[19:45:31.653]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:45:31.653]  
[19:45:31.654]  <debugvars>
[19:45:31.654]    // Pre-defined
[19:45:31.654]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:45:31.654]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:45:31.655]    __dp=0x00000000
[19:45:31.655]    __ap=0x00000000
[19:45:31.655]    __traceout=0x00000001      (SWO Trace)
[19:45:31.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:45:31.655]    __FlashAddr=0x00000000
[19:45:31.656]    __FlashLen=0x00000000
[19:45:31.656]    __FlashArg=0x00000000
[19:45:31.656]    __FlashOp=0x00000000
[19:45:31.656]    __Result=0x00000000
[19:45:31.656]    
[19:45:31.656]    // User-defined
[19:45:31.656]    DbgMCU_CR=0x00000007
[19:45:31.656]    DbgMCU_APB1_Fz=0x00000000
[19:45:31.657]    DbgMCU_APB2_Fz=0x00000000
[19:45:31.657]    TraceClk_Pin=0x00040002
[19:45:31.657]    TraceD0_Pin=0x00040003
[19:45:31.657]    TraceD1_Pin=0x00040004
[19:45:31.657]    TraceD2_Pin=0x00040005
[19:45:31.658]    TraceD3_Pin=0x00040006
[19:45:31.658]  </debugvars>
[19:45:31.658]  
[19:45:31.658]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:45:31.658]    <block atomic="false" info="">
[19:45:31.658]      Sequence("CheckID");
[19:45:31.658]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:45:31.659]          <block atomic="false" info="">
[19:45:31.659]            __var pidr1 = 0;
[19:45:31.659]              // -> [pidr1 <= 0x00000000]
[19:45:31.659]            __var pidr2 = 0;
[19:45:31.659]              // -> [pidr2 <= 0x00000000]
[19:45:31.659]            __var jep106id = 0;
[19:45:31.660]              // -> [jep106id <= 0x00000000]
[19:45:31.660]            __var ROMTableBase = 0;
[19:45:31.660]              // -> [ROMTableBase <= 0x00000000]
[19:45:31.660]            __ap = 0;      // AHB-AP
[19:45:31.660]              // -> [__ap <= 0x00000000]
[19:45:31.661]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:45:31.661]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.661]              // -> [ROMTableBase <= 0xE00FD000]
[19:45:31.661]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:45:31.662]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.662]              // -> [pidr1 <= 0x00000004]
[19:45:31.662]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:45:31.662]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.663]              // -> [pidr2 <= 0x0000001A]
[19:45:31.663]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:45:31.663]              // -> [jep106id <= 0x00000020]
[19:45:31.663]          </block>
[19:45:31.663]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:45:31.663]            // if-block "jep106id != 0x20"
[19:45:31.663]              // =>  FALSE
[19:45:31.664]            // skip if-block "jep106id != 0x20"
[19:45:31.664]          </control>
[19:45:31.664]        </sequence>
[19:45:31.664]    </block>
[19:45:31.664]  </sequence>
[19:45:31.664]  
[19:45:31.679]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:45:31.679]  
[19:45:31.679]  <debugvars>
[19:45:31.680]    // Pre-defined
[19:45:31.680]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:45:31.680]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:45:31.680]    __dp=0x00000000
[19:45:31.680]    __ap=0x00000000
[19:45:31.681]    __traceout=0x00000001      (SWO Trace)
[19:45:31.681]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:45:31.681]    __FlashAddr=0x00000000
[19:45:31.681]    __FlashLen=0x00000000
[19:45:31.681]    __FlashArg=0x00000000
[19:45:31.681]    __FlashOp=0x00000000
[19:45:31.681]    __Result=0x00000000
[19:45:31.682]    
[19:45:31.682]    // User-defined
[19:45:31.682]    DbgMCU_CR=0x00000007
[19:45:31.682]    DbgMCU_APB1_Fz=0x00000000
[19:45:31.682]    DbgMCU_APB2_Fz=0x00000000
[19:45:31.682]    TraceClk_Pin=0x00040002
[19:45:31.682]    TraceD0_Pin=0x00040003
[19:45:31.682]    TraceD1_Pin=0x00040004
[19:45:31.683]    TraceD2_Pin=0x00040005
[19:45:31.683]    TraceD3_Pin=0x00040006
[19:45:31.683]  </debugvars>
[19:45:31.683]  
[19:45:31.683]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:45:31.683]    <block atomic="false" info="">
[19:45:31.683]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:45:31.684]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.684]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:45:31.685]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.685]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:45:31.685]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.685]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:45:31.686]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:45:31.686]    </block>
[19:45:31.686]  </sequence>
[19:45:31.686]  
[19:46:02.531]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:46:02.531]  
[19:46:02.531]  <debugvars>
[19:46:02.531]    // Pre-defined
[19:46:02.531]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:02.531]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:46:02.532]    __dp=0x00000000
[19:46:02.532]    __ap=0x00000000
[19:46:02.532]    __traceout=0x00000001      (SWO Trace)
[19:46:02.532]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:02.532]    __FlashAddr=0x00000000
[19:46:02.532]    __FlashLen=0x00000000
[19:46:02.533]    __FlashArg=0x00000000
[19:46:02.533]    __FlashOp=0x00000000
[19:46:02.533]    __Result=0x00000000
[19:46:02.533]    
[19:46:02.533]    // User-defined
[19:46:02.533]    DbgMCU_CR=0x00000007
[19:46:02.534]    DbgMCU_APB1_Fz=0x00000000
[19:46:02.534]    DbgMCU_APB2_Fz=0x00000000
[19:46:02.534]    TraceClk_Pin=0x00040002
[19:46:02.534]    TraceD0_Pin=0x00040003
[19:46:02.534]    TraceD1_Pin=0x00040004
[19:46:02.534]    TraceD2_Pin=0x00040005
[19:46:02.534]    TraceD3_Pin=0x00040006
[19:46:02.534]  </debugvars>
[19:46:02.535]  
[19:46:02.535]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:46:02.535]    <block atomic="false" info="">
[19:46:02.535]      Sequence("CheckID");
[19:46:02.535]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:46:02.535]          <block atomic="false" info="">
[19:46:02.536]            __var pidr1 = 0;
[19:46:02.536]              // -> [pidr1 <= 0x00000000]
[19:46:02.536]            __var pidr2 = 0;
[19:46:02.536]              // -> [pidr2 <= 0x00000000]
[19:46:02.536]            __var jep106id = 0;
[19:46:02.536]              // -> [jep106id <= 0x00000000]
[19:46:02.536]            __var ROMTableBase = 0;
[19:46:02.537]              // -> [ROMTableBase <= 0x00000000]
[19:46:02.537]            __ap = 0;      // AHB-AP
[19:46:02.537]              // -> [__ap <= 0x00000000]
[19:46:02.537]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:46:02.537]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.537]              // -> [ROMTableBase <= 0xE00FD000]
[19:46:02.537]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:46:02.538]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.538]              // -> [pidr1 <= 0x00000004]
[19:46:02.538]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:46:02.539]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.539]              // -> [pidr2 <= 0x0000001A]
[19:46:02.539]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:46:02.539]              // -> [jep106id <= 0x00000020]
[19:46:02.539]          </block>
[19:46:02.539]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:46:02.539]            // if-block "jep106id != 0x20"
[19:46:02.540]              // =>  FALSE
[19:46:02.540]            // skip if-block "jep106id != 0x20"
[19:46:02.540]          </control>
[19:46:02.540]        </sequence>
[19:46:02.540]    </block>
[19:46:02.540]  </sequence>
[19:46:02.540]  
[19:46:02.554]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:46:02.554]  
[19:46:02.554]  <debugvars>
[19:46:02.555]    // Pre-defined
[19:46:02.555]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:02.555]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:46:02.555]    __dp=0x00000000
[19:46:02.555]    __ap=0x00000000
[19:46:02.555]    __traceout=0x00000001      (SWO Trace)
[19:46:02.555]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:02.555]    __FlashAddr=0x00000000
[19:46:02.556]    __FlashLen=0x00000000
[19:46:02.556]    __FlashArg=0x00000000
[19:46:02.556]    __FlashOp=0x00000000
[19:46:02.556]    __Result=0x00000000
[19:46:02.556]    
[19:46:02.556]    // User-defined
[19:46:02.556]    DbgMCU_CR=0x00000007
[19:46:02.556]    DbgMCU_APB1_Fz=0x00000000
[19:46:02.557]    DbgMCU_APB2_Fz=0x00000000
[19:46:02.557]    TraceClk_Pin=0x00040002
[19:46:02.557]    TraceD0_Pin=0x00040003
[19:46:02.557]    TraceD1_Pin=0x00040004
[19:46:02.557]    TraceD2_Pin=0x00040005
[19:46:02.557]    TraceD3_Pin=0x00040006
[19:46:02.557]  </debugvars>
[19:46:02.557]  
[19:46:02.557]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:46:02.558]    <block atomic="false" info="">
[19:46:02.558]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:46:02.558]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.558]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:46:02.559]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.559]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:46:02.560]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.560]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:46:02.560]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.560]    </block>
[19:46:02.560]  </sequence>
[19:46:02.561]  
[19:46:02.577]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:46:02.577]  
[19:46:02.577]  <debugvars>
[19:46:02.577]    // Pre-defined
[19:46:02.577]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:02.578]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:46:02.578]    __dp=0x00000000
[19:46:02.578]    __ap=0x00000000
[19:46:02.578]    __traceout=0x00000001      (SWO Trace)
[19:46:02.578]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:02.578]    __FlashAddr=0x00000000
[19:46:02.579]    __FlashLen=0x00000000
[19:46:02.579]    __FlashArg=0x00000000
[19:46:02.579]    __FlashOp=0x00000000
[19:46:02.579]    __Result=0x00000000
[19:46:02.579]    
[19:46:02.579]    // User-defined
[19:46:02.579]    DbgMCU_CR=0x00000007
[19:46:02.580]    DbgMCU_APB1_Fz=0x00000000
[19:46:02.580]    DbgMCU_APB2_Fz=0x00000000
[19:46:02.580]    TraceClk_Pin=0x00040002
[19:46:02.580]    TraceD0_Pin=0x00040003
[19:46:02.580]    TraceD1_Pin=0x00040004
[19:46:02.580]    TraceD2_Pin=0x00040005
[19:46:02.581]    TraceD3_Pin=0x00040006
[19:46:02.581]  </debugvars>
[19:46:02.581]  
[19:46:02.581]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:46:02.581]    <block atomic="false" info="">
[19:46:02.581]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:46:02.581]        // -> [traceSWO <= 0x00000001]
[19:46:02.582]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:46:02.582]        // -> [traceTPIU <= 0x00000000]
[19:46:02.582]    </block>
[19:46:02.582]    <control if="traceSWO" while="" timeout="0" info="">
[19:46:02.582]      // if-block "traceSWO"
[19:46:02.582]        // =>  TRUE
[19:46:02.582]      <block atomic="false" info="">
[19:46:02.582]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:46:02.583]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:46:02.583]            <block atomic="false" info="">
[19:46:02.583]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:46:02.583]                // -> [dbgmcu_val <= 0x00000000]
[19:46:02.583]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:46:02.583]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:46:02.583]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:46:02.584]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.584]                // -> [dbgmcu_val <= 0x00000007]
[19:46:02.584]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:46:02.584]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:46:02.584]              Sequence("ConfigureTraceSWOPin");
[19:46:02.584]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:46:02.585]                  <block atomic="false" info="">
[19:46:02.585]                    __var pin     = 0;
[19:46:02.585]                      // -> [pin <= 0x00000000]
[19:46:02.585]                    __var port    = 0;
[19:46:02.585]                      // -> [port <= 0x00000000]
[19:46:02.585]                    __var portAdr = 0;
[19:46:02.585]                      // -> [portAdr <= 0x00000000]
[19:46:02.586]                    __var pos     = 0;
[19:46:02.586]                      // -> [pos <= 0x00000000]
[19:46:02.586]                    __var SWO_Pin = 0x00010003;          // PB3
[19:46:02.586]                      // -> [SWO_Pin <= 0x00010003]
[19:46:02.586]                  </block>
[19:46:02.586]                  <block atomic="false" info="configure SWO">
[19:46:02.586]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:46:02.587]                      // -> [pin <= 0x00000003]
[19:46:02.587]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:46:02.587]                      // -> [port <= 0x00000001]
[19:46:02.587]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:46:02.587]                      // -> [portAdr <= 0x40020400]
[19:46:02.587]                    pos = pin * 2;
[19:46:02.587]                      // -> [pos <= 0x00000006]
[19:46:02.587]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:46:02.588]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.588]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.589]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:46:02.589]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.589]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.589]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:46:02.590]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.590]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.590]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:46:02.591]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.591]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.591]                  </block>
[19:46:02.592]                  <control if="pin <  8" while="" timeout="0" info="">
[19:46:02.592]                    // if-block "pin <  8"
[19:46:02.592]                      // =>  TRUE
[19:46:02.592]                    <block atomic="false" info="">
[19:46:02.592]                      pos = ((pin    ) & 7) * 4;
[19:46:02.592]                        // -> [pos <= 0x0000000C]
[19:46:02.592]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:46:02.593]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.593]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.593]                    </block>
[19:46:02.593]                    // end if-block "pin <  8"
[19:46:02.593]                  </control>
[19:46:02.594]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:46:02.594]                    // if-block "pin >= 8"
[19:46:02.594]                      // =>  FALSE
[19:46:02.594]                    // skip if-block "pin >= 8"
[19:46:02.594]                  </control>
[19:46:02.594]                </sequence>
[19:46:02.594]            </block>
[19:46:02.594]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:46:02.595]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:46:02.595]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.595]            </block>
[19:46:02.595]          </sequence>
[19:46:02.595]      </block>
[19:46:02.596]      // end if-block "traceSWO"
[19:46:02.596]    </control>
[19:46:02.596]    <control if="traceTPIU" while="" timeout="0" info="">
[19:46:02.596]      // if-block "traceTPIU"
[19:46:02.596]        // =>  FALSE
[19:46:02.596]      // skip if-block "traceTPIU"
[19:46:02.597]    </control>
[19:46:02.597]  </sequence>
[19:46:02.597]  
[19:46:02.601]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:46:02.601]  
[19:46:02.601]  <debugvars>
[19:46:02.601]    // Pre-defined
[19:46:02.601]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:02.601]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:46:02.601]    __dp=0x00000000
[19:46:02.601]    __ap=0x00000000
[19:46:02.601]    __traceout=0x00000001      (SWO Trace)
[19:46:02.602]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:02.602]    __FlashAddr=0x00000000
[19:46:02.602]    __FlashLen=0x00000000
[19:46:02.602]    __FlashArg=0x00000000
[19:46:02.602]    __FlashOp=0x00000000
[19:46:02.602]    __Result=0x00000000
[19:46:02.603]    
[19:46:02.603]    // User-defined
[19:46:02.603]    DbgMCU_CR=0x00000007
[19:46:02.603]    DbgMCU_APB1_Fz=0x00000000
[19:46:02.603]    DbgMCU_APB2_Fz=0x00000000
[19:46:02.603]    TraceClk_Pin=0x00040002
[19:46:02.603]    TraceD0_Pin=0x00040003
[19:46:02.603]    TraceD1_Pin=0x00040004
[19:46:02.604]    TraceD2_Pin=0x00040005
[19:46:02.604]    TraceD3_Pin=0x00040006
[19:46:02.604]  </debugvars>
[19:46:02.604]  
[19:46:02.604]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:46:02.604]    <block atomic="false" info="">
[19:46:02.604]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:46:02.604]        // -> [traceSWO <= 0x00000001]
[19:46:02.605]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:46:02.605]        // -> [traceTPIU <= 0x00000000]
[19:46:02.605]    </block>
[19:46:02.605]    <control if="traceSWO" while="" timeout="0" info="">
[19:46:02.605]      // if-block "traceSWO"
[19:46:02.605]        // =>  TRUE
[19:46:02.605]      <block atomic="false" info="">
[19:46:02.606]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:46:02.606]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:46:02.606]            <block atomic="false" info="">
[19:46:02.606]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:46:02.606]                // -> [dbgmcu_val <= 0x00000000]
[19:46:02.606]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:46:02.606]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:46:02.606]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:46:02.607]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.607]                // -> [dbgmcu_val <= 0x00000007]
[19:46:02.607]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:46:02.607]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:46:02.607]              Sequence("ConfigureTraceSWOPin");
[19:46:02.608]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:46:02.608]                  <block atomic="false" info="">
[19:46:02.608]                    __var pin     = 0;
[19:46:02.608]                      // -> [pin <= 0x00000000]
[19:46:02.608]                    __var port    = 0;
[19:46:02.608]                      // -> [port <= 0x00000000]
[19:46:02.608]                    __var portAdr = 0;
[19:46:02.608]                      // -> [portAdr <= 0x00000000]
[19:46:02.609]                    __var pos     = 0;
[19:46:02.609]                      // -> [pos <= 0x00000000]
[19:46:02.609]                    __var SWO_Pin = 0x00010003;          // PB3
[19:46:02.609]                      // -> [SWO_Pin <= 0x00010003]
[19:46:02.609]                  </block>
[19:46:02.609]                  <block atomic="false" info="configure SWO">
[19:46:02.610]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:46:02.610]                      // -> [pin <= 0x00000003]
[19:46:02.610]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:46:02.610]                      // -> [port <= 0x00000001]
[19:46:02.610]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:46:02.610]                      // -> [portAdr <= 0x40020400]
[19:46:02.610]                    pos = pin * 2;
[19:46:02.610]                      // -> [pos <= 0x00000006]
[19:46:02.610]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:46:02.611]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.611]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.611]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:46:02.612]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.612]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.612]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:46:02.613]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.613]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.613]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:46:02.614]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.614]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.615]                  </block>
[19:46:02.615]                  <control if="pin <  8" while="" timeout="0" info="">
[19:46:02.615]                    // if-block "pin <  8"
[19:46:02.615]                      // =>  TRUE
[19:46:02.615]                    <block atomic="false" info="">
[19:46:02.615]                      pos = ((pin    ) & 7) * 4;
[19:46:02.615]                        // -> [pos <= 0x0000000C]
[19:46:02.615]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:46:02.616]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.616]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.616]                    </block>
[19:46:02.617]                    // end if-block "pin <  8"
[19:46:02.617]                  </control>
[19:46:02.617]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:46:02.617]                    // if-block "pin >= 8"
[19:46:02.617]                      // =>  FALSE
[19:46:02.617]                    // skip if-block "pin >= 8"
[19:46:02.617]                  </control>
[19:46:02.617]                </sequence>
[19:46:02.618]            </block>
[19:46:02.618]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:46:02.618]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:46:02.618]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.618]            </block>
[19:46:02.619]          </sequence>
[19:46:02.619]      </block>
[19:46:02.619]      // end if-block "traceSWO"
[19:46:02.619]    </control>
[19:46:02.619]    <control if="traceTPIU" while="" timeout="0" info="">
[19:46:02.619]      // if-block "traceTPIU"
[19:46:02.619]        // =>  FALSE
[19:46:02.619]      // skip if-block "traceTPIU"
[19:46:02.620]    </control>
[19:46:02.620]  </sequence>
[19:46:02.620]  
[19:46:02.832]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:46:02.832]  
[19:46:02.832]  <debugvars>
[19:46:02.833]    // Pre-defined
[19:46:02.833]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:02.833]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:46:02.833]    __dp=0x00000000
[19:46:02.833]    __ap=0x00000000
[19:46:02.833]    __traceout=0x00000001      (SWO Trace)
[19:46:02.833]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:02.833]    __FlashAddr=0x00000000
[19:46:02.834]    __FlashLen=0x00000000
[19:46:02.834]    __FlashArg=0x00000000
[19:46:02.834]    __FlashOp=0x00000000
[19:46:02.834]    __Result=0x00000000
[19:46:02.834]    
[19:46:02.834]    // User-defined
[19:46:02.834]    DbgMCU_CR=0x00000007
[19:46:02.834]    DbgMCU_APB1_Fz=0x00000000
[19:46:02.835]    DbgMCU_APB2_Fz=0x00000000
[19:46:02.835]    TraceClk_Pin=0x00040002
[19:46:02.835]    TraceD0_Pin=0x00040003
[19:46:02.835]    TraceD1_Pin=0x00040004
[19:46:02.835]    TraceD2_Pin=0x00040005
[19:46:02.835]    TraceD3_Pin=0x00040006
[19:46:02.835]  </debugvars>
[19:46:02.835]  
[19:46:02.836]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:46:02.836]    <block atomic="false" info="">
[19:46:02.836]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:46:02.836]        // -> [traceSWO <= 0x00000001]
[19:46:02.836]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:46:02.836]        // -> [traceTPIU <= 0x00000000]
[19:46:02.836]    </block>
[19:46:02.836]    <control if="traceSWO" while="" timeout="0" info="">
[19:46:02.837]      // if-block "traceSWO"
[19:46:02.837]        // =>  TRUE
[19:46:02.837]      <block atomic="false" info="">
[19:46:02.837]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:46:02.837]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:46:02.837]            <block atomic="false" info="">
[19:46:02.837]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:46:02.838]                // -> [dbgmcu_val <= 0x00000000]
[19:46:02.838]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:46:02.838]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:46:02.838]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:46:02.838]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.838]                // -> [dbgmcu_val <= 0x00000007]
[19:46:02.839]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:46:02.839]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:46:02.839]              Sequence("ConfigureTraceSWOPin");
[19:46:02.839]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:46:02.839]                  <block atomic="false" info="">
[19:46:02.839]                    __var pin     = 0;
[19:46:02.839]                      // -> [pin <= 0x00000000]
[19:46:02.840]                    __var port    = 0;
[19:46:02.840]                      // -> [port <= 0x00000000]
[19:46:02.840]                    __var portAdr = 0;
[19:46:02.840]                      // -> [portAdr <= 0x00000000]
[19:46:02.840]                    __var pos     = 0;
[19:46:02.840]                      // -> [pos <= 0x00000000]
[19:46:02.840]                    __var SWO_Pin = 0x00010003;          // PB3
[19:46:02.840]                      // -> [SWO_Pin <= 0x00010003]
[19:46:02.840]                  </block>
[19:46:02.841]                  <block atomic="false" info="configure SWO">
[19:46:02.841]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:46:02.841]                      // -> [pin <= 0x00000003]
[19:46:02.841]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:46:02.841]                      // -> [port <= 0x00000001]
[19:46:02.841]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:46:02.841]                      // -> [portAdr <= 0x40020400]
[19:46:02.842]                    pos = pin * 2;
[19:46:02.842]                      // -> [pos <= 0x00000006]
[19:46:02.842]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:46:02.842]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.843]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.843]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:46:02.843]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.844]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.844]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:46:02.844]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.845]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.845]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:46:02.845]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.846]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.846]                  </block>
[19:46:02.846]                  <control if="pin <  8" while="" timeout="0" info="">
[19:46:02.846]                    // if-block "pin <  8"
[19:46:02.846]                      // =>  TRUE
[19:46:02.846]                    <block atomic="false" info="">
[19:46:02.846]                      pos = ((pin    ) & 7) * 4;
[19:46:02.847]                        // -> [pos <= 0x0000000C]
[19:46:02.847]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:46:02.847]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.848]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.848]                    </block>
[19:46:02.848]                    // end if-block "pin <  8"
[19:46:02.848]                  </control>
[19:46:02.848]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:46:02.848]                    // if-block "pin >= 8"
[19:46:02.848]                      // =>  FALSE
[19:46:02.849]                    // skip if-block "pin >= 8"
[19:46:02.849]                  </control>
[19:46:02.849]                </sequence>
[19:46:02.849]            </block>
[19:46:02.849]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:46:02.849]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:46:02.850]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:02.850]            </block>
[19:46:02.850]          </sequence>
[19:46:02.850]      </block>
[19:46:02.850]      // end if-block "traceSWO"
[19:46:02.850]    </control>
[19:46:02.851]    <control if="traceTPIU" while="" timeout="0" info="">
[19:46:02.851]      // if-block "traceTPIU"
[19:46:02.851]        // =>  FALSE
[19:46:02.851]      // skip if-block "traceTPIU"
[19:46:02.851]    </control>
[19:46:02.851]  </sequence>
[19:46:02.851]  
[19:46:06.094]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:46:06.094]  
[19:46:06.094]  <debugvars>
[19:46:06.095]    // Pre-defined
[19:46:06.095]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:46:06.095]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:46:06.096]    __dp=0x00000000
[19:46:06.096]    __ap=0x00000000
[19:46:06.096]    __traceout=0x00000001      (SWO Trace)
[19:46:06.097]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:46:06.097]    __FlashAddr=0x00000000
[19:46:06.097]    __FlashLen=0x00000000
[19:46:06.098]    __FlashArg=0x00000000
[19:46:06.098]    __FlashOp=0x00000000
[19:46:06.098]    __Result=0x00000000
[19:46:06.099]    
[19:46:06.099]    // User-defined
[19:46:06.099]    DbgMCU_CR=0x00000007
[19:46:06.099]    DbgMCU_APB1_Fz=0x00000000
[19:46:06.100]    DbgMCU_APB2_Fz=0x00000000
[19:46:06.100]    TraceClk_Pin=0x00040002
[19:46:06.100]    TraceD0_Pin=0x00040003
[19:46:06.101]    TraceD1_Pin=0x00040004
[19:46:06.101]    TraceD2_Pin=0x00040005
[19:46:06.101]    TraceD3_Pin=0x00040006
[19:46:06.102]  </debugvars>
[19:46:06.102]  
[19:46:06.102]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:46:06.102]    <block atomic="false" info="">
[19:46:06.103]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:46:06.103]        // -> [traceSWO <= 0x00000001]
[19:46:06.103]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:46:06.103]        // -> [traceTPIU <= 0x00000000]
[19:46:06.104]    </block>
[19:46:06.104]    <control if="traceSWO" while="" timeout="0" info="">
[19:46:06.104]      // if-block "traceSWO"
[19:46:06.104]        // =>  TRUE
[19:46:06.104]      <block atomic="false" info="">
[19:46:06.105]        Sequence("DisableTraceSWO");
[19:46:06.105]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:46:06.105]            <block atomic="false" info="">
[19:46:06.105]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:46:06.106]                // -> [dbgmcu_val <= 0x00000000]
[19:46:06.106]            </block>
[19:46:06.106]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:46:06.106]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:46:06.107]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:46:06.107]                // -> [dbgmcu_val <= 0x00000007]
[19:46:06.107]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:46:06.108]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:46:06.108]            </block>
[19:46:06.108]          </sequence>
[19:46:06.108]      </block>
[19:46:06.109]      // end if-block "traceSWO"
[19:46:06.109]    </control>
[19:46:06.109]    <control if="traceTPIU" while="" timeout="0" info="">
[19:46:06.109]      // if-block "traceTPIU"
[19:46:06.109]        // =>  FALSE
[19:46:06.110]      // skip if-block "traceTPIU"
[19:46:06.110]    </control>
[19:46:06.110]  </sequence>
[19:46:06.110]  
[19:47:40.667]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:47:40.667]  
[19:47:40.668]  <debugvars>
[19:47:40.668]    // Pre-defined
[19:47:40.668]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:47:40.668]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:47:40.668]    __dp=0x00000000
[19:47:40.669]    __ap=0x00000000
[19:47:40.669]    __traceout=0x00000001      (SWO Trace)
[19:47:40.669]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:47:40.669]    __FlashAddr=0x00000000
[19:47:40.669]    __FlashLen=0x00000000
[19:47:40.670]    __FlashArg=0x00000000
[19:47:40.670]    __FlashOp=0x00000000
[19:47:40.670]    __Result=0x00000000
[19:47:40.670]    
[19:47:40.670]    // User-defined
[19:47:40.671]    DbgMCU_CR=0x00000007
[19:47:40.671]    DbgMCU_APB1_Fz=0x00000000
[19:47:40.671]    DbgMCU_APB2_Fz=0x00000000
[19:47:40.671]    TraceClk_Pin=0x00040002
[19:47:40.671]    TraceD0_Pin=0x00040003
[19:47:40.671]    TraceD1_Pin=0x00040004
[19:47:40.671]    TraceD2_Pin=0x00040005
[19:47:40.671]    TraceD3_Pin=0x00040006
[19:47:40.672]  </debugvars>
[19:47:40.672]  
[19:47:40.672]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:47:40.672]    <block atomic="false" info="">
[19:47:40.672]      Sequence("CheckID");
[19:47:40.672]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:47:40.673]          <block atomic="false" info="">
[19:47:40.673]            __var pidr1 = 0;
[19:47:40.673]              // -> [pidr1 <= 0x00000000]
[19:47:40.673]            __var pidr2 = 0;
[19:47:40.673]              // -> [pidr2 <= 0x00000000]
[19:47:40.673]            __var jep106id = 0;
[19:47:40.674]              // -> [jep106id <= 0x00000000]
[19:47:40.674]            __var ROMTableBase = 0;
[19:47:40.674]              // -> [ROMTableBase <= 0x00000000]
[19:47:40.674]            __ap = 0;      // AHB-AP
[19:47:40.674]              // -> [__ap <= 0x00000000]
[19:47:40.674]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:47:40.675]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.675]              // -> [ROMTableBase <= 0xE00FD000]
[19:47:40.675]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:47:40.676]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.676]              // -> [pidr1 <= 0x00000004]
[19:47:40.676]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:47:40.677]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.677]              // -> [pidr2 <= 0x0000001A]
[19:47:40.677]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:47:40.677]              // -> [jep106id <= 0x00000020]
[19:47:40.677]          </block>
[19:47:40.677]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:47:40.677]            // if-block "jep106id != 0x20"
[19:47:40.678]              // =>  FALSE
[19:47:40.678]            // skip if-block "jep106id != 0x20"
[19:47:40.678]          </control>
[19:47:40.678]        </sequence>
[19:47:40.678]    </block>
[19:47:40.678]  </sequence>
[19:47:40.678]  
[19:47:40.694]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:47:40.694]  
[19:47:40.694]  <debugvars>
[19:47:40.694]    // Pre-defined
[19:47:40.694]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:47:40.695]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:47:40.695]    __dp=0x00000000
[19:47:40.695]    __ap=0x00000000
[19:47:40.695]    __traceout=0x00000001      (SWO Trace)
[19:47:40.696]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:47:40.696]    __FlashAddr=0x00000000
[19:47:40.696]    __FlashLen=0x00000000
[19:47:40.696]    __FlashArg=0x00000000
[19:47:40.696]    __FlashOp=0x00000000
[19:47:40.697]    __Result=0x00000000
[19:47:40.697]    
[19:47:40.697]    // User-defined
[19:47:40.697]    DbgMCU_CR=0x00000007
[19:47:40.697]    DbgMCU_APB1_Fz=0x00000000
[19:47:40.697]    DbgMCU_APB2_Fz=0x00000000
[19:47:40.698]    TraceClk_Pin=0x00040002
[19:47:40.698]    TraceD0_Pin=0x00040003
[19:47:40.698]    TraceD1_Pin=0x00040004
[19:47:40.698]    TraceD2_Pin=0x00040005
[19:47:40.698]    TraceD3_Pin=0x00040006
[19:47:40.699]  </debugvars>
[19:47:40.699]  
[19:47:40.699]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:47:40.699]    <block atomic="false" info="">
[19:47:40.699]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:47:40.700]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.700]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:47:40.701]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.701]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:47:40.702]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.702]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:47:40.702]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:47:40.703]    </block>
[19:47:40.703]  </sequence>
[19:47:40.703]  
[19:48:11.701]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:48:11.701]  
[19:48:11.702]  <debugvars>
[19:48:11.702]    // Pre-defined
[19:48:11.702]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:48:11.703]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:48:11.703]    __dp=0x00000000
[19:48:11.703]    __ap=0x00000000
[19:48:11.703]    __traceout=0x00000001      (SWO Trace)
[19:48:11.704]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:48:11.704]    __FlashAddr=0x00000000
[19:48:11.704]    __FlashLen=0x00000000
[19:48:11.704]    __FlashArg=0x00000000
[19:48:11.704]    __FlashOp=0x00000000
[19:48:11.704]    __Result=0x00000000
[19:48:11.705]    
[19:48:11.705]    // User-defined
[19:48:11.705]    DbgMCU_CR=0x00000007
[19:48:11.705]    DbgMCU_APB1_Fz=0x00000000
[19:48:11.705]    DbgMCU_APB2_Fz=0x00000000
[19:48:11.705]    TraceClk_Pin=0x00040002
[19:48:11.706]    TraceD0_Pin=0x00040003
[19:48:11.706]    TraceD1_Pin=0x00040004
[19:48:11.706]    TraceD2_Pin=0x00040005
[19:48:11.706]    TraceD3_Pin=0x00040006
[19:48:11.706]  </debugvars>
[19:48:11.706]  
[19:48:11.706]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:48:11.707]    <block atomic="false" info="">
[19:48:11.707]      Sequence("CheckID");
[19:48:11.707]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:48:11.707]          <block atomic="false" info="">
[19:48:11.707]            __var pidr1 = 0;
[19:48:11.708]              // -> [pidr1 <= 0x00000000]
[19:48:11.708]            __var pidr2 = 0;
[19:48:11.708]              // -> [pidr2 <= 0x00000000]
[19:48:11.708]            __var jep106id = 0;
[19:48:11.708]              // -> [jep106id <= 0x00000000]
[19:48:11.708]            __var ROMTableBase = 0;
[19:48:11.708]              // -> [ROMTableBase <= 0x00000000]
[19:48:11.709]            __ap = 0;      // AHB-AP
[19:48:11.709]              // -> [__ap <= 0x00000000]
[19:48:11.709]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:48:11.709]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.710]              // -> [ROMTableBase <= 0xE00FD000]
[19:48:11.710]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:48:11.710]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.710]              // -> [pidr1 <= 0x00000004]
[19:48:11.711]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:48:11.711]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.711]              // -> [pidr2 <= 0x0000001A]
[19:48:11.711]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:48:11.711]              // -> [jep106id <= 0x00000020]
[19:48:11.712]          </block>
[19:48:11.712]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:48:11.712]            // if-block "jep106id != 0x20"
[19:48:11.712]              // =>  FALSE
[19:48:11.712]            // skip if-block "jep106id != 0x20"
[19:48:11.712]          </control>
[19:48:11.712]        </sequence>
[19:48:11.712]    </block>
[19:48:11.713]  </sequence>
[19:48:11.713]  
[19:48:11.727]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:48:11.727]  
[19:48:11.727]  <debugvars>
[19:48:11.728]    // Pre-defined
[19:48:11.728]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:48:11.728]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:48:11.728]    __dp=0x00000000
[19:48:11.728]    __ap=0x00000000
[19:48:11.728]    __traceout=0x00000001      (SWO Trace)
[19:48:11.729]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:48:11.729]    __FlashAddr=0x00000000
[19:48:11.729]    __FlashLen=0x00000000
[19:48:11.729]    __FlashArg=0x00000000
[19:48:11.729]    __FlashOp=0x00000000
[19:48:11.730]    __Result=0x00000000
[19:48:11.730]    
[19:48:11.730]    // User-defined
[19:48:11.730]    DbgMCU_CR=0x00000007
[19:48:11.730]    DbgMCU_APB1_Fz=0x00000000
[19:48:11.730]    DbgMCU_APB2_Fz=0x00000000
[19:48:11.730]    TraceClk_Pin=0x00040002
[19:48:11.731]    TraceD0_Pin=0x00040003
[19:48:11.731]    TraceD1_Pin=0x00040004
[19:48:11.731]    TraceD2_Pin=0x00040005
[19:48:11.731]    TraceD3_Pin=0x00040006
[19:48:11.731]  </debugvars>
[19:48:11.731]  
[19:48:11.732]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:48:11.732]    <block atomic="false" info="">
[19:48:11.732]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:48:11.733]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.733]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:48:11.733]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.733]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:48:11.734]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.734]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:48:11.735]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.735]    </block>
[19:48:11.735]  </sequence>
[19:48:11.735]  
[19:48:11.751]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:48:11.751]  
[19:48:11.752]  <debugvars>
[19:48:11.752]    // Pre-defined
[19:48:11.752]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:48:11.752]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:48:11.752]    __dp=0x00000000
[19:48:11.752]    __ap=0x00000000
[19:48:11.753]    __traceout=0x00000001      (SWO Trace)
[19:48:11.753]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:48:11.753]    __FlashAddr=0x00000000
[19:48:11.753]    __FlashLen=0x00000000
[19:48:11.753]    __FlashArg=0x00000000
[19:48:11.754]    __FlashOp=0x00000000
[19:48:11.754]    __Result=0x00000000
[19:48:11.754]    
[19:48:11.754]    // User-defined
[19:48:11.754]    DbgMCU_CR=0x00000007
[19:48:11.754]    DbgMCU_APB1_Fz=0x00000000
[19:48:11.754]    DbgMCU_APB2_Fz=0x00000000
[19:48:11.755]    TraceClk_Pin=0x00040002
[19:48:11.755]    TraceD0_Pin=0x00040003
[19:48:11.755]    TraceD1_Pin=0x00040004
[19:48:11.755]    TraceD2_Pin=0x00040005
[19:48:11.755]    TraceD3_Pin=0x00040006
[19:48:11.756]  </debugvars>
[19:48:11.756]  
[19:48:11.756]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:48:11.756]    <block atomic="false" info="">
[19:48:11.756]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:48:11.757]        // -> [traceSWO <= 0x00000001]
[19:48:11.757]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:48:11.757]        // -> [traceTPIU <= 0x00000000]
[19:48:11.757]    </block>
[19:48:11.757]    <control if="traceSWO" while="" timeout="0" info="">
[19:48:11.758]      // if-block "traceSWO"
[19:48:11.758]        // =>  TRUE
[19:48:11.758]      <block atomic="false" info="">
[19:48:11.758]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:48:11.758]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:48:11.758]            <block atomic="false" info="">
[19:48:11.759]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:48:11.759]                // -> [dbgmcu_val <= 0x00000000]
[19:48:11.759]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:48:11.759]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:48:11.759]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:48:11.760]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.760]                // -> [dbgmcu_val <= 0x00000007]
[19:48:11.760]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:48:11.760]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:48:11.760]              Sequence("ConfigureTraceSWOPin");
[19:48:11.760]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:48:11.761]                  <block atomic="false" info="">
[19:48:11.761]                    __var pin     = 0;
[19:48:11.761]                      // -> [pin <= 0x00000000]
[19:48:11.761]                    __var port    = 0;
[19:48:11.761]                      // -> [port <= 0x00000000]
[19:48:11.761]                    __var portAdr = 0;
[19:48:11.761]                      // -> [portAdr <= 0x00000000]
[19:48:11.762]                    __var pos     = 0;
[19:48:11.762]                      // -> [pos <= 0x00000000]
[19:48:11.762]                    __var SWO_Pin = 0x00010003;          // PB3
[19:48:11.762]                      // -> [SWO_Pin <= 0x00010003]
[19:48:11.762]                  </block>
[19:48:11.762]                  <block atomic="false" info="configure SWO">
[19:48:11.762]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:48:11.763]                      // -> [pin <= 0x00000003]
[19:48:11.763]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:48:11.763]                      // -> [port <= 0x00000001]
[19:48:11.763]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:48:11.763]                      // -> [portAdr <= 0x40020400]
[19:48:11.763]                    pos = pin * 2;
[19:48:11.763]                      // -> [pos <= 0x00000006]
[19:48:11.763]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:48:11.764]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.764]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.764]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:48:11.765]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.766]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.766]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:48:11.766]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.767]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.767]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:48:11.767]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.768]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.768]                  </block>
[19:48:11.768]                  <control if="pin <  8" while="" timeout="0" info="">
[19:48:11.768]                    // if-block "pin <  8"
[19:48:11.768]                      // =>  TRUE
[19:48:11.768]                    <block atomic="false" info="">
[19:48:11.769]                      pos = ((pin    ) & 7) * 4;
[19:48:11.769]                        // -> [pos <= 0x0000000C]
[19:48:11.769]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:48:11.769]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.770]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.770]                    </block>
[19:48:11.770]                    // end if-block "pin <  8"
[19:48:11.770]                  </control>
[19:48:11.770]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:48:11.771]                    // if-block "pin >= 8"
[19:48:11.771]                      // =>  FALSE
[19:48:11.771]                    // skip if-block "pin >= 8"
[19:48:11.771]                  </control>
[19:48:11.771]                </sequence>
[19:48:11.771]            </block>
[19:48:11.771]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:48:11.771]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:48:11.772]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.772]            </block>
[19:48:11.772]          </sequence>
[19:48:11.772]      </block>
[19:48:11.772]      // end if-block "traceSWO"
[19:48:11.773]    </control>
[19:48:11.773]    <control if="traceTPIU" while="" timeout="0" info="">
[19:48:11.774]      // if-block "traceTPIU"
[19:48:11.774]        // =>  FALSE
[19:48:11.774]      // skip if-block "traceTPIU"
[19:48:11.774]    </control>
[19:48:11.774]  </sequence>
[19:48:11.774]  
[19:48:11.777]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:48:11.777]  
[19:48:11.777]  <debugvars>
[19:48:11.778]    // Pre-defined
[19:48:11.778]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:48:11.778]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:48:11.778]    __dp=0x00000000
[19:48:11.778]    __ap=0x00000000
[19:48:11.779]    __traceout=0x00000001      (SWO Trace)
[19:48:11.779]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:48:11.779]    __FlashAddr=0x00000000
[19:48:11.779]    __FlashLen=0x00000000
[19:48:11.779]    __FlashArg=0x00000000
[19:48:11.779]    __FlashOp=0x00000000
[19:48:11.780]    __Result=0x00000000
[19:48:11.780]    
[19:48:11.780]    // User-defined
[19:48:11.780]    DbgMCU_CR=0x00000007
[19:48:11.780]    DbgMCU_APB1_Fz=0x00000000
[19:48:11.780]    DbgMCU_APB2_Fz=0x00000000
[19:48:11.780]    TraceClk_Pin=0x00040002
[19:48:11.781]    TraceD0_Pin=0x00040003
[19:48:11.781]    TraceD1_Pin=0x00040004
[19:48:11.781]    TraceD2_Pin=0x00040005
[19:48:11.781]    TraceD3_Pin=0x00040006
[19:48:11.781]  </debugvars>
[19:48:11.781]  
[19:48:11.782]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:48:11.782]    <block atomic="false" info="">
[19:48:11.782]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:48:11.782]        // -> [traceSWO <= 0x00000001]
[19:48:11.782]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:48:11.782]        // -> [traceTPIU <= 0x00000000]
[19:48:11.782]    </block>
[19:48:11.783]    <control if="traceSWO" while="" timeout="0" info="">
[19:48:11.783]      // if-block "traceSWO"
[19:48:11.783]        // =>  TRUE
[19:48:11.783]      <block atomic="false" info="">
[19:48:11.783]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:48:11.783]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:48:11.783]            <block atomic="false" info="">
[19:48:11.784]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:48:11.784]                // -> [dbgmcu_val <= 0x00000000]
[19:48:11.784]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:48:11.784]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:48:11.784]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:48:11.785]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.785]                // -> [dbgmcu_val <= 0x00000007]
[19:48:11.785]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:48:11.785]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:48:11.785]              Sequence("ConfigureTraceSWOPin");
[19:48:11.785]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:48:11.786]                  <block atomic="false" info="">
[19:48:11.786]                    __var pin     = 0;
[19:48:11.786]                      // -> [pin <= 0x00000000]
[19:48:11.786]                    __var port    = 0;
[19:48:11.786]                      // -> [port <= 0x00000000]
[19:48:11.786]                    __var portAdr = 0;
[19:48:11.786]                      // -> [portAdr <= 0x00000000]
[19:48:11.787]                    __var pos     = 0;
[19:48:11.787]                      // -> [pos <= 0x00000000]
[19:48:11.787]                    __var SWO_Pin = 0x00010003;          // PB3
[19:48:11.787]                      // -> [SWO_Pin <= 0x00010003]
[19:48:11.787]                  </block>
[19:48:11.787]                  <block atomic="false" info="configure SWO">
[19:48:11.787]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:48:11.788]                      // -> [pin <= 0x00000003]
[19:48:11.788]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:48:11.788]                      // -> [port <= 0x00000001]
[19:48:11.788]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:48:11.788]                      // -> [portAdr <= 0x40020400]
[19:48:11.788]                    pos = pin * 2;
[19:48:11.788]                      // -> [pos <= 0x00000006]
[19:48:11.788]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:48:11.789]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.789]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.789]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:48:11.790]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.790]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.790]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:48:11.791]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.791]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.791]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:48:11.792]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.792]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.792]                  </block>
[19:48:11.793]                  <control if="pin <  8" while="" timeout="0" info="">
[19:48:11.793]                    // if-block "pin <  8"
[19:48:11.793]                      // =>  TRUE
[19:48:11.793]                    <block atomic="false" info="">
[19:48:11.793]                      pos = ((pin    ) & 7) * 4;
[19:48:11.793]                        // -> [pos <= 0x0000000C]
[19:48:11.793]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:48:11.794]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.794]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.794]                    </block>
[19:48:11.795]                    // end if-block "pin <  8"
[19:48:11.795]                  </control>
[19:48:11.795]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:48:11.795]                    // if-block "pin >= 8"
[19:48:11.795]                      // =>  FALSE
[19:48:11.795]                    // skip if-block "pin >= 8"
[19:48:11.795]                  </control>
[19:48:11.795]                </sequence>
[19:48:11.796]            </block>
[19:48:11.796]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:48:11.796]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:48:11.796]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:11.796]            </block>
[19:48:11.797]          </sequence>
[19:48:11.797]      </block>
[19:48:11.797]      // end if-block "traceSWO"
[19:48:11.797]    </control>
[19:48:11.797]    <control if="traceTPIU" while="" timeout="0" info="">
[19:48:11.797]      // if-block "traceTPIU"
[19:48:11.797]        // =>  FALSE
[19:48:11.797]      // skip if-block "traceTPIU"
[19:48:11.798]    </control>
[19:48:11.798]  </sequence>
[19:48:11.798]  
[19:48:12.011]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:48:12.011]  
[19:48:12.011]  <debugvars>
[19:48:12.011]    // Pre-defined
[19:48:12.012]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:48:12.012]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:48:12.012]    __dp=0x00000000
[19:48:12.012]    __ap=0x00000000
[19:48:12.012]    __traceout=0x00000001      (SWO Trace)
[19:48:12.012]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:48:12.013]    __FlashAddr=0x00000000
[19:48:12.013]    __FlashLen=0x00000000
[19:48:12.013]    __FlashArg=0x00000000
[19:48:12.013]    __FlashOp=0x00000000
[19:48:12.013]    __Result=0x00000000
[19:48:12.014]    
[19:48:12.014]    // User-defined
[19:48:12.014]    DbgMCU_CR=0x00000007
[19:48:12.014]    DbgMCU_APB1_Fz=0x00000000
[19:48:12.014]    DbgMCU_APB2_Fz=0x00000000
[19:48:12.014]    TraceClk_Pin=0x00040002
[19:48:12.014]    TraceD0_Pin=0x00040003
[19:48:12.015]    TraceD1_Pin=0x00040004
[19:48:12.015]    TraceD2_Pin=0x00040005
[19:48:12.015]    TraceD3_Pin=0x00040006
[19:48:12.015]  </debugvars>
[19:48:12.015]  
[19:48:12.016]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:48:12.016]    <block atomic="false" info="">
[19:48:12.016]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:48:12.016]        // -> [traceSWO <= 0x00000001]
[19:48:12.016]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:48:12.016]        // -> [traceTPIU <= 0x00000000]
[19:48:12.017]    </block>
[19:48:12.017]    <control if="traceSWO" while="" timeout="0" info="">
[19:48:12.017]      // if-block "traceSWO"
[19:48:12.017]        // =>  TRUE
[19:48:12.017]      <block atomic="false" info="">
[19:48:12.017]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:48:12.018]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:48:12.018]            <block atomic="false" info="">
[19:48:12.018]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:48:12.018]                // -> [dbgmcu_val <= 0x00000000]
[19:48:12.018]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:48:12.018]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:48:12.018]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:48:12.019]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.019]                // -> [dbgmcu_val <= 0x00000007]
[19:48:12.019]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:48:12.020]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:48:12.020]              Sequence("ConfigureTraceSWOPin");
[19:48:12.020]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:48:12.020]                  <block atomic="false" info="">
[19:48:12.020]                    __var pin     = 0;
[19:48:12.020]                      // -> [pin <= 0x00000000]
[19:48:12.021]                    __var port    = 0;
[19:48:12.021]                      // -> [port <= 0x00000000]
[19:48:12.021]                    __var portAdr = 0;
[19:48:12.021]                      // -> [portAdr <= 0x00000000]
[19:48:12.021]                    __var pos     = 0;
[19:48:12.021]                      // -> [pos <= 0x00000000]
[19:48:12.021]                    __var SWO_Pin = 0x00010003;          // PB3
[19:48:12.022]                      // -> [SWO_Pin <= 0x00010003]
[19:48:12.022]                  </block>
[19:48:12.022]                  <block atomic="false" info="configure SWO">
[19:48:12.022]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:48:12.022]                      // -> [pin <= 0x00000003]
[19:48:12.022]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:48:12.022]                      // -> [port <= 0x00000001]
[19:48:12.022]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:48:12.022]                      // -> [portAdr <= 0x40020400]
[19:48:12.023]                    pos = pin * 2;
[19:48:12.023]                      // -> [pos <= 0x00000006]
[19:48:12.023]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:48:12.023]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.024]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.024]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:48:12.024]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.025]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.025]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:48:12.025]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.026]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.026]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:48:12.026]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.027]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.027]                  </block>
[19:48:12.027]                  <control if="pin <  8" while="" timeout="0" info="">
[19:48:12.027]                    // if-block "pin <  8"
[19:48:12.027]                      // =>  TRUE
[19:48:12.027]                    <block atomic="false" info="">
[19:48:12.028]                      pos = ((pin    ) & 7) * 4;
[19:48:12.028]                        // -> [pos <= 0x0000000C]
[19:48:12.028]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:48:12.028]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.029]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.029]                    </block>
[19:48:12.029]                    // end if-block "pin <  8"
[19:48:12.029]                  </control>
[19:48:12.029]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:48:12.029]                    // if-block "pin >= 8"
[19:48:12.029]                      // =>  FALSE
[19:48:12.030]                    // skip if-block "pin >= 8"
[19:48:12.030]                  </control>
[19:48:12.030]                </sequence>
[19:48:12.030]            </block>
[19:48:12.030]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:48:12.030]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:48:12.031]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:12.031]            </block>
[19:48:12.031]          </sequence>
[19:48:12.031]      </block>
[19:48:12.031]      // end if-block "traceSWO"
[19:48:12.031]    </control>
[19:48:12.031]    <control if="traceTPIU" while="" timeout="0" info="">
[19:48:12.031]      // if-block "traceTPIU"
[19:48:12.032]        // =>  FALSE
[19:48:12.032]      // skip if-block "traceTPIU"
[19:48:12.032]    </control>
[19:48:12.032]  </sequence>
[19:48:12.032]  
[19:48:16.349]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:48:16.349]  
[19:48:16.451]  <debugvars>
[19:48:16.451]    // Pre-defined
[19:48:16.452]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:48:16.452]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:48:16.453]    __dp=0x00000000
[19:48:16.453]    __ap=0x00000000
[19:48:16.453]    __traceout=0x00000001      (SWO Trace)
[19:48:16.454]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:48:16.454]    __FlashAddr=0x00000000
[19:48:16.455]    __FlashLen=0x00000000
[19:48:16.455]    __FlashArg=0x00000000
[19:48:16.455]    __FlashOp=0x00000000
[19:48:16.456]    __Result=0x00000000
[19:48:16.456]    
[19:48:16.456]    // User-defined
[19:48:16.457]    DbgMCU_CR=0x00000007
[19:48:16.457]    DbgMCU_APB1_Fz=0x00000000
[19:48:16.457]    DbgMCU_APB2_Fz=0x00000000
[19:48:16.458]    TraceClk_Pin=0x00040002
[19:48:16.458]    TraceD0_Pin=0x00040003
[19:48:16.458]    TraceD1_Pin=0x00040004
[19:48:16.458]    TraceD2_Pin=0x00040005
[19:48:16.458]    TraceD3_Pin=0x00040006
[19:48:16.459]  </debugvars>
[19:48:16.459]  
[19:48:16.459]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:48:16.459]    <block atomic="false" info="">
[19:48:16.460]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:48:16.460]        // -> [traceSWO <= 0x00000001]
[19:48:16.460]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:48:16.460]        // -> [traceTPIU <= 0x00000000]
[19:48:16.461]    </block>
[19:48:16.461]    <control if="traceSWO" while="" timeout="0" info="">
[19:48:16.461]      // if-block "traceSWO"
[19:48:16.461]        // =>  TRUE
[19:48:16.461]      <block atomic="false" info="">
[19:48:16.462]        Sequence("DisableTraceSWO");
[19:48:16.462]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:48:16.462]            <block atomic="false" info="">
[19:48:16.462]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:48:16.462]                // -> [dbgmcu_val <= 0x00000000]
[19:48:16.462]            </block>
[19:48:16.462]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:48:16.463]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:48:16.463]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:48:16.463]                // -> [dbgmcu_val <= 0x00000007]
[19:48:16.463]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:48:16.464]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:48:16.464]            </block>
[19:48:16.464]          </sequence>
[19:48:16.464]      </block>
[19:48:16.464]      // end if-block "traceSWO"
[19:48:16.465]    </control>
[19:48:16.465]    <control if="traceTPIU" while="" timeout="0" info="">
[19:48:16.465]      // if-block "traceTPIU"
[19:48:16.465]        // =>  FALSE
[19:48:16.465]      // skip if-block "traceTPIU"
[19:48:16.466]    </control>
[19:48:16.466]  </sequence>
[19:48:16.466]  
[19:49:04.779]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:49:04.779]  
[19:49:04.779]  <debugvars>
[19:49:04.779]    // Pre-defined
[19:49:04.779]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:04.779]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:49:04.780]    __dp=0x00000000
[19:49:04.780]    __ap=0x00000000
[19:49:04.780]    __traceout=0x00000001      (SWO Trace)
[19:49:04.780]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:04.780]    __FlashAddr=0x00000000
[19:49:04.780]    __FlashLen=0x00000000
[19:49:04.781]    __FlashArg=0x00000000
[19:49:04.781]    __FlashOp=0x00000000
[19:49:04.781]    __Result=0x00000000
[19:49:04.781]    
[19:49:04.781]    // User-defined
[19:49:04.781]    DbgMCU_CR=0x00000007
[19:49:04.782]    DbgMCU_APB1_Fz=0x00000000
[19:49:04.782]    DbgMCU_APB2_Fz=0x00000000
[19:49:04.782]    TraceClk_Pin=0x00040002
[19:49:04.782]    TraceD0_Pin=0x00040003
[19:49:04.782]    TraceD1_Pin=0x00040004
[19:49:04.782]    TraceD2_Pin=0x00040005
[19:49:04.783]    TraceD3_Pin=0x00040006
[19:49:04.783]  </debugvars>
[19:49:04.783]  
[19:49:04.783]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:49:04.783]    <block atomic="false" info="">
[19:49:04.784]      Sequence("CheckID");
[19:49:04.784]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:49:04.784]          <block atomic="false" info="">
[19:49:04.784]            __var pidr1 = 0;
[19:49:04.784]              // -> [pidr1 <= 0x00000000]
[19:49:04.784]            __var pidr2 = 0;
[19:49:04.784]              // -> [pidr2 <= 0x00000000]
[19:49:04.784]            __var jep106id = 0;
[19:49:04.785]              // -> [jep106id <= 0x00000000]
[19:49:04.785]            __var ROMTableBase = 0;
[19:49:04.785]              // -> [ROMTableBase <= 0x00000000]
[19:49:04.785]            __ap = 0;      // AHB-AP
[19:49:04.785]              // -> [__ap <= 0x00000000]
[19:49:04.785]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:49:04.786]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.786]              // -> [ROMTableBase <= 0xE00FD000]
[19:49:04.786]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:49:04.787]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.787]              // -> [pidr1 <= 0x00000004]
[19:49:04.787]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:49:04.787]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.787]              // -> [pidr2 <= 0x0000001A]
[19:49:04.787]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:49:04.788]              // -> [jep106id <= 0x00000020]
[19:49:04.788]          </block>
[19:49:04.788]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:49:04.788]            // if-block "jep106id != 0x20"
[19:49:04.788]              // =>  FALSE
[19:49:04.788]            // skip if-block "jep106id != 0x20"
[19:49:04.788]          </control>
[19:49:04.788]        </sequence>
[19:49:04.789]    </block>
[19:49:04.789]  </sequence>
[19:49:04.789]  
[19:49:04.804]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:49:04.804]  
[19:49:04.804]  <debugvars>
[19:49:04.804]    // Pre-defined
[19:49:04.804]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:04.804]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:49:04.805]    __dp=0x00000000
[19:49:04.805]    __ap=0x00000000
[19:49:04.805]    __traceout=0x00000001      (SWO Trace)
[19:49:04.805]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:04.805]    __FlashAddr=0x00000000
[19:49:04.805]    __FlashLen=0x00000000
[19:49:04.806]    __FlashArg=0x00000000
[19:49:04.806]    __FlashOp=0x00000000
[19:49:04.806]    __Result=0x00000000
[19:49:04.806]    
[19:49:04.806]    // User-defined
[19:49:04.806]    DbgMCU_CR=0x00000007
[19:49:04.807]    DbgMCU_APB1_Fz=0x00000000
[19:49:04.807]    DbgMCU_APB2_Fz=0x00000000
[19:49:04.807]    TraceClk_Pin=0x00040002
[19:49:04.807]    TraceD0_Pin=0x00040003
[19:49:04.807]    TraceD1_Pin=0x00040004
[19:49:04.807]    TraceD2_Pin=0x00040005
[19:49:04.808]    TraceD3_Pin=0x00040006
[19:49:04.808]  </debugvars>
[19:49:04.808]  
[19:49:04.808]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:49:04.808]    <block atomic="false" info="">
[19:49:04.809]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:49:04.809]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.809]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:49:04.810]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.810]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:49:04.810]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.811]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:49:04.811]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:04.811]    </block>
[19:49:04.811]  </sequence>
[19:49:04.812]  
[19:49:35.575]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:49:35.575]  
[19:49:35.576]  <debugvars>
[19:49:35.576]    // Pre-defined
[19:49:35.576]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:35.576]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:49:35.576]    __dp=0x00000000
[19:49:35.576]    __ap=0x00000000
[19:49:35.577]    __traceout=0x00000001      (SWO Trace)
[19:49:35.577]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:35.577]    __FlashAddr=0x00000000
[19:49:35.577]    __FlashLen=0x00000000
[19:49:35.577]    __FlashArg=0x00000000
[19:49:35.577]    __FlashOp=0x00000000
[19:49:35.577]    __Result=0x00000000
[19:49:35.578]    
[19:49:35.578]    // User-defined
[19:49:35.578]    DbgMCU_CR=0x00000007
[19:49:35.578]    DbgMCU_APB1_Fz=0x00000000
[19:49:35.578]    DbgMCU_APB2_Fz=0x00000000
[19:49:35.578]    TraceClk_Pin=0x00040002
[19:49:35.578]    TraceD0_Pin=0x00040003
[19:49:35.579]    TraceD1_Pin=0x00040004
[19:49:35.579]    TraceD2_Pin=0x00040005
[19:49:35.579]    TraceD3_Pin=0x00040006
[19:49:35.579]  </debugvars>
[19:49:35.579]  
[19:49:35.579]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:49:35.579]    <block atomic="false" info="">
[19:49:35.579]      Sequence("CheckID");
[19:49:35.579]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:49:35.580]          <block atomic="false" info="">
[19:49:35.580]            __var pidr1 = 0;
[19:49:35.580]              // -> [pidr1 <= 0x00000000]
[19:49:35.580]            __var pidr2 = 0;
[19:49:35.580]              // -> [pidr2 <= 0x00000000]
[19:49:35.580]            __var jep106id = 0;
[19:49:35.580]              // -> [jep106id <= 0x00000000]
[19:49:35.581]            __var ROMTableBase = 0;
[19:49:35.581]              // -> [ROMTableBase <= 0x00000000]
[19:49:35.581]            __ap = 0;      // AHB-AP
[19:49:35.581]              // -> [__ap <= 0x00000000]
[19:49:35.581]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:49:35.581]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.581]              // -> [ROMTableBase <= 0xE00FD000]
[19:49:35.581]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:49:35.582]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.582]              // -> [pidr1 <= 0x00000004]
[19:49:35.582]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:49:35.583]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.583]              // -> [pidr2 <= 0x0000001A]
[19:49:35.583]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:49:35.583]              // -> [jep106id <= 0x00000020]
[19:49:35.583]          </block>
[19:49:35.583]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:49:35.584]            // if-block "jep106id != 0x20"
[19:49:35.584]              // =>  FALSE
[19:49:35.584]            // skip if-block "jep106id != 0x20"
[19:49:35.584]          </control>
[19:49:35.584]        </sequence>
[19:49:35.584]    </block>
[19:49:35.584]  </sequence>
[19:49:35.584]  
[19:49:35.599]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:49:35.599]  
[19:49:35.600]  <debugvars>
[19:49:35.600]    // Pre-defined
[19:49:35.600]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:35.600]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:49:35.600]    __dp=0x00000000
[19:49:35.601]    __ap=0x00000000
[19:49:35.601]    __traceout=0x00000001      (SWO Trace)
[19:49:35.601]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:35.601]    __FlashAddr=0x00000000
[19:49:35.601]    __FlashLen=0x00000000
[19:49:35.601]    __FlashArg=0x00000000
[19:49:35.602]    __FlashOp=0x00000000
[19:49:35.602]    __Result=0x00000000
[19:49:35.602]    
[19:49:35.602]    // User-defined
[19:49:35.602]    DbgMCU_CR=0x00000007
[19:49:35.602]    DbgMCU_APB1_Fz=0x00000000
[19:49:35.602]    DbgMCU_APB2_Fz=0x00000000
[19:49:35.602]    TraceClk_Pin=0x00040002
[19:49:35.603]    TraceD0_Pin=0x00040003
[19:49:35.603]    TraceD1_Pin=0x00040004
[19:49:35.603]    TraceD2_Pin=0x00040005
[19:49:35.603]    TraceD3_Pin=0x00040006
[19:49:35.603]  </debugvars>
[19:49:35.603]  
[19:49:35.603]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:49:35.603]    <block atomic="false" info="">
[19:49:35.603]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:49:35.604]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.604]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:49:35.605]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.605]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:49:35.605]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.606]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:49:35.606]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.606]    </block>
[19:49:35.606]  </sequence>
[19:49:35.607]  
[19:49:35.623]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:49:35.623]  
[19:49:35.624]  <debugvars>
[19:49:35.624]    // Pre-defined
[19:49:35.624]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:35.624]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:49:35.624]    __dp=0x00000000
[19:49:35.625]    __ap=0x00000000
[19:49:35.625]    __traceout=0x00000001      (SWO Trace)
[19:49:35.625]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:35.625]    __FlashAddr=0x00000000
[19:49:35.625]    __FlashLen=0x00000000
[19:49:35.625]    __FlashArg=0x00000000
[19:49:35.626]    __FlashOp=0x00000000
[19:49:35.626]    __Result=0x00000000
[19:49:35.626]    
[19:49:35.626]    // User-defined
[19:49:35.626]    DbgMCU_CR=0x00000007
[19:49:35.626]    DbgMCU_APB1_Fz=0x00000000
[19:49:35.626]    DbgMCU_APB2_Fz=0x00000000
[19:49:35.626]    TraceClk_Pin=0x00040002
[19:49:35.626]    TraceD0_Pin=0x00040003
[19:49:35.627]    TraceD1_Pin=0x00040004
[19:49:35.627]    TraceD2_Pin=0x00040005
[19:49:35.627]    TraceD3_Pin=0x00040006
[19:49:35.627]  </debugvars>
[19:49:35.627]  
[19:49:35.627]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:49:35.628]    <block atomic="false" info="">
[19:49:35.628]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:49:35.628]        // -> [traceSWO <= 0x00000001]
[19:49:35.628]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:49:35.628]        // -> [traceTPIU <= 0x00000000]
[19:49:35.628]    </block>
[19:49:35.628]    <control if="traceSWO" while="" timeout="0" info="">
[19:49:35.628]      // if-block "traceSWO"
[19:49:35.628]        // =>  TRUE
[19:49:35.629]      <block atomic="false" info="">
[19:49:35.629]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:49:35.629]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:49:35.629]            <block atomic="false" info="">
[19:49:35.629]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:49:35.629]                // -> [dbgmcu_val <= 0x00000000]
[19:49:35.629]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:49:35.630]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:49:35.630]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:49:35.630]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.630]                // -> [dbgmcu_val <= 0x00000007]
[19:49:35.630]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:49:35.631]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:49:35.631]              Sequence("ConfigureTraceSWOPin");
[19:49:35.631]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:49:35.631]                  <block atomic="false" info="">
[19:49:35.631]                    __var pin     = 0;
[19:49:35.631]                      // -> [pin <= 0x00000000]
[19:49:35.631]                    __var port    = 0;
[19:49:35.631]                      // -> [port <= 0x00000000]
[19:49:35.632]                    __var portAdr = 0;
[19:49:35.632]                      // -> [portAdr <= 0x00000000]
[19:49:35.632]                    __var pos     = 0;
[19:49:35.632]                      // -> [pos <= 0x00000000]
[19:49:35.632]                    __var SWO_Pin = 0x00010003;          // PB3
[19:49:35.632]                      // -> [SWO_Pin <= 0x00010003]
[19:49:35.633]                  </block>
[19:49:35.633]                  <block atomic="false" info="configure SWO">
[19:49:35.633]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:49:35.633]                      // -> [pin <= 0x00000003]
[19:49:35.633]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:49:35.633]                      // -> [port <= 0x00000001]
[19:49:35.633]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:49:35.633]                      // -> [portAdr <= 0x40020400]
[19:49:35.634]                    pos = pin * 2;
[19:49:35.634]                      // -> [pos <= 0x00000006]
[19:49:35.634]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:49:35.634]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.635]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.635]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:49:35.635]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.636]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.636]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:49:35.636]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.637]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.637]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:49:35.637]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.637]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.638]                  </block>
[19:49:35.638]                  <control if="pin <  8" while="" timeout="0" info="">
[19:49:35.638]                    // if-block "pin <  8"
[19:49:35.638]                      // =>  TRUE
[19:49:35.638]                    <block atomic="false" info="">
[19:49:35.638]                      pos = ((pin    ) & 7) * 4;
[19:49:35.638]                        // -> [pos <= 0x0000000C]
[19:49:35.638]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:49:35.639]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.639]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.639]                    </block>
[19:49:35.640]                    // end if-block "pin <  8"
[19:49:35.640]                  </control>
[19:49:35.640]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:49:35.640]                    // if-block "pin >= 8"
[19:49:35.640]                      // =>  FALSE
[19:49:35.640]                    // skip if-block "pin >= 8"
[19:49:35.640]                  </control>
[19:49:35.641]                </sequence>
[19:49:35.641]            </block>
[19:49:35.641]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:49:35.641]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:49:35.641]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.642]            </block>
[19:49:35.642]          </sequence>
[19:49:35.642]      </block>
[19:49:35.642]      // end if-block "traceSWO"
[19:49:35.642]    </control>
[19:49:35.642]    <control if="traceTPIU" while="" timeout="0" info="">
[19:49:35.642]      // if-block "traceTPIU"
[19:49:35.642]        // =>  FALSE
[19:49:35.643]      // skip if-block "traceTPIU"
[19:49:35.643]    </control>
[19:49:35.643]  </sequence>
[19:49:35.643]  
[19:49:35.647]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:49:35.647]  
[19:49:35.647]  <debugvars>
[19:49:35.647]    // Pre-defined
[19:49:35.647]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:35.647]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:49:35.647]    __dp=0x00000000
[19:49:35.648]    __ap=0x00000000
[19:49:35.648]    __traceout=0x00000001      (SWO Trace)
[19:49:35.648]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:35.648]    __FlashAddr=0x00000000
[19:49:35.648]    __FlashLen=0x00000000
[19:49:35.648]    __FlashArg=0x00000000
[19:49:35.648]    __FlashOp=0x00000000
[19:49:35.649]    __Result=0x00000000
[19:49:35.649]    
[19:49:35.649]    // User-defined
[19:49:35.649]    DbgMCU_CR=0x00000007
[19:49:35.649]    DbgMCU_APB1_Fz=0x00000000
[19:49:35.649]    DbgMCU_APB2_Fz=0x00000000
[19:49:35.649]    TraceClk_Pin=0x00040002
[19:49:35.649]    TraceD0_Pin=0x00040003
[19:49:35.650]    TraceD1_Pin=0x00040004
[19:49:35.650]    TraceD2_Pin=0x00040005
[19:49:35.650]    TraceD3_Pin=0x00040006
[19:49:35.650]  </debugvars>
[19:49:35.650]  
[19:49:35.650]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:49:35.650]    <block atomic="false" info="">
[19:49:35.650]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:49:35.650]        // -> [traceSWO <= 0x00000001]
[19:49:35.651]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:49:35.651]        // -> [traceTPIU <= 0x00000000]
[19:49:35.651]    </block>
[19:49:35.651]    <control if="traceSWO" while="" timeout="0" info="">
[19:49:35.651]      // if-block "traceSWO"
[19:49:35.651]        // =>  TRUE
[19:49:35.651]      <block atomic="false" info="">
[19:49:35.651]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:49:35.652]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:49:35.652]            <block atomic="false" info="">
[19:49:35.652]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:49:35.652]                // -> [dbgmcu_val <= 0x00000000]
[19:49:35.652]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:49:35.652]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:49:35.652]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:49:35.653]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.653]                // -> [dbgmcu_val <= 0x00000007]
[19:49:35.653]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:49:35.653]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:49:35.653]              Sequence("ConfigureTraceSWOPin");
[19:49:35.653]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:49:35.653]                  <block atomic="false" info="">
[19:49:35.654]                    __var pin     = 0;
[19:49:35.654]                      // -> [pin <= 0x00000000]
[19:49:35.654]                    __var port    = 0;
[19:49:35.654]                      // -> [port <= 0x00000000]
[19:49:35.654]                    __var portAdr = 0;
[19:49:35.654]                      // -> [portAdr <= 0x00000000]
[19:49:35.654]                    __var pos     = 0;
[19:49:35.654]                      // -> [pos <= 0x00000000]
[19:49:35.655]                    __var SWO_Pin = 0x00010003;          // PB3
[19:49:35.655]                      // -> [SWO_Pin <= 0x00010003]
[19:49:35.655]                  </block>
[19:49:35.655]                  <block atomic="false" info="configure SWO">
[19:49:35.655]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:49:35.655]                      // -> [pin <= 0x00000003]
[19:49:35.655]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:49:35.655]                      // -> [port <= 0x00000001]
[19:49:35.656]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:49:35.656]                      // -> [portAdr <= 0x40020400]
[19:49:35.656]                    pos = pin * 2;
[19:49:35.656]                      // -> [pos <= 0x00000006]
[19:49:35.656]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:49:35.657]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.657]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.657]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:49:35.658]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.658]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.659]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:49:35.659]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.660]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.660]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:49:35.660]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.661]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.661]                  </block>
[19:49:35.661]                  <control if="pin <  8" while="" timeout="0" info="">
[19:49:35.661]                    // if-block "pin <  8"
[19:49:35.661]                      // =>  TRUE
[19:49:35.661]                    <block atomic="false" info="">
[19:49:35.661]                      pos = ((pin    ) & 7) * 4;
[19:49:35.662]                        // -> [pos <= 0x0000000C]
[19:49:35.662]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:49:35.662]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.663]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.663]                    </block>
[19:49:35.663]                    // end if-block "pin <  8"
[19:49:35.663]                  </control>
[19:49:35.663]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:49:35.663]                    // if-block "pin >= 8"
[19:49:35.663]                      // =>  FALSE
[19:49:35.663]                    // skip if-block "pin >= 8"
[19:49:35.663]                  </control>
[19:49:35.664]                </sequence>
[19:49:35.664]            </block>
[19:49:35.664]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:49:35.664]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:49:35.664]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.664]            </block>
[19:49:35.665]          </sequence>
[19:49:35.665]      </block>
[19:49:35.665]      // end if-block "traceSWO"
[19:49:35.665]    </control>
[19:49:35.665]    <control if="traceTPIU" while="" timeout="0" info="">
[19:49:35.665]      // if-block "traceTPIU"
[19:49:35.665]        // =>  FALSE
[19:49:35.665]      // skip if-block "traceTPIU"
[19:49:35.666]    </control>
[19:49:35.666]  </sequence>
[19:49:35.666]  
[19:49:35.881]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:49:35.881]  
[19:49:35.881]  <debugvars>
[19:49:35.881]    // Pre-defined
[19:49:35.881]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:49:35.881]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:49:35.881]    __dp=0x00000000
[19:49:35.882]    __ap=0x00000000
[19:49:35.882]    __traceout=0x00000001      (SWO Trace)
[19:49:35.882]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:49:35.882]    __FlashAddr=0x00000000
[19:49:35.882]    __FlashLen=0x00000000
[19:49:35.882]    __FlashArg=0x00000000
[19:49:35.883]    __FlashOp=0x00000000
[19:49:35.883]    __Result=0x00000000
[19:49:35.883]    
[19:49:35.883]    // User-defined
[19:49:35.883]    DbgMCU_CR=0x00000007
[19:49:35.883]    DbgMCU_APB1_Fz=0x00000000
[19:49:35.884]    DbgMCU_APB2_Fz=0x00000000
[19:49:35.884]    TraceClk_Pin=0x00040002
[19:49:35.884]    TraceD0_Pin=0x00040003
[19:49:35.884]    TraceD1_Pin=0x00040004
[19:49:35.884]    TraceD2_Pin=0x00040005
[19:49:35.884]    TraceD3_Pin=0x00040006
[19:49:35.884]  </debugvars>
[19:49:35.885]  
[19:49:35.885]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:49:35.885]    <block atomic="false" info="">
[19:49:35.885]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:49:35.885]        // -> [traceSWO <= 0x00000001]
[19:49:35.886]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:49:35.886]        // -> [traceTPIU <= 0x00000000]
[19:49:35.886]    </block>
[19:49:35.886]    <control if="traceSWO" while="" timeout="0" info="">
[19:49:35.886]      // if-block "traceSWO"
[19:49:35.886]        // =>  TRUE
[19:49:35.886]      <block atomic="false" info="">
[19:49:35.887]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:49:35.887]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:49:35.887]            <block atomic="false" info="">
[19:49:35.887]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:49:35.887]                // -> [dbgmcu_val <= 0x00000000]
[19:49:35.887]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:49:35.887]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:49:35.888]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:49:35.888]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.888]                // -> [dbgmcu_val <= 0x00000007]
[19:49:35.889]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:49:35.889]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:49:35.889]              Sequence("ConfigureTraceSWOPin");
[19:49:35.889]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:49:35.889]                  <block atomic="false" info="">
[19:49:35.889]                    __var pin     = 0;
[19:49:35.889]                      // -> [pin <= 0x00000000]
[19:49:35.889]                    __var port    = 0;
[19:49:35.890]                      // -> [port <= 0x00000000]
[19:49:35.890]                    __var portAdr = 0;
[19:49:35.890]                      // -> [portAdr <= 0x00000000]
[19:49:35.890]                    __var pos     = 0;
[19:49:35.890]                      // -> [pos <= 0x00000000]
[19:49:35.890]                    __var SWO_Pin = 0x00010003;          // PB3
[19:49:35.891]                      // -> [SWO_Pin <= 0x00010003]
[19:49:35.891]                  </block>
[19:49:35.891]                  <block atomic="false" info="configure SWO">
[19:49:35.891]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:49:35.891]                      // -> [pin <= 0x00000003]
[19:49:35.891]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:49:35.891]                      // -> [port <= 0x00000001]
[19:49:35.891]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:49:35.891]                      // -> [portAdr <= 0x40020400]
[19:49:35.892]                    pos = pin * 2;
[19:49:35.892]                      // -> [pos <= 0x00000006]
[19:49:35.892]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:49:35.892]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.893]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.893]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:49:35.893]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.894]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.894]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:49:35.894]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.895]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.895]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:49:35.895]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.896]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.896]                  </block>
[19:49:35.896]                  <control if="pin <  8" while="" timeout="0" info="">
[19:49:35.896]                    // if-block "pin <  8"
[19:49:35.896]                      // =>  TRUE
[19:49:35.896]                    <block atomic="false" info="">
[19:49:35.896]                      pos = ((pin    ) & 7) * 4;
[19:49:35.897]                        // -> [pos <= 0x0000000C]
[19:49:35.897]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:49:35.897]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.898]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.898]                    </block>
[19:49:35.898]                    // end if-block "pin <  8"
[19:49:35.898]                  </control>
[19:49:35.898]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:49:35.898]                    // if-block "pin >= 8"
[19:49:35.898]                      // =>  FALSE
[19:49:35.898]                    // skip if-block "pin >= 8"
[19:49:35.899]                  </control>
[19:49:35.899]                </sequence>
[19:49:35.899]            </block>
[19:49:35.899]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:49:35.899]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:49:35.900]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:49:35.900]            </block>
[19:49:35.900]          </sequence>
[19:49:35.900]      </block>
[19:49:35.900]      // end if-block "traceSWO"
[19:49:35.900]    </control>
[19:49:35.900]    <control if="traceTPIU" while="" timeout="0" info="">
[19:49:35.900]      // if-block "traceTPIU"
[19:49:35.901]        // =>  FALSE
[19:49:35.901]      // skip if-block "traceTPIU"
[19:49:35.901]    </control>
[19:49:35.901]  </sequence>
[19:49:35.901]  
[19:50:12.476]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:50:12.476]  
[19:50:12.476]  <debugvars>
[19:50:12.477]    // Pre-defined
[19:50:12.477]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:50:12.477]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:50:12.477]    __dp=0x00000000
[19:50:12.477]    __ap=0x00000000
[19:50:12.477]    __traceout=0x00000001      (SWO Trace)
[19:50:12.478]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:50:12.478]    __FlashAddr=0x00000000
[19:50:12.478]    __FlashLen=0x00000000
[19:50:12.478]    __FlashArg=0x00000000
[19:50:12.478]    __FlashOp=0x00000000
[19:50:12.478]    __Result=0x00000000
[19:50:12.478]    
[19:50:12.478]    // User-defined
[19:50:12.478]    DbgMCU_CR=0x00000007
[19:50:12.479]    DbgMCU_APB1_Fz=0x00000000
[19:50:12.479]    DbgMCU_APB2_Fz=0x00000000
[19:50:12.479]    TraceClk_Pin=0x00040002
[19:50:12.479]    TraceD0_Pin=0x00040003
[19:50:12.479]    TraceD1_Pin=0x00040004
[19:50:12.479]    TraceD2_Pin=0x00040005
[19:50:12.479]    TraceD3_Pin=0x00040006
[19:50:12.480]  </debugvars>
[19:50:12.480]  
[19:50:12.480]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:50:12.480]    <block atomic="false" info="">
[19:50:12.480]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:50:12.480]        // -> [traceSWO <= 0x00000001]
[19:50:12.480]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:50:12.480]        // -> [traceTPIU <= 0x00000000]
[19:50:12.481]    </block>
[19:50:12.481]    <control if="traceSWO" while="" timeout="0" info="">
[19:50:12.481]      // if-block "traceSWO"
[19:50:12.481]        // =>  TRUE
[19:50:12.481]      <block atomic="false" info="">
[19:50:12.481]        Sequence("DisableTraceSWO");
[19:50:12.481]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:50:12.482]            <block atomic="false" info="">
[19:50:12.482]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:50:12.482]                // -> [dbgmcu_val <= 0x00000000]
[19:50:12.482]            </block>
[19:50:12.482]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:50:12.482]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:50:12.482]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:50:12.483]                // -> [dbgmcu_val <= 0x00000007]
[19:50:12.483]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:50:12.483]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:50:12.483]            </block>
[19:50:12.484]          </sequence>
[19:50:12.484]      </block>
[19:50:12.484]      // end if-block "traceSWO"
[19:50:12.484]    </control>
[19:50:12.484]    <control if="traceTPIU" while="" timeout="0" info="">
[19:50:12.484]      // if-block "traceTPIU"
[19:50:12.484]        // =>  FALSE
[19:50:12.484]      // skip if-block "traceTPIU"
[19:50:12.484]    </control>
[19:50:12.485]  </sequence>
[19:50:12.485]  
[19:50:40.282]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:50:40.282]  
[19:50:40.283]  <debugvars>
[19:50:40.283]    // Pre-defined
[19:50:40.283]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:50:40.283]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:50:40.283]    __dp=0x00000000
[19:50:40.284]    __ap=0x00000000
[19:50:40.284]    __traceout=0x00000001      (SWO Trace)
[19:50:40.284]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:50:40.284]    __FlashAddr=0x00000000
[19:50:40.284]    __FlashLen=0x00000000
[19:50:40.284]    __FlashArg=0x00000000
[19:50:40.285]    __FlashOp=0x00000000
[19:50:40.285]    __Result=0x00000000
[19:50:40.285]    
[19:50:40.285]    // User-defined
[19:50:40.285]    DbgMCU_CR=0x00000007
[19:50:40.285]    DbgMCU_APB1_Fz=0x00000000
[19:50:40.285]    DbgMCU_APB2_Fz=0x00000000
[19:50:40.286]    TraceClk_Pin=0x00040002
[19:50:40.286]    TraceD0_Pin=0x00040003
[19:50:40.286]    TraceD1_Pin=0x00040004
[19:50:40.286]    TraceD2_Pin=0x00040005
[19:50:40.286]    TraceD3_Pin=0x00040006
[19:50:40.286]  </debugvars>
[19:50:40.287]  
[19:50:40.287]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:50:40.287]    <block atomic="false" info="">
[19:50:40.287]      Sequence("CheckID");
[19:50:40.287]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:50:40.287]          <block atomic="false" info="">
[19:50:40.287]            __var pidr1 = 0;
[19:50:40.288]              // -> [pidr1 <= 0x00000000]
[19:50:40.288]            __var pidr2 = 0;
[19:50:40.288]              // -> [pidr2 <= 0x00000000]
[19:50:40.288]            __var jep106id = 0;
[19:50:40.288]              // -> [jep106id <= 0x00000000]
[19:50:40.288]            __var ROMTableBase = 0;
[19:50:40.288]              // -> [ROMTableBase <= 0x00000000]
[19:50:40.288]            __ap = 0;      // AHB-AP
[19:50:40.289]              // -> [__ap <= 0x00000000]
[19:50:40.289]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:50:40.289]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.289]              // -> [ROMTableBase <= 0xE00FD000]
[19:50:40.289]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:50:40.290]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.290]              // -> [pidr1 <= 0x00000004]
[19:50:40.290]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:50:40.290]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.291]              // -> [pidr2 <= 0x0000001A]
[19:50:40.291]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:50:40.291]              // -> [jep106id <= 0x00000020]
[19:50:40.291]          </block>
[19:50:40.291]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:50:40.291]            // if-block "jep106id != 0x20"
[19:50:40.291]              // =>  FALSE
[19:50:40.291]            // skip if-block "jep106id != 0x20"
[19:50:40.291]          </control>
[19:50:40.292]        </sequence>
[19:50:40.292]    </block>
[19:50:40.292]  </sequence>
[19:50:40.292]  
[19:50:40.307]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:50:40.307]  
[19:50:40.307]  <debugvars>
[19:50:40.308]    // Pre-defined
[19:50:40.308]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:50:40.308]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:50:40.308]    __dp=0x00000000
[19:50:40.308]    __ap=0x00000000
[19:50:40.309]    __traceout=0x00000001      (SWO Trace)
[19:50:40.309]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:50:40.309]    __FlashAddr=0x00000000
[19:50:40.309]    __FlashLen=0x00000000
[19:50:40.309]    __FlashArg=0x00000000
[19:50:40.309]    __FlashOp=0x00000000
[19:50:40.310]    __Result=0x00000000
[19:50:40.310]    
[19:50:40.310]    // User-defined
[19:50:40.310]    DbgMCU_CR=0x00000007
[19:50:40.310]    DbgMCU_APB1_Fz=0x00000000
[19:50:40.310]    DbgMCU_APB2_Fz=0x00000000
[19:50:40.310]    TraceClk_Pin=0x00040002
[19:50:40.310]    TraceD0_Pin=0x00040003
[19:50:40.310]    TraceD1_Pin=0x00040004
[19:50:40.311]    TraceD2_Pin=0x00040005
[19:50:40.311]    TraceD3_Pin=0x00040006
[19:50:40.311]  </debugvars>
[19:50:40.311]  
[19:50:40.311]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:50:40.311]    <block atomic="false" info="">
[19:50:40.312]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:50:40.312]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.313]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:50:40.313]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.313]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:50:40.314]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.314]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:50:40.314]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:50:40.314]    </block>
[19:50:40.314]  </sequence>
[19:50:40.315]  
[19:51:11.108]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:51:11.108]  
[19:51:11.108]  <debugvars>
[19:51:11.109]    // Pre-defined
[19:51:11.109]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:51:11.109]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:51:11.109]    __dp=0x00000000
[19:51:11.109]    __ap=0x00000000
[19:51:11.109]    __traceout=0x00000001      (SWO Trace)
[19:51:11.110]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:51:11.110]    __FlashAddr=0x00000000
[19:51:11.110]    __FlashLen=0x00000000
[19:51:11.110]    __FlashArg=0x00000000
[19:51:11.110]    __FlashOp=0x00000000
[19:51:11.110]    __Result=0x00000000
[19:51:11.110]    
[19:51:11.110]    // User-defined
[19:51:11.110]    DbgMCU_CR=0x00000007
[19:51:11.111]    DbgMCU_APB1_Fz=0x00000000
[19:51:11.111]    DbgMCU_APB2_Fz=0x00000000
[19:51:11.111]    TraceClk_Pin=0x00040002
[19:51:11.111]    TraceD0_Pin=0x00040003
[19:51:11.112]    TraceD1_Pin=0x00040004
[19:51:11.112]    TraceD2_Pin=0x00040005
[19:51:11.112]    TraceD3_Pin=0x00040006
[19:51:11.113]  </debugvars>
[19:51:11.113]  
[19:51:11.113]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:51:11.113]    <block atomic="false" info="">
[19:51:11.113]      Sequence("CheckID");
[19:51:11.114]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:51:11.114]          <block atomic="false" info="">
[19:51:11.114]            __var pidr1 = 0;
[19:51:11.114]              // -> [pidr1 <= 0x00000000]
[19:51:11.114]            __var pidr2 = 0;
[19:51:11.115]              // -> [pidr2 <= 0x00000000]
[19:51:11.115]            __var jep106id = 0;
[19:51:11.115]              // -> [jep106id <= 0x00000000]
[19:51:11.115]            __var ROMTableBase = 0;
[19:51:11.115]              // -> [ROMTableBase <= 0x00000000]
[19:51:11.115]            __ap = 0;      // AHB-AP
[19:51:11.116]              // -> [__ap <= 0x00000000]
[19:51:11.116]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:51:11.116]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.116]              // -> [ROMTableBase <= 0xE00FD000]
[19:51:11.116]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:51:11.117]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.117]              // -> [pidr1 <= 0x00000004]
[19:51:11.117]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:51:11.118]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.118]              // -> [pidr2 <= 0x0000001A]
[19:51:11.118]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:51:11.118]              // -> [jep106id <= 0x00000020]
[19:51:11.118]          </block>
[19:51:11.118]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:51:11.118]            // if-block "jep106id != 0x20"
[19:51:11.118]              // =>  FALSE
[19:51:11.119]            // skip if-block "jep106id != 0x20"
[19:51:11.119]          </control>
[19:51:11.119]        </sequence>
[19:51:11.119]    </block>
[19:51:11.119]  </sequence>
[19:51:11.119]  
[19:51:11.134]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:51:11.135]  
[19:51:11.135]  <debugvars>
[19:51:11.135]    // Pre-defined
[19:51:11.135]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:51:11.135]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:51:11.135]    __dp=0x00000000
[19:51:11.135]    __ap=0x00000000
[19:51:11.135]    __traceout=0x00000001      (SWO Trace)
[19:51:11.136]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:51:11.136]    __FlashAddr=0x00000000
[19:51:11.136]    __FlashLen=0x00000000
[19:51:11.136]    __FlashArg=0x00000000
[19:51:11.136]    __FlashOp=0x00000000
[19:51:11.136]    __Result=0x00000000
[19:51:11.136]    
[19:51:11.136]    // User-defined
[19:51:11.136]    DbgMCU_CR=0x00000007
[19:51:11.136]    DbgMCU_APB1_Fz=0x00000000
[19:51:11.137]    DbgMCU_APB2_Fz=0x00000000
[19:51:11.137]    TraceClk_Pin=0x00040002
[19:51:11.137]    TraceD0_Pin=0x00040003
[19:51:11.137]    TraceD1_Pin=0x00040004
[19:51:11.137]    TraceD2_Pin=0x00040005
[19:51:11.137]    TraceD3_Pin=0x00040006
[19:51:11.137]  </debugvars>
[19:51:11.137]  
[19:51:11.138]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:51:11.138]    <block atomic="false" info="">
[19:51:11.138]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:51:11.138]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.138]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:51:11.139]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.139]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:51:11.140]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.140]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:51:11.140]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.140]    </block>
[19:51:11.140]  </sequence>
[19:51:11.141]  
[19:51:11.157]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:51:11.157]  
[19:51:11.157]  <debugvars>
[19:51:11.158]    // Pre-defined
[19:51:11.158]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:51:11.158]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:51:11.158]    __dp=0x00000000
[19:51:11.158]    __ap=0x00000000
[19:51:11.158]    __traceout=0x00000001      (SWO Trace)
[19:51:11.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:51:11.159]    __FlashAddr=0x00000000
[19:51:11.159]    __FlashLen=0x00000000
[19:51:11.159]    __FlashArg=0x00000000
[19:51:11.159]    __FlashOp=0x00000000
[19:51:11.159]    __Result=0x00000000
[19:51:11.159]    
[19:51:11.159]    // User-defined
[19:51:11.160]    DbgMCU_CR=0x00000007
[19:51:11.160]    DbgMCU_APB1_Fz=0x00000000
[19:51:11.160]    DbgMCU_APB2_Fz=0x00000000
[19:51:11.160]    TraceClk_Pin=0x00040002
[19:51:11.160]    TraceD0_Pin=0x00040003
[19:51:11.160]    TraceD1_Pin=0x00040004
[19:51:11.160]    TraceD2_Pin=0x00040005
[19:51:11.161]    TraceD3_Pin=0x00040006
[19:51:11.161]  </debugvars>
[19:51:11.161]  
[19:51:11.161]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:51:11.161]    <block atomic="false" info="">
[19:51:11.161]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:51:11.161]        // -> [traceSWO <= 0x00000001]
[19:51:11.162]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:51:11.162]        // -> [traceTPIU <= 0x00000000]
[19:51:11.162]    </block>
[19:51:11.162]    <control if="traceSWO" while="" timeout="0" info="">
[19:51:11.162]      // if-block "traceSWO"
[19:51:11.162]        // =>  TRUE
[19:51:11.162]      <block atomic="false" info="">
[19:51:11.163]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:51:11.163]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:51:11.163]            <block atomic="false" info="">
[19:51:11.163]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:51:11.163]                // -> [dbgmcu_val <= 0x00000000]
[19:51:11.163]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:51:11.163]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:51:11.163]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:51:11.165]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.165]                // -> [dbgmcu_val <= 0x00000007]
[19:51:11.165]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:51:11.165]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:51:11.165]              Sequence("ConfigureTraceSWOPin");
[19:51:11.165]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:51:11.165]                  <block atomic="false" info="">
[19:51:11.165]                    __var pin     = 0;
[19:51:11.165]                      // -> [pin <= 0x00000000]
[19:51:11.165]                    __var port    = 0;
[19:51:11.165]                      // -> [port <= 0x00000000]
[19:51:11.166]                    __var portAdr = 0;
[19:51:11.166]                      // -> [portAdr <= 0x00000000]
[19:51:11.166]                    __var pos     = 0;
[19:51:11.166]                      // -> [pos <= 0x00000000]
[19:51:11.166]                    __var SWO_Pin = 0x00010003;          // PB3
[19:51:11.166]                      // -> [SWO_Pin <= 0x00010003]
[19:51:11.167]                  </block>
[19:51:11.167]                  <block atomic="false" info="configure SWO">
[19:51:11.167]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:51:11.167]                      // -> [pin <= 0x00000003]
[19:51:11.167]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:51:11.167]                      // -> [port <= 0x00000001]
[19:51:11.167]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:51:11.167]                      // -> [portAdr <= 0x40020400]
[19:51:11.167]                    pos = pin * 2;
[19:51:11.168]                      // -> [pos <= 0x00000006]
[19:51:11.168]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:51:11.168]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.169]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.169]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:51:11.169]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.170]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.170]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:51:11.170]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.171]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.171]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:51:11.171]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.172]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.172]                  </block>
[19:51:11.172]                  <control if="pin <  8" while="" timeout="0" info="">
[19:51:11.172]                    // if-block "pin <  8"
[19:51:11.172]                      // =>  TRUE
[19:51:11.172]                    <block atomic="false" info="">
[19:51:11.172]                      pos = ((pin    ) & 7) * 4;
[19:51:11.172]                        // -> [pos <= 0x0000000C]
[19:51:11.173]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:51:11.173]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.173]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.174]                    </block>
[19:51:11.174]                    // end if-block "pin <  8"
[19:51:11.174]                  </control>
[19:51:11.174]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:51:11.174]                    // if-block "pin >= 8"
[19:51:11.174]                      // =>  FALSE
[19:51:11.174]                    // skip if-block "pin >= 8"
[19:51:11.174]                  </control>
[19:51:11.174]                </sequence>
[19:51:11.175]            </block>
[19:51:11.175]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:51:11.175]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:51:11.175]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.175]            </block>
[19:51:11.175]          </sequence>
[19:51:11.176]      </block>
[19:51:11.176]      // end if-block "traceSWO"
[19:51:11.176]    </control>
[19:51:11.176]    <control if="traceTPIU" while="" timeout="0" info="">
[19:51:11.176]      // if-block "traceTPIU"
[19:51:11.176]        // =>  FALSE
[19:51:11.176]      // skip if-block "traceTPIU"
[19:51:11.176]    </control>
[19:51:11.176]  </sequence>
[19:51:11.177]  
[19:51:11.181]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:51:11.181]  
[19:51:11.181]  <debugvars>
[19:51:11.181]    // Pre-defined
[19:51:11.181]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:51:11.181]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:51:11.182]    __dp=0x00000000
[19:51:11.182]    __ap=0x00000000
[19:51:11.182]    __traceout=0x00000001      (SWO Trace)
[19:51:11.182]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:51:11.182]    __FlashAddr=0x00000000
[19:51:11.182]    __FlashLen=0x00000000
[19:51:11.182]    __FlashArg=0x00000000
[19:51:11.182]    __FlashOp=0x00000000
[19:51:11.183]    __Result=0x00000000
[19:51:11.183]    
[19:51:11.183]    // User-defined
[19:51:11.183]    DbgMCU_CR=0x00000007
[19:51:11.183]    DbgMCU_APB1_Fz=0x00000000
[19:51:11.183]    DbgMCU_APB2_Fz=0x00000000
[19:51:11.183]    TraceClk_Pin=0x00040002
[19:51:11.183]    TraceD0_Pin=0x00040003
[19:51:11.183]    TraceD1_Pin=0x00040004
[19:51:11.184]    TraceD2_Pin=0x00040005
[19:51:11.184]    TraceD3_Pin=0x00040006
[19:51:11.184]  </debugvars>
[19:51:11.184]  
[19:51:11.184]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:51:11.184]    <block atomic="false" info="">
[19:51:11.184]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:51:11.184]        // -> [traceSWO <= 0x00000001]
[19:51:11.184]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:51:11.185]        // -> [traceTPIU <= 0x00000000]
[19:51:11.185]    </block>
[19:51:11.185]    <control if="traceSWO" while="" timeout="0" info="">
[19:51:11.185]      // if-block "traceSWO"
[19:51:11.185]        // =>  TRUE
[19:51:11.185]      <block atomic="false" info="">
[19:51:11.185]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:51:11.185]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:51:11.186]            <block atomic="false" info="">
[19:51:11.186]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:51:11.186]                // -> [dbgmcu_val <= 0x00000000]
[19:51:11.186]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:51:11.186]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:51:11.186]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:51:11.187]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.187]                // -> [dbgmcu_val <= 0x00000007]
[19:51:11.187]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:51:11.187]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:51:11.187]              Sequence("ConfigureTraceSWOPin");
[19:51:11.187]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:51:11.188]                  <block atomic="false" info="">
[19:51:11.188]                    __var pin     = 0;
[19:51:11.188]                      // -> [pin <= 0x00000000]
[19:51:11.188]                    __var port    = 0;
[19:51:11.188]                      // -> [port <= 0x00000000]
[19:51:11.188]                    __var portAdr = 0;
[19:51:11.188]                      // -> [portAdr <= 0x00000000]
[19:51:11.188]                    __var pos     = 0;
[19:51:11.189]                      // -> [pos <= 0x00000000]
[19:51:11.189]                    __var SWO_Pin = 0x00010003;          // PB3
[19:51:11.189]                      // -> [SWO_Pin <= 0x00010003]
[19:51:11.189]                  </block>
[19:51:11.189]                  <block atomic="false" info="configure SWO">
[19:51:11.189]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:51:11.189]                      // -> [pin <= 0x00000003]
[19:51:11.189]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:51:11.190]                      // -> [port <= 0x00000001]
[19:51:11.190]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:51:11.190]                      // -> [portAdr <= 0x40020400]
[19:51:11.190]                    pos = pin * 2;
[19:51:11.190]                      // -> [pos <= 0x00000006]
[19:51:11.190]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:51:11.191]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.191]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.191]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:51:11.192]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.192]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.192]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:51:11.193]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.193]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.193]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:51:11.194]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.194]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.194]                  </block>
[19:51:11.195]                  <control if="pin <  8" while="" timeout="0" info="">
[19:51:11.195]                    // if-block "pin <  8"
[19:51:11.195]                      // =>  TRUE
[19:51:11.195]                    <block atomic="false" info="">
[19:51:11.195]                      pos = ((pin    ) & 7) * 4;
[19:51:11.196]                        // -> [pos <= 0x0000000C]
[19:51:11.196]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:51:11.196]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.197]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.197]                    </block>
[19:51:11.197]                    // end if-block "pin <  8"
[19:51:11.198]                  </control>
[19:51:11.198]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:51:11.198]                    // if-block "pin >= 8"
[19:51:11.198]                      // =>  FALSE
[19:51:11.198]                    // skip if-block "pin >= 8"
[19:51:11.198]                  </control>
[19:51:11.199]                </sequence>
[19:51:11.199]            </block>
[19:51:11.199]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:51:11.199]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:51:11.199]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.200]            </block>
[19:51:11.200]          </sequence>
[19:51:11.200]      </block>
[19:51:11.200]      // end if-block "traceSWO"
[19:51:11.200]    </control>
[19:51:11.200]    <control if="traceTPIU" while="" timeout="0" info="">
[19:51:11.200]      // if-block "traceTPIU"
[19:51:11.201]        // =>  FALSE
[19:51:11.201]      // skip if-block "traceTPIU"
[19:51:11.201]    </control>
[19:51:11.201]  </sequence>
[19:51:11.201]  
[19:51:11.444]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:51:11.444]  
[19:51:11.444]  <debugvars>
[19:51:11.444]    // Pre-defined
[19:51:11.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:51:11.445]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:51:11.445]    __dp=0x00000000
[19:51:11.445]    __ap=0x00000000
[19:51:11.445]    __traceout=0x00000001      (SWO Trace)
[19:51:11.445]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:51:11.445]    __FlashAddr=0x00000000
[19:51:11.446]    __FlashLen=0x00000000
[19:51:11.446]    __FlashArg=0x00000000
[19:51:11.446]    __FlashOp=0x00000000
[19:51:11.446]    __Result=0x00000000
[19:51:11.446]    
[19:51:11.446]    // User-defined
[19:51:11.446]    DbgMCU_CR=0x00000007
[19:51:11.446]    DbgMCU_APB1_Fz=0x00000000
[19:51:11.446]    DbgMCU_APB2_Fz=0x00000000
[19:51:11.446]    TraceClk_Pin=0x00040002
[19:51:11.447]    TraceD0_Pin=0x00040003
[19:51:11.447]    TraceD1_Pin=0x00040004
[19:51:11.447]    TraceD2_Pin=0x00040005
[19:51:11.447]    TraceD3_Pin=0x00040006
[19:51:11.447]  </debugvars>
[19:51:11.447]  
[19:51:11.447]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:51:11.447]    <block atomic="false" info="">
[19:51:11.448]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:51:11.448]        // -> [traceSWO <= 0x00000001]
[19:51:11.448]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:51:11.448]        // -> [traceTPIU <= 0x00000000]
[19:51:11.448]    </block>
[19:51:11.448]    <control if="traceSWO" while="" timeout="0" info="">
[19:51:11.448]      // if-block "traceSWO"
[19:51:11.448]        // =>  TRUE
[19:51:11.448]      <block atomic="false" info="">
[19:51:11.449]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:51:11.449]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:51:11.449]            <block atomic="false" info="">
[19:51:11.449]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:51:11.449]                // -> [dbgmcu_val <= 0x00000000]
[19:51:11.449]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:51:11.449]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:51:11.449]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:51:11.450]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.450]                // -> [dbgmcu_val <= 0x00000007]
[19:51:11.450]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:51:11.450]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:51:11.450]              Sequence("ConfigureTraceSWOPin");
[19:51:11.450]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:51:11.451]                  <block atomic="false" info="">
[19:51:11.451]                    __var pin     = 0;
[19:51:11.451]                      // -> [pin <= 0x00000000]
[19:51:11.451]                    __var port    = 0;
[19:51:11.451]                      // -> [port <= 0x00000000]
[19:51:11.451]                    __var portAdr = 0;
[19:51:11.451]                      // -> [portAdr <= 0x00000000]
[19:51:11.451]                    __var pos     = 0;
[19:51:11.451]                      // -> [pos <= 0x00000000]
[19:51:11.452]                    __var SWO_Pin = 0x00010003;          // PB3
[19:51:11.452]                      // -> [SWO_Pin <= 0x00010003]
[19:51:11.452]                  </block>
[19:51:11.452]                  <block atomic="false" info="configure SWO">
[19:51:11.452]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:51:11.452]                      // -> [pin <= 0x00000003]
[19:51:11.452]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:51:11.452]                      // -> [port <= 0x00000001]
[19:51:11.453]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:51:11.453]                      // -> [portAdr <= 0x40020400]
[19:51:11.453]                    pos = pin * 2;
[19:51:11.453]                      // -> [pos <= 0x00000006]
[19:51:11.453]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:51:11.453]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.454]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.454]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:51:11.454]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.455]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.455]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:51:11.455]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.456]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.456]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:51:11.456]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.457]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.457]                  </block>
[19:51:11.457]                  <control if="pin <  8" while="" timeout="0" info="">
[19:51:11.457]                    // if-block "pin <  8"
[19:51:11.457]                      // =>  TRUE
[19:51:11.457]                    <block atomic="false" info="">
[19:51:11.457]                      pos = ((pin    ) & 7) * 4;
[19:51:11.458]                        // -> [pos <= 0x0000000C]
[19:51:11.458]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:51:11.458]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.459]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.459]                    </block>
[19:51:11.459]                    // end if-block "pin <  8"
[19:51:11.459]                  </control>
[19:51:11.459]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:51:11.459]                    // if-block "pin >= 8"
[19:51:11.459]                      // =>  FALSE
[19:51:11.459]                    // skip if-block "pin >= 8"
[19:51:11.460]                  </control>
[19:51:11.460]                </sequence>
[19:51:11.460]            </block>
[19:51:11.460]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:51:11.460]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:51:11.460]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:51:11.461]            </block>
[19:51:11.461]          </sequence>
[19:51:11.461]      </block>
[19:51:11.461]      // end if-block "traceSWO"
[19:51:11.461]    </control>
[19:51:11.461]    <control if="traceTPIU" while="" timeout="0" info="">
[19:51:11.461]      // if-block "traceTPIU"
[19:51:11.461]        // =>  FALSE
[19:51:11.462]      // skip if-block "traceTPIU"
[19:51:11.462]    </control>
[19:51:11.462]  </sequence>
[19:51:11.462]  
[19:53:01.540]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:53:01.540]  
[19:53:01.540]  <debugvars>
[19:53:01.540]    // Pre-defined
[19:53:01.541]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:53:01.541]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:53:01.541]    __dp=0x00000000
[19:53:01.541]    __ap=0x00000000
[19:53:01.542]    __traceout=0x00000001      (SWO Trace)
[19:53:01.542]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:53:01.542]    __FlashAddr=0x00000000
[19:53:01.543]    __FlashLen=0x00000000
[19:53:01.543]    __FlashArg=0x00000000
[19:53:01.543]    __FlashOp=0x00000000
[19:53:01.543]    __Result=0x00000000
[19:53:01.543]    
[19:53:01.543]    // User-defined
[19:53:01.544]    DbgMCU_CR=0x00000007
[19:53:01.544]    DbgMCU_APB1_Fz=0x00000000
[19:53:01.544]    DbgMCU_APB2_Fz=0x00000000
[19:53:01.544]    TraceClk_Pin=0x00040002
[19:53:01.544]    TraceD0_Pin=0x00040003
[19:53:01.545]    TraceD1_Pin=0x00040004
[19:53:01.545]    TraceD2_Pin=0x00040005
[19:53:01.545]    TraceD3_Pin=0x00040006
[19:53:01.545]  </debugvars>
[19:53:01.545]  
[19:53:01.546]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:53:01.546]    <block atomic="false" info="">
[19:53:01.546]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:53:01.546]        // -> [traceSWO <= 0x00000001]
[19:53:01.546]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:53:01.547]        // -> [traceTPIU <= 0x00000000]
[19:53:01.547]    </block>
[19:53:01.547]    <control if="traceSWO" while="" timeout="0" info="">
[19:53:01.547]      // if-block "traceSWO"
[19:53:01.547]        // =>  TRUE
[19:53:01.547]      <block atomic="false" info="">
[19:53:01.547]        Sequence("DisableTraceSWO");
[19:53:01.548]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:53:01.548]            <block atomic="false" info="">
[19:53:01.548]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:53:01.548]                // -> [dbgmcu_val <= 0x00000000]
[19:53:01.548]            </block>
[19:53:01.548]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:53:01.548]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:53:01.549]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:53:01.549]                // -> [dbgmcu_val <= 0x00000007]
[19:53:01.549]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:53:01.550]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:53:01.550]            </block>
[19:53:01.550]          </sequence>
[19:53:01.550]      </block>
[19:53:01.550]      // end if-block "traceSWO"
[19:53:01.550]    </control>
[19:53:01.550]    <control if="traceTPIU" while="" timeout="0" info="">
[19:53:01.550]      // if-block "traceTPIU"
[19:53:01.551]        // =>  FALSE
[19:53:01.551]      // skip if-block "traceTPIU"
[19:53:01.551]    </control>
[19:53:01.551]  </sequence>
[19:53:01.551]  
[19:53:52.684]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:53:52.684]  
[19:53:52.684]  <debugvars>
[19:53:52.685]    // Pre-defined
[19:53:52.685]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:53:52.685]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:53:52.685]    __dp=0x00000000
[19:53:52.685]    __ap=0x00000000
[19:53:52.685]    __traceout=0x00000001      (SWO Trace)
[19:53:52.685]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:53:52.686]    __FlashAddr=0x00000000
[19:53:52.686]    __FlashLen=0x00000000
[19:53:52.686]    __FlashArg=0x00000000
[19:53:52.686]    __FlashOp=0x00000000
[19:53:52.686]    __Result=0x00000000
[19:53:52.686]    
[19:53:52.686]    // User-defined
[19:53:52.686]    DbgMCU_CR=0x00000007
[19:53:52.686]    DbgMCU_APB1_Fz=0x00000000
[19:53:52.687]    DbgMCU_APB2_Fz=0x00000000
[19:53:52.687]    TraceClk_Pin=0x00040002
[19:53:52.687]    TraceD0_Pin=0x00040003
[19:53:52.687]    TraceD1_Pin=0x00040004
[19:53:52.687]    TraceD2_Pin=0x00040005
[19:53:52.687]    TraceD3_Pin=0x00040006
[19:53:52.687]  </debugvars>
[19:53:52.687]  
[19:53:52.688]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:53:52.688]    <block atomic="false" info="">
[19:53:52.688]      Sequence("CheckID");
[19:53:52.688]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:53:52.688]          <block atomic="false" info="">
[19:53:52.688]            __var pidr1 = 0;
[19:53:52.688]              // -> [pidr1 <= 0x00000000]
[19:53:52.688]            __var pidr2 = 0;
[19:53:52.688]              // -> [pidr2 <= 0x00000000]
[19:53:52.689]            __var jep106id = 0;
[19:53:52.689]              // -> [jep106id <= 0x00000000]
[19:53:52.689]            __var ROMTableBase = 0;
[19:53:52.689]              // -> [ROMTableBase <= 0x00000000]
[19:53:52.689]            __ap = 0;      // AHB-AP
[19:53:52.689]              // -> [__ap <= 0x00000000]
[19:53:52.689]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:53:52.690]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.690]              // -> [ROMTableBase <= 0xE00FD000]
[19:53:52.690]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:53:52.690]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.691]              // -> [pidr1 <= 0x00000004]
[19:53:52.691]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:53:52.691]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.691]              // -> [pidr2 <= 0x0000001A]
[19:53:52.691]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:53:52.691]              // -> [jep106id <= 0x00000020]
[19:53:52.692]          </block>
[19:53:52.692]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:53:52.692]            // if-block "jep106id != 0x20"
[19:53:52.692]              // =>  FALSE
[19:53:52.692]            // skip if-block "jep106id != 0x20"
[19:53:52.692]          </control>
[19:53:52.692]        </sequence>
[19:53:52.692]    </block>
[19:53:52.692]  </sequence>
[19:53:52.693]  
[19:53:52.708]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:53:52.708]  
[19:53:52.708]  <debugvars>
[19:53:52.708]    // Pre-defined
[19:53:52.708]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:53:52.708]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:53:52.708]    __dp=0x00000000
[19:53:52.708]    __ap=0x00000000
[19:53:52.709]    __traceout=0x00000001      (SWO Trace)
[19:53:52.709]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:53:52.709]    __FlashAddr=0x00000000
[19:53:52.709]    __FlashLen=0x00000000
[19:53:52.709]    __FlashArg=0x00000000
[19:53:52.709]    __FlashOp=0x00000000
[19:53:52.710]    __Result=0x00000000
[19:53:52.710]    
[19:53:52.710]    // User-defined
[19:53:52.710]    DbgMCU_CR=0x00000007
[19:53:52.710]    DbgMCU_APB1_Fz=0x00000000
[19:53:52.710]    DbgMCU_APB2_Fz=0x00000000
[19:53:52.710]    TraceClk_Pin=0x00040002
[19:53:52.710]    TraceD0_Pin=0x00040003
[19:53:52.710]    TraceD1_Pin=0x00040004
[19:53:52.711]    TraceD2_Pin=0x00040005
[19:53:52.711]    TraceD3_Pin=0x00040006
[19:53:52.711]  </debugvars>
[19:53:52.711]  
[19:53:52.711]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:53:52.711]    <block atomic="false" info="">
[19:53:52.711]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:53:52.712]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.712]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:53:52.712]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.712]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:53:52.713]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.713]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:53:52.713]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:53:52.714]    </block>
[19:53:52.714]  </sequence>
[19:53:52.714]  
[19:54:23.586]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:54:23.586]  
[19:54:23.586]  <debugvars>
[19:54:23.586]    // Pre-defined
[19:54:23.587]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:54:23.587]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:54:23.587]    __dp=0x00000000
[19:54:23.587]    __ap=0x00000000
[19:54:23.587]    __traceout=0x00000001      (SWO Trace)
[19:54:23.588]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:54:23.588]    __FlashAddr=0x00000000
[19:54:23.588]    __FlashLen=0x00000000
[19:54:23.588]    __FlashArg=0x00000000
[19:54:23.589]    __FlashOp=0x00000000
[19:54:23.589]    __Result=0x00000000
[19:54:23.589]    
[19:54:23.589]    // User-defined
[19:54:23.589]    DbgMCU_CR=0x00000007
[19:54:23.589]    DbgMCU_APB1_Fz=0x00000000
[19:54:23.589]    DbgMCU_APB2_Fz=0x00000000
[19:54:23.590]    TraceClk_Pin=0x00040002
[19:54:23.590]    TraceD0_Pin=0x00040003
[19:54:23.590]    TraceD1_Pin=0x00040004
[19:54:23.591]    TraceD2_Pin=0x00040005
[19:54:23.591]    TraceD3_Pin=0x00040006
[19:54:23.591]  </debugvars>
[19:54:23.591]  
[19:54:23.591]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:54:23.591]    <block atomic="false" info="">
[19:54:23.591]      Sequence("CheckID");
[19:54:23.591]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:54:23.591]          <block atomic="false" info="">
[19:54:23.591]            __var pidr1 = 0;
[19:54:23.592]              // -> [pidr1 <= 0x00000000]
[19:54:23.592]            __var pidr2 = 0;
[19:54:23.592]              // -> [pidr2 <= 0x00000000]
[19:54:23.592]            __var jep106id = 0;
[19:54:23.592]              // -> [jep106id <= 0x00000000]
[19:54:23.592]            __var ROMTableBase = 0;
[19:54:23.593]              // -> [ROMTableBase <= 0x00000000]
[19:54:23.593]            __ap = 0;      // AHB-AP
[19:54:23.593]              // -> [__ap <= 0x00000000]
[19:54:23.593]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:54:23.594]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.594]              // -> [ROMTableBase <= 0xE00FD000]
[19:54:23.594]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:54:23.594]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.595]              // -> [pidr1 <= 0x00000004]
[19:54:23.595]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:54:23.595]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.595]              // -> [pidr2 <= 0x0000001A]
[19:54:23.596]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:54:23.596]              // -> [jep106id <= 0x00000020]
[19:54:23.596]          </block>
[19:54:23.596]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:54:23.596]            // if-block "jep106id != 0x20"
[19:54:23.596]              // =>  FALSE
[19:54:23.596]            // skip if-block "jep106id != 0x20"
[19:54:23.597]          </control>
[19:54:23.597]        </sequence>
[19:54:23.597]    </block>
[19:54:23.597]  </sequence>
[19:54:23.597]  
[19:54:23.612]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:54:23.612]  
[19:54:23.613]  <debugvars>
[19:54:23.613]    // Pre-defined
[19:54:23.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:54:23.613]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:54:23.613]    __dp=0x00000000
[19:54:23.613]    __ap=0x00000000
[19:54:23.613]    __traceout=0x00000001      (SWO Trace)
[19:54:23.614]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:54:23.614]    __FlashAddr=0x00000000
[19:54:23.614]    __FlashLen=0x00000000
[19:54:23.614]    __FlashArg=0x00000000
[19:54:23.614]    __FlashOp=0x00000000
[19:54:23.614]    __Result=0x00000000
[19:54:23.615]    
[19:54:23.615]    // User-defined
[19:54:23.615]    DbgMCU_CR=0x00000007
[19:54:23.615]    DbgMCU_APB1_Fz=0x00000000
[19:54:23.615]    DbgMCU_APB2_Fz=0x00000000
[19:54:23.615]    TraceClk_Pin=0x00040002
[19:54:23.616]    TraceD0_Pin=0x00040003
[19:54:23.616]    TraceD1_Pin=0x00040004
[19:54:23.616]    TraceD2_Pin=0x00040005
[19:54:23.616]    TraceD3_Pin=0x00040006
[19:54:23.616]  </debugvars>
[19:54:23.616]  
[19:54:23.617]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:54:23.617]    <block atomic="false" info="">
[19:54:23.617]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:54:23.618]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.618]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:54:23.618]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.618]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:54:23.619]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.619]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:54:23.619]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.619]    </block>
[19:54:23.619]  </sequence>
[19:54:23.620]  
[19:54:23.636]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:54:23.636]  
[19:54:23.636]  <debugvars>
[19:54:23.636]    // Pre-defined
[19:54:23.636]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:54:23.636]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:54:23.637]    __dp=0x00000000
[19:54:23.637]    __ap=0x00000000
[19:54:23.637]    __traceout=0x00000001      (SWO Trace)
[19:54:23.637]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:54:23.637]    __FlashAddr=0x00000000
[19:54:23.638]    __FlashLen=0x00000000
[19:54:23.638]    __FlashArg=0x00000000
[19:54:23.638]    __FlashOp=0x00000000
[19:54:23.638]    __Result=0x00000000
[19:54:23.638]    
[19:54:23.638]    // User-defined
[19:54:23.639]    DbgMCU_CR=0x00000007
[19:54:23.639]    DbgMCU_APB1_Fz=0x00000000
[19:54:23.639]    DbgMCU_APB2_Fz=0x00000000
[19:54:23.639]    TraceClk_Pin=0x00040002
[19:54:23.639]    TraceD0_Pin=0x00040003
[19:54:23.640]    TraceD1_Pin=0x00040004
[19:54:23.640]    TraceD2_Pin=0x00040005
[19:54:23.640]    TraceD3_Pin=0x00040006
[19:54:23.640]  </debugvars>
[19:54:23.640]  
[19:54:23.641]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:54:23.641]    <block atomic="false" info="">
[19:54:23.641]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:54:23.641]        // -> [traceSWO <= 0x00000001]
[19:54:23.641]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:54:23.642]        // -> [traceTPIU <= 0x00000000]
[19:54:23.642]    </block>
[19:54:23.642]    <control if="traceSWO" while="" timeout="0" info="">
[19:54:23.642]      // if-block "traceSWO"
[19:54:23.642]        // =>  TRUE
[19:54:23.643]      <block atomic="false" info="">
[19:54:23.643]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:54:23.643]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:54:23.643]            <block atomic="false" info="">
[19:54:23.643]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:54:23.643]                // -> [dbgmcu_val <= 0x00000000]
[19:54:23.644]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:54:23.644]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:54:23.644]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:54:23.645]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.645]                // -> [dbgmcu_val <= 0x00000007]
[19:54:23.645]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:54:23.645]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:54:23.645]              Sequence("ConfigureTraceSWOPin");
[19:54:23.646]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:54:23.646]                  <block atomic="false" info="">
[19:54:23.646]                    __var pin     = 0;
[19:54:23.646]                      // -> [pin <= 0x00000000]
[19:54:23.646]                    __var port    = 0;
[19:54:23.646]                      // -> [port <= 0x00000000]
[19:54:23.647]                    __var portAdr = 0;
[19:54:23.647]                      // -> [portAdr <= 0x00000000]
[19:54:23.647]                    __var pos     = 0;
[19:54:23.647]                      // -> [pos <= 0x00000000]
[19:54:23.647]                    __var SWO_Pin = 0x00010003;          // PB3
[19:54:23.647]                      // -> [SWO_Pin <= 0x00010003]
[19:54:23.647]                  </block>
[19:54:23.648]                  <block atomic="false" info="configure SWO">
[19:54:23.648]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:54:23.648]                      // -> [pin <= 0x00000003]
[19:54:23.648]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:54:23.648]                      // -> [port <= 0x00000001]
[19:54:23.648]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:54:23.648]                      // -> [portAdr <= 0x40020400]
[19:54:23.649]                    pos = pin * 2;
[19:54:23.649]                      // -> [pos <= 0x00000006]
[19:54:23.649]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:54:23.649]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.650]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.650]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:54:23.650]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.651]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.651]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:54:23.652]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.653]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.653]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:54:23.653]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.653]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.653]                  </block>
[19:54:23.653]                  <control if="pin <  8" while="" timeout="0" info="">
[19:54:23.653]                    // if-block "pin <  8"
[19:54:23.653]                      // =>  TRUE
[19:54:23.653]                    <block atomic="false" info="">
[19:54:23.654]                      pos = ((pin    ) & 7) * 4;
[19:54:23.654]                        // -> [pos <= 0x0000000C]
[19:54:23.654]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:54:23.654]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.655]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.655]                    </block>
[19:54:23.655]                    // end if-block "pin <  8"
[19:54:23.655]                  </control>
[19:54:23.655]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:54:23.655]                    // if-block "pin >= 8"
[19:54:23.655]                      // =>  FALSE
[19:54:23.655]                    // skip if-block "pin >= 8"
[19:54:23.656]                  </control>
[19:54:23.656]                </sequence>
[19:54:23.656]            </block>
[19:54:23.656]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:54:23.656]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:54:23.656]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.657]            </block>
[19:54:23.657]          </sequence>
[19:54:23.657]      </block>
[19:54:23.657]      // end if-block "traceSWO"
[19:54:23.657]    </control>
[19:54:23.657]    <control if="traceTPIU" while="" timeout="0" info="">
[19:54:23.657]      // if-block "traceTPIU"
[19:54:23.658]        // =>  FALSE
[19:54:23.658]      // skip if-block "traceTPIU"
[19:54:23.658]    </control>
[19:54:23.658]  </sequence>
[19:54:23.658]  
[19:54:23.662]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:54:23.662]  
[19:54:23.662]  <debugvars>
[19:54:23.663]    // Pre-defined
[19:54:23.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:54:23.663]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:54:23.663]    __dp=0x00000000
[19:54:23.663]    __ap=0x00000000
[19:54:23.664]    __traceout=0x00000001      (SWO Trace)
[19:54:23.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:54:23.664]    __FlashAddr=0x00000000
[19:54:23.664]    __FlashLen=0x00000000
[19:54:23.664]    __FlashArg=0x00000000
[19:54:23.665]    __FlashOp=0x00000000
[19:54:23.665]    __Result=0x00000000
[19:54:23.665]    
[19:54:23.665]    // User-defined
[19:54:23.665]    DbgMCU_CR=0x00000007
[19:54:23.665]    DbgMCU_APB1_Fz=0x00000000
[19:54:23.665]    DbgMCU_APB2_Fz=0x00000000
[19:54:23.666]    TraceClk_Pin=0x00040002
[19:54:23.666]    TraceD0_Pin=0x00040003
[19:54:23.666]    TraceD1_Pin=0x00040004
[19:54:23.666]    TraceD2_Pin=0x00040005
[19:54:23.667]    TraceD3_Pin=0x00040006
[19:54:23.667]  </debugvars>
[19:54:23.667]  
[19:54:23.667]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:54:23.667]    <block atomic="false" info="">
[19:54:23.667]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:54:23.668]        // -> [traceSWO <= 0x00000001]
[19:54:23.668]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:54:23.668]        // -> [traceTPIU <= 0x00000000]
[19:54:23.668]    </block>
[19:54:23.668]    <control if="traceSWO" while="" timeout="0" info="">
[19:54:23.669]      // if-block "traceSWO"
[19:54:23.669]        // =>  TRUE
[19:54:23.669]      <block atomic="false" info="">
[19:54:23.669]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:54:23.669]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:54:23.669]            <block atomic="false" info="">
[19:54:23.670]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:54:23.670]                // -> [dbgmcu_val <= 0x00000000]
[19:54:23.670]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:54:23.670]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:54:23.670]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:54:23.671]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.671]                // -> [dbgmcu_val <= 0x00000007]
[19:54:23.671]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:54:23.671]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:54:23.671]              Sequence("ConfigureTraceSWOPin");
[19:54:23.672]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:54:23.672]                  <block atomic="false" info="">
[19:54:23.672]                    __var pin     = 0;
[19:54:23.672]                      // -> [pin <= 0x00000000]
[19:54:23.672]                    __var port    = 0;
[19:54:23.672]                      // -> [port <= 0x00000000]
[19:54:23.672]                    __var portAdr = 0;
[19:54:23.673]                      // -> [portAdr <= 0x00000000]
[19:54:23.673]                    __var pos     = 0;
[19:54:23.673]                      // -> [pos <= 0x00000000]
[19:54:23.673]                    __var SWO_Pin = 0x00010003;          // PB3
[19:54:23.673]                      // -> [SWO_Pin <= 0x00010003]
[19:54:23.673]                  </block>
[19:54:23.673]                  <block atomic="false" info="configure SWO">
[19:54:23.673]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:54:23.673]                      // -> [pin <= 0x00000003]
[19:54:23.674]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:54:23.674]                      // -> [port <= 0x00000001]
[19:54:23.674]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:54:23.674]                      // -> [portAdr <= 0x40020400]
[19:54:23.674]                    pos = pin * 2;
[19:54:23.674]                      // -> [pos <= 0x00000006]
[19:54:23.674]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:54:23.675]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.675]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.675]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:54:23.676]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.676]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.676]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:54:23.677]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.677]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.677]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:54:23.678]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.678]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.678]                  </block>
[19:54:23.678]                  <control if="pin <  8" while="" timeout="0" info="">
[19:54:23.679]                    // if-block "pin <  8"
[19:54:23.679]                      // =>  TRUE
[19:54:23.679]                    <block atomic="false" info="">
[19:54:23.679]                      pos = ((pin    ) & 7) * 4;
[19:54:23.679]                        // -> [pos <= 0x0000000C]
[19:54:23.679]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:54:23.680]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.680]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.680]                    </block>
[19:54:23.680]                    // end if-block "pin <  8"
[19:54:23.680]                  </control>
[19:54:23.680]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:54:23.680]                    // if-block "pin >= 8"
[19:54:23.681]                      // =>  FALSE
[19:54:23.681]                    // skip if-block "pin >= 8"
[19:54:23.681]                  </control>
[19:54:23.681]                </sequence>
[19:54:23.681]            </block>
[19:54:23.681]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:54:23.681]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:54:23.682]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.682]            </block>
[19:54:23.682]          </sequence>
[19:54:23.682]      </block>
[19:54:23.682]      // end if-block "traceSWO"
[19:54:23.682]    </control>
[19:54:23.682]    <control if="traceTPIU" while="" timeout="0" info="">
[19:54:23.682]      // if-block "traceTPIU"
[19:54:23.683]        // =>  FALSE
[19:54:23.683]      // skip if-block "traceTPIU"
[19:54:23.683]    </control>
[19:54:23.683]  </sequence>
[19:54:23.683]  
[19:54:23.895]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:54:23.895]  
[19:54:23.895]  <debugvars>
[19:54:23.896]    // Pre-defined
[19:54:23.896]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:54:23.896]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:54:23.896]    __dp=0x00000000
[19:54:23.896]    __ap=0x00000000
[19:54:23.897]    __traceout=0x00000001      (SWO Trace)
[19:54:23.897]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:54:23.897]    __FlashAddr=0x00000000
[19:54:23.897]    __FlashLen=0x00000000
[19:54:23.897]    __FlashArg=0x00000000
[19:54:23.897]    __FlashOp=0x00000000
[19:54:23.897]    __Result=0x00000000
[19:54:23.898]    
[19:54:23.898]    // User-defined
[19:54:23.898]    DbgMCU_CR=0x00000007
[19:54:23.898]    DbgMCU_APB1_Fz=0x00000000
[19:54:23.898]    DbgMCU_APB2_Fz=0x00000000
[19:54:23.898]    TraceClk_Pin=0x00040002
[19:54:23.898]    TraceD0_Pin=0x00040003
[19:54:23.898]    TraceD1_Pin=0x00040004
[19:54:23.898]    TraceD2_Pin=0x00040005
[19:54:23.899]    TraceD3_Pin=0x00040006
[19:54:23.899]  </debugvars>
[19:54:23.899]  
[19:54:23.899]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:54:23.899]    <block atomic="false" info="">
[19:54:23.899]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:54:23.899]        // -> [traceSWO <= 0x00000001]
[19:54:23.899]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:54:23.899]        // -> [traceTPIU <= 0x00000000]
[19:54:23.900]    </block>
[19:54:23.900]    <control if="traceSWO" while="" timeout="0" info="">
[19:54:23.900]      // if-block "traceSWO"
[19:54:23.900]        // =>  TRUE
[19:54:23.900]      <block atomic="false" info="">
[19:54:23.900]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:54:23.900]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:54:23.900]            <block atomic="false" info="">
[19:54:23.901]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:54:23.901]                // -> [dbgmcu_val <= 0x00000000]
[19:54:23.901]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:54:23.901]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:54:23.901]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:54:23.901]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.902]                // -> [dbgmcu_val <= 0x00000007]
[19:54:23.902]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:54:23.902]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:54:23.902]              Sequence("ConfigureTraceSWOPin");
[19:54:23.902]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:54:23.902]                  <block atomic="false" info="">
[19:54:23.902]                    __var pin     = 0;
[19:54:23.902]                      // -> [pin <= 0x00000000]
[19:54:23.902]                    __var port    = 0;
[19:54:23.903]                      // -> [port <= 0x00000000]
[19:54:23.903]                    __var portAdr = 0;
[19:54:23.903]                      // -> [portAdr <= 0x00000000]
[19:54:23.903]                    __var pos     = 0;
[19:54:23.903]                      // -> [pos <= 0x00000000]
[19:54:23.903]                    __var SWO_Pin = 0x00010003;          // PB3
[19:54:23.903]                      // -> [SWO_Pin <= 0x00010003]
[19:54:23.903]                  </block>
[19:54:23.903]                  <block atomic="false" info="configure SWO">
[19:54:23.904]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:54:23.904]                      // -> [pin <= 0x00000003]
[19:54:23.904]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:54:23.904]                      // -> [port <= 0x00000001]
[19:54:23.904]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:54:23.904]                      // -> [portAdr <= 0x40020400]
[19:54:23.904]                    pos = pin * 2;
[19:54:23.905]                      // -> [pos <= 0x00000006]
[19:54:23.905]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:54:23.905]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.906]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.906]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:54:23.906]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.907]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.907]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:54:23.908]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.908]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.908]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:54:23.909]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.910]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.910]                  </block>
[19:54:23.910]                  <control if="pin <  8" while="" timeout="0" info="">
[19:54:23.910]                    // if-block "pin <  8"
[19:54:23.910]                      // =>  TRUE
[19:54:23.910]                    <block atomic="false" info="">
[19:54:23.910]                      pos = ((pin    ) & 7) * 4;
[19:54:23.910]                        // -> [pos <= 0x0000000C]
[19:54:23.910]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:54:23.910]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.911]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.911]                    </block>
[19:54:23.911]                    // end if-block "pin <  8"
[19:54:23.911]                  </control>
[19:54:23.911]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:54:23.911]                    // if-block "pin >= 8"
[19:54:23.912]                      // =>  FALSE
[19:54:23.912]                    // skip if-block "pin >= 8"
[19:54:23.912]                  </control>
[19:54:23.912]                </sequence>
[19:54:23.912]            </block>
[19:54:23.912]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:54:23.912]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:54:23.913]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:54:23.913]            </block>
[19:54:23.913]          </sequence>
[19:54:23.913]      </block>
[19:54:23.913]      // end if-block "traceSWO"
[19:54:23.913]    </control>
[19:54:23.914]    <control if="traceTPIU" while="" timeout="0" info="">
[19:54:23.914]      // if-block "traceTPIU"
[19:54:23.914]        // =>  FALSE
[19:54:23.914]      // skip if-block "traceTPIU"
[19:54:23.914]    </control>
[19:54:23.914]  </sequence>
[19:54:23.914]  
[19:55:45.757]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:55:45.757]  
[19:55:45.758]  <debugvars>
[19:55:45.758]    // Pre-defined
[19:55:45.758]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:55:45.758]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:55:45.758]    __dp=0x00000000
[19:55:45.758]    __ap=0x00000000
[19:55:45.758]    __traceout=0x00000001      (SWO Trace)
[19:55:45.759]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:55:45.759]    __FlashAddr=0x00000000
[19:55:45.759]    __FlashLen=0x00000000
[19:55:45.759]    __FlashArg=0x00000000
[19:55:45.759]    __FlashOp=0x00000000
[19:55:45.759]    __Result=0x00000000
[19:55:45.759]    
[19:55:45.759]    // User-defined
[19:55:45.760]    DbgMCU_CR=0x00000007
[19:55:45.760]    DbgMCU_APB1_Fz=0x00000000
[19:55:45.760]    DbgMCU_APB2_Fz=0x00000000
[19:55:45.760]    TraceClk_Pin=0x00040002
[19:55:45.760]    TraceD0_Pin=0x00040003
[19:55:45.760]    TraceD1_Pin=0x00040004
[19:55:45.760]    TraceD2_Pin=0x00040005
[19:55:45.761]    TraceD3_Pin=0x00040006
[19:55:45.761]  </debugvars>
[19:55:45.761]  
[19:55:45.761]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:55:45.761]    <block atomic="false" info="">
[19:55:45.761]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:55:45.761]        // -> [traceSWO <= 0x00000001]
[19:55:45.761]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:55:45.761]        // -> [traceTPIU <= 0x00000000]
[19:55:45.762]    </block>
[19:55:45.762]    <control if="traceSWO" while="" timeout="0" info="">
[19:55:45.762]      // if-block "traceSWO"
[19:55:45.762]        // =>  TRUE
[19:55:45.762]      <block atomic="false" info="">
[19:55:45.762]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:55:45.762]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:55:45.762]            <block atomic="false" info="">
[19:55:45.763]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:55:45.763]                // -> [dbgmcu_val <= 0x00000000]
[19:55:45.763]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:55:45.763]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:55:45.763]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:55:45.764]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.764]                // -> [dbgmcu_val <= 0x00000007]
[19:55:45.764]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:55:45.764]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:55:45.764]              Sequence("ConfigureTraceSWOPin");
[19:55:45.764]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:55:45.764]                  <block atomic="false" info="">
[19:55:45.764]                    __var pin     = 0;
[19:55:45.765]                      // -> [pin <= 0x00000000]
[19:55:45.765]                    __var port    = 0;
[19:55:45.765]                      // -> [port <= 0x00000000]
[19:55:45.765]                    __var portAdr = 0;
[19:55:45.765]                      // -> [portAdr <= 0x00000000]
[19:55:45.765]                    __var pos     = 0;
[19:55:45.765]                      // -> [pos <= 0x00000000]
[19:55:45.765]                    __var SWO_Pin = 0x00010003;          // PB3
[19:55:45.766]                      // -> [SWO_Pin <= 0x00010003]
[19:55:45.766]                  </block>
[19:55:45.766]                  <block atomic="false" info="configure SWO">
[19:55:45.766]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:55:45.766]                      // -> [pin <= 0x00000003]
[19:55:45.766]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:55:45.766]                      // -> [port <= 0x00000001]
[19:55:45.766]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:55:45.766]                      // -> [portAdr <= 0x40020400]
[19:55:45.767]                    pos = pin * 2;
[19:55:45.767]                      // -> [pos <= 0x00000006]
[19:55:45.767]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:55:45.767]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.768]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.768]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:55:45.768]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.769]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.769]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:55:45.769]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.770]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.770]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:55:45.770]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.771]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.771]                  </block>
[19:55:45.771]                  <control if="pin <  8" while="" timeout="0" info="">
[19:55:45.771]                    // if-block "pin <  8"
[19:55:45.771]                      // =>  TRUE
[19:55:45.771]                    <block atomic="false" info="">
[19:55:45.771]                      pos = ((pin    ) & 7) * 4;
[19:55:45.772]                        // -> [pos <= 0x0000000C]
[19:55:45.772]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:55:45.772]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.773]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.773]                    </block>
[19:55:45.773]                    // end if-block "pin <  8"
[19:55:45.773]                  </control>
[19:55:45.773]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:55:45.773]                    // if-block "pin >= 8"
[19:55:45.773]                      // =>  FALSE
[19:55:45.773]                    // skip if-block "pin >= 8"
[19:55:45.774]                  </control>
[19:55:45.774]                </sequence>
[19:55:45.774]            </block>
[19:55:45.774]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:55:45.774]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:55:45.774]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:55:45.775]            </block>
[19:55:45.775]          </sequence>
[19:55:45.775]      </block>
[19:55:45.775]      // end if-block "traceSWO"
[19:55:45.775]    </control>
[19:55:45.775]    <control if="traceTPIU" while="" timeout="0" info="">
[19:55:45.775]      // if-block "traceTPIU"
[19:55:45.776]        // =>  FALSE
[19:55:45.776]      // skip if-block "traceTPIU"
[19:55:45.776]    </control>
[19:55:45.776]  </sequence>
[19:55:45.776]  
[19:56:06.096]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:56:06.096]  
[19:56:06.097]  <debugvars>
[19:56:06.097]    // Pre-defined
[19:56:06.097]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:56:06.097]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:56:06.098]    __dp=0x00000000
[19:56:06.098]    __ap=0x00000000
[19:56:06.098]    __traceout=0x00000001      (SWO Trace)
[19:56:06.098]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:56:06.098]    __FlashAddr=0x00000000
[19:56:06.098]    __FlashLen=0x00000000
[19:56:06.099]    __FlashArg=0x00000000
[19:56:06.099]    __FlashOp=0x00000000
[19:56:06.099]    __Result=0x00000000
[19:56:06.099]    
[19:56:06.099]    // User-defined
[19:56:06.099]    DbgMCU_CR=0x00000007
[19:56:06.099]    DbgMCU_APB1_Fz=0x00000000
[19:56:06.099]    DbgMCU_APB2_Fz=0x00000000
[19:56:06.100]    TraceClk_Pin=0x00040002
[19:56:06.100]    TraceD0_Pin=0x00040003
[19:56:06.100]    TraceD1_Pin=0x00040004
[19:56:06.100]    TraceD2_Pin=0x00040005
[19:56:06.100]    TraceD3_Pin=0x00040006
[19:56:06.100]  </debugvars>
[19:56:06.100]  
[19:56:06.100]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:56:06.100]    <block atomic="false" info="">
[19:56:06.101]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:56:06.101]        // -> [traceSWO <= 0x00000001]
[19:56:06.101]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:56:06.101]        // -> [traceTPIU <= 0x00000000]
[19:56:06.101]    </block>
[19:56:06.101]    <control if="traceSWO" while="" timeout="0" info="">
[19:56:06.101]      // if-block "traceSWO"
[19:56:06.101]        // =>  TRUE
[19:56:06.102]      <block atomic="false" info="">
[19:56:06.102]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:56:06.102]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:56:06.102]            <block atomic="false" info="">
[19:56:06.102]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:56:06.102]                // -> [dbgmcu_val <= 0x00000000]
[19:56:06.102]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:56:06.102]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:56:06.102]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:56:06.103]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.103]                // -> [dbgmcu_val <= 0x00000007]
[19:56:06.103]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:56:06.103]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:56:06.103]              Sequence("ConfigureTraceSWOPin");
[19:56:06.103]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:56:06.104]                  <block atomic="false" info="">
[19:56:06.104]                    __var pin     = 0;
[19:56:06.104]                      // -> [pin <= 0x00000000]
[19:56:06.104]                    __var port    = 0;
[19:56:06.104]                      // -> [port <= 0x00000000]
[19:56:06.104]                    __var portAdr = 0;
[19:56:06.104]                      // -> [portAdr <= 0x00000000]
[19:56:06.104]                    __var pos     = 0;
[19:56:06.104]                      // -> [pos <= 0x00000000]
[19:56:06.105]                    __var SWO_Pin = 0x00010003;          // PB3
[19:56:06.105]                      // -> [SWO_Pin <= 0x00010003]
[19:56:06.105]                  </block>
[19:56:06.105]                  <block atomic="false" info="configure SWO">
[19:56:06.105]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:56:06.105]                      // -> [pin <= 0x00000003]
[19:56:06.105]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:56:06.105]                      // -> [port <= 0x00000001]
[19:56:06.105]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:56:06.106]                      // -> [portAdr <= 0x40020400]
[19:56:06.106]                    pos = pin * 2;
[19:56:06.106]                      // -> [pos <= 0x00000006]
[19:56:06.106]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:56:06.106]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.107]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.107]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:56:06.107]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.108]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.108]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:56:06.108]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.109]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.109]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:56:06.109]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.110]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.110]                  </block>
[19:56:06.110]                  <control if="pin <  8" while="" timeout="0" info="">
[19:56:06.110]                    // if-block "pin <  8"
[19:56:06.110]                      // =>  TRUE
[19:56:06.111]                    <block atomic="false" info="">
[19:56:06.111]                      pos = ((pin    ) & 7) * 4;
[19:56:06.111]                        // -> [pos <= 0x0000000C]
[19:56:06.111]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:56:06.111]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.112]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.112]                    </block>
[19:56:06.112]                    // end if-block "pin <  8"
[19:56:06.113]                  </control>
[19:56:06.113]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:56:06.113]                    // if-block "pin >= 8"
[19:56:06.113]                      // =>  FALSE
[19:56:06.113]                    // skip if-block "pin >= 8"
[19:56:06.113]                  </control>
[19:56:06.113]                </sequence>
[19:56:06.113]            </block>
[19:56:06.114]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:56:06.114]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:56:06.114]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:06.114]            </block>
[19:56:06.114]          </sequence>
[19:56:06.114]      </block>
[19:56:06.115]      // end if-block "traceSWO"
[19:56:06.115]    </control>
[19:56:06.115]    <control if="traceTPIU" while="" timeout="0" info="">
[19:56:06.115]      // if-block "traceTPIU"
[19:56:06.115]        // =>  FALSE
[19:56:06.115]      // skip if-block "traceTPIU"
[19:56:06.115]    </control>
[19:56:06.115]  </sequence>
[19:56:06.115]  
[19:56:52.066]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:56:52.066]  
[19:56:52.067]  <debugvars>
[19:56:52.068]    // Pre-defined
[19:56:52.068]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:56:52.068]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:56:52.068]    __dp=0x00000000
[19:56:52.068]    __ap=0x00000000
[19:56:52.069]    __traceout=0x00000001      (SWO Trace)
[19:56:52.069]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:56:52.069]    __FlashAddr=0x00000000
[19:56:52.069]    __FlashLen=0x00000000
[19:56:52.069]    __FlashArg=0x00000000
[19:56:52.069]    __FlashOp=0x00000000
[19:56:52.070]    __Result=0x00000000
[19:56:52.070]    
[19:56:52.070]    // User-defined
[19:56:52.070]    DbgMCU_CR=0x00000007
[19:56:52.070]    DbgMCU_APB1_Fz=0x00000000
[19:56:52.070]    DbgMCU_APB2_Fz=0x00000000
[19:56:52.071]    TraceClk_Pin=0x00040002
[19:56:52.071]    TraceD0_Pin=0x00040003
[19:56:52.071]    TraceD1_Pin=0x00040004
[19:56:52.071]    TraceD2_Pin=0x00040005
[19:56:52.071]    TraceD3_Pin=0x00040006
[19:56:52.071]  </debugvars>
[19:56:52.072]  
[19:56:52.072]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:56:52.072]    <block atomic="false" info="">
[19:56:52.072]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:56:52.072]        // -> [traceSWO <= 0x00000001]
[19:56:52.072]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:56:52.072]        // -> [traceTPIU <= 0x00000000]
[19:56:52.072]    </block>
[19:56:52.073]    <control if="traceSWO" while="" timeout="0" info="">
[19:56:52.073]      // if-block "traceSWO"
[19:56:52.073]        // =>  TRUE
[19:56:52.073]      <block atomic="false" info="">
[19:56:52.073]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:56:52.073]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:56:52.073]            <block atomic="false" info="">
[19:56:52.074]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:56:52.074]                // -> [dbgmcu_val <= 0x00000000]
[19:56:52.074]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:56:52.074]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:56:52.074]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:56:52.075]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.075]                // -> [dbgmcu_val <= 0x00000007]
[19:56:52.075]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:56:52.075]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:56:52.075]              Sequence("ConfigureTraceSWOPin");
[19:56:52.075]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:56:52.075]                  <block atomic="false" info="">
[19:56:52.076]                    __var pin     = 0;
[19:56:52.076]                      // -> [pin <= 0x00000000]
[19:56:52.076]                    __var port    = 0;
[19:56:52.076]                      // -> [port <= 0x00000000]
[19:56:52.076]                    __var portAdr = 0;
[19:56:52.076]                      // -> [portAdr <= 0x00000000]
[19:56:52.076]                    __var pos     = 0;
[19:56:52.076]                      // -> [pos <= 0x00000000]
[19:56:52.077]                    __var SWO_Pin = 0x00010003;          // PB3
[19:56:52.077]                      // -> [SWO_Pin <= 0x00010003]
[19:56:52.077]                  </block>
[19:56:52.077]                  <block atomic="false" info="configure SWO">
[19:56:52.077]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:56:52.077]                      // -> [pin <= 0x00000003]
[19:56:52.077]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:56:52.077]                      // -> [port <= 0x00000001]
[19:56:52.078]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:56:52.078]                      // -> [portAdr <= 0x40020400]
[19:56:52.078]                    pos = pin * 2;
[19:56:52.078]                      // -> [pos <= 0x00000006]
[19:56:52.078]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:56:52.079]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.079]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.079]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:56:52.080]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.080]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.081]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:56:52.081]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.081]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.082]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:56:52.082]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.082]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.083]                  </block>
[19:56:52.083]                  <control if="pin <  8" while="" timeout="0" info="">
[19:56:52.083]                    // if-block "pin <  8"
[19:56:52.083]                      // =>  TRUE
[19:56:52.083]                    <block atomic="false" info="">
[19:56:52.083]                      pos = ((pin    ) & 7) * 4;
[19:56:52.084]                        // -> [pos <= 0x0000000C]
[19:56:52.084]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:56:52.084]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.085]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.085]                    </block>
[19:56:52.085]                    // end if-block "pin <  8"
[19:56:52.085]                  </control>
[19:56:52.085]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:56:52.085]                    // if-block "pin >= 8"
[19:56:52.085]                      // =>  FALSE
[19:56:52.085]                    // skip if-block "pin >= 8"
[19:56:52.086]                  </control>
[19:56:52.086]                </sequence>
[19:56:52.086]            </block>
[19:56:52.086]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:56:52.086]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:56:52.087]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:52.087]            </block>
[19:56:52.087]          </sequence>
[19:56:52.087]      </block>
[19:56:52.087]      // end if-block "traceSWO"
[19:56:52.087]    </control>
[19:56:52.087]    <control if="traceTPIU" while="" timeout="0" info="">
[19:56:52.088]      // if-block "traceTPIU"
[19:56:52.088]        // =>  FALSE
[19:56:52.088]      // skip if-block "traceTPIU"
[19:56:52.088]    </control>
[19:56:52.088]  </sequence>
[19:56:52.088]  
[19:57:24.580]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:57:24.580]  
[19:57:24.580]  <debugvars>
[19:57:24.581]    // Pre-defined
[19:57:24.581]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:24.581]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:24.581]    __dp=0x00000000
[19:57:24.581]    __ap=0x00000000
[19:57:24.581]    __traceout=0x00000001      (SWO Trace)
[19:57:24.582]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:24.582]    __FlashAddr=0x00000000
[19:57:24.582]    __FlashLen=0x00000000
[19:57:24.582]    __FlashArg=0x00000000
[19:57:24.582]    __FlashOp=0x00000000
[19:57:24.582]    __Result=0x00000000
[19:57:24.583]    
[19:57:24.583]    // User-defined
[19:57:24.583]    DbgMCU_CR=0x00000007
[19:57:24.583]    DbgMCU_APB1_Fz=0x00000000
[19:57:24.583]    DbgMCU_APB2_Fz=0x00000000
[19:57:24.583]    TraceClk_Pin=0x00040002
[19:57:24.584]    TraceD0_Pin=0x00040003
[19:57:24.584]    TraceD1_Pin=0x00040004
[19:57:24.584]    TraceD2_Pin=0x00040005
[19:57:24.584]    TraceD3_Pin=0x00040006
[19:57:24.584]  </debugvars>
[19:57:24.584]  
[19:57:24.585]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:24.585]    <block atomic="false" info="">
[19:57:24.585]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:24.585]        // -> [traceSWO <= 0x00000001]
[19:57:24.585]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:24.585]        // -> [traceTPIU <= 0x00000000]
[19:57:24.585]    </block>
[19:57:24.586]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:24.586]      // if-block "traceSWO"
[19:57:24.586]        // =>  TRUE
[19:57:24.586]      <block atomic="false" info="">
[19:57:24.586]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:24.586]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:24.586]            <block atomic="false" info="">
[19:57:24.586]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:24.587]                // -> [dbgmcu_val <= 0x00000000]
[19:57:24.587]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:24.587]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:24.587]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:24.587]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.587]                // -> [dbgmcu_val <= 0x00000007]
[19:57:24.588]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:24.588]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:24.588]              Sequence("ConfigureTraceSWOPin");
[19:57:24.588]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:24.588]                  <block atomic="false" info="">
[19:57:24.588]                    __var pin     = 0;
[19:57:24.588]                      // -> [pin <= 0x00000000]
[19:57:24.589]                    __var port    = 0;
[19:57:24.589]                      // -> [port <= 0x00000000]
[19:57:24.589]                    __var portAdr = 0;
[19:57:24.589]                      // -> [portAdr <= 0x00000000]
[19:57:24.589]                    __var pos     = 0;
[19:57:24.589]                      // -> [pos <= 0x00000000]
[19:57:24.590]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:24.590]                      // -> [SWO_Pin <= 0x00010003]
[19:57:24.590]                  </block>
[19:57:24.590]                  <block atomic="false" info="configure SWO">
[19:57:24.590]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:24.590]                      // -> [pin <= 0x00000003]
[19:57:24.591]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:24.591]                      // -> [port <= 0x00000001]
[19:57:24.591]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:24.591]                      // -> [portAdr <= 0x40020400]
[19:57:24.591]                    pos = pin * 2;
[19:57:24.591]                      // -> [pos <= 0x00000006]
[19:57:24.591]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:24.592]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.592]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.592]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:24.593]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.593]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.594]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:24.594]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.594]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.595]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:24.595]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.595]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.595]                  </block>
[19:57:24.596]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:24.596]                    // if-block "pin <  8"
[19:57:24.596]                      // =>  TRUE
[19:57:24.596]                    <block atomic="false" info="">
[19:57:24.596]                      pos = ((pin    ) & 7) * 4;
[19:57:24.596]                        // -> [pos <= 0x0000000C]
[19:57:24.596]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:24.597]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.597]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.597]                    </block>
[19:57:24.598]                    // end if-block "pin <  8"
[19:57:24.598]                  </control>
[19:57:24.598]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:24.598]                    // if-block "pin >= 8"
[19:57:24.598]                      // =>  FALSE
[19:57:24.598]                    // skip if-block "pin >= 8"
[19:57:24.598]                  </control>
[19:57:24.599]                </sequence>
[19:57:24.599]            </block>
[19:57:24.599]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:24.599]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:24.599]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:24.600]            </block>
[19:57:24.600]          </sequence>
[19:57:24.600]      </block>
[19:57:24.600]      // end if-block "traceSWO"
[19:57:24.600]    </control>
[19:57:24.600]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:24.600]      // if-block "traceTPIU"
[19:57:24.600]        // =>  FALSE
[19:57:24.601]      // skip if-block "traceTPIU"
[19:57:24.601]    </control>
[19:57:24.601]  </sequence>
[19:57:24.601]  
[19:57:32.466]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:57:32.466]  
[19:57:32.469]  <debugvars>
[19:57:32.470]    // Pre-defined
[19:57:32.470]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:32.470]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:32.470]    __dp=0x00000000
[19:57:32.470]    __ap=0x00000000
[19:57:32.470]    __traceout=0x00000001      (SWO Trace)
[19:57:32.471]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:32.471]    __FlashAddr=0x00000000
[19:57:32.471]    __FlashLen=0x00000000
[19:57:32.471]    __FlashArg=0x00000000
[19:57:32.471]    __FlashOp=0x00000000
[19:57:32.471]    __Result=0x00000000
[19:57:32.471]    
[19:57:32.471]    // User-defined
[19:57:32.472]    DbgMCU_CR=0x00000007
[19:57:32.472]    DbgMCU_APB1_Fz=0x00000000
[19:57:32.472]    DbgMCU_APB2_Fz=0x00000000
[19:57:32.472]    TraceClk_Pin=0x00040002
[19:57:32.472]    TraceD0_Pin=0x00040003
[19:57:32.472]    TraceD1_Pin=0x00040004
[19:57:32.472]    TraceD2_Pin=0x00040005
[19:57:32.473]    TraceD3_Pin=0x00040006
[19:57:32.473]  </debugvars>
[19:57:32.473]  
[19:57:32.473]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:57:32.473]    <block atomic="false" info="">
[19:57:32.473]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:57:32.473]        // -> [traceSWO <= 0x00000001]
[19:57:32.474]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:57:32.474]        // -> [traceTPIU <= 0x00000000]
[19:57:32.474]    </block>
[19:57:32.474]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:32.474]      // if-block "traceSWO"
[19:57:32.474]        // =>  TRUE
[19:57:32.474]      <block atomic="false" info="">
[19:57:32.475]        Sequence("DisableTraceSWO");
[19:57:32.475]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:57:32.475]            <block atomic="false" info="">
[19:57:32.475]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:32.475]                // -> [dbgmcu_val <= 0x00000000]
[19:57:32.475]            </block>
[19:57:32.476]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:32.476]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:57:32.476]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:32.476]                // -> [dbgmcu_val <= 0x00000007]
[19:57:32.476]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:57:32.477]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:32.477]            </block>
[19:57:32.477]          </sequence>
[19:57:32.477]      </block>
[19:57:32.478]      // end if-block "traceSWO"
[19:57:32.478]    </control>
[19:57:32.478]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:32.478]      // if-block "traceTPIU"
[19:57:32.478]        // =>  FALSE
[19:57:32.478]      // skip if-block "traceTPIU"
[19:57:32.478]    </control>
[19:57:32.479]  </sequence>
[19:57:32.479]  
[19:59:55.873]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:59:55.873]  
[19:59:55.882]  <debugvars>
[19:59:55.882]    // Pre-defined
[19:59:55.882]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:59:55.882]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:59:55.882]    __dp=0x00000000
[19:59:55.882]    __ap=0x00000000
[19:59:55.882]    __traceout=0x00000001      (SWO Trace)
[19:59:55.882]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:59:55.883]    __FlashAddr=0x00000000
[19:59:55.883]    __FlashLen=0x00000000
[19:59:55.883]    __FlashArg=0x00000000
[19:59:55.883]    __FlashOp=0x00000000
[19:59:55.883]    __Result=0x00000000
[19:59:55.883]    
[19:59:55.883]    // User-defined
[19:59:55.883]    DbgMCU_CR=0x00000007
[19:59:55.884]    DbgMCU_APB1_Fz=0x00000000
[19:59:55.884]    DbgMCU_APB2_Fz=0x00000000
[19:59:55.884]    TraceClk_Pin=0x00040002
[19:59:55.884]    TraceD0_Pin=0x00040003
[19:59:55.884]    TraceD1_Pin=0x00040004
[19:59:55.884]    TraceD2_Pin=0x00040005
[19:59:55.884]    TraceD3_Pin=0x00040006
[19:59:55.885]  </debugvars>
[19:59:55.885]  
[19:59:55.885]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:59:55.885]    <block atomic="false" info="">
[19:59:55.885]      Sequence("CheckID");
[19:59:55.885]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:59:55.885]          <block atomic="false" info="">
[19:59:55.885]            __var pidr1 = 0;
[19:59:55.885]              // -> [pidr1 <= 0x00000000]
[19:59:55.886]            __var pidr2 = 0;
[19:59:55.886]              // -> [pidr2 <= 0x00000000]
[19:59:55.886]            __var jep106id = 0;
[19:59:55.886]              // -> [jep106id <= 0x00000000]
[19:59:55.886]            __var ROMTableBase = 0;
[19:59:55.886]              // -> [ROMTableBase <= 0x00000000]
[19:59:55.886]            __ap = 0;      // AHB-AP
[19:59:55.886]              // -> [__ap <= 0x00000000]
[19:59:55.887]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:59:55.887]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.887]              // -> [ROMTableBase <= 0xE00FD000]
[19:59:55.887]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:59:55.888]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.888]              // -> [pidr1 <= 0x00000004]
[19:59:55.888]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:59:55.888]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.889]              // -> [pidr2 <= 0x0000001A]
[19:59:55.889]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:59:55.889]              // -> [jep106id <= 0x00000020]
[19:59:55.889]          </block>
[19:59:55.889]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:59:55.889]            // if-block "jep106id != 0x20"
[19:59:55.890]              // =>  FALSE
[19:59:55.890]            // skip if-block "jep106id != 0x20"
[19:59:55.890]          </control>
[19:59:55.890]        </sequence>
[19:59:55.890]    </block>
[19:59:55.890]  </sequence>
[19:59:55.890]  
[19:59:55.905]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:59:55.905]  
[19:59:55.905]  <debugvars>
[19:59:55.905]    // Pre-defined
[19:59:55.905]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:59:55.906]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:59:55.906]    __dp=0x00000000
[19:59:55.906]    __ap=0x00000000
[19:59:55.906]    __traceout=0x00000001      (SWO Trace)
[19:59:55.906]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:59:55.906]    __FlashAddr=0x00000000
[19:59:55.907]    __FlashLen=0x00000000
[19:59:55.907]    __FlashArg=0x00000000
[19:59:55.907]    __FlashOp=0x00000000
[19:59:55.907]    __Result=0x00000000
[19:59:55.907]    
[19:59:55.907]    // User-defined
[19:59:55.907]    DbgMCU_CR=0x00000007
[19:59:55.907]    DbgMCU_APB1_Fz=0x00000000
[19:59:55.907]    DbgMCU_APB2_Fz=0x00000000
[19:59:55.908]    TraceClk_Pin=0x00040002
[19:59:55.908]    TraceD0_Pin=0x00040003
[19:59:55.908]    TraceD1_Pin=0x00040004
[19:59:55.908]    TraceD2_Pin=0x00040005
[19:59:55.908]    TraceD3_Pin=0x00040006
[19:59:55.908]  </debugvars>
[19:59:55.908]  
[19:59:55.909]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:59:55.909]    <block atomic="false" info="">
[19:59:55.909]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:59:55.909]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.909]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:59:55.910]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.910]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:59:55.910]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.911]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:59:55.911]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:59:55.911]    </block>
[19:59:55.911]  </sequence>
[19:59:55.911]  
[20:00:27.360]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:00:27.360]  
[20:00:27.360]  <debugvars>
[20:00:27.360]    // Pre-defined
[20:00:27.360]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:27.360]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:27.360]    __dp=0x00000000
[20:00:27.361]    __ap=0x00000000
[20:00:27.361]    __traceout=0x00000001      (SWO Trace)
[20:00:27.361]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:27.361]    __FlashAddr=0x00000000
[20:00:27.361]    __FlashLen=0x00000000
[20:00:27.361]    __FlashArg=0x00000000
[20:00:27.361]    __FlashOp=0x00000000
[20:00:27.361]    __Result=0x00000000
[20:00:27.362]    
[20:00:27.362]    // User-defined
[20:00:27.362]    DbgMCU_CR=0x00000007
[20:00:27.362]    DbgMCU_APB1_Fz=0x00000000
[20:00:27.362]    DbgMCU_APB2_Fz=0x00000000
[20:00:27.362]    TraceClk_Pin=0x00040002
[20:00:27.362]    TraceD0_Pin=0x00040003
[20:00:27.362]    TraceD1_Pin=0x00040004
[20:00:27.362]    TraceD2_Pin=0x00040005
[20:00:27.363]    TraceD3_Pin=0x00040006
[20:00:27.363]  </debugvars>
[20:00:27.363]  
[20:00:27.363]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:00:27.363]    <block atomic="false" info="">
[20:00:27.363]      Sequence("CheckID");
[20:00:27.363]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:00:27.363]          <block atomic="false" info="">
[20:00:27.364]            __var pidr1 = 0;
[20:00:27.364]              // -> [pidr1 <= 0x00000000]
[20:00:27.364]            __var pidr2 = 0;
[20:00:27.364]              // -> [pidr2 <= 0x00000000]
[20:00:27.364]            __var jep106id = 0;
[20:00:27.364]              // -> [jep106id <= 0x00000000]
[20:00:27.364]            __var ROMTableBase = 0;
[20:00:27.365]              // -> [ROMTableBase <= 0x00000000]
[20:00:27.365]            __ap = 0;      // AHB-AP
[20:00:27.365]              // -> [__ap <= 0x00000000]
[20:00:27.365]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:00:27.365]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.365]              // -> [ROMTableBase <= 0xE00FD000]
[20:00:27.366]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:00:27.366]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.366]              // -> [pidr1 <= 0x00000004]
[20:00:27.366]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:00:27.367]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.367]              // -> [pidr2 <= 0x0000001A]
[20:00:27.367]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:00:27.367]              // -> [jep106id <= 0x00000020]
[20:00:27.367]          </block>
[20:00:27.367]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:00:27.368]            // if-block "jep106id != 0x20"
[20:00:27.368]              // =>  FALSE
[20:00:27.368]            // skip if-block "jep106id != 0x20"
[20:00:27.368]          </control>
[20:00:27.368]        </sequence>
[20:00:27.368]    </block>
[20:00:27.368]  </sequence>
[20:00:27.368]  
[20:00:27.383]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:00:27.383]  
[20:00:27.383]  <debugvars>
[20:00:27.384]    // Pre-defined
[20:00:27.384]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:27.384]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:27.384]    __dp=0x00000000
[20:00:27.384]    __ap=0x00000000
[20:00:27.384]    __traceout=0x00000001      (SWO Trace)
[20:00:27.384]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:27.384]    __FlashAddr=0x00000000
[20:00:27.385]    __FlashLen=0x00000000
[20:00:27.385]    __FlashArg=0x00000000
[20:00:27.385]    __FlashOp=0x00000000
[20:00:27.385]    __Result=0x00000000
[20:00:27.385]    
[20:00:27.385]    // User-defined
[20:00:27.385]    DbgMCU_CR=0x00000007
[20:00:27.385]    DbgMCU_APB1_Fz=0x00000000
[20:00:27.385]    DbgMCU_APB2_Fz=0x00000000
[20:00:27.386]    TraceClk_Pin=0x00040002
[20:00:27.386]    TraceD0_Pin=0x00040003
[20:00:27.386]    TraceD1_Pin=0x00040004
[20:00:27.386]    TraceD2_Pin=0x00040005
[20:00:27.386]    TraceD3_Pin=0x00040006
[20:00:27.386]  </debugvars>
[20:00:27.386]  
[20:00:27.386]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:00:27.387]    <block atomic="false" info="">
[20:00:27.387]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:00:27.387]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.387]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:00:27.388]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.388]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:00:27.388]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.389]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:00:27.389]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.389]    </block>
[20:00:27.389]  </sequence>
[20:00:27.389]  
[20:00:27.406]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:00:27.406]  
[20:00:27.406]  <debugvars>
[20:00:27.406]    // Pre-defined
[20:00:27.406]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:27.406]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:27.406]    __dp=0x00000000
[20:00:27.407]    __ap=0x00000000
[20:00:27.407]    __traceout=0x00000001      (SWO Trace)
[20:00:27.407]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:27.407]    __FlashAddr=0x00000000
[20:00:27.407]    __FlashLen=0x00000000
[20:00:27.407]    __FlashArg=0x00000000
[20:00:27.408]    __FlashOp=0x00000000
[20:00:27.408]    __Result=0x00000000
[20:00:27.408]    
[20:00:27.408]    // User-defined
[20:00:27.408]    DbgMCU_CR=0x00000007
[20:00:27.408]    DbgMCU_APB1_Fz=0x00000000
[20:00:27.408]    DbgMCU_APB2_Fz=0x00000000
[20:00:27.408]    TraceClk_Pin=0x00040002
[20:00:27.409]    TraceD0_Pin=0x00040003
[20:00:27.409]    TraceD1_Pin=0x00040004
[20:00:27.409]    TraceD2_Pin=0x00040005
[20:00:27.409]    TraceD3_Pin=0x00040006
[20:00:27.409]  </debugvars>
[20:00:27.409]  
[20:00:27.409]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:00:27.410]    <block atomic="false" info="">
[20:00:27.410]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:00:27.410]        // -> [traceSWO <= 0x00000001]
[20:00:27.410]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:00:27.410]        // -> [traceTPIU <= 0x00000000]
[20:00:27.410]    </block>
[20:00:27.410]    <control if="traceSWO" while="" timeout="0" info="">
[20:00:27.411]      // if-block "traceSWO"
[20:00:27.411]        // =>  TRUE
[20:00:27.411]      <block atomic="false" info="">
[20:00:27.411]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:00:27.411]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:00:27.411]            <block atomic="false" info="">
[20:00:27.411]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:00:27.411]                // -> [dbgmcu_val <= 0x00000000]
[20:00:27.412]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:00:27.412]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:00:27.412]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:00:27.412]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.413]                // -> [dbgmcu_val <= 0x00000007]
[20:00:27.413]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:00:27.413]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:00:27.413]              Sequence("ConfigureTraceSWOPin");
[20:00:27.413]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:00:27.413]                  <block atomic="false" info="">
[20:00:27.413]                    __var pin     = 0;
[20:00:27.413]                      // -> [pin <= 0x00000000]
[20:00:27.413]                    __var port    = 0;
[20:00:27.414]                      // -> [port <= 0x00000000]
[20:00:27.414]                    __var portAdr = 0;
[20:00:27.414]                      // -> [portAdr <= 0x00000000]
[20:00:27.414]                    __var pos     = 0;
[20:00:27.414]                      // -> [pos <= 0x00000000]
[20:00:27.414]                    __var SWO_Pin = 0x00010003;          // PB3
[20:00:27.415]                      // -> [SWO_Pin <= 0x00010003]
[20:00:27.415]                  </block>
[20:00:27.415]                  <block atomic="false" info="configure SWO">
[20:00:27.415]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:00:27.415]                      // -> [pin <= 0x00000003]
[20:00:27.415]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:00:27.415]                      // -> [port <= 0x00000001]
[20:00:27.415]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:00:27.416]                      // -> [portAdr <= 0x40020400]
[20:00:27.416]                    pos = pin * 2;
[20:00:27.416]                      // -> [pos <= 0x00000006]
[20:00:27.416]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:00:27.417]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.417]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.417]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:00:27.418]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.418]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.418]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:00:27.419]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.419]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.419]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:00:27.420]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.420]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.420]                  </block>
[20:00:27.420]                  <control if="pin <  8" while="" timeout="0" info="">
[20:00:27.420]                    // if-block "pin <  8"
[20:00:27.421]                      // =>  TRUE
[20:00:27.421]                    <block atomic="false" info="">
[20:00:27.421]                      pos = ((pin    ) & 7) * 4;
[20:00:27.421]                        // -> [pos <= 0x0000000C]
[20:00:27.421]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:00:27.422]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.422]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.422]                    </block>
[20:00:27.422]                    // end if-block "pin <  8"
[20:00:27.422]                  </control>
[20:00:27.422]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:00:27.423]                    // if-block "pin >= 8"
[20:00:27.423]                      // =>  FALSE
[20:00:27.423]                    // skip if-block "pin >= 8"
[20:00:27.423]                  </control>
[20:00:27.423]                </sequence>
[20:00:27.423]            </block>
[20:00:27.423]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:00:27.424]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:00:27.424]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.424]            </block>
[20:00:27.424]          </sequence>
[20:00:27.424]      </block>
[20:00:27.425]      // end if-block "traceSWO"
[20:00:27.425]    </control>
[20:00:27.425]    <control if="traceTPIU" while="" timeout="0" info="">
[20:00:27.425]      // if-block "traceTPIU"
[20:00:27.425]        // =>  FALSE
[20:00:27.425]      // skip if-block "traceTPIU"
[20:00:27.425]    </control>
[20:00:27.425]  </sequence>
[20:00:27.426]  
[20:00:27.430]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:00:27.430]  
[20:00:27.430]  <debugvars>
[20:00:27.430]    // Pre-defined
[20:00:27.430]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:27.430]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:27.431]    __dp=0x00000000
[20:00:27.431]    __ap=0x00000000
[20:00:27.431]    __traceout=0x00000001      (SWO Trace)
[20:00:27.431]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:27.431]    __FlashAddr=0x00000000
[20:00:27.431]    __FlashLen=0x00000000
[20:00:27.431]    __FlashArg=0x00000000
[20:00:27.431]    __FlashOp=0x00000000
[20:00:27.432]    __Result=0x00000000
[20:00:27.432]    
[20:00:27.432]    // User-defined
[20:00:27.432]    DbgMCU_CR=0x00000007
[20:00:27.432]    DbgMCU_APB1_Fz=0x00000000
[20:00:27.432]    DbgMCU_APB2_Fz=0x00000000
[20:00:27.432]    TraceClk_Pin=0x00040002
[20:00:27.432]    TraceD0_Pin=0x00040003
[20:00:27.432]    TraceD1_Pin=0x00040004
[20:00:27.433]    TraceD2_Pin=0x00040005
[20:00:27.433]    TraceD3_Pin=0x00040006
[20:00:27.433]  </debugvars>
[20:00:27.433]  
[20:00:27.433]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:00:27.433]    <block atomic="false" info="">
[20:00:27.433]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:00:27.433]        // -> [traceSWO <= 0x00000001]
[20:00:27.434]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:00:27.434]        // -> [traceTPIU <= 0x00000000]
[20:00:27.434]    </block>
[20:00:27.434]    <control if="traceSWO" while="" timeout="0" info="">
[20:00:27.434]      // if-block "traceSWO"
[20:00:27.434]        // =>  TRUE
[20:00:27.434]      <block atomic="false" info="">
[20:00:27.434]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:00:27.435]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:00:27.435]            <block atomic="false" info="">
[20:00:27.435]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:00:27.435]                // -> [dbgmcu_val <= 0x00000000]
[20:00:27.435]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:00:27.435]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:00:27.435]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:00:27.436]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.436]                // -> [dbgmcu_val <= 0x00000007]
[20:00:27.436]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:00:27.436]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:00:27.436]              Sequence("ConfigureTraceSWOPin");
[20:00:27.436]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:00:27.436]                  <block atomic="false" info="">
[20:00:27.437]                    __var pin     = 0;
[20:00:27.437]                      // -> [pin <= 0x00000000]
[20:00:27.437]                    __var port    = 0;
[20:00:27.437]                      // -> [port <= 0x00000000]
[20:00:27.437]                    __var portAdr = 0;
[20:00:27.437]                      // -> [portAdr <= 0x00000000]
[20:00:27.437]                    __var pos     = 0;
[20:00:27.438]                      // -> [pos <= 0x00000000]
[20:00:27.438]                    __var SWO_Pin = 0x00010003;          // PB3
[20:00:27.438]                      // -> [SWO_Pin <= 0x00010003]
[20:00:27.438]                  </block>
[20:00:27.438]                  <block atomic="false" info="configure SWO">
[20:00:27.438]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:00:27.438]                      // -> [pin <= 0x00000003]
[20:00:27.438]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:00:27.438]                      // -> [port <= 0x00000001]
[20:00:27.439]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:00:27.439]                      // -> [portAdr <= 0x40020400]
[20:00:27.439]                    pos = pin * 2;
[20:00:27.439]                      // -> [pos <= 0x00000006]
[20:00:27.439]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:00:27.440]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.441]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.442]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:00:27.442]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.443]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.443]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:00:27.444]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.444]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.444]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:00:27.445]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.445]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.445]                  </block>
[20:00:27.445]                  <control if="pin <  8" while="" timeout="0" info="">
[20:00:27.445]                    // if-block "pin <  8"
[20:00:27.445]                      // =>  TRUE
[20:00:27.446]                    <block atomic="false" info="">
[20:00:27.446]                      pos = ((pin    ) & 7) * 4;
[20:00:27.446]                        // -> [pos <= 0x0000000C]
[20:00:27.446]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:00:27.446]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.447]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.447]                    </block>
[20:00:27.447]                    // end if-block "pin <  8"
[20:00:27.447]                  </control>
[20:00:27.447]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:00:27.447]                    // if-block "pin >= 8"
[20:00:27.448]                      // =>  FALSE
[20:00:27.448]                    // skip if-block "pin >= 8"
[20:00:27.448]                  </control>
[20:00:27.448]                </sequence>
[20:00:27.448]            </block>
[20:00:27.448]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:00:27.448]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:00:27.449]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.449]            </block>
[20:00:27.449]          </sequence>
[20:00:27.449]      </block>
[20:00:27.449]      // end if-block "traceSWO"
[20:00:27.450]    </control>
[20:00:27.450]    <control if="traceTPIU" while="" timeout="0" info="">
[20:00:27.450]      // if-block "traceTPIU"
[20:00:27.450]        // =>  FALSE
[20:00:27.450]      // skip if-block "traceTPIU"
[20:00:27.450]    </control>
[20:00:27.450]  </sequence>
[20:00:27.450]  
[20:00:27.677]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:00:27.677]  
[20:00:27.677]  <debugvars>
[20:00:27.678]    // Pre-defined
[20:00:27.678]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:27.678]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:27.678]    __dp=0x00000000
[20:00:27.678]    __ap=0x00000000
[20:00:27.678]    __traceout=0x00000001      (SWO Trace)
[20:00:27.678]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:27.678]    __FlashAddr=0x00000000
[20:00:27.679]    __FlashLen=0x00000000
[20:00:27.679]    __FlashArg=0x00000000
[20:00:27.679]    __FlashOp=0x00000000
[20:00:27.679]    __Result=0x00000000
[20:00:27.679]    
[20:00:27.679]    // User-defined
[20:00:27.679]    DbgMCU_CR=0x00000007
[20:00:27.679]    DbgMCU_APB1_Fz=0x00000000
[20:00:27.680]    DbgMCU_APB2_Fz=0x00000000
[20:00:27.680]    TraceClk_Pin=0x00040002
[20:00:27.680]    TraceD0_Pin=0x00040003
[20:00:27.680]    TraceD1_Pin=0x00040004
[20:00:27.680]    TraceD2_Pin=0x00040005
[20:00:27.680]    TraceD3_Pin=0x00040006
[20:00:27.680]  </debugvars>
[20:00:27.681]  
[20:00:27.681]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:00:27.681]    <block atomic="false" info="">
[20:00:27.681]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:00:27.681]        // -> [traceSWO <= 0x00000001]
[20:00:27.681]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:00:27.681]        // -> [traceTPIU <= 0x00000000]
[20:00:27.681]    </block>
[20:00:27.682]    <control if="traceSWO" while="" timeout="0" info="">
[20:00:27.682]      // if-block "traceSWO"
[20:00:27.682]        // =>  TRUE
[20:00:27.682]      <block atomic="false" info="">
[20:00:27.682]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:00:27.682]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:00:27.682]            <block atomic="false" info="">
[20:00:27.682]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:00:27.683]                // -> [dbgmcu_val <= 0x00000000]
[20:00:27.683]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:00:27.683]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:00:27.683]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:00:27.684]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.684]                // -> [dbgmcu_val <= 0x00000007]
[20:00:27.684]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:00:27.684]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:00:27.684]              Sequence("ConfigureTraceSWOPin");
[20:00:27.684]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:00:27.684]                  <block atomic="false" info="">
[20:00:27.685]                    __var pin     = 0;
[20:00:27.685]                      // -> [pin <= 0x00000000]
[20:00:27.685]                    __var port    = 0;
[20:00:27.685]                      // -> [port <= 0x00000000]
[20:00:27.685]                    __var portAdr = 0;
[20:00:27.685]                      // -> [portAdr <= 0x00000000]
[20:00:27.685]                    __var pos     = 0;
[20:00:27.685]                      // -> [pos <= 0x00000000]
[20:00:27.686]                    __var SWO_Pin = 0x00010003;          // PB3
[20:00:27.686]                      // -> [SWO_Pin <= 0x00010003]
[20:00:27.686]                  </block>
[20:00:27.686]                  <block atomic="false" info="configure SWO">
[20:00:27.686]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:00:27.686]                      // -> [pin <= 0x00000003]
[20:00:27.686]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:00:27.687]                      // -> [port <= 0x00000001]
[20:00:27.687]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:00:27.687]                      // -> [portAdr <= 0x40020400]
[20:00:27.687]                    pos = pin * 2;
[20:00:27.687]                      // -> [pos <= 0x00000006]
[20:00:27.687]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:00:27.688]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.688]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.688]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:00:27.689]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.689]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.690]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:00:27.690]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.691]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.691]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:00:27.691]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.691]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.691]                  </block>
[20:00:27.692]                  <control if="pin <  8" while="" timeout="0" info="">
[20:00:27.692]                    // if-block "pin <  8"
[20:00:27.692]                      // =>  TRUE
[20:00:27.692]                    <block atomic="false" info="">
[20:00:27.692]                      pos = ((pin    ) & 7) * 4;
[20:00:27.692]                        // -> [pos <= 0x0000000C]
[20:00:27.693]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:00:27.693]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.694]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.694]                    </block>
[20:00:27.694]                    // end if-block "pin <  8"
[20:00:27.694]                  </control>
[20:00:27.694]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:00:27.694]                    // if-block "pin >= 8"
[20:00:27.694]                      // =>  FALSE
[20:00:27.695]                    // skip if-block "pin >= 8"
[20:00:27.695]                  </control>
[20:00:27.695]                </sequence>
[20:00:27.695]            </block>
[20:00:27.695]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:00:27.695]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:00:27.696]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:27.696]            </block>
[20:00:27.696]          </sequence>
[20:00:27.696]      </block>
[20:00:27.696]      // end if-block "traceSWO"
[20:00:27.697]    </control>
[20:00:27.697]    <control if="traceTPIU" while="" timeout="0" info="">
[20:00:27.697]      // if-block "traceTPIU"
[20:00:27.697]        // =>  FALSE
[20:00:27.697]      // skip if-block "traceTPIU"
[20:00:27.697]    </control>
[20:00:27.697]  </sequence>
[20:00:27.697]  
[20:00:53.269]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:00:53.269]  
[20:00:53.270]  <debugvars>
[20:00:53.270]    // Pre-defined
[20:00:53.270]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:53.270]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:53.270]    __dp=0x00000000
[20:00:53.270]    __ap=0x00000000
[20:00:53.271]    __traceout=0x00000001      (SWO Trace)
[20:00:53.271]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:53.271]    __FlashAddr=0x00000000
[20:00:53.272]    __FlashLen=0x00000000
[20:00:53.272]    __FlashArg=0x00000000
[20:00:53.272]    __FlashOp=0x00000000
[20:00:53.272]    __Result=0x00000000
[20:00:53.272]    
[20:00:53.272]    // User-defined
[20:00:53.273]    DbgMCU_CR=0x00000007
[20:00:53.273]    DbgMCU_APB1_Fz=0x00000000
[20:00:53.273]    DbgMCU_APB2_Fz=0x00000000
[20:00:53.273]    TraceClk_Pin=0x00040002
[20:00:53.273]    TraceD0_Pin=0x00040003
[20:00:53.273]    TraceD1_Pin=0x00040004
[20:00:53.273]    TraceD2_Pin=0x00040005
[20:00:53.273]    TraceD3_Pin=0x00040006
[20:00:53.273]  </debugvars>
[20:00:53.273]  
[20:00:53.274]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:00:53.274]    <block atomic="false" info="">
[20:00:53.274]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:00:53.274]        // -> [traceSWO <= 0x00000001]
[20:00:53.274]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:00:53.275]        // -> [traceTPIU <= 0x00000000]
[20:00:53.275]    </block>
[20:00:53.275]    <control if="traceSWO" while="" timeout="0" info="">
[20:00:53.275]      // if-block "traceSWO"
[20:00:53.275]        // =>  TRUE
[20:00:53.275]      <block atomic="false" info="">
[20:00:53.275]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:00:53.276]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:00:53.276]            <block atomic="false" info="">
[20:00:53.276]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:00:53.276]                // -> [dbgmcu_val <= 0x00000000]
[20:00:53.276]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:00:53.276]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:00:53.277]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:00:53.277]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.277]                // -> [dbgmcu_val <= 0x00000007]
[20:00:53.277]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:00:53.277]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:00:53.278]              Sequence("ConfigureTraceSWOPin");
[20:00:53.278]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:00:53.278]                  <block atomic="false" info="">
[20:00:53.278]                    __var pin     = 0;
[20:00:53.278]                      // -> [pin <= 0x00000000]
[20:00:53.278]                    __var port    = 0;
[20:00:53.278]                      // -> [port <= 0x00000000]
[20:00:53.278]                    __var portAdr = 0;
[20:00:53.279]                      // -> [portAdr <= 0x00000000]
[20:00:53.279]                    __var pos     = 0;
[20:00:53.279]                      // -> [pos <= 0x00000000]
[20:00:53.279]                    __var SWO_Pin = 0x00010003;          // PB3
[20:00:53.279]                      // -> [SWO_Pin <= 0x00010003]
[20:00:53.279]                  </block>
[20:00:53.279]                  <block atomic="false" info="configure SWO">
[20:00:53.279]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:00:53.280]                      // -> [pin <= 0x00000003]
[20:00:53.280]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:00:53.280]                      // -> [port <= 0x00000001]
[20:00:53.280]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:00:53.280]                      // -> [portAdr <= 0x40020400]
[20:00:53.280]                    pos = pin * 2;
[20:00:53.280]                      // -> [pos <= 0x00000006]
[20:00:53.280]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:00:53.281]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.281]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.281]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:00:53.282]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.282]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.282]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:00:53.283]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.283]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.283]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:00:53.284]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.284]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.284]                  </block>
[20:00:53.284]                  <control if="pin <  8" while="" timeout="0" info="">
[20:00:53.284]                    // if-block "pin <  8"
[20:00:53.284]                      // =>  TRUE
[20:00:53.285]                    <block atomic="false" info="">
[20:00:53.285]                      pos = ((pin    ) & 7) * 4;
[20:00:53.285]                        // -> [pos <= 0x0000000C]
[20:00:53.285]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:00:53.285]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.286]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.286]                    </block>
[20:00:53.286]                    // end if-block "pin <  8"
[20:00:53.286]                  </control>
[20:00:53.286]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:00:53.286]                    // if-block "pin >= 8"
[20:00:53.287]                      // =>  FALSE
[20:00:53.287]                    // skip if-block "pin >= 8"
[20:00:53.287]                  </control>
[20:00:53.287]                </sequence>
[20:00:53.287]            </block>
[20:00:53.287]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:00:53.287]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:00:53.288]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:53.288]            </block>
[20:00:53.288]          </sequence>
[20:00:53.288]      </block>
[20:00:53.288]      // end if-block "traceSWO"
[20:00:53.288]    </control>
[20:00:53.288]    <control if="traceTPIU" while="" timeout="0" info="">
[20:00:53.289]      // if-block "traceTPIU"
[20:00:53.289]        // =>  FALSE
[20:00:53.289]      // skip if-block "traceTPIU"
[20:00:53.289]    </control>
[20:00:53.289]  </sequence>
[20:00:53.289]  
[20:00:58.481]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:00:58.481]  
[20:00:58.481]  <debugvars>
[20:00:58.481]    // Pre-defined
[20:00:58.482]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:00:58.482]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:00:58.482]    __dp=0x00000000
[20:00:58.482]    __ap=0x00000000
[20:00:58.482]    __traceout=0x00000001      (SWO Trace)
[20:00:58.483]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:00:58.483]    __FlashAddr=0x00000000
[20:00:58.483]    __FlashLen=0x00000000
[20:00:58.483]    __FlashArg=0x00000000
[20:00:58.483]    __FlashOp=0x00000000
[20:00:58.484]    __Result=0x00000000
[20:00:58.484]    
[20:00:58.484]    // User-defined
[20:00:58.484]    DbgMCU_CR=0x00000007
[20:00:58.484]    DbgMCU_APB1_Fz=0x00000000
[20:00:58.484]    DbgMCU_APB2_Fz=0x00000000
[20:00:58.484]    TraceClk_Pin=0x00040002
[20:00:58.484]    TraceD0_Pin=0x00040003
[20:00:58.485]    TraceD1_Pin=0x00040004
[20:00:58.485]    TraceD2_Pin=0x00040005
[20:00:58.485]    TraceD3_Pin=0x00040006
[20:00:58.485]  </debugvars>
[20:00:58.485]  
[20:00:58.485]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:00:58.486]    <block atomic="false" info="">
[20:00:58.486]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:00:58.486]        // -> [traceSWO <= 0x00000001]
[20:00:58.486]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:00:58.486]        // -> [traceTPIU <= 0x00000000]
[20:00:58.486]    </block>
[20:00:58.486]    <control if="traceSWO" while="" timeout="0" info="">
[20:00:58.486]      // if-block "traceSWO"
[20:00:58.487]        // =>  TRUE
[20:00:58.487]      <block atomic="false" info="">
[20:00:58.487]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:00:58.487]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:00:58.487]            <block atomic="false" info="">
[20:00:58.487]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:00:58.487]                // -> [dbgmcu_val <= 0x00000000]
[20:00:58.487]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:00:58.488]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:00:58.488]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:00:58.488]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.488]                // -> [dbgmcu_val <= 0x00000007]
[20:00:58.488]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:00:58.489]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:00:58.489]              Sequence("ConfigureTraceSWOPin");
[20:00:58.489]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:00:58.489]                  <block atomic="false" info="">
[20:00:58.489]                    __var pin     = 0;
[20:00:58.489]                      // -> [pin <= 0x00000000]
[20:00:58.489]                    __var port    = 0;
[20:00:58.489]                      // -> [port <= 0x00000000]
[20:00:58.490]                    __var portAdr = 0;
[20:00:58.490]                      // -> [portAdr <= 0x00000000]
[20:00:58.490]                    __var pos     = 0;
[20:00:58.490]                      // -> [pos <= 0x00000000]
[20:00:58.490]                    __var SWO_Pin = 0x00010003;          // PB3
[20:00:58.490]                      // -> [SWO_Pin <= 0x00010003]
[20:00:58.490]                  </block>
[20:00:58.491]                  <block atomic="false" info="configure SWO">
[20:00:58.491]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:00:58.491]                      // -> [pin <= 0x00000003]
[20:00:58.491]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:00:58.491]                      // -> [port <= 0x00000001]
[20:00:58.491]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:00:58.491]                      // -> [portAdr <= 0x40020400]
[20:00:58.491]                    pos = pin * 2;
[20:00:58.491]                      // -> [pos <= 0x00000006]
[20:00:58.492]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:00:58.492]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.493]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.493]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:00:58.493]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.494]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.494]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:00:58.494]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.495]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.495]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:00:58.495]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.496]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.496]                  </block>
[20:00:58.496]                  <control if="pin <  8" while="" timeout="0" info="">
[20:00:58.496]                    // if-block "pin <  8"
[20:00:58.496]                      // =>  TRUE
[20:00:58.496]                    <block atomic="false" info="">
[20:00:58.497]                      pos = ((pin    ) & 7) * 4;
[20:00:58.497]                        // -> [pos <= 0x0000000C]
[20:00:58.497]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:00:58.497]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.498]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.498]                    </block>
[20:00:58.498]                    // end if-block "pin <  8"
[20:00:58.498]                  </control>
[20:00:58.498]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:00:58.498]                    // if-block "pin >= 8"
[20:00:58.498]                      // =>  FALSE
[20:00:58.498]                    // skip if-block "pin >= 8"
[20:00:58.499]                  </control>
[20:00:58.499]                </sequence>
[20:00:58.499]            </block>
[20:00:58.499]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:00:58.499]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:00:58.500]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:00:58.500]            </block>
[20:00:58.500]          </sequence>
[20:00:58.500]      </block>
[20:00:58.500]      // end if-block "traceSWO"
[20:00:58.500]    </control>
[20:00:58.500]    <control if="traceTPIU" while="" timeout="0" info="">
[20:00:58.500]      // if-block "traceTPIU"
[20:00:58.501]        // =>  FALSE
[20:00:58.501]      // skip if-block "traceTPIU"
[20:00:58.501]    </control>
[20:00:58.501]  </sequence>
[20:00:58.501]  
[20:01:19.479]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:01:19.479]  
[20:01:19.480]  <debugvars>
[20:01:19.480]    // Pre-defined
[20:01:19.480]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:01:19.480]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:01:19.481]    __dp=0x00000000
[20:01:19.481]    __ap=0x00000000
[20:01:19.481]    __traceout=0x00000001      (SWO Trace)
[20:01:19.481]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:01:19.482]    __FlashAddr=0x00000000
[20:01:19.482]    __FlashLen=0x00000000
[20:01:19.482]    __FlashArg=0x00000000
[20:01:19.482]    __FlashOp=0x00000000
[20:01:19.482]    __Result=0x00000000
[20:01:19.482]    
[20:01:19.482]    // User-defined
[20:01:19.483]    DbgMCU_CR=0x00000007
[20:01:19.483]    DbgMCU_APB1_Fz=0x00000000
[20:01:19.483]    DbgMCU_APB2_Fz=0x00000000
[20:01:19.483]    TraceClk_Pin=0x00040002
[20:01:19.483]    TraceD0_Pin=0x00040003
[20:01:19.484]    TraceD1_Pin=0x00040004
[20:01:19.484]    TraceD2_Pin=0x00040005
[20:01:19.484]    TraceD3_Pin=0x00040006
[20:01:19.484]  </debugvars>
[20:01:19.484]  
[20:01:19.485]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:01:19.485]    <block atomic="false" info="">
[20:01:19.485]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:01:19.485]        // -> [traceSWO <= 0x00000001]
[20:01:19.485]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:01:19.485]        // -> [traceTPIU <= 0x00000000]
[20:01:19.486]    </block>
[20:01:19.486]    <control if="traceSWO" while="" timeout="0" info="">
[20:01:19.486]      // if-block "traceSWO"
[20:01:19.486]        // =>  TRUE
[20:01:19.486]      <block atomic="false" info="">
[20:01:19.487]        Sequence("DisableTraceSWO");
[20:01:19.487]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:01:19.487]            <block atomic="false" info="">
[20:01:19.487]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:01:19.487]                // -> [dbgmcu_val <= 0x00000000]
[20:01:19.487]            </block>
[20:01:19.488]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:01:19.488]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:01:19.488]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:01:19.489]                // -> [dbgmcu_val <= 0x00000007]
[20:01:19.489]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:01:19.489]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:01:19.490]            </block>
[20:01:19.490]          </sequence>
[20:01:19.490]      </block>
[20:01:19.490]      // end if-block "traceSWO"
[20:01:19.490]    </control>
[20:01:19.490]    <control if="traceTPIU" while="" timeout="0" info="">
[20:01:19.490]      // if-block "traceTPIU"
[20:01:19.490]        // =>  FALSE
[20:01:19.490]      // skip if-block "traceTPIU"
[20:01:19.491]    </control>
[20:01:19.491]  </sequence>
[20:01:19.491]  
[20:07:18.316]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:07:18.316]  
[20:07:18.316]  <debugvars>
[20:07:18.317]    // Pre-defined
[20:07:18.317]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:07:18.317]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:07:18.317]    __dp=0x00000000
[20:07:18.317]    __ap=0x00000000
[20:07:18.317]    __traceout=0x00000001      (SWO Trace)
[20:07:18.318]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:07:18.318]    __FlashAddr=0x00000000
[20:07:18.318]    __FlashLen=0x00000000
[20:07:18.318]    __FlashArg=0x00000000
[20:07:18.318]    __FlashOp=0x00000000
[20:07:18.319]    __Result=0x00000000
[20:07:18.319]    
[20:07:18.319]    // User-defined
[20:07:18.319]    DbgMCU_CR=0x00000007
[20:07:18.319]    DbgMCU_APB1_Fz=0x00000000
[20:07:18.319]    DbgMCU_APB2_Fz=0x00000000
[20:07:18.319]    TraceClk_Pin=0x00040002
[20:07:18.320]    TraceD0_Pin=0x00040003
[20:07:18.320]    TraceD1_Pin=0x00040004
[20:07:18.320]    TraceD2_Pin=0x00040005
[20:07:18.320]    TraceD3_Pin=0x00040006
[20:07:18.320]  </debugvars>
[20:07:18.320]  
[20:07:18.321]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:07:18.321]    <block atomic="false" info="">
[20:07:18.321]      Sequence("CheckID");
[20:07:18.321]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:07:18.321]          <block atomic="false" info="">
[20:07:18.321]            __var pidr1 = 0;
[20:07:18.321]              // -> [pidr1 <= 0x00000000]
[20:07:18.322]            __var pidr2 = 0;
[20:07:18.322]              // -> [pidr2 <= 0x00000000]
[20:07:18.322]            __var jep106id = 0;
[20:07:18.322]              // -> [jep106id <= 0x00000000]
[20:07:18.322]            __var ROMTableBase = 0;
[20:07:18.322]              // -> [ROMTableBase <= 0x00000000]
[20:07:18.322]            __ap = 0;      // AHB-AP
[20:07:18.323]              // -> [__ap <= 0x00000000]
[20:07:18.323]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:07:18.323]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.323]              // -> [ROMTableBase <= 0xE00FD000]
[20:07:18.323]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:07:18.324]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.324]              // -> [pidr1 <= 0x00000004]
[20:07:18.324]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:07:18.324]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.325]              // -> [pidr2 <= 0x0000001A]
[20:07:18.325]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:07:18.325]              // -> [jep106id <= 0x00000020]
[20:07:18.325]          </block>
[20:07:18.325]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:07:18.325]            // if-block "jep106id != 0x20"
[20:07:18.325]              // =>  FALSE
[20:07:18.325]            // skip if-block "jep106id != 0x20"
[20:07:18.326]          </control>
[20:07:18.326]        </sequence>
[20:07:18.326]    </block>
[20:07:18.326]  </sequence>
[20:07:18.326]  
[20:07:18.342]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:07:18.342]  
[20:07:18.342]  <debugvars>
[20:07:18.342]    // Pre-defined
[20:07:18.342]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:07:18.343]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:07:18.343]    __dp=0x00000000
[20:07:18.343]    __ap=0x00000000
[20:07:18.343]    __traceout=0x00000001      (SWO Trace)
[20:07:18.344]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:07:18.344]    __FlashAddr=0x00000000
[20:07:18.344]    __FlashLen=0x00000000
[20:07:18.344]    __FlashArg=0x00000000
[20:07:18.344]    __FlashOp=0x00000000
[20:07:18.344]    __Result=0x00000000
[20:07:18.344]    
[20:07:18.344]    // User-defined
[20:07:18.345]    DbgMCU_CR=0x00000007
[20:07:18.345]    DbgMCU_APB1_Fz=0x00000000
[20:07:18.345]    DbgMCU_APB2_Fz=0x00000000
[20:07:18.345]    TraceClk_Pin=0x00040002
[20:07:18.345]    TraceD0_Pin=0x00040003
[20:07:18.345]    TraceD1_Pin=0x00040004
[20:07:18.346]    TraceD2_Pin=0x00040005
[20:07:18.346]    TraceD3_Pin=0x00040006
[20:07:18.346]  </debugvars>
[20:07:18.346]  
[20:07:18.346]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:07:18.346]    <block atomic="false" info="">
[20:07:18.346]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:07:18.347]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.347]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:07:18.348]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.348]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:07:18.348]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.348]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:07:18.349]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:07:18.349]    </block>
[20:07:18.349]  </sequence>
[20:07:18.349]  
[20:13:02.762]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:13:02.762]  
[20:13:02.762]  <debugvars>
[20:13:02.762]    // Pre-defined
[20:13:02.762]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:02.762]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:13:02.762]    __dp=0x00000000
[20:13:02.763]    __ap=0x00000000
[20:13:02.763]    __traceout=0x00000001      (SWO Trace)
[20:13:02.763]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:02.763]    __FlashAddr=0x00000000
[20:13:02.763]    __FlashLen=0x00000000
[20:13:02.763]    __FlashArg=0x00000000
[20:13:02.764]    __FlashOp=0x00000000
[20:13:02.764]    __Result=0x00000000
[20:13:02.764]    
[20:13:02.764]    // User-defined
[20:13:02.764]    DbgMCU_CR=0x00000007
[20:13:02.764]    DbgMCU_APB1_Fz=0x00000000
[20:13:02.764]    DbgMCU_APB2_Fz=0x00000000
[20:13:02.764]    TraceClk_Pin=0x00040002
[20:13:02.765]    TraceD0_Pin=0x00040003
[20:13:02.765]    TraceD1_Pin=0x00040004
[20:13:02.765]    TraceD2_Pin=0x00040005
[20:13:02.765]    TraceD3_Pin=0x00040006
[20:13:02.765]  </debugvars>
[20:13:02.765]  
[20:13:02.766]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:13:02.766]    <block atomic="false" info="">
[20:13:02.766]      Sequence("CheckID");
[20:13:02.766]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:13:02.766]          <block atomic="false" info="">
[20:13:02.766]            __var pidr1 = 0;
[20:13:02.766]              // -> [pidr1 <= 0x00000000]
[20:13:02.767]            __var pidr2 = 0;
[20:13:02.767]              // -> [pidr2 <= 0x00000000]
[20:13:02.767]            __var jep106id = 0;
[20:13:02.767]              // -> [jep106id <= 0x00000000]
[20:13:02.767]            __var ROMTableBase = 0;
[20:13:02.767]              // -> [ROMTableBase <= 0x00000000]
[20:13:02.767]            __ap = 0;      // AHB-AP
[20:13:02.768]              // -> [__ap <= 0x00000000]
[20:13:02.768]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:13:02.768]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.768]              // -> [ROMTableBase <= 0xE00FD000]
[20:13:02.768]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:13:02.769]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.769]              // -> [pidr1 <= 0x00000004]
[20:13:02.769]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:13:02.770]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.770]              // -> [pidr2 <= 0x0000001A]
[20:13:02.770]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:13:02.770]              // -> [jep106id <= 0x00000020]
[20:13:02.770]          </block>
[20:13:02.770]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:13:02.770]            // if-block "jep106id != 0x20"
[20:13:02.770]              // =>  FALSE
[20:13:02.771]            // skip if-block "jep106id != 0x20"
[20:13:02.771]          </control>
[20:13:02.771]        </sequence>
[20:13:02.771]    </block>
[20:13:02.771]  </sequence>
[20:13:02.771]  
[20:13:02.786]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:13:02.786]  
[20:13:02.786]  <debugvars>
[20:13:02.787]    // Pre-defined
[20:13:02.787]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:02.787]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:13:02.787]    __dp=0x00000000
[20:13:02.787]    __ap=0x00000000
[20:13:02.787]    __traceout=0x00000001      (SWO Trace)
[20:13:02.787]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:02.787]    __FlashAddr=0x00000000
[20:13:02.788]    __FlashLen=0x00000000
[20:13:02.788]    __FlashArg=0x00000000
[20:13:02.788]    __FlashOp=0x00000000
[20:13:02.788]    __Result=0x00000000
[20:13:02.788]    
[20:13:02.788]    // User-defined
[20:13:02.788]    DbgMCU_CR=0x00000007
[20:13:02.789]    DbgMCU_APB1_Fz=0x00000000
[20:13:02.789]    DbgMCU_APB2_Fz=0x00000000
[20:13:02.789]    TraceClk_Pin=0x00040002
[20:13:02.789]    TraceD0_Pin=0x00040003
[20:13:02.789]    TraceD1_Pin=0x00040004
[20:13:02.789]    TraceD2_Pin=0x00040005
[20:13:02.789]    TraceD3_Pin=0x00040006
[20:13:02.789]  </debugvars>
[20:13:02.789]  
[20:13:02.790]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:13:02.790]    <block atomic="false" info="">
[20:13:02.790]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:13:02.790]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.791]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:13:02.791]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.791]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:13:02.792]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.793]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:13:02.793]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:02.793]    </block>
[20:13:02.793]  </sequence>
[20:13:02.793]  
[20:13:33.935]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:13:33.935]  
[20:13:33.935]  <debugvars>
[20:13:33.935]    // Pre-defined
[20:13:33.936]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:33.936]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:13:33.936]    __dp=0x00000000
[20:13:33.936]    __ap=0x00000000
[20:13:33.936]    __traceout=0x00000001      (SWO Trace)
[20:13:33.936]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:33.936]    __FlashAddr=0x00000000
[20:13:33.937]    __FlashLen=0x00000000
[20:13:33.937]    __FlashArg=0x00000000
[20:13:33.937]    __FlashOp=0x00000000
[20:13:33.937]    __Result=0x00000000
[20:13:33.937]    
[20:13:33.937]    // User-defined
[20:13:33.937]    DbgMCU_CR=0x00000007
[20:13:33.938]    DbgMCU_APB1_Fz=0x00000000
[20:13:33.938]    DbgMCU_APB2_Fz=0x00000000
[20:13:33.938]    TraceClk_Pin=0x00040002
[20:13:33.938]    TraceD0_Pin=0x00040003
[20:13:33.938]    TraceD1_Pin=0x00040004
[20:13:33.939]    TraceD2_Pin=0x00040005
[20:13:33.939]    TraceD3_Pin=0x00040006
[20:13:33.939]  </debugvars>
[20:13:33.939]  
[20:13:33.939]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:13:33.939]    <block atomic="false" info="">
[20:13:33.939]      Sequence("CheckID");
[20:13:33.940]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:13:33.940]          <block atomic="false" info="">
[20:13:33.940]            __var pidr1 = 0;
[20:13:33.940]              // -> [pidr1 <= 0x00000000]
[20:13:33.940]            __var pidr2 = 0;
[20:13:33.940]              // -> [pidr2 <= 0x00000000]
[20:13:33.941]            __var jep106id = 0;
[20:13:33.941]              // -> [jep106id <= 0x00000000]
[20:13:33.941]            __var ROMTableBase = 0;
[20:13:33.941]              // -> [ROMTableBase <= 0x00000000]
[20:13:33.941]            __ap = 0;      // AHB-AP
[20:13:33.941]              // -> [__ap <= 0x00000000]
[20:13:33.941]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:13:33.942]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.942]              // -> [ROMTableBase <= 0xE00FD000]
[20:13:33.942]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:13:33.942]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.943]              // -> [pidr1 <= 0x00000004]
[20:13:33.943]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:13:33.943]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.944]              // -> [pidr2 <= 0x0000001A]
[20:13:33.944]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:13:33.944]              // -> [jep106id <= 0x00000020]
[20:13:33.944]          </block>
[20:13:33.944]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:13:33.944]            // if-block "jep106id != 0x20"
[20:13:33.944]              // =>  FALSE
[20:13:33.945]            // skip if-block "jep106id != 0x20"
[20:13:33.945]          </control>
[20:13:33.945]        </sequence>
[20:13:33.945]    </block>
[20:13:33.945]  </sequence>
[20:13:33.945]  
[20:13:33.961]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:13:33.961]  
[20:13:33.961]  <debugvars>
[20:13:33.961]    // Pre-defined
[20:13:33.961]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:33.961]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:13:33.962]    __dp=0x00000000
[20:13:33.962]    __ap=0x00000000
[20:13:33.962]    __traceout=0x00000001      (SWO Trace)
[20:13:33.962]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:33.962]    __FlashAddr=0x00000000
[20:13:33.962]    __FlashLen=0x00000000
[20:13:33.963]    __FlashArg=0x00000000
[20:13:33.963]    __FlashOp=0x00000000
[20:13:33.963]    __Result=0x00000000
[20:13:33.963]    
[20:13:33.963]    // User-defined
[20:13:33.964]    DbgMCU_CR=0x00000007
[20:13:33.964]    DbgMCU_APB1_Fz=0x00000000
[20:13:33.964]    DbgMCU_APB2_Fz=0x00000000
[20:13:33.964]    TraceClk_Pin=0x00040002
[20:13:33.964]    TraceD0_Pin=0x00040003
[20:13:33.964]    TraceD1_Pin=0x00040004
[20:13:33.965]    TraceD2_Pin=0x00040005
[20:13:33.965]    TraceD3_Pin=0x00040006
[20:13:33.965]  </debugvars>
[20:13:33.965]  
[20:13:33.966]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:13:33.966]    <block atomic="false" info="">
[20:13:33.966]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:13:33.966]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.967]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:13:33.967]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.967]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:13:33.968]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.968]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:13:33.969]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.969]    </block>
[20:13:33.969]  </sequence>
[20:13:33.969]  
[20:13:33.987]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:13:33.987]  
[20:13:33.987]  <debugvars>
[20:13:33.987]    // Pre-defined
[20:13:33.987]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:33.987]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:13:33.987]    __dp=0x00000000
[20:13:33.987]    __ap=0x00000000
[20:13:33.988]    __traceout=0x00000001      (SWO Trace)
[20:13:33.988]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:33.988]    __FlashAddr=0x00000000
[20:13:33.988]    __FlashLen=0x00000000
[20:13:33.988]    __FlashArg=0x00000000
[20:13:33.988]    __FlashOp=0x00000000
[20:13:33.988]    __Result=0x00000000
[20:13:33.988]    
[20:13:33.988]    // User-defined
[20:13:33.989]    DbgMCU_CR=0x00000007
[20:13:33.989]    DbgMCU_APB1_Fz=0x00000000
[20:13:33.989]    DbgMCU_APB2_Fz=0x00000000
[20:13:33.989]    TraceClk_Pin=0x00040002
[20:13:33.989]    TraceD0_Pin=0x00040003
[20:13:33.989]    TraceD1_Pin=0x00040004
[20:13:33.989]    TraceD2_Pin=0x00040005
[20:13:33.990]    TraceD3_Pin=0x00040006
[20:13:33.990]  </debugvars>
[20:13:33.990]  
[20:13:33.990]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:13:33.990]    <block atomic="false" info="">
[20:13:33.990]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:13:33.990]        // -> [traceSWO <= 0x00000001]
[20:13:33.991]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:13:33.991]        // -> [traceTPIU <= 0x00000000]
[20:13:33.991]    </block>
[20:13:33.991]    <control if="traceSWO" while="" timeout="0" info="">
[20:13:33.991]      // if-block "traceSWO"
[20:13:33.991]        // =>  TRUE
[20:13:33.991]      <block atomic="false" info="">
[20:13:33.991]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:13:33.992]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:13:33.992]            <block atomic="false" info="">
[20:13:33.992]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:13:33.992]                // -> [dbgmcu_val <= 0x00000000]
[20:13:33.992]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:13:33.992]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:13:33.993]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:13:33.993]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.993]                // -> [dbgmcu_val <= 0x00000007]
[20:13:33.994]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:13:33.994]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:13:33.994]              Sequence("ConfigureTraceSWOPin");
[20:13:33.994]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:13:33.994]                  <block atomic="false" info="">
[20:13:33.994]                    __var pin     = 0;
[20:13:33.994]                      // -> [pin <= 0x00000000]
[20:13:33.995]                    __var port    = 0;
[20:13:33.995]                      // -> [port <= 0x00000000]
[20:13:33.995]                    __var portAdr = 0;
[20:13:33.995]                      // -> [portAdr <= 0x00000000]
[20:13:33.995]                    __var pos     = 0;
[20:13:33.995]                      // -> [pos <= 0x00000000]
[20:13:33.995]                    __var SWO_Pin = 0x00010003;          // PB3
[20:13:33.996]                      // -> [SWO_Pin <= 0x00010003]
[20:13:33.996]                  </block>
[20:13:33.996]                  <block atomic="false" info="configure SWO">
[20:13:33.996]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:13:33.996]                      // -> [pin <= 0x00000003]
[20:13:33.996]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:13:33.996]                      // -> [port <= 0x00000001]
[20:13:33.996]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:13:33.996]                      // -> [portAdr <= 0x40020400]
[20:13:33.996]                    pos = pin * 2;
[20:13:33.996]                      // -> [pos <= 0x00000006]
[20:13:33.996]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:13:33.997]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.997]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.997]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:13:33.998]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.998]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.998]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:13:33.999]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.999]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:33.999]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:13:34.000]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.000]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.000]                  </block>
[20:13:34.000]                  <control if="pin <  8" while="" timeout="0" info="">
[20:13:34.001]                    // if-block "pin <  8"
[20:13:34.001]                      // =>  TRUE
[20:13:34.001]                    <block atomic="false" info="">
[20:13:34.001]                      pos = ((pin    ) & 7) * 4;
[20:13:34.001]                        // -> [pos <= 0x0000000C]
[20:13:34.001]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:13:34.001]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.002]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.002]                    </block>
[20:13:34.002]                    // end if-block "pin <  8"
[20:13:34.002]                  </control>
[20:13:34.002]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:13:34.003]                    // if-block "pin >= 8"
[20:13:34.003]                      // =>  FALSE
[20:13:34.003]                    // skip if-block "pin >= 8"
[20:13:34.003]                  </control>
[20:13:34.003]                </sequence>
[20:13:34.003]            </block>
[20:13:34.003]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:13:34.003]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:13:34.004]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.004]            </block>
[20:13:34.004]          </sequence>
[20:13:34.004]      </block>
[20:13:34.004]      // end if-block "traceSWO"
[20:13:34.005]    </control>
[20:13:34.005]    <control if="traceTPIU" while="" timeout="0" info="">
[20:13:34.005]      // if-block "traceTPIU"
[20:13:34.005]        // =>  FALSE
[20:13:34.005]      // skip if-block "traceTPIU"
[20:13:34.005]    </control>
[20:13:34.005]  </sequence>
[20:13:34.005]  
[20:13:34.009]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:13:34.009]  
[20:13:34.009]  <debugvars>
[20:13:34.009]    // Pre-defined
[20:13:34.010]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:34.010]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:13:34.010]    __dp=0x00000000
[20:13:34.010]    __ap=0x00000000
[20:13:34.010]    __traceout=0x00000001      (SWO Trace)
[20:13:34.011]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:34.011]    __FlashAddr=0x00000000
[20:13:34.011]    __FlashLen=0x00000000
[20:13:34.011]    __FlashArg=0x00000000
[20:13:34.011]    __FlashOp=0x00000000
[20:13:34.011]    __Result=0x00000000
[20:13:34.011]    
[20:13:34.011]    // User-defined
[20:13:34.012]    DbgMCU_CR=0x00000007
[20:13:34.012]    DbgMCU_APB1_Fz=0x00000000
[20:13:34.012]    DbgMCU_APB2_Fz=0x00000000
[20:13:34.012]    TraceClk_Pin=0x00040002
[20:13:34.012]    TraceD0_Pin=0x00040003
[20:13:34.012]    TraceD1_Pin=0x00040004
[20:13:34.013]    TraceD2_Pin=0x00040005
[20:13:34.013]    TraceD3_Pin=0x00040006
[20:13:34.013]  </debugvars>
[20:13:34.013]  
[20:13:34.013]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:13:34.013]    <block atomic="false" info="">
[20:13:34.014]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:13:34.014]        // -> [traceSWO <= 0x00000001]
[20:13:34.014]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:13:34.014]        // -> [traceTPIU <= 0x00000000]
[20:13:34.014]    </block>
[20:13:34.014]    <control if="traceSWO" while="" timeout="0" info="">
[20:13:34.015]      // if-block "traceSWO"
[20:13:34.015]        // =>  TRUE
[20:13:34.015]      <block atomic="false" info="">
[20:13:34.015]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:13:34.015]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:13:34.015]            <block atomic="false" info="">
[20:13:34.016]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:13:34.016]                // -> [dbgmcu_val <= 0x00000000]
[20:13:34.016]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:13:34.016]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:13:34.016]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:13:34.017]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.017]                // -> [dbgmcu_val <= 0x00000007]
[20:13:34.017]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:13:34.017]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:13:34.017]              Sequence("ConfigureTraceSWOPin");
[20:13:34.017]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:13:34.017]                  <block atomic="false" info="">
[20:13:34.017]                    __var pin     = 0;
[20:13:34.018]                      // -> [pin <= 0x00000000]
[20:13:34.018]                    __var port    = 0;
[20:13:34.018]                      // -> [port <= 0x00000000]
[20:13:34.018]                    __var portAdr = 0;
[20:13:34.018]                      // -> [portAdr <= 0x00000000]
[20:13:34.018]                    __var pos     = 0;
[20:13:34.018]                      // -> [pos <= 0x00000000]
[20:13:34.019]                    __var SWO_Pin = 0x00010003;          // PB3
[20:13:34.019]                      // -> [SWO_Pin <= 0x00010003]
[20:13:34.019]                  </block>
[20:13:34.019]                  <block atomic="false" info="configure SWO">
[20:13:34.019]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:13:34.019]                      // -> [pin <= 0x00000003]
[20:13:34.019]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:13:34.019]                      // -> [port <= 0x00000001]
[20:13:34.020]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:13:34.020]                      // -> [portAdr <= 0x40020400]
[20:13:34.020]                    pos = pin * 2;
[20:13:34.020]                      // -> [pos <= 0x00000006]
[20:13:34.020]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:13:34.021]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.021]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.021]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:13:34.022]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.022]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.022]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:13:34.023]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.023]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.023]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:13:34.024]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.024]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.024]                  </block>
[20:13:34.024]                  <control if="pin <  8" while="" timeout="0" info="">
[20:13:34.024]                    // if-block "pin <  8"
[20:13:34.025]                      // =>  TRUE
[20:13:34.025]                    <block atomic="false" info="">
[20:13:34.025]                      pos = ((pin    ) & 7) * 4;
[20:13:34.025]                        // -> [pos <= 0x0000000C]
[20:13:34.025]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:13:34.026]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.026]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.026]                    </block>
[20:13:34.026]                    // end if-block "pin <  8"
[20:13:34.026]                  </control>
[20:13:34.027]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:13:34.027]                    // if-block "pin >= 8"
[20:13:34.027]                      // =>  FALSE
[20:13:34.027]                    // skip if-block "pin >= 8"
[20:13:34.027]                  </control>
[20:13:34.027]                </sequence>
[20:13:34.027]            </block>
[20:13:34.028]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:13:34.028]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:13:34.028]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.028]            </block>
[20:13:34.028]          </sequence>
[20:13:34.029]      </block>
[20:13:34.029]      // end if-block "traceSWO"
[20:13:34.029]    </control>
[20:13:34.029]    <control if="traceTPIU" while="" timeout="0" info="">
[20:13:34.029]      // if-block "traceTPIU"
[20:13:34.029]        // =>  FALSE
[20:13:34.030]      // skip if-block "traceTPIU"
[20:13:34.030]    </control>
[20:13:34.030]  </sequence>
[20:13:34.030]  
[20:13:34.253]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:13:34.253]  
[20:13:34.254]  <debugvars>
[20:13:34.254]    // Pre-defined
[20:13:34.254]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:34.254]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:13:34.254]    __dp=0x00000000
[20:13:34.255]    __ap=0x00000000
[20:13:34.255]    __traceout=0x00000001      (SWO Trace)
[20:13:34.255]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:34.255]    __FlashAddr=0x00000000
[20:13:34.255]    __FlashLen=0x00000000
[20:13:34.255]    __FlashArg=0x00000000
[20:13:34.256]    __FlashOp=0x00000000
[20:13:34.256]    __Result=0x00000000
[20:13:34.256]    
[20:13:34.256]    // User-defined
[20:13:34.256]    DbgMCU_CR=0x00000007
[20:13:34.256]    DbgMCU_APB1_Fz=0x00000000
[20:13:34.256]    DbgMCU_APB2_Fz=0x00000000
[20:13:34.257]    TraceClk_Pin=0x00040002
[20:13:34.257]    TraceD0_Pin=0x00040003
[20:13:34.257]    TraceD1_Pin=0x00040004
[20:13:34.257]    TraceD2_Pin=0x00040005
[20:13:34.257]    TraceD3_Pin=0x00040006
[20:13:34.257]  </debugvars>
[20:13:34.257]  
[20:13:34.258]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:13:34.258]    <block atomic="false" info="">
[20:13:34.258]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:13:34.258]        // -> [traceSWO <= 0x00000001]
[20:13:34.258]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:13:34.258]        // -> [traceTPIU <= 0x00000000]
[20:13:34.258]    </block>
[20:13:34.259]    <control if="traceSWO" while="" timeout="0" info="">
[20:13:34.259]      // if-block "traceSWO"
[20:13:34.259]        // =>  TRUE
[20:13:34.259]      <block atomic="false" info="">
[20:13:34.259]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:13:34.259]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:13:34.259]            <block atomic="false" info="">
[20:13:34.260]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:13:34.260]                // -> [dbgmcu_val <= 0x00000000]
[20:13:34.260]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:13:34.260]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:13:34.260]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:13:34.260]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.261]                // -> [dbgmcu_val <= 0x00000007]
[20:13:34.261]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:13:34.261]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:13:34.261]              Sequence("ConfigureTraceSWOPin");
[20:13:34.261]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:13:34.261]                  <block atomic="false" info="">
[20:13:34.261]                    __var pin     = 0;
[20:13:34.262]                      // -> [pin <= 0x00000000]
[20:13:34.262]                    __var port    = 0;
[20:13:34.262]                      // -> [port <= 0x00000000]
[20:13:34.262]                    __var portAdr = 0;
[20:13:34.262]                      // -> [portAdr <= 0x00000000]
[20:13:34.262]                    __var pos     = 0;
[20:13:34.262]                      // -> [pos <= 0x00000000]
[20:13:34.262]                    __var SWO_Pin = 0x00010003;          // PB3
[20:13:34.262]                      // -> [SWO_Pin <= 0x00010003]
[20:13:34.262]                  </block>
[20:13:34.263]                  <block atomic="false" info="configure SWO">
[20:13:34.263]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:13:34.263]                      // -> [pin <= 0x00000003]
[20:13:34.263]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:13:34.263]                      // -> [port <= 0x00000001]
[20:13:34.263]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:13:34.263]                      // -> [portAdr <= 0x40020400]
[20:13:34.264]                    pos = pin * 2;
[20:13:34.264]                      // -> [pos <= 0x00000006]
[20:13:34.264]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:13:34.264]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.265]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.265]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:13:34.266]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.266]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.266]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:13:34.267]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.267]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.267]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:13:34.268]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.268]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.269]                  </block>
[20:13:34.269]                  <control if="pin <  8" while="" timeout="0" info="">
[20:13:34.269]                    // if-block "pin <  8"
[20:13:34.269]                      // =>  TRUE
[20:13:34.269]                    <block atomic="false" info="">
[20:13:34.270]                      pos = ((pin    ) & 7) * 4;
[20:13:34.270]                        // -> [pos <= 0x0000000C]
[20:13:34.270]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:13:34.270]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.271]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.271]                    </block>
[20:13:34.271]                    // end if-block "pin <  8"
[20:13:34.271]                  </control>
[20:13:34.271]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:13:34.271]                    // if-block "pin >= 8"
[20:13:34.272]                      // =>  FALSE
[20:13:34.272]                    // skip if-block "pin >= 8"
[20:13:34.272]                  </control>
[20:13:34.272]                </sequence>
[20:13:34.272]            </block>
[20:13:34.272]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:13:34.272]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:13:34.273]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:34.273]            </block>
[20:13:34.273]          </sequence>
[20:13:34.273]      </block>
[20:13:34.274]      // end if-block "traceSWO"
[20:13:34.274]    </control>
[20:13:34.274]    <control if="traceTPIU" while="" timeout="0" info="">
[20:13:34.274]      // if-block "traceTPIU"
[20:13:34.274]        // =>  FALSE
[20:13:34.274]      // skip if-block "traceTPIU"
[20:13:34.274]    </control>
[20:13:34.275]  </sequence>
[20:13:34.275]  
[20:14:33.844]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:14:33.844]  
[20:14:33.845]  <debugvars>
[20:14:33.845]    // Pre-defined
[20:14:33.845]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:14:33.845]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:14:33.846]    __dp=0x00000000
[20:14:33.846]    __ap=0x00000000
[20:14:33.846]    __traceout=0x00000001      (SWO Trace)
[20:14:33.846]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:14:33.846]    __FlashAddr=0x00000000
[20:14:33.846]    __FlashLen=0x00000000
[20:14:33.847]    __FlashArg=0x00000000
[20:14:33.847]    __FlashOp=0x00000000
[20:14:33.847]    __Result=0x00000000
[20:14:33.847]    
[20:14:33.847]    // User-defined
[20:14:33.847]    DbgMCU_CR=0x00000007
[20:14:33.847]    DbgMCU_APB1_Fz=0x00000000
[20:14:33.847]    DbgMCU_APB2_Fz=0x00000000
[20:14:33.848]    TraceClk_Pin=0x00040002
[20:14:33.848]    TraceD0_Pin=0x00040003
[20:14:33.848]    TraceD1_Pin=0x00040004
[20:14:33.848]    TraceD2_Pin=0x00040005
[20:14:33.848]    TraceD3_Pin=0x00040006
[20:14:33.848]  </debugvars>
[20:14:33.848]  
[20:14:33.848]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:14:33.849]    <block atomic="false" info="">
[20:14:33.849]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:14:33.849]        // -> [traceSWO <= 0x00000001]
[20:14:33.849]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:14:33.849]        // -> [traceTPIU <= 0x00000000]
[20:14:33.849]    </block>
[20:14:33.850]    <control if="traceSWO" while="" timeout="0" info="">
[20:14:33.850]      // if-block "traceSWO"
[20:14:33.850]        // =>  TRUE
[20:14:33.850]      <block atomic="false" info="">
[20:14:33.850]        Sequence("DisableTraceSWO");
[20:14:33.850]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:14:33.851]            <block atomic="false" info="">
[20:14:33.851]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:14:33.851]                // -> [dbgmcu_val <= 0x00000000]
[20:14:33.851]            </block>
[20:14:33.851]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:14:33.851]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:14:33.852]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:14:33.852]                // -> [dbgmcu_val <= 0x00000007]
[20:14:33.852]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:14:33.853]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:14:33.853]            </block>
[20:14:33.853]          </sequence>
[20:14:33.854]      </block>
[20:14:33.854]      // end if-block "traceSWO"
[20:14:33.854]    </control>
[20:14:33.854]    <control if="traceTPIU" while="" timeout="0" info="">
[20:14:33.854]      // if-block "traceTPIU"
[20:14:33.854]        // =>  FALSE
[20:14:33.854]      // skip if-block "traceTPIU"
[20:14:33.854]    </control>
[20:14:33.855]  </sequence>
[20:14:33.855]  
[20:15:29.870]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:15:29.870]  
[20:15:29.870]  <debugvars>
[20:15:29.871]    // Pre-defined
[20:15:29.871]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:15:29.871]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:15:29.872]    __dp=0x00000000
[20:15:29.872]    __ap=0x00000000
[20:15:29.872]    __traceout=0x00000001      (SWO Trace)
[20:15:29.872]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:15:29.872]    __FlashAddr=0x00000000
[20:15:29.873]    __FlashLen=0x00000000
[20:15:29.873]    __FlashArg=0x00000000
[20:15:29.873]    __FlashOp=0x00000000
[20:15:29.873]    __Result=0x00000000
[20:15:29.873]    
[20:15:29.873]    // User-defined
[20:15:29.874]    DbgMCU_CR=0x00000007
[20:15:29.874]    DbgMCU_APB1_Fz=0x00000000
[20:15:29.874]    DbgMCU_APB2_Fz=0x00000000
[20:15:29.874]    TraceClk_Pin=0x00040002
[20:15:29.874]    TraceD0_Pin=0x00040003
[20:15:29.874]    TraceD1_Pin=0x00040004
[20:15:29.875]    TraceD2_Pin=0x00040005
[20:15:29.875]    TraceD3_Pin=0x00040006
[20:15:29.875]  </debugvars>
[20:15:29.875]  
[20:15:29.875]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:15:29.876]    <block atomic="false" info="">
[20:15:29.876]      Sequence("CheckID");
[20:15:29.876]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:15:29.876]          <block atomic="false" info="">
[20:15:29.876]            __var pidr1 = 0;
[20:15:29.877]              // -> [pidr1 <= 0x00000000]
[20:15:29.877]            __var pidr2 = 0;
[20:15:29.877]              // -> [pidr2 <= 0x00000000]
[20:15:29.877]            __var jep106id = 0;
[20:15:29.877]              // -> [jep106id <= 0x00000000]
[20:15:29.877]            __var ROMTableBase = 0;
[20:15:29.878]              // -> [ROMTableBase <= 0x00000000]
[20:15:29.878]            __ap = 0;      // AHB-AP
[20:15:29.878]              // -> [__ap <= 0x00000000]
[20:15:29.878]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:15:29.878]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.879]              // -> [ROMTableBase <= 0xE00FD000]
[20:15:29.879]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:15:29.879]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.879]              // -> [pidr1 <= 0x00000004]
[20:15:29.880]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:15:29.880]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.880]              // -> [pidr2 <= 0x0000001A]
[20:15:29.880]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:15:29.881]              // -> [jep106id <= 0x00000020]
[20:15:29.881]          </block>
[20:15:29.881]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:15:29.881]            // if-block "jep106id != 0x20"
[20:15:29.881]              // =>  FALSE
[20:15:29.881]            // skip if-block "jep106id != 0x20"
[20:15:29.881]          </control>
[20:15:29.881]        </sequence>
[20:15:29.882]    </block>
[20:15:29.882]  </sequence>
[20:15:29.882]  
[20:15:29.897]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:15:29.897]  
[20:15:29.897]  <debugvars>
[20:15:29.898]    // Pre-defined
[20:15:29.898]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:15:29.898]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:15:29.898]    __dp=0x00000000
[20:15:29.898]    __ap=0x00000000
[20:15:29.899]    __traceout=0x00000001      (SWO Trace)
[20:15:29.899]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:15:29.899]    __FlashAddr=0x00000000
[20:15:29.899]    __FlashLen=0x00000000
[20:15:29.899]    __FlashArg=0x00000000
[20:15:29.899]    __FlashOp=0x00000000
[20:15:29.900]    __Result=0x00000000
[20:15:29.900]    
[20:15:29.900]    // User-defined
[20:15:29.900]    DbgMCU_CR=0x00000007
[20:15:29.900]    DbgMCU_APB1_Fz=0x00000000
[20:15:29.900]    DbgMCU_APB2_Fz=0x00000000
[20:15:29.901]    TraceClk_Pin=0x00040002
[20:15:29.901]    TraceD0_Pin=0x00040003
[20:15:29.901]    TraceD1_Pin=0x00040004
[20:15:29.901]    TraceD2_Pin=0x00040005
[20:15:29.901]    TraceD3_Pin=0x00040006
[20:15:29.901]  </debugvars>
[20:15:29.902]  
[20:15:29.902]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:15:29.902]    <block atomic="false" info="">
[20:15:29.902]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:15:29.903]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.903]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:15:29.903]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.904]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:15:29.904]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.904]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:15:29.905]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:29.905]    </block>
[20:15:29.905]  </sequence>
[20:15:29.905]  
[20:16:01.297]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:16:01.297]  
[20:16:01.298]  <debugvars>
[20:16:01.298]    // Pre-defined
[20:16:01.298]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:01.298]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:01.298]    __dp=0x00000000
[20:16:01.298]    __ap=0x00000000
[20:16:01.299]    __traceout=0x00000001      (SWO Trace)
[20:16:01.299]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:01.299]    __FlashAddr=0x00000000
[20:16:01.299]    __FlashLen=0x00000000
[20:16:01.299]    __FlashArg=0x00000000
[20:16:01.299]    __FlashOp=0x00000000
[20:16:01.299]    __Result=0x00000000
[20:16:01.300]    
[20:16:01.300]    // User-defined
[20:16:01.300]    DbgMCU_CR=0x00000007
[20:16:01.300]    DbgMCU_APB1_Fz=0x00000000
[20:16:01.300]    DbgMCU_APB2_Fz=0x00000000
[20:16:01.300]    TraceClk_Pin=0x00040002
[20:16:01.301]    TraceD0_Pin=0x00040003
[20:16:01.301]    TraceD1_Pin=0x00040004
[20:16:01.301]    TraceD2_Pin=0x00040005
[20:16:01.301]    TraceD3_Pin=0x00040006
[20:16:01.301]  </debugvars>
[20:16:01.302]  
[20:16:01.302]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:16:01.302]    <block atomic="false" info="">
[20:16:01.302]      Sequence("CheckID");
[20:16:01.302]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:16:01.303]          <block atomic="false" info="">
[20:16:01.303]            __var pidr1 = 0;
[20:16:01.303]              // -> [pidr1 <= 0x00000000]
[20:16:01.303]            __var pidr2 = 0;
[20:16:01.303]              // -> [pidr2 <= 0x00000000]
[20:16:01.303]            __var jep106id = 0;
[20:16:01.303]              // -> [jep106id <= 0x00000000]
[20:16:01.304]            __var ROMTableBase = 0;
[20:16:01.304]              // -> [ROMTableBase <= 0x00000000]
[20:16:01.304]            __ap = 0;      // AHB-AP
[20:16:01.304]              // -> [__ap <= 0x00000000]
[20:16:01.304]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:16:01.305]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.305]              // -> [ROMTableBase <= 0xE00FD000]
[20:16:01.306]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:16:01.306]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.307]              // -> [pidr1 <= 0x00000004]
[20:16:01.307]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:16:01.307]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.307]              // -> [pidr2 <= 0x0000001A]
[20:16:01.308]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:16:01.308]              // -> [jep106id <= 0x00000020]
[20:16:01.308]          </block>
[20:16:01.308]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:16:01.308]            // if-block "jep106id != 0x20"
[20:16:01.308]              // =>  FALSE
[20:16:01.309]            // skip if-block "jep106id != 0x20"
[20:16:01.309]          </control>
[20:16:01.309]        </sequence>
[20:16:01.309]    </block>
[20:16:01.309]  </sequence>
[20:16:01.309]  
[20:16:01.324]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:16:01.324]  
[20:16:01.325]  <debugvars>
[20:16:01.325]    // Pre-defined
[20:16:01.325]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:01.325]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:01.325]    __dp=0x00000000
[20:16:01.325]    __ap=0x00000000
[20:16:01.325]    __traceout=0x00000001      (SWO Trace)
[20:16:01.326]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:01.326]    __FlashAddr=0x00000000
[20:16:01.326]    __FlashLen=0x00000000
[20:16:01.326]    __FlashArg=0x00000000
[20:16:01.326]    __FlashOp=0x00000000
[20:16:01.326]    __Result=0x00000000
[20:16:01.326]    
[20:16:01.326]    // User-defined
[20:16:01.327]    DbgMCU_CR=0x00000007
[20:16:01.327]    DbgMCU_APB1_Fz=0x00000000
[20:16:01.327]    DbgMCU_APB2_Fz=0x00000000
[20:16:01.327]    TraceClk_Pin=0x00040002
[20:16:01.327]    TraceD0_Pin=0x00040003
[20:16:01.327]    TraceD1_Pin=0x00040004
[20:16:01.328]    TraceD2_Pin=0x00040005
[20:16:01.328]    TraceD3_Pin=0x00040006
[20:16:01.328]  </debugvars>
[20:16:01.328]  
[20:16:01.328]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:16:01.328]    <block atomic="false" info="">
[20:16:01.328]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:16:01.329]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.329]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:16:01.329]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.330]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:16:01.330]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.330]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:16:01.331]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.331]    </block>
[20:16:01.331]  </sequence>
[20:16:01.331]  
[20:16:01.348]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:16:01.348]  
[20:16:01.348]  <debugvars>
[20:16:01.348]    // Pre-defined
[20:16:01.348]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:01.348]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:01.349]    __dp=0x00000000
[20:16:01.349]    __ap=0x00000000
[20:16:01.349]    __traceout=0x00000001      (SWO Trace)
[20:16:01.349]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:01.350]    __FlashAddr=0x00000000
[20:16:01.350]    __FlashLen=0x00000000
[20:16:01.350]    __FlashArg=0x00000000
[20:16:01.350]    __FlashOp=0x00000000
[20:16:01.350]    __Result=0x00000000
[20:16:01.351]    
[20:16:01.351]    // User-defined
[20:16:01.351]    DbgMCU_CR=0x00000007
[20:16:01.351]    DbgMCU_APB1_Fz=0x00000000
[20:16:01.351]    DbgMCU_APB2_Fz=0x00000000
[20:16:01.351]    TraceClk_Pin=0x00040002
[20:16:01.352]    TraceD0_Pin=0x00040003
[20:16:01.352]    TraceD1_Pin=0x00040004
[20:16:01.352]    TraceD2_Pin=0x00040005
[20:16:01.352]    TraceD3_Pin=0x00040006
[20:16:01.352]  </debugvars>
[20:16:01.353]  
[20:16:01.353]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:16:01.353]    <block atomic="false" info="">
[20:16:01.353]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:16:01.353]        // -> [traceSWO <= 0x00000001]
[20:16:01.354]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:16:01.354]        // -> [traceTPIU <= 0x00000000]
[20:16:01.354]    </block>
[20:16:01.354]    <control if="traceSWO" while="" timeout="0" info="">
[20:16:01.354]      // if-block "traceSWO"
[20:16:01.355]        // =>  TRUE
[20:16:01.355]      <block atomic="false" info="">
[20:16:01.355]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:16:01.355]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:16:01.355]            <block atomic="false" info="">
[20:16:01.356]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:16:01.356]                // -> [dbgmcu_val <= 0x00000000]
[20:16:01.356]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:16:01.356]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:16:01.356]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:16:01.357]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.357]                // -> [dbgmcu_val <= 0x00000007]
[20:16:01.357]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:16:01.357]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:16:01.358]              Sequence("ConfigureTraceSWOPin");
[20:16:01.358]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:16:01.358]                  <block atomic="false" info="">
[20:16:01.358]                    __var pin     = 0;
[20:16:01.358]                      // -> [pin <= 0x00000000]
[20:16:01.359]                    __var port    = 0;
[20:16:01.359]                      // -> [port <= 0x00000000]
[20:16:01.359]                    __var portAdr = 0;
[20:16:01.359]                      // -> [portAdr <= 0x00000000]
[20:16:01.359]                    __var pos     = 0;
[20:16:01.360]                      // -> [pos <= 0x00000000]
[20:16:01.360]                    __var SWO_Pin = 0x00010003;          // PB3
[20:16:01.360]                      // -> [SWO_Pin <= 0x00010003]
[20:16:01.360]                  </block>
[20:16:01.361]                  <block atomic="false" info="configure SWO">
[20:16:01.361]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:16:01.361]                      // -> [pin <= 0x00000003]
[20:16:01.361]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:16:01.361]                      // -> [port <= 0x00000001]
[20:16:01.361]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:16:01.362]                      // -> [portAdr <= 0x40020400]
[20:16:01.362]                    pos = pin * 2;
[20:16:01.362]                      // -> [pos <= 0x00000006]
[20:16:01.362]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:16:01.363]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.363]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.363]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:16:01.364]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.364]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.364]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:16:01.365]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.365]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.366]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:16:01.366]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.366]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.367]                  </block>
[20:16:01.367]                  <control if="pin <  8" while="" timeout="0" info="">
[20:16:01.367]                    // if-block "pin <  8"
[20:16:01.367]                      // =>  TRUE
[20:16:01.367]                    <block atomic="false" info="">
[20:16:01.367]                      pos = ((pin    ) & 7) * 4;
[20:16:01.367]                        // -> [pos <= 0x0000000C]
[20:16:01.368]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:16:01.368]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.369]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.369]                    </block>
[20:16:01.369]                    // end if-block "pin <  8"
[20:16:01.369]                  </control>
[20:16:01.369]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:16:01.369]                    // if-block "pin >= 8"
[20:16:01.370]                      // =>  FALSE
[20:16:01.370]                    // skip if-block "pin >= 8"
[20:16:01.370]                  </control>
[20:16:01.370]                </sequence>
[20:16:01.370]            </block>
[20:16:01.370]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:16:01.370]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:16:01.371]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.371]            </block>
[20:16:01.371]          </sequence>
[20:16:01.372]      </block>
[20:16:01.372]      // end if-block "traceSWO"
[20:16:01.372]    </control>
[20:16:01.372]    <control if="traceTPIU" while="" timeout="0" info="">
[20:16:01.372]      // if-block "traceTPIU"
[20:16:01.372]        // =>  FALSE
[20:16:01.373]      // skip if-block "traceTPIU"
[20:16:01.373]    </control>
[20:16:01.373]  </sequence>
[20:16:01.373]  
[20:16:01.377]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:16:01.377]  
[20:16:01.377]  <debugvars>
[20:16:01.377]    // Pre-defined
[20:16:01.377]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:01.379]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:01.379]    __dp=0x00000000
[20:16:01.379]    __ap=0x00000000
[20:16:01.379]    __traceout=0x00000001      (SWO Trace)
[20:16:01.379]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:01.379]    __FlashAddr=0x00000000
[20:16:01.379]    __FlashLen=0x00000000
[20:16:01.379]    __FlashArg=0x00000000
[20:16:01.379]    __FlashOp=0x00000000
[20:16:01.379]    __Result=0x00000000
[20:16:01.379]    
[20:16:01.379]    // User-defined
[20:16:01.379]    DbgMCU_CR=0x00000007
[20:16:01.379]    DbgMCU_APB1_Fz=0x00000000
[20:16:01.379]    DbgMCU_APB2_Fz=0x00000000
[20:16:01.380]    TraceClk_Pin=0x00040002
[20:16:01.380]    TraceD0_Pin=0x00040003
[20:16:01.380]    TraceD1_Pin=0x00040004
[20:16:01.380]    TraceD2_Pin=0x00040005
[20:16:01.380]    TraceD3_Pin=0x00040006
[20:16:01.380]  </debugvars>
[20:16:01.380]  
[20:16:01.381]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:16:01.381]    <block atomic="false" info="">
[20:16:01.381]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:16:01.381]        // -> [traceSWO <= 0x00000001]
[20:16:01.381]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:16:01.381]        // -> [traceTPIU <= 0x00000000]
[20:16:01.381]    </block>
[20:16:01.382]    <control if="traceSWO" while="" timeout="0" info="">
[20:16:01.382]      // if-block "traceSWO"
[20:16:01.382]        // =>  TRUE
[20:16:01.382]      <block atomic="false" info="">
[20:16:01.382]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:16:01.382]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:16:01.382]            <block atomic="false" info="">
[20:16:01.382]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:16:01.383]                // -> [dbgmcu_val <= 0x00000000]
[20:16:01.383]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:16:01.383]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:16:01.383]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:16:01.383]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.383]                // -> [dbgmcu_val <= 0x00000007]
[20:16:01.384]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:16:01.384]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:16:01.384]              Sequence("ConfigureTraceSWOPin");
[20:16:01.384]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:16:01.384]                  <block atomic="false" info="">
[20:16:01.384]                    __var pin     = 0;
[20:16:01.384]                      // -> [pin <= 0x00000000]
[20:16:01.385]                    __var port    = 0;
[20:16:01.385]                      // -> [port <= 0x00000000]
[20:16:01.385]                    __var portAdr = 0;
[20:16:01.385]                      // -> [portAdr <= 0x00000000]
[20:16:01.385]                    __var pos     = 0;
[20:16:01.385]                      // -> [pos <= 0x00000000]
[20:16:01.385]                    __var SWO_Pin = 0x00010003;          // PB3
[20:16:01.385]                      // -> [SWO_Pin <= 0x00010003]
[20:16:01.385]                  </block>
[20:16:01.386]                  <block atomic="false" info="configure SWO">
[20:16:01.386]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:16:01.386]                      // -> [pin <= 0x00000003]
[20:16:01.386]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:16:01.386]                      // -> [port <= 0x00000001]
[20:16:01.386]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:16:01.387]                      // -> [portAdr <= 0x40020400]
[20:16:01.387]                    pos = pin * 2;
[20:16:01.387]                      // -> [pos <= 0x00000006]
[20:16:01.387]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:16:01.387]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.388]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.388]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:16:01.388]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.389]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.389]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:16:01.389]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.390]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.390]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:16:01.391]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.391]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.391]                  </block>
[20:16:01.391]                  <control if="pin <  8" while="" timeout="0" info="">
[20:16:01.391]                    // if-block "pin <  8"
[20:16:01.391]                      // =>  TRUE
[20:16:01.392]                    <block atomic="false" info="">
[20:16:01.393]                      pos = ((pin    ) & 7) * 4;
[20:16:01.393]                        // -> [pos <= 0x0000000C]
[20:16:01.393]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:16:01.393]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.393]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.393]                    </block>
[20:16:01.393]                    // end if-block "pin <  8"
[20:16:01.393]                  </control>
[20:16:01.393]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:16:01.394]                    // if-block "pin >= 8"
[20:16:01.394]                      // =>  FALSE
[20:16:01.394]                    // skip if-block "pin >= 8"
[20:16:01.394]                  </control>
[20:16:01.394]                </sequence>
[20:16:01.394]            </block>
[20:16:01.394]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:16:01.394]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:16:01.395]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.395]            </block>
[20:16:01.395]          </sequence>
[20:16:01.395]      </block>
[20:16:01.395]      // end if-block "traceSWO"
[20:16:01.396]    </control>
[20:16:01.396]    <control if="traceTPIU" while="" timeout="0" info="">
[20:16:01.396]      // if-block "traceTPIU"
[20:16:01.396]        // =>  FALSE
[20:16:01.396]      // skip if-block "traceTPIU"
[20:16:01.396]    </control>
[20:16:01.396]  </sequence>
[20:16:01.396]  
[20:16:01.621]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:16:01.621]  
[20:16:01.621]  <debugvars>
[20:16:01.622]    // Pre-defined
[20:16:01.622]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:01.622]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:01.622]    __dp=0x00000000
[20:16:01.622]    __ap=0x00000000
[20:16:01.623]    __traceout=0x00000001      (SWO Trace)
[20:16:01.623]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:01.623]    __FlashAddr=0x00000000
[20:16:01.623]    __FlashLen=0x00000000
[20:16:01.623]    __FlashArg=0x00000000
[20:16:01.624]    __FlashOp=0x00000000
[20:16:01.624]    __Result=0x00000000
[20:16:01.624]    
[20:16:01.624]    // User-defined
[20:16:01.624]    DbgMCU_CR=0x00000007
[20:16:01.624]    DbgMCU_APB1_Fz=0x00000000
[20:16:01.624]    DbgMCU_APB2_Fz=0x00000000
[20:16:01.625]    TraceClk_Pin=0x00040002
[20:16:01.625]    TraceD0_Pin=0x00040003
[20:16:01.625]    TraceD1_Pin=0x00040004
[20:16:01.625]    TraceD2_Pin=0x00040005
[20:16:01.625]    TraceD3_Pin=0x00040006
[20:16:01.625]  </debugvars>
[20:16:01.625]  
[20:16:01.625]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:16:01.626]    <block atomic="false" info="">
[20:16:01.626]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:16:01.626]        // -> [traceSWO <= 0x00000001]
[20:16:01.626]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:16:01.626]        // -> [traceTPIU <= 0x00000000]
[20:16:01.626]    </block>
[20:16:01.626]    <control if="traceSWO" while="" timeout="0" info="">
[20:16:01.627]      // if-block "traceSWO"
[20:16:01.627]        // =>  TRUE
[20:16:01.627]      <block atomic="false" info="">
[20:16:01.627]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:16:01.627]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:16:01.627]            <block atomic="false" info="">
[20:16:01.627]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:16:01.628]                // -> [dbgmcu_val <= 0x00000000]
[20:16:01.628]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:16:01.628]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:16:01.628]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:16:01.628]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.628]                // -> [dbgmcu_val <= 0x00000007]
[20:16:01.629]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:16:01.629]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:16:01.629]              Sequence("ConfigureTraceSWOPin");
[20:16:01.629]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:16:01.629]                  <block atomic="false" info="">
[20:16:01.630]                    __var pin     = 0;
[20:16:01.630]                      // -> [pin <= 0x00000000]
[20:16:01.630]                    __var port    = 0;
[20:16:01.630]                      // -> [port <= 0x00000000]
[20:16:01.630]                    __var portAdr = 0;
[20:16:01.630]                      // -> [portAdr <= 0x00000000]
[20:16:01.630]                    __var pos     = 0;
[20:16:01.630]                      // -> [pos <= 0x00000000]
[20:16:01.631]                    __var SWO_Pin = 0x00010003;          // PB3
[20:16:01.631]                      // -> [SWO_Pin <= 0x00010003]
[20:16:01.631]                  </block>
[20:16:01.631]                  <block atomic="false" info="configure SWO">
[20:16:01.631]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:16:01.631]                      // -> [pin <= 0x00000003]
[20:16:01.631]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:16:01.632]                      // -> [port <= 0x00000001]
[20:16:01.632]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:16:01.632]                      // -> [portAdr <= 0x40020400]
[20:16:01.632]                    pos = pin * 2;
[20:16:01.632]                      // -> [pos <= 0x00000006]
[20:16:01.632]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:16:01.633]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.633]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.634]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:16:01.634]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.634]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.635]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:16:01.635]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.636]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.636]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:16:01.636]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.637]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.637]                  </block>
[20:16:01.637]                  <control if="pin <  8" while="" timeout="0" info="">
[20:16:01.637]                    // if-block "pin <  8"
[20:16:01.637]                      // =>  TRUE
[20:16:01.637]                    <block atomic="false" info="">
[20:16:01.638]                      pos = ((pin    ) & 7) * 4;
[20:16:01.638]                        // -> [pos <= 0x0000000C]
[20:16:01.638]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:16:01.638]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.639]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.640]                    </block>
[20:16:01.640]                    // end if-block "pin <  8"
[20:16:01.640]                  </control>
[20:16:01.640]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:16:01.640]                    // if-block "pin >= 8"
[20:16:01.641]                      // =>  FALSE
[20:16:01.641]                    // skip if-block "pin >= 8"
[20:16:01.641]                  </control>
[20:16:01.641]                </sequence>
[20:16:01.642]            </block>
[20:16:01.642]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:16:01.642]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:16:01.643]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:01.643]            </block>
[20:16:01.643]          </sequence>
[20:16:01.643]      </block>
[20:16:01.643]      // end if-block "traceSWO"
[20:16:01.644]    </control>
[20:16:01.644]    <control if="traceTPIU" while="" timeout="0" info="">
[20:16:01.644]      // if-block "traceTPIU"
[20:16:01.644]        // =>  FALSE
[20:16:01.644]      // skip if-block "traceTPIU"
[20:16:01.645]    </control>
[20:16:01.645]  </sequence>
[20:16:01.645]  
[20:18:44.346]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:18:44.346]  
[20:18:44.346]  <debugvars>
[20:18:44.347]    // Pre-defined
[20:18:44.347]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:18:44.347]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:18:44.347]    __dp=0x00000000
[20:18:44.347]    __ap=0x00000000
[20:18:44.348]    __traceout=0x00000001      (SWO Trace)
[20:18:44.348]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:18:44.348]    __FlashAddr=0x00000000
[20:18:44.348]    __FlashLen=0x00000000
[20:18:44.348]    __FlashArg=0x00000000
[20:18:44.348]    __FlashOp=0x00000000
[20:18:44.349]    __Result=0x00000000
[20:18:44.349]    
[20:18:44.349]    // User-defined
[20:18:44.349]    DbgMCU_CR=0x00000007
[20:18:44.349]    DbgMCU_APB1_Fz=0x00000000
[20:18:44.349]    DbgMCU_APB2_Fz=0x00000000
[20:18:44.350]    TraceClk_Pin=0x00040002
[20:18:44.350]    TraceD0_Pin=0x00040003
[20:18:44.350]    TraceD1_Pin=0x00040004
[20:18:44.350]    TraceD2_Pin=0x00040005
[20:18:44.350]    TraceD3_Pin=0x00040006
[20:18:44.350]  </debugvars>
[20:18:44.350]  
[20:18:44.350]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:18:44.351]    <block atomic="false" info="">
[20:18:44.351]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:18:44.351]        // -> [traceSWO <= 0x00000001]
[20:18:44.351]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:18:44.351]        // -> [traceTPIU <= 0x00000000]
[20:18:44.351]    </block>
[20:18:44.351]    <control if="traceSWO" while="" timeout="0" info="">
[20:18:44.351]      // if-block "traceSWO"
[20:18:44.352]        // =>  TRUE
[20:18:44.352]      <block atomic="false" info="">
[20:18:44.352]        Sequence("DisableTraceSWO");
[20:18:44.352]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:18:44.352]            <block atomic="false" info="">
[20:18:44.352]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:18:44.352]                // -> [dbgmcu_val <= 0x00000000]
[20:18:44.352]            </block>
[20:18:44.352]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:18:44.353]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:18:44.353]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:18:44.353]                // -> [dbgmcu_val <= 0x00000007]
[20:18:44.353]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:18:44.354]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:44.354]            </block>
[20:18:44.354]          </sequence>
[20:18:44.354]      </block>
[20:18:44.354]      // end if-block "traceSWO"
[20:18:44.354]    </control>
[20:18:44.354]    <control if="traceTPIU" while="" timeout="0" info="">
[20:18:44.355]      // if-block "traceTPIU"
[20:18:44.355]        // =>  FALSE
[20:18:44.355]      // skip if-block "traceTPIU"
[20:18:44.355]    </control>
[20:18:44.355]  </sequence>
[20:18:44.355]  
[20:20:24.054]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:20:24.054]  
[20:20:24.054]  <debugvars>
[20:20:24.054]    // Pre-defined
[20:20:24.055]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:20:24.055]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:20:24.055]    __dp=0x00000000
[20:20:24.055]    __ap=0x00000000
[20:20:24.055]    __traceout=0x00000001      (SWO Trace)
[20:20:24.056]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:20:24.056]    __FlashAddr=0x00000000
[20:20:24.056]    __FlashLen=0x00000000
[20:20:24.056]    __FlashArg=0x00000000
[20:20:24.056]    __FlashOp=0x00000000
[20:20:24.056]    __Result=0x00000000
[20:20:24.056]    
[20:20:24.056]    // User-defined
[20:20:24.057]    DbgMCU_CR=0x00000007
[20:20:24.057]    DbgMCU_APB1_Fz=0x00000000
[20:20:24.057]    DbgMCU_APB2_Fz=0x00000000
[20:20:24.057]    TraceClk_Pin=0x00040002
[20:20:24.057]    TraceD0_Pin=0x00040003
[20:20:24.058]    TraceD1_Pin=0x00040004
[20:20:24.058]    TraceD2_Pin=0x00040005
[20:20:24.058]    TraceD3_Pin=0x00040006
[20:20:24.058]  </debugvars>
[20:20:24.058]  
[20:20:24.058]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:20:24.058]    <block atomic="false" info="">
[20:20:24.059]      Sequence("CheckID");
[20:20:24.059]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:20:24.059]          <block atomic="false" info="">
[20:20:24.059]            __var pidr1 = 0;
[20:20:24.059]              // -> [pidr1 <= 0x00000000]
[20:20:24.059]            __var pidr2 = 0;
[20:20:24.060]              // -> [pidr2 <= 0x00000000]
[20:20:24.060]            __var jep106id = 0;
[20:20:24.060]              // -> [jep106id <= 0x00000000]
[20:20:24.060]            __var ROMTableBase = 0;
[20:20:24.060]              // -> [ROMTableBase <= 0x00000000]
[20:20:24.061]            __ap = 0;      // AHB-AP
[20:20:24.061]              // -> [__ap <= 0x00000000]
[20:20:24.061]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:20:24.061]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.062]              // -> [ROMTableBase <= 0xE00FD000]
[20:20:24.062]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:20:24.062]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.062]              // -> [pidr1 <= 0x00000004]
[20:20:24.062]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:20:24.063]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.063]              // -> [pidr2 <= 0x0000001A]
[20:20:24.063]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:20:24.063]              // -> [jep106id <= 0x00000020]
[20:20:24.063]          </block>
[20:20:24.064]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:20:24.064]            // if-block "jep106id != 0x20"
[20:20:24.064]              // =>  FALSE
[20:20:24.064]            // skip if-block "jep106id != 0x20"
[20:20:24.064]          </control>
[20:20:24.064]        </sequence>
[20:20:24.064]    </block>
[20:20:24.065]  </sequence>
[20:20:24.065]  
[20:20:24.080]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:20:24.080]  
[20:20:24.080]  <debugvars>
[20:20:24.081]    // Pre-defined
[20:20:24.081]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:20:24.081]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:20:24.081]    __dp=0x00000000
[20:20:24.081]    __ap=0x00000000
[20:20:24.082]    __traceout=0x00000001      (SWO Trace)
[20:20:24.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:20:24.082]    __FlashAddr=0x00000000
[20:20:24.082]    __FlashLen=0x00000000
[20:20:24.082]    __FlashArg=0x00000000
[20:20:24.083]    __FlashOp=0x00000000
[20:20:24.083]    __Result=0x00000000
[20:20:24.083]    
[20:20:24.083]    // User-defined
[20:20:24.083]    DbgMCU_CR=0x00000007
[20:20:24.083]    DbgMCU_APB1_Fz=0x00000000
[20:20:24.083]    DbgMCU_APB2_Fz=0x00000000
[20:20:24.084]    TraceClk_Pin=0x00040002
[20:20:24.084]    TraceD0_Pin=0x00040003
[20:20:24.084]    TraceD1_Pin=0x00040004
[20:20:24.084]    TraceD2_Pin=0x00040005
[20:20:24.084]    TraceD3_Pin=0x00040006
[20:20:24.084]  </debugvars>
[20:20:24.085]  
[20:20:24.085]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:20:24.085]    <block atomic="false" info="">
[20:20:24.085]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:20:24.086]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.086]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:20:24.087]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.087]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:20:24.087]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.087]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:20:24.088]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:20:24.088]    </block>
[20:20:24.088]  </sequence>
[20:20:24.088]  
[20:23:44.485]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:23:44.485]  
[20:23:44.485]  <debugvars>
[20:23:44.486]    // Pre-defined
[20:23:44.486]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:23:44.486]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:23:44.486]    __dp=0x00000000
[20:23:44.487]    __ap=0x00000000
[20:23:44.487]    __traceout=0x00000001      (SWO Trace)
[20:23:44.487]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:23:44.487]    __FlashAddr=0x00000000
[20:23:44.487]    __FlashLen=0x00000000
[20:23:44.488]    __FlashArg=0x00000000
[20:23:44.488]    __FlashOp=0x00000000
[20:23:44.488]    __Result=0x00000000
[20:23:44.488]    
[20:23:44.488]    // User-defined
[20:23:44.488]    DbgMCU_CR=0x00000007
[20:23:44.489]    DbgMCU_APB1_Fz=0x00000000
[20:23:44.489]    DbgMCU_APB2_Fz=0x00000000
[20:23:44.489]    TraceClk_Pin=0x00040002
[20:23:44.489]    TraceD0_Pin=0x00040003
[20:23:44.489]    TraceD1_Pin=0x00040004
[20:23:44.489]    TraceD2_Pin=0x00040005
[20:23:44.490]    TraceD3_Pin=0x00040006
[20:23:44.490]  </debugvars>
[20:23:44.490]  
[20:23:44.490]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:23:44.491]    <block atomic="false" info="">
[20:23:44.491]      Sequence("CheckID");
[20:23:44.491]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:23:44.491]          <block atomic="false" info="">
[20:23:44.491]            __var pidr1 = 0;
[20:23:44.491]              // -> [pidr1 <= 0x00000000]
[20:23:44.492]            __var pidr2 = 0;
[20:23:44.492]              // -> [pidr2 <= 0x00000000]
[20:23:44.492]            __var jep106id = 0;
[20:23:44.492]              // -> [jep106id <= 0x00000000]
[20:23:44.492]            __var ROMTableBase = 0;
[20:23:44.493]              // -> [ROMTableBase <= 0x00000000]
[20:23:44.493]            __ap = 0;      // AHB-AP
[20:23:44.493]              // -> [__ap <= 0x00000000]
[20:23:44.493]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:23:44.494]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.494]              // -> [ROMTableBase <= 0xE00FD000]
[20:23:44.494]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:23:44.495]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.495]              // -> [pidr1 <= 0x00000004]
[20:23:44.495]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:23:44.496]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.496]              // -> [pidr2 <= 0x0000001A]
[20:23:44.496]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:23:44.496]              // -> [jep106id <= 0x00000020]
[20:23:44.496]          </block>
[20:23:44.496]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:23:44.497]            // if-block "jep106id != 0x20"
[20:23:44.497]              // =>  FALSE
[20:23:44.497]            // skip if-block "jep106id != 0x20"
[20:23:44.497]          </control>
[20:23:44.497]        </sequence>
[20:23:44.497]    </block>
[20:23:44.498]  </sequence>
[20:23:44.498]  
[20:23:44.514]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:23:44.514]  
[20:23:44.514]  <debugvars>
[20:23:44.514]    // Pre-defined
[20:23:44.514]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:23:44.514]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:23:44.515]    __dp=0x00000000
[20:23:44.515]    __ap=0x00000000
[20:23:44.515]    __traceout=0x00000001      (SWO Trace)
[20:23:44.515]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:23:44.515]    __FlashAddr=0x00000000
[20:23:44.515]    __FlashLen=0x00000000
[20:23:44.516]    __FlashArg=0x00000000
[20:23:44.516]    __FlashOp=0x00000000
[20:23:44.516]    __Result=0x00000000
[20:23:44.516]    
[20:23:44.516]    // User-defined
[20:23:44.516]    DbgMCU_CR=0x00000007
[20:23:44.516]    DbgMCU_APB1_Fz=0x00000000
[20:23:44.516]    DbgMCU_APB2_Fz=0x00000000
[20:23:44.517]    TraceClk_Pin=0x00040002
[20:23:44.517]    TraceD0_Pin=0x00040003
[20:23:44.517]    TraceD1_Pin=0x00040004
[20:23:44.517]    TraceD2_Pin=0x00040005
[20:23:44.517]    TraceD3_Pin=0x00040006
[20:23:44.517]  </debugvars>
[20:23:44.518]  
[20:23:44.518]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:23:44.518]    <block atomic="false" info="">
[20:23:44.518]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:23:44.518]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.519]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:23:44.519]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.519]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:23:44.520]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.520]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:23:44.520]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:23:44.521]    </block>
[20:23:44.521]  </sequence>
[20:23:44.521]  
[20:24:15.899]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:24:15.899]  
[20:24:15.899]  <debugvars>
[20:24:15.899]    // Pre-defined
[20:24:15.899]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:15.900]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:15.900]    __dp=0x00000000
[20:24:15.900]    __ap=0x00000000
[20:24:15.900]    __traceout=0x00000001      (SWO Trace)
[20:24:15.900]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:15.900]    __FlashAddr=0x00000000
[20:24:15.901]    __FlashLen=0x00000000
[20:24:15.901]    __FlashArg=0x00000000
[20:24:15.901]    __FlashOp=0x00000000
[20:24:15.901]    __Result=0x00000000
[20:24:15.901]    
[20:24:15.901]    // User-defined
[20:24:15.901]    DbgMCU_CR=0x00000007
[20:24:15.902]    DbgMCU_APB1_Fz=0x00000000
[20:24:15.902]    DbgMCU_APB2_Fz=0x00000000
[20:24:15.902]    TraceClk_Pin=0x00040002
[20:24:15.902]    TraceD0_Pin=0x00040003
[20:24:15.902]    TraceD1_Pin=0x00040004
[20:24:15.902]    TraceD2_Pin=0x00040005
[20:24:15.902]    TraceD3_Pin=0x00040006
[20:24:15.903]  </debugvars>
[20:24:15.903]  
[20:24:15.903]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:24:15.903]    <block atomic="false" info="">
[20:24:15.903]      Sequence("CheckID");
[20:24:15.903]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:24:15.903]          <block atomic="false" info="">
[20:24:15.904]            __var pidr1 = 0;
[20:24:15.904]              // -> [pidr1 <= 0x00000000]
[20:24:15.904]            __var pidr2 = 0;
[20:24:15.904]              // -> [pidr2 <= 0x00000000]
[20:24:15.904]            __var jep106id = 0;
[20:24:15.904]              // -> [jep106id <= 0x00000000]
[20:24:15.904]            __var ROMTableBase = 0;
[20:24:15.905]              // -> [ROMTableBase <= 0x00000000]
[20:24:15.905]            __ap = 0;      // AHB-AP
[20:24:15.905]              // -> [__ap <= 0x00000000]
[20:24:15.905]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:24:15.905]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.906]              // -> [ROMTableBase <= 0xE00FD000]
[20:24:15.906]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:24:15.906]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.906]              // -> [pidr1 <= 0x00000004]
[20:24:15.907]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:24:15.907]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.907]              // -> [pidr2 <= 0x0000001A]
[20:24:15.907]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:24:15.908]              // -> [jep106id <= 0x00000020]
[20:24:15.908]          </block>
[20:24:15.908]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:24:15.908]            // if-block "jep106id != 0x20"
[20:24:15.908]              // =>  FALSE
[20:24:15.908]            // skip if-block "jep106id != 0x20"
[20:24:15.908]          </control>
[20:24:15.909]        </sequence>
[20:24:15.909]    </block>
[20:24:15.909]  </sequence>
[20:24:15.909]  
[20:24:15.924]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:24:15.924]  
[20:24:15.924]  <debugvars>
[20:24:15.924]    // Pre-defined
[20:24:15.924]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:15.925]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:15.925]    __dp=0x00000000
[20:24:15.925]    __ap=0x00000000
[20:24:15.925]    __traceout=0x00000001      (SWO Trace)
[20:24:15.925]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:15.926]    __FlashAddr=0x00000000
[20:24:15.926]    __FlashLen=0x00000000
[20:24:15.926]    __FlashArg=0x00000000
[20:24:15.926]    __FlashOp=0x00000000
[20:24:15.926]    __Result=0x00000000
[20:24:15.927]    
[20:24:15.927]    // User-defined
[20:24:15.927]    DbgMCU_CR=0x00000007
[20:24:15.927]    DbgMCU_APB1_Fz=0x00000000
[20:24:15.927]    DbgMCU_APB2_Fz=0x00000000
[20:24:15.927]    TraceClk_Pin=0x00040002
[20:24:15.928]    TraceD0_Pin=0x00040003
[20:24:15.928]    TraceD1_Pin=0x00040004
[20:24:15.928]    TraceD2_Pin=0x00040005
[20:24:15.928]    TraceD3_Pin=0x00040006
[20:24:15.928]  </debugvars>
[20:24:15.929]  
[20:24:15.929]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:24:15.929]    <block atomic="false" info="">
[20:24:15.929]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:24:15.930]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.930]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:24:15.930]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.931]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:24:15.931]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.931]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:24:15.932]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.932]    </block>
[20:24:15.932]  </sequence>
[20:24:15.933]  
[20:24:15.949]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:24:15.949]  
[20:24:15.949]  <debugvars>
[20:24:15.949]    // Pre-defined
[20:24:15.949]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:15.950]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:15.950]    __dp=0x00000000
[20:24:15.950]    __ap=0x00000000
[20:24:15.950]    __traceout=0x00000001      (SWO Trace)
[20:24:15.950]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:15.950]    __FlashAddr=0x00000000
[20:24:15.951]    __FlashLen=0x00000000
[20:24:15.951]    __FlashArg=0x00000000
[20:24:15.951]    __FlashOp=0x00000000
[20:24:15.951]    __Result=0x00000000
[20:24:15.951]    
[20:24:15.951]    // User-defined
[20:24:15.952]    DbgMCU_CR=0x00000007
[20:24:15.952]    DbgMCU_APB1_Fz=0x00000000
[20:24:15.952]    DbgMCU_APB2_Fz=0x00000000
[20:24:15.952]    TraceClk_Pin=0x00040002
[20:24:15.952]    TraceD0_Pin=0x00040003
[20:24:15.952]    TraceD1_Pin=0x00040004
[20:24:15.953]    TraceD2_Pin=0x00040005
[20:24:15.953]    TraceD3_Pin=0x00040006
[20:24:15.953]  </debugvars>
[20:24:15.953]  
[20:24:15.953]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:24:15.953]    <block atomic="false" info="">
[20:24:15.954]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:24:15.954]        // -> [traceSWO <= 0x00000001]
[20:24:15.954]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:24:15.954]        // -> [traceTPIU <= 0x00000000]
[20:24:15.955]    </block>
[20:24:15.955]    <control if="traceSWO" while="" timeout="0" info="">
[20:24:15.955]      // if-block "traceSWO"
[20:24:15.955]        // =>  TRUE
[20:24:15.955]      <block atomic="false" info="">
[20:24:15.955]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:24:15.955]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:24:15.956]            <block atomic="false" info="">
[20:24:15.956]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:24:15.956]                // -> [dbgmcu_val <= 0x00000000]
[20:24:15.956]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:24:15.956]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:24:15.956]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:24:15.957]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.957]                // -> [dbgmcu_val <= 0x00000007]
[20:24:15.957]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:24:15.958]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:24:15.958]              Sequence("ConfigureTraceSWOPin");
[20:24:15.958]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:24:15.958]                  <block atomic="false" info="">
[20:24:15.958]                    __var pin     = 0;
[20:24:15.958]                      // -> [pin <= 0x00000000]
[20:24:15.958]                    __var port    = 0;
[20:24:15.959]                      // -> [port <= 0x00000000]
[20:24:15.959]                    __var portAdr = 0;
[20:24:15.959]                      // -> [portAdr <= 0x00000000]
[20:24:15.959]                    __var pos     = 0;
[20:24:15.959]                      // -> [pos <= 0x00000000]
[20:24:15.959]                    __var SWO_Pin = 0x00010003;          // PB3
[20:24:15.960]                      // -> [SWO_Pin <= 0x00010003]
[20:24:15.960]                  </block>
[20:24:15.960]                  <block atomic="false" info="configure SWO">
[20:24:15.960]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:24:15.960]                      // -> [pin <= 0x00000003]
[20:24:15.961]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:24:15.961]                      // -> [port <= 0x00000001]
[20:24:15.961]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:24:15.961]                      // -> [portAdr <= 0x40020400]
[20:24:15.961]                    pos = pin * 2;
[20:24:15.961]                      // -> [pos <= 0x00000006]
[20:24:15.961]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:24:15.962]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.962]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.963]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:24:15.963]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.964]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.964]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:24:15.964]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.965]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.965]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:24:15.966]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.966]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.966]                  </block>
[20:24:15.967]                  <control if="pin <  8" while="" timeout="0" info="">
[20:24:15.967]                    // if-block "pin <  8"
[20:24:15.967]                      // =>  TRUE
[20:24:15.967]                    <block atomic="false" info="">
[20:24:15.967]                      pos = ((pin    ) & 7) * 4;
[20:24:15.967]                        // -> [pos <= 0x0000000C]
[20:24:15.967]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:24:15.968]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.968]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.968]                    </block>
[20:24:15.968]                    // end if-block "pin <  8"
[20:24:15.969]                  </control>
[20:24:15.969]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:24:15.969]                    // if-block "pin >= 8"
[20:24:15.969]                      // =>  FALSE
[20:24:15.969]                    // skip if-block "pin >= 8"
[20:24:15.969]                  </control>
[20:24:15.969]                </sequence>
[20:24:15.969]            </block>
[20:24:15.970]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:24:15.970]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:24:15.970]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.970]            </block>
[20:24:15.970]          </sequence>
[20:24:15.970]      </block>
[20:24:15.971]      // end if-block "traceSWO"
[20:24:15.971]    </control>
[20:24:15.971]    <control if="traceTPIU" while="" timeout="0" info="">
[20:24:15.971]      // if-block "traceTPIU"
[20:24:15.971]        // =>  FALSE
[20:24:15.971]      // skip if-block "traceTPIU"
[20:24:15.971]    </control>
[20:24:15.971]  </sequence>
[20:24:15.972]  
[20:24:15.975]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:24:15.975]  
[20:24:15.976]  <debugvars>
[20:24:15.976]    // Pre-defined
[20:24:15.976]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:15.976]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:15.976]    __dp=0x00000000
[20:24:15.976]    __ap=0x00000000
[20:24:15.977]    __traceout=0x00000001      (SWO Trace)
[20:24:15.977]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:15.977]    __FlashAddr=0x00000000
[20:24:15.977]    __FlashLen=0x00000000
[20:24:15.977]    __FlashArg=0x00000000
[20:24:15.978]    __FlashOp=0x00000000
[20:24:15.978]    __Result=0x00000000
[20:24:15.978]    
[20:24:15.978]    // User-defined
[20:24:15.978]    DbgMCU_CR=0x00000007
[20:24:15.978]    DbgMCU_APB1_Fz=0x00000000
[20:24:15.979]    DbgMCU_APB2_Fz=0x00000000
[20:24:15.979]    TraceClk_Pin=0x00040002
[20:24:15.979]    TraceD0_Pin=0x00040003
[20:24:15.979]    TraceD1_Pin=0x00040004
[20:24:15.979]    TraceD2_Pin=0x00040005
[20:24:15.979]    TraceD3_Pin=0x00040006
[20:24:15.979]  </debugvars>
[20:24:15.980]  
[20:24:15.980]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:24:15.980]    <block atomic="false" info="">
[20:24:15.980]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:24:15.980]        // -> [traceSWO <= 0x00000001]
[20:24:15.981]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:24:15.981]        // -> [traceTPIU <= 0x00000000]
[20:24:15.981]    </block>
[20:24:15.981]    <control if="traceSWO" while="" timeout="0" info="">
[20:24:15.981]      // if-block "traceSWO"
[20:24:15.981]        // =>  TRUE
[20:24:15.981]      <block atomic="false" info="">
[20:24:15.982]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:24:15.982]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:24:15.982]            <block atomic="false" info="">
[20:24:15.982]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:24:15.982]                // -> [dbgmcu_val <= 0x00000000]
[20:24:15.983]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:24:15.983]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:24:15.983]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:24:15.983]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.983]                // -> [dbgmcu_val <= 0x00000007]
[20:24:15.984]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:24:15.984]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:24:15.984]              Sequence("ConfigureTraceSWOPin");
[20:24:15.984]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:24:15.984]                  <block atomic="false" info="">
[20:24:15.984]                    __var pin     = 0;
[20:24:15.984]                      // -> [pin <= 0x00000000]
[20:24:15.984]                    __var port    = 0;
[20:24:15.985]                      // -> [port <= 0x00000000]
[20:24:15.985]                    __var portAdr = 0;
[20:24:15.985]                      // -> [portAdr <= 0x00000000]
[20:24:15.985]                    __var pos     = 0;
[20:24:15.985]                      // -> [pos <= 0x00000000]
[20:24:15.985]                    __var SWO_Pin = 0x00010003;          // PB3
[20:24:15.985]                      // -> [SWO_Pin <= 0x00010003]
[20:24:15.986]                  </block>
[20:24:15.986]                  <block atomic="false" info="configure SWO">
[20:24:15.986]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:24:15.986]                      // -> [pin <= 0x00000003]
[20:24:15.986]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:24:15.986]                      // -> [port <= 0x00000001]
[20:24:15.986]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:24:15.986]                      // -> [portAdr <= 0x40020400]
[20:24:15.987]                    pos = pin * 2;
[20:24:15.987]                      // -> [pos <= 0x00000006]
[20:24:15.987]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:24:15.987]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.988]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.988]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:24:15.989]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.989]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.989]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:24:15.990]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.990]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.990]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:24:15.991]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.991]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.991]                  </block>
[20:24:15.992]                  <control if="pin <  8" while="" timeout="0" info="">
[20:24:15.992]                    // if-block "pin <  8"
[20:24:15.992]                      // =>  TRUE
[20:24:15.992]                    <block atomic="false" info="">
[20:24:15.992]                      pos = ((pin    ) & 7) * 4;
[20:24:15.992]                        // -> [pos <= 0x0000000C]
[20:24:15.993]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:24:15.993]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.994]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.994]                    </block>
[20:24:15.994]                    // end if-block "pin <  8"
[20:24:15.994]                  </control>
[20:24:15.994]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:24:15.994]                    // if-block "pin >= 8"
[20:24:15.994]                      // =>  FALSE
[20:24:15.994]                    // skip if-block "pin >= 8"
[20:24:15.995]                  </control>
[20:24:15.995]                </sequence>
[20:24:15.995]            </block>
[20:24:15.995]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:24:15.995]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:24:15.996]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:15.996]            </block>
[20:24:15.996]          </sequence>
[20:24:15.996]      </block>
[20:24:15.996]      // end if-block "traceSWO"
[20:24:15.996]    </control>
[20:24:15.996]    <control if="traceTPIU" while="" timeout="0" info="">
[20:24:15.996]      // if-block "traceTPIU"
[20:24:15.997]        // =>  FALSE
[20:24:15.997]      // skip if-block "traceTPIU"
[20:24:15.997]    </control>
[20:24:15.997]  </sequence>
[20:24:15.997]  
[20:24:16.211]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:24:16.211]  
[20:24:16.211]  <debugvars>
[20:24:16.211]    // Pre-defined
[20:24:16.211]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:16.212]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:16.212]    __dp=0x00000000
[20:24:16.212]    __ap=0x00000000
[20:24:16.212]    __traceout=0x00000001      (SWO Trace)
[20:24:16.212]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:16.212]    __FlashAddr=0x00000000
[20:24:16.213]    __FlashLen=0x00000000
[20:24:16.213]    __FlashArg=0x00000000
[20:24:16.213]    __FlashOp=0x00000000
[20:24:16.213]    __Result=0x00000000
[20:24:16.213]    
[20:24:16.213]    // User-defined
[20:24:16.213]    DbgMCU_CR=0x00000007
[20:24:16.214]    DbgMCU_APB1_Fz=0x00000000
[20:24:16.214]    DbgMCU_APB2_Fz=0x00000000
[20:24:16.214]    TraceClk_Pin=0x00040002
[20:24:16.214]    TraceD0_Pin=0x00040003
[20:24:16.214]    TraceD1_Pin=0x00040004
[20:24:16.215]    TraceD2_Pin=0x00040005
[20:24:16.215]    TraceD3_Pin=0x00040006
[20:24:16.215]  </debugvars>
[20:24:16.215]  
[20:24:16.215]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:24:16.215]    <block atomic="false" info="">
[20:24:16.216]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:24:16.216]        // -> [traceSWO <= 0x00000001]
[20:24:16.216]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:24:16.216]        // -> [traceTPIU <= 0x00000000]
[20:24:16.216]    </block>
[20:24:16.216]    <control if="traceSWO" while="" timeout="0" info="">
[20:24:16.217]      // if-block "traceSWO"
[20:24:16.217]        // =>  TRUE
[20:24:16.217]      <block atomic="false" info="">
[20:24:16.217]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:24:16.217]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:24:16.217]            <block atomic="false" info="">
[20:24:16.217]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:24:16.218]                // -> [dbgmcu_val <= 0x00000000]
[20:24:16.218]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:24:16.218]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:24:16.218]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:24:16.218]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.219]                // -> [dbgmcu_val <= 0x00000007]
[20:24:16.219]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:24:16.219]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:24:16.219]              Sequence("ConfigureTraceSWOPin");
[20:24:16.219]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:24:16.219]                  <block atomic="false" info="">
[20:24:16.219]                    __var pin     = 0;
[20:24:16.219]                      // -> [pin <= 0x00000000]
[20:24:16.220]                    __var port    = 0;
[20:24:16.220]                      // -> [port <= 0x00000000]
[20:24:16.220]                    __var portAdr = 0;
[20:24:16.220]                      // -> [portAdr <= 0x00000000]
[20:24:16.220]                    __var pos     = 0;
[20:24:16.220]                      // -> [pos <= 0x00000000]
[20:24:16.220]                    __var SWO_Pin = 0x00010003;          // PB3
[20:24:16.220]                      // -> [SWO_Pin <= 0x00010003]
[20:24:16.221]                  </block>
[20:24:16.221]                  <block atomic="false" info="configure SWO">
[20:24:16.221]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:24:16.221]                      // -> [pin <= 0x00000003]
[20:24:16.221]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:24:16.221]                      // -> [port <= 0x00000001]
[20:24:16.221]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:24:16.222]                      // -> [portAdr <= 0x40020400]
[20:24:16.222]                    pos = pin * 2;
[20:24:16.222]                      // -> [pos <= 0x00000006]
[20:24:16.222]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:24:16.222]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.223]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.223]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:24:16.223]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.224]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.224]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:24:16.224]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.225]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.225]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:24:16.225]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.226]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.226]                  </block>
[20:24:16.226]                  <control if="pin <  8" while="" timeout="0" info="">
[20:24:16.226]                    // if-block "pin <  8"
[20:24:16.226]                      // =>  TRUE
[20:24:16.226]                    <block atomic="false" info="">
[20:24:16.226]                      pos = ((pin    ) & 7) * 4;
[20:24:16.226]                        // -> [pos <= 0x0000000C]
[20:24:16.227]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:24:16.227]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.228]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.228]                    </block>
[20:24:16.228]                    // end if-block "pin <  8"
[20:24:16.228]                  </control>
[20:24:16.228]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:24:16.228]                    // if-block "pin >= 8"
[20:24:16.228]                      // =>  FALSE
[20:24:16.228]                    // skip if-block "pin >= 8"
[20:24:16.229]                  </control>
[20:24:16.229]                </sequence>
[20:24:16.229]            </block>
[20:24:16.229]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:24:16.229]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:24:16.230]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:16.230]            </block>
[20:24:16.230]          </sequence>
[20:24:16.230]      </block>
[20:24:16.230]      // end if-block "traceSWO"
[20:24:16.231]    </control>
[20:24:16.231]    <control if="traceTPIU" while="" timeout="0" info="">
[20:24:16.231]      // if-block "traceTPIU"
[20:24:16.231]        // =>  FALSE
[20:24:16.231]      // skip if-block "traceTPIU"
[20:24:16.231]    </control>
[20:24:16.232]  </sequence>
[20:24:16.232]  
[20:27:47.024]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:27:47.024]  
[20:27:47.024]  <debugvars>
[20:27:47.024]    // Pre-defined
[20:27:47.025]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:27:47.025]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:27:47.025]    __dp=0x00000000
[20:27:47.025]    __ap=0x00000000
[20:27:47.026]    __traceout=0x00000001      (SWO Trace)
[20:27:47.026]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:27:47.026]    __FlashAddr=0x00000000
[20:27:47.026]    __FlashLen=0x00000000
[20:27:47.026]    __FlashArg=0x00000000
[20:27:47.026]    __FlashOp=0x00000000
[20:27:47.027]    __Result=0x00000000
[20:27:47.027]    
[20:27:47.027]    // User-defined
[20:27:47.027]    DbgMCU_CR=0x00000007
[20:27:47.027]    DbgMCU_APB1_Fz=0x00000000
[20:27:47.027]    DbgMCU_APB2_Fz=0x00000000
[20:27:47.028]    TraceClk_Pin=0x00040002
[20:27:47.028]    TraceD0_Pin=0x00040003
[20:27:47.028]    TraceD1_Pin=0x00040004
[20:27:47.028]    TraceD2_Pin=0x00040005
[20:27:47.028]    TraceD3_Pin=0x00040006
[20:27:47.028]  </debugvars>
[20:27:47.029]  
[20:27:47.029]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:27:47.029]    <block atomic="false" info="">
[20:27:47.029]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:27:47.029]        // -> [traceSWO <= 0x00000001]
[20:27:47.029]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:27:47.030]        // -> [traceTPIU <= 0x00000000]
[20:27:47.030]    </block>
[20:27:47.030]    <control if="traceSWO" while="" timeout="0" info="">
[20:27:47.030]      // if-block "traceSWO"
[20:27:47.030]        // =>  TRUE
[20:27:47.030]      <block atomic="false" info="">
[20:27:47.030]        Sequence("DisableTraceSWO");
[20:27:47.031]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:27:47.031]            <block atomic="false" info="">
[20:27:47.031]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:27:47.031]                // -> [dbgmcu_val <= 0x00000000]
[20:27:47.031]            </block>
[20:27:47.031]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:27:47.031]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:27:47.032]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:27:47.032]                // -> [dbgmcu_val <= 0x00000007]
[20:27:47.032]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:27:47.033]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:27:47.033]            </block>
[20:27:47.033]          </sequence>
[20:27:47.033]      </block>
[20:27:47.033]      // end if-block "traceSWO"
[20:27:47.033]    </control>
[20:27:47.034]    <control if="traceTPIU" while="" timeout="0" info="">
[20:27:47.034]      // if-block "traceTPIU"
[20:27:47.034]        // =>  FALSE
[20:27:47.034]      // skip if-block "traceTPIU"
[20:27:47.034]    </control>
[20:27:47.034]  </sequence>
[20:27:47.034]  
[20:30:03.790]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:30:03.790]  
[20:30:03.790]  <debugvars>
[20:30:03.790]    // Pre-defined
[20:30:03.790]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:03.790]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:30:03.791]    __dp=0x00000000
[20:30:03.791]    __ap=0x00000000
[20:30:03.791]    __traceout=0x00000001      (SWO Trace)
[20:30:03.791]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:03.791]    __FlashAddr=0x00000000
[20:30:03.792]    __FlashLen=0x00000000
[20:30:03.792]    __FlashArg=0x00000000
[20:30:03.792]    __FlashOp=0x00000000
[20:30:03.792]    __Result=0x00000000
[20:30:03.792]    
[20:30:03.792]    // User-defined
[20:30:03.792]    DbgMCU_CR=0x00000007
[20:30:03.793]    DbgMCU_APB1_Fz=0x00000000
[20:30:03.793]    DbgMCU_APB2_Fz=0x00000000
[20:30:03.793]    TraceClk_Pin=0x00040002
[20:30:03.793]    TraceD0_Pin=0x00040003
[20:30:03.793]    TraceD1_Pin=0x00040004
[20:30:03.793]    TraceD2_Pin=0x00040005
[20:30:03.794]    TraceD3_Pin=0x00040006
[20:30:03.794]  </debugvars>
[20:30:03.794]  
[20:30:03.794]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:30:03.794]    <block atomic="false" info="">
[20:30:03.795]      Sequence("CheckID");
[20:30:03.795]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:30:03.795]          <block atomic="false" info="">
[20:30:03.795]            __var pidr1 = 0;
[20:30:03.795]              // -> [pidr1 <= 0x00000000]
[20:30:03.795]            __var pidr2 = 0;
[20:30:03.796]              // -> [pidr2 <= 0x00000000]
[20:30:03.796]            __var jep106id = 0;
[20:30:03.796]              // -> [jep106id <= 0x00000000]
[20:30:03.796]            __var ROMTableBase = 0;
[20:30:03.796]              // -> [ROMTableBase <= 0x00000000]
[20:30:03.796]            __ap = 0;      // AHB-AP
[20:30:03.797]              // -> [__ap <= 0x00000000]
[20:30:03.797]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:30:03.797]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.797]              // -> [ROMTableBase <= 0xE00FD000]
[20:30:03.798]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:30:03.798]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.799]              // -> [pidr1 <= 0x00000004]
[20:30:03.799]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:30:03.799]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.799]              // -> [pidr2 <= 0x0000001A]
[20:30:03.800]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:30:03.800]              // -> [jep106id <= 0x00000020]
[20:30:03.800]          </block>
[20:30:03.800]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:30:03.800]            // if-block "jep106id != 0x20"
[20:30:03.800]              // =>  FALSE
[20:30:03.800]            // skip if-block "jep106id != 0x20"
[20:30:03.801]          </control>
[20:30:03.801]        </sequence>
[20:30:03.801]    </block>
[20:30:03.801]  </sequence>
[20:30:03.801]  
[20:30:03.816]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:30:03.816]  
[20:30:03.816]  <debugvars>
[20:30:03.816]    // Pre-defined
[20:30:03.816]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:03.817]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:30:03.817]    __dp=0x00000000
[20:30:03.817]    __ap=0x00000000
[20:30:03.817]    __traceout=0x00000001      (SWO Trace)
[20:30:03.817]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:03.818]    __FlashAddr=0x00000000
[20:30:03.818]    __FlashLen=0x00000000
[20:30:03.818]    __FlashArg=0x00000000
[20:30:03.818]    __FlashOp=0x00000000
[20:30:03.818]    __Result=0x00000000
[20:30:03.819]    
[20:30:03.819]    // User-defined
[20:30:03.819]    DbgMCU_CR=0x00000007
[20:30:03.819]    DbgMCU_APB1_Fz=0x00000000
[20:30:03.819]    DbgMCU_APB2_Fz=0x00000000
[20:30:03.819]    TraceClk_Pin=0x00040002
[20:30:03.819]    TraceD0_Pin=0x00040003
[20:30:03.819]    TraceD1_Pin=0x00040004
[20:30:03.820]    TraceD2_Pin=0x00040005
[20:30:03.820]    TraceD3_Pin=0x00040006
[20:30:03.820]  </debugvars>
[20:30:03.820]  
[20:30:03.820]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:30:03.821]    <block atomic="false" info="">
[20:30:03.821]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:30:03.821]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.821]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:30:03.822]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.822]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:30:03.823]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.823]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:30:03.823]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:03.823]    </block>
[20:30:03.823]  </sequence>
[20:30:03.823]  
[20:30:35.171]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:30:35.171]  
[20:30:35.171]  <debugvars>
[20:30:35.172]    // Pre-defined
[20:30:35.172]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:35.172]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:30:35.172]    __dp=0x00000000
[20:30:35.172]    __ap=0x00000000
[20:30:35.172]    __traceout=0x00000001      (SWO Trace)
[20:30:35.172]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:35.173]    __FlashAddr=0x00000000
[20:30:35.173]    __FlashLen=0x00000000
[20:30:35.173]    __FlashArg=0x00000000
[20:30:35.173]    __FlashOp=0x00000000
[20:30:35.173]    __Result=0x00000000
[20:30:35.173]    
[20:30:35.173]    // User-defined
[20:30:35.174]    DbgMCU_CR=0x00000007
[20:30:35.174]    DbgMCU_APB1_Fz=0x00000000
[20:30:35.174]    DbgMCU_APB2_Fz=0x00000000
[20:30:35.174]    TraceClk_Pin=0x00040002
[20:30:35.174]    TraceD0_Pin=0x00040003
[20:30:35.174]    TraceD1_Pin=0x00040004
[20:30:35.174]    TraceD2_Pin=0x00040005
[20:30:35.174]    TraceD3_Pin=0x00040006
[20:30:35.175]  </debugvars>
[20:30:35.175]  
[20:30:35.175]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:30:35.175]    <block atomic="false" info="">
[20:30:35.175]      Sequence("CheckID");
[20:30:35.175]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:30:35.175]          <block atomic="false" info="">
[20:30:35.176]            __var pidr1 = 0;
[20:30:35.176]              // -> [pidr1 <= 0x00000000]
[20:30:35.176]            __var pidr2 = 0;
[20:30:35.176]              // -> [pidr2 <= 0x00000000]
[20:30:35.176]            __var jep106id = 0;
[20:30:35.176]              // -> [jep106id <= 0x00000000]
[20:30:35.176]            __var ROMTableBase = 0;
[20:30:35.177]              // -> [ROMTableBase <= 0x00000000]
[20:30:35.177]            __ap = 0;      // AHB-AP
[20:30:35.177]              // -> [__ap <= 0x00000000]
[20:30:35.177]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:30:35.177]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.177]              // -> [ROMTableBase <= 0xE00FD000]
[20:30:35.178]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:30:35.179]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.179]              // -> [pidr1 <= 0x00000004]
[20:30:35.179]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:30:35.179]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.179]              // -> [pidr2 <= 0x0000001A]
[20:30:35.179]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:30:35.180]              // -> [jep106id <= 0x00000020]
[20:30:35.180]          </block>
[20:30:35.180]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:30:35.180]            // if-block "jep106id != 0x20"
[20:30:35.180]              // =>  FALSE
[20:30:35.180]            // skip if-block "jep106id != 0x20"
[20:30:35.180]          </control>
[20:30:35.181]        </sequence>
[20:30:35.181]    </block>
[20:30:35.181]  </sequence>
[20:30:35.181]  
[20:30:35.196]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:30:35.196]  
[20:30:35.196]  <debugvars>
[20:30:35.196]    // Pre-defined
[20:30:35.196]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:35.196]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:30:35.197]    __dp=0x00000000
[20:30:35.197]    __ap=0x00000000
[20:30:35.197]    __traceout=0x00000001      (SWO Trace)
[20:30:35.197]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:35.197]    __FlashAddr=0x00000000
[20:30:35.197]    __FlashLen=0x00000000
[20:30:35.197]    __FlashArg=0x00000000
[20:30:35.198]    __FlashOp=0x00000000
[20:30:35.198]    __Result=0x00000000
[20:30:35.198]    
[20:30:35.198]    // User-defined
[20:30:35.198]    DbgMCU_CR=0x00000007
[20:30:35.198]    DbgMCU_APB1_Fz=0x00000000
[20:30:35.198]    DbgMCU_APB2_Fz=0x00000000
[20:30:35.198]    TraceClk_Pin=0x00040002
[20:30:35.199]    TraceD0_Pin=0x00040003
[20:30:35.199]    TraceD1_Pin=0x00040004
[20:30:35.199]    TraceD2_Pin=0x00040005
[20:30:35.199]    TraceD3_Pin=0x00040006
[20:30:35.199]  </debugvars>
[20:30:35.199]  
[20:30:35.199]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:30:35.200]    <block atomic="false" info="">
[20:30:35.200]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:30:35.200]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.200]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:30:35.201]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.201]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:30:35.202]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.202]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:30:35.202]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.202]    </block>
[20:30:35.202]  </sequence>
[20:30:35.203]  
[20:30:35.219]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:30:35.219]  
[20:30:35.219]  <debugvars>
[20:30:35.220]    // Pre-defined
[20:30:35.220]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:35.220]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:30:35.220]    __dp=0x00000000
[20:30:35.220]    __ap=0x00000000
[20:30:35.220]    __traceout=0x00000001      (SWO Trace)
[20:30:35.221]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:35.221]    __FlashAddr=0x00000000
[20:30:35.221]    __FlashLen=0x00000000
[20:30:35.221]    __FlashArg=0x00000000
[20:30:35.221]    __FlashOp=0x00000000
[20:30:35.221]    __Result=0x00000000
[20:30:35.222]    
[20:30:35.222]    // User-defined
[20:30:35.222]    DbgMCU_CR=0x00000007
[20:30:35.222]    DbgMCU_APB1_Fz=0x00000000
[20:30:35.222]    DbgMCU_APB2_Fz=0x00000000
[20:30:35.222]    TraceClk_Pin=0x00040002
[20:30:35.222]    TraceD0_Pin=0x00040003
[20:30:35.223]    TraceD1_Pin=0x00040004
[20:30:35.223]    TraceD2_Pin=0x00040005
[20:30:35.223]    TraceD3_Pin=0x00040006
[20:30:35.223]  </debugvars>
[20:30:35.223]  
[20:30:35.223]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:30:35.223]    <block atomic="false" info="">
[20:30:35.224]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:30:35.224]        // -> [traceSWO <= 0x00000001]
[20:30:35.224]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:30:35.224]        // -> [traceTPIU <= 0x00000000]
[20:30:35.224]    </block>
[20:30:35.224]    <control if="traceSWO" while="" timeout="0" info="">
[20:30:35.224]      // if-block "traceSWO"
[20:30:35.226]        // =>  TRUE
[20:30:35.226]      <block atomic="false" info="">
[20:30:35.226]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:30:35.226]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:30:35.226]            <block atomic="false" info="">
[20:30:35.226]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:30:35.226]                // -> [dbgmcu_val <= 0x00000000]
[20:30:35.226]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:30:35.227]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:30:35.227]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:30:35.227]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.227]                // -> [dbgmcu_val <= 0x00000007]
[20:30:35.227]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:30:35.228]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:30:35.228]              Sequence("ConfigureTraceSWOPin");
[20:30:35.228]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:30:35.228]                  <block atomic="false" info="">
[20:30:35.228]                    __var pin     = 0;
[20:30:35.228]                      // -> [pin <= 0x00000000]
[20:30:35.228]                    __var port    = 0;
[20:30:35.228]                      // -> [port <= 0x00000000]
[20:30:35.229]                    __var portAdr = 0;
[20:30:35.229]                      // -> [portAdr <= 0x00000000]
[20:30:35.229]                    __var pos     = 0;
[20:30:35.229]                      // -> [pos <= 0x00000000]
[20:30:35.229]                    __var SWO_Pin = 0x00010003;          // PB3
[20:30:35.229]                      // -> [SWO_Pin <= 0x00010003]
[20:30:35.229]                  </block>
[20:30:35.230]                  <block atomic="false" info="configure SWO">
[20:30:35.230]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:30:35.230]                      // -> [pin <= 0x00000003]
[20:30:35.230]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:30:35.230]                      // -> [port <= 0x00000001]
[20:30:35.230]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:30:35.230]                      // -> [portAdr <= 0x40020400]
[20:30:35.230]                    pos = pin * 2;
[20:30:35.230]                      // -> [pos <= 0x00000006]
[20:30:35.231]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:30:35.231]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.232]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.232]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:30:35.232]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.232]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.232]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:30:35.232]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.233]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.233]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:30:35.233]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.235]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.235]                  </block>
[20:30:35.235]                  <control if="pin <  8" while="" timeout="0" info="">
[20:30:35.235]                    // if-block "pin <  8"
[20:30:35.235]                      // =>  TRUE
[20:30:35.235]                    <block atomic="false" info="">
[20:30:35.235]                      pos = ((pin    ) & 7) * 4;
[20:30:35.235]                        // -> [pos <= 0x0000000C]
[20:30:35.235]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:30:35.235]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.236]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.236]                    </block>
[20:30:35.236]                    // end if-block "pin <  8"
[20:30:35.236]                  </control>
[20:30:35.236]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:30:35.236]                    // if-block "pin >= 8"
[20:30:35.236]                      // =>  FALSE
[20:30:35.237]                    // skip if-block "pin >= 8"
[20:30:35.237]                  </control>
[20:30:35.237]                </sequence>
[20:30:35.237]            </block>
[20:30:35.237]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:30:35.237]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:30:35.238]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.238]            </block>
[20:30:35.238]          </sequence>
[20:30:35.238]      </block>
[20:30:35.238]      // end if-block "traceSWO"
[20:30:35.238]    </control>
[20:30:35.238]    <control if="traceTPIU" while="" timeout="0" info="">
[20:30:35.239]      // if-block "traceTPIU"
[20:30:35.239]        // =>  FALSE
[20:30:35.239]      // skip if-block "traceTPIU"
[20:30:35.239]    </control>
[20:30:35.239]  </sequence>
[20:30:35.239]  
[20:30:35.243]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:30:35.243]  
[20:30:35.243]  <debugvars>
[20:30:35.243]    // Pre-defined
[20:30:35.243]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:35.244]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:30:35.244]    __dp=0x00000000
[20:30:35.244]    __ap=0x00000000
[20:30:35.244]    __traceout=0x00000001      (SWO Trace)
[20:30:35.244]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:35.244]    __FlashAddr=0x00000000
[20:30:35.244]    __FlashLen=0x00000000
[20:30:35.244]    __FlashArg=0x00000000
[20:30:35.245]    __FlashOp=0x00000000
[20:30:35.245]    __Result=0x00000000
[20:30:35.245]    
[20:30:35.245]    // User-defined
[20:30:35.245]    DbgMCU_CR=0x00000007
[20:30:35.245]    DbgMCU_APB1_Fz=0x00000000
[20:30:35.245]    DbgMCU_APB2_Fz=0x00000000
[20:30:35.246]    TraceClk_Pin=0x00040002
[20:30:35.246]    TraceD0_Pin=0x00040003
[20:30:35.246]    TraceD1_Pin=0x00040004
[20:30:35.246]    TraceD2_Pin=0x00040005
[20:30:35.246]    TraceD3_Pin=0x00040006
[20:30:35.246]  </debugvars>
[20:30:35.246]  
[20:30:35.247]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:30:35.247]    <block atomic="false" info="">
[20:30:35.247]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:30:35.247]        // -> [traceSWO <= 0x00000001]
[20:30:35.247]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:30:35.247]        // -> [traceTPIU <= 0x00000000]
[20:30:35.247]    </block>
[20:30:35.248]    <control if="traceSWO" while="" timeout="0" info="">
[20:30:35.248]      // if-block "traceSWO"
[20:30:35.248]        // =>  TRUE
[20:30:35.248]      <block atomic="false" info="">
[20:30:35.248]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:30:35.248]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:30:35.248]            <block atomic="false" info="">
[20:30:35.249]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:30:35.249]                // -> [dbgmcu_val <= 0x00000000]
[20:30:35.249]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:30:35.249]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:30:35.249]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:30:35.250]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.250]                // -> [dbgmcu_val <= 0x00000007]
[20:30:35.250]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:30:35.250]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:30:35.250]              Sequence("ConfigureTraceSWOPin");
[20:30:35.250]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:30:35.250]                  <block atomic="false" info="">
[20:30:35.251]                    __var pin     = 0;
[20:30:35.251]                      // -> [pin <= 0x00000000]
[20:30:35.251]                    __var port    = 0;
[20:30:35.251]                      // -> [port <= 0x00000000]
[20:30:35.251]                    __var portAdr = 0;
[20:30:35.251]                      // -> [portAdr <= 0x00000000]
[20:30:35.251]                    __var pos     = 0;
[20:30:35.252]                      // -> [pos <= 0x00000000]
[20:30:35.252]                    __var SWO_Pin = 0x00010003;          // PB3
[20:30:35.252]                      // -> [SWO_Pin <= 0x00010003]
[20:30:35.252]                  </block>
[20:30:35.252]                  <block atomic="false" info="configure SWO">
[20:30:35.252]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:30:35.252]                      // -> [pin <= 0x00000003]
[20:30:35.253]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:30:35.253]                      // -> [port <= 0x00000001]
[20:30:35.253]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:30:35.253]                      // -> [portAdr <= 0x40020400]
[20:30:35.253]                    pos = pin * 2;
[20:30:35.253]                      // -> [pos <= 0x00000006]
[20:30:35.253]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:30:35.254]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.254]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.254]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:30:35.255]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.255]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.256]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:30:35.256]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.256]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.257]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:30:35.257]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.257]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.257]                  </block>
[20:30:35.258]                  <control if="pin <  8" while="" timeout="0" info="">
[20:30:35.258]                    // if-block "pin <  8"
[20:30:35.258]                      // =>  TRUE
[20:30:35.258]                    <block atomic="false" info="">
[20:30:35.258]                      pos = ((pin    ) & 7) * 4;
[20:30:35.258]                        // -> [pos <= 0x0000000C]
[20:30:35.258]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:30:35.259]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.259]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.259]                    </block>
[20:30:35.259]                    // end if-block "pin <  8"
[20:30:35.260]                  </control>
[20:30:35.260]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:30:35.260]                    // if-block "pin >= 8"
[20:30:35.260]                      // =>  FALSE
[20:30:35.260]                    // skip if-block "pin >= 8"
[20:30:35.260]                  </control>
[20:30:35.260]                </sequence>
[20:30:35.260]            </block>
[20:30:35.260]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:30:35.261]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:30:35.261]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.261]            </block>
[20:30:35.261]          </sequence>
[20:30:35.261]      </block>
[20:30:35.262]      // end if-block "traceSWO"
[20:30:35.262]    </control>
[20:30:35.262]    <control if="traceTPIU" while="" timeout="0" info="">
[20:30:35.262]      // if-block "traceTPIU"
[20:30:35.262]        // =>  FALSE
[20:30:35.262]      // skip if-block "traceTPIU"
[20:30:35.263]    </control>
[20:30:35.263]  </sequence>
[20:30:35.263]  
[20:30:35.480]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:30:35.480]  
[20:30:35.480]  <debugvars>
[20:30:35.480]    // Pre-defined
[20:30:35.480]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:30:35.481]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:30:35.481]    __dp=0x00000000
[20:30:35.481]    __ap=0x00000000
[20:30:35.481]    __traceout=0x00000001      (SWO Trace)
[20:30:35.481]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:30:35.481]    __FlashAddr=0x00000000
[20:30:35.482]    __FlashLen=0x00000000
[20:30:35.482]    __FlashArg=0x00000000
[20:30:35.482]    __FlashOp=0x00000000
[20:30:35.482]    __Result=0x00000000
[20:30:35.482]    
[20:30:35.482]    // User-defined
[20:30:35.483]    DbgMCU_CR=0x00000007
[20:30:35.483]    DbgMCU_APB1_Fz=0x00000000
[20:30:35.483]    DbgMCU_APB2_Fz=0x00000000
[20:30:35.483]    TraceClk_Pin=0x00040002
[20:30:35.483]    TraceD0_Pin=0x00040003
[20:30:35.484]    TraceD1_Pin=0x00040004
[20:30:35.484]    TraceD2_Pin=0x00040005
[20:30:35.484]    TraceD3_Pin=0x00040006
[20:30:35.484]  </debugvars>
[20:30:35.484]  
[20:30:35.485]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:30:35.485]    <block atomic="false" info="">
[20:30:35.485]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:30:35.485]        // -> [traceSWO <= 0x00000001]
[20:30:35.485]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:30:35.485]        // -> [traceTPIU <= 0x00000000]
[20:30:35.486]    </block>
[20:30:35.486]    <control if="traceSWO" while="" timeout="0" info="">
[20:30:35.486]      // if-block "traceSWO"
[20:30:35.486]        // =>  TRUE
[20:30:35.486]      <block atomic="false" info="">
[20:30:35.486]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:30:35.487]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:30:35.487]            <block atomic="false" info="">
[20:30:35.487]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:30:35.487]                // -> [dbgmcu_val <= 0x00000000]
[20:30:35.487]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:30:35.487]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:30:35.487]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:30:35.488]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.488]                // -> [dbgmcu_val <= 0x00000007]
[20:30:35.488]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:30:35.488]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:30:35.489]              Sequence("ConfigureTraceSWOPin");
[20:30:35.489]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:30:35.489]                  <block atomic="false" info="">
[20:30:35.489]                    __var pin     = 0;
[20:30:35.489]                      // -> [pin <= 0x00000000]
[20:30:35.489]                    __var port    = 0;
[20:30:35.489]                      // -> [port <= 0x00000000]
[20:30:35.489]                    __var portAdr = 0;
[20:30:35.490]                      // -> [portAdr <= 0x00000000]
[20:30:35.490]                    __var pos     = 0;
[20:30:35.490]                      // -> [pos <= 0x00000000]
[20:30:35.490]                    __var SWO_Pin = 0x00010003;          // PB3
[20:30:35.490]                      // -> [SWO_Pin <= 0x00010003]
[20:30:35.490]                  </block>
[20:30:35.490]                  <block atomic="false" info="configure SWO">
[20:30:35.491]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:30:35.491]                      // -> [pin <= 0x00000003]
[20:30:35.491]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:30:35.491]                      // -> [port <= 0x00000001]
[20:30:35.491]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:30:35.491]                      // -> [portAdr <= 0x40020400]
[20:30:35.491]                    pos = pin * 2;
[20:30:35.491]                      // -> [pos <= 0x00000006]
[20:30:35.492]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:30:35.492]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.492]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.492]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:30:35.493]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.493]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.493]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:30:35.494]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.494]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.495]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:30:35.495]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.495]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.496]                  </block>
[20:30:35.496]                  <control if="pin <  8" while="" timeout="0" info="">
[20:30:35.496]                    // if-block "pin <  8"
[20:30:35.496]                      // =>  TRUE
[20:30:35.496]                    <block atomic="false" info="">
[20:30:35.496]                      pos = ((pin    ) & 7) * 4;
[20:30:35.496]                        // -> [pos <= 0x0000000C]
[20:30:35.496]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:30:35.497]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.497]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.497]                    </block>
[20:30:35.498]                    // end if-block "pin <  8"
[20:30:35.498]                  </control>
[20:30:35.498]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:30:35.498]                    // if-block "pin >= 8"
[20:30:35.498]                      // =>  FALSE
[20:30:35.498]                    // skip if-block "pin >= 8"
[20:30:35.498]                  </control>
[20:30:35.498]                </sequence>
[20:30:35.499]            </block>
[20:30:35.499]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:30:35.499]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:30:35.499]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:30:35.499]            </block>
[20:30:35.500]          </sequence>
[20:30:35.500]      </block>
[20:30:35.500]      // end if-block "traceSWO"
[20:30:35.500]    </control>
[20:30:35.500]    <control if="traceTPIU" while="" timeout="0" info="">
[20:30:35.500]      // if-block "traceTPIU"
[20:30:35.500]        // =>  FALSE
[20:30:35.500]      // skip if-block "traceTPIU"
[20:30:35.501]    </control>
[20:30:35.501]  </sequence>
[20:30:35.501]  
[20:31:37.795]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:31:37.795]  
[20:31:37.795]  <debugvars>
[20:31:37.795]    // Pre-defined
[20:31:37.795]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:31:37.795]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:31:37.796]    __dp=0x00000000
[20:31:37.796]    __ap=0x00000000
[20:31:37.796]    __traceout=0x00000001      (SWO Trace)
[20:31:37.796]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:31:37.796]    __FlashAddr=0x00000000
[20:31:37.796]    __FlashLen=0x00000000
[20:31:37.796]    __FlashArg=0x00000000
[20:31:37.796]    __FlashOp=0x00000000
[20:31:37.796]    __Result=0x00000000
[20:31:37.797]    
[20:31:37.797]    // User-defined
[20:31:37.797]    DbgMCU_CR=0x00000007
[20:31:37.797]    DbgMCU_APB1_Fz=0x00000000
[20:31:37.797]    DbgMCU_APB2_Fz=0x00000000
[20:31:37.797]    TraceClk_Pin=0x00040002
[20:31:37.797]    TraceD0_Pin=0x00040003
[20:31:37.798]    TraceD1_Pin=0x00040004
[20:31:37.798]    TraceD2_Pin=0x00040005
[20:31:37.798]    TraceD3_Pin=0x00040006
[20:31:37.798]  </debugvars>
[20:31:37.798]  
[20:31:37.798]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:31:37.798]    <block atomic="false" info="">
[20:31:37.798]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:31:37.799]        // -> [traceSWO <= 0x00000001]
[20:31:37.799]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:31:37.799]        // -> [traceTPIU <= 0x00000000]
[20:31:37.799]    </block>
[20:31:37.799]    <control if="traceSWO" while="" timeout="0" info="">
[20:31:37.799]      // if-block "traceSWO"
[20:31:37.799]        // =>  TRUE
[20:31:37.800]      <block atomic="false" info="">
[20:31:37.800]        Sequence("DisableTraceSWO");
[20:31:37.800]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:31:37.800]            <block atomic="false" info="">
[20:31:37.800]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:31:37.800]                // -> [dbgmcu_val <= 0x00000000]
[20:31:37.800]            </block>
[20:31:37.800]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:31:37.801]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:31:37.801]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:31:37.801]                // -> [dbgmcu_val <= 0x00000007]
[20:31:37.801]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:31:37.802]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:31:37.802]            </block>
[20:31:37.802]          </sequence>
[20:31:37.802]      </block>
[20:31:37.802]      // end if-block "traceSWO"
[20:31:37.802]    </control>
[20:31:37.803]    <control if="traceTPIU" while="" timeout="0" info="">
[20:31:37.803]      // if-block "traceTPIU"
[20:31:37.803]        // =>  FALSE
[20:31:37.803]      // skip if-block "traceTPIU"
[20:31:37.803]    </control>
[20:31:37.803]  </sequence>
[20:31:37.803]  
[20:37:00.323]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:37:00.323]  
[20:37:00.324]  <debugvars>
[20:37:00.324]    // Pre-defined
[20:37:00.324]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:00.324]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:37:00.324]    __dp=0x00000000
[20:37:00.325]    __ap=0x00000000
[20:37:00.325]    __traceout=0x00000001      (SWO Trace)
[20:37:00.325]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:00.325]    __FlashAddr=0x00000000
[20:37:00.325]    __FlashLen=0x00000000
[20:37:00.325]    __FlashArg=0x00000000
[20:37:00.326]    __FlashOp=0x00000000
[20:37:00.326]    __Result=0x00000000
[20:37:00.326]    
[20:37:00.326]    // User-defined
[20:37:00.326]    DbgMCU_CR=0x00000007
[20:37:00.326]    DbgMCU_APB1_Fz=0x00000000
[20:37:00.326]    DbgMCU_APB2_Fz=0x00000000
[20:37:00.327]    TraceClk_Pin=0x00040002
[20:37:00.327]    TraceD0_Pin=0x00040003
[20:37:00.327]    TraceD1_Pin=0x00040004
[20:37:00.327]    TraceD2_Pin=0x00040005
[20:37:00.327]    TraceD3_Pin=0x00040006
[20:37:00.327]  </debugvars>
[20:37:00.328]  
[20:37:00.328]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:37:00.328]    <block atomic="false" info="">
[20:37:00.328]      Sequence("CheckID");
[20:37:00.328]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:37:00.328]          <block atomic="false" info="">
[20:37:00.328]            __var pidr1 = 0;
[20:37:00.329]              // -> [pidr1 <= 0x00000000]
[20:37:00.329]            __var pidr2 = 0;
[20:37:00.329]              // -> [pidr2 <= 0x00000000]
[20:37:00.329]            __var jep106id = 0;
[20:37:00.329]              // -> [jep106id <= 0x00000000]
[20:37:00.329]            __var ROMTableBase = 0;
[20:37:00.330]              // -> [ROMTableBase <= 0x00000000]
[20:37:00.330]            __ap = 0;      // AHB-AP
[20:37:00.330]              // -> [__ap <= 0x00000000]
[20:37:00.330]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:37:00.331]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.331]              // -> [ROMTableBase <= 0xE00FD000]
[20:37:00.331]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:37:00.332]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.332]              // -> [pidr1 <= 0x00000004]
[20:37:00.332]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:37:00.332]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.332]              // -> [pidr2 <= 0x0000001A]
[20:37:00.333]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:37:00.333]              // -> [jep106id <= 0x00000020]
[20:37:00.333]          </block>
[20:37:00.333]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:37:00.333]            // if-block "jep106id != 0x20"
[20:37:00.333]              // =>  FALSE
[20:37:00.334]            // skip if-block "jep106id != 0x20"
[20:37:00.334]          </control>
[20:37:00.334]        </sequence>
[20:37:00.334]    </block>
[20:37:00.334]  </sequence>
[20:37:00.334]  
[20:37:00.349]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:37:00.349]  
[20:37:00.350]  <debugvars>
[20:37:00.350]    // Pre-defined
[20:37:00.350]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:00.350]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:37:00.350]    __dp=0x00000000
[20:37:00.350]    __ap=0x00000000
[20:37:00.351]    __traceout=0x00000001      (SWO Trace)
[20:37:00.351]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:00.351]    __FlashAddr=0x00000000
[20:37:00.351]    __FlashLen=0x00000000
[20:37:00.351]    __FlashArg=0x00000000
[20:37:00.351]    __FlashOp=0x00000000
[20:37:00.351]    __Result=0x00000000
[20:37:00.351]    
[20:37:00.351]    // User-defined
[20:37:00.352]    DbgMCU_CR=0x00000007
[20:37:00.352]    DbgMCU_APB1_Fz=0x00000000
[20:37:00.352]    DbgMCU_APB2_Fz=0x00000000
[20:37:00.352]    TraceClk_Pin=0x00040002
[20:37:00.352]    TraceD0_Pin=0x00040003
[20:37:00.352]    TraceD1_Pin=0x00040004
[20:37:00.352]    TraceD2_Pin=0x00040005
[20:37:00.353]    TraceD3_Pin=0x00040006
[20:37:00.353]  </debugvars>
[20:37:00.353]  
[20:37:00.353]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:37:00.353]    <block atomic="false" info="">
[20:37:00.353]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:37:00.354]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.354]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:37:00.355]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.355]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:37:00.355]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.356]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:37:00.356]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:00.356]    </block>
[20:37:00.356]  </sequence>
[20:37:00.356]  
[20:37:31.737]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:37:31.737]  
[20:37:31.738]  <debugvars>
[20:37:31.738]    // Pre-defined
[20:37:31.738]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:31.738]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:37:31.739]    __dp=0x00000000
[20:37:31.739]    __ap=0x00000000
[20:37:31.739]    __traceout=0x00000001      (SWO Trace)
[20:37:31.739]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:31.739]    __FlashAddr=0x00000000
[20:37:31.739]    __FlashLen=0x00000000
[20:37:31.740]    __FlashArg=0x00000000
[20:37:31.740]    __FlashOp=0x00000000
[20:37:31.740]    __Result=0x00000000
[20:37:31.740]    
[20:37:31.740]    // User-defined
[20:37:31.740]    DbgMCU_CR=0x00000007
[20:37:31.740]    DbgMCU_APB1_Fz=0x00000000
[20:37:31.741]    DbgMCU_APB2_Fz=0x00000000
[20:37:31.741]    TraceClk_Pin=0x00040002
[20:37:31.741]    TraceD0_Pin=0x00040003
[20:37:31.741]    TraceD1_Pin=0x00040004
[20:37:31.741]    TraceD2_Pin=0x00040005
[20:37:31.741]    TraceD3_Pin=0x00040006
[20:37:31.741]  </debugvars>
[20:37:31.742]  
[20:37:31.742]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:37:31.742]    <block atomic="false" info="">
[20:37:31.742]      Sequence("CheckID");
[20:37:31.742]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:37:31.742]          <block atomic="false" info="">
[20:37:31.742]            __var pidr1 = 0;
[20:37:31.743]              // -> [pidr1 <= 0x00000000]
[20:37:31.743]            __var pidr2 = 0;
[20:37:31.743]              // -> [pidr2 <= 0x00000000]
[20:37:31.743]            __var jep106id = 0;
[20:37:31.743]              // -> [jep106id <= 0x00000000]
[20:37:31.743]            __var ROMTableBase = 0;
[20:37:31.743]              // -> [ROMTableBase <= 0x00000000]
[20:37:31.743]            __ap = 0;      // AHB-AP
[20:37:31.743]              // -> [__ap <= 0x00000000]
[20:37:31.744]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:37:31.744]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.744]              // -> [ROMTableBase <= 0xE00FD000]
[20:37:31.744]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:37:31.745]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.745]              // -> [pidr1 <= 0x00000004]
[20:37:31.745]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:37:31.745]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.745]              // -> [pidr2 <= 0x0000001A]
[20:37:31.746]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:37:31.746]              // -> [jep106id <= 0x00000020]
[20:37:31.746]          </block>
[20:37:31.746]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:37:31.746]            // if-block "jep106id != 0x20"
[20:37:31.746]              // =>  FALSE
[20:37:31.746]            // skip if-block "jep106id != 0x20"
[20:37:31.746]          </control>
[20:37:31.746]        </sequence>
[20:37:31.747]    </block>
[20:37:31.747]  </sequence>
[20:37:31.747]  
[20:37:31.761]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:37:31.761]  
[20:37:31.761]  <debugvars>
[20:37:31.762]    // Pre-defined
[20:37:31.762]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:31.762]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:37:31.762]    __dp=0x00000000
[20:37:31.762]    __ap=0x00000000
[20:37:31.762]    __traceout=0x00000001      (SWO Trace)
[20:37:31.763]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:31.763]    __FlashAddr=0x00000000
[20:37:31.763]    __FlashLen=0x00000000
[20:37:31.763]    __FlashArg=0x00000000
[20:37:31.763]    __FlashOp=0x00000000
[20:37:31.763]    __Result=0x00000000
[20:37:31.764]    
[20:37:31.764]    // User-defined
[20:37:31.764]    DbgMCU_CR=0x00000007
[20:37:31.764]    DbgMCU_APB1_Fz=0x00000000
[20:37:31.764]    DbgMCU_APB2_Fz=0x00000000
[20:37:31.764]    TraceClk_Pin=0x00040002
[20:37:31.764]    TraceD0_Pin=0x00040003
[20:37:31.765]    TraceD1_Pin=0x00040004
[20:37:31.765]    TraceD2_Pin=0x00040005
[20:37:31.765]    TraceD3_Pin=0x00040006
[20:37:31.765]  </debugvars>
[20:37:31.765]  
[20:37:31.765]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:37:31.766]    <block atomic="false" info="">
[20:37:31.766]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:37:31.766]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.767]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:37:31.767]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.767]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:37:31.768]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.768]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:37:31.769]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.769]    </block>
[20:37:31.769]  </sequence>
[20:37:31.769]  
[20:37:31.786]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:37:31.786]  
[20:37:31.786]  <debugvars>
[20:37:31.786]    // Pre-defined
[20:37:31.787]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:31.787]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:37:31.787]    __dp=0x00000000
[20:37:31.787]    __ap=0x00000000
[20:37:31.787]    __traceout=0x00000001      (SWO Trace)
[20:37:31.788]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:31.788]    __FlashAddr=0x00000000
[20:37:31.788]    __FlashLen=0x00000000
[20:37:31.788]    __FlashArg=0x00000000
[20:37:31.788]    __FlashOp=0x00000000
[20:37:31.789]    __Result=0x00000000
[20:37:31.789]    
[20:37:31.789]    // User-defined
[20:37:31.789]    DbgMCU_CR=0x00000007
[20:37:31.789]    DbgMCU_APB1_Fz=0x00000000
[20:37:31.789]    DbgMCU_APB2_Fz=0x00000000
[20:37:31.790]    TraceClk_Pin=0x00040002
[20:37:31.790]    TraceD0_Pin=0x00040003
[20:37:31.790]    TraceD1_Pin=0x00040004
[20:37:31.790]    TraceD2_Pin=0x00040005
[20:37:31.790]    TraceD3_Pin=0x00040006
[20:37:31.790]  </debugvars>
[20:37:31.791]  
[20:37:31.791]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:37:31.791]    <block atomic="false" info="">
[20:37:31.791]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:37:31.791]        // -> [traceSWO <= 0x00000001]
[20:37:31.791]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:37:31.792]        // -> [traceTPIU <= 0x00000000]
[20:37:31.792]    </block>
[20:37:31.792]    <control if="traceSWO" while="" timeout="0" info="">
[20:37:31.792]      // if-block "traceSWO"
[20:37:31.792]        // =>  TRUE
[20:37:31.792]      <block atomic="false" info="">
[20:37:31.793]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:37:31.793]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:37:31.793]            <block atomic="false" info="">
[20:37:31.793]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:37:31.793]                // -> [dbgmcu_val <= 0x00000000]
[20:37:31.793]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:37:31.793]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:37:31.794]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:37:31.794]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.794]                // -> [dbgmcu_val <= 0x00000007]
[20:37:31.795]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:37:31.795]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:37:31.795]              Sequence("ConfigureTraceSWOPin");
[20:37:31.795]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:37:31.795]                  <block atomic="false" info="">
[20:37:31.795]                    __var pin     = 0;
[20:37:31.795]                      // -> [pin <= 0x00000000]
[20:37:31.796]                    __var port    = 0;
[20:37:31.796]                      // -> [port <= 0x00000000]
[20:37:31.796]                    __var portAdr = 0;
[20:37:31.796]                      // -> [portAdr <= 0x00000000]
[20:37:31.796]                    __var pos     = 0;
[20:37:31.796]                      // -> [pos <= 0x00000000]
[20:37:31.797]                    __var SWO_Pin = 0x00010003;          // PB3
[20:37:31.797]                      // -> [SWO_Pin <= 0x00010003]
[20:37:31.797]                  </block>
[20:37:31.797]                  <block atomic="false" info="configure SWO">
[20:37:31.797]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:37:31.797]                      // -> [pin <= 0x00000003]
[20:37:31.797]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:37:31.797]                      // -> [port <= 0x00000001]
[20:37:31.798]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:37:31.798]                      // -> [portAdr <= 0x40020400]
[20:37:31.798]                    pos = pin * 2;
[20:37:31.798]                      // -> [pos <= 0x00000006]
[20:37:31.798]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:37:31.798]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.799]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.799]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:37:31.799]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.800]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.800]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:37:31.800]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.801]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.801]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:37:31.801]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.802]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.802]                  </block>
[20:37:31.802]                  <control if="pin <  8" while="" timeout="0" info="">
[20:37:31.802]                    // if-block "pin <  8"
[20:37:31.802]                      // =>  TRUE
[20:37:31.802]                    <block atomic="false" info="">
[20:37:31.803]                      pos = ((pin    ) & 7) * 4;
[20:37:31.803]                        // -> [pos <= 0x0000000C]
[20:37:31.803]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:37:31.803]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.804]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.804]                    </block>
[20:37:31.804]                    // end if-block "pin <  8"
[20:37:31.804]                  </control>
[20:37:31.804]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:37:31.804]                    // if-block "pin >= 8"
[20:37:31.804]                      // =>  FALSE
[20:37:31.804]                    // skip if-block "pin >= 8"
[20:37:31.805]                  </control>
[20:37:31.805]                </sequence>
[20:37:31.805]            </block>
[20:37:31.805]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:37:31.805]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:37:31.806]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.806]            </block>
[20:37:31.806]          </sequence>
[20:37:31.806]      </block>
[20:37:31.806]      // end if-block "traceSWO"
[20:37:31.806]    </control>
[20:37:31.806]    <control if="traceTPIU" while="" timeout="0" info="">
[20:37:31.806]      // if-block "traceTPIU"
[20:37:31.807]        // =>  FALSE
[20:37:31.807]      // skip if-block "traceTPIU"
[20:37:31.807]    </control>
[20:37:31.807]  </sequence>
[20:37:31.807]  
[20:37:31.811]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:37:31.811]  
[20:37:31.811]  <debugvars>
[20:37:31.811]    // Pre-defined
[20:37:31.811]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:31.811]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:37:31.812]    __dp=0x00000000
[20:37:31.812]    __ap=0x00000000
[20:37:31.812]    __traceout=0x00000001      (SWO Trace)
[20:37:31.812]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:31.812]    __FlashAddr=0x00000000
[20:37:31.812]    __FlashLen=0x00000000
[20:37:31.812]    __FlashArg=0x00000000
[20:37:31.812]    __FlashOp=0x00000000
[20:37:31.812]    __Result=0x00000000
[20:37:31.813]    
[20:37:31.813]    // User-defined
[20:37:31.813]    DbgMCU_CR=0x00000007
[20:37:31.813]    DbgMCU_APB1_Fz=0x00000000
[20:37:31.813]    DbgMCU_APB2_Fz=0x00000000
[20:37:31.813]    TraceClk_Pin=0x00040002
[20:37:31.813]    TraceD0_Pin=0x00040003
[20:37:31.813]    TraceD1_Pin=0x00040004
[20:37:31.813]    TraceD2_Pin=0x00040005
[20:37:31.814]    TraceD3_Pin=0x00040006
[20:37:31.814]  </debugvars>
[20:37:31.814]  
[20:37:31.814]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:37:31.814]    <block atomic="false" info="">
[20:37:31.814]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:37:31.814]        // -> [traceSWO <= 0x00000001]
[20:37:31.814]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:37:31.815]        // -> [traceTPIU <= 0x00000000]
[20:37:31.815]    </block>
[20:37:31.815]    <control if="traceSWO" while="" timeout="0" info="">
[20:37:31.815]      // if-block "traceSWO"
[20:37:31.815]        // =>  TRUE
[20:37:31.815]      <block atomic="false" info="">
[20:37:31.815]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:37:31.815]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:37:31.815]            <block atomic="false" info="">
[20:37:31.816]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:37:31.816]                // -> [dbgmcu_val <= 0x00000000]
[20:37:31.816]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:37:31.816]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:37:31.816]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:37:31.816]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.817]                // -> [dbgmcu_val <= 0x00000007]
[20:37:31.817]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:37:31.817]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:37:31.817]              Sequence("ConfigureTraceSWOPin");
[20:37:31.817]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:37:31.817]                  <block atomic="false" info="">
[20:37:31.817]                    __var pin     = 0;
[20:37:31.817]                      // -> [pin <= 0x00000000]
[20:37:31.818]                    __var port    = 0;
[20:37:31.818]                      // -> [port <= 0x00000000]
[20:37:31.818]                    __var portAdr = 0;
[20:37:31.818]                      // -> [portAdr <= 0x00000000]
[20:37:31.818]                    __var pos     = 0;
[20:37:31.818]                      // -> [pos <= 0x00000000]
[20:37:31.818]                    __var SWO_Pin = 0x00010003;          // PB3
[20:37:31.818]                      // -> [SWO_Pin <= 0x00010003]
[20:37:31.818]                  </block>
[20:37:31.819]                  <block atomic="false" info="configure SWO">
[20:37:31.819]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:37:31.819]                      // -> [pin <= 0x00000003]
[20:37:31.819]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:37:31.819]                      // -> [port <= 0x00000001]
[20:37:31.819]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:37:31.819]                      // -> [portAdr <= 0x40020400]
[20:37:31.819]                    pos = pin * 2;
[20:37:31.820]                      // -> [pos <= 0x00000006]
[20:37:31.820]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:37:31.820]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.820]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.821]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:37:31.821]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.821]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.822]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:37:31.822]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.823]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.823]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:37:31.823]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.824]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.824]                  </block>
[20:37:31.824]                  <control if="pin <  8" while="" timeout="0" info="">
[20:37:31.824]                    // if-block "pin <  8"
[20:37:31.824]                      // =>  TRUE
[20:37:31.824]                    <block atomic="false" info="">
[20:37:31.825]                      pos = ((pin    ) & 7) * 4;
[20:37:31.825]                        // -> [pos <= 0x0000000C]
[20:37:31.825]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:37:31.825]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.826]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.826]                    </block>
[20:37:31.826]                    // end if-block "pin <  8"
[20:37:31.826]                  </control>
[20:37:31.826]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:37:31.826]                    // if-block "pin >= 8"
[20:37:31.826]                      // =>  FALSE
[20:37:31.826]                    // skip if-block "pin >= 8"
[20:37:31.827]                  </control>
[20:37:31.827]                </sequence>
[20:37:31.827]            </block>
[20:37:31.827]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:37:31.827]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:37:31.828]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:31.828]            </block>
[20:37:31.828]          </sequence>
[20:37:31.828]      </block>
[20:37:31.828]      // end if-block "traceSWO"
[20:37:31.828]    </control>
[20:37:31.828]    <control if="traceTPIU" while="" timeout="0" info="">
[20:37:31.828]      // if-block "traceTPIU"
[20:37:31.829]        // =>  FALSE
[20:37:31.829]      // skip if-block "traceTPIU"
[20:37:31.829]    </control>
[20:37:31.829]  </sequence>
[20:37:31.829]  
[20:37:32.046]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:37:32.046]  
[20:37:32.046]  <debugvars>
[20:37:32.047]    // Pre-defined
[20:37:32.047]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:37:32.047]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:37:32.047]    __dp=0x00000000
[20:37:32.047]    __ap=0x00000000
[20:37:32.047]    __traceout=0x00000001      (SWO Trace)
[20:37:32.048]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:37:32.048]    __FlashAddr=0x00000000
[20:37:32.048]    __FlashLen=0x00000000
[20:37:32.048]    __FlashArg=0x00000000
[20:37:32.049]    __FlashOp=0x00000000
[20:37:32.049]    __Result=0x00000000
[20:37:32.049]    
[20:37:32.049]    // User-defined
[20:37:32.049]    DbgMCU_CR=0x00000007
[20:37:32.049]    DbgMCU_APB1_Fz=0x00000000
[20:37:32.050]    DbgMCU_APB2_Fz=0x00000000
[20:37:32.050]    TraceClk_Pin=0x00040002
[20:37:32.050]    TraceD0_Pin=0x00040003
[20:37:32.050]    TraceD1_Pin=0x00040004
[20:37:32.050]    TraceD2_Pin=0x00040005
[20:37:32.051]    TraceD3_Pin=0x00040006
[20:37:32.051]  </debugvars>
[20:37:32.051]  
[20:37:32.051]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:37:32.051]    <block atomic="false" info="">
[20:37:32.051]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:37:32.051]        // -> [traceSWO <= 0x00000001]
[20:37:32.051]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:37:32.052]        // -> [traceTPIU <= 0x00000000]
[20:37:32.052]    </block>
[20:37:32.052]    <control if="traceSWO" while="" timeout="0" info="">
[20:37:32.052]      // if-block "traceSWO"
[20:37:32.052]        // =>  TRUE
[20:37:32.052]      <block atomic="false" info="">
[20:37:32.052]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:37:32.052]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:37:32.052]            <block atomic="false" info="">
[20:37:32.053]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:37:32.053]                // -> [dbgmcu_val <= 0x00000000]
[20:37:32.053]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:37:32.053]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:37:32.053]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:37:32.053]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.054]                // -> [dbgmcu_val <= 0x00000007]
[20:37:32.054]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:37:32.054]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:37:32.054]              Sequence("ConfigureTraceSWOPin");
[20:37:32.054]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:37:32.054]                  <block atomic="false" info="">
[20:37:32.054]                    __var pin     = 0;
[20:37:32.054]                      // -> [pin <= 0x00000000]
[20:37:32.055]                    __var port    = 0;
[20:37:32.055]                      // -> [port <= 0x00000000]
[20:37:32.055]                    __var portAdr = 0;
[20:37:32.055]                      // -> [portAdr <= 0x00000000]
[20:37:32.055]                    __var pos     = 0;
[20:37:32.055]                      // -> [pos <= 0x00000000]
[20:37:32.055]                    __var SWO_Pin = 0x00010003;          // PB3
[20:37:32.055]                      // -> [SWO_Pin <= 0x00010003]
[20:37:32.056]                  </block>
[20:37:32.056]                  <block atomic="false" info="configure SWO">
[20:37:32.056]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:37:32.056]                      // -> [pin <= 0x00000003]
[20:37:32.056]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:37:32.056]                      // -> [port <= 0x00000001]
[20:37:32.056]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:37:32.057]                      // -> [portAdr <= 0x40020400]
[20:37:32.057]                    pos = pin * 2;
[20:37:32.057]                      // -> [pos <= 0x00000006]
[20:37:32.057]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:37:32.058]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.058]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.058]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:37:32.059]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.059]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.060]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:37:32.060]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.061]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.061]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:37:32.061]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.062]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.062]                  </block>
[20:37:32.062]                  <control if="pin <  8" while="" timeout="0" info="">
[20:37:32.062]                    // if-block "pin <  8"
[20:37:32.062]                      // =>  TRUE
[20:37:32.063]                    <block atomic="false" info="">
[20:37:32.063]                      pos = ((pin    ) & 7) * 4;
[20:37:32.063]                        // -> [pos <= 0x0000000C]
[20:37:32.063]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:37:32.063]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.064]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.064]                    </block>
[20:37:32.064]                    // end if-block "pin <  8"
[20:37:32.064]                  </control>
[20:37:32.064]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:37:32.065]                    // if-block "pin >= 8"
[20:37:32.065]                      // =>  FALSE
[20:37:32.065]                    // skip if-block "pin >= 8"
[20:37:32.065]                  </control>
[20:37:32.065]                </sequence>
[20:37:32.065]            </block>
[20:37:32.065]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:37:32.065]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:37:32.066]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:37:32.066]            </block>
[20:37:32.066]          </sequence>
[20:37:32.066]      </block>
[20:37:32.066]      // end if-block "traceSWO"
[20:37:32.067]    </control>
[20:37:32.067]    <control if="traceTPIU" while="" timeout="0" info="">
[20:37:32.067]      // if-block "traceTPIU"
[20:37:32.067]        // =>  FALSE
[20:37:32.067]      // skip if-block "traceTPIU"
[20:37:32.067]    </control>
[20:37:32.067]  </sequence>
[20:37:32.067]  
[20:38:35.616]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:38:35.616]  
[20:38:35.616]  <debugvars>
[20:38:35.616]    // Pre-defined
[20:38:35.617]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:35.617]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:38:35.617]    __dp=0x00000000
[20:38:35.617]    __ap=0x00000000
[20:38:35.617]    __traceout=0x00000001      (SWO Trace)
[20:38:35.618]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:35.618]    __FlashAddr=0x00000000
[20:38:35.618]    __FlashLen=0x00000000
[20:38:35.618]    __FlashArg=0x00000000
[20:38:35.618]    __FlashOp=0x00000000
[20:38:35.619]    __Result=0x00000000
[20:38:35.619]    
[20:38:35.619]    // User-defined
[20:38:35.619]    DbgMCU_CR=0x00000007
[20:38:35.619]    DbgMCU_APB1_Fz=0x00000000
[20:38:35.620]    DbgMCU_APB2_Fz=0x00000000
[20:38:35.620]    TraceClk_Pin=0x00040002
[20:38:35.620]    TraceD0_Pin=0x00040003
[20:38:35.620]    TraceD1_Pin=0x00040004
[20:38:35.620]    TraceD2_Pin=0x00040005
[20:38:35.620]    TraceD3_Pin=0x00040006
[20:38:35.621]  </debugvars>
[20:38:35.621]  
[20:38:35.621]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:38:35.621]    <block atomic="false" info="">
[20:38:35.621]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:38:35.621]        // -> [traceSWO <= 0x00000001]
[20:38:35.622]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:38:35.622]        // -> [traceTPIU <= 0x00000000]
[20:38:35.622]    </block>
[20:38:35.622]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:35.622]      // if-block "traceSWO"
[20:38:35.623]        // =>  TRUE
[20:38:35.623]      <block atomic="false" info="">
[20:38:35.623]        Sequence("DisableTraceSWO");
[20:38:35.623]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:38:35.623]            <block atomic="false" info="">
[20:38:35.623]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:35.624]                // -> [dbgmcu_val <= 0x00000000]
[20:38:35.624]            </block>
[20:38:35.624]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:35.624]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:38:35.625]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:35.625]                // -> [dbgmcu_val <= 0x00000007]
[20:38:35.625]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:38:35.626]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:35.626]            </block>
[20:38:35.626]          </sequence>
[20:38:35.626]      </block>
[20:38:35.626]      // end if-block "traceSWO"
[20:38:35.626]    </control>
[20:38:35.627]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:35.627]      // if-block "traceTPIU"
[20:38:35.627]        // =>  FALSE
[20:38:35.627]      // skip if-block "traceTPIU"
[20:38:35.627]    </control>
[20:38:35.628]  </sequence>
[20:38:35.628]  
[20:42:38.639]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:42:38.639]  
[20:42:38.639]  <debugvars>
[20:42:38.639]    // Pre-defined
[20:42:38.639]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:42:38.639]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:42:38.640]    __dp=0x00000000
[20:42:38.640]    __ap=0x00000000
[20:42:38.640]    __traceout=0x00000001      (SWO Trace)
[20:42:38.640]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:42:38.641]    __FlashAddr=0x00000000
[20:42:38.641]    __FlashLen=0x00000000
[20:42:38.641]    __FlashArg=0x00000000
[20:42:38.641]    __FlashOp=0x00000000
[20:42:38.641]    __Result=0x00000000
[20:42:38.641]    
[20:42:38.641]    // User-defined
[20:42:38.642]    DbgMCU_CR=0x00000007
[20:42:38.642]    DbgMCU_APB1_Fz=0x00000000
[20:42:38.642]    DbgMCU_APB2_Fz=0x00000000
[20:42:38.642]    TraceClk_Pin=0x00040002
[20:42:38.643]    TraceD0_Pin=0x00040003
[20:42:38.643]    TraceD1_Pin=0x00040004
[20:42:38.643]    TraceD2_Pin=0x00040005
[20:42:38.643]    TraceD3_Pin=0x00040006
[20:42:38.643]  </debugvars>
[20:42:38.644]  
[20:42:38.644]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:42:38.644]    <block atomic="false" info="">
[20:42:38.644]      Sequence("CheckID");
[20:42:38.644]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:42:38.645]          <block atomic="false" info="">
[20:42:38.645]            __var pidr1 = 0;
[20:42:38.645]              // -> [pidr1 <= 0x00000000]
[20:42:38.645]            __var pidr2 = 0;
[20:42:38.645]              // -> [pidr2 <= 0x00000000]
[20:42:38.646]            __var jep106id = 0;
[20:42:38.646]              // -> [jep106id <= 0x00000000]
[20:42:38.646]            __var ROMTableBase = 0;
[20:42:38.646]              // -> [ROMTableBase <= 0x00000000]
[20:42:38.646]            __ap = 0;      // AHB-AP
[20:42:38.646]              // -> [__ap <= 0x00000000]
[20:42:38.647]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:42:38.647]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.647]              // -> [ROMTableBase <= 0xE00FD000]
[20:42:38.647]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:42:38.648]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.648]              // -> [pidr1 <= 0x00000004]
[20:42:38.648]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:42:38.648]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.649]              // -> [pidr2 <= 0x0000001A]
[20:42:38.649]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:42:38.649]              // -> [jep106id <= 0x00000020]
[20:42:38.649]          </block>
[20:42:38.649]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:42:38.650]            // if-block "jep106id != 0x20"
[20:42:38.650]              // =>  FALSE
[20:42:38.650]            // skip if-block "jep106id != 0x20"
[20:42:38.650]          </control>
[20:42:38.650]        </sequence>
[20:42:38.650]    </block>
[20:42:38.650]  </sequence>
[20:42:38.651]  
[20:42:38.667]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:42:38.667]  
[20:42:38.667]  <debugvars>
[20:42:38.667]    // Pre-defined
[20:42:38.667]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:42:38.668]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:42:38.668]    __dp=0x00000000
[20:42:38.668]    __ap=0x00000000
[20:42:38.668]    __traceout=0x00000001      (SWO Trace)
[20:42:38.668]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:42:38.669]    __FlashAddr=0x00000000
[20:42:38.669]    __FlashLen=0x00000000
[20:42:38.669]    __FlashArg=0x00000000
[20:42:38.669]    __FlashOp=0x00000000
[20:42:38.669]    __Result=0x00000000
[20:42:38.669]    
[20:42:38.669]    // User-defined
[20:42:38.670]    DbgMCU_CR=0x00000007
[20:42:38.670]    DbgMCU_APB1_Fz=0x00000000
[20:42:38.670]    DbgMCU_APB2_Fz=0x00000000
[20:42:38.670]    TraceClk_Pin=0x00040002
[20:42:38.670]    TraceD0_Pin=0x00040003
[20:42:38.670]    TraceD1_Pin=0x00040004
[20:42:38.671]    TraceD2_Pin=0x00040005
[20:42:38.671]    TraceD3_Pin=0x00040006
[20:42:38.671]  </debugvars>
[20:42:38.671]  
[20:42:38.671]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:42:38.672]    <block atomic="false" info="">
[20:42:38.672]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:42:38.672]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.673]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:42:38.673]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.673]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:42:38.674]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.674]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:42:38.675]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:42:38.675]    </block>
[20:42:38.675]  </sequence>
[20:42:38.675]  
[20:43:10.134]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:43:10.134]  
[20:43:10.134]  <debugvars>
[20:43:10.134]    // Pre-defined
[20:43:10.135]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:10.135]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:10.135]    __dp=0x00000000
[20:43:10.135]    __ap=0x00000000
[20:43:10.135]    __traceout=0x00000001      (SWO Trace)
[20:43:10.135]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:10.136]    __FlashAddr=0x00000000
[20:43:10.136]    __FlashLen=0x00000000
[20:43:10.136]    __FlashArg=0x00000000
[20:43:10.136]    __FlashOp=0x00000000
[20:43:10.136]    __Result=0x00000000
[20:43:10.136]    
[20:43:10.136]    // User-defined
[20:43:10.137]    DbgMCU_CR=0x00000007
[20:43:10.137]    DbgMCU_APB1_Fz=0x00000000
[20:43:10.137]    DbgMCU_APB2_Fz=0x00000000
[20:43:10.137]    TraceClk_Pin=0x00040002
[20:43:10.137]    TraceD0_Pin=0x00040003
[20:43:10.138]    TraceD1_Pin=0x00040004
[20:43:10.138]    TraceD2_Pin=0x00040005
[20:43:10.138]    TraceD3_Pin=0x00040006
[20:43:10.138]  </debugvars>
[20:43:10.138]  
[20:43:10.138]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:43:10.139]    <block atomic="false" info="">
[20:43:10.139]      Sequence("CheckID");
[20:43:10.139]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:43:10.139]          <block atomic="false" info="">
[20:43:10.139]            __var pidr1 = 0;
[20:43:10.140]              // -> [pidr1 <= 0x00000000]
[20:43:10.140]            __var pidr2 = 0;
[20:43:10.140]              // -> [pidr2 <= 0x00000000]
[20:43:10.140]            __var jep106id = 0;
[20:43:10.140]              // -> [jep106id <= 0x00000000]
[20:43:10.140]            __var ROMTableBase = 0;
[20:43:10.141]              // -> [ROMTableBase <= 0x00000000]
[20:43:10.141]            __ap = 0;      // AHB-AP
[20:43:10.141]              // -> [__ap <= 0x00000000]
[20:43:10.141]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:43:10.141]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.141]              // -> [ROMTableBase <= 0xE00FD000]
[20:43:10.142]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:43:10.142]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.142]              // -> [pidr1 <= 0x00000004]
[20:43:10.143]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:43:10.143]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.143]              // -> [pidr2 <= 0x0000001A]
[20:43:10.143]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:43:10.143]              // -> [jep106id <= 0x00000020]
[20:43:10.144]          </block>
[20:43:10.144]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:43:10.144]            // if-block "jep106id != 0x20"
[20:43:10.144]              // =>  FALSE
[20:43:10.144]            // skip if-block "jep106id != 0x20"
[20:43:10.144]          </control>
[20:43:10.145]        </sequence>
[20:43:10.145]    </block>
[20:43:10.145]  </sequence>
[20:43:10.145]  
[20:43:10.160]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:43:10.160]  
[20:43:10.160]  <debugvars>
[20:43:10.160]    // Pre-defined
[20:43:10.161]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:10.161]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:10.161]    __dp=0x00000000
[20:43:10.161]    __ap=0x00000000
[20:43:10.161]    __traceout=0x00000001      (SWO Trace)
[20:43:10.161]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:10.161]    __FlashAddr=0x00000000
[20:43:10.161]    __FlashLen=0x00000000
[20:43:10.162]    __FlashArg=0x00000000
[20:43:10.162]    __FlashOp=0x00000000
[20:43:10.162]    __Result=0x00000000
[20:43:10.162]    
[20:43:10.162]    // User-defined
[20:43:10.162]    DbgMCU_CR=0x00000007
[20:43:10.162]    DbgMCU_APB1_Fz=0x00000000
[20:43:10.162]    DbgMCU_APB2_Fz=0x00000000
[20:43:10.163]    TraceClk_Pin=0x00040002
[20:43:10.163]    TraceD0_Pin=0x00040003
[20:43:10.163]    TraceD1_Pin=0x00040004
[20:43:10.163]    TraceD2_Pin=0x00040005
[20:43:10.163]    TraceD3_Pin=0x00040006
[20:43:10.163]  </debugvars>
[20:43:10.163]  
[20:43:10.164]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:43:10.164]    <block atomic="false" info="">
[20:43:10.164]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:43:10.164]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.164]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:43:10.165]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.165]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:43:10.166]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.166]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:43:10.166]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.166]    </block>
[20:43:10.166]  </sequence>
[20:43:10.167]  
[20:43:10.183]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:43:10.183]  
[20:43:10.183]  <debugvars>
[20:43:10.184]    // Pre-defined
[20:43:10.184]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:10.184]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:10.184]    __dp=0x00000000
[20:43:10.184]    __ap=0x00000000
[20:43:10.185]    __traceout=0x00000001      (SWO Trace)
[20:43:10.185]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:10.185]    __FlashAddr=0x00000000
[20:43:10.185]    __FlashLen=0x00000000
[20:43:10.185]    __FlashArg=0x00000000
[20:43:10.185]    __FlashOp=0x00000000
[20:43:10.186]    __Result=0x00000000
[20:43:10.186]    
[20:43:10.186]    // User-defined
[20:43:10.186]    DbgMCU_CR=0x00000007
[20:43:10.186]    DbgMCU_APB1_Fz=0x00000000
[20:43:10.186]    DbgMCU_APB2_Fz=0x00000000
[20:43:10.186]    TraceClk_Pin=0x00040002
[20:43:10.187]    TraceD0_Pin=0x00040003
[20:43:10.187]    TraceD1_Pin=0x00040004
[20:43:10.187]    TraceD2_Pin=0x00040005
[20:43:10.187]    TraceD3_Pin=0x00040006
[20:43:10.187]  </debugvars>
[20:43:10.188]  
[20:43:10.188]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:43:10.188]    <block atomic="false" info="">
[20:43:10.188]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:43:10.188]        // -> [traceSWO <= 0x00000001]
[20:43:10.188]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:43:10.189]        // -> [traceTPIU <= 0x00000000]
[20:43:10.189]    </block>
[20:43:10.189]    <control if="traceSWO" while="" timeout="0" info="">
[20:43:10.189]      // if-block "traceSWO"
[20:43:10.189]        // =>  TRUE
[20:43:10.189]      <block atomic="false" info="">
[20:43:10.190]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:43:10.190]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:43:10.190]            <block atomic="false" info="">
[20:43:10.190]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:43:10.190]                // -> [dbgmcu_val <= 0x00000000]
[20:43:10.190]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:43:10.191]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:43:10.191]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:43:10.191]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.191]                // -> [dbgmcu_val <= 0x00000007]
[20:43:10.192]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:43:10.192]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:43:10.192]              Sequence("ConfigureTraceSWOPin");
[20:43:10.192]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:43:10.192]                  <block atomic="false" info="">
[20:43:10.192]                    __var pin     = 0;
[20:43:10.192]                      // -> [pin <= 0x00000000]
[20:43:10.193]                    __var port    = 0;
[20:43:10.193]                      // -> [port <= 0x00000000]
[20:43:10.193]                    __var portAdr = 0;
[20:43:10.193]                      // -> [portAdr <= 0x00000000]
[20:43:10.193]                    __var pos     = 0;
[20:43:10.193]                      // -> [pos <= 0x00000000]
[20:43:10.193]                    __var SWO_Pin = 0x00010003;          // PB3
[20:43:10.194]                      // -> [SWO_Pin <= 0x00010003]
[20:43:10.194]                  </block>
[20:43:10.194]                  <block atomic="false" info="configure SWO">
[20:43:10.194]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:43:10.194]                      // -> [pin <= 0x00000003]
[20:43:10.194]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:43:10.194]                      // -> [port <= 0x00000001]
[20:43:10.195]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:43:10.195]                      // -> [portAdr <= 0x40020400]
[20:43:10.195]                    pos = pin * 2;
[20:43:10.195]                      // -> [pos <= 0x00000006]
[20:43:10.195]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:43:10.196]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.196]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.196]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:43:10.197]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.197]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.197]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:43:10.198]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.198]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.198]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:43:10.199]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.199]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.199]                  </block>
[20:43:10.199]                  <control if="pin <  8" while="" timeout="0" info="">
[20:43:10.199]                    // if-block "pin <  8"
[20:43:10.199]                      // =>  TRUE
[20:43:10.200]                    <block atomic="false" info="">
[20:43:10.200]                      pos = ((pin    ) & 7) * 4;
[20:43:10.200]                        // -> [pos <= 0x0000000C]
[20:43:10.200]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:43:10.200]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.201]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.201]                    </block>
[20:43:10.201]                    // end if-block "pin <  8"
[20:43:10.201]                  </control>
[20:43:10.201]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:43:10.201]                    // if-block "pin >= 8"
[20:43:10.202]                      // =>  FALSE
[20:43:10.202]                    // skip if-block "pin >= 8"
[20:43:10.202]                  </control>
[20:43:10.202]                </sequence>
[20:43:10.202]            </block>
[20:43:10.202]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:43:10.202]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:43:10.203]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.203]            </block>
[20:43:10.203]          </sequence>
[20:43:10.203]      </block>
[20:43:10.203]      // end if-block "traceSWO"
[20:43:10.203]    </control>
[20:43:10.203]    <control if="traceTPIU" while="" timeout="0" info="">
[20:43:10.203]      // if-block "traceTPIU"
[20:43:10.204]        // =>  FALSE
[20:43:10.204]      // skip if-block "traceTPIU"
[20:43:10.204]    </control>
[20:43:10.204]  </sequence>
[20:43:10.204]  
[20:43:10.208]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:43:10.208]  
[20:43:10.208]  <debugvars>
[20:43:10.208]    // Pre-defined
[20:43:10.209]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:10.209]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:10.209]    __dp=0x00000000
[20:43:10.209]    __ap=0x00000000
[20:43:10.209]    __traceout=0x00000001      (SWO Trace)
[20:43:10.209]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:10.209]    __FlashAddr=0x00000000
[20:43:10.210]    __FlashLen=0x00000000
[20:43:10.210]    __FlashArg=0x00000000
[20:43:10.210]    __FlashOp=0x00000000
[20:43:10.210]    __Result=0x00000000
[20:43:10.210]    
[20:43:10.210]    // User-defined
[20:43:10.210]    DbgMCU_CR=0x00000007
[20:43:10.210]    DbgMCU_APB1_Fz=0x00000000
[20:43:10.211]    DbgMCU_APB2_Fz=0x00000000
[20:43:10.211]    TraceClk_Pin=0x00040002
[20:43:10.211]    TraceD0_Pin=0x00040003
[20:43:10.211]    TraceD1_Pin=0x00040004
[20:43:10.211]    TraceD2_Pin=0x00040005
[20:43:10.211]    TraceD3_Pin=0x00040006
[20:43:10.212]  </debugvars>
[20:43:10.212]  
[20:43:10.212]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:43:10.212]    <block atomic="false" info="">
[20:43:10.212]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:43:10.212]        // -> [traceSWO <= 0x00000001]
[20:43:10.212]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:43:10.212]        // -> [traceTPIU <= 0x00000000]
[20:43:10.213]    </block>
[20:43:10.213]    <control if="traceSWO" while="" timeout="0" info="">
[20:43:10.213]      // if-block "traceSWO"
[20:43:10.213]        // =>  TRUE
[20:43:10.213]      <block atomic="false" info="">
[20:43:10.213]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:43:10.213]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:43:10.214]            <block atomic="false" info="">
[20:43:10.214]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:43:10.214]                // -> [dbgmcu_val <= 0x00000000]
[20:43:10.214]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:43:10.214]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:43:10.214]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:43:10.215]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.215]                // -> [dbgmcu_val <= 0x00000007]
[20:43:10.215]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:43:10.215]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:43:10.215]              Sequence("ConfigureTraceSWOPin");
[20:43:10.215]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:43:10.215]                  <block atomic="false" info="">
[20:43:10.216]                    __var pin     = 0;
[20:43:10.216]                      // -> [pin <= 0x00000000]
[20:43:10.216]                    __var port    = 0;
[20:43:10.216]                      // -> [port <= 0x00000000]
[20:43:10.216]                    __var portAdr = 0;
[20:43:10.216]                      // -> [portAdr <= 0x00000000]
[20:43:10.216]                    __var pos     = 0;
[20:43:10.216]                      // -> [pos <= 0x00000000]
[20:43:10.217]                    __var SWO_Pin = 0x00010003;          // PB3
[20:43:10.217]                      // -> [SWO_Pin <= 0x00010003]
[20:43:10.217]                  </block>
[20:43:10.217]                  <block atomic="false" info="configure SWO">
[20:43:10.217]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:43:10.217]                      // -> [pin <= 0x00000003]
[20:43:10.217]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:43:10.218]                      // -> [port <= 0x00000001]
[20:43:10.218]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:43:10.218]                      // -> [portAdr <= 0x40020400]
[20:43:10.218]                    pos = pin * 2;
[20:43:10.218]                      // -> [pos <= 0x00000006]
[20:43:10.218]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:43:10.219]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.219]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.219]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:43:10.220]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.220]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.220]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:43:10.220]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.221]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.222]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:43:10.222]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.222]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.222]                  </block>
[20:43:10.222]                  <control if="pin <  8" while="" timeout="0" info="">
[20:43:10.222]                    // if-block "pin <  8"
[20:43:10.222]                      // =>  TRUE
[20:43:10.223]                    <block atomic="false" info="">
[20:43:10.223]                      pos = ((pin    ) & 7) * 4;
[20:43:10.223]                        // -> [pos <= 0x0000000C]
[20:43:10.223]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:43:10.223]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.224]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.224]                    </block>
[20:43:10.224]                    // end if-block "pin <  8"
[20:43:10.224]                  </control>
[20:43:10.224]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:43:10.225]                    // if-block "pin >= 8"
[20:43:10.225]                      // =>  FALSE
[20:43:10.225]                    // skip if-block "pin >= 8"
[20:43:10.225]                  </control>
[20:43:10.225]                </sequence>
[20:43:10.225]            </block>
[20:43:10.225]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:43:10.225]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:43:10.226]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.226]            </block>
[20:43:10.226]          </sequence>
[20:43:10.226]      </block>
[20:43:10.226]      // end if-block "traceSWO"
[20:43:10.227]    </control>
[20:43:10.227]    <control if="traceTPIU" while="" timeout="0" info="">
[20:43:10.227]      // if-block "traceTPIU"
[20:43:10.227]        // =>  FALSE
[20:43:10.227]      // skip if-block "traceTPIU"
[20:43:10.227]    </control>
[20:43:10.227]  </sequence>
[20:43:10.227]  
[20:43:10.448]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:43:10.448]  
[20:43:10.448]  <debugvars>
[20:43:10.449]    // Pre-defined
[20:43:10.449]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:10.449]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:10.449]    __dp=0x00000000
[20:43:10.449]    __ap=0x00000000
[20:43:10.449]    __traceout=0x00000001      (SWO Trace)
[20:43:10.450]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:10.450]    __FlashAddr=0x00000000
[20:43:10.450]    __FlashLen=0x00000000
[20:43:10.450]    __FlashArg=0x00000000
[20:43:10.450]    __FlashOp=0x00000000
[20:43:10.450]    __Result=0x00000000
[20:43:10.451]    
[20:43:10.451]    // User-defined
[20:43:10.451]    DbgMCU_CR=0x00000007
[20:43:10.451]    DbgMCU_APB1_Fz=0x00000000
[20:43:10.451]    DbgMCU_APB2_Fz=0x00000000
[20:43:10.451]    TraceClk_Pin=0x00040002
[20:43:10.451]    TraceD0_Pin=0x00040003
[20:43:10.452]    TraceD1_Pin=0x00040004
[20:43:10.452]    TraceD2_Pin=0x00040005
[20:43:10.452]    TraceD3_Pin=0x00040006
[20:43:10.452]  </debugvars>
[20:43:10.452]  
[20:43:10.452]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:43:10.452]    <block atomic="false" info="">
[20:43:10.453]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:43:10.453]        // -> [traceSWO <= 0x00000001]
[20:43:10.453]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:43:10.453]        // -> [traceTPIU <= 0x00000000]
[20:43:10.453]    </block>
[20:43:10.453]    <control if="traceSWO" while="" timeout="0" info="">
[20:43:10.453]      // if-block "traceSWO"
[20:43:10.454]        // =>  TRUE
[20:43:10.454]      <block atomic="false" info="">
[20:43:10.454]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:43:10.454]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:43:10.454]            <block atomic="false" info="">
[20:43:10.454]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:43:10.454]                // -> [dbgmcu_val <= 0x00000000]
[20:43:10.454]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:43:10.455]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:43:10.455]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:43:10.455]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.455]                // -> [dbgmcu_val <= 0x00000007]
[20:43:10.456]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:43:10.456]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:43:10.456]              Sequence("ConfigureTraceSWOPin");
[20:43:10.456]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:43:10.456]                  <block atomic="false" info="">
[20:43:10.456]                    __var pin     = 0;
[20:43:10.456]                      // -> [pin <= 0x00000000]
[20:43:10.456]                    __var port    = 0;
[20:43:10.457]                      // -> [port <= 0x00000000]
[20:43:10.457]                    __var portAdr = 0;
[20:43:10.457]                      // -> [portAdr <= 0x00000000]
[20:43:10.457]                    __var pos     = 0;
[20:43:10.457]                      // -> [pos <= 0x00000000]
[20:43:10.457]                    __var SWO_Pin = 0x00010003;          // PB3
[20:43:10.457]                      // -> [SWO_Pin <= 0x00010003]
[20:43:10.458]                  </block>
[20:43:10.458]                  <block atomic="false" info="configure SWO">
[20:43:10.458]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:43:10.458]                      // -> [pin <= 0x00000003]
[20:43:10.458]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:43:10.458]                      // -> [port <= 0x00000001]
[20:43:10.458]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:43:10.458]                      // -> [portAdr <= 0x40020400]
[20:43:10.459]                    pos = pin * 2;
[20:43:10.459]                      // -> [pos <= 0x00000006]
[20:43:10.459]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:43:10.459]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.460]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.460]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:43:10.460]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.461]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.461]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:43:10.461]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.462]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.462]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:43:10.462]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.463]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.463]                  </block>
[20:43:10.463]                  <control if="pin <  8" while="" timeout="0" info="">
[20:43:10.463]                    // if-block "pin <  8"
[20:43:10.463]                      // =>  TRUE
[20:43:10.464]                    <block atomic="false" info="">
[20:43:10.464]                      pos = ((pin    ) & 7) * 4;
[20:43:10.464]                        // -> [pos <= 0x0000000C]
[20:43:10.464]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:43:10.465]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.465]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.465]                    </block>
[20:43:10.465]                    // end if-block "pin <  8"
[20:43:10.465]                  </control>
[20:43:10.466]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:43:10.466]                    // if-block "pin >= 8"
[20:43:10.466]                      // =>  FALSE
[20:43:10.466]                    // skip if-block "pin >= 8"
[20:43:10.466]                  </control>
[20:43:10.466]                </sequence>
[20:43:10.466]            </block>
[20:43:10.466]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:43:10.467]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:43:10.467]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:10.467]            </block>
[20:43:10.467]          </sequence>
[20:43:10.467]      </block>
[20:43:10.467]      // end if-block "traceSWO"
[20:43:10.468]    </control>
[20:43:10.468]    <control if="traceTPIU" while="" timeout="0" info="">
[20:43:10.468]      // if-block "traceTPIU"
[20:43:10.468]        // =>  FALSE
[20:43:10.468]      // skip if-block "traceTPIU"
[20:43:10.468]    </control>
[20:43:10.468]  </sequence>
[20:43:10.468]  
[20:43:36.858]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:43:36.858]  
[20:43:36.858]  <debugvars>
[20:43:36.859]    // Pre-defined
[20:43:36.859]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:36.859]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:36.859]    __dp=0x00000000
[20:43:36.859]    __ap=0x00000000
[20:43:36.859]    __traceout=0x00000001      (SWO Trace)
[20:43:36.860]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:36.860]    __FlashAddr=0x00000000
[20:43:36.860]    __FlashLen=0x00000000
[20:43:36.860]    __FlashArg=0x00000000
[20:43:36.860]    __FlashOp=0x00000000
[20:43:36.861]    __Result=0x00000000
[20:43:36.861]    
[20:43:36.861]    // User-defined
[20:43:36.861]    DbgMCU_CR=0x00000007
[20:43:36.861]    DbgMCU_APB1_Fz=0x00000000
[20:43:36.862]    DbgMCU_APB2_Fz=0x00000000
[20:43:36.862]    TraceClk_Pin=0x00040002
[20:43:36.862]    TraceD0_Pin=0x00040003
[20:43:36.862]    TraceD1_Pin=0x00040004
[20:43:36.862]    TraceD2_Pin=0x00040005
[20:43:36.862]    TraceD3_Pin=0x00040006
[20:43:36.862]  </debugvars>
[20:43:36.863]  
[20:43:36.863]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:43:36.863]    <block atomic="false" info="">
[20:43:36.863]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:43:36.864]        // -> [traceSWO <= 0x00000001]
[20:43:36.864]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:43:36.864]        // -> [traceTPIU <= 0x00000000]
[20:43:36.864]    </block>
[20:43:36.864]    <control if="traceSWO" while="" timeout="0" info="">
[20:43:36.864]      // if-block "traceSWO"
[20:43:36.864]        // =>  TRUE
[20:43:36.865]      <block atomic="false" info="">
[20:43:36.865]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:43:36.865]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:43:36.865]            <block atomic="false" info="">
[20:43:36.865]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:43:36.865]                // -> [dbgmcu_val <= 0x00000000]
[20:43:36.865]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:43:36.865]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:43:36.866]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:43:36.866]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.866]                // -> [dbgmcu_val <= 0x00000007]
[20:43:36.866]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:43:36.866]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:43:36.867]              Sequence("ConfigureTraceSWOPin");
[20:43:36.867]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:43:36.867]                  <block atomic="false" info="">
[20:43:36.867]                    __var pin     = 0;
[20:43:36.867]                      // -> [pin <= 0x00000000]
[20:43:36.867]                    __var port    = 0;
[20:43:36.867]                      // -> [port <= 0x00000000]
[20:43:36.868]                    __var portAdr = 0;
[20:43:36.868]                      // -> [portAdr <= 0x00000000]
[20:43:36.868]                    __var pos     = 0;
[20:43:36.868]                      // -> [pos <= 0x00000000]
[20:43:36.868]                    __var SWO_Pin = 0x00010003;          // PB3
[20:43:36.868]                      // -> [SWO_Pin <= 0x00010003]
[20:43:36.868]                  </block>
[20:43:36.868]                  <block atomic="false" info="configure SWO">
[20:43:36.869]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:43:36.869]                      // -> [pin <= 0x00000003]
[20:43:36.869]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:43:36.869]                      // -> [port <= 0x00000001]
[20:43:36.869]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:43:36.869]                      // -> [portAdr <= 0x40020400]
[20:43:36.869]                    pos = pin * 2;
[20:43:36.870]                      // -> [pos <= 0x00000006]
[20:43:36.870]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:43:36.870]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.870]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.871]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:43:36.871]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.871]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.872]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:43:36.872]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.872]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.873]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:43:36.873]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.873]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.873]                  </block>
[20:43:36.874]                  <control if="pin <  8" while="" timeout="0" info="">
[20:43:36.874]                    // if-block "pin <  8"
[20:43:36.874]                      // =>  TRUE
[20:43:36.874]                    <block atomic="false" info="">
[20:43:36.874]                      pos = ((pin    ) & 7) * 4;
[20:43:36.874]                        // -> [pos <= 0x0000000C]
[20:43:36.874]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:43:36.875]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.875]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.875]                    </block>
[20:43:36.876]                    // end if-block "pin <  8"
[20:43:36.876]                  </control>
[20:43:36.876]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:43:36.876]                    // if-block "pin >= 8"
[20:43:36.876]                      // =>  FALSE
[20:43:36.876]                    // skip if-block "pin >= 8"
[20:43:36.877]                  </control>
[20:43:36.877]                </sequence>
[20:43:36.877]            </block>
[20:43:36.877]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:43:36.877]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:43:36.878]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:36.878]            </block>
[20:43:36.878]          </sequence>
[20:43:36.878]      </block>
[20:43:36.878]      // end if-block "traceSWO"
[20:43:36.878]    </control>
[20:43:36.878]    <control if="traceTPIU" while="" timeout="0" info="">
[20:43:36.878]      // if-block "traceTPIU"
[20:43:36.879]        // =>  FALSE
[20:43:36.879]      // skip if-block "traceTPIU"
[20:43:36.879]    </control>
[20:43:36.879]  </sequence>
[20:43:36.879]  
[20:43:52.364]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:43:52.364]  
[20:43:52.365]  <debugvars>
[20:43:52.365]    // Pre-defined
[20:43:52.365]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:43:52.365]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:43:52.365]    __dp=0x00000000
[20:43:52.365]    __ap=0x00000000
[20:43:52.366]    __traceout=0x00000001      (SWO Trace)
[20:43:52.366]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:43:52.366]    __FlashAddr=0x00000000
[20:43:52.366]    __FlashLen=0x00000000
[20:43:52.366]    __FlashArg=0x00000000
[20:43:52.366]    __FlashOp=0x00000000
[20:43:52.366]    __Result=0x00000000
[20:43:52.367]    
[20:43:52.367]    // User-defined
[20:43:52.367]    DbgMCU_CR=0x00000007
[20:43:52.367]    DbgMCU_APB1_Fz=0x00000000
[20:43:52.367]    DbgMCU_APB2_Fz=0x00000000
[20:43:52.367]    TraceClk_Pin=0x00040002
[20:43:52.367]    TraceD0_Pin=0x00040003
[20:43:52.367]    TraceD1_Pin=0x00040004
[20:43:52.368]    TraceD2_Pin=0x00040005
[20:43:52.368]    TraceD3_Pin=0x00040006
[20:43:52.368]  </debugvars>
[20:43:52.368]  
[20:43:52.368]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:43:52.368]    <block atomic="false" info="">
[20:43:52.368]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:43:52.369]        // -> [traceSWO <= 0x00000001]
[20:43:52.369]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:43:52.369]        // -> [traceTPIU <= 0x00000000]
[20:43:52.369]    </block>
[20:43:52.369]    <control if="traceSWO" while="" timeout="0" info="">
[20:43:52.369]      // if-block "traceSWO"
[20:43:52.369]        // =>  TRUE
[20:43:52.369]      <block atomic="false" info="">
[20:43:52.370]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:43:52.370]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:43:52.370]            <block atomic="false" info="">
[20:43:52.370]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:43:52.370]                // -> [dbgmcu_val <= 0x00000000]
[20:43:52.370]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:43:52.370]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:43:52.371]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:43:52.371]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.371]                // -> [dbgmcu_val <= 0x00000007]
[20:43:52.371]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:43:52.371]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:43:52.371]              Sequence("ConfigureTraceSWOPin");
[20:43:52.372]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:43:52.372]                  <block atomic="false" info="">
[20:43:52.372]                    __var pin     = 0;
[20:43:52.372]                      // -> [pin <= 0x00000000]
[20:43:52.372]                    __var port    = 0;
[20:43:52.372]                      // -> [port <= 0x00000000]
[20:43:52.372]                    __var portAdr = 0;
[20:43:52.373]                      // -> [portAdr <= 0x00000000]
[20:43:52.373]                    __var pos     = 0;
[20:43:52.373]                      // -> [pos <= 0x00000000]
[20:43:52.373]                    __var SWO_Pin = 0x00010003;          // PB3
[20:43:52.373]                      // -> [SWO_Pin <= 0x00010003]
[20:43:52.373]                  </block>
[20:43:52.373]                  <block atomic="false" info="configure SWO">
[20:43:52.373]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:43:52.374]                      // -> [pin <= 0x00000003]
[20:43:52.374]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:43:52.374]                      // -> [port <= 0x00000001]
[20:43:52.374]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:43:52.374]                      // -> [portAdr <= 0x40020400]
[20:43:52.374]                    pos = pin * 2;
[20:43:52.374]                      // -> [pos <= 0x00000006]
[20:43:52.375]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:43:52.375]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.375]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.376]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:43:52.376]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.377]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.377]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:43:52.377]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.378]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.378]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:43:52.378]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.379]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.379]                  </block>
[20:43:52.379]                  <control if="pin <  8" while="" timeout="0" info="">
[20:43:52.379]                    // if-block "pin <  8"
[20:43:52.379]                      // =>  TRUE
[20:43:52.380]                    <block atomic="false" info="">
[20:43:52.380]                      pos = ((pin    ) & 7) * 4;
[20:43:52.380]                        // -> [pos <= 0x0000000C]
[20:43:52.386]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:43:52.386]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.387]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.387]                    </block>
[20:43:52.387]                    // end if-block "pin <  8"
[20:43:52.387]                  </control>
[20:43:52.387]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:43:52.387]                    // if-block "pin >= 8"
[20:43:52.388]                      // =>  FALSE
[20:43:52.388]                    // skip if-block "pin >= 8"
[20:43:52.388]                  </control>
[20:43:52.388]                </sequence>
[20:43:52.388]            </block>
[20:43:52.388]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:43:52.388]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:43:52.389]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:43:52.389]            </block>
[20:43:52.389]          </sequence>
[20:43:52.389]      </block>
[20:43:52.389]      // end if-block "traceSWO"
[20:43:52.389]    </control>
[20:43:52.390]    <control if="traceTPIU" while="" timeout="0" info="">
[20:43:52.390]      // if-block "traceTPIU"
[20:43:52.390]        // =>  FALSE
[20:43:52.390]      // skip if-block "traceTPIU"
[20:43:52.390]    </control>
[20:43:52.390]  </sequence>
[20:43:52.391]  
[20:44:04.926]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:44:04.926]  
[20:44:04.926]  <debugvars>
[20:44:04.926]    // Pre-defined
[20:44:04.927]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:44:04.927]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:44:04.927]    __dp=0x00000000
[20:44:04.927]    __ap=0x00000000
[20:44:04.927]    __traceout=0x00000001      (SWO Trace)
[20:44:04.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:44:04.928]    __FlashAddr=0x00000000
[20:44:04.928]    __FlashLen=0x00000000
[20:44:04.928]    __FlashArg=0x00000000
[20:44:04.928]    __FlashOp=0x00000000
[20:44:04.928]    __Result=0x00000000
[20:44:04.928]    
[20:44:04.928]    // User-defined
[20:44:04.928]    DbgMCU_CR=0x00000007
[20:44:04.929]    DbgMCU_APB1_Fz=0x00000000
[20:44:04.929]    DbgMCU_APB2_Fz=0x00000000
[20:44:04.929]    TraceClk_Pin=0x00040002
[20:44:04.929]    TraceD0_Pin=0x00040003
[20:44:04.929]    TraceD1_Pin=0x00040004
[20:44:04.929]    TraceD2_Pin=0x00040005
[20:44:04.929]    TraceD3_Pin=0x00040006
[20:44:04.930]  </debugvars>
[20:44:04.930]  
[20:44:04.930]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:44:04.930]    <block atomic="false" info="">
[20:44:04.930]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:44:04.930]        // -> [traceSWO <= 0x00000001]
[20:44:04.930]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:44:04.931]        // -> [traceTPIU <= 0x00000000]
[20:44:04.931]    </block>
[20:44:04.931]    <control if="traceSWO" while="" timeout="0" info="">
[20:44:04.931]      // if-block "traceSWO"
[20:44:04.931]        // =>  TRUE
[20:44:04.931]      <block atomic="false" info="">
[20:44:04.931]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:44:04.931]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:44:04.932]            <block atomic="false" info="">
[20:44:04.932]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:44:04.932]                // -> [dbgmcu_val <= 0x00000000]
[20:44:04.932]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:44:04.932]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:44:04.932]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:44:04.933]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.933]                // -> [dbgmcu_val <= 0x00000007]
[20:44:04.933]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:44:04.933]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:44:04.933]              Sequence("ConfigureTraceSWOPin");
[20:44:04.933]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:44:04.934]                  <block atomic="false" info="">
[20:44:04.934]                    __var pin     = 0;
[20:44:04.934]                      // -> [pin <= 0x00000000]
[20:44:04.934]                    __var port    = 0;
[20:44:04.934]                      // -> [port <= 0x00000000]
[20:44:04.934]                    __var portAdr = 0;
[20:44:04.934]                      // -> [portAdr <= 0x00000000]
[20:44:04.934]                    __var pos     = 0;
[20:44:04.934]                      // -> [pos <= 0x00000000]
[20:44:04.935]                    __var SWO_Pin = 0x00010003;          // PB3
[20:44:04.935]                      // -> [SWO_Pin <= 0x00010003]
[20:44:04.935]                  </block>
[20:44:04.935]                  <block atomic="false" info="configure SWO">
[20:44:04.935]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:44:04.935]                      // -> [pin <= 0x00000003]
[20:44:04.935]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:44:04.936]                      // -> [port <= 0x00000001]
[20:44:04.936]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:44:04.936]                      // -> [portAdr <= 0x40020400]
[20:44:04.936]                    pos = pin * 2;
[20:44:04.936]                      // -> [pos <= 0x00000006]
[20:44:04.936]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:44:04.937]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.937]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.937]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:44:04.938]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.938]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.938]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:44:04.939]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.939]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.939]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:44:04.939]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.940]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.940]                  </block>
[20:44:04.940]                  <control if="pin <  8" while="" timeout="0" info="">
[20:44:04.940]                    // if-block "pin <  8"
[20:44:04.940]                      // =>  TRUE
[20:44:04.940]                    <block atomic="false" info="">
[20:44:04.941]                      pos = ((pin    ) & 7) * 4;
[20:44:04.941]                        // -> [pos <= 0x0000000C]
[20:44:04.941]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:44:04.941]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.942]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.942]                    </block>
[20:44:04.942]                    // end if-block "pin <  8"
[20:44:04.942]                  </control>
[20:44:04.942]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:44:04.942]                    // if-block "pin >= 8"
[20:44:04.942]                      // =>  FALSE
[20:44:04.942]                    // skip if-block "pin >= 8"
[20:44:04.943]                  </control>
[20:44:04.943]                </sequence>
[20:44:04.943]            </block>
[20:44:04.943]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:44:04.943]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:44:04.943]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:04.944]            </block>
[20:44:04.944]          </sequence>
[20:44:04.944]      </block>
[20:44:04.944]      // end if-block "traceSWO"
[20:44:04.944]    </control>
[20:44:04.944]    <control if="traceTPIU" while="" timeout="0" info="">
[20:44:04.944]      // if-block "traceTPIU"
[20:44:04.945]        // =>  FALSE
[20:44:04.945]      // skip if-block "traceTPIU"
[20:44:04.945]    </control>
[20:44:04.945]  </sequence>
[20:44:04.945]  
[20:44:23.558]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:44:23.558]  
[20:44:23.559]  <debugvars>
[20:44:23.559]    // Pre-defined
[20:44:23.559]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:44:23.559]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:44:23.560]    __dp=0x00000000
[20:44:23.560]    __ap=0x00000000
[20:44:23.560]    __traceout=0x00000001      (SWO Trace)
[20:44:23.560]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:44:23.560]    __FlashAddr=0x00000000
[20:44:23.561]    __FlashLen=0x00000000
[20:44:23.561]    __FlashArg=0x00000000
[20:44:23.561]    __FlashOp=0x00000000
[20:44:23.561]    __Result=0x00000000
[20:44:23.561]    
[20:44:23.561]    // User-defined
[20:44:23.561]    DbgMCU_CR=0x00000007
[20:44:23.561]    DbgMCU_APB1_Fz=0x00000000
[20:44:23.562]    DbgMCU_APB2_Fz=0x00000000
[20:44:23.562]    TraceClk_Pin=0x00040002
[20:44:23.562]    TraceD0_Pin=0x00040003
[20:44:23.562]    TraceD1_Pin=0x00040004
[20:44:23.562]    TraceD2_Pin=0x00040005
[20:44:23.562]    TraceD3_Pin=0x00040006
[20:44:23.563]  </debugvars>
[20:44:23.563]  
[20:44:23.563]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:44:23.563]    <block atomic="false" info="">
[20:44:23.563]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:44:23.563]        // -> [traceSWO <= 0x00000001]
[20:44:23.563]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:44:23.564]        // -> [traceTPIU <= 0x00000000]
[20:44:23.564]    </block>
[20:44:23.564]    <control if="traceSWO" while="" timeout="0" info="">
[20:44:23.564]      // if-block "traceSWO"
[20:44:23.564]        // =>  TRUE
[20:44:23.564]      <block atomic="false" info="">
[20:44:23.565]        Sequence("DisableTraceSWO");
[20:44:23.565]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:44:23.565]            <block atomic="false" info="">
[20:44:23.565]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:44:23.565]                // -> [dbgmcu_val <= 0x00000000]
[20:44:23.566]            </block>
[20:44:23.566]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:44:23.566]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:44:23.566]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:44:23.566]                // -> [dbgmcu_val <= 0x00000007]
[20:44:23.567]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:44:23.567]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:44:23.568]            </block>
[20:44:23.568]          </sequence>
[20:44:23.568]      </block>
[20:44:23.568]      // end if-block "traceSWO"
[20:44:23.568]    </control>
[20:44:23.568]    <control if="traceTPIU" while="" timeout="0" info="">
[20:44:23.568]      // if-block "traceTPIU"
[20:44:23.568]        // =>  FALSE
[20:44:23.569]      // skip if-block "traceTPIU"
[20:44:23.569]    </control>
[20:44:23.569]  </sequence>
[20:44:23.569]  
[20:45:24.926]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:45:24.926]  
[20:45:24.926]  <debugvars>
[20:45:24.927]    // Pre-defined
[20:45:24.927]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:24.927]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:45:24.927]    __dp=0x00000000
[20:45:24.927]    __ap=0x00000000
[20:45:24.928]    __traceout=0x00000001      (SWO Trace)
[20:45:24.928]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:24.929]    __FlashAddr=0x00000000
[20:45:24.929]    __FlashLen=0x00000000
[20:45:24.929]    __FlashArg=0x00000000
[20:45:24.929]    __FlashOp=0x00000000
[20:45:24.929]    __Result=0x00000000
[20:45:24.930]    
[20:45:24.930]    // User-defined
[20:45:24.930]    DbgMCU_CR=0x00000007
[20:45:24.930]    DbgMCU_APB1_Fz=0x00000000
[20:45:24.930]    DbgMCU_APB2_Fz=0x00000000
[20:45:24.930]    TraceClk_Pin=0x00040002
[20:45:24.931]    TraceD0_Pin=0x00040003
[20:45:24.931]    TraceD1_Pin=0x00040004
[20:45:24.931]    TraceD2_Pin=0x00040005
[20:45:24.931]    TraceD3_Pin=0x00040006
[20:45:24.931]  </debugvars>
[20:45:24.931]  
[20:45:24.932]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:45:24.932]    <block atomic="false" info="">
[20:45:24.932]      Sequence("CheckID");
[20:45:24.932]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:45:24.932]          <block atomic="false" info="">
[20:45:24.933]            __var pidr1 = 0;
[20:45:24.933]              // -> [pidr1 <= 0x00000000]
[20:45:24.933]            __var pidr2 = 0;
[20:45:24.933]              // -> [pidr2 <= 0x00000000]
[20:45:24.933]            __var jep106id = 0;
[20:45:24.933]              // -> [jep106id <= 0x00000000]
[20:45:24.933]            __var ROMTableBase = 0;
[20:45:24.933]              // -> [ROMTableBase <= 0x00000000]
[20:45:24.933]            __ap = 0;      // AHB-AP
[20:45:24.933]              // -> [__ap <= 0x00000000]
[20:45:24.934]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:45:24.934]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.934]              // -> [ROMTableBase <= 0xE00FD000]
[20:45:24.934]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:45:24.935]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.935]              // -> [pidr1 <= 0x00000004]
[20:45:24.935]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:45:24.936]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.936]              // -> [pidr2 <= 0x0000001A]
[20:45:24.936]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:45:24.936]              // -> [jep106id <= 0x00000020]
[20:45:24.936]          </block>
[20:45:24.936]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:45:24.936]            // if-block "jep106id != 0x20"
[20:45:24.937]              // =>  FALSE
[20:45:24.937]            // skip if-block "jep106id != 0x20"
[20:45:24.937]          </control>
[20:45:24.937]        </sequence>
[20:45:24.937]    </block>
[20:45:24.937]  </sequence>
[20:45:24.937]  
[20:45:24.952]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:45:24.952]  
[20:45:24.953]  <debugvars>
[20:45:24.953]    // Pre-defined
[20:45:24.953]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:24.953]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:45:24.953]    __dp=0x00000000
[20:45:24.953]    __ap=0x00000000
[20:45:24.953]    __traceout=0x00000001      (SWO Trace)
[20:45:24.954]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:24.954]    __FlashAddr=0x00000000
[20:45:24.954]    __FlashLen=0x00000000
[20:45:24.954]    __FlashArg=0x00000000
[20:45:24.954]    __FlashOp=0x00000000
[20:45:24.954]    __Result=0x00000000
[20:45:24.955]    
[20:45:24.955]    // User-defined
[20:45:24.955]    DbgMCU_CR=0x00000007
[20:45:24.955]    DbgMCU_APB1_Fz=0x00000000
[20:45:24.955]    DbgMCU_APB2_Fz=0x00000000
[20:45:24.956]    TraceClk_Pin=0x00040002
[20:45:24.956]    TraceD0_Pin=0x00040003
[20:45:24.956]    TraceD1_Pin=0x00040004
[20:45:24.956]    TraceD2_Pin=0x00040005
[20:45:24.956]    TraceD3_Pin=0x00040006
[20:45:24.956]  </debugvars>
[20:45:24.957]  
[20:45:24.957]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:45:24.957]    <block atomic="false" info="">
[20:45:24.957]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:45:24.958]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.958]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:45:24.959]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.959]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:45:24.959]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.959]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:45:24.960]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:24.960]    </block>
[20:45:24.960]  </sequence>
[20:45:24.961]  
[20:45:56.414]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:45:56.414]  
[20:45:56.415]  <debugvars>
[20:45:56.415]    // Pre-defined
[20:45:56.415]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:56.416]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:56.416]    __dp=0x00000000
[20:45:56.416]    __ap=0x00000000
[20:45:56.416]    __traceout=0x00000001      (SWO Trace)
[20:45:56.416]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:56.416]    __FlashAddr=0x00000000
[20:45:56.417]    __FlashLen=0x00000000
[20:45:56.417]    __FlashArg=0x00000000
[20:45:56.417]    __FlashOp=0x00000000
[20:45:56.417]    __Result=0x00000000
[20:45:56.417]    
[20:45:56.417]    // User-defined
[20:45:56.418]    DbgMCU_CR=0x00000007
[20:45:56.418]    DbgMCU_APB1_Fz=0x00000000
[20:45:56.418]    DbgMCU_APB2_Fz=0x00000000
[20:45:56.418]    TraceClk_Pin=0x00040002
[20:45:56.418]    TraceD0_Pin=0x00040003
[20:45:56.418]    TraceD1_Pin=0x00040004
[20:45:56.419]    TraceD2_Pin=0x00040005
[20:45:56.419]    TraceD3_Pin=0x00040006
[20:45:56.419]  </debugvars>
[20:45:56.419]  
[20:45:56.419]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:45:56.419]    <block atomic="false" info="">
[20:45:56.419]      Sequence("CheckID");
[20:45:56.419]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:45:56.420]          <block atomic="false" info="">
[20:45:56.420]            __var pidr1 = 0;
[20:45:56.420]              // -> [pidr1 <= 0x00000000]
[20:45:56.420]            __var pidr2 = 0;
[20:45:56.420]              // -> [pidr2 <= 0x00000000]
[20:45:56.420]            __var jep106id = 0;
[20:45:56.420]              // -> [jep106id <= 0x00000000]
[20:45:56.421]            __var ROMTableBase = 0;
[20:45:56.421]              // -> [ROMTableBase <= 0x00000000]
[20:45:56.421]            __ap = 0;      // AHB-AP
[20:45:56.421]              // -> [__ap <= 0x00000000]
[20:45:56.421]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:45:56.421]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.421]              // -> [ROMTableBase <= 0xE00FD000]
[20:45:56.421]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:45:56.422]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.422]              // -> [pidr1 <= 0x00000004]
[20:45:56.422]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:45:56.423]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.423]              // -> [pidr2 <= 0x0000001A]
[20:45:56.423]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:45:56.423]              // -> [jep106id <= 0x00000020]
[20:45:56.423]          </block>
[20:45:56.423]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:45:56.424]            // if-block "jep106id != 0x20"
[20:45:56.424]              // =>  FALSE
[20:45:56.424]            // skip if-block "jep106id != 0x20"
[20:45:56.424]          </control>
[20:45:56.424]        </sequence>
[20:45:56.424]    </block>
[20:45:56.424]  </sequence>
[20:45:56.424]  
[20:45:56.440]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:45:56.440]  
[20:45:56.440]  <debugvars>
[20:45:56.440]    // Pre-defined
[20:45:56.440]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:56.441]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:56.441]    __dp=0x00000000
[20:45:56.441]    __ap=0x00000000
[20:45:56.441]    __traceout=0x00000001      (SWO Trace)
[20:45:56.441]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:56.441]    __FlashAddr=0x00000000
[20:45:56.442]    __FlashLen=0x00000000
[20:45:56.442]    __FlashArg=0x00000000
[20:45:56.442]    __FlashOp=0x00000000
[20:45:56.442]    __Result=0x00000000
[20:45:56.442]    
[20:45:56.442]    // User-defined
[20:45:56.443]    DbgMCU_CR=0x00000007
[20:45:56.443]    DbgMCU_APB1_Fz=0x00000000
[20:45:56.443]    DbgMCU_APB2_Fz=0x00000000
[20:45:56.443]    TraceClk_Pin=0x00040002
[20:45:56.443]    TraceD0_Pin=0x00040003
[20:45:56.443]    TraceD1_Pin=0x00040004
[20:45:56.444]    TraceD2_Pin=0x00040005
[20:45:56.444]    TraceD3_Pin=0x00040006
[20:45:56.444]  </debugvars>
[20:45:56.444]  
[20:45:56.444]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:45:56.444]    <block atomic="false" info="">
[20:45:56.445]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:45:56.445]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.445]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:45:56.446]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.446]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:45:56.446]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.447]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:45:56.447]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.447]    </block>
[20:45:56.447]  </sequence>
[20:45:56.447]  
[20:45:56.464]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:45:56.464]  
[20:45:56.464]  <debugvars>
[20:45:56.464]    // Pre-defined
[20:45:56.465]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:56.465]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:56.465]    __dp=0x00000000
[20:45:56.465]    __ap=0x00000000
[20:45:56.465]    __traceout=0x00000001      (SWO Trace)
[20:45:56.466]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:56.466]    __FlashAddr=0x00000000
[20:45:56.466]    __FlashLen=0x00000000
[20:45:56.466]    __FlashArg=0x00000000
[20:45:56.466]    __FlashOp=0x00000000
[20:45:56.466]    __Result=0x00000000
[20:45:56.467]    
[20:45:56.467]    // User-defined
[20:45:56.467]    DbgMCU_CR=0x00000007
[20:45:56.467]    DbgMCU_APB1_Fz=0x00000000
[20:45:56.467]    DbgMCU_APB2_Fz=0x00000000
[20:45:56.467]    TraceClk_Pin=0x00040002
[20:45:56.468]    TraceD0_Pin=0x00040003
[20:45:56.468]    TraceD1_Pin=0x00040004
[20:45:56.468]    TraceD2_Pin=0x00040005
[20:45:56.468]    TraceD3_Pin=0x00040006
[20:45:56.468]  </debugvars>
[20:45:56.469]  
[20:45:56.469]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:45:56.469]    <block atomic="false" info="">
[20:45:56.469]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:45:56.469]        // -> [traceSWO <= 0x00000001]
[20:45:56.469]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:45:56.470]        // -> [traceTPIU <= 0x00000000]
[20:45:56.470]    </block>
[20:45:56.470]    <control if="traceSWO" while="" timeout="0" info="">
[20:45:56.470]      // if-block "traceSWO"
[20:45:56.470]        // =>  TRUE
[20:45:56.470]      <block atomic="false" info="">
[20:45:56.471]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:45:56.471]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:45:56.471]            <block atomic="false" info="">
[20:45:56.471]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:45:56.471]                // -> [dbgmcu_val <= 0x00000000]
[20:45:56.471]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:45:56.472]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:45:56.472]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:45:56.472]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.472]                // -> [dbgmcu_val <= 0x00000007]
[20:45:56.472]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:45:56.473]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:45:56.473]              Sequence("ConfigureTraceSWOPin");
[20:45:56.473]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:45:56.473]                  <block atomic="false" info="">
[20:45:56.473]                    __var pin     = 0;
[20:45:56.473]                      // -> [pin <= 0x00000000]
[20:45:56.473]                    __var port    = 0;
[20:45:56.474]                      // -> [port <= 0x00000000]
[20:45:56.474]                    __var portAdr = 0;
[20:45:56.474]                      // -> [portAdr <= 0x00000000]
[20:45:56.474]                    __var pos     = 0;
[20:45:56.474]                      // -> [pos <= 0x00000000]
[20:45:56.474]                    __var SWO_Pin = 0x00010003;          // PB3
[20:45:56.474]                      // -> [SWO_Pin <= 0x00010003]
[20:45:56.475]                  </block>
[20:45:56.475]                  <block atomic="false" info="configure SWO">
[20:45:56.475]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:45:56.475]                      // -> [pin <= 0x00000003]
[20:45:56.475]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:45:56.475]                      // -> [port <= 0x00000001]
[20:45:56.475]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:45:56.475]                      // -> [portAdr <= 0x40020400]
[20:45:56.476]                    pos = pin * 2;
[20:45:56.476]                      // -> [pos <= 0x00000006]
[20:45:56.476]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:45:56.476]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.477]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.477]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:45:56.477]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.478]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.478]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:45:56.478]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.479]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.479]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:45:56.479]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.480]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.480]                  </block>
[20:45:56.480]                  <control if="pin <  8" while="" timeout="0" info="">
[20:45:56.480]                    // if-block "pin <  8"
[20:45:56.480]                      // =>  TRUE
[20:45:56.480]                    <block atomic="false" info="">
[20:45:56.480]                      pos = ((pin    ) & 7) * 4;
[20:45:56.481]                        // -> [pos <= 0x0000000C]
[20:45:56.481]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:45:56.481]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.482]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.482]                    </block>
[20:45:56.482]                    // end if-block "pin <  8"
[20:45:56.482]                  </control>
[20:45:56.482]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:45:56.482]                    // if-block "pin >= 8"
[20:45:56.482]                      // =>  FALSE
[20:45:56.482]                    // skip if-block "pin >= 8"
[20:45:56.483]                  </control>
[20:45:56.483]                </sequence>
[20:45:56.483]            </block>
[20:45:56.483]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:45:56.483]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:45:56.484]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.484]            </block>
[20:45:56.484]          </sequence>
[20:45:56.484]      </block>
[20:45:56.484]      // end if-block "traceSWO"
[20:45:56.484]    </control>
[20:45:56.485]    <control if="traceTPIU" while="" timeout="0" info="">
[20:45:56.485]      // if-block "traceTPIU"
[20:45:56.485]        // =>  FALSE
[20:45:56.485]      // skip if-block "traceTPIU"
[20:45:56.485]    </control>
[20:45:56.485]  </sequence>
[20:45:56.485]  
[20:45:56.489]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:45:56.489]  
[20:45:56.489]  <debugvars>
[20:45:56.489]    // Pre-defined
[20:45:56.490]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:56.490]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:56.490]    __dp=0x00000000
[20:45:56.490]    __ap=0x00000000
[20:45:56.490]    __traceout=0x00000001      (SWO Trace)
[20:45:56.490]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:56.491]    __FlashAddr=0x00000000
[20:45:56.491]    __FlashLen=0x00000000
[20:45:56.491]    __FlashArg=0x00000000
[20:45:56.491]    __FlashOp=0x00000000
[20:45:56.491]    __Result=0x00000000
[20:45:56.491]    
[20:45:56.491]    // User-defined
[20:45:56.491]    DbgMCU_CR=0x00000007
[20:45:56.491]    DbgMCU_APB1_Fz=0x00000000
[20:45:56.491]    DbgMCU_APB2_Fz=0x00000000
[20:45:56.492]    TraceClk_Pin=0x00040002
[20:45:56.492]    TraceD0_Pin=0x00040003
[20:45:56.492]    TraceD1_Pin=0x00040004
[20:45:56.492]    TraceD2_Pin=0x00040005
[20:45:56.492]    TraceD3_Pin=0x00040006
[20:45:56.492]  </debugvars>
[20:45:56.492]  
[20:45:56.493]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:45:56.493]    <block atomic="false" info="">
[20:45:56.493]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:45:56.493]        // -> [traceSWO <= 0x00000001]
[20:45:56.493]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:45:56.493]        // -> [traceTPIU <= 0x00000000]
[20:45:56.493]    </block>
[20:45:56.494]    <control if="traceSWO" while="" timeout="0" info="">
[20:45:56.494]      // if-block "traceSWO"
[20:45:56.494]        // =>  TRUE
[20:45:56.494]      <block atomic="false" info="">
[20:45:56.494]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:45:56.495]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:45:56.495]            <block atomic="false" info="">
[20:45:56.495]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:45:56.495]                // -> [dbgmcu_val <= 0x00000000]
[20:45:56.495]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:45:56.496]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:45:56.496]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:45:56.496]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.496]                // -> [dbgmcu_val <= 0x00000007]
[20:45:56.496]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:45:56.497]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:45:56.497]              Sequence("ConfigureTraceSWOPin");
[20:45:56.497]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:45:56.497]                  <block atomic="false" info="">
[20:45:56.497]                    __var pin     = 0;
[20:45:56.497]                      // -> [pin <= 0x00000000]
[20:45:56.497]                    __var port    = 0;
[20:45:56.498]                      // -> [port <= 0x00000000]
[20:45:56.498]                    __var portAdr = 0;
[20:45:56.498]                      // -> [portAdr <= 0x00000000]
[20:45:56.498]                    __var pos     = 0;
[20:45:56.498]                      // -> [pos <= 0x00000000]
[20:45:56.498]                    __var SWO_Pin = 0x00010003;          // PB3
[20:45:56.498]                      // -> [SWO_Pin <= 0x00010003]
[20:45:56.498]                  </block>
[20:45:56.498]                  <block atomic="false" info="configure SWO">
[20:45:56.499]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:45:56.499]                      // -> [pin <= 0x00000003]
[20:45:56.499]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:45:56.499]                      // -> [port <= 0x00000001]
[20:45:56.499]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:45:56.499]                      // -> [portAdr <= 0x40020400]
[20:45:56.500]                    pos = pin * 2;
[20:45:56.500]                      // -> [pos <= 0x00000006]
[20:45:56.500]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:45:56.500]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.501]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.501]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:45:56.502]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.502]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.502]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:45:56.503]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.503]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.504]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:45:56.504]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.505]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.505]                  </block>
[20:45:56.505]                  <control if="pin <  8" while="" timeout="0" info="">
[20:45:56.505]                    // if-block "pin <  8"
[20:45:56.505]                      // =>  TRUE
[20:45:56.505]                    <block atomic="false" info="">
[20:45:56.506]                      pos = ((pin    ) & 7) * 4;
[20:45:56.506]                        // -> [pos <= 0x0000000C]
[20:45:56.506]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:45:56.506]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.507]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.507]                    </block>
[20:45:56.507]                    // end if-block "pin <  8"
[20:45:56.507]                  </control>
[20:45:56.507]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:45:56.507]                    // if-block "pin >= 8"
[20:45:56.508]                      // =>  FALSE
[20:45:56.508]                    // skip if-block "pin >= 8"
[20:45:56.508]                  </control>
[20:45:56.508]                </sequence>
[20:45:56.508]            </block>
[20:45:56.508]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:45:56.508]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:45:56.509]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.509]            </block>
[20:45:56.509]          </sequence>
[20:45:56.509]      </block>
[20:45:56.509]      // end if-block "traceSWO"
[20:45:56.509]    </control>
[20:45:56.509]    <control if="traceTPIU" while="" timeout="0" info="">
[20:45:56.510]      // if-block "traceTPIU"
[20:45:56.510]        // =>  FALSE
[20:45:56.510]      // skip if-block "traceTPIU"
[20:45:56.510]    </control>
[20:45:56.510]  </sequence>
[20:45:56.510]  
[20:45:56.742]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:45:56.742]  
[20:45:56.742]  <debugvars>
[20:45:56.742]    // Pre-defined
[20:45:56.743]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:45:56.743]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:45:56.743]    __dp=0x00000000
[20:45:56.743]    __ap=0x00000000
[20:45:56.743]    __traceout=0x00000001      (SWO Trace)
[20:45:56.744]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:45:56.744]    __FlashAddr=0x00000000
[20:45:56.744]    __FlashLen=0x00000000
[20:45:56.744]    __FlashArg=0x00000000
[20:45:56.744]    __FlashOp=0x00000000
[20:45:56.744]    __Result=0x00000000
[20:45:56.745]    
[20:45:56.745]    // User-defined
[20:45:56.745]    DbgMCU_CR=0x00000007
[20:45:56.745]    DbgMCU_APB1_Fz=0x00000000
[20:45:56.745]    DbgMCU_APB2_Fz=0x00000000
[20:45:56.745]    TraceClk_Pin=0x00040002
[20:45:56.746]    TraceD0_Pin=0x00040003
[20:45:56.746]    TraceD1_Pin=0x00040004
[20:45:56.746]    TraceD2_Pin=0x00040005
[20:45:56.746]    TraceD3_Pin=0x00040006
[20:45:56.746]  </debugvars>
[20:45:56.746]  
[20:45:56.747]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:45:56.747]    <block atomic="false" info="">
[20:45:56.747]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:45:56.747]        // -> [traceSWO <= 0x00000001]
[20:45:56.747]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:45:56.747]        // -> [traceTPIU <= 0x00000000]
[20:45:56.748]    </block>
[20:45:56.748]    <control if="traceSWO" while="" timeout="0" info="">
[20:45:56.748]      // if-block "traceSWO"
[20:45:56.748]        // =>  TRUE
[20:45:56.748]      <block atomic="false" info="">
[20:45:56.748]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:45:56.749]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:45:56.749]            <block atomic="false" info="">
[20:45:56.749]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:45:56.749]                // -> [dbgmcu_val <= 0x00000000]
[20:45:56.749]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:45:56.750]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:45:56.750]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:45:56.750]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.750]                // -> [dbgmcu_val <= 0x00000007]
[20:45:56.750]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:45:56.751]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:45:56.751]              Sequence("ConfigureTraceSWOPin");
[20:45:56.751]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:45:56.751]                  <block atomic="false" info="">
[20:45:56.751]                    __var pin     = 0;
[20:45:56.751]                      // -> [pin <= 0x00000000]
[20:45:56.752]                    __var port    = 0;
[20:45:56.752]                      // -> [port <= 0x00000000]
[20:45:56.752]                    __var portAdr = 0;
[20:45:56.752]                      // -> [portAdr <= 0x00000000]
[20:45:56.752]                    __var pos     = 0;
[20:45:56.752]                      // -> [pos <= 0x00000000]
[20:45:56.753]                    __var SWO_Pin = 0x00010003;          // PB3
[20:45:56.753]                      // -> [SWO_Pin <= 0x00010003]
[20:45:56.753]                  </block>
[20:45:56.753]                  <block atomic="false" info="configure SWO">
[20:45:56.753]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:45:56.753]                      // -> [pin <= 0x00000003]
[20:45:56.753]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:45:56.754]                      // -> [port <= 0x00000001]
[20:45:56.754]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:45:56.754]                      // -> [portAdr <= 0x40020400]
[20:45:56.754]                    pos = pin * 2;
[20:45:56.754]                      // -> [pos <= 0x00000006]
[20:45:56.755]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:45:56.755]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.755]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.756]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:45:56.756]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.756]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.757]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:45:56.757]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.758]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.758]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:45:56.758]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.759]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.759]                  </block>
[20:45:56.759]                  <control if="pin <  8" while="" timeout="0" info="">
[20:45:56.759]                    // if-block "pin <  8"
[20:45:56.760]                      // =>  TRUE
[20:45:56.760]                    <block atomic="false" info="">
[20:45:56.760]                      pos = ((pin    ) & 7) * 4;
[20:45:56.760]                        // -> [pos <= 0x0000000C]
[20:45:56.760]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:45:56.761]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.761]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.761]                    </block>
[20:45:56.761]                    // end if-block "pin <  8"
[20:45:56.762]                  </control>
[20:45:56.762]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:45:56.762]                    // if-block "pin >= 8"
[20:45:56.762]                      // =>  FALSE
[20:45:56.762]                    // skip if-block "pin >= 8"
[20:45:56.762]                  </control>
[20:45:56.762]                </sequence>
[20:45:56.763]            </block>
[20:45:56.763]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:45:56.763]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:45:56.763]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:45:56.763]            </block>
[20:45:56.764]          </sequence>
[20:45:56.764]      </block>
[20:45:56.764]      // end if-block "traceSWO"
[20:45:56.764]    </control>
[20:45:56.764]    <control if="traceTPIU" while="" timeout="0" info="">
[20:45:56.765]      // if-block "traceTPIU"
[20:45:56.765]        // =>  FALSE
[20:45:56.765]      // skip if-block "traceTPIU"
[20:45:56.765]    </control>
[20:45:56.765]  </sequence>
[20:45:56.765]  
[20:47:56.922]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:47:56.922]  
[20:47:56.923]  <debugvars>
[20:47:56.923]    // Pre-defined
[20:47:56.923]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:47:56.923]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:47:56.924]    __dp=0x00000000
[20:47:56.924]    __ap=0x00000000
[20:47:56.924]    __traceout=0x00000001      (SWO Trace)
[20:47:56.924]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:47:56.924]    __FlashAddr=0x00000000
[20:47:56.924]    __FlashLen=0x00000000
[20:47:56.924]    __FlashArg=0x00000000
[20:47:56.925]    __FlashOp=0x00000000
[20:47:56.925]    __Result=0x00000000
[20:47:56.925]    
[20:47:56.925]    // User-defined
[20:47:56.925]    DbgMCU_CR=0x00000007
[20:47:56.925]    DbgMCU_APB1_Fz=0x00000000
[20:47:56.925]    DbgMCU_APB2_Fz=0x00000000
[20:47:56.925]    TraceClk_Pin=0x00040002
[20:47:56.925]    TraceD0_Pin=0x00040003
[20:47:56.925]    TraceD1_Pin=0x00040004
[20:47:56.925]    TraceD2_Pin=0x00040005
[20:47:56.926]    TraceD3_Pin=0x00040006
[20:47:56.926]  </debugvars>
[20:47:56.926]  
[20:47:56.926]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:47:56.926]    <block atomic="false" info="">
[20:47:56.926]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:47:56.927]        // -> [traceSWO <= 0x00000001]
[20:47:56.927]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:47:56.927]        // -> [traceTPIU <= 0x00000000]
[20:47:56.927]    </block>
[20:47:56.927]    <control if="traceSWO" while="" timeout="0" info="">
[20:47:56.927]      // if-block "traceSWO"
[20:47:56.928]        // =>  TRUE
[20:47:56.929]      <block atomic="false" info="">
[20:47:56.929]        Sequence("DisableTraceSWO");
[20:47:56.929]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:47:56.929]            <block atomic="false" info="">
[20:47:56.929]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:47:56.929]                // -> [dbgmcu_val <= 0x00000000]
[20:47:56.929]            </block>
[20:47:56.929]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:47:56.929]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:47:56.929]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:47:56.929]                // -> [dbgmcu_val <= 0x00000007]
[20:47:56.930]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:47:56.930]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:47:56.930]            </block>
[20:47:56.930]          </sequence>
[20:47:56.931]      </block>
[20:47:56.931]      // end if-block "traceSWO"
[20:47:56.931]    </control>
[20:47:56.931]    <control if="traceTPIU" while="" timeout="0" info="">
[20:47:56.931]      // if-block "traceTPIU"
[20:47:56.931]        // =>  FALSE
[20:47:56.931]      // skip if-block "traceTPIU"
[20:47:56.931]    </control>
[20:47:56.932]  </sequence>
[20:47:56.932]  
[20:48:24.483]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:48:24.483]  
[20:48:24.483]  <debugvars>
[20:48:24.483]    // Pre-defined
[20:48:24.483]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:24.483]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:48:24.484]    __dp=0x00000000
[20:48:24.484]    __ap=0x00000000
[20:48:24.484]    __traceout=0x00000001      (SWO Trace)
[20:48:24.484]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:24.484]    __FlashAddr=0x00000000
[20:48:24.484]    __FlashLen=0x00000000
[20:48:24.485]    __FlashArg=0x00000000
[20:48:24.485]    __FlashOp=0x00000000
[20:48:24.485]    __Result=0x00000000
[20:48:24.485]    
[20:48:24.485]    // User-defined
[20:48:24.485]    DbgMCU_CR=0x00000007
[20:48:24.485]    DbgMCU_APB1_Fz=0x00000000
[20:48:24.486]    DbgMCU_APB2_Fz=0x00000000
[20:48:24.486]    TraceClk_Pin=0x00040002
[20:48:24.486]    TraceD0_Pin=0x00040003
[20:48:24.486]    TraceD1_Pin=0x00040004
[20:48:24.486]    TraceD2_Pin=0x00040005
[20:48:24.486]    TraceD3_Pin=0x00040006
[20:48:24.486]  </debugvars>
[20:48:24.486]  
[20:48:24.487]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:48:24.487]    <block atomic="false" info="">
[20:48:24.487]      Sequence("CheckID");
[20:48:24.487]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:48:24.487]          <block atomic="false" info="">
[20:48:24.487]            __var pidr1 = 0;
[20:48:24.487]              // -> [pidr1 <= 0x00000000]
[20:48:24.487]            __var pidr2 = 0;
[20:48:24.488]              // -> [pidr2 <= 0x00000000]
[20:48:24.488]            __var jep106id = 0;
[20:48:24.488]              // -> [jep106id <= 0x00000000]
[20:48:24.488]            __var ROMTableBase = 0;
[20:48:24.488]              // -> [ROMTableBase <= 0x00000000]
[20:48:24.488]            __ap = 0;      // AHB-AP
[20:48:24.488]              // -> [__ap <= 0x00000000]
[20:48:24.489]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:48:24.489]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.489]              // -> [ROMTableBase <= 0xE00FD000]
[20:48:24.489]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:48:24.490]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.490]              // -> [pidr1 <= 0x00000004]
[20:48:24.490]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:48:24.490]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.491]              // -> [pidr2 <= 0x0000001A]
[20:48:24.491]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:48:24.491]              // -> [jep106id <= 0x00000020]
[20:48:24.491]          </block>
[20:48:24.491]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:48:24.491]            // if-block "jep106id != 0x20"
[20:48:24.491]              // =>  FALSE
[20:48:24.492]            // skip if-block "jep106id != 0x20"
[20:48:24.492]          </control>
[20:48:24.492]        </sequence>
[20:48:24.492]    </block>
[20:48:24.492]  </sequence>
[20:48:24.492]  
[20:48:24.508]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:48:24.508]  
[20:48:24.508]  <debugvars>
[20:48:24.508]    // Pre-defined
[20:48:24.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:24.509]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:48:24.509]    __dp=0x00000000
[20:48:24.509]    __ap=0x00000000
[20:48:24.509]    __traceout=0x00000001      (SWO Trace)
[20:48:24.509]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:24.509]    __FlashAddr=0x00000000
[20:48:24.509]    __FlashLen=0x00000000
[20:48:24.510]    __FlashArg=0x00000000
[20:48:24.510]    __FlashOp=0x00000000
[20:48:24.510]    __Result=0x00000000
[20:48:24.510]    
[20:48:24.510]    // User-defined
[20:48:24.510]    DbgMCU_CR=0x00000007
[20:48:24.510]    DbgMCU_APB1_Fz=0x00000000
[20:48:24.511]    DbgMCU_APB2_Fz=0x00000000
[20:48:24.511]    TraceClk_Pin=0x00040002
[20:48:24.511]    TraceD0_Pin=0x00040003
[20:48:24.511]    TraceD1_Pin=0x00040004
[20:48:24.511]    TraceD2_Pin=0x00040005
[20:48:24.511]    TraceD3_Pin=0x00040006
[20:48:24.511]  </debugvars>
[20:48:24.512]  
[20:48:24.512]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:48:24.512]    <block atomic="false" info="">
[20:48:24.512]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:48:24.513]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.513]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:48:24.513]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.513]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:48:24.514]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.514]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:48:24.515]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:24.515]    </block>
[20:48:24.515]  </sequence>
[20:48:24.515]  
[20:48:55.843]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:48:55.843]  
[20:48:55.843]  <debugvars>
[20:48:55.843]    // Pre-defined
[20:48:55.843]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:55.843]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:55.844]    __dp=0x00000000
[20:48:55.844]    __ap=0x00000000
[20:48:55.844]    __traceout=0x00000001      (SWO Trace)
[20:48:55.845]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:55.845]    __FlashAddr=0x00000000
[20:48:55.845]    __FlashLen=0x00000000
[20:48:55.845]    __FlashArg=0x00000000
[20:48:55.845]    __FlashOp=0x00000000
[20:48:55.845]    __Result=0x00000000
[20:48:55.845]    
[20:48:55.845]    // User-defined
[20:48:55.845]    DbgMCU_CR=0x00000007
[20:48:55.845]    DbgMCU_APB1_Fz=0x00000000
[20:48:55.845]    DbgMCU_APB2_Fz=0x00000000
[20:48:55.846]    TraceClk_Pin=0x00040002
[20:48:55.846]    TraceD0_Pin=0x00040003
[20:48:55.846]    TraceD1_Pin=0x00040004
[20:48:55.846]    TraceD2_Pin=0x00040005
[20:48:55.846]    TraceD3_Pin=0x00040006
[20:48:55.846]  </debugvars>
[20:48:55.846]  
[20:48:55.846]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:48:55.847]    <block atomic="false" info="">
[20:48:55.847]      Sequence("CheckID");
[20:48:55.847]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:48:55.847]          <block atomic="false" info="">
[20:48:55.847]            __var pidr1 = 0;
[20:48:55.847]              // -> [pidr1 <= 0x00000000]
[20:48:55.847]            __var pidr2 = 0;
[20:48:55.848]              // -> [pidr2 <= 0x00000000]
[20:48:55.848]            __var jep106id = 0;
[20:48:55.848]              // -> [jep106id <= 0x00000000]
[20:48:55.848]            __var ROMTableBase = 0;
[20:48:55.848]              // -> [ROMTableBase <= 0x00000000]
[20:48:55.848]            __ap = 0;      // AHB-AP
[20:48:55.848]              // -> [__ap <= 0x00000000]
[20:48:55.848]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:48:55.849]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.849]              // -> [ROMTableBase <= 0xE00FD000]
[20:48:55.849]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:48:55.849]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.850]              // -> [pidr1 <= 0x00000004]
[20:48:55.850]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:48:55.850]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.850]              // -> [pidr2 <= 0x0000001A]
[20:48:55.850]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:48:55.850]              // -> [jep106id <= 0x00000020]
[20:48:55.851]          </block>
[20:48:55.851]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:48:55.851]            // if-block "jep106id != 0x20"
[20:48:55.851]              // =>  FALSE
[20:48:55.851]            // skip if-block "jep106id != 0x20"
[20:48:55.851]          </control>
[20:48:55.851]        </sequence>
[20:48:55.851]    </block>
[20:48:55.852]  </sequence>
[20:48:55.852]  
[20:48:55.867]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:48:55.867]  
[20:48:55.867]  <debugvars>
[20:48:55.867]    // Pre-defined
[20:48:55.867]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:55.867]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:55.867]    __dp=0x00000000
[20:48:55.868]    __ap=0x00000000
[20:48:55.868]    __traceout=0x00000001      (SWO Trace)
[20:48:55.868]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:55.868]    __FlashAddr=0x00000000
[20:48:55.868]    __FlashLen=0x00000000
[20:48:55.868]    __FlashArg=0x00000000
[20:48:55.868]    __FlashOp=0x00000000
[20:48:55.869]    __Result=0x00000000
[20:48:55.869]    
[20:48:55.869]    // User-defined
[20:48:55.869]    DbgMCU_CR=0x00000007
[20:48:55.869]    DbgMCU_APB1_Fz=0x00000000
[20:48:55.869]    DbgMCU_APB2_Fz=0x00000000
[20:48:55.869]    TraceClk_Pin=0x00040002
[20:48:55.870]    TraceD0_Pin=0x00040003
[20:48:55.870]    TraceD1_Pin=0x00040004
[20:48:55.870]    TraceD2_Pin=0x00040005
[20:48:55.870]    TraceD3_Pin=0x00040006
[20:48:55.870]  </debugvars>
[20:48:55.870]  
[20:48:55.870]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:48:55.871]    <block atomic="false" info="">
[20:48:55.871]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:48:55.871]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.871]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:48:55.872]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.872]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:48:55.873]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.873]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:48:55.873]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.873]    </block>
[20:48:55.874]  </sequence>
[20:48:55.874]  
[20:48:55.890]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:48:55.890]  
[20:48:55.890]  <debugvars>
[20:48:55.891]    // Pre-defined
[20:48:55.891]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:55.891]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:55.891]    __dp=0x00000000
[20:48:55.891]    __ap=0x00000000
[20:48:55.892]    __traceout=0x00000001      (SWO Trace)
[20:48:55.892]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:55.892]    __FlashAddr=0x00000000
[20:48:55.892]    __FlashLen=0x00000000
[20:48:55.892]    __FlashArg=0x00000000
[20:48:55.892]    __FlashOp=0x00000000
[20:48:55.893]    __Result=0x00000000
[20:48:55.893]    
[20:48:55.893]    // User-defined
[20:48:55.893]    DbgMCU_CR=0x00000007
[20:48:55.893]    DbgMCU_APB1_Fz=0x00000000
[20:48:55.893]    DbgMCU_APB2_Fz=0x00000000
[20:48:55.893]    TraceClk_Pin=0x00040002
[20:48:55.894]    TraceD0_Pin=0x00040003
[20:48:55.894]    TraceD1_Pin=0x00040004
[20:48:55.894]    TraceD2_Pin=0x00040005
[20:48:55.894]    TraceD3_Pin=0x00040006
[20:48:55.894]  </debugvars>
[20:48:55.895]  
[20:48:55.895]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:48:55.895]    <block atomic="false" info="">
[20:48:55.895]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:48:55.895]        // -> [traceSWO <= 0x00000001]
[20:48:55.895]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:48:55.895]        // -> [traceTPIU <= 0x00000000]
[20:48:55.896]    </block>
[20:48:55.896]    <control if="traceSWO" while="" timeout="0" info="">
[20:48:55.896]      // if-block "traceSWO"
[20:48:55.896]        // =>  TRUE
[20:48:55.896]      <block atomic="false" info="">
[20:48:55.896]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:48:55.896]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:48:55.897]            <block atomic="false" info="">
[20:48:55.897]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:48:55.897]                // -> [dbgmcu_val <= 0x00000000]
[20:48:55.897]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:48:55.897]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:48:55.897]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:48:55.898]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.898]                // -> [dbgmcu_val <= 0x00000007]
[20:48:55.898]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:48:55.898]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:48:55.898]              Sequence("ConfigureTraceSWOPin");
[20:48:55.898]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:48:55.899]                  <block atomic="false" info="">
[20:48:55.899]                    __var pin     = 0;
[20:48:55.899]                      // -> [pin <= 0x00000000]
[20:48:55.899]                    __var port    = 0;
[20:48:55.899]                      // -> [port <= 0x00000000]
[20:48:55.899]                    __var portAdr = 0;
[20:48:55.899]                      // -> [portAdr <= 0x00000000]
[20:48:55.899]                    __var pos     = 0;
[20:48:55.899]                      // -> [pos <= 0x00000000]
[20:48:55.900]                    __var SWO_Pin = 0x00010003;          // PB3
[20:48:55.900]                      // -> [SWO_Pin <= 0x00010003]
[20:48:55.900]                  </block>
[20:48:55.900]                  <block atomic="false" info="configure SWO">
[20:48:55.900]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:48:55.900]                      // -> [pin <= 0x00000003]
[20:48:55.900]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:48:55.900]                      // -> [port <= 0x00000001]
[20:48:55.901]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:48:55.901]                      // -> [portAdr <= 0x40020400]
[20:48:55.901]                    pos = pin * 2;
[20:48:55.901]                      // -> [pos <= 0x00000006]
[20:48:55.901]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:48:55.901]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.902]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.902]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:48:55.903]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.903]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.903]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:48:55.904]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.904]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.904]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:48:55.905]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.905]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.905]                  </block>
[20:48:55.905]                  <control if="pin <  8" while="" timeout="0" info="">
[20:48:55.905]                    // if-block "pin <  8"
[20:48:55.905]                      // =>  TRUE
[20:48:55.906]                    <block atomic="false" info="">
[20:48:55.906]                      pos = ((pin    ) & 7) * 4;
[20:48:55.906]                        // -> [pos <= 0x0000000C]
[20:48:55.906]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:48:55.906]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.907]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.907]                    </block>
[20:48:55.907]                    // end if-block "pin <  8"
[20:48:55.907]                  </control>
[20:48:55.907]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:48:55.907]                    // if-block "pin >= 8"
[20:48:55.907]                      // =>  FALSE
[20:48:55.907]                    // skip if-block "pin >= 8"
[20:48:55.908]                  </control>
[20:48:55.908]                </sequence>
[20:48:55.908]            </block>
[20:48:55.908]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:48:55.908]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:48:55.909]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.909]            </block>
[20:48:55.909]          </sequence>
[20:48:55.909]      </block>
[20:48:55.909]      // end if-block "traceSWO"
[20:48:55.909]    </control>
[20:48:55.909]    <control if="traceTPIU" while="" timeout="0" info="">
[20:48:55.910]      // if-block "traceTPIU"
[20:48:55.910]        // =>  FALSE
[20:48:55.910]      // skip if-block "traceTPIU"
[20:48:55.910]    </control>
[20:48:55.910]  </sequence>
[20:48:55.910]  
[20:48:55.914]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:48:55.914]  
[20:48:55.914]  <debugvars>
[20:48:55.914]    // Pre-defined
[20:48:55.914]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:55.915]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:55.915]    __dp=0x00000000
[20:48:55.915]    __ap=0x00000000
[20:48:55.915]    __traceout=0x00000001      (SWO Trace)
[20:48:55.915]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:55.916]    __FlashAddr=0x00000000
[20:48:55.916]    __FlashLen=0x00000000
[20:48:55.916]    __FlashArg=0x00000000
[20:48:55.916]    __FlashOp=0x00000000
[20:48:55.916]    __Result=0x00000000
[20:48:55.916]    
[20:48:55.916]    // User-defined
[20:48:55.917]    DbgMCU_CR=0x00000007
[20:48:55.917]    DbgMCU_APB1_Fz=0x00000000
[20:48:55.917]    DbgMCU_APB2_Fz=0x00000000
[20:48:55.917]    TraceClk_Pin=0x00040002
[20:48:55.917]    TraceD0_Pin=0x00040003
[20:48:55.918]    TraceD1_Pin=0x00040004
[20:48:55.918]    TraceD2_Pin=0x00040005
[20:48:55.918]    TraceD3_Pin=0x00040006
[20:48:55.918]  </debugvars>
[20:48:55.918]  
[20:48:55.918]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:48:55.919]    <block atomic="false" info="">
[20:48:55.919]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:48:55.919]        // -> [traceSWO <= 0x00000001]
[20:48:55.919]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:48:55.919]        // -> [traceTPIU <= 0x00000000]
[20:48:55.919]    </block>
[20:48:55.920]    <control if="traceSWO" while="" timeout="0" info="">
[20:48:55.920]      // if-block "traceSWO"
[20:48:55.920]        // =>  TRUE
[20:48:55.920]      <block atomic="false" info="">
[20:48:55.920]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:48:55.920]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:48:55.920]            <block atomic="false" info="">
[20:48:55.921]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:48:55.921]                // -> [dbgmcu_val <= 0x00000000]
[20:48:55.921]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:48:55.921]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:48:55.921]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:48:55.922]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.922]                // -> [dbgmcu_val <= 0x00000007]
[20:48:55.922]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:48:55.922]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:48:55.922]              Sequence("ConfigureTraceSWOPin");
[20:48:55.922]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:48:55.923]                  <block atomic="false" info="">
[20:48:55.923]                    __var pin     = 0;
[20:48:55.923]                      // -> [pin <= 0x00000000]
[20:48:55.923]                    __var port    = 0;
[20:48:55.923]                      // -> [port <= 0x00000000]
[20:48:55.923]                    __var portAdr = 0;
[20:48:55.923]                      // -> [portAdr <= 0x00000000]
[20:48:55.924]                    __var pos     = 0;
[20:48:55.924]                      // -> [pos <= 0x00000000]
[20:48:55.924]                    __var SWO_Pin = 0x00010003;          // PB3
[20:48:55.924]                      // -> [SWO_Pin <= 0x00010003]
[20:48:55.924]                  </block>
[20:48:55.924]                  <block atomic="false" info="configure SWO">
[20:48:55.924]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:48:55.924]                      // -> [pin <= 0x00000003]
[20:48:55.925]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:48:55.925]                      // -> [port <= 0x00000001]
[20:48:55.925]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:48:55.925]                      // -> [portAdr <= 0x40020400]
[20:48:55.925]                    pos = pin * 2;
[20:48:55.925]                      // -> [pos <= 0x00000006]
[20:48:55.925]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:48:55.926]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.926]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.926]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:48:55.927]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.927]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.927]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:48:55.928]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.928]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.928]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:48:55.929]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.929]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.929]                  </block>
[20:48:55.930]                  <control if="pin <  8" while="" timeout="0" info="">
[20:48:55.930]                    // if-block "pin <  8"
[20:48:55.930]                      // =>  TRUE
[20:48:55.930]                    <block atomic="false" info="">
[20:48:55.930]                      pos = ((pin    ) & 7) * 4;
[20:48:55.930]                        // -> [pos <= 0x0000000C]
[20:48:55.930]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:48:55.931]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.931]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.931]                    </block>
[20:48:55.931]                    // end if-block "pin <  8"
[20:48:55.931]                  </control>
[20:48:55.932]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:48:55.932]                    // if-block "pin >= 8"
[20:48:55.932]                      // =>  FALSE
[20:48:55.932]                    // skip if-block "pin >= 8"
[20:48:55.932]                  </control>
[20:48:55.932]                </sequence>
[20:48:55.932]            </block>
[20:48:55.932]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:48:55.932]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:48:55.933]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:55.933]            </block>
[20:48:55.933]          </sequence>
[20:48:55.933]      </block>
[20:48:55.933]      // end if-block "traceSWO"
[20:48:55.933]    </control>
[20:48:55.934]    <control if="traceTPIU" while="" timeout="0" info="">
[20:48:55.934]      // if-block "traceTPIU"
[20:48:55.934]        // =>  FALSE
[20:48:55.934]      // skip if-block "traceTPIU"
[20:48:55.934]    </control>
[20:48:55.934]  </sequence>
[20:48:55.934]  
[20:48:56.156]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:48:56.156]  
[20:48:56.156]  <debugvars>
[20:48:56.156]    // Pre-defined
[20:48:56.156]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:48:56.157]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:48:56.157]    __dp=0x00000000
[20:48:56.157]    __ap=0x00000000
[20:48:56.157]    __traceout=0x00000001      (SWO Trace)
[20:48:56.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:48:56.158]    __FlashAddr=0x00000000
[20:48:56.158]    __FlashLen=0x00000000
[20:48:56.158]    __FlashArg=0x00000000
[20:48:56.158]    __FlashOp=0x00000000
[20:48:56.159]    __Result=0x00000000
[20:48:56.159]    
[20:48:56.159]    // User-defined
[20:48:56.159]    DbgMCU_CR=0x00000007
[20:48:56.159]    DbgMCU_APB1_Fz=0x00000000
[20:48:56.160]    DbgMCU_APB2_Fz=0x00000000
[20:48:56.160]    TraceClk_Pin=0x00040002
[20:48:56.160]    TraceD0_Pin=0x00040003
[20:48:56.160]    TraceD1_Pin=0x00040004
[20:48:56.160]    TraceD2_Pin=0x00040005
[20:48:56.160]    TraceD3_Pin=0x00040006
[20:48:56.160]  </debugvars>
[20:48:56.160]  
[20:48:56.161]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:48:56.161]    <block atomic="false" info="">
[20:48:56.161]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:48:56.161]        // -> [traceSWO <= 0x00000001]
[20:48:56.162]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:48:56.162]        // -> [traceTPIU <= 0x00000000]
[20:48:56.162]    </block>
[20:48:56.162]    <control if="traceSWO" while="" timeout="0" info="">
[20:48:56.162]      // if-block "traceSWO"
[20:48:56.163]        // =>  TRUE
[20:48:56.163]      <block atomic="false" info="">
[20:48:56.163]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:48:56.163]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:48:56.163]            <block atomic="false" info="">
[20:48:56.164]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:48:56.164]                // -> [dbgmcu_val <= 0x00000000]
[20:48:56.164]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:48:56.164]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:48:56.164]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:48:56.165]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.165]                // -> [dbgmcu_val <= 0x00000007]
[20:48:56.165]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:48:56.165]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:48:56.165]              Sequence("ConfigureTraceSWOPin");
[20:48:56.165]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:48:56.165]                  <block atomic="false" info="">
[20:48:56.166]                    __var pin     = 0;
[20:48:56.166]                      // -> [pin <= 0x00000000]
[20:48:56.166]                    __var port    = 0;
[20:48:56.166]                      // -> [port <= 0x00000000]
[20:48:56.166]                    __var portAdr = 0;
[20:48:56.166]                      // -> [portAdr <= 0x00000000]
[20:48:56.166]                    __var pos     = 0;
[20:48:56.166]                      // -> [pos <= 0x00000000]
[20:48:56.167]                    __var SWO_Pin = 0x00010003;          // PB3
[20:48:56.167]                      // -> [SWO_Pin <= 0x00010003]
[20:48:56.167]                  </block>
[20:48:56.167]                  <block atomic="false" info="configure SWO">
[20:48:56.167]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:48:56.167]                      // -> [pin <= 0x00000003]
[20:48:56.167]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:48:56.167]                      // -> [port <= 0x00000001]
[20:48:56.167]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:48:56.168]                      // -> [portAdr <= 0x40020400]
[20:48:56.168]                    pos = pin * 2;
[20:48:56.168]                      // -> [pos <= 0x00000006]
[20:48:56.168]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:48:56.168]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.169]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.169]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:48:56.170]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.170]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.170]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:48:56.171]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.171]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.171]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:48:56.172]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.172]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.172]                  </block>
[20:48:56.172]                  <control if="pin <  8" while="" timeout="0" info="">
[20:48:56.173]                    // if-block "pin <  8"
[20:48:56.173]                      // =>  TRUE
[20:48:56.173]                    <block atomic="false" info="">
[20:48:56.173]                      pos = ((pin    ) & 7) * 4;
[20:48:56.173]                        // -> [pos <= 0x0000000C]
[20:48:56.173]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:48:56.174]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.174]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.174]                    </block>
[20:48:56.174]                    // end if-block "pin <  8"
[20:48:56.175]                  </control>
[20:48:56.175]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:48:56.175]                    // if-block "pin >= 8"
[20:48:56.175]                      // =>  FALSE
[20:48:56.175]                    // skip if-block "pin >= 8"
[20:48:56.175]                  </control>
[20:48:56.175]                </sequence>
[20:48:56.175]            </block>
[20:48:56.176]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:48:56.176]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:48:56.176]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:48:56.176]            </block>
[20:48:56.177]          </sequence>
[20:48:56.177]      </block>
[20:48:56.177]      // end if-block "traceSWO"
[20:48:56.177]    </control>
[20:48:56.177]    <control if="traceTPIU" while="" timeout="0" info="">
[20:48:56.178]      // if-block "traceTPIU"
[20:48:56.178]        // =>  FALSE
[20:48:56.178]      // skip if-block "traceTPIU"
[20:48:56.178]    </control>
[20:48:56.178]  </sequence>
[20:48:56.179]  
[20:49:23.648]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:49:23.648]  
[20:49:23.649]  <debugvars>
[20:49:23.649]    // Pre-defined
[20:49:23.649]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:49:23.649]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:49:23.650]    __dp=0x00000000
[20:49:23.650]    __ap=0x00000000
[20:49:23.650]    __traceout=0x00000001      (SWO Trace)
[20:49:23.650]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:49:23.650]    __FlashAddr=0x00000000
[20:49:23.651]    __FlashLen=0x00000000
[20:49:23.651]    __FlashArg=0x00000000
[20:49:23.651]    __FlashOp=0x00000000
[20:49:23.651]    __Result=0x00000000
[20:49:23.651]    
[20:49:23.651]    // User-defined
[20:49:23.652]    DbgMCU_CR=0x00000007
[20:49:23.652]    DbgMCU_APB1_Fz=0x00000000
[20:49:23.652]    DbgMCU_APB2_Fz=0x00000000
[20:49:23.652]    TraceClk_Pin=0x00040002
[20:49:23.652]    TraceD0_Pin=0x00040003
[20:49:23.653]    TraceD1_Pin=0x00040004
[20:49:23.653]    TraceD2_Pin=0x00040005
[20:49:23.653]    TraceD3_Pin=0x00040006
[20:49:23.653]  </debugvars>
[20:49:23.653]  
[20:49:23.653]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:49:23.654]    <block atomic="false" info="">
[20:49:23.654]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:49:23.654]        // -> [traceSWO <= 0x00000001]
[20:49:23.654]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:49:23.654]        // -> [traceTPIU <= 0x00000000]
[20:49:23.654]    </block>
[20:49:23.654]    <control if="traceSWO" while="" timeout="0" info="">
[20:49:23.654]      // if-block "traceSWO"
[20:49:23.655]        // =>  TRUE
[20:49:23.655]      <block atomic="false" info="">
[20:49:23.655]        Sequence("DisableTraceSWO");
[20:49:23.655]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:49:23.655]            <block atomic="false" info="">
[20:49:23.655]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:49:23.655]                // -> [dbgmcu_val <= 0x00000000]
[20:49:23.655]            </block>
[20:49:23.656]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:49:23.656]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:49:23.656]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:49:23.656]                // -> [dbgmcu_val <= 0x00000007]
[20:49:23.656]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:49:23.657]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:23.657]            </block>
[20:49:23.657]          </sequence>
[20:49:23.657]      </block>
[20:49:23.657]      // end if-block "traceSWO"
[20:49:23.657]    </control>
[20:49:23.657]    <control if="traceTPIU" while="" timeout="0" info="">
[20:49:23.658]      // if-block "traceTPIU"
[20:49:23.658]        // =>  FALSE
[20:49:23.658]      // skip if-block "traceTPIU"
[20:49:23.658]    </control>
[20:49:23.658]  </sequence>
[20:49:23.658]  
[20:49:46.969]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:49:46.969]  
[20:49:46.970]  <debugvars>
[20:49:46.970]    // Pre-defined
[20:49:46.970]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:49:46.970]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:49:46.970]    __dp=0x00000000
[20:49:46.971]    __ap=0x00000000
[20:49:46.971]    __traceout=0x00000001      (SWO Trace)
[20:49:46.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:49:46.971]    __FlashAddr=0x00000000
[20:49:46.971]    __FlashLen=0x00000000
[20:49:46.971]    __FlashArg=0x00000000
[20:49:46.972]    __FlashOp=0x00000000
[20:49:46.972]    __Result=0x00000000
[20:49:46.972]    
[20:49:46.972]    // User-defined
[20:49:46.972]    DbgMCU_CR=0x00000007
[20:49:46.972]    DbgMCU_APB1_Fz=0x00000000
[20:49:46.972]    DbgMCU_APB2_Fz=0x00000000
[20:49:46.973]    TraceClk_Pin=0x00040002
[20:49:46.973]    TraceD0_Pin=0x00040003
[20:49:46.973]    TraceD1_Pin=0x00040004
[20:49:46.973]    TraceD2_Pin=0x00040005
[20:49:46.973]    TraceD3_Pin=0x00040006
[20:49:46.973]  </debugvars>
[20:49:46.974]  
[20:49:46.974]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:49:46.974]    <block atomic="false" info="">
[20:49:46.974]      Sequence("CheckID");
[20:49:46.974]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:49:46.974]          <block atomic="false" info="">
[20:49:46.975]            __var pidr1 = 0;
[20:49:46.975]              // -> [pidr1 <= 0x00000000]
[20:49:46.975]            __var pidr2 = 0;
[20:49:46.975]              // -> [pidr2 <= 0x00000000]
[20:49:46.975]            __var jep106id = 0;
[20:49:46.975]              // -> [jep106id <= 0x00000000]
[20:49:46.976]            __var ROMTableBase = 0;
[20:49:46.976]              // -> [ROMTableBase <= 0x00000000]
[20:49:46.976]            __ap = 0;      // AHB-AP
[20:49:46.976]              // -> [__ap <= 0x00000000]
[20:49:46.976]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:49:46.976]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:49:46.977]              // -> [ROMTableBase <= 0xE00FD000]
[20:49:46.977]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:49:46.977]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:49:46.978]              // -> [pidr1 <= 0x00000004]
[20:49:46.978]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:49:46.978]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:49:46.978]              // -> [pidr2 <= 0x0000001A]
[20:49:46.979]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:49:46.979]              // -> [jep106id <= 0x00000020]
[20:49:46.979]          </block>
[20:49:46.979]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:49:46.979]            // if-block "jep106id != 0x20"
[20:49:46.979]              // =>  FALSE
[20:49:46.979]            // skip if-block "jep106id != 0x20"
[20:49:46.979]          </control>
[20:49:46.980]        </sequence>
[20:49:46.980]    </block>
[20:49:46.980]  </sequence>
[20:49:46.980]  
[20:49:46.995]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:49:46.995]  
[20:49:46.995]  <debugvars>
[20:49:46.995]    // Pre-defined
[20:49:46.995]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:49:46.996]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:49:46.996]    __dp=0x00000000
[20:49:46.996]    __ap=0x00000000
[20:49:46.996]    __traceout=0x00000001      (SWO Trace)
[20:49:46.996]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:49:46.996]    __FlashAddr=0x00000000
[20:49:46.997]    __FlashLen=0x00000000
[20:49:46.997]    __FlashArg=0x00000000
[20:49:46.997]    __FlashOp=0x00000000
[20:49:46.997]    __Result=0x00000000
[20:49:46.997]    
[20:49:46.997]    // User-defined
[20:49:46.998]    DbgMCU_CR=0x00000007
[20:49:46.998]    DbgMCU_APB1_Fz=0x00000000
[20:49:46.998]    DbgMCU_APB2_Fz=0x00000000
[20:49:46.998]    TraceClk_Pin=0x00040002
[20:49:46.998]    TraceD0_Pin=0x00040003
[20:49:46.998]    TraceD1_Pin=0x00040004
[20:49:46.999]    TraceD2_Pin=0x00040005
[20:49:46.999]    TraceD3_Pin=0x00040006
[20:49:46.999]  </debugvars>
[20:49:46.999]  
[20:49:46.999]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:49:46.999]    <block atomic="false" info="">
[20:49:47.000]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:49:47.000]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:47.000]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:49:47.001]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:47.001]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:49:47.002]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:47.002]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:49:47.002]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:49:47.003]    </block>
[20:49:47.003]  </sequence>
[20:49:47.003]  
[20:50:18.351]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:50:18.351]  
[20:50:18.352]  <debugvars>
[20:50:18.352]    // Pre-defined
[20:50:18.352]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:50:18.352]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:50:18.352]    __dp=0x00000000
[20:50:18.353]    __ap=0x00000000
[20:50:18.353]    __traceout=0x00000001      (SWO Trace)
[20:50:18.353]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:50:18.353]    __FlashAddr=0x00000000
[20:50:18.353]    __FlashLen=0x00000000
[20:50:18.354]    __FlashArg=0x00000000
[20:50:18.354]    __FlashOp=0x00000000
[20:50:18.354]    __Result=0x00000000
[20:50:18.354]    
[20:50:18.354]    // User-defined
[20:50:18.354]    DbgMCU_CR=0x00000007
[20:50:18.354]    DbgMCU_APB1_Fz=0x00000000
[20:50:18.355]    DbgMCU_APB2_Fz=0x00000000
[20:50:18.355]    TraceClk_Pin=0x00040002
[20:50:18.355]    TraceD0_Pin=0x00040003
[20:50:18.355]    TraceD1_Pin=0x00040004
[20:50:18.355]    TraceD2_Pin=0x00040005
[20:50:18.356]    TraceD3_Pin=0x00040006
[20:50:18.356]  </debugvars>
[20:50:18.356]  
[20:50:18.356]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:50:18.356]    <block atomic="false" info="">
[20:50:18.356]      Sequence("CheckID");
[20:50:18.356]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:50:18.357]          <block atomic="false" info="">
[20:50:18.357]            __var pidr1 = 0;
[20:50:18.357]              // -> [pidr1 <= 0x00000000]
[20:50:18.357]            __var pidr2 = 0;
[20:50:18.357]              // -> [pidr2 <= 0x00000000]
[20:50:18.357]            __var jep106id = 0;
[20:50:18.357]              // -> [jep106id <= 0x00000000]
[20:50:18.358]            __var ROMTableBase = 0;
[20:50:18.358]              // -> [ROMTableBase <= 0x00000000]
[20:50:18.358]            __ap = 0;      // AHB-AP
[20:50:18.358]              // -> [__ap <= 0x00000000]
[20:50:18.358]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:50:18.358]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.359]              // -> [ROMTableBase <= 0xE00FD000]
[20:50:18.359]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:50:18.359]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.359]              // -> [pidr1 <= 0x00000004]
[20:50:18.360]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:50:18.360]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.360]              // -> [pidr2 <= 0x0000001A]
[20:50:18.360]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:50:18.361]              // -> [jep106id <= 0x00000020]
[20:50:18.361]          </block>
[20:50:18.361]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:50:18.361]            // if-block "jep106id != 0x20"
[20:50:18.361]              // =>  FALSE
[20:50:18.361]            // skip if-block "jep106id != 0x20"
[20:50:18.361]          </control>
[20:50:18.361]        </sequence>
[20:50:18.362]    </block>
[20:50:18.362]  </sequence>
[20:50:18.362]  
[20:50:18.377]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:50:18.377]  
[20:50:18.377]  <debugvars>
[20:50:18.377]    // Pre-defined
[20:50:18.377]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:50:18.378]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:50:18.378]    __dp=0x00000000
[20:50:18.378]    __ap=0x00000000
[20:50:18.378]    __traceout=0x00000001      (SWO Trace)
[20:50:18.378]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:50:18.378]    __FlashAddr=0x00000000
[20:50:18.378]    __FlashLen=0x00000000
[20:50:18.378]    __FlashArg=0x00000000
[20:50:18.379]    __FlashOp=0x00000000
[20:50:18.379]    __Result=0x00000000
[20:50:18.379]    
[20:50:18.379]    // User-defined
[20:50:18.379]    DbgMCU_CR=0x00000007
[20:50:18.379]    DbgMCU_APB1_Fz=0x00000000
[20:50:18.379]    DbgMCU_APB2_Fz=0x00000000
[20:50:18.379]    TraceClk_Pin=0x00040002
[20:50:18.380]    TraceD0_Pin=0x00040003
[20:50:18.380]    TraceD1_Pin=0x00040004
[20:50:18.380]    TraceD2_Pin=0x00040005
[20:50:18.380]    TraceD3_Pin=0x00040006
[20:50:18.380]  </debugvars>
[20:50:18.380]  
[20:50:18.381]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:50:18.381]    <block atomic="false" info="">
[20:50:18.381]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:50:18.381]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.382]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:50:18.382]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.382]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:50:18.383]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.383]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:50:18.383]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.384]    </block>
[20:50:18.384]  </sequence>
[20:50:18.384]  
[20:50:18.401]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:50:18.401]  
[20:50:18.401]  <debugvars>
[20:50:18.401]    // Pre-defined
[20:50:18.401]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:50:18.401]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:50:18.401]    __dp=0x00000000
[20:50:18.402]    __ap=0x00000000
[20:50:18.402]    __traceout=0x00000001      (SWO Trace)
[20:50:18.402]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:50:18.402]    __FlashAddr=0x00000000
[20:50:18.402]    __FlashLen=0x00000000
[20:50:18.402]    __FlashArg=0x00000000
[20:50:18.402]    __FlashOp=0x00000000
[20:50:18.402]    __Result=0x00000000
[20:50:18.403]    
[20:50:18.403]    // User-defined
[20:50:18.403]    DbgMCU_CR=0x00000007
[20:50:18.403]    DbgMCU_APB1_Fz=0x00000000
[20:50:18.403]    DbgMCU_APB2_Fz=0x00000000
[20:50:18.403]    TraceClk_Pin=0x00040002
[20:50:18.403]    TraceD0_Pin=0x00040003
[20:50:18.403]    TraceD1_Pin=0x00040004
[20:50:18.403]    TraceD2_Pin=0x00040005
[20:50:18.404]    TraceD3_Pin=0x00040006
[20:50:18.404]  </debugvars>
[20:50:18.404]  
[20:50:18.404]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:50:18.404]    <block atomic="false" info="">
[20:50:18.404]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:50:18.404]        // -> [traceSWO <= 0x00000001]
[20:50:18.404]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:50:18.405]        // -> [traceTPIU <= 0x00000000]
[20:50:18.405]    </block>
[20:50:18.405]    <control if="traceSWO" while="" timeout="0" info="">
[20:50:18.405]      // if-block "traceSWO"
[20:50:18.405]        // =>  TRUE
[20:50:18.405]      <block atomic="false" info="">
[20:50:18.405]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:50:18.406]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:50:18.406]            <block atomic="false" info="">
[20:50:18.406]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:50:18.406]                // -> [dbgmcu_val <= 0x00000000]
[20:50:18.406]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:50:18.406]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:50:18.406]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:50:18.407]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.407]                // -> [dbgmcu_val <= 0x00000007]
[20:50:18.407]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:50:18.407]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:50:18.407]              Sequence("ConfigureTraceSWOPin");
[20:50:18.407]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:50:18.407]                  <block atomic="false" info="">
[20:50:18.408]                    __var pin     = 0;
[20:50:18.408]                      // -> [pin <= 0x00000000]
[20:50:18.408]                    __var port    = 0;
[20:50:18.408]                      // -> [port <= 0x00000000]
[20:50:18.408]                    __var portAdr = 0;
[20:50:18.408]                      // -> [portAdr <= 0x00000000]
[20:50:18.408]                    __var pos     = 0;
[20:50:18.408]                      // -> [pos <= 0x00000000]
[20:50:18.409]                    __var SWO_Pin = 0x00010003;          // PB3
[20:50:18.409]                      // -> [SWO_Pin <= 0x00010003]
[20:50:18.409]                  </block>
[20:50:18.409]                  <block atomic="false" info="configure SWO">
[20:50:18.409]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:50:18.409]                      // -> [pin <= 0x00000003]
[20:50:18.409]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:50:18.410]                      // -> [port <= 0x00000001]
[20:50:18.410]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:50:18.410]                      // -> [portAdr <= 0x40020400]
[20:50:18.410]                    pos = pin * 2;
[20:50:18.410]                      // -> [pos <= 0x00000006]
[20:50:18.410]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:50:18.411]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.411]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.411]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:50:18.412]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.412]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.412]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:50:18.413]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.414]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.414]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:50:18.414]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.415]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.415]                  </block>
[20:50:18.415]                  <control if="pin <  8" while="" timeout="0" info="">
[20:50:18.415]                    // if-block "pin <  8"
[20:50:18.416]                      // =>  TRUE
[20:50:18.416]                    <block atomic="false" info="">
[20:50:18.416]                      pos = ((pin    ) & 7) * 4;
[20:50:18.416]                        // -> [pos <= 0x0000000C]
[20:50:18.416]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:50:18.417]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.417]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.417]                    </block>
[20:50:18.417]                    // end if-block "pin <  8"
[20:50:18.418]                  </control>
[20:50:18.418]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:50:18.418]                    // if-block "pin >= 8"
[20:50:18.418]                      // =>  FALSE
[20:50:18.418]                    // skip if-block "pin >= 8"
[20:50:18.418]                  </control>
[20:50:18.418]                </sequence>
[20:50:18.419]            </block>
[20:50:18.419]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:50:18.419]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:50:18.419]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.419]            </block>
[20:50:18.419]          </sequence>
[20:50:18.419]      </block>
[20:50:18.420]      // end if-block "traceSWO"
[20:50:18.420]    </control>
[20:50:18.420]    <control if="traceTPIU" while="" timeout="0" info="">
[20:50:18.420]      // if-block "traceTPIU"
[20:50:18.420]        // =>  FALSE
[20:50:18.420]      // skip if-block "traceTPIU"
[20:50:18.420]    </control>
[20:50:18.420]  </sequence>
[20:50:18.421]  
[20:50:18.424]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:50:18.424]  
[20:50:18.424]  <debugvars>
[20:50:18.425]    // Pre-defined
[20:50:18.425]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:50:18.425]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:50:18.425]    __dp=0x00000000
[20:50:18.425]    __ap=0x00000000
[20:50:18.425]    __traceout=0x00000001      (SWO Trace)
[20:50:18.425]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:50:18.425]    __FlashAddr=0x00000000
[20:50:18.425]    __FlashLen=0x00000000
[20:50:18.426]    __FlashArg=0x00000000
[20:50:18.426]    __FlashOp=0x00000000
[20:50:18.426]    __Result=0x00000000
[20:50:18.426]    
[20:50:18.426]    // User-defined
[20:50:18.426]    DbgMCU_CR=0x00000007
[20:50:18.426]    DbgMCU_APB1_Fz=0x00000000
[20:50:18.426]    DbgMCU_APB2_Fz=0x00000000
[20:50:18.426]    TraceClk_Pin=0x00040002
[20:50:18.426]    TraceD0_Pin=0x00040003
[20:50:18.427]    TraceD1_Pin=0x00040004
[20:50:18.427]    TraceD2_Pin=0x00040005
[20:50:18.427]    TraceD3_Pin=0x00040006
[20:50:18.427]  </debugvars>
[20:50:18.427]  
[20:50:18.427]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:50:18.427]    <block atomic="false" info="">
[20:50:18.427]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:50:18.427]        // -> [traceSWO <= 0x00000001]
[20:50:18.428]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:50:18.428]        // -> [traceTPIU <= 0x00000000]
[20:50:18.428]    </block>
[20:50:18.428]    <control if="traceSWO" while="" timeout="0" info="">
[20:50:18.428]      // if-block "traceSWO"
[20:50:18.428]        // =>  TRUE
[20:50:18.428]      <block atomic="false" info="">
[20:50:18.428]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:50:18.428]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:50:18.429]            <block atomic="false" info="">
[20:50:18.429]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:50:18.429]                // -> [dbgmcu_val <= 0x00000000]
[20:50:18.429]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:50:18.429]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:50:18.429]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:50:18.430]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.430]                // -> [dbgmcu_val <= 0x00000007]
[20:50:18.430]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:50:18.431]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:50:18.431]              Sequence("ConfigureTraceSWOPin");
[20:50:18.431]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:50:18.431]                  <block atomic="false" info="">
[20:50:18.431]                    __var pin     = 0;
[20:50:18.431]                      // -> [pin <= 0x00000000]
[20:50:18.432]                    __var port    = 0;
[20:50:18.432]                      // -> [port <= 0x00000000]
[20:50:18.432]                    __var portAdr = 0;
[20:50:18.432]                      // -> [portAdr <= 0x00000000]
[20:50:18.432]                    __var pos     = 0;
[20:50:18.433]                      // -> [pos <= 0x00000000]
[20:50:18.433]                    __var SWO_Pin = 0x00010003;          // PB3
[20:50:18.433]                      // -> [SWO_Pin <= 0x00010003]
[20:50:18.433]                  </block>
[20:50:18.433]                  <block atomic="false" info="configure SWO">
[20:50:18.433]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:50:18.434]                      // -> [pin <= 0x00000003]
[20:50:18.434]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:50:18.434]                      // -> [port <= 0x00000001]
[20:50:18.434]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:50:18.434]                      // -> [portAdr <= 0x40020400]
[20:50:18.435]                    pos = pin * 2;
[20:50:18.435]                      // -> [pos <= 0x00000006]
[20:50:18.435]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:50:18.435]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.436]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.436]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:50:18.437]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.437]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.437]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:50:18.438]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.438]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.438]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:50:18.439]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.439]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.440]                  </block>
[20:50:18.440]                  <control if="pin <  8" while="" timeout="0" info="">
[20:50:18.440]                    // if-block "pin <  8"
[20:50:18.440]                      // =>  TRUE
[20:50:18.440]                    <block atomic="false" info="">
[20:50:18.440]                      pos = ((pin    ) & 7) * 4;
[20:50:18.441]                        // -> [pos <= 0x0000000C]
[20:50:18.441]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:50:18.441]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.442]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.442]                    </block>
[20:50:18.442]                    // end if-block "pin <  8"
[20:50:18.442]                  </control>
[20:50:18.442]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:50:18.442]                    // if-block "pin >= 8"
[20:50:18.443]                      // =>  FALSE
[20:50:18.443]                    // skip if-block "pin >= 8"
[20:50:18.443]                  </control>
[20:50:18.443]                </sequence>
[20:50:18.443]            </block>
[20:50:18.443]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:50:18.443]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:50:18.444]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.444]            </block>
[20:50:18.444]          </sequence>
[20:50:18.444]      </block>
[20:50:18.444]      // end if-block "traceSWO"
[20:50:18.445]    </control>
[20:50:18.445]    <control if="traceTPIU" while="" timeout="0" info="">
[20:50:18.445]      // if-block "traceTPIU"
[20:50:18.445]        // =>  FALSE
[20:50:18.445]      // skip if-block "traceTPIU"
[20:50:18.445]    </control>
[20:50:18.445]  </sequence>
[20:50:18.446]  
[20:50:18.663]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:50:18.663]  
[20:50:18.663]  <debugvars>
[20:50:18.663]    // Pre-defined
[20:50:18.664]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:50:18.664]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:50:18.664]    __dp=0x00000000
[20:50:18.664]    __ap=0x00000000
[20:50:18.664]    __traceout=0x00000001      (SWO Trace)
[20:50:18.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:50:18.665]    __FlashAddr=0x00000000
[20:50:18.665]    __FlashLen=0x00000000
[20:50:18.665]    __FlashArg=0x00000000
[20:50:18.665]    __FlashOp=0x00000000
[20:50:18.665]    __Result=0x00000000
[20:50:18.665]    
[20:50:18.665]    // User-defined
[20:50:18.665]    DbgMCU_CR=0x00000007
[20:50:18.666]    DbgMCU_APB1_Fz=0x00000000
[20:50:18.666]    DbgMCU_APB2_Fz=0x00000000
[20:50:18.666]    TraceClk_Pin=0x00040002
[20:50:18.666]    TraceD0_Pin=0x00040003
[20:50:18.666]    TraceD1_Pin=0x00040004
[20:50:18.666]    TraceD2_Pin=0x00040005
[20:50:18.666]    TraceD3_Pin=0x00040006
[20:50:18.666]  </debugvars>
[20:50:18.667]  
[20:50:18.667]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:50:18.667]    <block atomic="false" info="">
[20:50:18.667]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:50:18.667]        // -> [traceSWO <= 0x00000001]
[20:50:18.667]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:50:18.667]        // -> [traceTPIU <= 0x00000000]
[20:50:18.667]    </block>
[20:50:18.667]    <control if="traceSWO" while="" timeout="0" info="">
[20:50:18.668]      // if-block "traceSWO"
[20:50:18.668]        // =>  TRUE
[20:50:18.668]      <block atomic="false" info="">
[20:50:18.668]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:50:18.668]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:50:18.668]            <block atomic="false" info="">
[20:50:18.668]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:50:18.668]                // -> [dbgmcu_val <= 0x00000000]
[20:50:18.668]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:50:18.669]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:50:18.669]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:50:18.669]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.669]                // -> [dbgmcu_val <= 0x00000007]
[20:50:18.669]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:50:18.670]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:50:18.670]              Sequence("ConfigureTraceSWOPin");
[20:50:18.670]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:50:18.670]                  <block atomic="false" info="">
[20:50:18.670]                    __var pin     = 0;
[20:50:18.670]                      // -> [pin <= 0x00000000]
[20:50:18.670]                    __var port    = 0;
[20:50:18.670]                      // -> [port <= 0x00000000]
[20:50:18.670]                    __var portAdr = 0;
[20:50:18.671]                      // -> [portAdr <= 0x00000000]
[20:50:18.671]                    __var pos     = 0;
[20:50:18.671]                      // -> [pos <= 0x00000000]
[20:50:18.671]                    __var SWO_Pin = 0x00010003;          // PB3
[20:50:18.671]                      // -> [SWO_Pin <= 0x00010003]
[20:50:18.671]                  </block>
[20:50:18.671]                  <block atomic="false" info="configure SWO">
[20:50:18.671]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:50:18.672]                      // -> [pin <= 0x00000003]
[20:50:18.672]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:50:18.672]                      // -> [port <= 0x00000001]
[20:50:18.672]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:50:18.672]                      // -> [portAdr <= 0x40020400]
[20:50:18.672]                    pos = pin * 2;
[20:50:18.672]                      // -> [pos <= 0x00000006]
[20:50:18.672]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:50:18.673]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.673]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.673]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:50:18.674]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.674]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.674]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:50:18.675]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.675]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.675]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:50:18.676]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.676]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.676]                  </block>
[20:50:18.676]                  <control if="pin <  8" while="" timeout="0" info="">
[20:50:18.676]                    // if-block "pin <  8"
[20:50:18.677]                      // =>  TRUE
[20:50:18.677]                    <block atomic="false" info="">
[20:50:18.677]                      pos = ((pin    ) & 7) * 4;
[20:50:18.677]                        // -> [pos <= 0x0000000C]
[20:50:18.677]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:50:18.677]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.678]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.678]                    </block>
[20:50:18.678]                    // end if-block "pin <  8"
[20:50:18.678]                  </control>
[20:50:18.678]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:50:18.679]                    // if-block "pin >= 8"
[20:50:18.679]                      // =>  FALSE
[20:50:18.679]                    // skip if-block "pin >= 8"
[20:50:18.679]                  </control>
[20:50:18.679]                </sequence>
[20:50:18.679]            </block>
[20:50:18.680]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:50:18.680]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:50:18.680]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:50:18.680]            </block>
[20:50:18.681]          </sequence>
[20:50:18.681]      </block>
[20:50:18.681]      // end if-block "traceSWO"
[20:50:18.681]    </control>
[20:50:18.681]    <control if="traceTPIU" while="" timeout="0" info="">
[20:50:18.681]      // if-block "traceTPIU"
[20:50:18.681]        // =>  FALSE
[20:50:18.682]      // skip if-block "traceTPIU"
[20:50:18.682]    </control>
[20:50:18.682]  </sequence>
[20:50:18.682]  
[20:51:44.709]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:51:44.709]  
[20:51:44.709]  <debugvars>
[20:51:44.710]    // Pre-defined
[20:51:44.710]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:51:44.710]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:51:44.711]    __dp=0x00000000
[20:51:44.711]    __ap=0x00000000
[20:51:44.712]    __traceout=0x00000001      (SWO Trace)
[20:51:44.712]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:51:44.712]    __FlashAddr=0x00000000
[20:51:44.712]    __FlashLen=0x00000000
[20:51:44.712]    __FlashArg=0x00000000
[20:51:44.713]    __FlashOp=0x00000000
[20:51:44.713]    __Result=0x00000000
[20:51:44.713]    
[20:51:44.713]    // User-defined
[20:51:44.713]    DbgMCU_CR=0x00000007
[20:51:44.713]    DbgMCU_APB1_Fz=0x00000000
[20:51:44.713]    DbgMCU_APB2_Fz=0x00000000
[20:51:44.714]    TraceClk_Pin=0x00040002
[20:51:44.714]    TraceD0_Pin=0x00040003
[20:51:44.714]    TraceD1_Pin=0x00040004
[20:51:44.714]    TraceD2_Pin=0x00040005
[20:51:44.714]    TraceD3_Pin=0x00040006
[20:51:44.714]  </debugvars>
[20:51:44.715]  
[20:51:44.715]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:51:44.715]    <block atomic="false" info="">
[20:51:44.715]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:51:44.715]        // -> [traceSWO <= 0x00000001]
[20:51:44.716]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:51:44.716]        // -> [traceTPIU <= 0x00000000]
[20:51:44.716]    </block>
[20:51:44.716]    <control if="traceSWO" while="" timeout="0" info="">
[20:51:44.716]      // if-block "traceSWO"
[20:51:44.716]        // =>  TRUE
[20:51:44.716]      <block atomic="false" info="">
[20:51:44.716]        Sequence("DisableTraceSWO");
[20:51:44.717]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:51:44.717]            <block atomic="false" info="">
[20:51:44.717]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:51:44.717]                // -> [dbgmcu_val <= 0x00000000]
[20:51:44.717]            </block>
[20:51:44.717]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:51:44.717]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:51:44.718]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:51:44.718]                // -> [dbgmcu_val <= 0x00000007]
[20:51:44.718]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:51:44.719]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:51:44.719]            </block>
[20:51:44.719]          </sequence>
[20:51:44.719]      </block>
[20:51:44.719]      // end if-block "traceSWO"
[20:51:44.720]    </control>
[20:51:44.720]    <control if="traceTPIU" while="" timeout="0" info="">
[20:51:44.720]      // if-block "traceTPIU"
[20:51:44.720]        // =>  FALSE
[20:51:44.720]      // skip if-block "traceTPIU"
[20:51:44.720]    </control>
[20:51:44.720]  </sequence>
[20:51:44.720]  
[20:53:29.876]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:53:29.876]  
[20:53:29.876]  <debugvars>
[20:53:29.876]    // Pre-defined
[20:53:29.877]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:53:29.877]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:53:29.877]    __dp=0x00000000
[20:53:29.877]    __ap=0x00000000
[20:53:29.877]    __traceout=0x00000001      (SWO Trace)
[20:53:29.878]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:53:29.878]    __FlashAddr=0x00000000
[20:53:29.878]    __FlashLen=0x00000000
[20:53:29.878]    __FlashArg=0x00000000
[20:53:29.878]    __FlashOp=0x00000000
[20:53:29.879]    __Result=0x00000000
[20:53:29.879]    
[20:53:29.879]    // User-defined
[20:53:29.879]    DbgMCU_CR=0x00000007
[20:53:29.879]    DbgMCU_APB1_Fz=0x00000000
[20:53:29.879]    DbgMCU_APB2_Fz=0x00000000
[20:53:29.879]    TraceClk_Pin=0x00040002
[20:53:29.879]    TraceD0_Pin=0x00040003
[20:53:29.880]    TraceD1_Pin=0x00040004
[20:53:29.880]    TraceD2_Pin=0x00040005
[20:53:29.880]    TraceD3_Pin=0x00040006
[20:53:29.880]  </debugvars>
[20:53:29.880]  
[20:53:29.880]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:53:29.881]    <block atomic="false" info="">
[20:53:29.881]      Sequence("CheckID");
[20:53:29.881]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:53:29.881]          <block atomic="false" info="">
[20:53:29.881]            __var pidr1 = 0;
[20:53:29.881]              // -> [pidr1 <= 0x00000000]
[20:53:29.881]            __var pidr2 = 0;
[20:53:29.881]              // -> [pidr2 <= 0x00000000]
[20:53:29.881]            __var jep106id = 0;
[20:53:29.882]              // -> [jep106id <= 0x00000000]
[20:53:29.882]            __var ROMTableBase = 0;
[20:53:29.882]              // -> [ROMTableBase <= 0x00000000]
[20:53:29.882]            __ap = 0;      // AHB-AP
[20:53:29.882]              // -> [__ap <= 0x00000000]
[20:53:29.882]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:53:29.883]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.883]              // -> [ROMTableBase <= 0xE00FD000]
[20:53:29.883]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:53:29.883]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.883]              // -> [pidr1 <= 0x00000004]
[20:53:29.884]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:53:29.884]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.884]              // -> [pidr2 <= 0x0000001A]
[20:53:29.884]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:53:29.884]              // -> [jep106id <= 0x00000020]
[20:53:29.884]          </block>
[20:53:29.885]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:53:29.885]            // if-block "jep106id != 0x20"
[20:53:29.885]              // =>  FALSE
[20:53:29.885]            // skip if-block "jep106id != 0x20"
[20:53:29.885]          </control>
[20:53:29.885]        </sequence>
[20:53:29.885]    </block>
[20:53:29.886]  </sequence>
[20:53:29.886]  
[20:53:29.900]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:53:29.900]  
[20:53:29.900]  <debugvars>
[20:53:29.900]    // Pre-defined
[20:53:29.900]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:53:29.901]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:53:29.901]    __dp=0x00000000
[20:53:29.901]    __ap=0x00000000
[20:53:29.901]    __traceout=0x00000001      (SWO Trace)
[20:53:29.903]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:53:29.903]    __FlashAddr=0x00000000
[20:53:29.903]    __FlashLen=0x00000000
[20:53:29.903]    __FlashArg=0x00000000
[20:53:29.903]    __FlashOp=0x00000000
[20:53:29.904]    __Result=0x00000000
[20:53:29.904]    
[20:53:29.904]    // User-defined
[20:53:29.904]    DbgMCU_CR=0x00000007
[20:53:29.904]    DbgMCU_APB1_Fz=0x00000000
[20:53:29.904]    DbgMCU_APB2_Fz=0x00000000
[20:53:29.905]    TraceClk_Pin=0x00040002
[20:53:29.905]    TraceD0_Pin=0x00040003
[20:53:29.905]    TraceD1_Pin=0x00040004
[20:53:29.905]    TraceD2_Pin=0x00040005
[20:53:29.905]    TraceD3_Pin=0x00040006
[20:53:29.906]  </debugvars>
[20:53:29.906]  
[20:53:29.906]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:53:29.906]    <block atomic="false" info="">
[20:53:29.906]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:53:29.907]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.907]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:53:29.908]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.908]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:53:29.909]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.909]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:53:29.910]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:53:29.910]    </block>
[20:53:29.910]  </sequence>
[20:53:29.910]  
[20:54:01.277]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:54:01.277]  
[20:54:01.277]  <debugvars>
[20:54:01.277]    // Pre-defined
[20:54:01.277]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:54:01.278]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:54:01.278]    __dp=0x00000000
[20:54:01.278]    __ap=0x00000000
[20:54:01.278]    __traceout=0x00000001      (SWO Trace)
[20:54:01.278]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:54:01.278]    __FlashAddr=0x00000000
[20:54:01.279]    __FlashLen=0x00000000
[20:54:01.279]    __FlashArg=0x00000000
[20:54:01.279]    __FlashOp=0x00000000
[20:54:01.279]    __Result=0x00000000
[20:54:01.279]    
[20:54:01.279]    // User-defined
[20:54:01.279]    DbgMCU_CR=0x00000007
[20:54:01.280]    DbgMCU_APB1_Fz=0x00000000
[20:54:01.280]    DbgMCU_APB2_Fz=0x00000000
[20:54:01.280]    TraceClk_Pin=0x00040002
[20:54:01.280]    TraceD0_Pin=0x00040003
[20:54:01.280]    TraceD1_Pin=0x00040004
[20:54:01.280]    TraceD2_Pin=0x00040005
[20:54:01.280]    TraceD3_Pin=0x00040006
[20:54:01.281]  </debugvars>
[20:54:01.281]  
[20:54:01.281]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:54:01.281]    <block atomic="false" info="">
[20:54:01.281]      Sequence("CheckID");
[20:54:01.282]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:54:01.282]          <block atomic="false" info="">
[20:54:01.282]            __var pidr1 = 0;
[20:54:01.282]              // -> [pidr1 <= 0x00000000]
[20:54:01.282]            __var pidr2 = 0;
[20:54:01.282]              // -> [pidr2 <= 0x00000000]
[20:54:01.282]            __var jep106id = 0;
[20:54:01.283]              // -> [jep106id <= 0x00000000]
[20:54:01.283]            __var ROMTableBase = 0;
[20:54:01.283]              // -> [ROMTableBase <= 0x00000000]
[20:54:01.283]            __ap = 0;      // AHB-AP
[20:54:01.283]              // -> [__ap <= 0x00000000]
[20:54:01.283]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:54:01.284]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.284]              // -> [ROMTableBase <= 0xE00FD000]
[20:54:01.284]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:54:01.284]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.285]              // -> [pidr1 <= 0x00000004]
[20:54:01.285]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:54:01.285]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.286]              // -> [pidr2 <= 0x0000001A]
[20:54:01.286]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:54:01.286]              // -> [jep106id <= 0x00000020]
[20:54:01.286]          </block>
[20:54:01.286]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:54:01.286]            // if-block "jep106id != 0x20"
[20:54:01.286]              // =>  FALSE
[20:54:01.287]            // skip if-block "jep106id != 0x20"
[20:54:01.287]          </control>
[20:54:01.287]        </sequence>
[20:54:01.287]    </block>
[20:54:01.287]  </sequence>
[20:54:01.288]  
[20:54:01.302]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:54:01.302]  
[20:54:01.303]  <debugvars>
[20:54:01.303]    // Pre-defined
[20:54:01.303]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:54:01.303]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:54:01.303]    __dp=0x00000000
[20:54:01.303]    __ap=0x00000000
[20:54:01.303]    __traceout=0x00000001      (SWO Trace)
[20:54:01.303]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:54:01.303]    __FlashAddr=0x00000000
[20:54:01.304]    __FlashLen=0x00000000
[20:54:01.304]    __FlashArg=0x00000000
[20:54:01.304]    __FlashOp=0x00000000
[20:54:01.304]    __Result=0x00000000
[20:54:01.304]    
[20:54:01.304]    // User-defined
[20:54:01.304]    DbgMCU_CR=0x00000007
[20:54:01.304]    DbgMCU_APB1_Fz=0x00000000
[20:54:01.305]    DbgMCU_APB2_Fz=0x00000000
[20:54:01.305]    TraceClk_Pin=0x00040002
[20:54:01.305]    TraceD0_Pin=0x00040003
[20:54:01.305]    TraceD1_Pin=0x00040004
[20:54:01.305]    TraceD2_Pin=0x00040005
[20:54:01.305]    TraceD3_Pin=0x00040006
[20:54:01.305]  </debugvars>
[20:54:01.305]  
[20:54:01.306]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:54:01.306]    <block atomic="false" info="">
[20:54:01.306]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:54:01.306]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.307]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:54:01.307]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.307]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:54:01.308]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.308]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:54:01.309]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.309]    </block>
[20:54:01.309]  </sequence>
[20:54:01.309]  
[20:54:01.326]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:54:01.326]  
[20:54:01.326]  <debugvars>
[20:54:01.326]    // Pre-defined
[20:54:01.327]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:54:01.327]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:54:01.327]    __dp=0x00000000
[20:54:01.327]    __ap=0x00000000
[20:54:01.327]    __traceout=0x00000001      (SWO Trace)
[20:54:01.327]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:54:01.327]    __FlashAddr=0x00000000
[20:54:01.327]    __FlashLen=0x00000000
[20:54:01.328]    __FlashArg=0x00000000
[20:54:01.328]    __FlashOp=0x00000000
[20:54:01.328]    __Result=0x00000000
[20:54:01.328]    
[20:54:01.328]    // User-defined
[20:54:01.328]    DbgMCU_CR=0x00000007
[20:54:01.329]    DbgMCU_APB1_Fz=0x00000000
[20:54:01.329]    DbgMCU_APB2_Fz=0x00000000
[20:54:01.329]    TraceClk_Pin=0x00040002
[20:54:01.329]    TraceD0_Pin=0x00040003
[20:54:01.329]    TraceD1_Pin=0x00040004
[20:54:01.329]    TraceD2_Pin=0x00040005
[20:54:01.330]    TraceD3_Pin=0x00040006
[20:54:01.330]  </debugvars>
[20:54:01.330]  
[20:54:01.330]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:54:01.330]    <block atomic="false" info="">
[20:54:01.330]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:54:01.330]        // -> [traceSWO <= 0x00000001]
[20:54:01.330]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:54:01.330]        // -> [traceTPIU <= 0x00000000]
[20:54:01.331]    </block>
[20:54:01.331]    <control if="traceSWO" while="" timeout="0" info="">
[20:54:01.331]      // if-block "traceSWO"
[20:54:01.331]        // =>  TRUE
[20:54:01.331]      <block atomic="false" info="">
[20:54:01.331]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:54:01.331]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:54:01.331]            <block atomic="false" info="">
[20:54:01.332]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:54:01.332]                // -> [dbgmcu_val <= 0x00000000]
[20:54:01.332]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:54:01.332]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:54:01.332]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:54:01.333]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.333]                // -> [dbgmcu_val <= 0x00000007]
[20:54:01.333]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:54:01.333]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:54:01.333]              Sequence("ConfigureTraceSWOPin");
[20:54:01.333]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:54:01.333]                  <block atomic="false" info="">
[20:54:01.334]                    __var pin     = 0;
[20:54:01.334]                      // -> [pin <= 0x00000000]
[20:54:01.334]                    __var port    = 0;
[20:54:01.334]                      // -> [port <= 0x00000000]
[20:54:01.334]                    __var portAdr = 0;
[20:54:01.334]                      // -> [portAdr <= 0x00000000]
[20:54:01.334]                    __var pos     = 0;
[20:54:01.334]                      // -> [pos <= 0x00000000]
[20:54:01.335]                    __var SWO_Pin = 0x00010003;          // PB3
[20:54:01.335]                      // -> [SWO_Pin <= 0x00010003]
[20:54:01.335]                  </block>
[20:54:01.335]                  <block atomic="false" info="configure SWO">
[20:54:01.335]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:54:01.335]                      // -> [pin <= 0x00000003]
[20:54:01.335]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:54:01.336]                      // -> [port <= 0x00000001]
[20:54:01.336]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:54:01.336]                      // -> [portAdr <= 0x40020400]
[20:54:01.336]                    pos = pin * 2;
[20:54:01.336]                      // -> [pos <= 0x00000006]
[20:54:01.336]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:54:01.337]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.337]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.337]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:54:01.338]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.338]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.338]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:54:01.339]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.339]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.339]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:54:01.339]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.340]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.340]                  </block>
[20:54:01.340]                  <control if="pin <  8" while="" timeout="0" info="">
[20:54:01.340]                    // if-block "pin <  8"
[20:54:01.340]                      // =>  TRUE
[20:54:01.341]                    <block atomic="false" info="">
[20:54:01.341]                      pos = ((pin    ) & 7) * 4;
[20:54:01.341]                        // -> [pos <= 0x0000000C]
[20:54:01.341]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:54:01.342]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.342]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.342]                    </block>
[20:54:01.342]                    // end if-block "pin <  8"
[20:54:01.343]                  </control>
[20:54:01.343]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:54:01.343]                    // if-block "pin >= 8"
[20:54:01.343]                      // =>  FALSE
[20:54:01.343]                    // skip if-block "pin >= 8"
[20:54:01.343]                  </control>
[20:54:01.343]                </sequence>
[20:54:01.343]            </block>
[20:54:01.344]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:54:01.344]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:54:01.344]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.344]            </block>
[20:54:01.344]          </sequence>
[20:54:01.345]      </block>
[20:54:01.345]      // end if-block "traceSWO"
[20:54:01.345]    </control>
[20:54:01.345]    <control if="traceTPIU" while="" timeout="0" info="">
[20:54:01.345]      // if-block "traceTPIU"
[20:54:01.345]        // =>  FALSE
[20:54:01.345]      // skip if-block "traceTPIU"
[20:54:01.345]    </control>
[20:54:01.346]  </sequence>
[20:54:01.346]  
[20:54:01.350]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:54:01.350]  
[20:54:01.350]  <debugvars>
[20:54:01.350]    // Pre-defined
[20:54:01.350]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:54:01.350]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:54:01.350]    __dp=0x00000000
[20:54:01.350]    __ap=0x00000000
[20:54:01.350]    __traceout=0x00000001      (SWO Trace)
[20:54:01.350]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:54:01.351]    __FlashAddr=0x00000000
[20:54:01.351]    __FlashLen=0x00000000
[20:54:01.351]    __FlashArg=0x00000000
[20:54:01.351]    __FlashOp=0x00000000
[20:54:01.351]    __Result=0x00000000
[20:54:01.351]    
[20:54:01.351]    // User-defined
[20:54:01.351]    DbgMCU_CR=0x00000007
[20:54:01.352]    DbgMCU_APB1_Fz=0x00000000
[20:54:01.352]    DbgMCU_APB2_Fz=0x00000000
[20:54:01.352]    TraceClk_Pin=0x00040002
[20:54:01.352]    TraceD0_Pin=0x00040003
[20:54:01.352]    TraceD1_Pin=0x00040004
[20:54:01.352]    TraceD2_Pin=0x00040005
[20:54:01.352]    TraceD3_Pin=0x00040006
[20:54:01.352]  </debugvars>
[20:54:01.352]  
[20:54:01.353]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:54:01.353]    <block atomic="false" info="">
[20:54:01.353]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:54:01.353]        // -> [traceSWO <= 0x00000001]
[20:54:01.353]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:54:01.353]        // -> [traceTPIU <= 0x00000000]
[20:54:01.353]    </block>
[20:54:01.354]    <control if="traceSWO" while="" timeout="0" info="">
[20:54:01.354]      // if-block "traceSWO"
[20:54:01.354]        // =>  TRUE
[20:54:01.354]      <block atomic="false" info="">
[20:54:01.354]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:54:01.354]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:54:01.354]            <block atomic="false" info="">
[20:54:01.354]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:54:01.354]                // -> [dbgmcu_val <= 0x00000000]
[20:54:01.355]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:54:01.355]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:54:01.355]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:54:01.355]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.355]                // -> [dbgmcu_val <= 0x00000007]
[20:54:01.356]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:54:01.356]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:54:01.356]              Sequence("ConfigureTraceSWOPin");
[20:54:01.356]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:54:01.356]                  <block atomic="false" info="">
[20:54:01.356]                    __var pin     = 0;
[20:54:01.356]                      // -> [pin <= 0x00000000]
[20:54:01.356]                    __var port    = 0;
[20:54:01.356]                      // -> [port <= 0x00000000]
[20:54:01.357]                    __var portAdr = 0;
[20:54:01.357]                      // -> [portAdr <= 0x00000000]
[20:54:01.357]                    __var pos     = 0;
[20:54:01.357]                      // -> [pos <= 0x00000000]
[20:54:01.357]                    __var SWO_Pin = 0x00010003;          // PB3
[20:54:01.357]                      // -> [SWO_Pin <= 0x00010003]
[20:54:01.357]                  </block>
[20:54:01.358]                  <block atomic="false" info="configure SWO">
[20:54:01.358]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:54:01.358]                      // -> [pin <= 0x00000003]
[20:54:01.358]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:54:01.358]                      // -> [port <= 0x00000001]
[20:54:01.358]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:54:01.358]                      // -> [portAdr <= 0x40020400]
[20:54:01.359]                    pos = pin * 2;
[20:54:01.359]                      // -> [pos <= 0x00000006]
[20:54:01.359]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:54:01.359]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.360]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.360]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:54:01.360]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.361]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.361]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:54:01.361]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.362]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.362]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:54:01.362]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.363]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.363]                  </block>
[20:54:01.363]                  <control if="pin <  8" while="" timeout="0" info="">
[20:54:01.363]                    // if-block "pin <  8"
[20:54:01.363]                      // =>  TRUE
[20:54:01.363]                    <block atomic="false" info="">
[20:54:01.364]                      pos = ((pin    ) & 7) * 4;
[20:54:01.364]                        // -> [pos <= 0x0000000C]
[20:54:01.364]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:54:01.364]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.365]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.365]                    </block>
[20:54:01.365]                    // end if-block "pin <  8"
[20:54:01.365]                  </control>
[20:54:01.365]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:54:01.365]                    // if-block "pin >= 8"
[20:54:01.365]                      // =>  FALSE
[20:54:01.365]                    // skip if-block "pin >= 8"
[20:54:01.366]                  </control>
[20:54:01.366]                </sequence>
[20:54:01.366]            </block>
[20:54:01.366]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:54:01.366]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:54:01.367]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.367]            </block>
[20:54:01.367]          </sequence>
[20:54:01.367]      </block>
[20:54:01.367]      // end if-block "traceSWO"
[20:54:01.367]    </control>
[20:54:01.367]    <control if="traceTPIU" while="" timeout="0" info="">
[20:54:01.367]      // if-block "traceTPIU"
[20:54:01.367]        // =>  FALSE
[20:54:01.367]      // skip if-block "traceTPIU"
[20:54:01.367]    </control>
[20:54:01.367]  </sequence>
[20:54:01.368]  
[20:54:01.589]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:54:01.589]  
[20:54:01.589]  <debugvars>
[20:54:01.590]    // Pre-defined
[20:54:01.590]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:54:01.590]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:54:01.590]    __dp=0x00000000
[20:54:01.590]    __ap=0x00000000
[20:54:01.591]    __traceout=0x00000001      (SWO Trace)
[20:54:01.591]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:54:01.591]    __FlashAddr=0x00000000
[20:54:01.591]    __FlashLen=0x00000000
[20:54:01.592]    __FlashArg=0x00000000
[20:54:01.592]    __FlashOp=0x00000000
[20:54:01.592]    __Result=0x00000000
[20:54:01.592]    
[20:54:01.592]    // User-defined
[20:54:01.592]    DbgMCU_CR=0x00000007
[20:54:01.592]    DbgMCU_APB1_Fz=0x00000000
[20:54:01.593]    DbgMCU_APB2_Fz=0x00000000
[20:54:01.593]    TraceClk_Pin=0x00040002
[20:54:01.593]    TraceD0_Pin=0x00040003
[20:54:01.593]    TraceD1_Pin=0x00040004
[20:54:01.593]    TraceD2_Pin=0x00040005
[20:54:01.593]    TraceD3_Pin=0x00040006
[20:54:01.593]  </debugvars>
[20:54:01.594]  
[20:54:01.594]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:54:01.594]    <block atomic="false" info="">
[20:54:01.594]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:54:01.594]        // -> [traceSWO <= 0x00000001]
[20:54:01.594]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:54:01.594]        // -> [traceTPIU <= 0x00000000]
[20:54:01.595]    </block>
[20:54:01.595]    <control if="traceSWO" while="" timeout="0" info="">
[20:54:01.595]      // if-block "traceSWO"
[20:54:01.595]        // =>  TRUE
[20:54:01.595]      <block atomic="false" info="">
[20:54:01.595]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:54:01.595]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:54:01.595]            <block atomic="false" info="">
[20:54:01.596]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:54:01.596]                // -> [dbgmcu_val <= 0x00000000]
[20:54:01.596]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:54:01.596]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:54:01.596]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:54:01.597]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.597]                // -> [dbgmcu_val <= 0x00000007]
[20:54:01.597]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:54:01.597]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:54:01.597]              Sequence("ConfigureTraceSWOPin");
[20:54:01.597]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:54:01.597]                  <block atomic="false" info="">
[20:54:01.597]                    __var pin     = 0;
[20:54:01.598]                      // -> [pin <= 0x00000000]
[20:54:01.598]                    __var port    = 0;
[20:54:01.598]                      // -> [port <= 0x00000000]
[20:54:01.598]                    __var portAdr = 0;
[20:54:01.598]                      // -> [portAdr <= 0x00000000]
[20:54:01.598]                    __var pos     = 0;
[20:54:01.598]                      // -> [pos <= 0x00000000]
[20:54:01.599]                    __var SWO_Pin = 0x00010003;          // PB3
[20:54:01.599]                      // -> [SWO_Pin <= 0x00010003]
[20:54:01.599]                  </block>
[20:54:01.599]                  <block atomic="false" info="configure SWO">
[20:54:01.599]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:54:01.599]                      // -> [pin <= 0x00000003]
[20:54:01.599]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:54:01.600]                      // -> [port <= 0x00000001]
[20:54:01.600]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:54:01.600]                      // -> [portAdr <= 0x40020400]
[20:54:01.600]                    pos = pin * 2;
[20:54:01.600]                      // -> [pos <= 0x00000006]
[20:54:01.600]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:54:01.601]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.601]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.601]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:54:01.602]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.602]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.602]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:54:01.602]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.603]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.603]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:54:01.604]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.604]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.604]                  </block>
[20:54:01.604]                  <control if="pin <  8" while="" timeout="0" info="">
[20:54:01.604]                    // if-block "pin <  8"
[20:54:01.605]                      // =>  TRUE
[20:54:01.605]                    <block atomic="false" info="">
[20:54:01.605]                      pos = ((pin    ) & 7) * 4;
[20:54:01.605]                        // -> [pos <= 0x0000000C]
[20:54:01.605]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:54:01.605]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.606]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.606]                    </block>
[20:54:01.606]                    // end if-block "pin <  8"
[20:54:01.606]                  </control>
[20:54:01.606]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:54:01.607]                    // if-block "pin >= 8"
[20:54:01.607]                      // =>  FALSE
[20:54:01.607]                    // skip if-block "pin >= 8"
[20:54:01.607]                  </control>
[20:54:01.607]                </sequence>
[20:54:01.607]            </block>
[20:54:01.607]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:54:01.607]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:54:01.608]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:54:01.608]            </block>
[20:54:01.608]          </sequence>
[20:54:01.608]      </block>
[20:54:01.609]      // end if-block "traceSWO"
[20:54:01.609]    </control>
[20:54:01.609]    <control if="traceTPIU" while="" timeout="0" info="">
[20:54:01.609]      // if-block "traceTPIU"
[20:54:01.609]        // =>  FALSE
[20:54:01.609]      // skip if-block "traceTPIU"
[20:54:01.610]    </control>
[20:54:01.610]  </sequence>
[20:54:01.610]  
[20:56:33.018]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:56:33.018]  
[20:56:33.018]  <debugvars>
[20:56:33.018]    // Pre-defined
[20:56:33.019]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:56:33.019]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:56:33.019]    __dp=0x00000000
[20:56:33.019]    __ap=0x00000000
[20:56:33.019]    __traceout=0x00000001      (SWO Trace)
[20:56:33.020]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:56:33.020]    __FlashAddr=0x00000000
[20:56:33.020]    __FlashLen=0x00000000
[20:56:33.021]    __FlashArg=0x00000000
[20:56:33.021]    __FlashOp=0x00000000
[20:56:33.021]    __Result=0x00000000
[20:56:33.021]    
[20:56:33.021]    // User-defined
[20:56:33.021]    DbgMCU_CR=0x00000007
[20:56:33.022]    DbgMCU_APB1_Fz=0x00000000
[20:56:33.022]    DbgMCU_APB2_Fz=0x00000000
[20:56:33.022]    TraceClk_Pin=0x00040002
[20:56:33.022]    TraceD0_Pin=0x00040003
[20:56:33.022]    TraceD1_Pin=0x00040004
[20:56:33.022]    TraceD2_Pin=0x00040005
[20:56:33.023]    TraceD3_Pin=0x00040006
[20:56:33.023]  </debugvars>
[20:56:33.023]  
[20:56:33.023]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:56:33.023]    <block atomic="false" info="">
[20:56:33.023]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:56:33.023]        // -> [traceSWO <= 0x00000001]
[20:56:33.024]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:56:33.024]        // -> [traceTPIU <= 0x00000000]
[20:56:33.024]    </block>
[20:56:33.024]    <control if="traceSWO" while="" timeout="0" info="">
[20:56:33.024]      // if-block "traceSWO"
[20:56:33.024]        // =>  TRUE
[20:56:33.024]      <block atomic="false" info="">
[20:56:33.024]        Sequence("DisableTraceSWO");
[20:56:33.025]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:56:33.025]            <block atomic="false" info="">
[20:56:33.025]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:56:33.025]                // -> [dbgmcu_val <= 0x00000000]
[20:56:33.025]            </block>
[20:56:33.025]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:56:33.025]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:56:33.026]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:56:33.026]                // -> [dbgmcu_val <= 0x00000007]
[20:56:33.026]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:56:33.026]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:33.027]            </block>
[20:56:33.027]          </sequence>
[20:56:33.027]      </block>
[20:56:33.027]      // end if-block "traceSWO"
[20:56:33.027]    </control>
[20:56:33.027]    <control if="traceTPIU" while="" timeout="0" info="">
[20:56:33.028]      // if-block "traceTPIU"
[20:56:33.028]        // =>  FALSE
[20:56:33.028]      // skip if-block "traceTPIU"
[20:56:33.028]    </control>
[20:56:33.028]  </sequence>
[20:56:33.028]  
[20:56:59.844]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:56:59.844]  
[20:56:59.844]  <debugvars>
[20:56:59.845]    // Pre-defined
[20:56:59.845]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:56:59.845]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:56:59.845]    __dp=0x00000000
[20:56:59.845]    __ap=0x00000000
[20:56:59.845]    __traceout=0x00000001      (SWO Trace)
[20:56:59.846]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:56:59.846]    __FlashAddr=0x00000000
[20:56:59.846]    __FlashLen=0x00000000
[20:56:59.846]    __FlashArg=0x00000000
[20:56:59.846]    __FlashOp=0x00000000
[20:56:59.846]    __Result=0x00000000
[20:56:59.847]    
[20:56:59.847]    // User-defined
[20:56:59.847]    DbgMCU_CR=0x00000007
[20:56:59.847]    DbgMCU_APB1_Fz=0x00000000
[20:56:59.847]    DbgMCU_APB2_Fz=0x00000000
[20:56:59.847]    TraceClk_Pin=0x00040002
[20:56:59.848]    TraceD0_Pin=0x00040003
[20:56:59.848]    TraceD1_Pin=0x00040004
[20:56:59.848]    TraceD2_Pin=0x00040005
[20:56:59.848]    TraceD3_Pin=0x00040006
[20:56:59.848]  </debugvars>
[20:56:59.848]  
[20:56:59.849]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:56:59.849]    <block atomic="false" info="">
[20:56:59.849]      Sequence("CheckID");
[20:56:59.849]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:56:59.849]          <block atomic="false" info="">
[20:56:59.849]            __var pidr1 = 0;
[20:56:59.849]              // -> [pidr1 <= 0x00000000]
[20:56:59.850]            __var pidr2 = 0;
[20:56:59.850]              // -> [pidr2 <= 0x00000000]
[20:56:59.850]            __var jep106id = 0;
[20:56:59.850]              // -> [jep106id <= 0x00000000]
[20:56:59.850]            __var ROMTableBase = 0;
[20:56:59.850]              // -> [ROMTableBase <= 0x00000000]
[20:56:59.850]            __ap = 0;      // AHB-AP
[20:56:59.850]              // -> [__ap <= 0x00000000]
[20:56:59.851]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:56:59.851]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.851]              // -> [ROMTableBase <= 0xE00FD000]
[20:56:59.851]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:56:59.852]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.852]              // -> [pidr1 <= 0x00000004]
[20:56:59.852]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:56:59.853]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.853]              // -> [pidr2 <= 0x0000001A]
[20:56:59.853]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:56:59.853]              // -> [jep106id <= 0x00000020]
[20:56:59.853]          </block>
[20:56:59.853]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:56:59.853]            // if-block "jep106id != 0x20"
[20:56:59.853]              // =>  FALSE
[20:56:59.854]            // skip if-block "jep106id != 0x20"
[20:56:59.854]          </control>
[20:56:59.854]        </sequence>
[20:56:59.854]    </block>
[20:56:59.854]  </sequence>
[20:56:59.854]  
[20:56:59.869]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:56:59.869]  
[20:56:59.870]  <debugvars>
[20:56:59.870]    // Pre-defined
[20:56:59.870]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:56:59.870]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:56:59.870]    __dp=0x00000000
[20:56:59.870]    __ap=0x00000000
[20:56:59.870]    __traceout=0x00000001      (SWO Trace)
[20:56:59.870]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:56:59.871]    __FlashAddr=0x00000000
[20:56:59.871]    __FlashLen=0x00000000
[20:56:59.871]    __FlashArg=0x00000000
[20:56:59.871]    __FlashOp=0x00000000
[20:56:59.871]    __Result=0x00000000
[20:56:59.871]    
[20:56:59.871]    // User-defined
[20:56:59.871]    DbgMCU_CR=0x00000007
[20:56:59.872]    DbgMCU_APB1_Fz=0x00000000
[20:56:59.872]    DbgMCU_APB2_Fz=0x00000000
[20:56:59.872]    TraceClk_Pin=0x00040002
[20:56:59.872]    TraceD0_Pin=0x00040003
[20:56:59.872]    TraceD1_Pin=0x00040004
[20:56:59.872]    TraceD2_Pin=0x00040005
[20:56:59.872]    TraceD3_Pin=0x00040006
[20:56:59.873]  </debugvars>
[20:56:59.873]  
[20:56:59.873]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:56:59.873]    <block atomic="false" info="">
[20:56:59.873]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:56:59.874]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.874]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:56:59.874]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.875]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:56:59.875]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.875]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:56:59.876]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:56:59.876]    </block>
[20:56:59.876]  </sequence>
[20:56:59.876]  
[20:57:31.086]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:57:31.086]  
[20:57:31.087]  <debugvars>
[20:57:31.087]    // Pre-defined
[20:57:31.087]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:31.087]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:57:31.088]    __dp=0x00000000
[20:57:31.088]    __ap=0x00000000
[20:57:31.088]    __traceout=0x00000001      (SWO Trace)
[20:57:31.088]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:31.088]    __FlashAddr=0x00000000
[20:57:31.088]    __FlashLen=0x00000000
[20:57:31.088]    __FlashArg=0x00000000
[20:57:31.088]    __FlashOp=0x00000000
[20:57:31.088]    __Result=0x00000000
[20:57:31.088]    
[20:57:31.088]    // User-defined
[20:57:31.089]    DbgMCU_CR=0x00000007
[20:57:31.089]    DbgMCU_APB1_Fz=0x00000000
[20:57:31.089]    DbgMCU_APB2_Fz=0x00000000
[20:57:31.089]    TraceClk_Pin=0x00040002
[20:57:31.090]    TraceD0_Pin=0x00040003
[20:57:31.091]    TraceD1_Pin=0x00040004
[20:57:31.091]    TraceD2_Pin=0x00040005
[20:57:31.091]    TraceD3_Pin=0x00040006
[20:57:31.091]  </debugvars>
[20:57:31.091]  
[20:57:31.091]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:57:31.091]    <block atomic="false" info="">
[20:57:31.091]      Sequence("CheckID");
[20:57:31.091]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:57:31.091]          <block atomic="false" info="">
[20:57:31.091]            __var pidr1 = 0;
[20:57:31.091]              // -> [pidr1 <= 0x00000000]
[20:57:31.091]            __var pidr2 = 0;
[20:57:31.091]              // -> [pidr2 <= 0x00000000]
[20:57:31.092]            __var jep106id = 0;
[20:57:31.092]              // -> [jep106id <= 0x00000000]
[20:57:31.092]            __var ROMTableBase = 0;
[20:57:31.092]              // -> [ROMTableBase <= 0x00000000]
[20:57:31.092]            __ap = 0;      // AHB-AP
[20:57:31.092]              // -> [__ap <= 0x00000000]
[20:57:31.092]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:57:31.093]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.093]              // -> [ROMTableBase <= 0xE00FD000]
[20:57:31.093]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:57:31.093]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.093]              // -> [pidr1 <= 0x00000004]
[20:57:31.094]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:57:31.094]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.094]              // -> [pidr2 <= 0x0000001A]
[20:57:31.094]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:57:31.094]              // -> [jep106id <= 0x00000020]
[20:57:31.094]          </block>
[20:57:31.095]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:57:31.095]            // if-block "jep106id != 0x20"
[20:57:31.095]              // =>  FALSE
[20:57:31.095]            // skip if-block "jep106id != 0x20"
[20:57:31.095]          </control>
[20:57:31.095]        </sequence>
[20:57:31.095]    </block>
[20:57:31.095]  </sequence>
[20:57:31.095]  
[20:57:31.111]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:57:31.111]  
[20:57:31.111]  <debugvars>
[20:57:31.111]    // Pre-defined
[20:57:31.111]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:31.111]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:57:31.111]    __dp=0x00000000
[20:57:31.111]    __ap=0x00000000
[20:57:31.112]    __traceout=0x00000001      (SWO Trace)
[20:57:31.112]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:31.112]    __FlashAddr=0x00000000
[20:57:31.112]    __FlashLen=0x00000000
[20:57:31.112]    __FlashArg=0x00000000
[20:57:31.113]    __FlashOp=0x00000000
[20:57:31.113]    __Result=0x00000000
[20:57:31.113]    
[20:57:31.113]    // User-defined
[20:57:31.113]    DbgMCU_CR=0x00000007
[20:57:31.113]    DbgMCU_APB1_Fz=0x00000000
[20:57:31.114]    DbgMCU_APB2_Fz=0x00000000
[20:57:31.114]    TraceClk_Pin=0x00040002
[20:57:31.114]    TraceD0_Pin=0x00040003
[20:57:31.114]    TraceD1_Pin=0x00040004
[20:57:31.114]    TraceD2_Pin=0x00040005
[20:57:31.115]    TraceD3_Pin=0x00040006
[20:57:31.115]  </debugvars>
[20:57:31.115]  
[20:57:31.115]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:57:31.115]    <block atomic="false" info="">
[20:57:31.116]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:57:31.116]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.116]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:57:31.117]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.117]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:57:31.118]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.118]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:57:31.119]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.119]    </block>
[20:57:31.119]  </sequence>
[20:57:31.119]  
[20:57:31.137]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:57:31.137]  
[20:57:31.137]  <debugvars>
[20:57:31.137]    // Pre-defined
[20:57:31.137]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:31.137]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:57:31.137]    __dp=0x00000000
[20:57:31.138]    __ap=0x00000000
[20:57:31.138]    __traceout=0x00000001      (SWO Trace)
[20:57:31.138]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:31.138]    __FlashAddr=0x00000000
[20:57:31.138]    __FlashLen=0x00000000
[20:57:31.138]    __FlashArg=0x00000000
[20:57:31.139]    __FlashOp=0x00000000
[20:57:31.139]    __Result=0x00000000
[20:57:31.139]    
[20:57:31.139]    // User-defined
[20:57:31.139]    DbgMCU_CR=0x00000007
[20:57:31.139]    DbgMCU_APB1_Fz=0x00000000
[20:57:31.139]    DbgMCU_APB2_Fz=0x00000000
[20:57:31.139]    TraceClk_Pin=0x00040002
[20:57:31.140]    TraceD0_Pin=0x00040003
[20:57:31.140]    TraceD1_Pin=0x00040004
[20:57:31.140]    TraceD2_Pin=0x00040005
[20:57:31.140]    TraceD3_Pin=0x00040006
[20:57:31.140]  </debugvars>
[20:57:31.140]  
[20:57:31.140]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:57:31.141]    <block atomic="false" info="">
[20:57:31.141]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:57:31.141]        // -> [traceSWO <= 0x00000001]
[20:57:31.141]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:57:31.141]        // -> [traceTPIU <= 0x00000000]
[20:57:31.141]    </block>
[20:57:31.141]    <control if="traceSWO" while="" timeout="0" info="">
[20:57:31.141]      // if-block "traceSWO"
[20:57:31.142]        // =>  TRUE
[20:57:31.142]      <block atomic="false" info="">
[20:57:31.142]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:57:31.142]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:57:31.142]            <block atomic="false" info="">
[20:57:31.142]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:57:31.142]                // -> [dbgmcu_val <= 0x00000000]
[20:57:31.143]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:57:31.143]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:57:31.143]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:57:31.143]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.143]                // -> [dbgmcu_val <= 0x00000007]
[20:57:31.144]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:57:31.144]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:57:31.144]              Sequence("ConfigureTraceSWOPin");
[20:57:31.144]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:57:31.144]                  <block atomic="false" info="">
[20:57:31.144]                    __var pin     = 0;
[20:57:31.144]                      // -> [pin <= 0x00000000]
[20:57:31.144]                    __var port    = 0;
[20:57:31.145]                      // -> [port <= 0x00000000]
[20:57:31.145]                    __var portAdr = 0;
[20:57:31.145]                      // -> [portAdr <= 0x00000000]
[20:57:31.145]                    __var pos     = 0;
[20:57:31.145]                      // -> [pos <= 0x00000000]
[20:57:31.145]                    __var SWO_Pin = 0x00010003;          // PB3
[20:57:31.145]                      // -> [SWO_Pin <= 0x00010003]
[20:57:31.146]                  </block>
[20:57:31.146]                  <block atomic="false" info="configure SWO">
[20:57:31.146]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:57:31.146]                      // -> [pin <= 0x00000003]
[20:57:31.146]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:57:31.146]                      // -> [port <= 0x00000001]
[20:57:31.146]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:57:31.146]                      // -> [portAdr <= 0x40020400]
[20:57:31.147]                    pos = pin * 2;
[20:57:31.147]                      // -> [pos <= 0x00000006]
[20:57:31.147]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:57:31.147]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.148]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.148]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:57:31.149]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.149]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.149]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:57:31.150]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.150]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.150]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:57:31.151]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.151]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.151]                  </block>
[20:57:31.152]                  <control if="pin <  8" while="" timeout="0" info="">
[20:57:31.152]                    // if-block "pin <  8"
[20:57:31.152]                      // =>  TRUE
[20:57:31.152]                    <block atomic="false" info="">
[20:57:31.152]                      pos = ((pin    ) & 7) * 4;
[20:57:31.152]                        // -> [pos <= 0x0000000C]
[20:57:31.152]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:57:31.153]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.154]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.154]                    </block>
[20:57:31.154]                    // end if-block "pin <  8"
[20:57:31.154]                  </control>
[20:57:31.154]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:57:31.154]                    // if-block "pin >= 8"
[20:57:31.154]                      // =>  FALSE
[20:57:31.154]                    // skip if-block "pin >= 8"
[20:57:31.155]                  </control>
[20:57:31.155]                </sequence>
[20:57:31.155]            </block>
[20:57:31.155]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:57:31.155]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:57:31.156]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.156]            </block>
[20:57:31.156]          </sequence>
[20:57:31.156]      </block>
[20:57:31.156]      // end if-block "traceSWO"
[20:57:31.156]    </control>
[20:57:31.156]    <control if="traceTPIU" while="" timeout="0" info="">
[20:57:31.156]      // if-block "traceTPIU"
[20:57:31.157]        // =>  FALSE
[20:57:31.157]      // skip if-block "traceTPIU"
[20:57:31.157]    </control>
[20:57:31.157]  </sequence>
[20:57:31.157]  
[20:57:31.162]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:57:31.162]  
[20:57:31.162]  <debugvars>
[20:57:31.162]    // Pre-defined
[20:57:31.162]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:31.162]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:57:31.162]    __dp=0x00000000
[20:57:31.162]    __ap=0x00000000
[20:57:31.163]    __traceout=0x00000001      (SWO Trace)
[20:57:31.163]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:31.163]    __FlashAddr=0x00000000
[20:57:31.163]    __FlashLen=0x00000000
[20:57:31.163]    __FlashArg=0x00000000
[20:57:31.163]    __FlashOp=0x00000000
[20:57:31.163]    __Result=0x00000000
[20:57:31.164]    
[20:57:31.164]    // User-defined
[20:57:31.164]    DbgMCU_CR=0x00000007
[20:57:31.164]    DbgMCU_APB1_Fz=0x00000000
[20:57:31.164]    DbgMCU_APB2_Fz=0x00000000
[20:57:31.164]    TraceClk_Pin=0x00040002
[20:57:31.164]    TraceD0_Pin=0x00040003
[20:57:31.164]    TraceD1_Pin=0x00040004
[20:57:31.165]    TraceD2_Pin=0x00040005
[20:57:31.165]    TraceD3_Pin=0x00040006
[20:57:31.165]  </debugvars>
[20:57:31.165]  
[20:57:31.165]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:57:31.165]    <block atomic="false" info="">
[20:57:31.165]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:57:31.166]        // -> [traceSWO <= 0x00000001]
[20:57:31.166]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:57:31.166]        // -> [traceTPIU <= 0x00000000]
[20:57:31.166]    </block>
[20:57:31.166]    <control if="traceSWO" while="" timeout="0" info="">
[20:57:31.166]      // if-block "traceSWO"
[20:57:31.166]        // =>  TRUE
[20:57:31.166]      <block atomic="false" info="">
[20:57:31.167]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:57:31.167]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:57:31.167]            <block atomic="false" info="">
[20:57:31.167]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:57:31.167]                // -> [dbgmcu_val <= 0x00000000]
[20:57:31.167]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:57:31.167]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:57:31.168]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:57:31.168]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.168]                // -> [dbgmcu_val <= 0x00000007]
[20:57:31.168]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:57:31.168]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:57:31.169]              Sequence("ConfigureTraceSWOPin");
[20:57:31.169]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:57:31.169]                  <block atomic="false" info="">
[20:57:31.169]                    __var pin     = 0;
[20:57:31.169]                      // -> [pin <= 0x00000000]
[20:57:31.169]                    __var port    = 0;
[20:57:31.170]                      // -> [port <= 0x00000000]
[20:57:31.170]                    __var portAdr = 0;
[20:57:31.170]                      // -> [portAdr <= 0x00000000]
[20:57:31.170]                    __var pos     = 0;
[20:57:31.171]                      // -> [pos <= 0x00000000]
[20:57:31.171]                    __var SWO_Pin = 0x00010003;          // PB3
[20:57:31.171]                      // -> [SWO_Pin <= 0x00010003]
[20:57:31.171]                  </block>
[20:57:31.171]                  <block atomic="false" info="configure SWO">
[20:57:31.171]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:57:31.171]                      // -> [pin <= 0x00000003]
[20:57:31.171]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:57:31.171]                      // -> [port <= 0x00000001]
[20:57:31.171]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:57:31.171]                      // -> [portAdr <= 0x40020400]
[20:57:31.172]                    pos = pin * 2;
[20:57:31.172]                      // -> [pos <= 0x00000006]
[20:57:31.172]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:57:31.173]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.173]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.173]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:57:31.174]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.174]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.174]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:57:31.175]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.175]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.175]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:57:31.176]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.176]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.176]                  </block>
[20:57:31.177]                  <control if="pin <  8" while="" timeout="0" info="">
[20:57:31.177]                    // if-block "pin <  8"
[20:57:31.177]                      // =>  TRUE
[20:57:31.177]                    <block atomic="false" info="">
[20:57:31.178]                      pos = ((pin    ) & 7) * 4;
[20:57:31.178]                        // -> [pos <= 0x0000000C]
[20:57:31.178]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:57:31.178]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.179]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.179]                    </block>
[20:57:31.179]                    // end if-block "pin <  8"
[20:57:31.179]                  </control>
[20:57:31.179]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:57:31.179]                    // if-block "pin >= 8"
[20:57:31.180]                      // =>  FALSE
[20:57:31.180]                    // skip if-block "pin >= 8"
[20:57:31.180]                  </control>
[20:57:31.180]                </sequence>
[20:57:31.180]            </block>
[20:57:31.180]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:57:31.180]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:57:31.181]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.181]            </block>
[20:57:31.181]          </sequence>
[20:57:31.181]      </block>
[20:57:31.181]      // end if-block "traceSWO"
[20:57:31.182]    </control>
[20:57:31.182]    <control if="traceTPIU" while="" timeout="0" info="">
[20:57:31.182]      // if-block "traceTPIU"
[20:57:31.182]        // =>  FALSE
[20:57:31.182]      // skip if-block "traceTPIU"
[20:57:31.182]    </control>
[20:57:31.182]  </sequence>
[20:57:31.182]  
[20:57:31.406]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:57:31.406]  
[20:57:31.406]  <debugvars>
[20:57:31.406]    // Pre-defined
[20:57:31.407]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:57:31.407]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:57:31.407]    __dp=0x00000000
[20:57:31.407]    __ap=0x00000000
[20:57:31.407]    __traceout=0x00000001      (SWO Trace)
[20:57:31.407]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:57:31.407]    __FlashAddr=0x00000000
[20:57:31.408]    __FlashLen=0x00000000
[20:57:31.408]    __FlashArg=0x00000000
[20:57:31.408]    __FlashOp=0x00000000
[20:57:31.408]    __Result=0x00000000
[20:57:31.408]    
[20:57:31.408]    // User-defined
[20:57:31.408]    DbgMCU_CR=0x00000007
[20:57:31.408]    DbgMCU_APB1_Fz=0x00000000
[20:57:31.409]    DbgMCU_APB2_Fz=0x00000000
[20:57:31.409]    TraceClk_Pin=0x00040002
[20:57:31.409]    TraceD0_Pin=0x00040003
[20:57:31.409]    TraceD1_Pin=0x00040004
[20:57:31.409]    TraceD2_Pin=0x00040005
[20:57:31.409]    TraceD3_Pin=0x00040006
[20:57:31.409]  </debugvars>
[20:57:31.410]  
[20:57:31.410]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:57:31.410]    <block atomic="false" info="">
[20:57:31.410]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:57:31.410]        // -> [traceSWO <= 0x00000001]
[20:57:31.410]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:57:31.410]        // -> [traceTPIU <= 0x00000000]
[20:57:31.410]    </block>
[20:57:31.411]    <control if="traceSWO" while="" timeout="0" info="">
[20:57:31.411]      // if-block "traceSWO"
[20:57:31.411]        // =>  TRUE
[20:57:31.411]      <block atomic="false" info="">
[20:57:31.411]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:57:31.411]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:57:31.411]            <block atomic="false" info="">
[20:57:31.411]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:57:31.412]                // -> [dbgmcu_val <= 0x00000000]
[20:57:31.412]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:57:31.412]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:57:31.412]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:57:31.413]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.413]                // -> [dbgmcu_val <= 0x00000007]
[20:57:31.413]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:57:31.413]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:57:31.413]              Sequence("ConfigureTraceSWOPin");
[20:57:31.413]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:57:31.413]                  <block atomic="false" info="">
[20:57:31.413]                    __var pin     = 0;
[20:57:31.414]                      // -> [pin <= 0x00000000]
[20:57:31.414]                    __var port    = 0;
[20:57:31.414]                      // -> [port <= 0x00000000]
[20:57:31.414]                    __var portAdr = 0;
[20:57:31.414]                      // -> [portAdr <= 0x00000000]
[20:57:31.414]                    __var pos     = 0;
[20:57:31.414]                      // -> [pos <= 0x00000000]
[20:57:31.415]                    __var SWO_Pin = 0x00010003;          // PB3
[20:57:31.415]                      // -> [SWO_Pin <= 0x00010003]
[20:57:31.415]                  </block>
[20:57:31.415]                  <block atomic="false" info="configure SWO">
[20:57:31.415]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:57:31.415]                      // -> [pin <= 0x00000003]
[20:57:31.415]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:57:31.415]                      // -> [port <= 0x00000001]
[20:57:31.415]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:57:31.416]                      // -> [portAdr <= 0x40020400]
[20:57:31.416]                    pos = pin * 2;
[20:57:31.416]                      // -> [pos <= 0x00000006]
[20:57:31.416]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:57:31.416]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.417]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.417]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:57:31.418]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.418]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.418]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:57:31.419]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.419]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.419]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:57:31.420]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.420]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.421]                  </block>
[20:57:31.421]                  <control if="pin <  8" while="" timeout="0" info="">
[20:57:31.421]                    // if-block "pin <  8"
[20:57:31.421]                      // =>  TRUE
[20:57:31.421]                    <block atomic="false" info="">
[20:57:31.422]                      pos = ((pin    ) & 7) * 4;
[20:57:31.422]                        // -> [pos <= 0x0000000C]
[20:57:31.422]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:57:31.422]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.423]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.423]                    </block>
[20:57:31.423]                    // end if-block "pin <  8"
[20:57:31.423]                  </control>
[20:57:31.423]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:57:31.424]                    // if-block "pin >= 8"
[20:57:31.424]                      // =>  FALSE
[20:57:31.424]                    // skip if-block "pin >= 8"
[20:57:31.424]                  </control>
[20:57:31.424]                </sequence>
[20:57:31.424]            </block>
[20:57:31.424]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:57:31.424]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:57:31.425]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:57:31.425]            </block>
[20:57:31.425]          </sequence>
[20:57:31.425]      </block>
[20:57:31.425]      // end if-block "traceSWO"
[20:57:31.425]    </control>
[20:57:31.426]    <control if="traceTPIU" while="" timeout="0" info="">
[20:57:31.426]      // if-block "traceTPIU"
[20:57:31.427]        // =>  FALSE
[20:57:31.427]      // skip if-block "traceTPIU"
[20:57:31.427]    </control>
[20:57:31.427]  </sequence>
[20:57:31.427]  
[20:58:20.977]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:58:20.977]  
[20:58:20.978]  <debugvars>
[20:58:20.978]    // Pre-defined
[20:58:20.978]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:20.979]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:58:20.979]    __dp=0x00000000
[20:58:20.979]    __ap=0x00000000
[20:58:20.979]    __traceout=0x00000001      (SWO Trace)
[20:58:20.979]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:20.980]    __FlashAddr=0x00000000
[20:58:20.980]    __FlashLen=0x00000000
[20:58:20.980]    __FlashArg=0x00000000
[20:58:20.980]    __FlashOp=0x00000000
[20:58:20.980]    __Result=0x00000000
[20:58:20.981]    
[20:58:20.981]    // User-defined
[20:58:20.981]    DbgMCU_CR=0x00000007
[20:58:20.981]    DbgMCU_APB1_Fz=0x00000000
[20:58:20.981]    DbgMCU_APB2_Fz=0x00000000
[20:58:20.981]    TraceClk_Pin=0x00040002
[20:58:20.981]    TraceD0_Pin=0x00040003
[20:58:20.982]    TraceD1_Pin=0x00040004
[20:58:20.982]    TraceD2_Pin=0x00040005
[20:58:20.982]    TraceD3_Pin=0x00040006
[20:58:20.982]  </debugvars>
[20:58:20.982]  
[20:58:20.983]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:58:20.983]    <block atomic="false" info="">
[20:58:20.983]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:58:20.983]        // -> [traceSWO <= 0x00000001]
[20:58:20.983]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:58:20.983]        // -> [traceTPIU <= 0x00000000]
[20:58:20.984]    </block>
[20:58:20.984]    <control if="traceSWO" while="" timeout="0" info="">
[20:58:20.984]      // if-block "traceSWO"
[20:58:20.984]        // =>  TRUE
[20:58:20.984]      <block atomic="false" info="">
[20:58:20.985]        Sequence("DisableTraceSWO");
[20:58:20.985]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:58:20.985]            <block atomic="false" info="">
[20:58:20.985]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:58:20.985]                // -> [dbgmcu_val <= 0x00000000]
[20:58:20.985]            </block>
[20:58:20.986]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:58:20.986]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:58:20.986]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:58:20.987]                // -> [dbgmcu_val <= 0x00000007]
[20:58:20.987]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:58:20.987]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:20.988]            </block>
[20:58:20.988]          </sequence>
[20:58:20.988]      </block>
[20:58:20.988]      // end if-block "traceSWO"
[20:58:20.988]    </control>
[20:58:20.988]    <control if="traceTPIU" while="" timeout="0" info="">
[20:58:20.989]      // if-block "traceTPIU"
[20:58:20.989]        // =>  FALSE
[20:58:20.989]      // skip if-block "traceTPIU"
[20:58:20.989]    </control>
[20:58:20.989]  </sequence>
[20:58:20.989]  
[20:58:48.031]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:58:48.031]  
[20:58:48.031]  <debugvars>
[20:58:48.031]    // Pre-defined
[20:58:48.032]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:48.032]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:58:48.032]    __dp=0x00000000
[20:58:48.032]    __ap=0x00000000
[20:58:48.032]    __traceout=0x00000001      (SWO Trace)
[20:58:48.032]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:48.032]    __FlashAddr=0x00000000
[20:58:48.032]    __FlashLen=0x00000000
[20:58:48.033]    __FlashArg=0x00000000
[20:58:48.033]    __FlashOp=0x00000000
[20:58:48.033]    __Result=0x00000000
[20:58:48.033]    
[20:58:48.033]    // User-defined
[20:58:48.033]    DbgMCU_CR=0x00000007
[20:58:48.033]    DbgMCU_APB1_Fz=0x00000000
[20:58:48.033]    DbgMCU_APB2_Fz=0x00000000
[20:58:48.033]    TraceClk_Pin=0x00040002
[20:58:48.034]    TraceD0_Pin=0x00040003
[20:58:48.034]    TraceD1_Pin=0x00040004
[20:58:48.034]    TraceD2_Pin=0x00040005
[20:58:48.034]    TraceD3_Pin=0x00040006
[20:58:48.034]  </debugvars>
[20:58:48.034]  
[20:58:48.034]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:58:48.035]    <block atomic="false" info="">
[20:58:48.035]      Sequence("CheckID");
[20:58:48.035]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:58:48.035]          <block atomic="false" info="">
[20:58:48.035]            __var pidr1 = 0;
[20:58:48.035]              // -> [pidr1 <= 0x00000000]
[20:58:48.035]            __var pidr2 = 0;
[20:58:48.036]              // -> [pidr2 <= 0x00000000]
[20:58:48.036]            __var jep106id = 0;
[20:58:48.036]              // -> [jep106id <= 0x00000000]
[20:58:48.036]            __var ROMTableBase = 0;
[20:58:48.036]              // -> [ROMTableBase <= 0x00000000]
[20:58:48.036]            __ap = 0;      // AHB-AP
[20:58:48.036]              // -> [__ap <= 0x00000000]
[20:58:48.036]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:58:48.037]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.037]              // -> [ROMTableBase <= 0xE00FD000]
[20:58:48.037]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:58:48.038]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.038]              // -> [pidr1 <= 0x00000004]
[20:58:48.038]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:58:48.038]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.038]              // -> [pidr2 <= 0x0000001A]
[20:58:48.039]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:58:48.039]              // -> [jep106id <= 0x00000020]
[20:58:48.039]          </block>
[20:58:48.039]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:58:48.039]            // if-block "jep106id != 0x20"
[20:58:48.039]              // =>  FALSE
[20:58:48.040]            // skip if-block "jep106id != 0x20"
[20:58:48.040]          </control>
[20:58:48.040]        </sequence>
[20:58:48.040]    </block>
[20:58:48.041]  </sequence>
[20:58:48.041]  
[20:58:48.056]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:58:48.056]  
[20:58:48.056]  <debugvars>
[20:58:48.057]    // Pre-defined
[20:58:48.057]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:58:48.057]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:58:48.057]    __dp=0x00000000
[20:58:48.057]    __ap=0x00000000
[20:58:48.057]    __traceout=0x00000001      (SWO Trace)
[20:58:48.058]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:58:48.058]    __FlashAddr=0x00000000
[20:58:48.058]    __FlashLen=0x00000000
[20:58:48.058]    __FlashArg=0x00000000
[20:58:48.058]    __FlashOp=0x00000000
[20:58:48.058]    __Result=0x00000000
[20:58:48.058]    
[20:58:48.058]    // User-defined
[20:58:48.058]    DbgMCU_CR=0x00000007
[20:58:48.058]    DbgMCU_APB1_Fz=0x00000000
[20:58:48.058]    DbgMCU_APB2_Fz=0x00000000
[20:58:48.059]    TraceClk_Pin=0x00040002
[20:58:48.059]    TraceD0_Pin=0x00040003
[20:58:48.059]    TraceD1_Pin=0x00040004
[20:58:48.059]    TraceD2_Pin=0x00040005
[20:58:48.059]    TraceD3_Pin=0x00040006
[20:58:48.059]  </debugvars>
[20:58:48.059]  
[20:58:48.060]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:58:48.060]    <block atomic="false" info="">
[20:58:48.060]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:58:48.060]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.061]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:58:48.061]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.061]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:58:48.062]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.062]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:58:48.062]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:58:48.063]    </block>
[20:58:48.063]  </sequence>
[20:58:48.063]  
[20:59:19.555]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:59:19.555]  
[20:59:19.556]  <debugvars>
[20:59:19.556]    // Pre-defined
[20:59:19.556]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:19.556]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:59:19.556]    __dp=0x00000000
[20:59:19.556]    __ap=0x00000000
[20:59:19.557]    __traceout=0x00000001      (SWO Trace)
[20:59:19.557]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:19.557]    __FlashAddr=0x00000000
[20:59:19.557]    __FlashLen=0x00000000
[20:59:19.557]    __FlashArg=0x00000000
[20:59:19.557]    __FlashOp=0x00000000
[20:59:19.558]    __Result=0x00000000
[20:59:19.558]    
[20:59:19.558]    // User-defined
[20:59:19.558]    DbgMCU_CR=0x00000007
[20:59:19.558]    DbgMCU_APB1_Fz=0x00000000
[20:59:19.558]    DbgMCU_APB2_Fz=0x00000000
[20:59:19.559]    TraceClk_Pin=0x00040002
[20:59:19.559]    TraceD0_Pin=0x00040003
[20:59:19.559]    TraceD1_Pin=0x00040004
[20:59:19.559]    TraceD2_Pin=0x00040005
[20:59:19.559]    TraceD3_Pin=0x00040006
[20:59:19.560]  </debugvars>
[20:59:19.560]  
[20:59:19.560]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:59:19.560]    <block atomic="false" info="">
[20:59:19.560]      Sequence("CheckID");
[20:59:19.561]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:59:19.561]          <block atomic="false" info="">
[20:59:19.561]            __var pidr1 = 0;
[20:59:19.561]              // -> [pidr1 <= 0x00000000]
[20:59:19.561]            __var pidr2 = 0;
[20:59:19.561]              // -> [pidr2 <= 0x00000000]
[20:59:19.562]            __var jep106id = 0;
[20:59:19.562]              // -> [jep106id <= 0x00000000]
[20:59:19.562]            __var ROMTableBase = 0;
[20:59:19.562]              // -> [ROMTableBase <= 0x00000000]
[20:59:19.562]            __ap = 0;      // AHB-AP
[20:59:19.562]              // -> [__ap <= 0x00000000]
[20:59:19.562]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:59:19.563]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.563]              // -> [ROMTableBase <= 0xE00FD000]
[20:59:19.563]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:59:19.563]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.564]              // -> [pidr1 <= 0x00000004]
[20:59:19.564]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:59:19.564]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.565]              // -> [pidr2 <= 0x0000001A]
[20:59:19.565]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:59:19.565]              // -> [jep106id <= 0x00000020]
[20:59:19.565]          </block>
[20:59:19.565]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:59:19.565]            // if-block "jep106id != 0x20"
[20:59:19.566]              // =>  FALSE
[20:59:19.566]            // skip if-block "jep106id != 0x20"
[20:59:19.566]          </control>
[20:59:19.566]        </sequence>
[20:59:19.566]    </block>
[20:59:19.566]  </sequence>
[20:59:19.566]  
[20:59:19.581]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:59:19.581]  
[20:59:19.581]  <debugvars>
[20:59:19.581]    // Pre-defined
[20:59:19.582]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:19.582]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:59:19.582]    __dp=0x00000000
[20:59:19.582]    __ap=0x00000000
[20:59:19.582]    __traceout=0x00000001      (SWO Trace)
[20:59:19.582]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:19.583]    __FlashAddr=0x00000000
[20:59:19.583]    __FlashLen=0x00000000
[20:59:19.583]    __FlashArg=0x00000000
[20:59:19.583]    __FlashOp=0x00000000
[20:59:19.583]    __Result=0x00000000
[20:59:19.583]    
[20:59:19.583]    // User-defined
[20:59:19.583]    DbgMCU_CR=0x00000007
[20:59:19.583]    DbgMCU_APB1_Fz=0x00000000
[20:59:19.584]    DbgMCU_APB2_Fz=0x00000000
[20:59:19.584]    TraceClk_Pin=0x00040002
[20:59:19.584]    TraceD0_Pin=0x00040003
[20:59:19.584]    TraceD1_Pin=0x00040004
[20:59:19.584]    TraceD2_Pin=0x00040005
[20:59:19.584]    TraceD3_Pin=0x00040006
[20:59:19.584]  </debugvars>
[20:59:19.585]  
[20:59:19.585]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:59:19.585]    <block atomic="false" info="">
[20:59:19.585]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:59:19.585]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.586]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:59:19.586]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.586]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:59:19.587]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.587]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:59:19.587]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.588]    </block>
[20:59:19.588]  </sequence>
[20:59:19.588]  
[20:59:19.604]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:59:19.604]  
[20:59:19.604]  <debugvars>
[20:59:19.605]    // Pre-defined
[20:59:19.605]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:19.605]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:59:19.605]    __dp=0x00000000
[20:59:19.605]    __ap=0x00000000
[20:59:19.605]    __traceout=0x00000001      (SWO Trace)
[20:59:19.606]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:19.606]    __FlashAddr=0x00000000
[20:59:19.606]    __FlashLen=0x00000000
[20:59:19.606]    __FlashArg=0x00000000
[20:59:19.606]    __FlashOp=0x00000000
[20:59:19.607]    __Result=0x00000000
[20:59:19.607]    
[20:59:19.607]    // User-defined
[20:59:19.607]    DbgMCU_CR=0x00000007
[20:59:19.607]    DbgMCU_APB1_Fz=0x00000000
[20:59:19.607]    DbgMCU_APB2_Fz=0x00000000
[20:59:19.607]    TraceClk_Pin=0x00040002
[20:59:19.608]    TraceD0_Pin=0x00040003
[20:59:19.608]    TraceD1_Pin=0x00040004
[20:59:19.608]    TraceD2_Pin=0x00040005
[20:59:19.608]    TraceD3_Pin=0x00040006
[20:59:19.608]  </debugvars>
[20:59:19.608]  
[20:59:19.608]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:59:19.609]    <block atomic="false" info="">
[20:59:19.609]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:59:19.609]        // -> [traceSWO <= 0x00000001]
[20:59:19.609]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:59:19.609]        // -> [traceTPIU <= 0x00000000]
[20:59:19.609]    </block>
[20:59:19.610]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:19.610]      // if-block "traceSWO"
[20:59:19.610]        // =>  TRUE
[20:59:19.610]      <block atomic="false" info="">
[20:59:19.610]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:59:19.610]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:59:19.610]            <block atomic="false" info="">
[20:59:19.610]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:19.610]                // -> [dbgmcu_val <= 0x00000000]
[20:59:19.611]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:59:19.611]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:59:19.611]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:59:19.611]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.612]                // -> [dbgmcu_val <= 0x00000007]
[20:59:19.612]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:59:19.612]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:59:19.612]              Sequence("ConfigureTraceSWOPin");
[20:59:19.612]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:59:19.612]                  <block atomic="false" info="">
[20:59:19.613]                    __var pin     = 0;
[20:59:19.613]                      // -> [pin <= 0x00000000]
[20:59:19.613]                    __var port    = 0;
[20:59:19.613]                      // -> [port <= 0x00000000]
[20:59:19.613]                    __var portAdr = 0;
[20:59:19.613]                      // -> [portAdr <= 0x00000000]
[20:59:19.613]                    __var pos     = 0;
[20:59:19.613]                      // -> [pos <= 0x00000000]
[20:59:19.614]                    __var SWO_Pin = 0x00010003;          // PB3
[20:59:19.614]                      // -> [SWO_Pin <= 0x00010003]
[20:59:19.614]                  </block>
[20:59:19.614]                  <block atomic="false" info="configure SWO">
[20:59:19.614]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:59:19.614]                      // -> [pin <= 0x00000003]
[20:59:19.614]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:59:19.614]                      // -> [port <= 0x00000001]
[20:59:19.615]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:59:19.615]                      // -> [portAdr <= 0x40020400]
[20:59:19.615]                    pos = pin * 2;
[20:59:19.615]                      // -> [pos <= 0x00000006]
[20:59:19.615]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:59:19.616]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.616]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.616]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:59:19.617]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.617]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.617]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:59:19.618]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.618]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.618]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:59:19.619]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.619]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.619]                  </block>
[20:59:19.619]                  <control if="pin <  8" while="" timeout="0" info="">
[20:59:19.620]                    // if-block "pin <  8"
[20:59:19.620]                      // =>  TRUE
[20:59:19.620]                    <block atomic="false" info="">
[20:59:19.620]                      pos = ((pin    ) & 7) * 4;
[20:59:19.620]                        // -> [pos <= 0x0000000C]
[20:59:19.620]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:59:19.621]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.627]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.628]                    </block>
[20:59:19.628]                    // end if-block "pin <  8"
[20:59:19.628]                  </control>
[20:59:19.628]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:59:19.629]                    // if-block "pin >= 8"
[20:59:19.629]                      // =>  FALSE
[20:59:19.629]                    // skip if-block "pin >= 8"
[20:59:19.629]                  </control>
[20:59:19.630]                </sequence>
[20:59:19.630]            </block>
[20:59:19.630]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:19.630]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:59:19.631]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.631]            </block>
[20:59:19.631]          </sequence>
[20:59:19.631]      </block>
[20:59:19.632]      // end if-block "traceSWO"
[20:59:19.632]    </control>
[20:59:19.632]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:19.632]      // if-block "traceTPIU"
[20:59:19.632]        // =>  FALSE
[20:59:19.632]      // skip if-block "traceTPIU"
[20:59:19.633]    </control>
[20:59:19.633]  </sequence>
[20:59:19.633]  
[20:59:19.637]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:59:19.637]  
[20:59:19.637]  <debugvars>
[20:59:19.637]    // Pre-defined
[20:59:19.638]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:19.638]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:59:19.638]    __dp=0x00000000
[20:59:19.638]    __ap=0x00000000
[20:59:19.638]    __traceout=0x00000001      (SWO Trace)
[20:59:19.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:19.639]    __FlashAddr=0x00000000
[20:59:19.639]    __FlashLen=0x00000000
[20:59:19.639]    __FlashArg=0x00000000
[20:59:19.639]    __FlashOp=0x00000000
[20:59:19.639]    __Result=0x00000000
[20:59:19.640]    
[20:59:19.640]    // User-defined
[20:59:19.640]    DbgMCU_CR=0x00000007
[20:59:19.640]    DbgMCU_APB1_Fz=0x00000000
[20:59:19.640]    DbgMCU_APB2_Fz=0x00000000
[20:59:19.640]    TraceClk_Pin=0x00040002
[20:59:19.640]    TraceD0_Pin=0x00040003
[20:59:19.641]    TraceD1_Pin=0x00040004
[20:59:19.641]    TraceD2_Pin=0x00040005
[20:59:19.641]    TraceD3_Pin=0x00040006
[20:59:19.641]  </debugvars>
[20:59:19.641]  
[20:59:19.642]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:59:19.642]    <block atomic="false" info="">
[20:59:19.642]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:59:19.642]        // -> [traceSWO <= 0x00000001]
[20:59:19.642]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:59:19.642]        // -> [traceTPIU <= 0x00000000]
[20:59:19.642]    </block>
[20:59:19.643]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:19.643]      // if-block "traceSWO"
[20:59:19.643]        // =>  TRUE
[20:59:19.643]      <block atomic="false" info="">
[20:59:19.643]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:59:19.643]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:59:19.644]            <block atomic="false" info="">
[20:59:19.644]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:19.644]                // -> [dbgmcu_val <= 0x00000000]
[20:59:19.644]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:59:19.644]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:59:19.644]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:59:19.645]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.645]                // -> [dbgmcu_val <= 0x00000007]
[20:59:19.645]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:59:19.645]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:59:19.645]              Sequence("ConfigureTraceSWOPin");
[20:59:19.645]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:59:19.645]                  <block atomic="false" info="">
[20:59:19.646]                    __var pin     = 0;
[20:59:19.646]                      // -> [pin <= 0x00000000]
[20:59:19.646]                    __var port    = 0;
[20:59:19.646]                      // -> [port <= 0x00000000]
[20:59:19.646]                    __var portAdr = 0;
[20:59:19.646]                      // -> [portAdr <= 0x00000000]
[20:59:19.647]                    __var pos     = 0;
[20:59:19.647]                      // -> [pos <= 0x00000000]
[20:59:19.647]                    __var SWO_Pin = 0x00010003;          // PB3
[20:59:19.647]                      // -> [SWO_Pin <= 0x00010003]
[20:59:19.647]                  </block>
[20:59:19.647]                  <block atomic="false" info="configure SWO">
[20:59:19.647]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:59:19.647]                      // -> [pin <= 0x00000003]
[20:59:19.648]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:59:19.648]                      // -> [port <= 0x00000001]
[20:59:19.648]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:59:19.648]                      // -> [portAdr <= 0x40020400]
[20:59:19.648]                    pos = pin * 2;
[20:59:19.648]                      // -> [pos <= 0x00000006]
[20:59:19.648]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:59:19.649]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.649]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.649]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:59:19.650]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.650]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.650]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:59:19.651]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.651]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.651]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:59:19.652]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.652]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.652]                  </block>
[20:59:19.652]                  <control if="pin <  8" while="" timeout="0" info="">
[20:59:19.652]                    // if-block "pin <  8"
[20:59:19.653]                      // =>  TRUE
[20:59:19.653]                    <block atomic="false" info="">
[20:59:19.653]                      pos = ((pin    ) & 7) * 4;
[20:59:19.653]                        // -> [pos <= 0x0000000C]
[20:59:19.653]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:59:19.653]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.654]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.654]                    </block>
[20:59:19.654]                    // end if-block "pin <  8"
[20:59:19.654]                  </control>
[20:59:19.654]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:59:19.655]                    // if-block "pin >= 8"
[20:59:19.655]                      // =>  FALSE
[20:59:19.655]                    // skip if-block "pin >= 8"
[20:59:19.655]                  </control>
[20:59:19.655]                </sequence>
[20:59:19.655]            </block>
[20:59:19.655]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:19.655]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:59:19.656]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.656]            </block>
[20:59:19.656]          </sequence>
[20:59:19.656]      </block>
[20:59:19.656]      // end if-block "traceSWO"
[20:59:19.657]    </control>
[20:59:19.657]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:19.657]      // if-block "traceTPIU"
[20:59:19.657]        // =>  FALSE
[20:59:19.657]      // skip if-block "traceTPIU"
[20:59:19.657]    </control>
[20:59:19.657]  </sequence>
[20:59:19.658]  
[20:59:19.889]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:59:19.889]  
[20:59:19.890]  <debugvars>
[20:59:19.890]    // Pre-defined
[20:59:19.890]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:19.890]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:59:19.890]    __dp=0x00000000
[20:59:19.891]    __ap=0x00000000
[20:59:19.891]    __traceout=0x00000001      (SWO Trace)
[20:59:19.891]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:19.891]    __FlashAddr=0x00000000
[20:59:19.891]    __FlashLen=0x00000000
[20:59:19.891]    __FlashArg=0x00000000
[20:59:19.892]    __FlashOp=0x00000000
[20:59:19.892]    __Result=0x00000000
[20:59:19.892]    
[20:59:19.892]    // User-defined
[20:59:19.892]    DbgMCU_CR=0x00000007
[20:59:19.892]    DbgMCU_APB1_Fz=0x00000000
[20:59:19.893]    DbgMCU_APB2_Fz=0x00000000
[20:59:19.893]    TraceClk_Pin=0x00040002
[20:59:19.894]    TraceD0_Pin=0x00040003
[20:59:19.894]    TraceD1_Pin=0x00040004
[20:59:19.894]    TraceD2_Pin=0x00040005
[20:59:19.894]    TraceD3_Pin=0x00040006
[20:59:19.894]  </debugvars>
[20:59:19.894]  
[20:59:19.894]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:59:19.894]    <block atomic="false" info="">
[20:59:19.894]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:59:19.894]        // -> [traceSWO <= 0x00000001]
[20:59:19.895]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:59:19.895]        // -> [traceTPIU <= 0x00000000]
[20:59:19.895]    </block>
[20:59:19.895]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:19.895]      // if-block "traceSWO"
[20:59:19.896]        // =>  TRUE
[20:59:19.896]      <block atomic="false" info="">
[20:59:19.896]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:59:19.896]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:59:19.896]            <block atomic="false" info="">
[20:59:19.896]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:19.897]                // -> [dbgmcu_val <= 0x00000000]
[20:59:19.897]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:59:19.897]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:59:19.897]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:59:19.898]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.898]                // -> [dbgmcu_val <= 0x00000007]
[20:59:19.898]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:59:19.898]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:59:19.899]              Sequence("ConfigureTraceSWOPin");
[20:59:19.899]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:59:19.899]                  <block atomic="false" info="">
[20:59:19.899]                    __var pin     = 0;
[20:59:19.899]                      // -> [pin <= 0x00000000]
[20:59:19.899]                    __var port    = 0;
[20:59:19.900]                      // -> [port <= 0x00000000]
[20:59:19.900]                    __var portAdr = 0;
[20:59:19.900]                      // -> [portAdr <= 0x00000000]
[20:59:19.900]                    __var pos     = 0;
[20:59:19.900]                      // -> [pos <= 0x00000000]
[20:59:19.900]                    __var SWO_Pin = 0x00010003;          // PB3
[20:59:19.901]                      // -> [SWO_Pin <= 0x00010003]
[20:59:19.901]                  </block>
[20:59:19.901]                  <block atomic="false" info="configure SWO">
[20:59:19.901]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:59:19.902]                      // -> [pin <= 0x00000003]
[20:59:19.902]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:59:19.902]                      // -> [port <= 0x00000001]
[20:59:19.902]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:59:19.902]                      // -> [portAdr <= 0x40020400]
[20:59:19.902]                    pos = pin * 2;
[20:59:19.903]                      // -> [pos <= 0x00000006]
[20:59:19.903]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:59:19.903]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.904]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.904]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:59:19.904]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.905]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.905]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:59:19.905]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.906]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.906]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:59:19.906]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.907]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.907]                  </block>
[20:59:19.907]                  <control if="pin <  8" while="" timeout="0" info="">
[20:59:19.907]                    // if-block "pin <  8"
[20:59:19.907]                      // =>  TRUE
[20:59:19.908]                    <block atomic="false" info="">
[20:59:19.908]                      pos = ((pin    ) & 7) * 4;
[20:59:19.908]                        // -> [pos <= 0x0000000C]
[20:59:19.908]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:59:19.909]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.909]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.909]                    </block>
[20:59:19.909]                    // end if-block "pin <  8"
[20:59:19.910]                  </control>
[20:59:19.910]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:59:19.910]                    // if-block "pin >= 8"
[20:59:19.910]                      // =>  FALSE
[20:59:19.910]                    // skip if-block "pin >= 8"
[20:59:19.910]                  </control>
[20:59:19.910]                </sequence>
[20:59:19.910]            </block>
[20:59:19.910]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:19.910]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:59:19.911]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:19.911]            </block>
[20:59:19.911]          </sequence>
[20:59:19.911]      </block>
[20:59:19.912]      // end if-block "traceSWO"
[20:59:19.912]    </control>
[20:59:19.912]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:19.912]      // if-block "traceTPIU"
[20:59:19.912]        // =>  FALSE
[20:59:19.912]      // skip if-block "traceTPIU"
[20:59:19.912]    </control>
[20:59:19.913]  </sequence>
[20:59:19.913]  
[20:59:48.641]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:59:48.641]  
[20:59:48.642]  <debugvars>
[20:59:48.642]    // Pre-defined
[20:59:48.642]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:48.642]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:59:48.643]    __dp=0x00000000
[20:59:48.643]    __ap=0x00000000
[20:59:48.643]    __traceout=0x00000001      (SWO Trace)
[20:59:48.643]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:48.643]    __FlashAddr=0x00000000
[20:59:48.643]    __FlashLen=0x00000000
[20:59:48.644]    __FlashArg=0x00000000
[20:59:48.644]    __FlashOp=0x00000000
[20:59:48.644]    __Result=0x00000000
[20:59:48.644]    
[20:59:48.644]    // User-defined
[20:59:48.645]    DbgMCU_CR=0x00000007
[20:59:48.645]    DbgMCU_APB1_Fz=0x00000000
[20:59:48.645]    DbgMCU_APB2_Fz=0x00000000
[20:59:48.645]    TraceClk_Pin=0x00040002
[20:59:48.645]    TraceD0_Pin=0x00040003
[20:59:48.645]    TraceD1_Pin=0x00040004
[20:59:48.646]    TraceD2_Pin=0x00040005
[20:59:48.646]    TraceD3_Pin=0x00040006
[20:59:48.646]  </debugvars>
[20:59:48.646]  
[20:59:48.646]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:59:48.647]    <block atomic="false" info="">
[20:59:48.647]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:59:48.647]        // -> [traceSWO <= 0x00000001]
[20:59:48.647]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:59:48.647]        // -> [traceTPIU <= 0x00000000]
[20:59:48.647]    </block>
[20:59:48.648]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:48.648]      // if-block "traceSWO"
[20:59:48.648]        // =>  TRUE
[20:59:48.648]      <block atomic="false" info="">
[20:59:48.648]        Sequence("DisableTraceSWO");
[20:59:48.648]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:59:48.649]            <block atomic="false" info="">
[20:59:48.649]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:48.649]                // -> [dbgmcu_val <= 0x00000000]
[20:59:48.649]            </block>
[20:59:48.649]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:48.649]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:59:48.650]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:48.650]                // -> [dbgmcu_val <= 0x00000007]
[20:59:48.650]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:59:48.650]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:48.651]            </block>
[20:59:48.651]          </sequence>
[20:59:48.651]      </block>
[20:59:48.651]      // end if-block "traceSWO"
[20:59:48.651]    </control>
[20:59:48.651]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:48.651]      // if-block "traceTPIU"
[20:59:48.651]        // =>  FALSE
[20:59:48.651]      // skip if-block "traceTPIU"
[20:59:48.652]    </control>
[20:59:48.652]  </sequence>
[20:59:48.652]  
[21:29:35.482]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:29:35.482]  
[21:29:35.483]  <debugvars>
[21:29:35.483]    // Pre-defined
[21:29:35.483]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:29:35.483]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:29:35.483]    __dp=0x00000000
[21:29:35.483]    __ap=0x00000000
[21:29:35.484]    __traceout=0x00000001      (SWO Trace)
[21:29:35.484]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:29:35.484]    __FlashAddr=0x00000000
[21:29:35.484]    __FlashLen=0x00000000
[21:29:35.484]    __FlashArg=0x00000000
[21:29:35.485]    __FlashOp=0x00000000
[21:29:35.485]    __Result=0x00000000
[21:29:35.485]    
[21:29:35.485]    // User-defined
[21:29:35.485]    DbgMCU_CR=0x00000007
[21:29:35.485]    DbgMCU_APB1_Fz=0x00000000
[21:29:35.485]    DbgMCU_APB2_Fz=0x00000000
[21:29:35.486]    TraceClk_Pin=0x00040002
[21:29:35.486]    TraceD0_Pin=0x00040003
[21:29:35.486]    TraceD1_Pin=0x00040004
[21:29:35.486]    TraceD2_Pin=0x00040005
[21:29:35.486]    TraceD3_Pin=0x00040006
[21:29:35.486]  </debugvars>
[21:29:35.486]  
[21:29:35.487]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:29:35.487]    <block atomic="false" info="">
[21:29:35.487]      Sequence("CheckID");
[21:29:35.487]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:29:35.487]          <block atomic="false" info="">
[21:29:35.487]            __var pidr1 = 0;
[21:29:35.487]              // -> [pidr1 <= 0x00000000]
[21:29:35.488]            __var pidr2 = 0;
[21:29:35.488]              // -> [pidr2 <= 0x00000000]
[21:29:35.488]            __var jep106id = 0;
[21:29:35.488]              // -> [jep106id <= 0x00000000]
[21:29:35.488]            __var ROMTableBase = 0;
[21:29:35.488]              // -> [ROMTableBase <= 0x00000000]
[21:29:35.488]            __ap = 0;      // AHB-AP
[21:29:35.488]              // -> [__ap <= 0x00000000]
[21:29:35.489]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:29:35.489]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.489]              // -> [ROMTableBase <= 0xE00FD000]
[21:29:35.489]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:29:35.490]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.490]              // -> [pidr1 <= 0x00000004]
[21:29:35.490]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:29:35.491]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.491]              // -> [pidr2 <= 0x0000001A]
[21:29:35.491]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:29:35.491]              // -> [jep106id <= 0x00000020]
[21:29:35.491]          </block>
[21:29:35.491]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:29:35.491]            // if-block "jep106id != 0x20"
[21:29:35.491]              // =>  FALSE
[21:29:35.492]            // skip if-block "jep106id != 0x20"
[21:29:35.492]          </control>
[21:29:35.492]        </sequence>
[21:29:35.492]    </block>
[21:29:35.492]  </sequence>
[21:29:35.492]  
[21:29:35.507]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:29:35.507]  
[21:29:35.508]  <debugvars>
[21:29:35.508]    // Pre-defined
[21:29:35.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:29:35.508]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:29:35.508]    __dp=0x00000000
[21:29:35.508]    __ap=0x00000000
[21:29:35.509]    __traceout=0x00000001      (SWO Trace)
[21:29:35.509]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:29:35.509]    __FlashAddr=0x00000000
[21:29:35.509]    __FlashLen=0x00000000
[21:29:35.509]    __FlashArg=0x00000000
[21:29:35.509]    __FlashOp=0x00000000
[21:29:35.510]    __Result=0x00000000
[21:29:35.510]    
[21:29:35.510]    // User-defined
[21:29:35.510]    DbgMCU_CR=0x00000007
[21:29:35.510]    DbgMCU_APB1_Fz=0x00000000
[21:29:35.511]    DbgMCU_APB2_Fz=0x00000000
[21:29:35.511]    TraceClk_Pin=0x00040002
[21:29:35.511]    TraceD0_Pin=0x00040003
[21:29:35.511]    TraceD1_Pin=0x00040004
[21:29:35.511]    TraceD2_Pin=0x00040005
[21:29:35.511]    TraceD3_Pin=0x00040006
[21:29:35.512]  </debugvars>
[21:29:35.512]  
[21:29:35.512]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:29:35.512]    <block atomic="false" info="">
[21:29:35.512]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:29:35.513]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.513]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:29:35.514]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.514]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:29:35.514]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.514]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:29:35.515]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:29:35.515]    </block>
[21:29:35.515]  </sequence>
[21:29:35.515]  
[21:30:07.028]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:30:07.028]  
[21:30:07.028]  <debugvars>
[21:30:07.028]    // Pre-defined
[21:30:07.029]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:30:07.029]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:30:07.029]    __dp=0x00000000
[21:30:07.029]    __ap=0x00000000
[21:30:07.029]    __traceout=0x00000001      (SWO Trace)
[21:30:07.030]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:30:07.030]    __FlashAddr=0x00000000
[21:30:07.030]    __FlashLen=0x00000000
[21:30:07.030]    __FlashArg=0x00000000
[21:30:07.030]    __FlashOp=0x00000000
[21:30:07.030]    __Result=0x00000000
[21:30:07.031]    
[21:30:07.031]    // User-defined
[21:30:07.031]    DbgMCU_CR=0x00000007
[21:30:07.031]    DbgMCU_APB1_Fz=0x00000000
[21:30:07.031]    DbgMCU_APB2_Fz=0x00000000
[21:30:07.031]    TraceClk_Pin=0x00040002
[21:30:07.031]    TraceD0_Pin=0x00040003
[21:30:07.032]    TraceD1_Pin=0x00040004
[21:30:07.032]    TraceD2_Pin=0x00040005
[21:30:07.032]    TraceD3_Pin=0x00040006
[21:30:07.032]  </debugvars>
[21:30:07.032]  
[21:30:07.032]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:30:07.032]    <block atomic="false" info="">
[21:30:07.033]      Sequence("CheckID");
[21:30:07.033]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:30:07.033]          <block atomic="false" info="">
[21:30:07.033]            __var pidr1 = 0;
[21:30:07.033]              // -> [pidr1 <= 0x00000000]
[21:30:07.033]            __var pidr2 = 0;
[21:30:07.033]              // -> [pidr2 <= 0x00000000]
[21:30:07.034]            __var jep106id = 0;
[21:30:07.034]              // -> [jep106id <= 0x00000000]
[21:30:07.034]            __var ROMTableBase = 0;
[21:30:07.034]              // -> [ROMTableBase <= 0x00000000]
[21:30:07.034]            __ap = 0;      // AHB-AP
[21:30:07.034]              // -> [__ap <= 0x00000000]
[21:30:07.034]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:30:07.035]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.035]              // -> [ROMTableBase <= 0xE00FD000]
[21:30:07.035]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:30:07.035]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.036]              // -> [pidr1 <= 0x00000004]
[21:30:07.036]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:30:07.036]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.036]              // -> [pidr2 <= 0x0000001A]
[21:30:07.036]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:30:07.037]              // -> [jep106id <= 0x00000020]
[21:30:07.037]          </block>
[21:30:07.037]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:30:07.037]            // if-block "jep106id != 0x20"
[21:30:07.037]              // =>  FALSE
[21:30:07.037]            // skip if-block "jep106id != 0x20"
[21:30:07.038]          </control>
[21:30:07.038]        </sequence>
[21:30:07.038]    </block>
[21:30:07.038]  </sequence>
[21:30:07.038]  
[21:30:07.053]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:30:07.053]  
[21:30:07.053]  <debugvars>
[21:30:07.053]    // Pre-defined
[21:30:07.053]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:30:07.054]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:30:07.054]    __dp=0x00000000
[21:30:07.054]    __ap=0x00000000
[21:30:07.054]    __traceout=0x00000001      (SWO Trace)
[21:30:07.054]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:30:07.055]    __FlashAddr=0x00000000
[21:30:07.055]    __FlashLen=0x00000000
[21:30:07.055]    __FlashArg=0x00000000
[21:30:07.055]    __FlashOp=0x00000000
[21:30:07.055]    __Result=0x00000000
[21:30:07.056]    
[21:30:07.056]    // User-defined
[21:30:07.056]    DbgMCU_CR=0x00000007
[21:30:07.056]    DbgMCU_APB1_Fz=0x00000000
[21:30:07.056]    DbgMCU_APB2_Fz=0x00000000
[21:30:07.056]    TraceClk_Pin=0x00040002
[21:30:07.057]    TraceD0_Pin=0x00040003
[21:30:07.057]    TraceD1_Pin=0x00040004
[21:30:07.057]    TraceD2_Pin=0x00040005
[21:30:07.057]    TraceD3_Pin=0x00040006
[21:30:07.057]  </debugvars>
[21:30:07.057]  
[21:30:07.058]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:30:07.058]    <block atomic="false" info="">
[21:30:07.058]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:30:07.058]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.059]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:30:07.059]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.059]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:30:07.060]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.060]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:30:07.060]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.060]    </block>
[21:30:07.061]  </sequence>
[21:30:07.061]  
[21:30:07.077]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:30:07.077]  
[21:30:07.078]  <debugvars>
[21:30:07.078]    // Pre-defined
[21:30:07.078]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:30:07.078]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:30:07.078]    __dp=0x00000000
[21:30:07.078]    __ap=0x00000000
[21:30:07.078]    __traceout=0x00000001      (SWO Trace)
[21:30:07.078]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:30:07.078]    __FlashAddr=0x00000000
[21:30:07.079]    __FlashLen=0x00000000
[21:30:07.079]    __FlashArg=0x00000000
[21:30:07.079]    __FlashOp=0x00000000
[21:30:07.079]    __Result=0x00000000
[21:30:07.079]    
[21:30:07.079]    // User-defined
[21:30:07.079]    DbgMCU_CR=0x00000007
[21:30:07.079]    DbgMCU_APB1_Fz=0x00000000
[21:30:07.080]    DbgMCU_APB2_Fz=0x00000000
[21:30:07.080]    TraceClk_Pin=0x00040002
[21:30:07.080]    TraceD0_Pin=0x00040003
[21:30:07.080]    TraceD1_Pin=0x00040004
[21:30:07.080]    TraceD2_Pin=0x00040005
[21:30:07.080]    TraceD3_Pin=0x00040006
[21:30:07.080]  </debugvars>
[21:30:07.081]  
[21:30:07.081]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:30:07.081]    <block atomic="false" info="">
[21:30:07.081]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:30:07.081]        // -> [traceSWO <= 0x00000001]
[21:30:07.081]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:30:07.081]        // -> [traceTPIU <= 0x00000000]
[21:30:07.081]    </block>
[21:30:07.082]    <control if="traceSWO" while="" timeout="0" info="">
[21:30:07.082]      // if-block "traceSWO"
[21:30:07.082]        // =>  TRUE
[21:30:07.082]      <block atomic="false" info="">
[21:30:07.082]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:30:07.082]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:30:07.083]            <block atomic="false" info="">
[21:30:07.083]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:30:07.083]                // -> [dbgmcu_val <= 0x00000000]
[21:30:07.083]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:30:07.083]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:30:07.083]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:30:07.083]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.084]                // -> [dbgmcu_val <= 0x00000007]
[21:30:07.084]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:30:07.084]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:30:07.084]              Sequence("ConfigureTraceSWOPin");
[21:30:07.084]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:30:07.085]                  <block atomic="false" info="">
[21:30:07.085]                    __var pin     = 0;
[21:30:07.085]                      // -> [pin <= 0x00000000]
[21:30:07.085]                    __var port    = 0;
[21:30:07.085]                      // -> [port <= 0x00000000]
[21:30:07.085]                    __var portAdr = 0;
[21:30:07.085]                      // -> [portAdr <= 0x00000000]
[21:30:07.086]                    __var pos     = 0;
[21:30:07.086]                      // -> [pos <= 0x00000000]
[21:30:07.086]                    __var SWO_Pin = 0x00010003;          // PB3
[21:30:07.086]                      // -> [SWO_Pin <= 0x00010003]
[21:30:07.086]                  </block>
[21:30:07.086]                  <block atomic="false" info="configure SWO">
[21:30:07.086]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:30:07.086]                      // -> [pin <= 0x00000003]
[21:30:07.087]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:30:07.087]                      // -> [port <= 0x00000001]
[21:30:07.087]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:30:07.087]                      // -> [portAdr <= 0x40020400]
[21:30:07.087]                    pos = pin * 2;
[21:30:07.088]                      // -> [pos <= 0x00000006]
[21:30:07.088]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:30:07.088]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.089]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.089]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:30:07.090]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.090]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.090]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:30:07.091]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.091]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.091]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:30:07.092]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.092]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.092]                  </block>
[21:30:07.093]                  <control if="pin <  8" while="" timeout="0" info="">
[21:30:07.093]                    // if-block "pin <  8"
[21:30:07.093]                      // =>  TRUE
[21:30:07.093]                    <block atomic="false" info="">
[21:30:07.093]                      pos = ((pin    ) & 7) * 4;
[21:30:07.093]                        // -> [pos <= 0x0000000C]
[21:30:07.093]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:30:07.094]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.094]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.094]                    </block>
[21:30:07.094]                    // end if-block "pin <  8"
[21:30:07.095]                  </control>
[21:30:07.095]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:30:07.095]                    // if-block "pin >= 8"
[21:30:07.095]                      // =>  FALSE
[21:30:07.095]                    // skip if-block "pin >= 8"
[21:30:07.095]                  </control>
[21:30:07.095]                </sequence>
[21:30:07.095]            </block>
[21:30:07.096]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:30:07.096]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:30:07.096]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.096]            </block>
[21:30:07.096]          </sequence>
[21:30:07.097]      </block>
[21:30:07.097]      // end if-block "traceSWO"
[21:30:07.097]    </control>
[21:30:07.097]    <control if="traceTPIU" while="" timeout="0" info="">
[21:30:07.097]      // if-block "traceTPIU"
[21:30:07.097]        // =>  FALSE
[21:30:07.097]      // skip if-block "traceTPIU"
[21:30:07.097]    </control>
[21:30:07.098]  </sequence>
[21:30:07.098]  
[21:30:07.101]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:30:07.101]  
[21:30:07.102]  <debugvars>
[21:30:07.102]    // Pre-defined
[21:30:07.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:30:07.102]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:30:07.102]    __dp=0x00000000
[21:30:07.102]    __ap=0x00000000
[21:30:07.102]    __traceout=0x00000001      (SWO Trace)
[21:30:07.103]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:30:07.103]    __FlashAddr=0x00000000
[21:30:07.103]    __FlashLen=0x00000000
[21:30:07.103]    __FlashArg=0x00000000
[21:30:07.103]    __FlashOp=0x00000000
[21:30:07.103]    __Result=0x00000000
[21:30:07.103]    
[21:30:07.103]    // User-defined
[21:30:07.104]    DbgMCU_CR=0x00000007
[21:30:07.104]    DbgMCU_APB1_Fz=0x00000000
[21:30:07.104]    DbgMCU_APB2_Fz=0x00000000
[21:30:07.104]    TraceClk_Pin=0x00040002
[21:30:07.104]    TraceD0_Pin=0x00040003
[21:30:07.104]    TraceD1_Pin=0x00040004
[21:30:07.105]    TraceD2_Pin=0x00040005
[21:30:07.105]    TraceD3_Pin=0x00040006
[21:30:07.105]  </debugvars>
[21:30:07.105]  
[21:30:07.105]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:30:07.105]    <block atomic="false" info="">
[21:30:07.105]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:30:07.106]        // -> [traceSWO <= 0x00000001]
[21:30:07.106]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:30:07.106]        // -> [traceTPIU <= 0x00000000]
[21:30:07.106]    </block>
[21:30:07.106]    <control if="traceSWO" while="" timeout="0" info="">
[21:30:07.106]      // if-block "traceSWO"
[21:30:07.106]        // =>  TRUE
[21:30:07.107]      <block atomic="false" info="">
[21:30:07.107]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:30:07.107]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:30:07.107]            <block atomic="false" info="">
[21:30:07.107]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:30:07.107]                // -> [dbgmcu_val <= 0x00000000]
[21:30:07.107]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:30:07.107]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:30:07.107]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:30:07.108]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.108]                // -> [dbgmcu_val <= 0x00000007]
[21:30:07.108]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:30:07.108]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:30:07.108]              Sequence("ConfigureTraceSWOPin");
[21:30:07.108]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:30:07.109]                  <block atomic="false" info="">
[21:30:07.109]                    __var pin     = 0;
[21:30:07.109]                      // -> [pin <= 0x00000000]
[21:30:07.109]                    __var port    = 0;
[21:30:07.109]                      // -> [port <= 0x00000000]
[21:30:07.109]                    __var portAdr = 0;
[21:30:07.109]                      // -> [portAdr <= 0x00000000]
[21:30:07.110]                    __var pos     = 0;
[21:30:07.110]                      // -> [pos <= 0x00000000]
[21:30:07.110]                    __var SWO_Pin = 0x00010003;          // PB3
[21:30:07.110]                      // -> [SWO_Pin <= 0x00010003]
[21:30:07.110]                  </block>
[21:30:07.110]                  <block atomic="false" info="configure SWO">
[21:30:07.110]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:30:07.110]                      // -> [pin <= 0x00000003]
[21:30:07.111]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:30:07.111]                      // -> [port <= 0x00000001]
[21:30:07.111]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:30:07.111]                      // -> [portAdr <= 0x40020400]
[21:30:07.111]                    pos = pin * 2;
[21:30:07.111]                      // -> [pos <= 0x00000006]
[21:30:07.111]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:30:07.112]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.112]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.112]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:30:07.113]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.113]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.113]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:30:07.114]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.114]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.114]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:30:07.115]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.115]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.115]                  </block>
[21:30:07.115]                  <control if="pin <  8" while="" timeout="0" info="">
[21:30:07.116]                    // if-block "pin <  8"
[21:30:07.116]                      // =>  TRUE
[21:30:07.116]                    <block atomic="false" info="">
[21:30:07.116]                      pos = ((pin    ) & 7) * 4;
[21:30:07.116]                        // -> [pos <= 0x0000000C]
[21:30:07.116]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:30:07.117]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.117]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.117]                    </block>
[21:30:07.117]                    // end if-block "pin <  8"
[21:30:07.117]                  </control>
[21:30:07.117]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:30:07.118]                    // if-block "pin >= 8"
[21:30:07.118]                      // =>  FALSE
[21:30:07.118]                    // skip if-block "pin >= 8"
[21:30:07.118]                  </control>
[21:30:07.118]                </sequence>
[21:30:07.118]            </block>
[21:30:07.118]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:30:07.118]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:30:07.119]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.119]            </block>
[21:30:07.119]          </sequence>
[21:30:07.119]      </block>
[21:30:07.119]      // end if-block "traceSWO"
[21:30:07.120]    </control>
[21:30:07.120]    <control if="traceTPIU" while="" timeout="0" info="">
[21:30:07.120]      // if-block "traceTPIU"
[21:30:07.120]        // =>  FALSE
[21:30:07.120]      // skip if-block "traceTPIU"
[21:30:07.120]    </control>
[21:30:07.120]  </sequence>
[21:30:07.120]  
[21:30:07.330]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:30:07.330]  
[21:30:07.330]  <debugvars>
[21:30:07.330]    // Pre-defined
[21:30:07.330]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:30:07.330]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:30:07.330]    __dp=0x00000000
[21:30:07.331]    __ap=0x00000000
[21:30:07.331]    __traceout=0x00000001      (SWO Trace)
[21:30:07.331]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:30:07.331]    __FlashAddr=0x00000000
[21:30:07.331]    __FlashLen=0x00000000
[21:30:07.331]    __FlashArg=0x00000000
[21:30:07.331]    __FlashOp=0x00000000
[21:30:07.332]    __Result=0x00000000
[21:30:07.332]    
[21:30:07.332]    // User-defined
[21:30:07.332]    DbgMCU_CR=0x00000007
[21:30:07.332]    DbgMCU_APB1_Fz=0x00000000
[21:30:07.332]    DbgMCU_APB2_Fz=0x00000000
[21:30:07.332]    TraceClk_Pin=0x00040002
[21:30:07.333]    TraceD0_Pin=0x00040003
[21:30:07.333]    TraceD1_Pin=0x00040004
[21:30:07.333]    TraceD2_Pin=0x00040005
[21:30:07.333]    TraceD3_Pin=0x00040006
[21:30:07.333]  </debugvars>
[21:30:07.333]  
[21:30:07.333]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:30:07.333]    <block atomic="false" info="">
[21:30:07.334]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:30:07.334]        // -> [traceSWO <= 0x00000001]
[21:30:07.334]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:30:07.334]        // -> [traceTPIU <= 0x00000000]
[21:30:07.334]    </block>
[21:30:07.334]    <control if="traceSWO" while="" timeout="0" info="">
[21:30:07.334]      // if-block "traceSWO"
[21:30:07.334]        // =>  TRUE
[21:30:07.335]      <block atomic="false" info="">
[21:30:07.335]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:30:07.335]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:30:07.335]            <block atomic="false" info="">
[21:30:07.335]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:30:07.335]                // -> [dbgmcu_val <= 0x00000000]
[21:30:07.336]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:30:07.336]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:30:07.336]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:30:07.336]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.336]                // -> [dbgmcu_val <= 0x00000007]
[21:30:07.336]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:30:07.337]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:30:07.337]              Sequence("ConfigureTraceSWOPin");
[21:30:07.337]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:30:07.337]                  <block atomic="false" info="">
[21:30:07.337]                    __var pin     = 0;
[21:30:07.337]                      // -> [pin <= 0x00000000]
[21:30:07.337]                    __var port    = 0;
[21:30:07.338]                      // -> [port <= 0x00000000]
[21:30:07.338]                    __var portAdr = 0;
[21:30:07.338]                      // -> [portAdr <= 0x00000000]
[21:30:07.338]                    __var pos     = 0;
[21:30:07.338]                      // -> [pos <= 0x00000000]
[21:30:07.338]                    __var SWO_Pin = 0x00010003;          // PB3
[21:30:07.338]                      // -> [SWO_Pin <= 0x00010003]
[21:30:07.339]                  </block>
[21:30:07.339]                  <block atomic="false" info="configure SWO">
[21:30:07.339]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:30:07.339]                      // -> [pin <= 0x00000003]
[21:30:07.339]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:30:07.339]                      // -> [port <= 0x00000001]
[21:30:07.339]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:30:07.339]                      // -> [portAdr <= 0x40020400]
[21:30:07.340]                    pos = pin * 2;
[21:30:07.340]                      // -> [pos <= 0x00000006]
[21:30:07.341]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:30:07.341]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.341]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.342]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:30:07.342]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.342]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.343]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:30:07.343]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.344]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.344]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:30:07.344]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.345]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.345]                  </block>
[21:30:07.345]                  <control if="pin <  8" while="" timeout="0" info="">
[21:30:07.345]                    // if-block "pin <  8"
[21:30:07.345]                      // =>  TRUE
[21:30:07.345]                    <block atomic="false" info="">
[21:30:07.345]                      pos = ((pin    ) & 7) * 4;
[21:30:07.345]                        // -> [pos <= 0x0000000C]
[21:30:07.345]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:30:07.346]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.346]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.346]                    </block>
[21:30:07.346]                    // end if-block "pin <  8"
[21:30:07.347]                  </control>
[21:30:07.347]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:30:07.347]                    // if-block "pin >= 8"
[21:30:07.347]                      // =>  FALSE
[21:30:07.347]                    // skip if-block "pin >= 8"
[21:30:07.347]                  </control>
[21:30:07.347]                </sequence>
[21:30:07.347]            </block>
[21:30:07.347]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:30:07.348]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:30:07.348]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:07.348]            </block>
[21:30:07.348]          </sequence>
[21:30:07.349]      </block>
[21:30:07.349]      // end if-block "traceSWO"
[21:30:07.349]    </control>
[21:30:07.349]    <control if="traceTPIU" while="" timeout="0" info="">
[21:30:07.349]      // if-block "traceTPIU"
[21:30:07.349]        // =>  FALSE
[21:30:07.349]      // skip if-block "traceTPIU"
[21:30:07.349]    </control>
[21:30:07.349]  </sequence>
[21:30:07.350]  
[21:31:04.441]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:31:04.441]  
[21:31:04.442]  <debugvars>
[21:31:04.443]    // Pre-defined
[21:31:04.443]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:04.444]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:31:04.444]    __dp=0x00000000
[21:31:04.445]    __ap=0x00000000
[21:31:04.445]    __traceout=0x00000001      (SWO Trace)
[21:31:04.446]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:04.446]    __FlashAddr=0x00000000
[21:31:04.447]    __FlashLen=0x00000000
[21:31:04.447]    __FlashArg=0x00000000
[21:31:04.447]    __FlashOp=0x00000000
[21:31:04.448]    __Result=0x00000000
[21:31:04.448]    
[21:31:04.448]    // User-defined
[21:31:04.449]    DbgMCU_CR=0x00000007
[21:31:04.449]    DbgMCU_APB1_Fz=0x00000000
[21:31:04.449]    DbgMCU_APB2_Fz=0x00000000
[21:31:04.450]    TraceClk_Pin=0x00040002
[21:31:04.450]    TraceD0_Pin=0x00040003
[21:31:04.450]    TraceD1_Pin=0x00040004
[21:31:04.451]    TraceD2_Pin=0x00040005
[21:31:04.451]    TraceD3_Pin=0x00040006
[21:31:04.452]  </debugvars>
[21:31:04.452]  
[21:31:04.452]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:31:04.453]    <block atomic="false" info="">
[21:31:04.453]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:31:04.454]        // -> [traceSWO <= 0x00000001]
[21:31:04.454]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:31:04.455]        // -> [traceTPIU <= 0x00000000]
[21:31:04.455]    </block>
[21:31:04.455]    <control if="traceSWO" while="" timeout="0" info="">
[21:31:04.456]      // if-block "traceSWO"
[21:31:04.456]        // =>  TRUE
[21:31:04.456]      <block atomic="false" info="">
[21:31:04.457]        Sequence("DisableTraceSWO");
[21:31:04.457]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:31:04.458]            <block atomic="false" info="">
[21:31:04.458]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:31:04.458]                // -> [dbgmcu_val <= 0x00000000]
[21:31:04.459]            </block>
[21:31:04.459]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:31:04.459]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:31:04.460]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:31:04.461]                // -> [dbgmcu_val <= 0x00000007]
[21:31:04.461]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:31:04.462]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:04.462]            </block>
[21:31:04.462]          </sequence>
[21:31:04.462]      </block>
[21:31:04.463]      // end if-block "traceSWO"
[21:31:04.463]    </control>
[21:31:04.463]    <control if="traceTPIU" while="" timeout="0" info="">
[21:31:04.463]      // if-block "traceTPIU"
[21:31:04.463]        // =>  FALSE
[21:31:04.464]      // skip if-block "traceTPIU"
[21:31:04.464]    </control>
[21:31:04.464]  </sequence>
[21:31:04.464]  
[21:31:13.336]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:31:13.336]  
[21:31:13.336]  <debugvars>
[21:31:13.336]    // Pre-defined
[21:31:13.336]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:13.337]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:31:13.337]    __dp=0x00000000
[21:31:13.337]    __ap=0x00000000
[21:31:13.337]    __traceout=0x00000001      (SWO Trace)
[21:31:13.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:13.338]    __FlashAddr=0x00000000
[21:31:13.338]    __FlashLen=0x00000000
[21:31:13.338]    __FlashArg=0x00000000
[21:31:13.338]    __FlashOp=0x00000000
[21:31:13.338]    __Result=0x00000000
[21:31:13.338]    
[21:31:13.338]    // User-defined
[21:31:13.339]    DbgMCU_CR=0x00000007
[21:31:13.339]    DbgMCU_APB1_Fz=0x00000000
[21:31:13.339]    DbgMCU_APB2_Fz=0x00000000
[21:31:13.339]    TraceClk_Pin=0x00040002
[21:31:13.339]    TraceD0_Pin=0x00040003
[21:31:13.340]    TraceD1_Pin=0x00040004
[21:31:13.340]    TraceD2_Pin=0x00040005
[21:31:13.340]    TraceD3_Pin=0x00040006
[21:31:13.340]  </debugvars>
[21:31:13.340]  
[21:31:13.341]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:31:13.341]    <block atomic="false" info="">
[21:31:13.341]      Sequence("CheckID");
[21:31:13.341]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:31:13.341]          <block atomic="false" info="">
[21:31:13.342]            __var pidr1 = 0;
[21:31:13.342]              // -> [pidr1 <= 0x00000000]
[21:31:13.342]            __var pidr2 = 0;
[21:31:13.342]              // -> [pidr2 <= 0x00000000]
[21:31:13.342]            __var jep106id = 0;
[21:31:13.342]              // -> [jep106id <= 0x00000000]
[21:31:13.343]            __var ROMTableBase = 0;
[21:31:13.343]              // -> [ROMTableBase <= 0x00000000]
[21:31:13.343]            __ap = 0;      // AHB-AP
[21:31:13.343]              // -> [__ap <= 0x00000000]
[21:31:13.343]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:31:13.344]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.344]              // -> [ROMTableBase <= 0xE00FD000]
[21:31:13.344]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:31:13.345]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.345]              // -> [pidr1 <= 0x00000004]
[21:31:13.345]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:31:13.346]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.346]              // -> [pidr2 <= 0x0000001A]
[21:31:13.346]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:31:13.346]              // -> [jep106id <= 0x00000020]
[21:31:13.346]          </block>
[21:31:13.346]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:31:13.347]            // if-block "jep106id != 0x20"
[21:31:13.347]              // =>  FALSE
[21:31:13.347]            // skip if-block "jep106id != 0x20"
[21:31:13.347]          </control>
[21:31:13.347]        </sequence>
[21:31:13.347]    </block>
[21:31:13.347]  </sequence>
[21:31:13.348]  
[21:31:13.363]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:31:13.363]  
[21:31:13.364]  <debugvars>
[21:31:13.364]    // Pre-defined
[21:31:13.364]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:13.364]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:31:13.364]    __dp=0x00000000
[21:31:13.364]    __ap=0x00000000
[21:31:13.364]    __traceout=0x00000001      (SWO Trace)
[21:31:13.365]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:13.365]    __FlashAddr=0x00000000
[21:31:13.365]    __FlashLen=0x00000000
[21:31:13.365]    __FlashArg=0x00000000
[21:31:13.365]    __FlashOp=0x00000000
[21:31:13.365]    __Result=0x00000000
[21:31:13.366]    
[21:31:13.366]    // User-defined
[21:31:13.366]    DbgMCU_CR=0x00000007
[21:31:13.366]    DbgMCU_APB1_Fz=0x00000000
[21:31:13.366]    DbgMCU_APB2_Fz=0x00000000
[21:31:13.366]    TraceClk_Pin=0x00040002
[21:31:13.366]    TraceD0_Pin=0x00040003
[21:31:13.366]    TraceD1_Pin=0x00040004
[21:31:13.367]    TraceD2_Pin=0x00040005
[21:31:13.367]    TraceD3_Pin=0x00040006
[21:31:13.367]  </debugvars>
[21:31:13.367]  
[21:31:13.367]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:31:13.367]    <block atomic="false" info="">
[21:31:13.367]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:31:13.368]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.368]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:31:13.368]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.368]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:31:13.368]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.368]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:31:13.369]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:13.369]    </block>
[21:31:13.369]  </sequence>
[21:31:13.369]  
[21:31:44.791]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:31:44.791]  
[21:31:44.791]  <debugvars>
[21:31:44.791]    // Pre-defined
[21:31:44.792]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:44.792]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:31:44.792]    __dp=0x00000000
[21:31:44.792]    __ap=0x00000000
[21:31:44.792]    __traceout=0x00000001      (SWO Trace)
[21:31:44.793]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:44.793]    __FlashAddr=0x00000000
[21:31:44.793]    __FlashLen=0x00000000
[21:31:44.793]    __FlashArg=0x00000000
[21:31:44.793]    __FlashOp=0x00000000
[21:31:44.793]    __Result=0x00000000
[21:31:44.793]    
[21:31:44.793]    // User-defined
[21:31:44.794]    DbgMCU_CR=0x00000007
[21:31:44.794]    DbgMCU_APB1_Fz=0x00000000
[21:31:44.794]    DbgMCU_APB2_Fz=0x00000000
[21:31:44.794]    TraceClk_Pin=0x00040002
[21:31:44.794]    TraceD0_Pin=0x00040003
[21:31:44.795]    TraceD1_Pin=0x00040004
[21:31:44.795]    TraceD2_Pin=0x00040005
[21:31:44.795]    TraceD3_Pin=0x00040006
[21:31:44.795]  </debugvars>
[21:31:44.795]  
[21:31:44.795]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:31:44.796]    <block atomic="false" info="">
[21:31:44.796]      Sequence("CheckID");
[21:31:44.796]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:31:44.796]          <block atomic="false" info="">
[21:31:44.796]            __var pidr1 = 0;
[21:31:44.797]              // -> [pidr1 <= 0x00000000]
[21:31:44.797]            __var pidr2 = 0;
[21:31:44.797]              // -> [pidr2 <= 0x00000000]
[21:31:44.797]            __var jep106id = 0;
[21:31:44.797]              // -> [jep106id <= 0x00000000]
[21:31:44.797]            __var ROMTableBase = 0;
[21:31:44.797]              // -> [ROMTableBase <= 0x00000000]
[21:31:44.798]            __ap = 0;      // AHB-AP
[21:31:44.798]              // -> [__ap <= 0x00000000]
[21:31:44.798]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:31:44.798]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.798]              // -> [ROMTableBase <= 0xE00FD000]
[21:31:44.799]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:31:44.799]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.799]              // -> [pidr1 <= 0x00000004]
[21:31:44.799]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:31:44.800]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.800]              // -> [pidr2 <= 0x0000001A]
[21:31:44.800]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:31:44.800]              // -> [jep106id <= 0x00000020]
[21:31:44.800]          </block>
[21:31:44.801]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:31:44.801]            // if-block "jep106id != 0x20"
[21:31:44.801]              // =>  FALSE
[21:31:44.801]            // skip if-block "jep106id != 0x20"
[21:31:44.801]          </control>
[21:31:44.801]        </sequence>
[21:31:44.801]    </block>
[21:31:44.801]  </sequence>
[21:31:44.802]  
[21:31:44.816]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:31:44.816]  
[21:31:44.816]  <debugvars>
[21:31:44.817]    // Pre-defined
[21:31:44.817]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:44.817]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:31:44.817]    __dp=0x00000000
[21:31:44.817]    __ap=0x00000000
[21:31:44.818]    __traceout=0x00000001      (SWO Trace)
[21:31:44.818]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:44.818]    __FlashAddr=0x00000000
[21:31:44.818]    __FlashLen=0x00000000
[21:31:44.818]    __FlashArg=0x00000000
[21:31:44.818]    __FlashOp=0x00000000
[21:31:44.819]    __Result=0x00000000
[21:31:44.819]    
[21:31:44.819]    // User-defined
[21:31:44.819]    DbgMCU_CR=0x00000007
[21:31:44.819]    DbgMCU_APB1_Fz=0x00000000
[21:31:44.819]    DbgMCU_APB2_Fz=0x00000000
[21:31:44.820]    TraceClk_Pin=0x00040002
[21:31:44.820]    TraceD0_Pin=0x00040003
[21:31:44.820]    TraceD1_Pin=0x00040004
[21:31:44.820]    TraceD2_Pin=0x00040005
[21:31:44.821]    TraceD3_Pin=0x00040006
[21:31:44.821]  </debugvars>
[21:31:44.821]  
[21:31:44.821]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:31:44.821]    <block atomic="false" info="">
[21:31:44.821]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:31:44.822]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.822]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:31:44.823]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.823]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:31:44.823]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.824]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:31:44.824]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.824]    </block>
[21:31:44.824]  </sequence>
[21:31:44.825]  
[21:31:44.841]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:31:44.841]  
[21:31:44.841]  <debugvars>
[21:31:44.841]    // Pre-defined
[21:31:44.842]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:44.842]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:31:44.842]    __dp=0x00000000
[21:31:44.842]    __ap=0x00000000
[21:31:44.842]    __traceout=0x00000001      (SWO Trace)
[21:31:44.842]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:44.843]    __FlashAddr=0x00000000
[21:31:44.843]    __FlashLen=0x00000000
[21:31:44.843]    __FlashArg=0x00000000
[21:31:44.843]    __FlashOp=0x00000000
[21:31:44.843]    __Result=0x00000000
[21:31:44.844]    
[21:31:44.844]    // User-defined
[21:31:44.844]    DbgMCU_CR=0x00000007
[21:31:44.844]    DbgMCU_APB1_Fz=0x00000000
[21:31:44.844]    DbgMCU_APB2_Fz=0x00000000
[21:31:44.844]    TraceClk_Pin=0x00040002
[21:31:44.845]    TraceD0_Pin=0x00040003
[21:31:44.845]    TraceD1_Pin=0x00040004
[21:31:44.845]    TraceD2_Pin=0x00040005
[21:31:44.845]    TraceD3_Pin=0x00040006
[21:31:44.845]  </debugvars>
[21:31:44.845]  
[21:31:44.846]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:31:44.846]    <block atomic="false" info="">
[21:31:44.846]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:31:44.846]        // -> [traceSWO <= 0x00000001]
[21:31:44.846]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:31:44.846]        // -> [traceTPIU <= 0x00000000]
[21:31:44.847]    </block>
[21:31:44.847]    <control if="traceSWO" while="" timeout="0" info="">
[21:31:44.847]      // if-block "traceSWO"
[21:31:44.847]        // =>  TRUE
[21:31:44.847]      <block atomic="false" info="">
[21:31:44.848]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:31:44.848]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:31:44.848]            <block atomic="false" info="">
[21:31:44.848]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:31:44.848]                // -> [dbgmcu_val <= 0x00000000]
[21:31:44.848]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:31:44.849]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:31:44.849]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:31:44.849]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.849]                // -> [dbgmcu_val <= 0x00000007]
[21:31:44.850]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:31:44.850]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:31:44.850]              Sequence("ConfigureTraceSWOPin");
[21:31:44.850]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:31:44.850]                  <block atomic="false" info="">
[21:31:44.850]                    __var pin     = 0;
[21:31:44.851]                      // -> [pin <= 0x00000000]
[21:31:44.851]                    __var port    = 0;
[21:31:44.851]                      // -> [port <= 0x00000000]
[21:31:44.851]                    __var portAdr = 0;
[21:31:44.851]                      // -> [portAdr <= 0x00000000]
[21:31:44.851]                    __var pos     = 0;
[21:31:44.852]                      // -> [pos <= 0x00000000]
[21:31:44.852]                    __var SWO_Pin = 0x00010003;          // PB3
[21:31:44.852]                      // -> [SWO_Pin <= 0x00010003]
[21:31:44.852]                  </block>
[21:31:44.852]                  <block atomic="false" info="configure SWO">
[21:31:44.852]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:31:44.853]                      // -> [pin <= 0x00000003]
[21:31:44.853]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:31:44.853]                      // -> [port <= 0x00000001]
[21:31:44.853]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:31:44.853]                      // -> [portAdr <= 0x40020400]
[21:31:44.853]                    pos = pin * 2;
[21:31:44.853]                      // -> [pos <= 0x00000006]
[21:31:44.853]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:31:44.854]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.854]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.854]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:31:44.855]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.856]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.856]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:31:44.856]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.857]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.857]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:31:44.857]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.858]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.858]                  </block>
[21:31:44.858]                  <control if="pin <  8" while="" timeout="0" info="">
[21:31:44.858]                    // if-block "pin <  8"
[21:31:44.858]                      // =>  TRUE
[21:31:44.858]                    <block atomic="false" info="">
[21:31:44.859]                      pos = ((pin    ) & 7) * 4;
[21:31:44.859]                        // -> [pos <= 0x0000000C]
[21:31:44.859]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:31:44.859]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.860]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.860]                    </block>
[21:31:44.860]                    // end if-block "pin <  8"
[21:31:44.860]                  </control>
[21:31:44.860]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:31:44.860]                    // if-block "pin >= 8"
[21:31:44.861]                      // =>  FALSE
[21:31:44.861]                    // skip if-block "pin >= 8"
[21:31:44.861]                  </control>
[21:31:44.861]                </sequence>
[21:31:44.861]            </block>
[21:31:44.861]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:31:44.861]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:31:44.862]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.862]            </block>
[21:31:44.862]          </sequence>
[21:31:44.862]      </block>
[21:31:44.862]      // end if-block "traceSWO"
[21:31:44.862]    </control>
[21:31:44.862]    <control if="traceTPIU" while="" timeout="0" info="">
[21:31:44.863]      // if-block "traceTPIU"
[21:31:44.863]        // =>  FALSE
[21:31:44.863]      // skip if-block "traceTPIU"
[21:31:44.863]    </control>
[21:31:44.863]  </sequence>
[21:31:44.863]  
[21:31:44.867]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:31:44.867]  
[21:31:44.867]  <debugvars>
[21:31:44.868]    // Pre-defined
[21:31:44.868]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:44.868]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:31:44.868]    __dp=0x00000000
[21:31:44.868]    __ap=0x00000000
[21:31:44.868]    __traceout=0x00000001      (SWO Trace)
[21:31:44.869]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:44.869]    __FlashAddr=0x00000000
[21:31:44.869]    __FlashLen=0x00000000
[21:31:44.869]    __FlashArg=0x00000000
[21:31:44.869]    __FlashOp=0x00000000
[21:31:44.870]    __Result=0x00000000
[21:31:44.870]    
[21:31:44.870]    // User-defined
[21:31:44.870]    DbgMCU_CR=0x00000007
[21:31:44.870]    DbgMCU_APB1_Fz=0x00000000
[21:31:44.870]    DbgMCU_APB2_Fz=0x00000000
[21:31:44.870]    TraceClk_Pin=0x00040002
[21:31:44.871]    TraceD0_Pin=0x00040003
[21:31:44.871]    TraceD1_Pin=0x00040004
[21:31:44.871]    TraceD2_Pin=0x00040005
[21:31:44.871]    TraceD3_Pin=0x00040006
[21:31:44.871]  </debugvars>
[21:31:44.872]  
[21:31:44.872]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:31:44.872]    <block atomic="false" info="">
[21:31:44.872]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:31:44.872]        // -> [traceSWO <= 0x00000001]
[21:31:44.872]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:31:44.872]        // -> [traceTPIU <= 0x00000000]
[21:31:44.873]    </block>
[21:31:44.873]    <control if="traceSWO" while="" timeout="0" info="">
[21:31:44.873]      // if-block "traceSWO"
[21:31:44.873]        // =>  TRUE
[21:31:44.873]      <block atomic="false" info="">
[21:31:44.874]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:31:44.874]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:31:44.874]            <block atomic="false" info="">
[21:31:44.874]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:31:44.874]                // -> [dbgmcu_val <= 0x00000000]
[21:31:44.874]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:31:44.874]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:31:44.874]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:31:44.875]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.875]                // -> [dbgmcu_val <= 0x00000007]
[21:31:44.875]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:31:44.876]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:31:44.876]              Sequence("ConfigureTraceSWOPin");
[21:31:44.876]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:31:44.876]                  <block atomic="false" info="">
[21:31:44.876]                    __var pin     = 0;
[21:31:44.876]                      // -> [pin <= 0x00000000]
[21:31:44.876]                    __var port    = 0;
[21:31:44.877]                      // -> [port <= 0x00000000]
[21:31:44.877]                    __var portAdr = 0;
[21:31:44.877]                      // -> [portAdr <= 0x00000000]
[21:31:44.877]                    __var pos     = 0;
[21:31:44.877]                      // -> [pos <= 0x00000000]
[21:31:44.877]                    __var SWO_Pin = 0x00010003;          // PB3
[21:31:44.877]                      // -> [SWO_Pin <= 0x00010003]
[21:31:44.877]                  </block>
[21:31:44.878]                  <block atomic="false" info="configure SWO">
[21:31:44.878]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:31:44.878]                      // -> [pin <= 0x00000003]
[21:31:44.878]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:31:44.878]                      // -> [port <= 0x00000001]
[21:31:44.878]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:31:44.878]                      // -> [portAdr <= 0x40020400]
[21:31:44.878]                    pos = pin * 2;
[21:31:44.879]                      // -> [pos <= 0x00000006]
[21:31:44.879]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:31:44.879]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.880]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.880]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:31:44.881]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.881]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.881]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:31:44.882]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.882]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.882]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:31:44.883]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.883]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.883]                  </block>
[21:31:44.883]                  <control if="pin <  8" while="" timeout="0" info="">
[21:31:44.883]                    // if-block "pin <  8"
[21:31:44.884]                      // =>  TRUE
[21:31:44.884]                    <block atomic="false" info="">
[21:31:44.884]                      pos = ((pin    ) & 7) * 4;
[21:31:44.884]                        // -> [pos <= 0x0000000C]
[21:31:44.884]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:31:44.884]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.885]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.885]                    </block>
[21:31:44.885]                    // end if-block "pin <  8"
[21:31:44.885]                  </control>
[21:31:44.885]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:31:44.885]                    // if-block "pin >= 8"
[21:31:44.886]                      // =>  FALSE
[21:31:44.886]                    // skip if-block "pin >= 8"
[21:31:44.886]                  </control>
[21:31:44.886]                </sequence>
[21:31:44.886]            </block>
[21:31:44.886]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:31:44.886]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:31:44.887]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:44.887]            </block>
[21:31:44.887]          </sequence>
[21:31:44.887]      </block>
[21:31:44.887]      // end if-block "traceSWO"
[21:31:44.887]    </control>
[21:31:44.888]    <control if="traceTPIU" while="" timeout="0" info="">
[21:31:44.888]      // if-block "traceTPIU"
[21:31:44.888]        // =>  FALSE
[21:31:44.888]      // skip if-block "traceTPIU"
[21:31:44.888]    </control>
[21:31:44.888]  </sequence>
[21:31:44.888]  
[21:31:45.101]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:31:45.101]  
[21:31:45.102]  <debugvars>
[21:31:45.102]    // Pre-defined
[21:31:45.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:31:45.102]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:31:45.103]    __dp=0x00000000
[21:31:45.103]    __ap=0x00000000
[21:31:45.103]    __traceout=0x00000001      (SWO Trace)
[21:31:45.103]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:31:45.103]    __FlashAddr=0x00000000
[21:31:45.103]    __FlashLen=0x00000000
[21:31:45.104]    __FlashArg=0x00000000
[21:31:45.104]    __FlashOp=0x00000000
[21:31:45.104]    __Result=0x00000000
[21:31:45.104]    
[21:31:45.104]    // User-defined
[21:31:45.104]    DbgMCU_CR=0x00000007
[21:31:45.105]    DbgMCU_APB1_Fz=0x00000000
[21:31:45.105]    DbgMCU_APB2_Fz=0x00000000
[21:31:45.105]    TraceClk_Pin=0x00040002
[21:31:45.105]    TraceD0_Pin=0x00040003
[21:31:45.105]    TraceD1_Pin=0x00040004
[21:31:45.106]    TraceD2_Pin=0x00040005
[21:31:45.106]    TraceD3_Pin=0x00040006
[21:31:45.106]  </debugvars>
[21:31:45.106]  
[21:31:45.106]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:31:45.107]    <block atomic="false" info="">
[21:31:45.107]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:31:45.107]        // -> [traceSWO <= 0x00000001]
[21:31:45.107]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:31:45.107]        // -> [traceTPIU <= 0x00000000]
[21:31:45.108]    </block>
[21:31:45.108]    <control if="traceSWO" while="" timeout="0" info="">
[21:31:45.108]      // if-block "traceSWO"
[21:31:45.108]        // =>  TRUE
[21:31:45.108]      <block atomic="false" info="">
[21:31:45.109]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:31:45.109]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:31:45.109]            <block atomic="false" info="">
[21:31:45.109]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:31:45.109]                // -> [dbgmcu_val <= 0x00000000]
[21:31:45.109]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:31:45.110]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:31:45.110]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:31:45.110]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.111]                // -> [dbgmcu_val <= 0x00000007]
[21:31:45.111]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:31:45.111]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:31:45.111]              Sequence("ConfigureTraceSWOPin");
[21:31:45.111]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:31:45.111]                  <block atomic="false" info="">
[21:31:45.112]                    __var pin     = 0;
[21:31:45.112]                      // -> [pin <= 0x00000000]
[21:31:45.112]                    __var port    = 0;
[21:31:45.112]                      // -> [port <= 0x00000000]
[21:31:45.113]                    __var portAdr = 0;
[21:31:45.113]                      // -> [portAdr <= 0x00000000]
[21:31:45.113]                    __var pos     = 0;
[21:31:45.113]                      // -> [pos <= 0x00000000]
[21:31:45.113]                    __var SWO_Pin = 0x00010003;          // PB3
[21:31:45.113]                      // -> [SWO_Pin <= 0x00010003]
[21:31:45.113]                  </block>
[21:31:45.113]                  <block atomic="false" info="configure SWO">
[21:31:45.113]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:31:45.113]                      // -> [pin <= 0x00000003]
[21:31:45.114]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:31:45.114]                      // -> [port <= 0x00000001]
[21:31:45.114]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:31:45.114]                      // -> [portAdr <= 0x40020400]
[21:31:45.114]                    pos = pin * 2;
[21:31:45.114]                      // -> [pos <= 0x00000006]
[21:31:45.114]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:31:45.115]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.115]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.115]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:31:45.116]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.116]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.116]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:31:45.117]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.117]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.117]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:31:45.118]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.118]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.118]                  </block>
[21:31:45.118]                  <control if="pin <  8" while="" timeout="0" info="">
[21:31:45.118]                    // if-block "pin <  8"
[21:31:45.118]                      // =>  TRUE
[21:31:45.119]                    <block atomic="false" info="">
[21:31:45.119]                      pos = ((pin    ) & 7) * 4;
[21:31:45.119]                        // -> [pos <= 0x0000000C]
[21:31:45.119]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:31:45.120]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.120]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.120]                    </block>
[21:31:45.120]                    // end if-block "pin <  8"
[21:31:45.120]                  </control>
[21:31:45.120]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:31:45.121]                    // if-block "pin >= 8"
[21:31:45.121]                      // =>  FALSE
[21:31:45.121]                    // skip if-block "pin >= 8"
[21:31:45.121]                  </control>
[21:31:45.121]                </sequence>
[21:31:45.121]            </block>
[21:31:45.121]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:31:45.122]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:31:45.122]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:31:45.122]            </block>
[21:31:45.122]          </sequence>
[21:31:45.122]      </block>
[21:31:45.122]      // end if-block "traceSWO"
[21:31:45.123]    </control>
[21:31:45.123]    <control if="traceTPIU" while="" timeout="0" info="">
[21:31:45.123]      // if-block "traceTPIU"
[21:31:45.123]        // =>  FALSE
[21:31:45.123]      // skip if-block "traceTPIU"
[21:31:45.123]    </control>
[21:31:45.123]  </sequence>
[21:31:45.123]  
[21:33:08.448]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:33:08.448]  
[21:33:08.448]  <debugvars>
[21:33:08.449]    // Pre-defined
[21:33:08.449]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:33:08.449]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:33:08.450]    __dp=0x00000000
[21:33:08.450]    __ap=0x00000000
[21:33:08.450]    __traceout=0x00000001      (SWO Trace)
[21:33:08.451]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:33:08.451]    __FlashAddr=0x00000000
[21:33:08.451]    __FlashLen=0x00000000
[21:33:08.451]    __FlashArg=0x00000000
[21:33:08.451]    __FlashOp=0x00000000
[21:33:08.452]    __Result=0x00000000
[21:33:08.452]    
[21:33:08.452]    // User-defined
[21:33:08.452]    DbgMCU_CR=0x00000007
[21:33:08.452]    DbgMCU_APB1_Fz=0x00000000
[21:33:08.453]    DbgMCU_APB2_Fz=0x00000000
[21:33:08.453]    TraceClk_Pin=0x00040002
[21:33:08.453]    TraceD0_Pin=0x00040003
[21:33:08.453]    TraceD1_Pin=0x00040004
[21:33:08.453]    TraceD2_Pin=0x00040005
[21:33:08.454]    TraceD3_Pin=0x00040006
[21:33:08.454]  </debugvars>
[21:33:08.454]  
[21:33:08.454]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:33:08.454]    <block atomic="false" info="">
[21:33:08.455]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:33:08.455]        // -> [traceSWO <= 0x00000001]
[21:33:08.455]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:33:08.455]        // -> [traceTPIU <= 0x00000000]
[21:33:08.455]    </block>
[21:33:08.456]    <control if="traceSWO" while="" timeout="0" info="">
[21:33:08.456]      // if-block "traceSWO"
[21:33:08.456]        // =>  TRUE
[21:33:08.456]      <block atomic="false" info="">
[21:33:08.456]        Sequence("DisableTraceSWO");
[21:33:08.456]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:33:08.457]            <block atomic="false" info="">
[21:33:08.457]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:33:08.457]                // -> [dbgmcu_val <= 0x00000000]
[21:33:08.457]            </block>
[21:33:08.457]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:33:08.458]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:33:08.458]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:33:08.458]                // -> [dbgmcu_val <= 0x00000007]
[21:33:08.459]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:33:08.459]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:33:08.459]            </block>
[21:33:08.460]          </sequence>
[21:33:08.460]      </block>
[21:33:08.460]      // end if-block "traceSWO"
[21:33:08.460]    </control>
[21:33:08.460]    <control if="traceTPIU" while="" timeout="0" info="">
[21:33:08.460]      // if-block "traceTPIU"
[21:33:08.461]        // =>  FALSE
[21:33:08.461]      // skip if-block "traceTPIU"
[21:33:08.461]    </control>
[21:33:08.461]  </sequence>
[21:33:08.461]  
[21:33:59.481]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:33:59.481]  
[21:33:59.481]  <debugvars>
[21:33:59.481]    // Pre-defined
[21:33:59.481]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:33:59.481]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:33:59.482]    __dp=0x00000000
[21:33:59.482]    __ap=0x00000000
[21:33:59.482]    __traceout=0x00000001      (SWO Trace)
[21:33:59.482]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:33:59.482]    __FlashAddr=0x00000000
[21:33:59.483]    __FlashLen=0x00000000
[21:33:59.483]    __FlashArg=0x00000000
[21:33:59.483]    __FlashOp=0x00000000
[21:33:59.483]    __Result=0x00000000
[21:33:59.483]    
[21:33:59.483]    // User-defined
[21:33:59.483]    DbgMCU_CR=0x00000007
[21:33:59.484]    DbgMCU_APB1_Fz=0x00000000
[21:33:59.484]    DbgMCU_APB2_Fz=0x00000000
[21:33:59.484]    TraceClk_Pin=0x00040002
[21:33:59.484]    TraceD0_Pin=0x00040003
[21:33:59.484]    TraceD1_Pin=0x00040004
[21:33:59.484]    TraceD2_Pin=0x00040005
[21:33:59.485]    TraceD3_Pin=0x00040006
[21:33:59.485]  </debugvars>
[21:33:59.485]  
[21:33:59.485]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:33:59.485]    <block atomic="false" info="">
[21:33:59.485]      Sequence("CheckID");
[21:33:59.485]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:33:59.486]          <block atomic="false" info="">
[21:33:59.486]            __var pidr1 = 0;
[21:33:59.486]              // -> [pidr1 <= 0x00000000]
[21:33:59.486]            __var pidr2 = 0;
[21:33:59.486]              // -> [pidr2 <= 0x00000000]
[21:33:59.486]            __var jep106id = 0;
[21:33:59.486]              // -> [jep106id <= 0x00000000]
[21:33:59.487]            __var ROMTableBase = 0;
[21:33:59.487]              // -> [ROMTableBase <= 0x00000000]
[21:33:59.487]            __ap = 0;      // AHB-AP
[21:33:59.487]              // -> [__ap <= 0x00000000]
[21:33:59.487]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:33:59.487]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.487]              // -> [ROMTableBase <= 0xE00FD000]
[21:33:59.488]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:33:59.488]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.488]              // -> [pidr1 <= 0x00000004]
[21:33:59.489]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:33:59.489]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.489]              // -> [pidr2 <= 0x0000001A]
[21:33:59.489]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:33:59.490]              // -> [jep106id <= 0x00000020]
[21:33:59.490]          </block>
[21:33:59.490]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:33:59.490]            // if-block "jep106id != 0x20"
[21:33:59.490]              // =>  FALSE
[21:33:59.490]            // skip if-block "jep106id != 0x20"
[21:33:59.490]          </control>
[21:33:59.490]        </sequence>
[21:33:59.491]    </block>
[21:33:59.491]  </sequence>
[21:33:59.491]  
[21:33:59.506]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:33:59.506]  
[21:33:59.506]  <debugvars>
[21:33:59.506]    // Pre-defined
[21:33:59.507]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:33:59.507]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:33:59.507]    __dp=0x00000000
[21:33:59.507]    __ap=0x00000000
[21:33:59.507]    __traceout=0x00000001      (SWO Trace)
[21:33:59.508]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:33:59.508]    __FlashAddr=0x00000000
[21:33:59.508]    __FlashLen=0x00000000
[21:33:59.508]    __FlashArg=0x00000000
[21:33:59.508]    __FlashOp=0x00000000
[21:33:59.508]    __Result=0x00000000
[21:33:59.509]    
[21:33:59.509]    // User-defined
[21:33:59.509]    DbgMCU_CR=0x00000007
[21:33:59.509]    DbgMCU_APB1_Fz=0x00000000
[21:33:59.509]    DbgMCU_APB2_Fz=0x00000000
[21:33:59.509]    TraceClk_Pin=0x00040002
[21:33:59.509]    TraceD0_Pin=0x00040003
[21:33:59.509]    TraceD1_Pin=0x00040004
[21:33:59.510]    TraceD2_Pin=0x00040005
[21:33:59.510]    TraceD3_Pin=0x00040006
[21:33:59.510]  </debugvars>
[21:33:59.510]  
[21:33:59.510]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:33:59.510]    <block atomic="false" info="">
[21:33:59.510]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:33:59.511]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.511]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:33:59.511]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.511]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:33:59.512]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.512]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:33:59.513]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:33:59.513]    </block>
[21:33:59.513]  </sequence>
[21:33:59.513]  
[21:34:30.929]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:34:30.929]  
[21:34:30.929]  <debugvars>
[21:34:30.930]    // Pre-defined
[21:34:30.930]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:34:30.930]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:34:30.930]    __dp=0x00000000
[21:34:30.930]    __ap=0x00000000
[21:34:30.931]    __traceout=0x00000001      (SWO Trace)
[21:34:30.931]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:34:30.931]    __FlashAddr=0x00000000
[21:34:30.931]    __FlashLen=0x00000000
[21:34:30.931]    __FlashArg=0x00000000
[21:34:30.931]    __FlashOp=0x00000000
[21:34:30.931]    __Result=0x00000000
[21:34:30.932]    
[21:34:30.932]    // User-defined
[21:34:30.932]    DbgMCU_CR=0x00000007
[21:34:30.932]    DbgMCU_APB1_Fz=0x00000000
[21:34:30.932]    DbgMCU_APB2_Fz=0x00000000
[21:34:30.932]    TraceClk_Pin=0x00040002
[21:34:30.932]    TraceD0_Pin=0x00040003
[21:34:30.932]    TraceD1_Pin=0x00040004
[21:34:30.932]    TraceD2_Pin=0x00040005
[21:34:30.933]    TraceD3_Pin=0x00040006
[21:34:30.933]  </debugvars>
[21:34:30.933]  
[21:34:30.933]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:34:30.933]    <block atomic="false" info="">
[21:34:30.933]      Sequence("CheckID");
[21:34:30.934]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:34:30.934]          <block atomic="false" info="">
[21:34:30.934]            __var pidr1 = 0;
[21:34:30.934]              // -> [pidr1 <= 0x00000000]
[21:34:30.934]            __var pidr2 = 0;
[21:34:30.935]              // -> [pidr2 <= 0x00000000]
[21:34:30.935]            __var jep106id = 0;
[21:34:30.935]              // -> [jep106id <= 0x00000000]
[21:34:30.935]            __var ROMTableBase = 0;
[21:34:30.935]              // -> [ROMTableBase <= 0x00000000]
[21:34:30.935]            __ap = 0;      // AHB-AP
[21:34:30.935]              // -> [__ap <= 0x00000000]
[21:34:30.936]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:34:30.936]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.936]              // -> [ROMTableBase <= 0xE00FD000]
[21:34:30.936]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:34:30.937]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.937]              // -> [pidr1 <= 0x00000004]
[21:34:30.937]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:34:30.937]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.937]              // -> [pidr2 <= 0x0000001A]
[21:34:30.938]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:34:30.938]              // -> [jep106id <= 0x00000020]
[21:34:30.938]          </block>
[21:34:30.938]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:34:30.938]            // if-block "jep106id != 0x20"
[21:34:30.938]              // =>  FALSE
[21:34:30.938]            // skip if-block "jep106id != 0x20"
[21:34:30.938]          </control>
[21:34:30.938]        </sequence>
[21:34:30.939]    </block>
[21:34:30.939]  </sequence>
[21:34:30.939]  
[21:34:30.954]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:34:30.954]  
[21:34:30.954]  <debugvars>
[21:34:30.955]    // Pre-defined
[21:34:30.955]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:34:30.955]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:34:30.955]    __dp=0x00000000
[21:34:30.955]    __ap=0x00000000
[21:34:30.955]    __traceout=0x00000001      (SWO Trace)
[21:34:30.956]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:34:30.956]    __FlashAddr=0x00000000
[21:34:30.956]    __FlashLen=0x00000000
[21:34:30.956]    __FlashArg=0x00000000
[21:34:30.956]    __FlashOp=0x00000000
[21:34:30.956]    __Result=0x00000000
[21:34:30.957]    
[21:34:30.957]    // User-defined
[21:34:30.957]    DbgMCU_CR=0x00000007
[21:34:30.957]    DbgMCU_APB1_Fz=0x00000000
[21:34:30.957]    DbgMCU_APB2_Fz=0x00000000
[21:34:30.957]    TraceClk_Pin=0x00040002
[21:34:30.957]    TraceD0_Pin=0x00040003
[21:34:30.958]    TraceD1_Pin=0x00040004
[21:34:30.958]    TraceD2_Pin=0x00040005
[21:34:30.958]    TraceD3_Pin=0x00040006
[21:34:30.958]  </debugvars>
[21:34:30.958]  
[21:34:30.958]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:34:30.959]    <block atomic="false" info="">
[21:34:30.959]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:34:30.959]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.960]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:34:30.960]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.960]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:34:30.961]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.961]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:34:30.962]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.962]    </block>
[21:34:30.962]  </sequence>
[21:34:30.962]  
[21:34:30.978]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:34:30.978]  
[21:34:30.979]  <debugvars>
[21:34:30.979]    // Pre-defined
[21:34:30.979]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:34:30.979]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:34:30.979]    __dp=0x00000000
[21:34:30.979]    __ap=0x00000000
[21:34:30.979]    __traceout=0x00000001      (SWO Trace)
[21:34:30.980]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:34:30.980]    __FlashAddr=0x00000000
[21:34:30.980]    __FlashLen=0x00000000
[21:34:30.980]    __FlashArg=0x00000000
[21:34:30.980]    __FlashOp=0x00000000
[21:34:30.980]    __Result=0x00000000
[21:34:30.981]    
[21:34:30.981]    // User-defined
[21:34:30.981]    DbgMCU_CR=0x00000007
[21:34:30.981]    DbgMCU_APB1_Fz=0x00000000
[21:34:30.981]    DbgMCU_APB2_Fz=0x00000000
[21:34:30.981]    TraceClk_Pin=0x00040002
[21:34:30.981]    TraceD0_Pin=0x00040003
[21:34:30.982]    TraceD1_Pin=0x00040004
[21:34:30.982]    TraceD2_Pin=0x00040005
[21:34:30.982]    TraceD3_Pin=0x00040006
[21:34:30.982]  </debugvars>
[21:34:30.982]  
[21:34:30.982]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:34:30.982]    <block atomic="false" info="">
[21:34:30.983]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:34:30.983]        // -> [traceSWO <= 0x00000001]
[21:34:30.983]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:34:30.983]        // -> [traceTPIU <= 0x00000000]
[21:34:30.983]    </block>
[21:34:30.983]    <control if="traceSWO" while="" timeout="0" info="">
[21:34:30.983]      // if-block "traceSWO"
[21:34:30.984]        // =>  TRUE
[21:34:30.984]      <block atomic="false" info="">
[21:34:30.984]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:34:30.984]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:34:30.984]            <block atomic="false" info="">
[21:34:30.984]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:34:30.984]                // -> [dbgmcu_val <= 0x00000000]
[21:34:30.985]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:34:30.985]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:34:30.985]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:34:30.985]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.986]                // -> [dbgmcu_val <= 0x00000007]
[21:34:30.986]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:34:30.986]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:34:30.986]              Sequence("ConfigureTraceSWOPin");
[21:34:30.986]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:34:30.986]                  <block atomic="false" info="">
[21:34:30.986]                    __var pin     = 0;
[21:34:30.986]                      // -> [pin <= 0x00000000]
[21:34:30.987]                    __var port    = 0;
[21:34:30.987]                      // -> [port <= 0x00000000]
[21:34:30.987]                    __var portAdr = 0;
[21:34:30.987]                      // -> [portAdr <= 0x00000000]
[21:34:30.987]                    __var pos     = 0;
[21:34:30.987]                      // -> [pos <= 0x00000000]
[21:34:30.987]                    __var SWO_Pin = 0x00010003;          // PB3
[21:34:30.987]                      // -> [SWO_Pin <= 0x00010003]
[21:34:30.988]                  </block>
[21:34:30.988]                  <block atomic="false" info="configure SWO">
[21:34:30.988]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:34:30.988]                      // -> [pin <= 0x00000003]
[21:34:30.988]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:34:30.988]                      // -> [port <= 0x00000001]
[21:34:30.988]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:34:30.988]                      // -> [portAdr <= 0x40020400]
[21:34:30.988]                    pos = pin * 2;
[21:34:30.989]                      // -> [pos <= 0x00000006]
[21:34:30.989]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:34:30.989]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.990]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.990]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:34:30.990]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.991]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.991]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:34:30.991]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.992]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.992]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:34:30.992]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.993]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.993]                  </block>
[21:34:30.993]                  <control if="pin <  8" while="" timeout="0" info="">
[21:34:30.993]                    // if-block "pin <  8"
[21:34:30.993]                      // =>  TRUE
[21:34:30.993]                    <block atomic="false" info="">
[21:34:30.993]                      pos = ((pin    ) & 7) * 4;
[21:34:30.993]                        // -> [pos <= 0x0000000C]
[21:34:30.994]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:34:30.994]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.994]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.994]                    </block>
[21:34:30.995]                    // end if-block "pin <  8"
[21:34:30.995]                  </control>
[21:34:30.995]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:34:30.995]                    // if-block "pin >= 8"
[21:34:30.995]                      // =>  FALSE
[21:34:30.995]                    // skip if-block "pin >= 8"
[21:34:30.995]                  </control>
[21:34:30.995]                </sequence>
[21:34:30.995]            </block>
[21:34:30.996]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:34:30.996]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:34:30.996]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:30.996]            </block>
[21:34:30.996]          </sequence>
[21:34:30.996]      </block>
[21:34:30.997]      // end if-block "traceSWO"
[21:34:30.997]    </control>
[21:34:30.997]    <control if="traceTPIU" while="" timeout="0" info="">
[21:34:30.997]      // if-block "traceTPIU"
[21:34:30.997]        // =>  FALSE
[21:34:30.997]      // skip if-block "traceTPIU"
[21:34:30.997]    </control>
[21:34:30.997]  </sequence>
[21:34:30.998]  
[21:34:31.002]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:34:31.002]  
[21:34:31.002]  <debugvars>
[21:34:31.002]    // Pre-defined
[21:34:31.002]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:34:31.002]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:34:31.002]    __dp=0x00000000
[21:34:31.002]    __ap=0x00000000
[21:34:31.003]    __traceout=0x00000001      (SWO Trace)
[21:34:31.003]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:34:31.003]    __FlashAddr=0x00000000
[21:34:31.003]    __FlashLen=0x00000000
[21:34:31.003]    __FlashArg=0x00000000
[21:34:31.003]    __FlashOp=0x00000000
[21:34:31.003]    __Result=0x00000000
[21:34:31.003]    
[21:34:31.003]    // User-defined
[21:34:31.003]    DbgMCU_CR=0x00000007
[21:34:31.004]    DbgMCU_APB1_Fz=0x00000000
[21:34:31.004]    DbgMCU_APB2_Fz=0x00000000
[21:34:31.004]    TraceClk_Pin=0x00040002
[21:34:31.004]    TraceD0_Pin=0x00040003
[21:34:31.004]    TraceD1_Pin=0x00040004
[21:34:31.004]    TraceD2_Pin=0x00040005
[21:34:31.004]    TraceD3_Pin=0x00040006
[21:34:31.004]  </debugvars>
[21:34:31.005]  
[21:34:31.005]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:34:31.005]    <block atomic="false" info="">
[21:34:31.005]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:34:31.005]        // -> [traceSWO <= 0x00000001]
[21:34:31.005]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:34:31.005]        // -> [traceTPIU <= 0x00000000]
[21:34:31.005]    </block>
[21:34:31.005]    <control if="traceSWO" while="" timeout="0" info="">
[21:34:31.006]      // if-block "traceSWO"
[21:34:31.006]        // =>  TRUE
[21:34:31.006]      <block atomic="false" info="">
[21:34:31.006]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:34:31.006]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:34:31.006]            <block atomic="false" info="">
[21:34:31.006]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:34:31.006]                // -> [dbgmcu_val <= 0x00000000]
[21:34:31.006]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:34:31.007]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:34:31.007]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:34:31.007]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.007]                // -> [dbgmcu_val <= 0x00000007]
[21:34:31.007]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:34:31.008]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:34:31.008]              Sequence("ConfigureTraceSWOPin");
[21:34:31.008]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:34:31.008]                  <block atomic="false" info="">
[21:34:31.008]                    __var pin     = 0;
[21:34:31.008]                      // -> [pin <= 0x00000000]
[21:34:31.008]                    __var port    = 0;
[21:34:31.008]                      // -> [port <= 0x00000000]
[21:34:31.008]                    __var portAdr = 0;
[21:34:31.009]                      // -> [portAdr <= 0x00000000]
[21:34:31.009]                    __var pos     = 0;
[21:34:31.009]                      // -> [pos <= 0x00000000]
[21:34:31.009]                    __var SWO_Pin = 0x00010003;          // PB3
[21:34:31.009]                      // -> [SWO_Pin <= 0x00010003]
[21:34:31.009]                  </block>
[21:34:31.009]                  <block atomic="false" info="configure SWO">
[21:34:31.010]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:34:31.010]                      // -> [pin <= 0x00000003]
[21:34:31.010]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:34:31.010]                      // -> [port <= 0x00000001]
[21:34:31.010]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:34:31.010]                      // -> [portAdr <= 0x40020400]
[21:34:31.010]                    pos = pin * 2;
[21:34:31.010]                      // -> [pos <= 0x00000006]
[21:34:31.011]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:34:31.011]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.011]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.012]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:34:31.012]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.012]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.013]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:34:31.013]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.013]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.013]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:34:31.014]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.015]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.015]                  </block>
[21:34:31.015]                  <control if="pin <  8" while="" timeout="0" info="">
[21:34:31.015]                    // if-block "pin <  8"
[21:34:31.015]                      // =>  TRUE
[21:34:31.015]                    <block atomic="false" info="">
[21:34:31.015]                      pos = ((pin    ) & 7) * 4;
[21:34:31.015]                        // -> [pos <= 0x0000000C]
[21:34:31.016]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:34:31.016]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.016]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.016]                    </block>
[21:34:31.016]                    // end if-block "pin <  8"
[21:34:31.016]                  </control>
[21:34:31.016]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:34:31.016]                    // if-block "pin >= 8"
[21:34:31.017]                      // =>  FALSE
[21:34:31.017]                    // skip if-block "pin >= 8"
[21:34:31.017]                  </control>
[21:34:31.017]                </sequence>
[21:34:31.017]            </block>
[21:34:31.017]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:34:31.017]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:34:31.018]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.018]            </block>
[21:34:31.018]          </sequence>
[21:34:31.018]      </block>
[21:34:31.018]      // end if-block "traceSWO"
[21:34:31.018]    </control>
[21:34:31.019]    <control if="traceTPIU" while="" timeout="0" info="">
[21:34:31.019]      // if-block "traceTPIU"
[21:34:31.019]        // =>  FALSE
[21:34:31.019]      // skip if-block "traceTPIU"
[21:34:31.019]    </control>
[21:34:31.019]  </sequence>
[21:34:31.019]  
[21:34:31.235]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:34:31.235]  
[21:34:31.235]  <debugvars>
[21:34:31.236]    // Pre-defined
[21:34:31.236]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:34:31.236]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:34:31.236]    __dp=0x00000000
[21:34:31.236]    __ap=0x00000000
[21:34:31.236]    __traceout=0x00000001      (SWO Trace)
[21:34:31.236]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:34:31.237]    __FlashAddr=0x00000000
[21:34:31.237]    __FlashLen=0x00000000
[21:34:31.237]    __FlashArg=0x00000000
[21:34:31.237]    __FlashOp=0x00000000
[21:34:31.237]    __Result=0x00000000
[21:34:31.237]    
[21:34:31.237]    // User-defined
[21:34:31.237]    DbgMCU_CR=0x00000007
[21:34:31.238]    DbgMCU_APB1_Fz=0x00000000
[21:34:31.238]    DbgMCU_APB2_Fz=0x00000000
[21:34:31.238]    TraceClk_Pin=0x00040002
[21:34:31.238]    TraceD0_Pin=0x00040003
[21:34:31.238]    TraceD1_Pin=0x00040004
[21:34:31.238]    TraceD2_Pin=0x00040005
[21:34:31.238]    TraceD3_Pin=0x00040006
[21:34:31.239]  </debugvars>
[21:34:31.239]  
[21:34:31.239]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:34:31.239]    <block atomic="false" info="">
[21:34:31.239]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:34:31.239]        // -> [traceSWO <= 0x00000001]
[21:34:31.239]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:34:31.239]        // -> [traceTPIU <= 0x00000000]
[21:34:31.240]    </block>
[21:34:31.240]    <control if="traceSWO" while="" timeout="0" info="">
[21:34:31.240]      // if-block "traceSWO"
[21:34:31.240]        // =>  TRUE
[21:34:31.240]      <block atomic="false" info="">
[21:34:31.240]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:34:31.240]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:34:31.240]            <block atomic="false" info="">
[21:34:31.241]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:34:31.241]                // -> [dbgmcu_val <= 0x00000000]
[21:34:31.241]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:34:31.241]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:34:31.241]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:34:31.242]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.242]                // -> [dbgmcu_val <= 0x00000007]
[21:34:31.242]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:34:31.242]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:34:31.242]              Sequence("ConfigureTraceSWOPin");
[21:34:31.242]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:34:31.242]                  <block atomic="false" info="">
[21:34:31.242]                    __var pin     = 0;
[21:34:31.243]                      // -> [pin <= 0x00000000]
[21:34:31.243]                    __var port    = 0;
[21:34:31.243]                      // -> [port <= 0x00000000]
[21:34:31.243]                    __var portAdr = 0;
[21:34:31.243]                      // -> [portAdr <= 0x00000000]
[21:34:31.243]                    __var pos     = 0;
[21:34:31.243]                      // -> [pos <= 0x00000000]
[21:34:31.243]                    __var SWO_Pin = 0x00010003;          // PB3
[21:34:31.243]                      // -> [SWO_Pin <= 0x00010003]
[21:34:31.244]                  </block>
[21:34:31.244]                  <block atomic="false" info="configure SWO">
[21:34:31.244]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:34:31.244]                      // -> [pin <= 0x00000003]
[21:34:31.244]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:34:31.244]                      // -> [port <= 0x00000001]
[21:34:31.244]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:34:31.244]                      // -> [portAdr <= 0x40020400]
[21:34:31.244]                    pos = pin * 2;
[21:34:31.245]                      // -> [pos <= 0x00000006]
[21:34:31.245]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:34:31.245]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.246]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.246]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:34:31.246]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.247]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.247]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:34:31.247]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.248]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.248]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:34:31.248]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.248]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.249]                  </block>
[21:34:31.249]                  <control if="pin <  8" while="" timeout="0" info="">
[21:34:31.249]                    // if-block "pin <  8"
[21:34:31.249]                      // =>  TRUE
[21:34:31.249]                    <block atomic="false" info="">
[21:34:31.249]                      pos = ((pin    ) & 7) * 4;
[21:34:31.249]                        // -> [pos <= 0x0000000C]
[21:34:31.249]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:34:31.250]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.250]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.250]                    </block>
[21:34:31.250]                    // end if-block "pin <  8"
[21:34:31.251]                  </control>
[21:34:31.251]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:34:31.251]                    // if-block "pin >= 8"
[21:34:31.251]                      // =>  FALSE
[21:34:31.251]                    // skip if-block "pin >= 8"
[21:34:31.251]                  </control>
[21:34:31.252]                </sequence>
[21:34:31.252]            </block>
[21:34:31.252]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:34:31.252]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:34:31.252]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:34:31.253]            </block>
[21:34:31.253]          </sequence>
[21:34:31.253]      </block>
[21:34:31.253]      // end if-block "traceSWO"
[21:34:31.253]    </control>
[21:34:31.253]    <control if="traceTPIU" while="" timeout="0" info="">
[21:34:31.253]      // if-block "traceTPIU"
[21:34:31.253]        // =>  FALSE
[21:34:31.253]      // skip if-block "traceTPIU"
[21:34:31.254]    </control>
[21:34:31.254]  </sequence>
[21:34:31.254]  
[21:38:13.399]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:38:13.399]  
[21:38:13.400]  <debugvars>
[21:38:13.400]    // Pre-defined
[21:38:13.400]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:38:13.400]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:38:13.400]    __dp=0x00000000
[21:38:13.400]    __ap=0x00000000
[21:38:13.401]    __traceout=0x00000001      (SWO Trace)
[21:38:13.401]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:38:13.401]    __FlashAddr=0x00000000
[21:38:13.401]    __FlashLen=0x00000000
[21:38:13.401]    __FlashArg=0x00000000
[21:38:13.401]    __FlashOp=0x00000000
[21:38:13.401]    __Result=0x00000000
[21:38:13.401]    
[21:38:13.401]    // User-defined
[21:38:13.402]    DbgMCU_CR=0x00000007
[21:38:13.402]    DbgMCU_APB1_Fz=0x00000000
[21:38:13.402]    DbgMCU_APB2_Fz=0x00000000
[21:38:13.402]    TraceClk_Pin=0x00040002
[21:38:13.402]    TraceD0_Pin=0x00040003
[21:38:13.402]    TraceD1_Pin=0x00040004
[21:38:13.402]    TraceD2_Pin=0x00040005
[21:38:13.402]    TraceD3_Pin=0x00040006
[21:38:13.403]  </debugvars>
[21:38:13.403]  
[21:38:13.403]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:38:13.403]    <block atomic="false" info="">
[21:38:13.403]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:38:13.403]        // -> [traceSWO <= 0x00000001]
[21:38:13.403]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:38:13.403]        // -> [traceTPIU <= 0x00000000]
[21:38:13.403]    </block>
[21:38:13.403]    <control if="traceSWO" while="" timeout="0" info="">
[21:38:13.404]      // if-block "traceSWO"
[21:38:13.404]        // =>  TRUE
[21:38:13.404]      <block atomic="false" info="">
[21:38:13.404]        Sequence("DisableTraceSWO");
[21:38:13.404]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:38:13.404]            <block atomic="false" info="">
[21:38:13.404]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:38:13.404]                // -> [dbgmcu_val <= 0x00000000]
[21:38:13.405]            </block>
[21:38:13.405]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:38:13.405]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:38:13.405]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:38:13.405]                // -> [dbgmcu_val <= 0x00000007]
[21:38:13.405]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:38:13.406]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:38:13.406]            </block>
[21:38:13.406]          </sequence>
[21:38:13.406]      </block>
[21:38:13.406]      // end if-block "traceSWO"
[21:38:13.406]    </control>
[21:38:13.407]    <control if="traceTPIU" while="" timeout="0" info="">
[21:38:13.407]      // if-block "traceTPIU"
[21:38:13.407]        // =>  FALSE
[21:38:13.407]      // skip if-block "traceTPIU"
[21:38:13.407]    </control>
[21:38:13.407]  </sequence>
[21:38:13.407]  
[21:38:58.920]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:38:58.920]  
[21:38:58.920]  <debugvars>
[21:38:58.921]    // Pre-defined
[21:38:58.921]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:38:58.921]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:38:58.921]    __dp=0x00000000
[21:38:58.921]    __ap=0x00000000
[21:38:58.921]    __traceout=0x00000001      (SWO Trace)
[21:38:58.921]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:38:58.922]    __FlashAddr=0x00000000
[21:38:58.922]    __FlashLen=0x00000000
[21:38:58.922]    __FlashArg=0x00000000
[21:38:58.922]    __FlashOp=0x00000000
[21:38:58.922]    __Result=0x00000000
[21:38:58.922]    
[21:38:58.922]    // User-defined
[21:38:58.922]    DbgMCU_CR=0x00000007
[21:38:58.922]    DbgMCU_APB1_Fz=0x00000000
[21:38:58.922]    DbgMCU_APB2_Fz=0x00000000
[21:38:58.923]    TraceClk_Pin=0x00040002
[21:38:58.923]    TraceD0_Pin=0x00040003
[21:38:58.923]    TraceD1_Pin=0x00040004
[21:38:58.923]    TraceD2_Pin=0x00040005
[21:38:58.923]    TraceD3_Pin=0x00040006
[21:38:58.923]  </debugvars>
[21:38:58.923]  
[21:38:58.923]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:38:58.923]    <block atomic="false" info="">
[21:38:58.924]      Sequence("CheckID");
[21:38:58.924]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:38:58.924]          <block atomic="false" info="">
[21:38:58.924]            __var pidr1 = 0;
[21:38:58.924]              // -> [pidr1 <= 0x00000000]
[21:38:58.924]            __var pidr2 = 0;
[21:38:58.924]              // -> [pidr2 <= 0x00000000]
[21:38:58.924]            __var jep106id = 0;
[21:38:58.924]              // -> [jep106id <= 0x00000000]
[21:38:58.925]            __var ROMTableBase = 0;
[21:38:58.925]              // -> [ROMTableBase <= 0x00000000]
[21:38:58.925]            __ap = 0;      // AHB-AP
[21:38:58.925]              // -> [__ap <= 0x00000000]
[21:38:58.925]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:38:58.925]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.926]              // -> [ROMTableBase <= 0xE00FD000]
[21:38:58.926]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:38:58.926]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.926]              // -> [pidr1 <= 0x00000004]
[21:38:58.926]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:38:58.927]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.927]              // -> [pidr2 <= 0x0000001A]
[21:38:58.927]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:38:58.927]              // -> [jep106id <= 0x00000020]
[21:38:58.927]          </block>
[21:38:58.927]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:38:58.927]            // if-block "jep106id != 0x20"
[21:38:58.928]              // =>  FALSE
[21:38:58.928]            // skip if-block "jep106id != 0x20"
[21:38:58.928]          </control>
[21:38:58.928]        </sequence>
[21:38:58.928]    </block>
[21:38:58.928]  </sequence>
[21:38:58.928]  
[21:38:58.943]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:38:58.943]  
[21:38:58.943]  <debugvars>
[21:38:58.943]    // Pre-defined
[21:38:58.944]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:38:58.944]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[21:38:58.944]    __dp=0x00000000
[21:38:58.944]    __ap=0x00000000
[21:38:58.944]    __traceout=0x00000001      (SWO Trace)
[21:38:58.944]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:38:58.944]    __FlashAddr=0x00000000
[21:38:58.944]    __FlashLen=0x00000000
[21:38:58.945]    __FlashArg=0x00000000
[21:38:58.945]    __FlashOp=0x00000000
[21:38:58.945]    __Result=0x00000000
[21:38:58.945]    
[21:38:58.945]    // User-defined
[21:38:58.945]    DbgMCU_CR=0x00000007
[21:38:58.945]    DbgMCU_APB1_Fz=0x00000000
[21:38:58.945]    DbgMCU_APB2_Fz=0x00000000
[21:38:58.945]    TraceClk_Pin=0x00040002
[21:38:58.946]    TraceD0_Pin=0x00040003
[21:38:58.946]    TraceD1_Pin=0x00040004
[21:38:58.946]    TraceD2_Pin=0x00040005
[21:38:58.946]    TraceD3_Pin=0x00040006
[21:38:58.946]  </debugvars>
[21:38:58.946]  
[21:38:58.946]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:38:58.947]    <block atomic="false" info="">
[21:38:58.947]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:38:58.947]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.947]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:38:58.948]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.948]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:38:58.949]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.949]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:38:58.949]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:38:58.949]    </block>
[21:38:58.950]  </sequence>
[21:38:58.950]  
[21:39:30.272]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:39:30.272]  
[21:39:30.280]  <debugvars>
[21:39:30.281]    // Pre-defined
[21:39:30.281]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:39:30.281]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:39:30.281]    __dp=0x00000000
[21:39:30.282]    __ap=0x00000000
[21:39:30.282]    __traceout=0x00000001      (SWO Trace)
[21:39:30.282]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:39:30.282]    __FlashAddr=0x00000000
[21:39:30.283]    __FlashLen=0x00000000
[21:39:30.283]    __FlashArg=0x00000000
[21:39:30.283]    __FlashOp=0x00000000
[21:39:30.283]    __Result=0x00000000
[21:39:30.284]    
[21:39:30.284]    // User-defined
[21:39:30.284]    DbgMCU_CR=0x00000007
[21:39:30.284]    DbgMCU_APB1_Fz=0x00000000
[21:39:30.285]    DbgMCU_APB2_Fz=0x00000000
[21:39:30.285]    TraceClk_Pin=0x00040002
[21:39:30.285]    TraceD0_Pin=0x00040003
[21:39:30.285]    TraceD1_Pin=0x00040004
[21:39:30.285]    TraceD2_Pin=0x00040005
[21:39:30.286]    TraceD3_Pin=0x00040006
[21:39:30.286]  </debugvars>
[21:39:30.286]  
[21:39:30.286]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:39:30.287]    <block atomic="false" info="">
[21:39:30.287]      Sequence("CheckID");
[21:39:30.287]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:39:30.287]          <block atomic="false" info="">
[21:39:30.287]            __var pidr1 = 0;
[21:39:30.288]              // -> [pidr1 <= 0x00000000]
[21:39:30.296]            __var pidr2 = 0;
[21:39:30.296]              // -> [pidr2 <= 0x00000000]
[21:39:30.296]            __var jep106id = 0;
[21:39:30.297]              // -> [jep106id <= 0x00000000]
[21:39:30.297]            __var ROMTableBase = 0;
[21:39:30.297]              // -> [ROMTableBase <= 0x00000000]
[21:39:30.297]            __ap = 0;      // AHB-AP
[21:39:30.298]              // -> [__ap <= 0x00000000]
[21:39:30.298]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:39:30.298]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.299]              // -> [ROMTableBase <= 0xE00FD000]
[21:39:30.299]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:39:30.299]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.300]              // -> [pidr1 <= 0x00000004]
[21:39:30.300]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:39:30.301]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.309]              // -> [pidr2 <= 0x0000001A]
[21:39:30.310]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:39:30.310]              // -> [jep106id <= 0x00000020]
[21:39:30.310]          </block>
[21:39:30.311]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:39:30.311]            // if-block "jep106id != 0x20"
[21:39:30.311]              // =>  FALSE
[21:39:30.311]            // skip if-block "jep106id != 0x20"
[21:39:30.312]          </control>
[21:39:30.312]        </sequence>
[21:39:30.312]    </block>
[21:39:30.312]  </sequence>
[21:39:30.313]  
[21:39:30.328]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:39:30.328]  
[21:39:30.328]  <debugvars>
[21:39:30.328]    // Pre-defined
[21:39:30.329]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:39:30.329]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:39:30.329]    __dp=0x00000000
[21:39:30.329]    __ap=0x00000000
[21:39:30.329]    __traceout=0x00000001      (SWO Trace)
[21:39:30.330]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:39:30.330]    __FlashAddr=0x00000000
[21:39:30.330]    __FlashLen=0x00000000
[21:39:30.330]    __FlashArg=0x00000000
[21:39:30.330]    __FlashOp=0x00000000
[21:39:30.331]    __Result=0x00000000
[21:39:30.331]    
[21:39:30.331]    // User-defined
[21:39:30.331]    DbgMCU_CR=0x00000007
[21:39:30.331]    DbgMCU_APB1_Fz=0x00000000
[21:39:30.331]    DbgMCU_APB2_Fz=0x00000000
[21:39:30.331]    TraceClk_Pin=0x00040002
[21:39:30.343]    TraceD0_Pin=0x00040003
[21:39:30.343]    TraceD1_Pin=0x00040004
[21:39:30.343]    TraceD2_Pin=0x00040005
[21:39:30.343]    TraceD3_Pin=0x00040006
[21:39:30.344]  </debugvars>
[21:39:30.344]  
[21:39:30.344]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:39:30.345]    <block atomic="false" info="">
[21:39:30.356]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:39:30.357]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.357]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:39:30.358]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.358]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:39:30.359]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.359]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:39:30.360]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.360]    </block>
[21:39:30.360]  </sequence>
[21:39:30.360]  
[21:39:30.378]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:39:30.378]  
[21:39:30.378]  <debugvars>
[21:39:30.378]    // Pre-defined
[21:39:30.379]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:39:30.379]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:39:30.382]    __dp=0x00000000
[21:39:30.382]    __ap=0x00000000
[21:39:30.382]    __traceout=0x00000001      (SWO Trace)
[21:39:30.383]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:39:30.383]    __FlashAddr=0x00000000
[21:39:30.383]    __FlashLen=0x00000000
[21:39:30.383]    __FlashArg=0x00000000
[21:39:30.383]    __FlashOp=0x00000000
[21:39:30.384]    __Result=0x00000000
[21:39:30.384]    
[21:39:30.384]    // User-defined
[21:39:30.384]    DbgMCU_CR=0x00000007
[21:39:30.384]    DbgMCU_APB1_Fz=0x00000000
[21:39:30.385]    DbgMCU_APB2_Fz=0x00000000
[21:39:30.385]    TraceClk_Pin=0x00040002
[21:39:30.385]    TraceD0_Pin=0x00040003
[21:39:30.385]    TraceD1_Pin=0x00040004
[21:39:30.398]    TraceD2_Pin=0x00040005
[21:39:30.399]    TraceD3_Pin=0x00040006
[21:39:30.399]  </debugvars>
[21:39:30.399]  
[21:39:30.400]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:39:30.400]    <block atomic="false" info="">
[21:39:30.400]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:39:30.400]        // -> [traceSWO <= 0x00000001]
[21:39:30.401]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:39:30.401]        // -> [traceTPIU <= 0x00000000]
[21:39:30.401]    </block>
[21:39:30.401]    <control if="traceSWO" while="" timeout="0" info="">
[21:39:30.402]      // if-block "traceSWO"
[21:39:30.402]        // =>  TRUE
[21:39:30.402]      <block atomic="false" info="">
[21:39:30.402]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:39:30.402]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:39:30.415]            <block atomic="false" info="">
[21:39:30.415]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:39:30.416]                // -> [dbgmcu_val <= 0x00000000]
[21:39:30.416]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:39:30.417]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:39:30.417]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:39:30.417]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.418]                // -> [dbgmcu_val <= 0x00000007]
[21:39:30.418]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:39:30.418]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:39:30.418]              Sequence("ConfigureTraceSWOPin");
[21:39:30.419]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:39:30.419]                  <block atomic="false" info="">
[21:39:30.419]                    __var pin     = 0;
[21:39:30.419]                      // -> [pin <= 0x00000000]
[21:39:30.419]                    __var port    = 0;
[21:39:30.439]                      // -> [port <= 0x00000000]
[21:39:30.439]                    __var portAdr = 0;
[21:39:30.439]                      // -> [portAdr <= 0x00000000]
[21:39:30.440]                    __var pos     = 0;
[21:39:30.440]                      // -> [pos <= 0x00000000]
[21:39:30.440]                    __var SWO_Pin = 0x00010003;          // PB3
[21:39:30.441]                      // -> [SWO_Pin <= 0x00010003]
[21:39:30.441]                  </block>
[21:39:30.441]                  <block atomic="false" info="configure SWO">
[21:39:30.441]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:39:30.442]                      // -> [pin <= 0x00000003]
[21:39:30.442]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:39:30.442]                      // -> [port <= 0x00000001]
[21:39:30.453]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:39:30.454]                      // -> [portAdr <= 0x40020400]
[21:39:30.454]                    pos = pin * 2;
[21:39:30.454]                      // -> [pos <= 0x00000006]
[21:39:30.455]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:39:30.455]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.456]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.456]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:39:30.457]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.458]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.458]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:39:30.467]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.468]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.468]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:39:30.469]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.470]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.470]                  </block>
[21:39:30.470]                  <control if="pin <  8" while="" timeout="0" info="">
[21:39:30.470]                    // if-block "pin <  8"
[21:39:30.471]                      // =>  TRUE
[21:39:30.471]                    <block atomic="false" info="">
[21:39:30.471]                      pos = ((pin    ) & 7) * 4;
[21:39:30.471]                        // -> [pos <= 0x0000000C]
[21:39:30.472]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:39:30.472]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.473]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.473]                    </block>
[21:39:30.478]                    // end if-block "pin <  8"
[21:39:30.478]                  </control>
[21:39:30.479]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:39:30.479]                    // if-block "pin >= 8"
[21:39:30.479]                      // =>  FALSE
[21:39:30.479]                    // skip if-block "pin >= 8"
[21:39:30.480]                  </control>
[21:39:30.480]                </sequence>
[21:39:30.480]            </block>
[21:39:30.480]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:39:30.480]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:39:30.480]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.481]            </block>
[21:39:30.481]          </sequence>
[21:39:30.481]      </block>
[21:39:30.481]      // end if-block "traceSWO"
[21:39:30.488]    </control>
[21:39:30.490]    <control if="traceTPIU" while="" timeout="0" info="">
[21:39:30.490]      // if-block "traceTPIU"
[21:39:30.490]        // =>  FALSE
[21:39:30.490]      // skip if-block "traceTPIU"
[21:39:30.490]    </control>
[21:39:30.490]  </sequence>
[21:39:30.490]  
[21:39:30.495]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:39:30.495]  
[21:39:30.495]  <debugvars>
[21:39:30.495]    // Pre-defined
[21:39:30.495]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:39:30.496]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:39:30.496]    __dp=0x00000000
[21:39:30.496]    __ap=0x00000000
[21:39:30.497]    __traceout=0x00000001      (SWO Trace)
[21:39:30.500]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:39:30.501]    __FlashAddr=0x00000000
[21:39:30.501]    __FlashLen=0x00000000
[21:39:30.501]    __FlashArg=0x00000000
[21:39:30.501]    __FlashOp=0x00000000
[21:39:30.502]    __Result=0x00000000
[21:39:30.502]    
[21:39:30.502]    // User-defined
[21:39:30.502]    DbgMCU_CR=0x00000007
[21:39:30.502]    DbgMCU_APB1_Fz=0x00000000
[21:39:30.502]    DbgMCU_APB2_Fz=0x00000000
[21:39:30.503]    TraceClk_Pin=0x00040002
[21:39:30.503]    TraceD0_Pin=0x00040003
[21:39:30.503]    TraceD1_Pin=0x00040004
[21:39:30.503]    TraceD2_Pin=0x00040005
[21:39:30.503]    TraceD3_Pin=0x00040006
[21:39:30.504]  </debugvars>
[21:39:30.515]  
[21:39:30.516]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:39:30.516]    <block atomic="false" info="">
[21:39:30.516]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:39:30.517]        // -> [traceSWO <= 0x00000001]
[21:39:30.517]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:39:30.517]        // -> [traceTPIU <= 0x00000000]
[21:39:30.517]    </block>
[21:39:30.518]    <control if="traceSWO" while="" timeout="0" info="">
[21:39:30.518]      // if-block "traceSWO"
[21:39:30.518]        // =>  TRUE
[21:39:30.518]      <block atomic="false" info="">
[21:39:30.519]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:39:30.519]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:39:30.519]            <block atomic="false" info="">
[21:39:30.519]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:39:30.519]                // -> [dbgmcu_val <= 0x00000000]
[21:39:30.530]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:39:30.530]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:39:30.531]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:39:30.532]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.532]                // -> [dbgmcu_val <= 0x00000007]
[21:39:30.532]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:39:30.533]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:39:30.533]              Sequence("ConfigureTraceSWOPin");
[21:39:30.533]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:39:30.533]                  <block atomic="false" info="">
[21:39:30.534]                    __var pin     = 0;
[21:39:30.534]                      // -> [pin <= 0x00000000]
[21:39:30.534]                    __var port    = 0;
[21:39:30.534]                      // -> [port <= 0x00000000]
[21:39:30.534]                    __var portAdr = 0;
[21:39:30.535]                      // -> [portAdr <= 0x00000000]
[21:39:30.535]                    __var pos     = 0;
[21:39:30.545]                      // -> [pos <= 0x00000000]
[21:39:30.546]                    __var SWO_Pin = 0x00010003;          // PB3
[21:39:30.546]                      // -> [SWO_Pin <= 0x00010003]
[21:39:30.546]                  </block>
[21:39:30.547]                  <block atomic="false" info="configure SWO">
[21:39:30.547]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:39:30.547]                      // -> [pin <= 0x00000003]
[21:39:30.547]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:39:30.548]                      // -> [port <= 0x00000001]
[21:39:30.548]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:39:30.548]                      // -> [portAdr <= 0x40020400]
[21:39:30.549]                    pos = pin * 2;
[21:39:30.549]                      // -> [pos <= 0x00000006]
[21:39:30.549]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:39:30.550]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.559]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.559]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:39:30.560]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.560]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.561]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:39:30.561]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.562]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.562]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:39:30.563]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.563]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.563]                  </block>
[21:39:30.564]                  <control if="pin <  8" while="" timeout="0" info="">
[21:39:30.564]                    // if-block "pin <  8"
[21:39:30.564]                      // =>  TRUE
[21:39:30.564]                    <block atomic="false" info="">
[21:39:30.565]                      pos = ((pin    ) & 7) * 4;
[21:39:30.565]                        // -> [pos <= 0x0000000C]
[21:39:30.571]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:39:30.572]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.573]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.573]                    </block>
[21:39:30.574]                    // end if-block "pin <  8"
[21:39:30.574]                  </control>
[21:39:30.574]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:39:30.574]                    // if-block "pin >= 8"
[21:39:30.574]                      // =>  FALSE
[21:39:30.575]                    // skip if-block "pin >= 8"
[21:39:30.575]                  </control>
[21:39:30.575]                </sequence>
[21:39:30.575]            </block>
[21:39:30.575]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:39:30.576]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:39:30.576]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.586]            </block>
[21:39:30.595]          </sequence>
[21:39:30.610]      </block>
[21:39:30.610]      // end if-block "traceSWO"
[21:39:30.623]    </control>
[21:39:30.636]    <control if="traceTPIU" while="" timeout="0" info="">
[21:39:30.636]      // if-block "traceTPIU"
[21:39:30.636]        // =>  FALSE
[21:39:30.637]      // skip if-block "traceTPIU"
[21:39:30.637]    </control>
[21:39:30.637]  </sequence>
[21:39:30.638]  
[21:39:30.870]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:39:30.870]  
[21:39:30.873]  <debugvars>
[21:39:30.874]    // Pre-defined
[21:39:30.874]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:39:30.875]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[21:39:30.875]    __dp=0x00000000
[21:39:30.875]    __ap=0x00000000
[21:39:30.876]    __traceout=0x00000001      (SWO Trace)
[21:39:30.876]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:39:30.876]    __FlashAddr=0x00000000
[21:39:30.876]    __FlashLen=0x00000000
[21:39:30.876]    __FlashArg=0x00000000
[21:39:30.877]    __FlashOp=0x00000000
[21:39:30.877]    __Result=0x00000000
[21:39:30.877]    
[21:39:30.877]    // User-defined
[21:39:30.877]    DbgMCU_CR=0x00000007
[21:39:30.878]    DbgMCU_APB1_Fz=0x00000000
[21:39:30.878]    DbgMCU_APB2_Fz=0x00000000
[21:39:30.878]    TraceClk_Pin=0x00040002
[21:39:30.879]    TraceD0_Pin=0x00040003
[21:39:30.879]    TraceD1_Pin=0x00040004
[21:39:30.879]    TraceD2_Pin=0x00040005
[21:39:30.879]    TraceD3_Pin=0x00040006
[21:39:30.879]  </debugvars>
[21:39:30.880]  
[21:39:30.880]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:39:30.880]    <block atomic="false" info="">
[21:39:30.880]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:39:30.880]        // -> [traceSWO <= 0x00000001]
[21:39:30.881]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:39:30.881]        // -> [traceTPIU <= 0x00000000]
[21:39:30.891]    </block>
[21:39:30.892]    <control if="traceSWO" while="" timeout="0" info="">
[21:39:30.892]      // if-block "traceSWO"
[21:39:30.892]        // =>  TRUE
[21:39:30.893]      <block atomic="false" info="">
[21:39:30.893]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:39:30.893]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:39:30.894]            <block atomic="false" info="">
[21:39:30.894]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:39:30.894]                // -> [dbgmcu_val <= 0x00000000]
[21:39:30.894]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:39:30.895]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:39:30.895]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:39:30.896]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.896]                // -> [dbgmcu_val <= 0x00000007]
[21:39:30.896]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:39:30.908]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:39:30.908]              Sequence("ConfigureTraceSWOPin");
[21:39:30.909]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:39:30.909]                  <block atomic="false" info="">
[21:39:30.909]                    __var pin     = 0;
[21:39:30.910]                      // -> [pin <= 0x00000000]
[21:39:30.910]                    __var port    = 0;
[21:39:30.910]                      // -> [port <= 0x00000000]
[21:39:30.910]                    __var portAdr = 0;
[21:39:30.910]                      // -> [portAdr <= 0x00000000]
[21:39:30.911]                    __var pos     = 0;
[21:39:30.911]                      // -> [pos <= 0x00000000]
[21:39:30.911]                    __var SWO_Pin = 0x00010003;          // PB3
[21:39:30.911]                      // -> [SWO_Pin <= 0x00010003]
[21:39:30.911]                  </block>
[21:39:30.912]                  <block atomic="false" info="configure SWO">
[21:39:30.912]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:39:30.912]                      // -> [pin <= 0x00000003]
[21:39:30.913]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:39:30.913]                      // -> [port <= 0x00000001]
[21:39:30.913]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:39:30.914]                      // -> [portAdr <= 0x40020400]
[21:39:30.914]                    pos = pin * 2;
[21:39:30.914]                      // -> [pos <= 0x00000006]
[21:39:30.927]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:39:30.929]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.929]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.930]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:39:30.930]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.931]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.931]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:39:30.932]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.932]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.932]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:39:30.933]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.934]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.934]                  </block>
[21:39:30.934]                  <control if="pin <  8" while="" timeout="0" info="">
[21:39:30.934]                    // if-block "pin <  8"
[21:39:30.935]                      // =>  TRUE
[21:39:30.939]                    <block atomic="false" info="">
[21:39:30.939]                      pos = ((pin    ) & 7) * 4;
[21:39:30.939]                        // -> [pos <= 0x0000000C]
[21:39:30.939]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:39:30.940]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.941]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.941]                    </block>
[21:39:30.941]                    // end if-block "pin <  8"
[21:39:30.941]                  </control>
[21:39:30.942]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:39:30.942]                    // if-block "pin >= 8"
[21:39:30.942]                      // =>  FALSE
[21:39:30.942]                    // skip if-block "pin >= 8"
[21:39:30.943]                  </control>
[21:39:30.943]                </sequence>
[21:39:30.943]            </block>
[21:39:30.953]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:39:30.953]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:39:30.954]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:39:30.954]            </block>
[21:39:30.954]          </sequence>
[21:39:30.954]      </block>
[21:39:30.955]      // end if-block "traceSWO"
[21:39:30.955]    </control>
[21:39:30.956]    <control if="traceTPIU" while="" timeout="0" info="">
[21:39:30.956]      // if-block "traceTPIU"
[21:39:30.956]        // =>  FALSE
[21:39:30.956]      // skip if-block "traceTPIU"
[21:39:30.957]    </control>
[21:39:30.957]  </sequence>
[21:39:30.957]  
[09:47:31.998]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:47:31.998]  
[09:47:31.998]  <debugvars>
[09:47:31.999]    // Pre-defined
[09:47:31.999]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:47:31.999]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:47:31.999]    __dp=0x00000000
[09:47:32.000]    __ap=0x00000000
[09:47:32.000]    __traceout=0x00000001      (SWO Trace)
[09:47:32.000]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:47:32.000]    __FlashAddr=0x00000000
[09:47:32.000]    __FlashLen=0x00000000
[09:47:32.001]    __FlashArg=0x00000000
[09:47:32.001]    __FlashOp=0x00000000
[09:47:32.001]    __Result=0x00000000
[09:47:32.001]    
[09:47:32.001]    // User-defined
[09:47:32.002]    DbgMCU_CR=0x00000007
[09:47:32.002]    DbgMCU_APB1_Fz=0x00000000
[09:47:32.002]    DbgMCU_APB2_Fz=0x00000000
[09:47:32.003]    TraceClk_Pin=0x00040002
[09:47:32.003]    TraceD0_Pin=0x00040003
[09:47:32.003]    TraceD1_Pin=0x00040004
[09:47:32.003]    TraceD2_Pin=0x00040005
[09:47:32.004]    TraceD3_Pin=0x00040006
[09:47:32.004]  </debugvars>
[09:47:32.004]  
[09:47:32.004]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:47:32.005]    <block atomic="false" info="">
[09:47:32.005]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:47:32.005]        // -> [traceSWO <= 0x00000001]
[09:47:32.005]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:47:32.005]        // -> [traceTPIU <= 0x00000000]
[09:47:32.006]    </block>
[09:47:32.006]    <control if="traceSWO" while="" timeout="0" info="">
[09:47:32.006]      // if-block "traceSWO"
[09:47:32.006]        // =>  TRUE
[09:47:32.006]      <block atomic="false" info="">
[09:47:32.006]        Sequence("DisableTraceSWO");
[09:47:32.007]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:47:32.007]            <block atomic="false" info="">
[09:47:32.007]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:47:32.007]                // -> [dbgmcu_val <= 0x00000000]
[09:47:32.007]            </block>
[09:47:32.008]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:47:32.008]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:47:32.009]  
[09:47:32.009]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[09:47:32.009]  
[09:47:32.009]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:47:32.009]            </block>
[09:47:32.010]          </sequence>
[09:47:32.010]      </block>
[09:47:32.010]      // end if-block "traceSWO"
[09:47:32.010]    </control>
[09:47:32.010]  </sequence>
[09:47:32.010]  
[09:48:38.885]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:48:38.885]  
[09:48:38.886]  <debugvars>
[09:48:38.886]    // Pre-defined
[09:48:38.886]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:48:38.886]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:48:38.886]    __dp=0x00000000
[09:48:38.886]    __ap=0x00000000
[09:48:38.886]    __traceout=0x00000001      (SWO Trace)
[09:48:38.886]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:48:38.886]    __FlashAddr=0x00000000
[09:48:38.887]    __FlashLen=0x00000000
[09:48:38.887]    __FlashArg=0x00000000
[09:48:38.887]    __FlashOp=0x00000000
[09:48:38.887]    __Result=0x00000000
[09:48:38.887]    
[09:48:38.887]    // User-defined
[09:48:38.887]    DbgMCU_CR=0x00000007
[09:48:38.887]    DbgMCU_APB1_Fz=0x00000000
[09:48:38.888]    DbgMCU_APB2_Fz=0x00000000
[09:48:38.888]    TraceClk_Pin=0x00040002
[09:48:38.888]    TraceD0_Pin=0x00040003
[09:48:38.888]    TraceD1_Pin=0x00040004
[09:48:38.888]    TraceD2_Pin=0x00040005
[09:48:38.888]    TraceD3_Pin=0x00040006
[09:48:38.888]  </debugvars>
[09:48:38.888]  
[09:48:38.889]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:48:38.889]    <block atomic="false" info="">
[09:48:38.889]      Sequence("CheckID");
[09:48:38.889]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:48:38.889]          <block atomic="false" info="">
[09:48:38.890]            __var pidr1 = 0;
[09:48:38.890]              // -> [pidr1 <= 0x00000000]
[09:48:38.890]            __var pidr2 = 0;
[09:48:38.890]              // -> [pidr2 <= 0x00000000]
[09:48:38.890]            __var jep106id = 0;
[09:48:38.890]              // -> [jep106id <= 0x00000000]
[09:48:38.890]            __var ROMTableBase = 0;
[09:48:38.891]              // -> [ROMTableBase <= 0x00000000]
[09:48:38.891]            __ap = 0;      // AHB-AP
[09:48:38.891]              // -> [__ap <= 0x00000000]
[09:48:38.891]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:48:38.891]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.892]              // -> [ROMTableBase <= 0xE00FD000]
[09:48:38.892]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:48:38.892]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.892]              // -> [pidr1 <= 0x00000004]
[09:48:38.892]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:48:38.893]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.893]              // -> [pidr2 <= 0x0000001A]
[09:48:38.893]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:48:38.893]              // -> [jep106id <= 0x00000020]
[09:48:38.893]          </block>
[09:48:38.893]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:48:38.894]            // if-block "jep106id != 0x20"
[09:48:38.894]              // =>  FALSE
[09:48:38.894]            // skip if-block "jep106id != 0x20"
[09:48:38.894]          </control>
[09:48:38.894]        </sequence>
[09:48:38.894]    </block>
[09:48:38.894]  </sequence>
[09:48:38.895]  
[09:48:38.909]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:48:38.910]  
[09:48:38.910]  <debugvars>
[09:48:38.910]    // Pre-defined
[09:48:38.910]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:48:38.910]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:48:38.910]    __dp=0x00000000
[09:48:38.910]    __ap=0x00000000
[09:48:38.910]    __traceout=0x00000001      (SWO Trace)
[09:48:38.911]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:48:38.911]    __FlashAddr=0x00000000
[09:48:38.911]    __FlashLen=0x00000000
[09:48:38.911]    __FlashArg=0x00000000
[09:48:38.911]    __FlashOp=0x00000000
[09:48:38.911]    __Result=0x00000000
[09:48:38.911]    
[09:48:38.911]    // User-defined
[09:48:38.912]    DbgMCU_CR=0x00000007
[09:48:38.912]    DbgMCU_APB1_Fz=0x00000000
[09:48:38.912]    DbgMCU_APB2_Fz=0x00000000
[09:48:38.912]    TraceClk_Pin=0x00040002
[09:48:38.912]    TraceD0_Pin=0x00040003
[09:48:38.912]    TraceD1_Pin=0x00040004
[09:48:38.912]    TraceD2_Pin=0x00040005
[09:48:38.913]    TraceD3_Pin=0x00040006
[09:48:38.913]  </debugvars>
[09:48:38.913]  
[09:48:38.913]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:48:38.913]    <block atomic="false" info="">
[09:48:38.913]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:48:38.914]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.914]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:48:38.915]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.915]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:48:38.915]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.916]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:48:38.916]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:48:38.916]    </block>
[09:48:38.916]  </sequence>
[09:48:38.916]  
[09:49:10.424]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:49:10.424]  
[09:49:10.424]  <debugvars>
[09:49:10.425]    // Pre-defined
[09:49:10.425]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:49:10.425]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:49:10.425]    __dp=0x00000000
[09:49:10.425]    __ap=0x00000000
[09:49:10.426]    __traceout=0x00000001      (SWO Trace)
[09:49:10.426]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:49:10.426]    __FlashAddr=0x00000000
[09:49:10.426]    __FlashLen=0x00000000
[09:49:10.426]    __FlashArg=0x00000000
[09:49:10.427]    __FlashOp=0x00000000
[09:49:10.427]    __Result=0x00000000
[09:49:10.427]    
[09:49:10.427]    // User-defined
[09:49:10.427]    DbgMCU_CR=0x00000007
[09:49:10.427]    DbgMCU_APB1_Fz=0x00000000
[09:49:10.427]    DbgMCU_APB2_Fz=0x00000000
[09:49:10.428]    TraceClk_Pin=0x00040002
[09:49:10.428]    TraceD0_Pin=0x00040003
[09:49:10.428]    TraceD1_Pin=0x00040004
[09:49:10.428]    TraceD2_Pin=0x00040005
[09:49:10.428]    TraceD3_Pin=0x00040006
[09:49:10.429]  </debugvars>
[09:49:10.429]  
[09:49:10.429]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:49:10.429]    <block atomic="false" info="">
[09:49:10.429]      Sequence("CheckID");
[09:49:10.430]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:49:10.430]          <block atomic="false" info="">
[09:49:10.430]            __var pidr1 = 0;
[09:49:10.430]              // -> [pidr1 <= 0x00000000]
[09:49:10.430]            __var pidr2 = 0;
[09:49:10.430]              // -> [pidr2 <= 0x00000000]
[09:49:10.431]            __var jep106id = 0;
[09:49:10.431]              // -> [jep106id <= 0x00000000]
[09:49:10.431]            __var ROMTableBase = 0;
[09:49:10.431]              // -> [ROMTableBase <= 0x00000000]
[09:49:10.431]            __ap = 0;      // AHB-AP
[09:49:10.431]              // -> [__ap <= 0x00000000]
[09:49:10.432]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:49:10.432]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.432]              // -> [ROMTableBase <= 0xE00FD000]
[09:49:10.432]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:49:10.433]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.433]              // -> [pidr1 <= 0x00000004]
[09:49:10.433]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:49:10.434]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.434]              // -> [pidr2 <= 0x0000001A]
[09:49:10.434]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:49:10.434]              // -> [jep106id <= 0x00000020]
[09:49:10.434]          </block>
[09:49:10.435]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:49:10.435]            // if-block "jep106id != 0x20"
[09:49:10.435]              // =>  FALSE
[09:49:10.435]            // skip if-block "jep106id != 0x20"
[09:49:10.435]          </control>
[09:49:10.435]        </sequence>
[09:49:10.435]    </block>
[09:49:10.435]  </sequence>
[09:49:10.436]  
[09:49:10.449]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:49:10.449]  
[09:49:10.449]  <debugvars>
[09:49:10.449]    // Pre-defined
[09:49:10.449]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:49:10.450]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:49:10.450]    __dp=0x00000000
[09:49:10.450]    __ap=0x00000000
[09:49:10.450]    __traceout=0x00000001      (SWO Trace)
[09:49:10.450]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:49:10.451]    __FlashAddr=0x00000000
[09:49:10.452]    __FlashLen=0x00000000
[09:49:10.452]    __FlashArg=0x00000000
[09:49:10.452]    __FlashOp=0x00000000
[09:49:10.452]    __Result=0x00000000
[09:49:10.452]    
[09:49:10.452]    // User-defined
[09:49:10.452]    DbgMCU_CR=0x00000007
[09:49:10.452]    DbgMCU_APB1_Fz=0x00000000
[09:49:10.452]    DbgMCU_APB2_Fz=0x00000000
[09:49:10.452]    TraceClk_Pin=0x00040002
[09:49:10.452]    TraceD0_Pin=0x00040003
[09:49:10.452]    TraceD1_Pin=0x00040004
[09:49:10.453]    TraceD2_Pin=0x00040005
[09:49:10.453]    TraceD3_Pin=0x00040006
[09:49:10.453]  </debugvars>
[09:49:10.453]  
[09:49:10.453]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:49:10.453]    <block atomic="false" info="">
[09:49:10.453]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:49:10.454]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.454]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:49:10.454]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.455]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:49:10.455]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.455]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:49:10.456]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.456]    </block>
[09:49:10.456]  </sequence>
[09:49:10.456]  
[09:49:10.473]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:49:10.473]  
[09:49:10.473]  <debugvars>
[09:49:10.473]    // Pre-defined
[09:49:10.474]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:49:10.474]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:49:10.474]    __dp=0x00000000
[09:49:10.474]    __ap=0x00000000
[09:49:10.474]    __traceout=0x00000001      (SWO Trace)
[09:49:10.475]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:49:10.475]    __FlashAddr=0x00000000
[09:49:10.475]    __FlashLen=0x00000000
[09:49:10.475]    __FlashArg=0x00000000
[09:49:10.475]    __FlashOp=0x00000000
[09:49:10.476]    __Result=0x00000000
[09:49:10.476]    
[09:49:10.476]    // User-defined
[09:49:10.476]    DbgMCU_CR=0x00000007
[09:49:10.476]    DbgMCU_APB1_Fz=0x00000000
[09:49:10.476]    DbgMCU_APB2_Fz=0x00000000
[09:49:10.477]    TraceClk_Pin=0x00040002
[09:49:10.477]    TraceD0_Pin=0x00040003
[09:49:10.477]    TraceD1_Pin=0x00040004
[09:49:10.477]    TraceD2_Pin=0x00040005
[09:49:10.477]    TraceD3_Pin=0x00040006
[09:49:10.478]  </debugvars>
[09:49:10.478]  
[09:49:10.478]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:49:10.478]    <block atomic="false" info="">
[09:49:10.478]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:49:10.479]        // -> [traceSWO <= 0x00000001]
[09:49:10.479]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:49:10.479]        // -> [traceTPIU <= 0x00000000]
[09:49:10.479]    </block>
[09:49:10.479]    <control if="traceSWO" while="" timeout="0" info="">
[09:49:10.480]      // if-block "traceSWO"
[09:49:10.480]        // =>  TRUE
[09:49:10.480]      <block atomic="false" info="">
[09:49:10.480]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:49:10.480]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:49:10.481]            <block atomic="false" info="">
[09:49:10.481]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:49:10.481]                // -> [dbgmcu_val <= 0x00000000]
[09:49:10.481]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:49:10.482]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:49:10.482]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:49:10.482]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.482]                // -> [dbgmcu_val <= 0x00000007]
[09:49:10.483]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:49:10.483]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:49:10.483]              Sequence("ConfigureTraceSWOPin");
[09:49:10.483]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:49:10.483]                  <block atomic="false" info="">
[09:49:10.484]                    __var pin     = 0;
[09:49:10.484]                      // -> [pin <= 0x00000000]
[09:49:10.485]                    __var port    = 0;
[09:49:10.485]                      // -> [port <= 0x00000000]
[09:49:10.485]                    __var portAdr = 0;
[09:49:10.485]                      // -> [portAdr <= 0x00000000]
[09:49:10.485]                    __var pos     = 0;
[09:49:10.485]                      // -> [pos <= 0x00000000]
[09:49:10.485]                    __var SWO_Pin = 0x00010003;          // PB3
[09:49:10.485]                      // -> [SWO_Pin <= 0x00010003]
[09:49:10.486]                  </block>
[09:49:10.486]                  <block atomic="false" info="configure SWO">
[09:49:10.486]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:49:10.486]                      // -> [pin <= 0x00000003]
[09:49:10.486]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:49:10.487]                      // -> [port <= 0x00000001]
[09:49:10.487]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:49:10.487]                      // -> [portAdr <= 0x40020400]
[09:49:10.487]                    pos = pin * 2;
[09:49:10.487]                      // -> [pos <= 0x00000006]
[09:49:10.488]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:49:10.488]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.489]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.489]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:49:10.489]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.490]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.490]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:49:10.491]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.491]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.491]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:49:10.492]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.493]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.493]                  </block>
[09:49:10.493]                  <control if="pin <  8" while="" timeout="0" info="">
[09:49:10.493]                    // if-block "pin <  8"
[09:49:10.493]                      // =>  TRUE
[09:49:10.493]                    <block atomic="false" info="">
[09:49:10.493]                      pos = ((pin    ) & 7) * 4;
[09:49:10.494]                        // -> [pos <= 0x0000000C]
[09:49:10.494]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:49:10.494]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.495]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.495]                    </block>
[09:49:10.495]                    // end if-block "pin <  8"
[09:49:10.495]                  </control>
[09:49:10.496]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:49:10.496]                    // if-block "pin >= 8"
[09:49:10.496]                      // =>  FALSE
[09:49:10.496]                    // skip if-block "pin >= 8"
[09:49:10.496]                  </control>
[09:49:10.496]                </sequence>
[09:49:10.497]            </block>
[09:49:10.497]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:49:10.497]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:49:10.497]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.497]            </block>
[09:49:10.497]          </sequence>
[09:49:10.498]      </block>
[09:49:10.498]      // end if-block "traceSWO"
[09:49:10.498]    </control>
[09:49:10.498]    <control if="traceTPIU" while="" timeout="0" info="">
[09:49:10.498]      // if-block "traceTPIU"
[09:49:10.498]        // =>  FALSE
[09:49:10.499]      // skip if-block "traceTPIU"
[09:49:10.499]    </control>
[09:49:10.499]  </sequence>
[09:49:10.499]  
[09:49:10.504]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:49:10.504]  
[09:49:10.504]  <debugvars>
[09:49:10.504]    // Pre-defined
[09:49:10.504]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:49:10.504]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:49:10.504]    __dp=0x00000000
[09:49:10.504]    __ap=0x00000000
[09:49:10.504]    __traceout=0x00000001      (SWO Trace)
[09:49:10.504]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:49:10.504]    __FlashAddr=0x00000000
[09:49:10.504]    __FlashLen=0x00000000
[09:49:10.505]    __FlashArg=0x00000000
[09:49:10.505]    __FlashOp=0x00000000
[09:49:10.505]    __Result=0x00000000
[09:49:10.505]    
[09:49:10.505]    // User-defined
[09:49:10.505]    DbgMCU_CR=0x00000007
[09:49:10.505]    DbgMCU_APB1_Fz=0x00000000
[09:49:10.505]    DbgMCU_APB2_Fz=0x00000000
[09:49:10.506]    TraceClk_Pin=0x00040002
[09:49:10.506]    TraceD0_Pin=0x00040003
[09:49:10.506]    TraceD1_Pin=0x00040004
[09:49:10.506]    TraceD2_Pin=0x00040005
[09:49:10.506]    TraceD3_Pin=0x00040006
[09:49:10.506]  </debugvars>
[09:49:10.506]  
[09:49:10.506]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:49:10.507]    <block atomic="false" info="">
[09:49:10.507]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:49:10.507]        // -> [traceSWO <= 0x00000001]
[09:49:10.507]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:49:10.507]        // -> [traceTPIU <= 0x00000000]
[09:49:10.507]    </block>
[09:49:10.508]    <control if="traceSWO" while="" timeout="0" info="">
[09:49:10.508]      // if-block "traceSWO"
[09:49:10.508]        // =>  TRUE
[09:49:10.508]      <block atomic="false" info="">
[09:49:10.508]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:49:10.508]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:49:10.508]            <block atomic="false" info="">
[09:49:10.508]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:49:10.509]                // -> [dbgmcu_val <= 0x00000000]
[09:49:10.509]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:49:10.509]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:49:10.509]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:49:10.509]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.509]                // -> [dbgmcu_val <= 0x00000007]
[09:49:10.510]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:49:10.510]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:49:10.510]              Sequence("ConfigureTraceSWOPin");
[09:49:10.510]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:49:10.510]                  <block atomic="false" info="">
[09:49:10.510]                    __var pin     = 0;
[09:49:10.510]                      // -> [pin <= 0x00000000]
[09:49:10.510]                    __var port    = 0;
[09:49:10.511]                      // -> [port <= 0x00000000]
[09:49:10.511]                    __var portAdr = 0;
[09:49:10.511]                      // -> [portAdr <= 0x00000000]
[09:49:10.511]                    __var pos     = 0;
[09:49:10.511]                      // -> [pos <= 0x00000000]
[09:49:10.511]                    __var SWO_Pin = 0x00010003;          // PB3
[09:49:10.511]                      // -> [SWO_Pin <= 0x00010003]
[09:49:10.511]                  </block>
[09:49:10.512]                  <block atomic="false" info="configure SWO">
[09:49:10.512]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:49:10.512]                      // -> [pin <= 0x00000003]
[09:49:10.512]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:49:10.512]                      // -> [port <= 0x00000001]
[09:49:10.512]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:49:10.512]                      // -> [portAdr <= 0x40020400]
[09:49:10.513]                    pos = pin * 2;
[09:49:10.513]                      // -> [pos <= 0x00000006]
[09:49:10.513]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:49:10.513]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.514]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.514]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:49:10.514]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.515]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.515]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:49:10.515]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.516]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.516]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:49:10.516]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.517]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.517]                  </block>
[09:49:10.517]                  <control if="pin <  8" while="" timeout="0" info="">
[09:49:10.517]                    // if-block "pin <  8"
[09:49:10.517]                      // =>  TRUE
[09:49:10.517]                    <block atomic="false" info="">
[09:49:10.518]                      pos = ((pin    ) & 7) * 4;
[09:49:10.518]                        // -> [pos <= 0x0000000C]
[09:49:10.519]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:49:10.519]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.519]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.519]                    </block>
[09:49:10.519]                    // end if-block "pin <  8"
[09:49:10.519]                  </control>
[09:49:10.519]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:49:10.519]                    // if-block "pin >= 8"
[09:49:10.519]                      // =>  FALSE
[09:49:10.519]                    // skip if-block "pin >= 8"
[09:49:10.520]                  </control>
[09:49:10.520]                </sequence>
[09:49:10.520]            </block>
[09:49:10.520]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:49:10.520]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:49:10.521]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.521]            </block>
[09:49:10.521]          </sequence>
[09:49:10.521]      </block>
[09:49:10.521]      // end if-block "traceSWO"
[09:49:10.521]    </control>
[09:49:10.521]    <control if="traceTPIU" while="" timeout="0" info="">
[09:49:10.521]      // if-block "traceTPIU"
[09:49:10.522]        // =>  FALSE
[09:49:10.522]      // skip if-block "traceTPIU"
[09:49:10.522]    </control>
[09:49:10.522]  </sequence>
[09:49:10.522]  
[09:49:10.734]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:49:10.734]  
[09:49:10.734]  <debugvars>
[09:49:10.735]    // Pre-defined
[09:49:10.735]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:49:10.735]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:49:10.735]    __dp=0x00000000
[09:49:10.736]    __ap=0x00000000
[09:49:10.736]    __traceout=0x00000001      (SWO Trace)
[09:49:10.736]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:49:10.736]    __FlashAddr=0x00000000
[09:49:10.736]    __FlashLen=0x00000000
[09:49:10.737]    __FlashArg=0x00000000
[09:49:10.737]    __FlashOp=0x00000000
[09:49:10.737]    __Result=0x00000000
[09:49:10.737]    
[09:49:10.737]    // User-defined
[09:49:10.737]    DbgMCU_CR=0x00000007
[09:49:10.738]    DbgMCU_APB1_Fz=0x00000000
[09:49:10.738]    DbgMCU_APB2_Fz=0x00000000
[09:49:10.738]    TraceClk_Pin=0x00040002
[09:49:10.738]    TraceD0_Pin=0x00040003
[09:49:10.738]    TraceD1_Pin=0x00040004
[09:49:10.739]    TraceD2_Pin=0x00040005
[09:49:10.739]    TraceD3_Pin=0x00040006
[09:49:10.739]  </debugvars>
[09:49:10.739]  
[09:49:10.739]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:49:10.739]    <block atomic="false" info="">
[09:49:10.740]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:49:10.740]        // -> [traceSWO <= 0x00000001]
[09:49:10.740]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:49:10.740]        // -> [traceTPIU <= 0x00000000]
[09:49:10.740]    </block>
[09:49:10.740]    <control if="traceSWO" while="" timeout="0" info="">
[09:49:10.741]      // if-block "traceSWO"
[09:49:10.741]        // =>  TRUE
[09:49:10.741]      <block atomic="false" info="">
[09:49:10.741]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:49:10.741]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:49:10.741]            <block atomic="false" info="">
[09:49:10.742]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:49:10.742]                // -> [dbgmcu_val <= 0x00000000]
[09:49:10.742]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:49:10.742]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:49:10.742]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:49:10.743]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.743]                // -> [dbgmcu_val <= 0x00000007]
[09:49:10.743]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:49:10.743]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:49:10.744]              Sequence("ConfigureTraceSWOPin");
[09:49:10.744]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:49:10.744]                  <block atomic="false" info="">
[09:49:10.744]                    __var pin     = 0;
[09:49:10.744]                      // -> [pin <= 0x00000000]
[09:49:10.744]                    __var port    = 0;
[09:49:10.744]                      // -> [port <= 0x00000000]
[09:49:10.745]                    __var portAdr = 0;
[09:49:10.745]                      // -> [portAdr <= 0x00000000]
[09:49:10.745]                    __var pos     = 0;
[09:49:10.745]                      // -> [pos <= 0x00000000]
[09:49:10.745]                    __var SWO_Pin = 0x00010003;          // PB3
[09:49:10.746]                      // -> [SWO_Pin <= 0x00010003]
[09:49:10.746]                  </block>
[09:49:10.746]                  <block atomic="false" info="configure SWO">
[09:49:10.746]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:49:10.746]                      // -> [pin <= 0x00000003]
[09:49:10.746]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:49:10.746]                      // -> [port <= 0x00000001]
[09:49:10.747]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:49:10.747]                      // -> [portAdr <= 0x40020400]
[09:49:10.747]                    pos = pin * 2;
[09:49:10.747]                      // -> [pos <= 0x00000006]
[09:49:10.747]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:49:10.748]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.748]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.749]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:49:10.749]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.750]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.750]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:49:10.750]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.751]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.751]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:49:10.751]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.752]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.752]                  </block>
[09:49:10.752]                  <control if="pin <  8" while="" timeout="0" info="">
[09:49:10.752]                    // if-block "pin <  8"
[09:49:10.752]                      // =>  TRUE
[09:49:10.753]                    <block atomic="false" info="">
[09:49:10.753]                      pos = ((pin    ) & 7) * 4;
[09:49:10.753]                        // -> [pos <= 0x0000000C]
[09:49:10.754]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:49:10.754]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.754]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.754]                    </block>
[09:49:10.755]                    // end if-block "pin <  8"
[09:49:10.755]                  </control>
[09:49:10.755]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:49:10.755]                    // if-block "pin >= 8"
[09:49:10.755]                      // =>  FALSE
[09:49:10.755]                    // skip if-block "pin >= 8"
[09:49:10.755]                  </control>
[09:49:10.756]                </sequence>
[09:49:10.756]            </block>
[09:49:10.757]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:49:10.757]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:49:10.757]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:49:10.757]            </block>
[09:49:10.757]          </sequence>
[09:49:10.757]      </block>
[09:49:10.757]      // end if-block "traceSWO"
[09:49:10.757]    </control>
[09:49:10.757]    <control if="traceTPIU" while="" timeout="0" info="">
[09:49:10.757]      // if-block "traceTPIU"
[09:49:10.757]        // =>  FALSE
[09:49:10.757]      // skip if-block "traceTPIU"
[09:49:10.758]    </control>
[09:49:10.758]  </sequence>
[09:49:10.758]  
[09:50:03.186]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:50:03.186]  
[09:50:03.186]  <debugvars>
[09:50:03.186]    // Pre-defined
[09:50:03.187]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:03.187]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:50:03.187]    __dp=0x00000000
[09:50:03.187]    __ap=0x00000000
[09:50:03.187]    __traceout=0x00000001      (SWO Trace)
[09:50:03.188]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:03.188]    __FlashAddr=0x00000000
[09:50:03.188]    __FlashLen=0x00000000
[09:50:03.188]    __FlashArg=0x00000000
[09:50:03.188]    __FlashOp=0x00000000
[09:50:03.188]    __Result=0x00000000
[09:50:03.189]    
[09:50:03.189]    // User-defined
[09:50:03.189]    DbgMCU_CR=0x00000007
[09:50:03.189]    DbgMCU_APB1_Fz=0x00000000
[09:50:03.189]    DbgMCU_APB2_Fz=0x00000000
[09:50:03.189]    TraceClk_Pin=0x00040002
[09:50:03.189]    TraceD0_Pin=0x00040003
[09:50:03.190]    TraceD1_Pin=0x00040004
[09:50:03.190]    TraceD2_Pin=0x00040005
[09:50:03.190]    TraceD3_Pin=0x00040006
[09:50:03.190]  </debugvars>
[09:50:03.190]  
[09:50:03.190]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:50:03.190]    <block atomic="false" info="">
[09:50:03.190]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:50:03.191]        // -> [traceSWO <= 0x00000001]
[09:50:03.191]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:50:03.191]        // -> [traceTPIU <= 0x00000000]
[09:50:03.191]    </block>
[09:50:03.191]    <control if="traceSWO" while="" timeout="0" info="">
[09:50:03.191]      // if-block "traceSWO"
[09:50:03.191]        // =>  TRUE
[09:50:03.191]      <block atomic="false" info="">
[09:50:03.191]        Sequence("DisableTraceSWO");
[09:50:03.192]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:50:03.192]            <block atomic="false" info="">
[09:50:03.192]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:50:03.192]                // -> [dbgmcu_val <= 0x00000000]
[09:50:03.192]            </block>
[09:50:03.192]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:50:03.192]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:50:03.193]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:50:03.193]                // -> [dbgmcu_val <= 0x00000007]
[09:50:03.193]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:50:03.194]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:03.194]            </block>
[09:50:03.194]          </sequence>
[09:50:03.194]      </block>
[09:50:03.194]      // end if-block "traceSWO"
[09:50:03.194]    </control>
[09:50:03.195]    <control if="traceTPIU" while="" timeout="0" info="">
[09:50:03.195]      // if-block "traceTPIU"
[09:50:03.195]        // =>  FALSE
[09:50:03.195]      // skip if-block "traceTPIU"
[09:50:03.195]    </control>
[09:50:03.195]  </sequence>
[09:50:03.195]  
[09:50:27.663]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:50:27.663]  
[09:50:27.663]  <debugvars>
[09:50:27.663]    // Pre-defined
[09:50:27.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:27.664]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:50:27.664]    __dp=0x00000000
[09:50:27.664]    __ap=0x00000000
[09:50:27.664]    __traceout=0x00000001      (SWO Trace)
[09:50:27.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:27.665]    __FlashAddr=0x00000000
[09:50:27.665]    __FlashLen=0x00000000
[09:50:27.665]    __FlashArg=0x00000000
[09:50:27.665]    __FlashOp=0x00000000
[09:50:27.665]    __Result=0x00000000
[09:50:27.665]    
[09:50:27.665]    // User-defined
[09:50:27.665]    DbgMCU_CR=0x00000007
[09:50:27.666]    DbgMCU_APB1_Fz=0x00000000
[09:50:27.666]    DbgMCU_APB2_Fz=0x00000000
[09:50:27.666]    TraceClk_Pin=0x00040002
[09:50:27.666]    TraceD0_Pin=0x00040003
[09:50:27.666]    TraceD1_Pin=0x00040004
[09:50:27.666]    TraceD2_Pin=0x00040005
[09:50:27.667]    TraceD3_Pin=0x00040006
[09:50:27.667]  </debugvars>
[09:50:27.667]  
[09:50:27.667]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:50:27.667]    <block atomic="false" info="">
[09:50:27.667]      Sequence("CheckID");
[09:50:27.668]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:50:27.668]          <block atomic="false" info="">
[09:50:27.668]            __var pidr1 = 0;
[09:50:27.668]              // -> [pidr1 <= 0x00000000]
[09:50:27.668]            __var pidr2 = 0;
[09:50:27.668]              // -> [pidr2 <= 0x00000000]
[09:50:27.669]            __var jep106id = 0;
[09:50:27.669]              // -> [jep106id <= 0x00000000]
[09:50:27.669]            __var ROMTableBase = 0;
[09:50:27.669]              // -> [ROMTableBase <= 0x00000000]
[09:50:27.669]            __ap = 0;      // AHB-AP
[09:50:27.669]              // -> [__ap <= 0x00000000]
[09:50:27.669]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:50:27.670]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.670]              // -> [ROMTableBase <= 0xE00FD000]
[09:50:27.670]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:50:27.671]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.671]              // -> [pidr1 <= 0x00000004]
[09:50:27.671]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:50:27.672]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.673]              // -> [pidr2 <= 0x0000001A]
[09:50:27.673]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:50:27.673]              // -> [jep106id <= 0x00000020]
[09:50:27.673]          </block>
[09:50:27.673]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:50:27.673]            // if-block "jep106id != 0x20"
[09:50:27.673]              // =>  FALSE
[09:50:27.673]            // skip if-block "jep106id != 0x20"
[09:50:27.673]          </control>
[09:50:27.673]        </sequence>
[09:50:27.673]    </block>
[09:50:27.673]  </sequence>
[09:50:27.673]  
[09:50:27.690]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:50:27.690]  
[09:50:27.690]  <debugvars>
[09:50:27.690]    // Pre-defined
[09:50:27.690]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:27.690]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:50:27.691]    __dp=0x00000000
[09:50:27.691]    __ap=0x00000000
[09:50:27.691]    __traceout=0x00000001      (SWO Trace)
[09:50:27.691]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:27.691]    __FlashAddr=0x00000000
[09:50:27.691]    __FlashLen=0x00000000
[09:50:27.692]    __FlashArg=0x00000000
[09:50:27.692]    __FlashOp=0x00000000
[09:50:27.692]    __Result=0x00000000
[09:50:27.692]    
[09:50:27.692]    // User-defined
[09:50:27.692]    DbgMCU_CR=0x00000007
[09:50:27.692]    DbgMCU_APB1_Fz=0x00000000
[09:50:27.692]    DbgMCU_APB2_Fz=0x00000000
[09:50:27.692]    TraceClk_Pin=0x00040002
[09:50:27.693]    TraceD0_Pin=0x00040003
[09:50:27.693]    TraceD1_Pin=0x00040004
[09:50:27.693]    TraceD2_Pin=0x00040005
[09:50:27.693]    TraceD3_Pin=0x00040006
[09:50:27.693]  </debugvars>
[09:50:27.693]  
[09:50:27.693]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:50:27.693]    <block atomic="false" info="">
[09:50:27.694]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:50:27.694]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.694]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:50:27.695]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.695]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:50:27.695]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.695]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:50:27.696]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:27.696]    </block>
[09:50:27.696]  </sequence>
[09:50:27.696]  
[09:50:59.158]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:50:59.158]  
[09:50:59.158]  <debugvars>
[09:50:59.158]    // Pre-defined
[09:50:59.159]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:59.159]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:50:59.159]    __dp=0x00000000
[09:50:59.159]    __ap=0x00000000
[09:50:59.159]    __traceout=0x00000001      (SWO Trace)
[09:50:59.159]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:59.159]    __FlashAddr=0x00000000
[09:50:59.160]    __FlashLen=0x00000000
[09:50:59.160]    __FlashArg=0x00000000
[09:50:59.160]    __FlashOp=0x00000000
[09:50:59.160]    __Result=0x00000000
[09:50:59.160]    
[09:50:59.160]    // User-defined
[09:50:59.160]    DbgMCU_CR=0x00000007
[09:50:59.160]    DbgMCU_APB1_Fz=0x00000000
[09:50:59.161]    DbgMCU_APB2_Fz=0x00000000
[09:50:59.161]    TraceClk_Pin=0x00040002
[09:50:59.161]    TraceD0_Pin=0x00040003
[09:50:59.161]    TraceD1_Pin=0x00040004
[09:50:59.161]    TraceD2_Pin=0x00040005
[09:50:59.161]    TraceD3_Pin=0x00040006
[09:50:59.161]  </debugvars>
[09:50:59.161]  
[09:50:59.161]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:50:59.162]    <block atomic="false" info="">
[09:50:59.162]      Sequence("CheckID");
[09:50:59.162]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:50:59.162]          <block atomic="false" info="">
[09:50:59.162]            __var pidr1 = 0;
[09:50:59.162]              // -> [pidr1 <= 0x00000000]
[09:50:59.162]            __var pidr2 = 0;
[09:50:59.162]              // -> [pidr2 <= 0x00000000]
[09:50:59.162]            __var jep106id = 0;
[09:50:59.163]              // -> [jep106id <= 0x00000000]
[09:50:59.163]            __var ROMTableBase = 0;
[09:50:59.163]              // -> [ROMTableBase <= 0x00000000]
[09:50:59.163]            __ap = 0;      // AHB-AP
[09:50:59.163]              // -> [__ap <= 0x00000000]
[09:50:59.163]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:50:59.164]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.164]              // -> [ROMTableBase <= 0xE00FD000]
[09:50:59.164]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:50:59.164]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.164]              // -> [pidr1 <= 0x00000004]
[09:50:59.164]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:50:59.165]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.165]              // -> [pidr2 <= 0x0000001A]
[09:50:59.165]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:50:59.165]              // -> [jep106id <= 0x00000020]
[09:50:59.165]          </block>
[09:50:59.165]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:50:59.166]            // if-block "jep106id != 0x20"
[09:50:59.166]              // =>  FALSE
[09:50:59.166]            // skip if-block "jep106id != 0x20"
[09:50:59.166]          </control>
[09:50:59.166]        </sequence>
[09:50:59.166]    </block>
[09:50:59.166]  </sequence>
[09:50:59.166]  
[09:50:59.181]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:50:59.181]  
[09:50:59.181]  <debugvars>
[09:50:59.181]    // Pre-defined
[09:50:59.181]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:59.181]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:50:59.181]    __dp=0x00000000
[09:50:59.182]    __ap=0x00000000
[09:50:59.182]    __traceout=0x00000001      (SWO Trace)
[09:50:59.182]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:59.182]    __FlashAddr=0x00000000
[09:50:59.182]    __FlashLen=0x00000000
[09:50:59.182]    __FlashArg=0x00000000
[09:50:59.182]    __FlashOp=0x00000000
[09:50:59.182]    __Result=0x00000000
[09:50:59.182]    
[09:50:59.182]    // User-defined
[09:50:59.183]    DbgMCU_CR=0x00000007
[09:50:59.183]    DbgMCU_APB1_Fz=0x00000000
[09:50:59.183]    DbgMCU_APB2_Fz=0x00000000
[09:50:59.183]    TraceClk_Pin=0x00040002
[09:50:59.183]    TraceD0_Pin=0x00040003
[09:50:59.183]    TraceD1_Pin=0x00040004
[09:50:59.183]    TraceD2_Pin=0x00040005
[09:50:59.183]    TraceD3_Pin=0x00040006
[09:50:59.184]  </debugvars>
[09:50:59.184]  
[09:50:59.184]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:50:59.184]    <block atomic="false" info="">
[09:50:59.184]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:50:59.185]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.185]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:50:59.185]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.185]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:50:59.186]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.186]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:50:59.186]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.186]    </block>
[09:50:59.186]  </sequence>
[09:50:59.187]  
[09:50:59.202]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:50:59.202]  
[09:50:59.202]  <debugvars>
[09:50:59.202]    // Pre-defined
[09:50:59.203]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:59.203]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:50:59.203]    __dp=0x00000000
[09:50:59.203]    __ap=0x00000000
[09:50:59.203]    __traceout=0x00000001      (SWO Trace)
[09:50:59.203]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:59.204]    __FlashAddr=0x00000000
[09:50:59.204]    __FlashLen=0x00000000
[09:50:59.204]    __FlashArg=0x00000000
[09:50:59.204]    __FlashOp=0x00000000
[09:50:59.204]    __Result=0x00000000
[09:50:59.204]    
[09:50:59.204]    // User-defined
[09:50:59.204]    DbgMCU_CR=0x00000007
[09:50:59.204]    DbgMCU_APB1_Fz=0x00000000
[09:50:59.205]    DbgMCU_APB2_Fz=0x00000000
[09:50:59.205]    TraceClk_Pin=0x00040002
[09:50:59.205]    TraceD0_Pin=0x00040003
[09:50:59.205]    TraceD1_Pin=0x00040004
[09:50:59.205]    TraceD2_Pin=0x00040005
[09:50:59.205]    TraceD3_Pin=0x00040006
[09:50:59.205]  </debugvars>
[09:50:59.206]  
[09:50:59.206]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:50:59.206]    <block atomic="false" info="">
[09:50:59.206]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:50:59.206]        // -> [traceSWO <= 0x00000001]
[09:50:59.207]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:50:59.207]        // -> [traceTPIU <= 0x00000000]
[09:50:59.207]    </block>
[09:50:59.207]    <control if="traceSWO" while="" timeout="0" info="">
[09:50:59.207]      // if-block "traceSWO"
[09:50:59.207]        // =>  TRUE
[09:50:59.207]      <block atomic="false" info="">
[09:50:59.208]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:50:59.208]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:50:59.208]            <block atomic="false" info="">
[09:50:59.208]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:50:59.208]                // -> [dbgmcu_val <= 0x00000000]
[09:50:59.209]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:50:59.209]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:50:59.209]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:50:59.209]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.209]                // -> [dbgmcu_val <= 0x00000007]
[09:50:59.210]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:50:59.210]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:50:59.210]              Sequence("ConfigureTraceSWOPin");
[09:50:59.210]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:50:59.210]                  <block atomic="false" info="">
[09:50:59.210]                    __var pin     = 0;
[09:50:59.210]                      // -> [pin <= 0x00000000]
[09:50:59.211]                    __var port    = 0;
[09:50:59.211]                      // -> [port <= 0x00000000]
[09:50:59.211]                    __var portAdr = 0;
[09:50:59.211]                      // -> [portAdr <= 0x00000000]
[09:50:59.211]                    __var pos     = 0;
[09:50:59.211]                      // -> [pos <= 0x00000000]
[09:50:59.211]                    __var SWO_Pin = 0x00010003;          // PB3
[09:50:59.211]                      // -> [SWO_Pin <= 0x00010003]
[09:50:59.212]                  </block>
[09:50:59.212]                  <block atomic="false" info="configure SWO">
[09:50:59.212]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:50:59.212]                      // -> [pin <= 0x00000003]
[09:50:59.212]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:50:59.212]                      // -> [port <= 0x00000001]
[09:50:59.212]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:50:59.212]                      // -> [portAdr <= 0x40020400]
[09:50:59.212]                    pos = pin * 2;
[09:50:59.213]                      // -> [pos <= 0x00000006]
[09:50:59.213]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:50:59.213]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.214]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.214]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:50:59.214]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.215]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.215]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:50:59.215]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.216]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.216]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:50:59.216]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.217]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.217]                  </block>
[09:50:59.217]                  <control if="pin <  8" while="" timeout="0" info="">
[09:50:59.217]                    // if-block "pin <  8"
[09:50:59.217]                      // =>  TRUE
[09:50:59.217]                    <block atomic="false" info="">
[09:50:59.217]                      pos = ((pin    ) & 7) * 4;
[09:50:59.217]                        // -> [pos <= 0x0000000C]
[09:50:59.218]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:50:59.218]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.218]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.219]                    </block>
[09:50:59.219]                    // end if-block "pin <  8"
[09:50:59.219]                  </control>
[09:50:59.219]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:50:59.219]                    // if-block "pin >= 8"
[09:50:59.219]                      // =>  FALSE
[09:50:59.219]                    // skip if-block "pin >= 8"
[09:50:59.220]                  </control>
[09:50:59.220]                </sequence>
[09:50:59.220]            </block>
[09:50:59.220]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:50:59.220]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:50:59.220]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.221]            </block>
[09:50:59.221]          </sequence>
[09:50:59.221]      </block>
[09:50:59.221]      // end if-block "traceSWO"
[09:50:59.221]    </control>
[09:50:59.221]    <control if="traceTPIU" while="" timeout="0" info="">
[09:50:59.221]      // if-block "traceTPIU"
[09:50:59.222]        // =>  FALSE
[09:50:59.222]      // skip if-block "traceTPIU"
[09:50:59.222]    </control>
[09:50:59.222]  </sequence>
[09:50:59.222]  
[09:50:59.226]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:50:59.226]  
[09:50:59.226]  <debugvars>
[09:50:59.226]    // Pre-defined
[09:50:59.226]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:59.226]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:50:59.226]    __dp=0x00000000
[09:50:59.226]    __ap=0x00000000
[09:50:59.227]    __traceout=0x00000001      (SWO Trace)
[09:50:59.227]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:59.227]    __FlashAddr=0x00000000
[09:50:59.227]    __FlashLen=0x00000000
[09:50:59.227]    __FlashArg=0x00000000
[09:50:59.227]    __FlashOp=0x00000000
[09:50:59.227]    __Result=0x00000000
[09:50:59.227]    
[09:50:59.227]    // User-defined
[09:50:59.227]    DbgMCU_CR=0x00000007
[09:50:59.228]    DbgMCU_APB1_Fz=0x00000000
[09:50:59.228]    DbgMCU_APB2_Fz=0x00000000
[09:50:59.228]    TraceClk_Pin=0x00040002
[09:50:59.228]    TraceD0_Pin=0x00040003
[09:50:59.228]    TraceD1_Pin=0x00040004
[09:50:59.228]    TraceD2_Pin=0x00040005
[09:50:59.228]    TraceD3_Pin=0x00040006
[09:50:59.228]  </debugvars>
[09:50:59.228]  
[09:50:59.229]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:50:59.229]    <block atomic="false" info="">
[09:50:59.229]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:50:59.229]        // -> [traceSWO <= 0x00000001]
[09:50:59.229]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:50:59.229]        // -> [traceTPIU <= 0x00000000]
[09:50:59.229]    </block>
[09:50:59.229]    <control if="traceSWO" while="" timeout="0" info="">
[09:50:59.229]      // if-block "traceSWO"
[09:50:59.230]        // =>  TRUE
[09:50:59.230]      <block atomic="false" info="">
[09:50:59.230]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:50:59.230]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:50:59.230]            <block atomic="false" info="">
[09:50:59.230]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:50:59.230]                // -> [dbgmcu_val <= 0x00000000]
[09:50:59.230]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:50:59.231]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:50:59.231]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:50:59.231]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.231]                // -> [dbgmcu_val <= 0x00000007]
[09:50:59.231]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:50:59.231]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:50:59.232]              Sequence("ConfigureTraceSWOPin");
[09:50:59.232]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:50:59.232]                  <block atomic="false" info="">
[09:50:59.232]                    __var pin     = 0;
[09:50:59.232]                      // -> [pin <= 0x00000000]
[09:50:59.232]                    __var port    = 0;
[09:50:59.232]                      // -> [port <= 0x00000000]
[09:50:59.232]                    __var portAdr = 0;
[09:50:59.232]                      // -> [portAdr <= 0x00000000]
[09:50:59.233]                    __var pos     = 0;
[09:50:59.233]                      // -> [pos <= 0x00000000]
[09:50:59.233]                    __var SWO_Pin = 0x00010003;          // PB3
[09:50:59.233]                      // -> [SWO_Pin <= 0x00010003]
[09:50:59.233]                  </block>
[09:50:59.233]                  <block atomic="false" info="configure SWO">
[09:50:59.233]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:50:59.233]                      // -> [pin <= 0x00000003]
[09:50:59.233]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:50:59.234]                      // -> [port <= 0x00000001]
[09:50:59.234]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:50:59.234]                      // -> [portAdr <= 0x40020400]
[09:50:59.234]                    pos = pin * 2;
[09:50:59.234]                      // -> [pos <= 0x00000006]
[09:50:59.234]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:50:59.235]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.235]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.235]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:50:59.235]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.236]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.236]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:50:59.236]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.237]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.237]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:50:59.237]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.238]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.238]                  </block>
[09:50:59.238]                  <control if="pin <  8" while="" timeout="0" info="">
[09:50:59.238]                    // if-block "pin <  8"
[09:50:59.238]                      // =>  TRUE
[09:50:59.238]                    <block atomic="false" info="">
[09:50:59.239]                      pos = ((pin    ) & 7) * 4;
[09:50:59.239]                        // -> [pos <= 0x0000000C]
[09:50:59.239]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:50:59.239]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.240]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.240]                    </block>
[09:50:59.240]                    // end if-block "pin <  8"
[09:50:59.240]                  </control>
[09:50:59.240]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:50:59.240]                    // if-block "pin >= 8"
[09:50:59.241]                      // =>  FALSE
[09:50:59.241]                    // skip if-block "pin >= 8"
[09:50:59.241]                  </control>
[09:50:59.241]                </sequence>
[09:50:59.241]            </block>
[09:50:59.241]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:50:59.241]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:50:59.242]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.242]            </block>
[09:50:59.242]          </sequence>
[09:50:59.242]      </block>
[09:50:59.242]      // end if-block "traceSWO"
[09:50:59.242]    </control>
[09:50:59.242]    <control if="traceTPIU" while="" timeout="0" info="">
[09:50:59.242]      // if-block "traceTPIU"
[09:50:59.243]        // =>  FALSE
[09:50:59.243]      // skip if-block "traceTPIU"
[09:50:59.243]    </control>
[09:50:59.243]  </sequence>
[09:50:59.243]  
[09:50:59.456]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:50:59.456]  
[09:50:59.457]  <debugvars>
[09:50:59.457]    // Pre-defined
[09:50:59.457]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:50:59.457]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:50:59.457]    __dp=0x00000000
[09:50:59.458]    __ap=0x00000000
[09:50:59.458]    __traceout=0x00000001      (SWO Trace)
[09:50:59.458]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:50:59.459]    __FlashAddr=0x00000000
[09:50:59.459]    __FlashLen=0x00000000
[09:50:59.459]    __FlashArg=0x00000000
[09:50:59.459]    __FlashOp=0x00000000
[09:50:59.459]    __Result=0x00000000
[09:50:59.460]    
[09:50:59.460]    // User-defined
[09:50:59.460]    DbgMCU_CR=0x00000007
[09:50:59.460]    DbgMCU_APB1_Fz=0x00000000
[09:50:59.460]    DbgMCU_APB2_Fz=0x00000000
[09:50:59.460]    TraceClk_Pin=0x00040002
[09:50:59.461]    TraceD0_Pin=0x00040003
[09:50:59.461]    TraceD1_Pin=0x00040004
[09:50:59.461]    TraceD2_Pin=0x00040005
[09:50:59.461]    TraceD3_Pin=0x00040006
[09:50:59.462]  </debugvars>
[09:50:59.462]  
[09:50:59.462]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:50:59.462]    <block atomic="false" info="">
[09:50:59.462]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:50:59.462]        // -> [traceSWO <= 0x00000001]
[09:50:59.462]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:50:59.463]        // -> [traceTPIU <= 0x00000000]
[09:50:59.463]    </block>
[09:50:59.463]    <control if="traceSWO" while="" timeout="0" info="">
[09:50:59.463]      // if-block "traceSWO"
[09:50:59.463]        // =>  TRUE
[09:50:59.463]      <block atomic="false" info="">
[09:50:59.464]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:50:59.464]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:50:59.464]            <block atomic="false" info="">
[09:50:59.464]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:50:59.464]                // -> [dbgmcu_val <= 0x00000000]
[09:50:59.464]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:50:59.465]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:50:59.465]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:50:59.465]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.465]                // -> [dbgmcu_val <= 0x00000007]
[09:50:59.466]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:50:59.466]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:50:59.466]              Sequence("ConfigureTraceSWOPin");
[09:50:59.466]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:50:59.466]                  <block atomic="false" info="">
[09:50:59.466]                    __var pin     = 0;
[09:50:59.467]                      // -> [pin <= 0x00000000]
[09:50:59.467]                    __var port    = 0;
[09:50:59.467]                      // -> [port <= 0x00000000]
[09:50:59.467]                    __var portAdr = 0;
[09:50:59.467]                      // -> [portAdr <= 0x00000000]
[09:50:59.467]                    __var pos     = 0;
[09:50:59.467]                      // -> [pos <= 0x00000000]
[09:50:59.468]                    __var SWO_Pin = 0x00010003;          // PB3
[09:50:59.468]                      // -> [SWO_Pin <= 0x00010003]
[09:50:59.468]                  </block>
[09:50:59.468]                  <block atomic="false" info="configure SWO">
[09:50:59.468]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:50:59.468]                      // -> [pin <= 0x00000003]
[09:50:59.469]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:50:59.469]                      // -> [port <= 0x00000001]
[09:50:59.469]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:50:59.469]                      // -> [portAdr <= 0x40020400]
[09:50:59.469]                    pos = pin * 2;
[09:50:59.469]                      // -> [pos <= 0x00000006]
[09:50:59.470]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:50:59.470]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.470]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.471]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:50:59.471]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.471]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.472]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:50:59.472]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.473]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.473]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:50:59.473]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.474]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.474]                  </block>
[09:50:59.474]                  <control if="pin <  8" while="" timeout="0" info="">
[09:50:59.474]                    // if-block "pin <  8"
[09:50:59.474]                      // =>  TRUE
[09:50:59.475]                    <block atomic="false" info="">
[09:50:59.475]                      pos = ((pin    ) & 7) * 4;
[09:50:59.475]                        // -> [pos <= 0x0000000C]
[09:50:59.475]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:50:59.476]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.476]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.476]                    </block>
[09:50:59.476]                    // end if-block "pin <  8"
[09:50:59.476]                  </control>
[09:50:59.477]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:50:59.477]                    // if-block "pin >= 8"
[09:50:59.477]                      // =>  FALSE
[09:50:59.477]                    // skip if-block "pin >= 8"
[09:50:59.477]                  </control>
[09:50:59.477]                </sequence>
[09:50:59.477]            </block>
[09:50:59.477]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:50:59.477]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:50:59.478]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:50:59.478]            </block>
[09:50:59.478]          </sequence>
[09:50:59.478]      </block>
[09:50:59.478]      // end if-block "traceSWO"
[09:50:59.478]    </control>
[09:50:59.478]    <control if="traceTPIU" while="" timeout="0" info="">
[09:50:59.479]      // if-block "traceTPIU"
[09:50:59.479]        // =>  FALSE
[09:50:59.479]      // skip if-block "traceTPIU"
[09:50:59.479]    </control>
[09:50:59.479]  </sequence>
[09:50:59.479]  
[09:51:28.437]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:51:28.437]  
[09:51:28.437]  <debugvars>
[09:51:28.437]    // Pre-defined
[09:51:28.437]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:28.438]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:51:28.438]    __dp=0x00000000
[09:51:28.438]    __ap=0x00000000
[09:51:28.438]    __traceout=0x00000001      (SWO Trace)
[09:51:28.438]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:28.438]    __FlashAddr=0x00000000
[09:51:28.438]    __FlashLen=0x00000000
[09:51:28.438]    __FlashArg=0x00000000
[09:51:28.438]    __FlashOp=0x00000000
[09:51:28.439]    __Result=0x00000000
[09:51:28.439]    
[09:51:28.439]    // User-defined
[09:51:28.439]    DbgMCU_CR=0x00000007
[09:51:28.439]    DbgMCU_APB1_Fz=0x00000000
[09:51:28.439]    DbgMCU_APB2_Fz=0x00000000
[09:51:28.439]    TraceClk_Pin=0x00040002
[09:51:28.439]    TraceD0_Pin=0x00040003
[09:51:28.439]    TraceD1_Pin=0x00040004
[09:51:28.440]    TraceD2_Pin=0x00040005
[09:51:28.440]    TraceD3_Pin=0x00040006
[09:51:28.440]  </debugvars>
[09:51:28.440]  
[09:51:28.440]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:51:28.440]    <block atomic="false" info="">
[09:51:28.440]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:51:28.441]        // -> [traceSWO <= 0x00000001]
[09:51:28.441]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:51:28.441]        // -> [traceTPIU <= 0x00000000]
[09:51:28.441]    </block>
[09:51:28.441]    <control if="traceSWO" while="" timeout="0" info="">
[09:51:28.441]      // if-block "traceSWO"
[09:51:28.441]        // =>  TRUE
[09:51:28.441]      <block atomic="false" info="">
[09:51:28.442]        Sequence("DisableTraceSWO");
[09:51:28.442]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:51:28.442]            <block atomic="false" info="">
[09:51:28.442]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:51:28.442]                // -> [dbgmcu_val <= 0x00000000]
[09:51:28.442]            </block>
[09:51:28.442]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:51:28.442]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:51:28.443]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:51:28.443]                // -> [dbgmcu_val <= 0x00000007]
[09:51:28.443]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:51:28.444]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:28.444]            </block>
[09:51:28.444]          </sequence>
[09:51:28.444]      </block>
[09:51:28.444]      // end if-block "traceSWO"
[09:51:28.444]    </control>
[09:51:28.444]    <control if="traceTPIU" while="" timeout="0" info="">
[09:51:28.444]      // if-block "traceTPIU"
[09:51:28.445]        // =>  FALSE
[09:51:28.445]      // skip if-block "traceTPIU"
[09:51:28.445]    </control>
[09:51:28.445]  </sequence>
[09:51:28.445]  
[09:51:38.800]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:51:38.800]  
[09:51:38.800]  <debugvars>
[09:51:38.800]    // Pre-defined
[09:51:38.800]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:38.800]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:51:38.800]    __dp=0x00000000
[09:51:38.801]    __ap=0x00000000
[09:51:38.801]    __traceout=0x00000001      (SWO Trace)
[09:51:38.801]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:38.801]    __FlashAddr=0x00000000
[09:51:38.801]    __FlashLen=0x00000000
[09:51:38.801]    __FlashArg=0x00000000
[09:51:38.801]    __FlashOp=0x00000000
[09:51:38.801]    __Result=0x00000000
[09:51:38.802]    
[09:51:38.802]    // User-defined
[09:51:38.802]    DbgMCU_CR=0x00000007
[09:51:38.802]    DbgMCU_APB1_Fz=0x00000000
[09:51:38.802]    DbgMCU_APB2_Fz=0x00000000
[09:51:38.802]    TraceClk_Pin=0x00040002
[09:51:38.802]    TraceD0_Pin=0x00040003
[09:51:38.802]    TraceD1_Pin=0x00040004
[09:51:38.802]    TraceD2_Pin=0x00040005
[09:51:38.802]    TraceD3_Pin=0x00040006
[09:51:38.803]  </debugvars>
[09:51:38.803]  
[09:51:38.803]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:51:38.803]    <block atomic="false" info="">
[09:51:38.803]      Sequence("CheckID");
[09:51:38.803]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:51:38.803]          <block atomic="false" info="">
[09:51:38.803]            __var pidr1 = 0;
[09:51:38.803]              // -> [pidr1 <= 0x00000000]
[09:51:38.804]            __var pidr2 = 0;
[09:51:38.804]              // -> [pidr2 <= 0x00000000]
[09:51:38.804]            __var jep106id = 0;
[09:51:38.804]              // -> [jep106id <= 0x00000000]
[09:51:38.804]            __var ROMTableBase = 0;
[09:51:38.804]              // -> [ROMTableBase <= 0x00000000]
[09:51:38.804]            __ap = 0;      // AHB-AP
[09:51:38.804]              // -> [__ap <= 0x00000000]
[09:51:38.805]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:51:38.805]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.805]              // -> [ROMTableBase <= 0xE00FD000]
[09:51:38.805]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:51:38.806]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.806]              // -> [pidr1 <= 0x00000004]
[09:51:38.806]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:51:38.806]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.806]              // -> [pidr2 <= 0x0000001A]
[09:51:38.807]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:51:38.807]              // -> [jep106id <= 0x00000020]
[09:51:38.807]          </block>
[09:51:38.807]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:51:38.807]            // if-block "jep106id != 0x20"
[09:51:38.807]              // =>  FALSE
[09:51:38.807]            // skip if-block "jep106id != 0x20"
[09:51:38.807]          </control>
[09:51:38.808]        </sequence>
[09:51:38.808]    </block>
[09:51:38.808]  </sequence>
[09:51:38.808]  
[09:51:38.823]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:51:38.823]  
[09:51:38.823]  <debugvars>
[09:51:38.823]    // Pre-defined
[09:51:38.823]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:51:38.824]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:51:38.824]    __dp=0x00000000
[09:51:38.824]    __ap=0x00000000
[09:51:38.824]    __traceout=0x00000001      (SWO Trace)
[09:51:38.824]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:51:38.824]    __FlashAddr=0x00000000
[09:51:38.824]    __FlashLen=0x00000000
[09:51:38.824]    __FlashArg=0x00000000
[09:51:38.825]    __FlashOp=0x00000000
[09:51:38.825]    __Result=0x00000000
[09:51:38.825]    
[09:51:38.825]    // User-defined
[09:51:38.825]    DbgMCU_CR=0x00000007
[09:51:38.825]    DbgMCU_APB1_Fz=0x00000000
[09:51:38.825]    DbgMCU_APB2_Fz=0x00000000
[09:51:38.826]    TraceClk_Pin=0x00040002
[09:51:38.826]    TraceD0_Pin=0x00040003
[09:51:38.826]    TraceD1_Pin=0x00040004
[09:51:38.826]    TraceD2_Pin=0x00040005
[09:51:38.826]    TraceD3_Pin=0x00040006
[09:51:38.826]  </debugvars>
[09:51:38.826]  
[09:51:38.827]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:51:38.827]    <block atomic="false" info="">
[09:51:38.827]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:51:38.827]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.828]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:51:38.828]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.828]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:51:38.828]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.828]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:51:38.829]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:51:38.829]    </block>
[09:51:38.829]  </sequence>
[09:51:38.829]  
[09:52:10.282]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:52:10.282]  
[09:52:10.283]  <debugvars>
[09:52:10.283]    // Pre-defined
[09:52:10.283]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:10.283]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:10.283]    __dp=0x00000000
[09:52:10.283]    __ap=0x00000000
[09:52:10.283]    __traceout=0x00000001      (SWO Trace)
[09:52:10.284]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:10.284]    __FlashAddr=0x00000000
[09:52:10.284]    __FlashLen=0x00000000
[09:52:10.284]    __FlashArg=0x00000000
[09:52:10.284]    __FlashOp=0x00000000
[09:52:10.284]    __Result=0x00000000
[09:52:10.284]    
[09:52:10.284]    // User-defined
[09:52:10.285]    DbgMCU_CR=0x00000007
[09:52:10.285]    DbgMCU_APB1_Fz=0x00000000
[09:52:10.285]    DbgMCU_APB2_Fz=0x00000000
[09:52:10.285]    TraceClk_Pin=0x00040002
[09:52:10.285]    TraceD0_Pin=0x00040003
[09:52:10.285]    TraceD1_Pin=0x00040004
[09:52:10.285]    TraceD2_Pin=0x00040005
[09:52:10.286]    TraceD3_Pin=0x00040006
[09:52:10.286]  </debugvars>
[09:52:10.286]  
[09:52:10.286]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:52:10.286]    <block atomic="false" info="">
[09:52:10.286]      Sequence("CheckID");
[09:52:10.287]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:52:10.287]          <block atomic="false" info="">
[09:52:10.287]            __var pidr1 = 0;
[09:52:10.287]              // -> [pidr1 <= 0x00000000]
[09:52:10.287]            __var pidr2 = 0;
[09:52:10.287]              // -> [pidr2 <= 0x00000000]
[09:52:10.287]            __var jep106id = 0;
[09:52:10.287]              // -> [jep106id <= 0x00000000]
[09:52:10.288]            __var ROMTableBase = 0;
[09:52:10.288]              // -> [ROMTableBase <= 0x00000000]
[09:52:10.288]            __ap = 0;      // AHB-AP
[09:52:10.288]              // -> [__ap <= 0x00000000]
[09:52:10.288]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:52:10.288]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.288]              // -> [ROMTableBase <= 0xE00FD000]
[09:52:10.289]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:52:10.289]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.289]              // -> [pidr1 <= 0x00000004]
[09:52:10.289]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:52:10.290]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.290]              // -> [pidr2 <= 0x0000001A]
[09:52:10.290]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:52:10.290]              // -> [jep106id <= 0x00000020]
[09:52:10.290]          </block>
[09:52:10.290]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:52:10.290]            // if-block "jep106id != 0x20"
[09:52:10.290]              // =>  FALSE
[09:52:10.291]            // skip if-block "jep106id != 0x20"
[09:52:10.291]          </control>
[09:52:10.291]        </sequence>
[09:52:10.291]    </block>
[09:52:10.291]  </sequence>
[09:52:10.291]  
[09:52:10.305]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:52:10.305]  
[09:52:10.305]  <debugvars>
[09:52:10.305]    // Pre-defined
[09:52:10.306]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:10.306]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:10.306]    __dp=0x00000000
[09:52:10.306]    __ap=0x00000000
[09:52:10.306]    __traceout=0x00000001      (SWO Trace)
[09:52:10.307]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:10.307]    __FlashAddr=0x00000000
[09:52:10.307]    __FlashLen=0x00000000
[09:52:10.307]    __FlashArg=0x00000000
[09:52:10.307]    __FlashOp=0x00000000
[09:52:10.308]    __Result=0x00000000
[09:52:10.308]    
[09:52:10.308]    // User-defined
[09:52:10.308]    DbgMCU_CR=0x00000007
[09:52:10.308]    DbgMCU_APB1_Fz=0x00000000
[09:52:10.308]    DbgMCU_APB2_Fz=0x00000000
[09:52:10.308]    TraceClk_Pin=0x00040002
[09:52:10.309]    TraceD0_Pin=0x00040003
[09:52:10.309]    TraceD1_Pin=0x00040004
[09:52:10.309]    TraceD2_Pin=0x00040005
[09:52:10.309]    TraceD3_Pin=0x00040006
[09:52:10.309]  </debugvars>
[09:52:10.309]  
[09:52:10.310]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:52:10.310]    <block atomic="false" info="">
[09:52:10.310]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:52:10.310]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.311]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:52:10.311]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.311]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:52:10.312]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.312]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:52:10.313]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.313]    </block>
[09:52:10.313]  </sequence>
[09:52:10.313]  
[09:52:10.329]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:52:10.329]  
[09:52:10.329]  <debugvars>
[09:52:10.330]    // Pre-defined
[09:52:10.330]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:10.330]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:10.330]    __dp=0x00000000
[09:52:10.330]    __ap=0x00000000
[09:52:10.330]    __traceout=0x00000001      (SWO Trace)
[09:52:10.331]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:10.331]    __FlashAddr=0x00000000
[09:52:10.331]    __FlashLen=0x00000000
[09:52:10.331]    __FlashArg=0x00000000
[09:52:10.332]    __FlashOp=0x00000000
[09:52:10.332]    __Result=0x00000000
[09:52:10.332]    
[09:52:10.332]    // User-defined
[09:52:10.332]    DbgMCU_CR=0x00000007
[09:52:10.332]    DbgMCU_APB1_Fz=0x00000000
[09:52:10.332]    DbgMCU_APB2_Fz=0x00000000
[09:52:10.333]    TraceClk_Pin=0x00040002
[09:52:10.333]    TraceD0_Pin=0x00040003
[09:52:10.333]    TraceD1_Pin=0x00040004
[09:52:10.333]    TraceD2_Pin=0x00040005
[09:52:10.333]    TraceD3_Pin=0x00040006
[09:52:10.334]  </debugvars>
[09:52:10.334]  
[09:52:10.334]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:52:10.334]    <block atomic="false" info="">
[09:52:10.334]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:52:10.334]        // -> [traceSWO <= 0x00000001]
[09:52:10.334]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:52:10.335]        // -> [traceTPIU <= 0x00000000]
[09:52:10.335]    </block>
[09:52:10.335]    <control if="traceSWO" while="" timeout="0" info="">
[09:52:10.335]      // if-block "traceSWO"
[09:52:10.335]        // =>  TRUE
[09:52:10.335]      <block atomic="false" info="">
[09:52:10.336]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:52:10.336]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:52:10.336]            <block atomic="false" info="">
[09:52:10.336]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:52:10.336]                // -> [dbgmcu_val <= 0x00000000]
[09:52:10.336]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:52:10.336]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:52:10.337]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:52:10.337]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.337]                // -> [dbgmcu_val <= 0x00000007]
[09:52:10.337]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:52:10.338]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:52:10.338]              Sequence("ConfigureTraceSWOPin");
[09:52:10.338]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:52:10.338]                  <block atomic="false" info="">
[09:52:10.338]                    __var pin     = 0;
[09:52:10.338]                      // -> [pin <= 0x00000000]
[09:52:10.338]                    __var port    = 0;
[09:52:10.338]                      // -> [port <= 0x00000000]
[09:52:10.339]                    __var portAdr = 0;
[09:52:10.339]                      // -> [portAdr <= 0x00000000]
[09:52:10.339]                    __var pos     = 0;
[09:52:10.339]                      // -> [pos <= 0x00000000]
[09:52:10.339]                    __var SWO_Pin = 0x00010003;          // PB3
[09:52:10.339]                      // -> [SWO_Pin <= 0x00010003]
[09:52:10.339]                  </block>
[09:52:10.339]                  <block atomic="false" info="configure SWO">
[09:52:10.340]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:52:10.340]                      // -> [pin <= 0x00000003]
[09:52:10.340]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:52:10.340]                      // -> [port <= 0x00000001]
[09:52:10.340]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:52:10.340]                      // -> [portAdr <= 0x40020400]
[09:52:10.340]                    pos = pin * 2;
[09:52:10.341]                      // -> [pos <= 0x00000006]
[09:52:10.341]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:52:10.341]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.342]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.342]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:52:10.342]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.343]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.343]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:52:10.343]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.344]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.344]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:52:10.345]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.345]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.345]                  </block>
[09:52:10.345]                  <control if="pin <  8" while="" timeout="0" info="">
[09:52:10.345]                    // if-block "pin <  8"
[09:52:10.345]                      // =>  TRUE
[09:52:10.345]                    <block atomic="false" info="">
[09:52:10.346]                      pos = ((pin    ) & 7) * 4;
[09:52:10.346]                        // -> [pos <= 0x0000000C]
[09:52:10.346]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:52:10.346]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.347]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.347]                    </block>
[09:52:10.347]                    // end if-block "pin <  8"
[09:52:10.347]                  </control>
[09:52:10.347]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:52:10.347]                    // if-block "pin >= 8"
[09:52:10.347]                      // =>  FALSE
[09:52:10.348]                    // skip if-block "pin >= 8"
[09:52:10.348]                  </control>
[09:52:10.348]                </sequence>
[09:52:10.348]            </block>
[09:52:10.348]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:52:10.348]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:52:10.349]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.349]            </block>
[09:52:10.349]          </sequence>
[09:52:10.349]      </block>
[09:52:10.349]      // end if-block "traceSWO"
[09:52:10.349]    </control>
[09:52:10.349]    <control if="traceTPIU" while="" timeout="0" info="">
[09:52:10.349]      // if-block "traceTPIU"
[09:52:10.350]        // =>  FALSE
[09:52:10.350]      // skip if-block "traceTPIU"
[09:52:10.350]    </control>
[09:52:10.350]  </sequence>
[09:52:10.350]  
[09:52:10.354]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:52:10.354]  
[09:52:10.354]  <debugvars>
[09:52:10.354]    // Pre-defined
[09:52:10.354]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:10.354]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:10.354]    __dp=0x00000000
[09:52:10.355]    __ap=0x00000000
[09:52:10.355]    __traceout=0x00000001      (SWO Trace)
[09:52:10.355]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:10.355]    __FlashAddr=0x00000000
[09:52:10.355]    __FlashLen=0x00000000
[09:52:10.355]    __FlashArg=0x00000000
[09:52:10.356]    __FlashOp=0x00000000
[09:52:10.356]    __Result=0x00000000
[09:52:10.356]    
[09:52:10.356]    // User-defined
[09:52:10.356]    DbgMCU_CR=0x00000007
[09:52:10.356]    DbgMCU_APB1_Fz=0x00000000
[09:52:10.357]    DbgMCU_APB2_Fz=0x00000000
[09:52:10.357]    TraceClk_Pin=0x00040002
[09:52:10.357]    TraceD0_Pin=0x00040003
[09:52:10.357]    TraceD1_Pin=0x00040004
[09:52:10.357]    TraceD2_Pin=0x00040005
[09:52:10.357]    TraceD3_Pin=0x00040006
[09:52:10.358]  </debugvars>
[09:52:10.358]  
[09:52:10.358]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:52:10.358]    <block atomic="false" info="">
[09:52:10.358]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:52:10.358]        // -> [traceSWO <= 0x00000001]
[09:52:10.359]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:52:10.359]        // -> [traceTPIU <= 0x00000000]
[09:52:10.359]    </block>
[09:52:10.359]    <control if="traceSWO" while="" timeout="0" info="">
[09:52:10.359]      // if-block "traceSWO"
[09:52:10.359]        // =>  TRUE
[09:52:10.359]      <block atomic="false" info="">
[09:52:10.360]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:52:10.360]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:52:10.360]            <block atomic="false" info="">
[09:52:10.360]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:52:10.360]                // -> [dbgmcu_val <= 0x00000000]
[09:52:10.361]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:52:10.361]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:52:10.361]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:52:10.362]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.362]                // -> [dbgmcu_val <= 0x00000007]
[09:52:10.362]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:52:10.362]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:52:10.362]              Sequence("ConfigureTraceSWOPin");
[09:52:10.362]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:52:10.362]                  <block atomic="false" info="">
[09:52:10.363]                    __var pin     = 0;
[09:52:10.363]                      // -> [pin <= 0x00000000]
[09:52:10.363]                    __var port    = 0;
[09:52:10.363]                      // -> [port <= 0x00000000]
[09:52:10.363]                    __var portAdr = 0;
[09:52:10.363]                      // -> [portAdr <= 0x00000000]
[09:52:10.363]                    __var pos     = 0;
[09:52:10.363]                      // -> [pos <= 0x00000000]
[09:52:10.364]                    __var SWO_Pin = 0x00010003;          // PB3
[09:52:10.364]                      // -> [SWO_Pin <= 0x00010003]
[09:52:10.364]                  </block>
[09:52:10.364]                  <block atomic="false" info="configure SWO">
[09:52:10.364]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:52:10.364]                      // -> [pin <= 0x00000003]
[09:52:10.364]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:52:10.364]                      // -> [port <= 0x00000001]
[09:52:10.365]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:52:10.365]                      // -> [portAdr <= 0x40020400]
[09:52:10.365]                    pos = pin * 2;
[09:52:10.365]                      // -> [pos <= 0x00000006]
[09:52:10.365]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:52:10.365]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.366]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.366]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:52:10.366]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.367]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.367]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:52:10.367]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.367]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.368]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:52:10.368]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.369]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.369]                  </block>
[09:52:10.369]                  <control if="pin <  8" while="" timeout="0" info="">
[09:52:10.369]                    // if-block "pin <  8"
[09:52:10.369]                      // =>  TRUE
[09:52:10.369]                    <block atomic="false" info="">
[09:52:10.369]                      pos = ((pin    ) & 7) * 4;
[09:52:10.370]                        // -> [pos <= 0x0000000C]
[09:52:10.370]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:52:10.370]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.371]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.371]                    </block>
[09:52:10.371]                    // end if-block "pin <  8"
[09:52:10.371]                  </control>
[09:52:10.371]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:52:10.371]                    // if-block "pin >= 8"
[09:52:10.371]                      // =>  FALSE
[09:52:10.371]                    // skip if-block "pin >= 8"
[09:52:10.372]                  </control>
[09:52:10.372]                </sequence>
[09:52:10.372]            </block>
[09:52:10.372]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:52:10.372]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:52:10.372]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.372]            </block>
[09:52:10.373]          </sequence>
[09:52:10.373]      </block>
[09:52:10.373]      // end if-block "traceSWO"
[09:52:10.373]    </control>
[09:52:10.373]    <control if="traceTPIU" while="" timeout="0" info="">
[09:52:10.373]      // if-block "traceTPIU"
[09:52:10.374]        // =>  FALSE
[09:52:10.374]      // skip if-block "traceTPIU"
[09:52:10.374]    </control>
[09:52:10.374]  </sequence>
[09:52:10.374]  
[09:52:10.586]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:52:10.586]  
[09:52:10.586]  <debugvars>
[09:52:10.586]    // Pre-defined
[09:52:10.587]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:10.587]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:10.587]    __dp=0x00000000
[09:52:10.587]    __ap=0x00000000
[09:52:10.587]    __traceout=0x00000001      (SWO Trace)
[09:52:10.588]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:10.588]    __FlashAddr=0x00000000
[09:52:10.588]    __FlashLen=0x00000000
[09:52:10.588]    __FlashArg=0x00000000
[09:52:10.588]    __FlashOp=0x00000000
[09:52:10.588]    __Result=0x00000000
[09:52:10.589]    
[09:52:10.589]    // User-defined
[09:52:10.589]    DbgMCU_CR=0x00000007
[09:52:10.589]    DbgMCU_APB1_Fz=0x00000000
[09:52:10.589]    DbgMCU_APB2_Fz=0x00000000
[09:52:10.589]    TraceClk_Pin=0x00040002
[09:52:10.589]    TraceD0_Pin=0x00040003
[09:52:10.589]    TraceD1_Pin=0x00040004
[09:52:10.590]    TraceD2_Pin=0x00040005
[09:52:10.590]    TraceD3_Pin=0x00040006
[09:52:10.590]  </debugvars>
[09:52:10.590]  
[09:52:10.590]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:52:10.590]    <block atomic="false" info="">
[09:52:10.591]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:52:10.591]        // -> [traceSWO <= 0x00000001]
[09:52:10.591]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:52:10.591]        // -> [traceTPIU <= 0x00000000]
[09:52:10.591]    </block>
[09:52:10.591]    <control if="traceSWO" while="" timeout="0" info="">
[09:52:10.592]      // if-block "traceSWO"
[09:52:10.592]        // =>  TRUE
[09:52:10.592]      <block atomic="false" info="">
[09:52:10.592]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:52:10.592]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:52:10.592]            <block atomic="false" info="">
[09:52:10.592]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:52:10.593]                // -> [dbgmcu_val <= 0x00000000]
[09:52:10.593]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:52:10.593]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:52:10.593]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:52:10.594]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.594]                // -> [dbgmcu_val <= 0x00000007]
[09:52:10.594]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:52:10.594]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:52:10.595]              Sequence("ConfigureTraceSWOPin");
[09:52:10.595]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:52:10.595]                  <block atomic="false" info="">
[09:52:10.595]                    __var pin     = 0;
[09:52:10.595]                      // -> [pin <= 0x00000000]
[09:52:10.595]                    __var port    = 0;
[09:52:10.595]                      // -> [port <= 0x00000000]
[09:52:10.596]                    __var portAdr = 0;
[09:52:10.596]                      // -> [portAdr <= 0x00000000]
[09:52:10.596]                    __var pos     = 0;
[09:52:10.596]                      // -> [pos <= 0x00000000]
[09:52:10.596]                    __var SWO_Pin = 0x00010003;          // PB3
[09:52:10.596]                      // -> [SWO_Pin <= 0x00010003]
[09:52:10.596]                  </block>
[09:52:10.596]                  <block atomic="false" info="configure SWO">
[09:52:10.597]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:52:10.597]                      // -> [pin <= 0x00000003]
[09:52:10.597]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:52:10.597]                      // -> [port <= 0x00000001]
[09:52:10.597]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:52:10.597]                      // -> [portAdr <= 0x40020400]
[09:52:10.597]                    pos = pin * 2;
[09:52:10.597]                      // -> [pos <= 0x00000006]
[09:52:10.598]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:52:10.598]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.598]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.598]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:52:10.599]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.599]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.599]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:52:10.600]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.600]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.600]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:52:10.601]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.601]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.601]                  </block>
[09:52:10.601]                  <control if="pin <  8" while="" timeout="0" info="">
[09:52:10.602]                    // if-block "pin <  8"
[09:52:10.602]                      // =>  TRUE
[09:52:10.602]                    <block atomic="false" info="">
[09:52:10.602]                      pos = ((pin    ) & 7) * 4;
[09:52:10.602]                        // -> [pos <= 0x0000000C]
[09:52:10.602]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:52:10.603]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.603]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.603]                    </block>
[09:52:10.603]                    // end if-block "pin <  8"
[09:52:10.603]                  </control>
[09:52:10.604]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:52:10.604]                    // if-block "pin >= 8"
[09:52:10.604]                      // =>  FALSE
[09:52:10.604]                    // skip if-block "pin >= 8"
[09:52:10.604]                  </control>
[09:52:10.604]                </sequence>
[09:52:10.604]            </block>
[09:52:10.604]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:52:10.604]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:52:10.605]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:10.605]            </block>
[09:52:10.605]          </sequence>
[09:52:10.605]      </block>
[09:52:10.605]      // end if-block "traceSWO"
[09:52:10.605]    </control>
[09:52:10.606]    <control if="traceTPIU" while="" timeout="0" info="">
[09:52:10.606]      // if-block "traceTPIU"
[09:52:10.606]        // =>  FALSE
[09:52:10.606]      // skip if-block "traceTPIU"
[09:52:10.606]    </control>
[09:52:10.606]  </sequence>
[09:52:10.606]  
[09:52:24.788]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:52:24.788]  
[09:52:24.789]  <debugvars>
[09:52:24.789]    // Pre-defined
[09:52:24.789]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:24.789]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:52:24.789]    __dp=0x00000000
[09:52:24.790]    __ap=0x00000000
[09:52:24.790]    __traceout=0x00000001      (SWO Trace)
[09:52:24.790]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:24.790]    __FlashAddr=0x00000000
[09:52:24.790]    __FlashLen=0x00000000
[09:52:24.790]    __FlashArg=0x00000000
[09:52:24.791]    __FlashOp=0x00000000
[09:52:24.791]    __Result=0x00000000
[09:52:24.791]    
[09:52:24.791]    // User-defined
[09:52:24.791]    DbgMCU_CR=0x00000007
[09:52:24.791]    DbgMCU_APB1_Fz=0x00000000
[09:52:24.792]    DbgMCU_APB2_Fz=0x00000000
[09:52:24.792]    TraceClk_Pin=0x00040002
[09:52:24.792]    TraceD0_Pin=0x00040003
[09:52:24.792]    TraceD1_Pin=0x00040004
[09:52:24.792]    TraceD2_Pin=0x00040005
[09:52:24.792]    TraceD3_Pin=0x00040006
[09:52:24.793]  </debugvars>
[09:52:24.793]  
[09:52:24.793]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:52:24.793]    <block atomic="false" info="">
[09:52:24.793]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:52:24.793]        // -> [traceSWO <= 0x00000001]
[09:52:24.794]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:52:24.794]        // -> [traceTPIU <= 0x00000000]
[09:52:24.794]    </block>
[09:52:24.794]    <control if="traceSWO" while="" timeout="0" info="">
[09:52:24.794]      // if-block "traceSWO"
[09:52:24.794]        // =>  TRUE
[09:52:24.794]      <block atomic="false" info="">
[09:52:24.795]        Sequence("DisableTraceSWO");
[09:52:24.795]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:52:24.795]            <block atomic="false" info="">
[09:52:24.795]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:52:24.795]                // -> [dbgmcu_val <= 0x00000000]
[09:52:24.796]            </block>
[09:52:24.796]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:52:24.796]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:52:24.796]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:52:24.797]                // -> [dbgmcu_val <= 0x00000007]
[09:52:24.797]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:52:24.798]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:24.798]            </block>
[09:52:24.798]          </sequence>
[09:52:24.798]      </block>
[09:52:24.798]      // end if-block "traceSWO"
[09:52:24.798]    </control>
[09:52:24.798]    <control if="traceTPIU" while="" timeout="0" info="">
[09:52:24.798]      // if-block "traceTPIU"
[09:52:24.799]        // =>  FALSE
[09:52:24.799]      // skip if-block "traceTPIU"
[09:52:24.799]    </control>
[09:52:24.799]  </sequence>
[09:52:24.799]  
[09:52:49.103]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:52:49.103]  
[09:52:49.104]  <debugvars>
[09:52:49.104]    // Pre-defined
[09:52:49.104]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:49.104]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:52:49.104]    __dp=0x00000000
[09:52:49.104]    __ap=0x00000000
[09:52:49.105]    __traceout=0x00000001      (SWO Trace)
[09:52:49.105]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:49.105]    __FlashAddr=0x00000000
[09:52:49.105]    __FlashLen=0x00000000
[09:52:49.105]    __FlashArg=0x00000000
[09:52:49.105]    __FlashOp=0x00000000
[09:52:49.105]    __Result=0x00000000
[09:52:49.105]    
[09:52:49.105]    // User-defined
[09:52:49.106]    DbgMCU_CR=0x00000007
[09:52:49.106]    DbgMCU_APB1_Fz=0x00000000
[09:52:49.106]    DbgMCU_APB2_Fz=0x00000000
[09:52:49.106]    TraceClk_Pin=0x00040002
[09:52:49.106]    TraceD0_Pin=0x00040003
[09:52:49.106]    TraceD1_Pin=0x00040004
[09:52:49.106]    TraceD2_Pin=0x00040005
[09:52:49.106]    TraceD3_Pin=0x00040006
[09:52:49.107]  </debugvars>
[09:52:49.107]  
[09:52:49.107]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:52:49.107]    <block atomic="false" info="">
[09:52:49.107]      Sequence("CheckID");
[09:52:49.107]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:52:49.107]          <block atomic="false" info="">
[09:52:49.107]            __var pidr1 = 0;
[09:52:49.108]              // -> [pidr1 <= 0x00000000]
[09:52:49.108]            __var pidr2 = 0;
[09:52:49.108]              // -> [pidr2 <= 0x00000000]
[09:52:49.108]            __var jep106id = 0;
[09:52:49.108]              // -> [jep106id <= 0x00000000]
[09:52:49.108]            __var ROMTableBase = 0;
[09:52:49.108]              // -> [ROMTableBase <= 0x00000000]
[09:52:49.108]            __ap = 0;      // AHB-AP
[09:52:49.108]              // -> [__ap <= 0x00000000]
[09:52:49.109]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:52:49.109]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.109]              // -> [ROMTableBase <= 0xE00FD000]
[09:52:49.109]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:52:49.110]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.110]              // -> [pidr1 <= 0x00000004]
[09:52:49.110]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:52:49.110]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.111]              // -> [pidr2 <= 0x0000001A]
[09:52:49.111]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:52:49.111]              // -> [jep106id <= 0x00000020]
[09:52:49.111]          </block>
[09:52:49.111]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:52:49.111]            // if-block "jep106id != 0x20"
[09:52:49.111]              // =>  FALSE
[09:52:49.112]            // skip if-block "jep106id != 0x20"
[09:52:49.112]          </control>
[09:52:49.112]        </sequence>
[09:52:49.112]    </block>
[09:52:49.112]  </sequence>
[09:52:49.112]  
[09:52:49.127]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:52:49.127]  
[09:52:49.127]  <debugvars>
[09:52:49.127]    // Pre-defined
[09:52:49.127]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:52:49.127]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:52:49.127]    __dp=0x00000000
[09:52:49.128]    __ap=0x00000000
[09:52:49.128]    __traceout=0x00000001      (SWO Trace)
[09:52:49.128]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:52:49.128]    __FlashAddr=0x00000000
[09:52:49.128]    __FlashLen=0x00000000
[09:52:49.128]    __FlashArg=0x00000000
[09:52:49.128]    __FlashOp=0x00000000
[09:52:49.128]    __Result=0x00000000
[09:52:49.129]    
[09:52:49.129]    // User-defined
[09:52:49.129]    DbgMCU_CR=0x00000007
[09:52:49.129]    DbgMCU_APB1_Fz=0x00000000
[09:52:49.130]    DbgMCU_APB2_Fz=0x00000000
[09:52:49.130]    TraceClk_Pin=0x00040002
[09:52:49.130]    TraceD0_Pin=0x00040003
[09:52:49.130]    TraceD1_Pin=0x00040004
[09:52:49.130]    TraceD2_Pin=0x00040005
[09:52:49.130]    TraceD3_Pin=0x00040006
[09:52:49.130]  </debugvars>
[09:52:49.130]  
[09:52:49.130]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:52:49.130]    <block atomic="false" info="">
[09:52:49.130]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:52:49.131]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.131]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:52:49.132]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.132]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:52:49.132]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.132]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:52:49.133]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:52:49.133]    </block>
[09:52:49.133]  </sequence>
[09:52:49.133]  
[09:53:20.617]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:53:20.617]  
[09:53:20.617]  <debugvars>
[09:53:20.617]    // Pre-defined
[09:53:20.617]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:20.617]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:20.618]    __dp=0x00000000
[09:53:20.618]    __ap=0x00000000
[09:53:20.618]    __traceout=0x00000001      (SWO Trace)
[09:53:20.618]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:20.618]    __FlashAddr=0x00000000
[09:53:20.618]    __FlashLen=0x00000000
[09:53:20.619]    __FlashArg=0x00000000
[09:53:20.619]    __FlashOp=0x00000000
[09:53:20.619]    __Result=0x00000000
[09:53:20.619]    
[09:53:20.619]    // User-defined
[09:53:20.619]    DbgMCU_CR=0x00000007
[09:53:20.620]    DbgMCU_APB1_Fz=0x00000000
[09:53:20.621]    DbgMCU_APB2_Fz=0x00000000
[09:53:20.621]    TraceClk_Pin=0x00040002
[09:53:20.621]    TraceD0_Pin=0x00040003
[09:53:20.621]    TraceD1_Pin=0x00040004
[09:53:20.621]    TraceD2_Pin=0x00040005
[09:53:20.621]    TraceD3_Pin=0x00040006
[09:53:20.621]  </debugvars>
[09:53:20.621]  
[09:53:20.621]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:53:20.621]    <block atomic="false" info="">
[09:53:20.621]      Sequence("CheckID");
[09:53:20.621]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:53:20.622]          <block atomic="false" info="">
[09:53:20.622]            __var pidr1 = 0;
[09:53:20.622]              // -> [pidr1 <= 0x00000000]
[09:53:20.622]            __var pidr2 = 0;
[09:53:20.622]              // -> [pidr2 <= 0x00000000]
[09:53:20.622]            __var jep106id = 0;
[09:53:20.622]              // -> [jep106id <= 0x00000000]
[09:53:20.623]            __var ROMTableBase = 0;
[09:53:20.623]              // -> [ROMTableBase <= 0x00000000]
[09:53:20.623]            __ap = 0;      // AHB-AP
[09:53:20.623]              // -> [__ap <= 0x00000000]
[09:53:20.623]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:53:20.624]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.624]              // -> [ROMTableBase <= 0xE00FD000]
[09:53:20.624]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:53:20.624]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.625]              // -> [pidr1 <= 0x00000004]
[09:53:20.625]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:53:20.625]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.625]              // -> [pidr2 <= 0x0000001A]
[09:53:20.625]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:53:20.626]              // -> [jep106id <= 0x00000020]
[09:53:20.626]          </block>
[09:53:20.626]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:53:20.626]            // if-block "jep106id != 0x20"
[09:53:20.626]              // =>  FALSE
[09:53:20.626]            // skip if-block "jep106id != 0x20"
[09:53:20.626]          </control>
[09:53:20.627]        </sequence>
[09:53:20.627]    </block>
[09:53:20.627]  </sequence>
[09:53:20.627]  
[09:53:20.641]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:53:20.641]  
[09:53:20.642]  <debugvars>
[09:53:20.642]    // Pre-defined
[09:53:20.642]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:20.642]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:20.642]    __dp=0x00000000
[09:53:20.642]    __ap=0x00000000
[09:53:20.643]    __traceout=0x00000001      (SWO Trace)
[09:53:20.643]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:20.643]    __FlashAddr=0x00000000
[09:53:20.643]    __FlashLen=0x00000000
[09:53:20.643]    __FlashArg=0x00000000
[09:53:20.643]    __FlashOp=0x00000000
[09:53:20.643]    __Result=0x00000000
[09:53:20.643]    
[09:53:20.643]    // User-defined
[09:53:20.644]    DbgMCU_CR=0x00000007
[09:53:20.644]    DbgMCU_APB1_Fz=0x00000000
[09:53:20.644]    DbgMCU_APB2_Fz=0x00000000
[09:53:20.644]    TraceClk_Pin=0x00040002
[09:53:20.644]    TraceD0_Pin=0x00040003
[09:53:20.644]    TraceD1_Pin=0x00040004
[09:53:20.644]    TraceD2_Pin=0x00040005
[09:53:20.645]    TraceD3_Pin=0x00040006
[09:53:20.645]  </debugvars>
[09:53:20.645]  
[09:53:20.645]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:53:20.645]    <block atomic="false" info="">
[09:53:20.645]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:53:20.646]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.646]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:53:20.646]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.647]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:53:20.647]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.647]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:53:20.648]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.648]    </block>
[09:53:20.648]  </sequence>
[09:53:20.648]  
[09:53:20.665]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:53:20.665]  
[09:53:20.665]  <debugvars>
[09:53:20.665]    // Pre-defined
[09:53:20.665]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:20.665]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:20.665]    __dp=0x00000000
[09:53:20.665]    __ap=0x00000000
[09:53:20.665]    __traceout=0x00000001      (SWO Trace)
[09:53:20.665]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:20.666]    __FlashAddr=0x00000000
[09:53:20.666]    __FlashLen=0x00000000
[09:53:20.666]    __FlashArg=0x00000000
[09:53:20.666]    __FlashOp=0x00000000
[09:53:20.666]    __Result=0x00000000
[09:53:20.667]    
[09:53:20.667]    // User-defined
[09:53:20.667]    DbgMCU_CR=0x00000007
[09:53:20.667]    DbgMCU_APB1_Fz=0x00000000
[09:53:20.667]    DbgMCU_APB2_Fz=0x00000000
[09:53:20.667]    TraceClk_Pin=0x00040002
[09:53:20.667]    TraceD0_Pin=0x00040003
[09:53:20.668]    TraceD1_Pin=0x00040004
[09:53:20.668]    TraceD2_Pin=0x00040005
[09:53:20.668]    TraceD3_Pin=0x00040006
[09:53:20.668]  </debugvars>
[09:53:20.668]  
[09:53:20.668]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:53:20.668]    <block atomic="false" info="">
[09:53:20.669]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:53:20.669]        // -> [traceSWO <= 0x00000001]
[09:53:20.669]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:53:20.669]        // -> [traceTPIU <= 0x00000000]
[09:53:20.669]    </block>
[09:53:20.669]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:20.670]      // if-block "traceSWO"
[09:53:20.670]        // =>  TRUE
[09:53:20.670]      <block atomic="false" info="">
[09:53:20.670]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:53:20.670]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:53:20.670]            <block atomic="false" info="">
[09:53:20.671]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:20.671]                // -> [dbgmcu_val <= 0x00000000]
[09:53:20.671]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:53:20.671]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:53:20.671]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:53:20.672]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.672]                // -> [dbgmcu_val <= 0x00000007]
[09:53:20.672]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:53:20.672]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:53:20.672]              Sequence("ConfigureTraceSWOPin");
[09:53:20.673]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:53:20.673]                  <block atomic="false" info="">
[09:53:20.673]                    __var pin     = 0;
[09:53:20.673]                      // -> [pin <= 0x00000000]
[09:53:20.673]                    __var port    = 0;
[09:53:20.673]                      // -> [port <= 0x00000000]
[09:53:20.674]                    __var portAdr = 0;
[09:53:20.674]                      // -> [portAdr <= 0x00000000]
[09:53:20.674]                    __var pos     = 0;
[09:53:20.674]                      // -> [pos <= 0x00000000]
[09:53:20.674]                    __var SWO_Pin = 0x00010003;          // PB3
[09:53:20.674]                      // -> [SWO_Pin <= 0x00010003]
[09:53:20.674]                  </block>
[09:53:20.675]                  <block atomic="false" info="configure SWO">
[09:53:20.675]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:53:20.675]                      // -> [pin <= 0x00000003]
[09:53:20.675]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:53:20.675]                      // -> [port <= 0x00000001]
[09:53:20.675]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:53:20.676]                      // -> [portAdr <= 0x40020400]
[09:53:20.676]                    pos = pin * 2;
[09:53:20.676]                      // -> [pos <= 0x00000006]
[09:53:20.676]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:53:20.677]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.677]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.677]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:53:20.678]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.678]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.678]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:53:20.679]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.679]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.679]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:53:20.680]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.680]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.680]                  </block>
[09:53:20.680]                  <control if="pin <  8" while="" timeout="0" info="">
[09:53:20.681]                    // if-block "pin <  8"
[09:53:20.681]                      // =>  TRUE
[09:53:20.681]                    <block atomic="false" info="">
[09:53:20.682]                      pos = ((pin    ) & 7) * 4;
[09:53:20.682]                        // -> [pos <= 0x0000000C]
[09:53:20.682]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:53:20.682]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.682]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.682]                    </block>
[09:53:20.682]                    // end if-block "pin <  8"
[09:53:20.682]                  </control>
[09:53:20.683]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:53:20.683]                    // if-block "pin >= 8"
[09:53:20.683]                      // =>  FALSE
[09:53:20.683]                    // skip if-block "pin >= 8"
[09:53:20.683]                  </control>
[09:53:20.683]                </sequence>
[09:53:20.683]            </block>
[09:53:20.683]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:20.683]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:53:20.684]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.684]            </block>
[09:53:20.684]          </sequence>
[09:53:20.684]      </block>
[09:53:20.684]      // end if-block "traceSWO"
[09:53:20.684]    </control>
[09:53:20.684]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:20.685]      // if-block "traceTPIU"
[09:53:20.685]        // =>  FALSE
[09:53:20.685]      // skip if-block "traceTPIU"
[09:53:20.685]    </control>
[09:53:20.685]  </sequence>
[09:53:20.685]  
[09:53:20.689]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:53:20.689]  
[09:53:20.689]  <debugvars>
[09:53:20.689]    // Pre-defined
[09:53:20.690]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:20.690]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:20.690]    __dp=0x00000000
[09:53:20.690]    __ap=0x00000000
[09:53:20.690]    __traceout=0x00000001      (SWO Trace)
[09:53:20.691]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:20.691]    __FlashAddr=0x00000000
[09:53:20.691]    __FlashLen=0x00000000
[09:53:20.691]    __FlashArg=0x00000000
[09:53:20.691]    __FlashOp=0x00000000
[09:53:20.692]    __Result=0x00000000
[09:53:20.692]    
[09:53:20.692]    // User-defined
[09:53:20.692]    DbgMCU_CR=0x00000007
[09:53:20.692]    DbgMCU_APB1_Fz=0x00000000
[09:53:20.692]    DbgMCU_APB2_Fz=0x00000000
[09:53:20.693]    TraceClk_Pin=0x00040002
[09:53:20.693]    TraceD0_Pin=0x00040003
[09:53:20.693]    TraceD1_Pin=0x00040004
[09:53:20.693]    TraceD2_Pin=0x00040005
[09:53:20.693]    TraceD3_Pin=0x00040006
[09:53:20.694]  </debugvars>
[09:53:20.694]  
[09:53:20.694]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:53:20.694]    <block atomic="false" info="">
[09:53:20.694]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:53:20.694]        // -> [traceSWO <= 0x00000001]
[09:53:20.695]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:53:20.695]        // -> [traceTPIU <= 0x00000000]
[09:53:20.695]    </block>
[09:53:20.695]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:20.695]      // if-block "traceSWO"
[09:53:20.696]        // =>  TRUE
[09:53:20.696]      <block atomic="false" info="">
[09:53:20.696]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:53:20.696]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:53:20.696]            <block atomic="false" info="">
[09:53:20.696]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:20.696]                // -> [dbgmcu_val <= 0x00000000]
[09:53:20.697]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:53:20.697]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:53:20.697]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:53:20.698]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.698]                // -> [dbgmcu_val <= 0x00000007]
[09:53:20.698]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:53:20.698]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:53:20.698]              Sequence("ConfigureTraceSWOPin");
[09:53:20.698]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:53:20.698]                  <block atomic="false" info="">
[09:53:20.699]                    __var pin     = 0;
[09:53:20.699]                      // -> [pin <= 0x00000000]
[09:53:20.699]                    __var port    = 0;
[09:53:20.699]                      // -> [port <= 0x00000000]
[09:53:20.699]                    __var portAdr = 0;
[09:53:20.699]                      // -> [portAdr <= 0x00000000]
[09:53:20.699]                    __var pos     = 0;
[09:53:20.700]                      // -> [pos <= 0x00000000]
[09:53:20.700]                    __var SWO_Pin = 0x00010003;          // PB3
[09:53:20.700]                      // -> [SWO_Pin <= 0x00010003]
[09:53:20.700]                  </block>
[09:53:20.700]                  <block atomic="false" info="configure SWO">
[09:53:20.700]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:53:20.700]                      // -> [pin <= 0x00000003]
[09:53:20.700]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:53:20.700]                      // -> [port <= 0x00000001]
[09:53:20.701]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:53:20.701]                      // -> [portAdr <= 0x40020400]
[09:53:20.701]                    pos = pin * 2;
[09:53:20.701]                      // -> [pos <= 0x00000006]
[09:53:20.701]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:53:20.701]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.702]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.702]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:53:20.702]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.703]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.703]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:53:20.703]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.704]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.704]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:53:20.704]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.705]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.705]                  </block>
[09:53:20.705]                  <control if="pin <  8" while="" timeout="0" info="">
[09:53:20.705]                    // if-block "pin <  8"
[09:53:20.705]                      // =>  TRUE
[09:53:20.706]                    <block atomic="false" info="">
[09:53:20.706]                      pos = ((pin    ) & 7) * 4;
[09:53:20.706]                        // -> [pos <= 0x0000000C]
[09:53:20.706]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:53:20.706]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.707]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.707]                    </block>
[09:53:20.707]                    // end if-block "pin <  8"
[09:53:20.707]                  </control>
[09:53:20.708]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:53:20.708]                    // if-block "pin >= 8"
[09:53:20.708]                      // =>  FALSE
[09:53:20.708]                    // skip if-block "pin >= 8"
[09:53:20.708]                  </control>
[09:53:20.708]                </sequence>
[09:53:20.708]            </block>
[09:53:20.708]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:20.709]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:53:20.709]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.709]            </block>
[09:53:20.709]          </sequence>
[09:53:20.709]      </block>
[09:53:20.709]      // end if-block "traceSWO"
[09:53:20.710]    </control>
[09:53:20.710]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:20.710]      // if-block "traceTPIU"
[09:53:20.710]        // =>  FALSE
[09:53:20.710]      // skip if-block "traceTPIU"
[09:53:20.710]    </control>
[09:53:20.710]  </sequence>
[09:53:20.710]  
[09:53:20.924]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:53:20.924]  
[09:53:20.924]  <debugvars>
[09:53:20.924]    // Pre-defined
[09:53:20.925]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:20.925]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:20.925]    __dp=0x00000000
[09:53:20.925]    __ap=0x00000000
[09:53:20.925]    __traceout=0x00000001      (SWO Trace)
[09:53:20.926]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:20.926]    __FlashAddr=0x00000000
[09:53:20.926]    __FlashLen=0x00000000
[09:53:20.926]    __FlashArg=0x00000000
[09:53:20.926]    __FlashOp=0x00000000
[09:53:20.926]    __Result=0x00000000
[09:53:20.927]    
[09:53:20.927]    // User-defined
[09:53:20.927]    DbgMCU_CR=0x00000007
[09:53:20.927]    DbgMCU_APB1_Fz=0x00000000
[09:53:20.927]    DbgMCU_APB2_Fz=0x00000000
[09:53:20.927]    TraceClk_Pin=0x00040002
[09:53:20.927]    TraceD0_Pin=0x00040003
[09:53:20.928]    TraceD1_Pin=0x00040004
[09:53:20.928]    TraceD2_Pin=0x00040005
[09:53:20.928]    TraceD3_Pin=0x00040006
[09:53:20.928]  </debugvars>
[09:53:20.928]  
[09:53:20.928]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:53:20.929]    <block atomic="false" info="">
[09:53:20.929]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:53:20.929]        // -> [traceSWO <= 0x00000001]
[09:53:20.929]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:53:20.929]        // -> [traceTPIU <= 0x00000000]
[09:53:20.929]    </block>
[09:53:20.929]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:20.930]      // if-block "traceSWO"
[09:53:20.930]        // =>  TRUE
[09:53:20.930]      <block atomic="false" info="">
[09:53:20.930]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:53:20.930]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:53:20.930]            <block atomic="false" info="">
[09:53:20.931]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:20.931]                // -> [dbgmcu_val <= 0x00000000]
[09:53:20.931]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:53:20.931]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:53:20.931]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:53:20.932]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.932]                // -> [dbgmcu_val <= 0x00000007]
[09:53:20.932]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:53:20.932]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:53:20.932]              Sequence("ConfigureTraceSWOPin");
[09:53:20.932]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:53:20.932]                  <block atomic="false" info="">
[09:53:20.933]                    __var pin     = 0;
[09:53:20.933]                      // -> [pin <= 0x00000000]
[09:53:20.933]                    __var port    = 0;
[09:53:20.933]                      // -> [port <= 0x00000000]
[09:53:20.933]                    __var portAdr = 0;
[09:53:20.933]                      // -> [portAdr <= 0x00000000]
[09:53:20.933]                    __var pos     = 0;
[09:53:20.933]                      // -> [pos <= 0x00000000]
[09:53:20.934]                    __var SWO_Pin = 0x00010003;          // PB3
[09:53:20.934]                      // -> [SWO_Pin <= 0x00010003]
[09:53:20.934]                  </block>
[09:53:20.934]                  <block atomic="false" info="configure SWO">
[09:53:20.934]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:53:20.934]                      // -> [pin <= 0x00000003]
[09:53:20.934]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:53:20.934]                      // -> [port <= 0x00000001]
[09:53:20.935]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:53:20.935]                      // -> [portAdr <= 0x40020400]
[09:53:20.935]                    pos = pin * 2;
[09:53:20.935]                      // -> [pos <= 0x00000006]
[09:53:20.935]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:53:20.935]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.936]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.936]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:53:20.937]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.937]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.937]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:53:20.938]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.939]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.939]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:53:20.939]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.939]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.939]                  </block>
[09:53:20.939]                  <control if="pin <  8" while="" timeout="0" info="">
[09:53:20.939]                    // if-block "pin <  8"
[09:53:20.940]                      // =>  TRUE
[09:53:20.940]                    <block atomic="false" info="">
[09:53:20.940]                      pos = ((pin    ) & 7) * 4;
[09:53:20.940]                        // -> [pos <= 0x0000000C]
[09:53:20.940]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:53:20.940]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.941]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.941]                    </block>
[09:53:20.941]                    // end if-block "pin <  8"
[09:53:20.941]                  </control>
[09:53:20.941]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:53:20.941]                    // if-block "pin >= 8"
[09:53:20.942]                      // =>  FALSE
[09:53:20.942]                    // skip if-block "pin >= 8"
[09:53:20.942]                  </control>
[09:53:20.942]                </sequence>
[09:53:20.942]            </block>
[09:53:20.942]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:20.942]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:53:20.943]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:20.943]            </block>
[09:53:20.943]          </sequence>
[09:53:20.943]      </block>
[09:53:20.943]      // end if-block "traceSWO"
[09:53:20.943]    </control>
[09:53:20.943]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:20.944]      // if-block "traceTPIU"
[09:53:20.944]        // =>  FALSE
[09:53:20.944]      // skip if-block "traceTPIU"
[09:53:20.944]    </control>
[09:53:20.944]  </sequence>
[09:53:20.944]  
[09:53:51.546]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:53:51.546]  
[09:53:51.598]  <debugvars>
[09:53:51.598]    // Pre-defined
[09:53:51.598]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:53:51.599]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:53:51.599]    __dp=0x00000000
[09:53:51.600]    __ap=0x00000000
[09:53:51.600]    __traceout=0x00000001      (SWO Trace)
[09:53:51.601]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:53:51.601]    __FlashAddr=0x00000000
[09:53:51.601]    __FlashLen=0x00000000
[09:53:51.602]    __FlashArg=0x00000000
[09:53:51.602]    __FlashOp=0x00000000
[09:53:51.602]    __Result=0x00000000
[09:53:51.603]    
[09:53:51.603]    // User-defined
[09:53:51.603]    DbgMCU_CR=0x00000007
[09:53:51.603]    DbgMCU_APB1_Fz=0x00000000
[09:53:51.604]    DbgMCU_APB2_Fz=0x00000000
[09:53:51.604]    TraceClk_Pin=0x00040002
[09:53:51.605]    TraceD0_Pin=0x00040003
[09:53:51.605]    TraceD1_Pin=0x00040004
[09:53:51.605]    TraceD2_Pin=0x00040005
[09:53:51.606]    TraceD3_Pin=0x00040006
[09:53:51.606]  </debugvars>
[09:53:51.606]  
[09:53:51.607]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:53:51.607]    <block atomic="false" info="">
[09:53:51.607]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:53:51.607]        // -> [traceSWO <= 0x00000001]
[09:53:51.608]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:53:51.608]        // -> [traceTPIU <= 0x00000000]
[09:53:51.608]    </block>
[09:53:51.608]    <control if="traceSWO" while="" timeout="0" info="">
[09:53:51.608]      // if-block "traceSWO"
[09:53:51.609]        // =>  TRUE
[09:53:51.609]      <block atomic="false" info="">
[09:53:51.609]        Sequence("DisableTraceSWO");
[09:53:51.609]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:53:51.609]            <block atomic="false" info="">
[09:53:51.610]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:53:51.610]                // -> [dbgmcu_val <= 0x00000000]
[09:53:51.610]            </block>
[09:53:51.610]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:53:51.610]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:53:51.611]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:53:51.611]                // -> [dbgmcu_val <= 0x00000007]
[09:53:51.611]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:53:51.612]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:53:51.612]            </block>
[09:53:51.612]          </sequence>
[09:53:51.612]      </block>
[09:53:51.612]      // end if-block "traceSWO"
[09:53:51.613]    </control>
[09:53:51.613]    <control if="traceTPIU" while="" timeout="0" info="">
[09:53:51.613]      // if-block "traceTPIU"
[09:53:51.613]        // =>  FALSE
[09:53:51.613]      // skip if-block "traceTPIU"
[09:53:51.613]    </control>
[09:53:51.613]  </sequence>
[09:53:51.614]  
[09:55:15.399]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:55:15.399]  
[09:55:15.399]  <debugvars>
[09:55:15.399]    // Pre-defined
[09:55:15.399]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:15.400]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:55:15.400]    __dp=0x00000000
[09:55:15.400]    __ap=0x00000000
[09:55:15.400]    __traceout=0x00000001      (SWO Trace)
[09:55:15.400]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:15.401]    __FlashAddr=0x00000000
[09:55:15.401]    __FlashLen=0x00000000
[09:55:15.401]    __FlashArg=0x00000000
[09:55:15.401]    __FlashOp=0x00000000
[09:55:15.401]    __Result=0x00000000
[09:55:15.401]    
[09:55:15.401]    // User-defined
[09:55:15.402]    DbgMCU_CR=0x00000007
[09:55:15.402]    DbgMCU_APB1_Fz=0x00000000
[09:55:15.402]    DbgMCU_APB2_Fz=0x00000000
[09:55:15.402]    TraceClk_Pin=0x00040002
[09:55:15.403]    TraceD0_Pin=0x00040003
[09:55:15.403]    TraceD1_Pin=0x00040004
[09:55:15.403]    TraceD2_Pin=0x00040005
[09:55:15.403]    TraceD3_Pin=0x00040006
[09:55:15.403]  </debugvars>
[09:55:15.403]  
[09:55:15.404]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:55:15.404]    <block atomic="false" info="">
[09:55:15.404]      Sequence("CheckID");
[09:55:15.404]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:55:15.404]          <block atomic="false" info="">
[09:55:15.404]            __var pidr1 = 0;
[09:55:15.404]              // -> [pidr1 <= 0x00000000]
[09:55:15.405]            __var pidr2 = 0;
[09:55:15.405]              // -> [pidr2 <= 0x00000000]
[09:55:15.405]            __var jep106id = 0;
[09:55:15.405]              // -> [jep106id <= 0x00000000]
[09:55:15.405]            __var ROMTableBase = 0;
[09:55:15.405]              // -> [ROMTableBase <= 0x00000000]
[09:55:15.405]            __ap = 0;      // AHB-AP
[09:55:15.406]              // -> [__ap <= 0x00000000]
[09:55:15.406]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:55:15.406]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.406]              // -> [ROMTableBase <= 0xE00FD000]
[09:55:15.406]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:55:15.407]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.407]              // -> [pidr1 <= 0x00000004]
[09:55:15.407]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:55:15.408]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.408]              // -> [pidr2 <= 0x0000001A]
[09:55:15.408]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:55:15.408]              // -> [jep106id <= 0x00000020]
[09:55:15.408]          </block>
[09:55:15.408]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:55:15.408]            // if-block "jep106id != 0x20"
[09:55:15.408]              // =>  FALSE
[09:55:15.409]            // skip if-block "jep106id != 0x20"
[09:55:15.409]          </control>
[09:55:15.409]        </sequence>
[09:55:15.409]    </block>
[09:55:15.410]  </sequence>
[09:55:15.410]  
[09:55:15.425]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:55:15.425]  
[09:55:15.425]  <debugvars>
[09:55:15.426]    // Pre-defined
[09:55:15.426]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:15.426]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:55:15.426]    __dp=0x00000000
[09:55:15.426]    __ap=0x00000000
[09:55:15.426]    __traceout=0x00000001      (SWO Trace)
[09:55:15.427]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:15.427]    __FlashAddr=0x00000000
[09:55:15.427]    __FlashLen=0x00000000
[09:55:15.427]    __FlashArg=0x00000000
[09:55:15.427]    __FlashOp=0x00000000
[09:55:15.427]    __Result=0x00000000
[09:55:15.428]    
[09:55:15.428]    // User-defined
[09:55:15.428]    DbgMCU_CR=0x00000007
[09:55:15.428]    DbgMCU_APB1_Fz=0x00000000
[09:55:15.428]    DbgMCU_APB2_Fz=0x00000000
[09:55:15.428]    TraceClk_Pin=0x00040002
[09:55:15.429]    TraceD0_Pin=0x00040003
[09:55:15.429]    TraceD1_Pin=0x00040004
[09:55:15.429]    TraceD2_Pin=0x00040005
[09:55:15.429]    TraceD3_Pin=0x00040006
[09:55:15.429]  </debugvars>
[09:55:15.429]  
[09:55:15.430]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:55:15.430]    <block atomic="false" info="">
[09:55:15.430]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:55:15.431]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.431]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:55:15.431]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.432]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:55:15.432]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.432]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:55:15.433]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:15.433]    </block>
[09:55:15.433]  </sequence>
[09:55:15.433]  
[09:55:46.875]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:55:46.875]  
[09:55:46.875]  <debugvars>
[09:55:46.875]    // Pre-defined
[09:55:46.875]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:46.876]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:55:46.876]    __dp=0x00000000
[09:55:46.876]    __ap=0x00000000
[09:55:46.876]    __traceout=0x00000001      (SWO Trace)
[09:55:46.877]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:46.877]    __FlashAddr=0x00000000
[09:55:46.877]    __FlashLen=0x00000000
[09:55:46.877]    __FlashArg=0x00000000
[09:55:46.877]    __FlashOp=0x00000000
[09:55:46.877]    __Result=0x00000000
[09:55:46.878]    
[09:55:46.878]    // User-defined
[09:55:46.878]    DbgMCU_CR=0x00000007
[09:55:46.878]    DbgMCU_APB1_Fz=0x00000000
[09:55:46.878]    DbgMCU_APB2_Fz=0x00000000
[09:55:46.878]    TraceClk_Pin=0x00040002
[09:55:46.878]    TraceD0_Pin=0x00040003
[09:55:46.878]    TraceD1_Pin=0x00040004
[09:55:46.879]    TraceD2_Pin=0x00040005
[09:55:46.879]    TraceD3_Pin=0x00040006
[09:55:46.879]  </debugvars>
[09:55:46.879]  
[09:55:46.879]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:55:46.880]    <block atomic="false" info="">
[09:55:46.880]      Sequence("CheckID");
[09:55:46.880]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:55:46.880]          <block atomic="false" info="">
[09:55:46.880]            __var pidr1 = 0;
[09:55:46.880]              // -> [pidr1 <= 0x00000000]
[09:55:46.881]            __var pidr2 = 0;
[09:55:46.881]              // -> [pidr2 <= 0x00000000]
[09:55:46.881]            __var jep106id = 0;
[09:55:46.881]              // -> [jep106id <= 0x00000000]
[09:55:46.881]            __var ROMTableBase = 0;
[09:55:46.881]              // -> [ROMTableBase <= 0x00000000]
[09:55:46.881]            __ap = 0;      // AHB-AP
[09:55:46.882]              // -> [__ap <= 0x00000000]
[09:55:46.882]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:55:46.882]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.882]              // -> [ROMTableBase <= 0xE00FD000]
[09:55:46.882]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:55:46.883]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.883]              // -> [pidr1 <= 0x00000004]
[09:55:46.883]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:55:46.884]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.884]              // -> [pidr2 <= 0x0000001A]
[09:55:46.884]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:55:46.884]              // -> [jep106id <= 0x00000020]
[09:55:46.884]          </block>
[09:55:46.884]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:55:46.885]            // if-block "jep106id != 0x20"
[09:55:46.885]              // =>  FALSE
[09:55:46.885]            // skip if-block "jep106id != 0x20"
[09:55:46.885]          </control>
[09:55:46.885]        </sequence>
[09:55:46.885]    </block>
[09:55:46.885]  </sequence>
[09:55:46.886]  
[09:55:46.900]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:55:46.900]  
[09:55:46.901]  <debugvars>
[09:55:46.901]    // Pre-defined
[09:55:46.901]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:46.901]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:55:46.901]    __dp=0x00000000
[09:55:46.902]    __ap=0x00000000
[09:55:46.902]    __traceout=0x00000001      (SWO Trace)
[09:55:46.902]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:46.902]    __FlashAddr=0x00000000
[09:55:46.902]    __FlashLen=0x00000000
[09:55:46.902]    __FlashArg=0x00000000
[09:55:46.903]    __FlashOp=0x00000000
[09:55:46.903]    __Result=0x00000000
[09:55:46.903]    
[09:55:46.903]    // User-defined
[09:55:46.903]    DbgMCU_CR=0x00000007
[09:55:46.903]    DbgMCU_APB1_Fz=0x00000000
[09:55:46.904]    DbgMCU_APB2_Fz=0x00000000
[09:55:46.904]    TraceClk_Pin=0x00040002
[09:55:46.904]    TraceD0_Pin=0x00040003
[09:55:46.904]    TraceD1_Pin=0x00040004
[09:55:46.904]    TraceD2_Pin=0x00040005
[09:55:46.904]    TraceD3_Pin=0x00040006
[09:55:46.905]  </debugvars>
[09:55:46.905]  
[09:55:46.905]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:55:46.905]    <block atomic="false" info="">
[09:55:46.905]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:55:46.906]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.906]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:55:46.907]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.907]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:55:46.907]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.908]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:55:46.908]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.908]    </block>
[09:55:46.908]  </sequence>
[09:55:46.909]  
[09:55:46.925]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:55:46.925]  
[09:55:46.925]  <debugvars>
[09:55:46.925]    // Pre-defined
[09:55:46.926]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:46.926]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:55:46.926]    __dp=0x00000000
[09:55:46.926]    __ap=0x00000000
[09:55:46.927]    __traceout=0x00000001      (SWO Trace)
[09:55:46.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:46.927]    __FlashAddr=0x00000000
[09:55:46.927]    __FlashLen=0x00000000
[09:55:46.927]    __FlashArg=0x00000000
[09:55:46.927]    __FlashOp=0x00000000
[09:55:46.928]    __Result=0x00000000
[09:55:46.928]    
[09:55:46.928]    // User-defined
[09:55:46.928]    DbgMCU_CR=0x00000007
[09:55:46.928]    DbgMCU_APB1_Fz=0x00000000
[09:55:46.928]    DbgMCU_APB2_Fz=0x00000000
[09:55:46.928]    TraceClk_Pin=0x00040002
[09:55:46.928]    TraceD0_Pin=0x00040003
[09:55:46.929]    TraceD1_Pin=0x00040004
[09:55:46.929]    TraceD2_Pin=0x00040005
[09:55:46.929]    TraceD3_Pin=0x00040006
[09:55:46.929]  </debugvars>
[09:55:46.929]  
[09:55:46.929]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:55:46.930]    <block atomic="false" info="">
[09:55:46.930]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:55:46.930]        // -> [traceSWO <= 0x00000001]
[09:55:46.930]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:55:46.930]        // -> [traceTPIU <= 0x00000000]
[09:55:46.930]    </block>
[09:55:46.930]    <control if="traceSWO" while="" timeout="0" info="">
[09:55:46.931]      // if-block "traceSWO"
[09:55:46.931]        // =>  TRUE
[09:55:46.931]      <block atomic="false" info="">
[09:55:46.931]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:55:46.931]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:55:46.931]            <block atomic="false" info="">
[09:55:46.931]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:55:46.932]                // -> [dbgmcu_val <= 0x00000000]
[09:55:46.932]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:55:46.932]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:55:46.932]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:55:46.932]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.933]                // -> [dbgmcu_val <= 0x00000007]
[09:55:46.933]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:55:46.933]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:55:46.933]              Sequence("ConfigureTraceSWOPin");
[09:55:46.933]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:55:46.933]                  <block atomic="false" info="">
[09:55:46.933]                    __var pin     = 0;
[09:55:46.934]                      // -> [pin <= 0x00000000]
[09:55:46.934]                    __var port    = 0;
[09:55:46.934]                      // -> [port <= 0x00000000]
[09:55:46.934]                    __var portAdr = 0;
[09:55:46.934]                      // -> [portAdr <= 0x00000000]
[09:55:46.934]                    __var pos     = 0;
[09:55:46.934]                      // -> [pos <= 0x00000000]
[09:55:46.934]                    __var SWO_Pin = 0x00010003;          // PB3
[09:55:46.935]                      // -> [SWO_Pin <= 0x00010003]
[09:55:46.935]                  </block>
[09:55:46.935]                  <block atomic="false" info="configure SWO">
[09:55:46.935]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:55:46.935]                      // -> [pin <= 0x00000003]
[09:55:46.935]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:55:46.935]                      // -> [port <= 0x00000001]
[09:55:46.936]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:55:46.936]                      // -> [portAdr <= 0x40020400]
[09:55:46.936]                    pos = pin * 2;
[09:55:46.936]                      // -> [pos <= 0x00000006]
[09:55:46.937]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:55:46.937]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.938]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.938]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:55:46.938]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.939]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.939]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:55:46.940]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.940]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.940]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:55:46.940]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.941]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.941]                  </block>
[09:55:46.941]                  <control if="pin <  8" while="" timeout="0" info="">
[09:55:46.941]                    // if-block "pin <  8"
[09:55:46.941]                      // =>  TRUE
[09:55:46.942]                    <block atomic="false" info="">
[09:55:46.942]                      pos = ((pin    ) & 7) * 4;
[09:55:46.942]                        // -> [pos <= 0x0000000C]
[09:55:46.942]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:55:46.942]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.943]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.943]                    </block>
[09:55:46.943]                    // end if-block "pin <  8"
[09:55:46.943]                  </control>
[09:55:46.943]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:55:46.943]                    // if-block "pin >= 8"
[09:55:46.944]                      // =>  FALSE
[09:55:46.944]                    // skip if-block "pin >= 8"
[09:55:46.944]                  </control>
[09:55:46.944]                </sequence>
[09:55:46.944]            </block>
[09:55:46.944]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:55:46.944]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:55:46.945]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.945]            </block>
[09:55:46.945]          </sequence>
[09:55:46.945]      </block>
[09:55:46.945]      // end if-block "traceSWO"
[09:55:46.945]    </control>
[09:55:46.945]    <control if="traceTPIU" while="" timeout="0" info="">
[09:55:46.945]      // if-block "traceTPIU"
[09:55:46.946]        // =>  FALSE
[09:55:46.946]      // skip if-block "traceTPIU"
[09:55:46.946]    </control>
[09:55:46.946]  </sequence>
[09:55:46.946]  
[09:55:46.950]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:55:46.950]  
[09:55:46.950]  <debugvars>
[09:55:46.950]    // Pre-defined
[09:55:46.950]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:46.951]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:55:46.951]    __dp=0x00000000
[09:55:46.951]    __ap=0x00000000
[09:55:46.951]    __traceout=0x00000001      (SWO Trace)
[09:55:46.951]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:46.951]    __FlashAddr=0x00000000
[09:55:46.952]    __FlashLen=0x00000000
[09:55:46.952]    __FlashArg=0x00000000
[09:55:46.952]    __FlashOp=0x00000000
[09:55:46.952]    __Result=0x00000000
[09:55:46.952]    
[09:55:46.952]    // User-defined
[09:55:46.952]    DbgMCU_CR=0x00000007
[09:55:46.952]    DbgMCU_APB1_Fz=0x00000000
[09:55:46.953]    DbgMCU_APB2_Fz=0x00000000
[09:55:46.953]    TraceClk_Pin=0x00040002
[09:55:46.953]    TraceD0_Pin=0x00040003
[09:55:46.953]    TraceD1_Pin=0x00040004
[09:55:46.953]    TraceD2_Pin=0x00040005
[09:55:46.954]    TraceD3_Pin=0x00040006
[09:55:46.954]  </debugvars>
[09:55:46.954]  
[09:55:46.954]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:55:46.954]    <block atomic="false" info="">
[09:55:46.954]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:55:46.954]        // -> [traceSWO <= 0x00000001]
[09:55:46.954]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:55:46.955]        // -> [traceTPIU <= 0x00000000]
[09:55:46.955]    </block>
[09:55:46.955]    <control if="traceSWO" while="" timeout="0" info="">
[09:55:46.955]      // if-block "traceSWO"
[09:55:46.955]        // =>  TRUE
[09:55:46.955]      <block atomic="false" info="">
[09:55:46.956]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:55:46.956]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:55:46.956]            <block atomic="false" info="">
[09:55:46.956]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:55:46.956]                // -> [dbgmcu_val <= 0x00000000]
[09:55:46.956]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:55:46.956]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:55:46.956]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:55:46.957]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.957]                // -> [dbgmcu_val <= 0x00000007]
[09:55:46.957]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:55:46.957]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:55:46.957]              Sequence("ConfigureTraceSWOPin");
[09:55:46.958]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:55:46.958]                  <block atomic="false" info="">
[09:55:46.958]                    __var pin     = 0;
[09:55:46.958]                      // -> [pin <= 0x00000000]
[09:55:46.958]                    __var port    = 0;
[09:55:46.958]                      // -> [port <= 0x00000000]
[09:55:46.958]                    __var portAdr = 0;
[09:55:46.959]                      // -> [portAdr <= 0x00000000]
[09:55:46.959]                    __var pos     = 0;
[09:55:46.959]                      // -> [pos <= 0x00000000]
[09:55:46.959]                    __var SWO_Pin = 0x00010003;          // PB3
[09:55:46.959]                      // -> [SWO_Pin <= 0x00010003]
[09:55:46.959]                  </block>
[09:55:46.959]                  <block atomic="false" info="configure SWO">
[09:55:46.959]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:55:46.960]                      // -> [pin <= 0x00000003]
[09:55:46.960]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:55:46.960]                      // -> [port <= 0x00000001]
[09:55:46.960]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:55:46.960]                      // -> [portAdr <= 0x40020400]
[09:55:46.960]                    pos = pin * 2;
[09:55:46.960]                      // -> [pos <= 0x00000006]
[09:55:46.960]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:55:46.961]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.961]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.961]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:55:46.962]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.962]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.962]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:55:46.963]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.963]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.964]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:55:46.964]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.964]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.965]                  </block>
[09:55:46.965]                  <control if="pin <  8" while="" timeout="0" info="">
[09:55:46.965]                    // if-block "pin <  8"
[09:55:46.965]                      // =>  TRUE
[09:55:46.965]                    <block atomic="false" info="">
[09:55:46.965]                      pos = ((pin    ) & 7) * 4;
[09:55:46.965]                        // -> [pos <= 0x0000000C]
[09:55:46.965]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:55:46.966]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.966]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.966]                    </block>
[09:55:46.967]                    // end if-block "pin <  8"
[09:55:46.967]                  </control>
[09:55:46.967]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:55:46.967]                    // if-block "pin >= 8"
[09:55:46.967]                      // =>  FALSE
[09:55:46.967]                    // skip if-block "pin >= 8"
[09:55:46.967]                  </control>
[09:55:46.967]                </sequence>
[09:55:46.967]            </block>
[09:55:46.968]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:55:46.968]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:55:46.968]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:46.968]            </block>
[09:55:46.968]          </sequence>
[09:55:46.968]      </block>
[09:55:46.969]      // end if-block "traceSWO"
[09:55:46.969]    </control>
[09:55:46.969]    <control if="traceTPIU" while="" timeout="0" info="">
[09:55:46.969]      // if-block "traceTPIU"
[09:55:46.969]        // =>  FALSE
[09:55:46.969]      // skip if-block "traceTPIU"
[09:55:46.969]    </control>
[09:55:46.970]  </sequence>
[09:55:46.970]  
[09:55:47.183]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:55:47.183]  
[09:55:47.184]  <debugvars>
[09:55:47.184]    // Pre-defined
[09:55:47.184]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:55:47.184]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:55:47.184]    __dp=0x00000000
[09:55:47.184]    __ap=0x00000000
[09:55:47.185]    __traceout=0x00000001      (SWO Trace)
[09:55:47.185]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:55:47.185]    __FlashAddr=0x00000000
[09:55:47.185]    __FlashLen=0x00000000
[09:55:47.185]    __FlashArg=0x00000000
[09:55:47.186]    __FlashOp=0x00000000
[09:55:47.186]    __Result=0x00000000
[09:55:47.186]    
[09:55:47.186]    // User-defined
[09:55:47.186]    DbgMCU_CR=0x00000007
[09:55:47.186]    DbgMCU_APB1_Fz=0x00000000
[09:55:47.186]    DbgMCU_APB2_Fz=0x00000000
[09:55:47.187]    TraceClk_Pin=0x00040002
[09:55:47.187]    TraceD0_Pin=0x00040003
[09:55:47.187]    TraceD1_Pin=0x00040004
[09:55:47.187]    TraceD2_Pin=0x00040005
[09:55:47.187]    TraceD3_Pin=0x00040006
[09:55:47.187]  </debugvars>
[09:55:47.187]  
[09:55:47.188]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:55:47.188]    <block atomic="false" info="">
[09:55:47.188]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:55:47.188]        // -> [traceSWO <= 0x00000001]
[09:55:47.188]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:55:47.188]        // -> [traceTPIU <= 0x00000000]
[09:55:47.189]    </block>
[09:55:47.189]    <control if="traceSWO" while="" timeout="0" info="">
[09:55:47.189]      // if-block "traceSWO"
[09:55:47.189]        // =>  TRUE
[09:55:47.189]      <block atomic="false" info="">
[09:55:47.190]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:55:47.190]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:55:47.190]            <block atomic="false" info="">
[09:55:47.190]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:55:47.190]                // -> [dbgmcu_val <= 0x00000000]
[09:55:47.190]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:55:47.190]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:55:47.191]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:55:47.191]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.191]                // -> [dbgmcu_val <= 0x00000007]
[09:55:47.191]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:55:47.192]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:55:47.192]              Sequence("ConfigureTraceSWOPin");
[09:55:47.192]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:55:47.192]                  <block atomic="false" info="">
[09:55:47.192]                    __var pin     = 0;
[09:55:47.192]                      // -> [pin <= 0x00000000]
[09:55:47.192]                    __var port    = 0;
[09:55:47.192]                      // -> [port <= 0x00000000]
[09:55:47.193]                    __var portAdr = 0;
[09:55:47.193]                      // -> [portAdr <= 0x00000000]
[09:55:47.193]                    __var pos     = 0;
[09:55:47.193]                      // -> [pos <= 0x00000000]
[09:55:47.193]                    __var SWO_Pin = 0x00010003;          // PB3
[09:55:47.193]                      // -> [SWO_Pin <= 0x00010003]
[09:55:47.193]                  </block>
[09:55:47.193]                  <block atomic="false" info="configure SWO">
[09:55:47.194]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:55:47.194]                      // -> [pin <= 0x00000003]
[09:55:47.194]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:55:47.194]                      // -> [port <= 0x00000001]
[09:55:47.194]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:55:47.194]                      // -> [portAdr <= 0x40020400]
[09:55:47.194]                    pos = pin * 2;
[09:55:47.195]                      // -> [pos <= 0x00000006]
[09:55:47.195]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:55:47.195]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.195]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.196]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:55:47.196]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.196]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.197]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:55:47.197]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.198]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.198]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:55:47.198]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.199]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.199]                  </block>
[09:55:47.199]                  <control if="pin <  8" while="" timeout="0" info="">
[09:55:47.199]                    // if-block "pin <  8"
[09:55:47.199]                      // =>  TRUE
[09:55:47.199]                    <block atomic="false" info="">
[09:55:47.199]                      pos = ((pin    ) & 7) * 4;
[09:55:47.200]                        // -> [pos <= 0x0000000C]
[09:55:47.200]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:55:47.200]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.201]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.201]                    </block>
[09:55:47.201]                    // end if-block "pin <  8"
[09:55:47.201]                  </control>
[09:55:47.201]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:55:47.201]                    // if-block "pin >= 8"
[09:55:47.201]                      // =>  FALSE
[09:55:47.202]                    // skip if-block "pin >= 8"
[09:55:47.202]                  </control>
[09:55:47.202]                </sequence>
[09:55:47.202]            </block>
[09:55:47.202]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:55:47.202]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:55:47.203]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:55:47.203]            </block>
[09:55:47.203]          </sequence>
[09:55:47.203]      </block>
[09:55:47.203]      // end if-block "traceSWO"
[09:55:47.203]    </control>
[09:55:47.203]    <control if="traceTPIU" while="" timeout="0" info="">
[09:55:47.204]      // if-block "traceTPIU"
[09:55:47.204]        // =>  FALSE
[09:55:47.204]      // skip if-block "traceTPIU"
[09:55:47.204]    </control>
[09:55:47.204]  </sequence>
[09:55:47.204]  
[09:56:08.482]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[09:56:08.482]  
[09:56:08.482]  <debugvars>
[09:56:08.483]    // Pre-defined
[09:56:08.483]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:56:08.483]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:56:08.483]    __dp=0x00000000
[09:56:08.483]    __ap=0x00000000
[09:56:08.483]    __traceout=0x00000001      (SWO Trace)
[09:56:08.483]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:56:08.483]    __FlashAddr=0x00000000
[09:56:08.484]    __FlashLen=0x00000000
[09:56:08.484]    __FlashArg=0x00000000
[09:56:08.484]    __FlashOp=0x00000000
[09:56:08.484]    __Result=0x00000000
[09:56:08.484]    
[09:56:08.484]    // User-defined
[09:56:08.484]    DbgMCU_CR=0x00000007
[09:56:08.485]    DbgMCU_APB1_Fz=0x00000000
[09:56:08.485]    DbgMCU_APB2_Fz=0x00000000
[09:56:08.485]    TraceClk_Pin=0x00040002
[09:56:08.485]    TraceD0_Pin=0x00040003
[09:56:08.485]    TraceD1_Pin=0x00040004
[09:56:08.485]    TraceD2_Pin=0x00040005
[09:56:08.486]    TraceD3_Pin=0x00040006
[09:56:08.486]  </debugvars>
[09:56:08.486]  
[09:56:08.486]  <sequence name="TraceStop" Pname="" disable="false" info="">
[09:56:08.486]    <block atomic="false" info="">
[09:56:08.486]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[09:56:08.486]        // -> [traceSWO <= 0x00000001]
[09:56:08.487]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[09:56:08.487]        // -> [traceTPIU <= 0x00000000]
[09:56:08.487]    </block>
[09:56:08.487]    <control if="traceSWO" while="" timeout="0" info="">
[09:56:08.487]      // if-block "traceSWO"
[09:56:08.487]        // =>  TRUE
[09:56:08.487]      <block atomic="false" info="">
[09:56:08.487]        Sequence("DisableTraceSWO");
[09:56:08.488]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[09:56:08.488]            <block atomic="false" info="">
[09:56:08.488]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:56:08.488]                // -> [dbgmcu_val <= 0x00000000]
[09:56:08.488]            </block>
[09:56:08.488]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[09:56:08.489]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[09:56:08.489]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:56:08.489]                // -> [dbgmcu_val <= 0x00000007]
[09:56:08.489]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[09:56:08.490]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:56:08.490]            </block>
[09:56:08.490]          </sequence>
[09:56:08.490]      </block>
[09:56:08.490]      // end if-block "traceSWO"
[09:56:08.491]    </control>
[09:56:08.491]    <control if="traceTPIU" while="" timeout="0" info="">
[09:56:08.491]      // if-block "traceTPIU"
[09:56:08.491]        // =>  FALSE
[09:56:08.491]      // skip if-block "traceTPIU"
[09:56:08.491]    </control>
[09:56:08.491]  </sequence>
[09:56:08.491]  
[09:58:54.274]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:58:54.274]  
[09:58:54.274]  <debugvars>
[09:58:54.274]    // Pre-defined
[09:58:54.274]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:54.274]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:58:54.275]    __dp=0x00000000
[09:58:54.275]    __ap=0x00000000
[09:58:54.275]    __traceout=0x00000001      (SWO Trace)
[09:58:54.275]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:54.275]    __FlashAddr=0x00000000
[09:58:54.275]    __FlashLen=0x00000000
[09:58:54.275]    __FlashArg=0x00000000
[09:58:54.275]    __FlashOp=0x00000000
[09:58:54.276]    __Result=0x00000000
[09:58:54.276]    
[09:58:54.276]    // User-defined
[09:58:54.276]    DbgMCU_CR=0x00000007
[09:58:54.276]    DbgMCU_APB1_Fz=0x00000000
[09:58:54.276]    DbgMCU_APB2_Fz=0x00000000
[09:58:54.276]    TraceClk_Pin=0x00040002
[09:58:54.277]    TraceD0_Pin=0x00040003
[09:58:54.277]    TraceD1_Pin=0x00040004
[09:58:54.277]    TraceD2_Pin=0x00040005
[09:58:54.277]    TraceD3_Pin=0x00040006
[09:58:54.277]  </debugvars>
[09:58:54.277]  
[09:58:54.277]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:58:54.277]    <block atomic="false" info="">
[09:58:54.277]      Sequence("CheckID");
[09:58:54.278]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:58:54.278]          <block atomic="false" info="">
[09:58:54.278]            __var pidr1 = 0;
[09:58:54.278]              // -> [pidr1 <= 0x00000000]
[09:58:54.278]            __var pidr2 = 0;
[09:58:54.278]              // -> [pidr2 <= 0x00000000]
[09:58:54.279]            __var jep106id = 0;
[09:58:54.279]              // -> [jep106id <= 0x00000000]
[09:58:54.279]            __var ROMTableBase = 0;
[09:58:54.279]              // -> [ROMTableBase <= 0x00000000]
[09:58:54.279]            __ap = 0;      // AHB-AP
[09:58:54.279]              // -> [__ap <= 0x00000000]
[09:58:54.279]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:58:54.280]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.280]              // -> [ROMTableBase <= 0xE00FD000]
[09:58:54.280]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:58:54.280]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.281]              // -> [pidr1 <= 0x00000004]
[09:58:54.282]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:58:54.282]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.282]              // -> [pidr2 <= 0x0000001A]
[09:58:54.282]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:58:54.283]              // -> [jep106id <= 0x00000020]
[09:58:54.283]          </block>
[09:58:54.283]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:58:54.283]            // if-block "jep106id != 0x20"
[09:58:54.283]              // =>  FALSE
[09:58:54.283]            // skip if-block "jep106id != 0x20"
[09:58:54.283]          </control>
[09:58:54.283]        </sequence>
[09:58:54.283]    </block>
[09:58:54.284]  </sequence>
[09:58:54.284]  
[09:58:54.299]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:58:54.299]  
[09:58:54.299]  <debugvars>
[09:58:54.299]    // Pre-defined
[09:58:54.299]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:58:54.299]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[09:58:54.299]    __dp=0x00000000
[09:58:54.299]    __ap=0x00000000
[09:58:54.299]    __traceout=0x00000001      (SWO Trace)
[09:58:54.300]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:58:54.300]    __FlashAddr=0x00000000
[09:58:54.300]    __FlashLen=0x00000000
[09:58:54.300]    __FlashArg=0x00000000
[09:58:54.300]    __FlashOp=0x00000000
[09:58:54.300]    __Result=0x00000000
[09:58:54.300]    
[09:58:54.300]    // User-defined
[09:58:54.300]    DbgMCU_CR=0x00000007
[09:58:54.300]    DbgMCU_APB1_Fz=0x00000000
[09:58:54.300]    DbgMCU_APB2_Fz=0x00000000
[09:58:54.300]    TraceClk_Pin=0x00040002
[09:58:54.300]    TraceD0_Pin=0x00040003
[09:58:54.300]    TraceD1_Pin=0x00040004
[09:58:54.300]    TraceD2_Pin=0x00040005
[09:58:54.301]    TraceD3_Pin=0x00040006
[09:58:54.301]  </debugvars>
[09:58:54.301]  
[09:58:54.301]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:58:54.301]    <block atomic="false" info="">
[09:58:54.301]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:58:54.302]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.302]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:58:54.303]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.303]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:58:54.303]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.303]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:58:54.304]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:58:54.304]    </block>
[09:58:54.304]  </sequence>
[09:58:54.304]  
[09:59:26.230]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[09:59:26.230]  
[09:59:26.230]  <debugvars>
[09:59:26.230]    // Pre-defined
[09:59:26.230]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:26.230]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:26.231]    __dp=0x00000000
[09:59:26.231]    __ap=0x00000000
[09:59:26.231]    __traceout=0x00000001      (SWO Trace)
[09:59:26.231]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:26.231]    __FlashAddr=0x00000000
[09:59:26.232]    __FlashLen=0x00000000
[09:59:26.232]    __FlashArg=0x00000000
[09:59:26.232]    __FlashOp=0x00000000
[09:59:26.232]    __Result=0x00000000
[09:59:26.232]    
[09:59:26.232]    // User-defined
[09:59:26.232]    DbgMCU_CR=0x00000007
[09:59:26.233]    DbgMCU_APB1_Fz=0x00000000
[09:59:26.233]    DbgMCU_APB2_Fz=0x00000000
[09:59:26.233]    TraceClk_Pin=0x00040002
[09:59:26.233]    TraceD0_Pin=0x00040003
[09:59:26.233]    TraceD1_Pin=0x00040004
[09:59:26.233]    TraceD2_Pin=0x00040005
[09:59:26.234]    TraceD3_Pin=0x00040006
[09:59:26.234]  </debugvars>
[09:59:26.234]  
[09:59:26.234]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[09:59:26.234]    <block atomic="false" info="">
[09:59:26.235]      Sequence("CheckID");
[09:59:26.235]        <sequence name="CheckID" Pname="" disable="false" info="">
[09:59:26.235]          <block atomic="false" info="">
[09:59:26.235]            __var pidr1 = 0;
[09:59:26.235]              // -> [pidr1 <= 0x00000000]
[09:59:26.235]            __var pidr2 = 0;
[09:59:26.236]              // -> [pidr2 <= 0x00000000]
[09:59:26.236]            __var jep106id = 0;
[09:59:26.236]              // -> [jep106id <= 0x00000000]
[09:59:26.236]            __var ROMTableBase = 0;
[09:59:26.236]              // -> [ROMTableBase <= 0x00000000]
[09:59:26.236]            __ap = 0;      // AHB-AP
[09:59:26.237]              // -> [__ap <= 0x00000000]
[09:59:26.237]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[09:59:26.237]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.237]              // -> [ROMTableBase <= 0xE00FD000]
[09:59:26.237]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[09:59:26.238]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.238]              // -> [pidr1 <= 0x00000004]
[09:59:26.238]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[09:59:26.239]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.239]              // -> [pidr2 <= 0x0000001A]
[09:59:26.239]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[09:59:26.239]              // -> [jep106id <= 0x00000020]
[09:59:26.240]          </block>
[09:59:26.240]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[09:59:26.240]            // if-block "jep106id != 0x20"
[09:59:26.240]              // =>  FALSE
[09:59:26.240]            // skip if-block "jep106id != 0x20"
[09:59:26.240]          </control>
[09:59:26.241]        </sequence>
[09:59:26.241]    </block>
[09:59:26.241]  </sequence>
[09:59:26.241]  
[09:59:26.255]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[09:59:26.255]  
[09:59:26.255]  <debugvars>
[09:59:26.256]    // Pre-defined
[09:59:26.256]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:26.256]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:26.256]    __dp=0x00000000
[09:59:26.256]    __ap=0x00000000
[09:59:26.256]    __traceout=0x00000001      (SWO Trace)
[09:59:26.256]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:26.257]    __FlashAddr=0x00000000
[09:59:26.257]    __FlashLen=0x00000000
[09:59:26.257]    __FlashArg=0x00000000
[09:59:26.257]    __FlashOp=0x00000000
[09:59:26.257]    __Result=0x00000000
[09:59:26.257]    
[09:59:26.257]    // User-defined
[09:59:26.257]    DbgMCU_CR=0x00000007
[09:59:26.258]    DbgMCU_APB1_Fz=0x00000000
[09:59:26.258]    DbgMCU_APB2_Fz=0x00000000
[09:59:26.258]    TraceClk_Pin=0x00040002
[09:59:26.258]    TraceD0_Pin=0x00040003
[09:59:26.258]    TraceD1_Pin=0x00040004
[09:59:26.258]    TraceD2_Pin=0x00040005
[09:59:26.258]    TraceD3_Pin=0x00040006
[09:59:26.259]  </debugvars>
[09:59:26.259]  
[09:59:26.259]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[09:59:26.259]    <block atomic="false" info="">
[09:59:26.259]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[09:59:26.260]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.260]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[09:59:26.260]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.261]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[09:59:26.261]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.261]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[09:59:26.262]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.262]    </block>
[09:59:26.262]  </sequence>
[09:59:26.262]  
[09:59:26.277]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[09:59:26.277]  
[09:59:26.278]  <debugvars>
[09:59:26.278]    // Pre-defined
[09:59:26.278]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:26.278]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:26.278]    __dp=0x00000000
[09:59:26.279]    __ap=0x00000000
[09:59:26.279]    __traceout=0x00000001      (SWO Trace)
[09:59:26.279]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:26.279]    __FlashAddr=0x00000000
[09:59:26.279]    __FlashLen=0x00000000
[09:59:26.280]    __FlashArg=0x00000000
[09:59:26.280]    __FlashOp=0x00000000
[09:59:26.280]    __Result=0x00000000
[09:59:26.280]    
[09:59:26.280]    // User-defined
[09:59:26.280]    DbgMCU_CR=0x00000007
[09:59:26.280]    DbgMCU_APB1_Fz=0x00000000
[09:59:26.281]    DbgMCU_APB2_Fz=0x00000000
[09:59:26.281]    TraceClk_Pin=0x00040002
[09:59:26.281]    TraceD0_Pin=0x00040003
[09:59:26.281]    TraceD1_Pin=0x00040004
[09:59:26.281]    TraceD2_Pin=0x00040005
[09:59:26.281]    TraceD3_Pin=0x00040006
[09:59:26.282]  </debugvars>
[09:59:26.282]  
[09:59:26.282]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:59:26.282]    <block atomic="false" info="">
[09:59:26.282]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:59:26.283]        // -> [traceSWO <= 0x00000001]
[09:59:26.283]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:59:26.283]        // -> [traceTPIU <= 0x00000000]
[09:59:26.283]    </block>
[09:59:26.283]    <control if="traceSWO" while="" timeout="0" info="">
[09:59:26.283]      // if-block "traceSWO"
[09:59:26.283]        // =>  TRUE
[09:59:26.284]      <block atomic="false" info="">
[09:59:26.284]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:59:26.284]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:59:26.284]            <block atomic="false" info="">
[09:59:26.284]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:59:26.285]                // -> [dbgmcu_val <= 0x00000000]
[09:59:26.285]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:59:26.285]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:59:26.285]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:59:26.286]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.286]                // -> [dbgmcu_val <= 0x00000007]
[09:59:26.286]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:59:26.286]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:59:26.286]              Sequence("ConfigureTraceSWOPin");
[09:59:26.286]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:59:26.287]                  <block atomic="false" info="">
[09:59:26.287]                    __var pin     = 0;
[09:59:26.287]                      // -> [pin <= 0x00000000]
[09:59:26.287]                    __var port    = 0;
[09:59:26.287]                      // -> [port <= 0x00000000]
[09:59:26.287]                    __var portAdr = 0;
[09:59:26.287]                      // -> [portAdr <= 0x00000000]
[09:59:26.288]                    __var pos     = 0;
[09:59:26.288]                      // -> [pos <= 0x00000000]
[09:59:26.288]                    __var SWO_Pin = 0x00010003;          // PB3
[09:59:26.288]                      // -> [SWO_Pin <= 0x00010003]
[09:59:26.288]                  </block>
[09:59:26.288]                  <block atomic="false" info="configure SWO">
[09:59:26.288]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:59:26.289]                      // -> [pin <= 0x00000003]
[09:59:26.289]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:59:26.289]                      // -> [port <= 0x00000001]
[09:59:26.289]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:59:26.289]                      // -> [portAdr <= 0x40020400]
[09:59:26.289]                    pos = pin * 2;
[09:59:26.289]                      // -> [pos <= 0x00000006]
[09:59:26.290]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:59:26.290]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.290]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.291]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:59:26.291]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.292]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.292]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:59:26.292]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.293]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.293]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:59:26.294]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.294]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.294]                  </block>
[09:59:26.295]                  <control if="pin <  8" while="" timeout="0" info="">
[09:59:26.295]                    // if-block "pin <  8"
[09:59:26.295]                      // =>  TRUE
[09:59:26.295]                    <block atomic="false" info="">
[09:59:26.295]                      pos = ((pin    ) & 7) * 4;
[09:59:26.295]                        // -> [pos <= 0x0000000C]
[09:59:26.296]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:59:26.296]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.296]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.296]                    </block>
[09:59:26.296]                    // end if-block "pin <  8"
[09:59:26.296]                  </control>
[09:59:26.296]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:59:26.296]                    // if-block "pin >= 8"
[09:59:26.297]                      // =>  FALSE
[09:59:26.297]                    // skip if-block "pin >= 8"
[09:59:26.297]                  </control>
[09:59:26.297]                </sequence>
[09:59:26.297]            </block>
[09:59:26.298]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:59:26.298]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:59:26.298]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.299]            </block>
[09:59:26.299]          </sequence>
[09:59:26.299]      </block>
[09:59:26.299]      // end if-block "traceSWO"
[09:59:26.299]    </control>
[09:59:26.299]    <control if="traceTPIU" while="" timeout="0" info="">
[09:59:26.300]      // if-block "traceTPIU"
[09:59:26.300]        // =>  FALSE
[09:59:26.300]      // skip if-block "traceTPIU"
[09:59:26.300]    </control>
[09:59:26.300]  </sequence>
[09:59:26.300]  
[09:59:26.305]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:59:26.305]  
[09:59:26.305]  <debugvars>
[09:59:26.305]    // Pre-defined
[09:59:26.306]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:26.306]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:26.306]    __dp=0x00000000
[09:59:26.306]    __ap=0x00000000
[09:59:26.306]    __traceout=0x00000001      (SWO Trace)
[09:59:26.306]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:26.307]    __FlashAddr=0x00000000
[09:59:26.307]    __FlashLen=0x00000000
[09:59:26.307]    __FlashArg=0x00000000
[09:59:26.307]    __FlashOp=0x00000000
[09:59:26.307]    __Result=0x00000000
[09:59:26.307]    
[09:59:26.307]    // User-defined
[09:59:26.307]    DbgMCU_CR=0x00000007
[09:59:26.308]    DbgMCU_APB1_Fz=0x00000000
[09:59:26.308]    DbgMCU_APB2_Fz=0x00000000
[09:59:26.308]    TraceClk_Pin=0x00040002
[09:59:26.308]    TraceD0_Pin=0x00040003
[09:59:26.308]    TraceD1_Pin=0x00040004
[09:59:26.308]    TraceD2_Pin=0x00040005
[09:59:26.308]    TraceD3_Pin=0x00040006
[09:59:26.309]  </debugvars>
[09:59:26.309]  
[09:59:26.309]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:59:26.309]    <block atomic="false" info="">
[09:59:26.309]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:59:26.310]        // -> [traceSWO <= 0x00000001]
[09:59:26.310]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:59:26.310]        // -> [traceTPIU <= 0x00000000]
[09:59:26.310]    </block>
[09:59:26.310]    <control if="traceSWO" while="" timeout="0" info="">
[09:59:26.310]      // if-block "traceSWO"
[09:59:26.311]        // =>  TRUE
[09:59:26.311]      <block atomic="false" info="">
[09:59:26.311]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:59:26.311]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:59:26.311]            <block atomic="false" info="">
[09:59:26.311]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:59:26.311]                // -> [dbgmcu_val <= 0x00000000]
[09:59:26.311]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:59:26.312]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:59:26.312]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:59:26.312]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.312]                // -> [dbgmcu_val <= 0x00000007]
[09:59:26.313]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:59:26.313]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:59:26.313]              Sequence("ConfigureTraceSWOPin");
[09:59:26.313]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:59:26.313]                  <block atomic="false" info="">
[09:59:26.313]                    __var pin     = 0;
[09:59:26.313]                      // -> [pin <= 0x00000000]
[09:59:26.313]                    __var port    = 0;
[09:59:26.314]                      // -> [port <= 0x00000000]
[09:59:26.314]                    __var portAdr = 0;
[09:59:26.314]                      // -> [portAdr <= 0x00000000]
[09:59:26.314]                    __var pos     = 0;
[09:59:26.314]                      // -> [pos <= 0x00000000]
[09:59:26.314]                    __var SWO_Pin = 0x00010003;          // PB3
[09:59:26.314]                      // -> [SWO_Pin <= 0x00010003]
[09:59:26.315]                  </block>
[09:59:26.315]                  <block atomic="false" info="configure SWO">
[09:59:26.315]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:59:26.315]                      // -> [pin <= 0x00000003]
[09:59:26.315]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:59:26.315]                      // -> [port <= 0x00000001]
[09:59:26.315]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:59:26.315]                      // -> [portAdr <= 0x40020400]
[09:59:26.315]                    pos = pin * 2;
[09:59:26.316]                      // -> [pos <= 0x00000006]
[09:59:26.316]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:59:26.316]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.316]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.317]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:59:26.317]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.317]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.317]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:59:26.318]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.318]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.318]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:59:26.319]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.319]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.319]                  </block>
[09:59:26.319]                  <control if="pin <  8" while="" timeout="0" info="">
[09:59:26.320]                    // if-block "pin <  8"
[09:59:26.320]                      // =>  TRUE
[09:59:26.320]                    <block atomic="false" info="">
[09:59:26.320]                      pos = ((pin    ) & 7) * 4;
[09:59:26.320]                        // -> [pos <= 0x0000000C]
[09:59:26.320]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:59:26.321]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.321]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.321]                    </block>
[09:59:26.321]                    // end if-block "pin <  8"
[09:59:26.321]                  </control>
[09:59:26.321]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:59:26.322]                    // if-block "pin >= 8"
[09:59:26.322]                      // =>  FALSE
[09:59:26.322]                    // skip if-block "pin >= 8"
[09:59:26.322]                  </control>
[09:59:26.322]                </sequence>
[09:59:26.322]            </block>
[09:59:26.322]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:59:26.322]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:59:26.323]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.323]            </block>
[09:59:26.323]          </sequence>
[09:59:26.323]      </block>
[09:59:26.323]      // end if-block "traceSWO"
[09:59:26.323]    </control>
[09:59:26.324]    <control if="traceTPIU" while="" timeout="0" info="">
[09:59:26.324]      // if-block "traceTPIU"
[09:59:26.324]        // =>  FALSE
[09:59:26.324]      // skip if-block "traceTPIU"
[09:59:26.324]    </control>
[09:59:26.324]  </sequence>
[09:59:26.324]  
[09:59:26.541]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:59:26.541]  
[09:59:26.542]  <debugvars>
[09:59:26.542]    // Pre-defined
[09:59:26.542]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:26.543]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:26.543]    __dp=0x00000000
[09:59:26.543]    __ap=0x00000000
[09:59:26.543]    __traceout=0x00000001      (SWO Trace)
[09:59:26.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:26.544]    __FlashAddr=0x00000000
[09:59:26.544]    __FlashLen=0x00000000
[09:59:26.544]    __FlashArg=0x00000000
[09:59:26.544]    __FlashOp=0x00000000
[09:59:26.544]    __Result=0x00000000
[09:59:26.544]    
[09:59:26.544]    // User-defined
[09:59:26.545]    DbgMCU_CR=0x00000007
[09:59:26.545]    DbgMCU_APB1_Fz=0x00000000
[09:59:26.545]    DbgMCU_APB2_Fz=0x00000000
[09:59:26.545]    TraceClk_Pin=0x00040002
[09:59:26.545]    TraceD0_Pin=0x00040003
[09:59:26.546]    TraceD1_Pin=0x00040004
[09:59:26.546]    TraceD2_Pin=0x00040005
[09:59:26.547]    TraceD3_Pin=0x00040006
[09:59:26.547]  </debugvars>
[09:59:26.547]  
[09:59:26.547]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:59:26.547]    <block atomic="false" info="">
[09:59:26.547]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:59:26.547]        // -> [traceSWO <= 0x00000001]
[09:59:26.548]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:59:26.548]        // -> [traceTPIU <= 0x00000000]
[09:59:26.548]    </block>
[09:59:26.548]    <control if="traceSWO" while="" timeout="0" info="">
[09:59:26.548]      // if-block "traceSWO"
[09:59:26.549]        // =>  TRUE
[09:59:26.549]      <block atomic="false" info="">
[09:59:26.549]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:59:26.549]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:59:26.549]            <block atomic="false" info="">
[09:59:26.549]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:59:26.550]                // -> [dbgmcu_val <= 0x00000000]
[09:59:26.550]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:59:26.550]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:59:26.550]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:59:26.551]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.551]                // -> [dbgmcu_val <= 0x00000007]
[09:59:26.551]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:59:26.551]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:59:26.551]              Sequence("ConfigureTraceSWOPin");
[09:59:26.552]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:59:26.552]                  <block atomic="false" info="">
[09:59:26.552]                    __var pin     = 0;
[09:59:26.552]                      // -> [pin <= 0x00000000]
[09:59:26.552]                    __var port    = 0;
[09:59:26.552]                      // -> [port <= 0x00000000]
[09:59:26.553]                    __var portAdr = 0;
[09:59:26.553]                      // -> [portAdr <= 0x00000000]
[09:59:26.553]                    __var pos     = 0;
[09:59:26.553]                      // -> [pos <= 0x00000000]
[09:59:26.553]                    __var SWO_Pin = 0x00010003;          // PB3
[09:59:26.553]                      // -> [SWO_Pin <= 0x00010003]
[09:59:26.554]                  </block>
[09:59:26.554]                  <block atomic="false" info="configure SWO">
[09:59:26.554]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:59:26.554]                      // -> [pin <= 0x00000003]
[09:59:26.554]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:59:26.555]                      // -> [port <= 0x00000001]
[09:59:26.555]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:59:26.556]                      // -> [portAdr <= 0x40020400]
[09:59:26.556]                    pos = pin * 2;
[09:59:26.556]                      // -> [pos <= 0x00000006]
[09:59:26.556]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:59:26.557]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.557]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.557]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:59:26.557]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.558]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.558]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:59:26.559]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.559]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.559]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:59:26.560]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.560]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.561]                  </block>
[09:59:26.561]                  <control if="pin <  8" while="" timeout="0" info="">
[09:59:26.561]                    // if-block "pin <  8"
[09:59:26.561]                      // =>  TRUE
[09:59:26.561]                    <block atomic="false" info="">
[09:59:26.562]                      pos = ((pin    ) & 7) * 4;
[09:59:26.562]                        // -> [pos <= 0x0000000C]
[09:59:26.562]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:59:26.562]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.564]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.564]                    </block>
[09:59:26.564]                    // end if-block "pin <  8"
[09:59:26.564]                  </control>
[09:59:26.564]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:59:26.564]                    // if-block "pin >= 8"
[09:59:26.564]                      // =>  FALSE
[09:59:26.564]                    // skip if-block "pin >= 8"
[09:59:26.565]                  </control>
[09:59:26.565]                </sequence>
[09:59:26.565]            </block>
[09:59:26.565]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:59:26.565]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:59:26.566]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:26.566]            </block>
[09:59:26.566]          </sequence>
[09:59:26.567]      </block>
[09:59:26.567]      // end if-block "traceSWO"
[09:59:26.567]    </control>
[09:59:26.567]    <control if="traceTPIU" while="" timeout="0" info="">
[09:59:26.567]      // if-block "traceTPIU"
[09:59:26.567]        // =>  FALSE
[09:59:26.567]      // skip if-block "traceTPIU"
[09:59:26.568]    </control>
[09:59:26.568]  </sequence>
[09:59:26.569]  
[09:59:50.678]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[09:59:50.678]  
[09:59:50.678]  <debugvars>
[09:59:50.679]    // Pre-defined
[09:59:50.679]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[09:59:50.679]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[09:59:50.679]    __dp=0x00000000
[09:59:50.679]    __ap=0x00000000
[09:59:50.679]    __traceout=0x00000001      (SWO Trace)
[09:59:50.680]    __errorcontrol=0x00000000  (Skip Errors="False")
[09:59:50.680]    __FlashAddr=0x00000000
[09:59:50.680]    __FlashLen=0x00000000
[09:59:50.680]    __FlashArg=0x00000000
[09:59:50.680]    __FlashOp=0x00000000
[09:59:50.681]    __Result=0x00000000
[09:59:50.681]    
[09:59:50.681]    // User-defined
[09:59:50.681]    DbgMCU_CR=0x00000007
[09:59:50.681]    DbgMCU_APB1_Fz=0x00000000
[09:59:50.681]    DbgMCU_APB2_Fz=0x00000000
[09:59:50.681]    TraceClk_Pin=0x00040002
[09:59:50.682]    TraceD0_Pin=0x00040003
[09:59:50.682]    TraceD1_Pin=0x00040004
[09:59:50.682]    TraceD2_Pin=0x00040005
[09:59:50.682]    TraceD3_Pin=0x00040006
[09:59:50.682]  </debugvars>
[09:59:50.682]  
[09:59:50.683]  <sequence name="TraceStart" Pname="" disable="false" info="">
[09:59:50.683]    <block atomic="false" info="">
[09:59:50.683]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[09:59:50.683]        // -> [traceSWO <= 0x00000001]
[09:59:50.683]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[09:59:50.684]        // -> [traceTPIU <= 0x00000000]
[09:59:50.684]    </block>
[09:59:50.684]    <control if="traceSWO" while="" timeout="0" info="">
[09:59:50.684]      // if-block "traceSWO"
[09:59:50.684]        // =>  TRUE
[09:59:50.684]      <block atomic="false" info="">
[09:59:50.685]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[09:59:50.685]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[09:59:50.686]            <block atomic="false" info="">
[09:59:50.686]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[09:59:50.686]                // -> [dbgmcu_val <= 0x00000000]
[09:59:50.686]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[09:59:50.686]                // -> [dbgmcu_trace_val <= 0x00000000]
[09:59:50.686]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[09:59:50.687]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.687]                // -> [dbgmcu_val <= 0x00000007]
[09:59:50.687]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[09:59:50.687]                // -> [dbgmcu_trace_val <= 0x00000020]
[09:59:50.687]              Sequence("ConfigureTraceSWOPin");
[09:59:50.687]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[09:59:50.688]                  <block atomic="false" info="">
[09:59:50.688]                    __var pin     = 0;
[09:59:50.688]                      // -> [pin <= 0x00000000]
[09:59:50.688]                    __var port    = 0;
[09:59:50.688]                      // -> [port <= 0x00000000]
[09:59:50.688]                    __var portAdr = 0;
[09:59:50.689]                      // -> [portAdr <= 0x00000000]
[09:59:50.689]                    __var pos     = 0;
[09:59:50.689]                      // -> [pos <= 0x00000000]
[09:59:50.689]                    __var SWO_Pin = 0x00010003;          // PB3
[09:59:50.689]                      // -> [SWO_Pin <= 0x00010003]
[09:59:50.689]                  </block>
[09:59:50.690]                  <block atomic="false" info="configure SWO">
[09:59:50.690]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[09:59:50.690]                      // -> [pin <= 0x00000003]
[09:59:50.690]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[09:59:50.690]                      // -> [port <= 0x00000001]
[09:59:50.691]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[09:59:50.691]                      // -> [portAdr <= 0x40020400]
[09:59:50.691]                    pos = pin * 2;
[09:59:50.691]                      // -> [pos <= 0x00000006]
[09:59:50.691]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[09:59:50.692]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.692]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.692]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[09:59:50.693]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.693]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.693]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[09:59:50.693]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.694]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.694]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[09:59:50.694]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.695]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.695]                  </block>
[09:59:50.695]                  <control if="pin <  8" while="" timeout="0" info="">
[09:59:50.695]                    // if-block "pin <  8"
[09:59:50.695]                      // =>  TRUE
[09:59:50.695]                    <block atomic="false" info="">
[09:59:50.696]                      pos = ((pin    ) & 7) * 4;
[09:59:50.696]                        // -> [pos <= 0x0000000C]
[09:59:50.696]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[09:59:50.696]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.697]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.697]                    </block>
[09:59:50.697]                    // end if-block "pin <  8"
[09:59:50.697]                  </control>
[09:59:50.697]                  <control if="pin >= 8" while="" timeout="0" info="">
[09:59:50.697]                    // if-block "pin >= 8"
[09:59:50.698]                      // =>  FALSE
[09:59:50.698]                    // skip if-block "pin >= 8"
[09:59:50.698]                  </control>
[09:59:50.698]                </sequence>
[09:59:50.698]            </block>
[09:59:50.698]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[09:59:50.699]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[09:59:50.699]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[09:59:50.699]            </block>
[09:59:50.699]          </sequence>
[09:59:50.699]      </block>
[09:59:50.700]      // end if-block "traceSWO"
[09:59:50.700]    </control>
[09:59:50.700]    <control if="traceTPIU" while="" timeout="0" info="">
[09:59:50.700]      // if-block "traceTPIU"
[09:59:50.700]        // =>  FALSE
[09:59:50.700]      // skip if-block "traceTPIU"
[09:59:50.700]    </control>
[09:59:50.701]  </sequence>
[09:59:50.701]  
[10:00:13.668]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:00:13.668]  
[10:00:13.669]  <debugvars>
[10:00:13.669]    // Pre-defined
[10:00:13.669]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:00:13.669]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:00:13.669]    __dp=0x00000000
[10:00:13.670]    __ap=0x00000000
[10:00:13.670]    __traceout=0x00000001      (SWO Trace)
[10:00:13.670]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:00:13.670]    __FlashAddr=0x00000000
[10:00:13.670]    __FlashLen=0x00000000
[10:00:13.670]    __FlashArg=0x00000000
[10:00:13.670]    __FlashOp=0x00000000
[10:00:13.670]    __Result=0x00000000
[10:00:13.670]    
[10:00:13.670]    // User-defined
[10:00:13.671]    DbgMCU_CR=0x00000007
[10:00:13.671]    DbgMCU_APB1_Fz=0x00000000
[10:00:13.671]    DbgMCU_APB2_Fz=0x00000000
[10:00:13.671]    TraceClk_Pin=0x00040002
[10:00:13.671]    TraceD0_Pin=0x00040003
[10:00:13.671]    TraceD1_Pin=0x00040004
[10:00:13.671]    TraceD2_Pin=0x00040005
[10:00:13.671]    TraceD3_Pin=0x00040006
[10:00:13.672]  </debugvars>
[10:00:13.672]  
[10:00:13.672]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:00:13.672]    <block atomic="false" info="">
[10:00:13.672]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:00:13.672]        // -> [traceSWO <= 0x00000001]
[10:00:13.672]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:00:13.672]        // -> [traceTPIU <= 0x00000000]
[10:00:13.673]    </block>
[10:00:13.673]    <control if="traceSWO" while="" timeout="0" info="">
[10:00:13.673]      // if-block "traceSWO"
[10:00:13.673]        // =>  TRUE
[10:00:13.673]      <block atomic="false" info="">
[10:00:13.673]        Sequence("DisableTraceSWO");
[10:00:13.673]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:00:13.673]            <block atomic="false" info="">
[10:00:13.673]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:00:13.674]                // -> [dbgmcu_val <= 0x00000000]
[10:00:13.674]            </block>
[10:00:13.674]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:00:13.674]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:00:13.674]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:00:13.675]                // -> [dbgmcu_val <= 0x00000007]
[10:00:13.675]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:00:13.675]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:00:13.675]            </block>
[10:00:13.676]          </sequence>
[10:00:13.676]      </block>
[10:00:13.676]      // end if-block "traceSWO"
[10:00:13.676]    </control>
[10:00:13.676]    <control if="traceTPIU" while="" timeout="0" info="">
[10:00:13.676]      // if-block "traceTPIU"
[10:00:13.676]        // =>  FALSE
[10:00:13.677]      // skip if-block "traceTPIU"
[10:00:13.677]    </control>
[10:00:13.677]  </sequence>
[10:00:13.677]  
[10:02:44.327]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:02:44.327]  
[10:02:44.328]  <debugvars>
[10:02:44.328]    // Pre-defined
[10:02:44.328]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:02:44.328]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:02:44.328]    __dp=0x00000000
[10:02:44.328]    __ap=0x00000000
[10:02:44.329]    __traceout=0x00000001      (SWO Trace)
[10:02:44.329]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:02:44.329]    __FlashAddr=0x00000000
[10:02:44.329]    __FlashLen=0x00000000
[10:02:44.329]    __FlashArg=0x00000000
[10:02:44.329]    __FlashOp=0x00000000
[10:02:44.329]    __Result=0x00000000
[10:02:44.330]    
[10:02:44.330]    // User-defined
[10:02:44.330]    DbgMCU_CR=0x00000007
[10:02:44.330]    DbgMCU_APB1_Fz=0x00000000
[10:02:44.330]    DbgMCU_APB2_Fz=0x00000000
[10:02:44.330]    TraceClk_Pin=0x00040002
[10:02:44.330]    TraceD0_Pin=0x00040003
[10:02:44.330]    TraceD1_Pin=0x00040004
[10:02:44.330]    TraceD2_Pin=0x00040005
[10:02:44.331]    TraceD3_Pin=0x00040006
[10:02:44.331]  </debugvars>
[10:02:44.331]  
[10:02:44.331]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:02:44.331]    <block atomic="false" info="">
[10:02:44.331]      Sequence("CheckID");
[10:02:44.331]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:02:44.332]          <block atomic="false" info="">
[10:02:44.332]            __var pidr1 = 0;
[10:02:44.332]              // -> [pidr1 <= 0x00000000]
[10:02:44.332]            __var pidr2 = 0;
[10:02:44.332]              // -> [pidr2 <= 0x00000000]
[10:02:44.332]            __var jep106id = 0;
[10:02:44.332]              // -> [jep106id <= 0x00000000]
[10:02:44.332]            __var ROMTableBase = 0;
[10:02:44.333]              // -> [ROMTableBase <= 0x00000000]
[10:02:44.333]            __ap = 0;      // AHB-AP
[10:02:44.333]              // -> [__ap <= 0x00000000]
[10:02:44.333]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:02:44.333]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.334]              // -> [ROMTableBase <= 0xE00FD000]
[10:02:44.334]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:02:44.334]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.334]              // -> [pidr1 <= 0x00000004]
[10:02:44.334]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:02:44.335]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.335]              // -> [pidr2 <= 0x0000001A]
[10:02:44.335]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:02:44.335]              // -> [jep106id <= 0x00000020]
[10:02:44.335]          </block>
[10:02:44.335]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:02:44.336]            // if-block "jep106id != 0x20"
[10:02:44.336]              // =>  FALSE
[10:02:44.336]            // skip if-block "jep106id != 0x20"
[10:02:44.336]          </control>
[10:02:44.336]        </sequence>
[10:02:44.336]    </block>
[10:02:44.336]  </sequence>
[10:02:44.337]  
[10:02:44.351]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:02:44.351]  
[10:02:44.351]  <debugvars>
[10:02:44.351]    // Pre-defined
[10:02:44.351]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:02:44.351]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:02:44.351]    __dp=0x00000000
[10:02:44.351]    __ap=0x00000000
[10:02:44.352]    __traceout=0x00000001      (SWO Trace)
[10:02:44.352]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:02:44.352]    __FlashAddr=0x00000000
[10:02:44.352]    __FlashLen=0x00000000
[10:02:44.352]    __FlashArg=0x00000000
[10:02:44.352]    __FlashOp=0x00000000
[10:02:44.353]    __Result=0x00000000
[10:02:44.353]    
[10:02:44.353]    // User-defined
[10:02:44.353]    DbgMCU_CR=0x00000007
[10:02:44.353]    DbgMCU_APB1_Fz=0x00000000
[10:02:44.353]    DbgMCU_APB2_Fz=0x00000000
[10:02:44.353]    TraceClk_Pin=0x00040002
[10:02:44.353]    TraceD0_Pin=0x00040003
[10:02:44.354]    TraceD1_Pin=0x00040004
[10:02:44.354]    TraceD2_Pin=0x00040005
[10:02:44.354]    TraceD3_Pin=0x00040006
[10:02:44.354]  </debugvars>
[10:02:44.354]  
[10:02:44.354]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:02:44.354]    <block atomic="false" info="">
[10:02:44.355]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:02:44.355]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.355]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:02:44.356]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.356]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:02:44.356]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.356]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:02:44.357]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:02:44.357]    </block>
[10:02:44.357]  </sequence>
[10:02:44.357]  
[10:03:16.297]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:03:16.297]  
[10:03:16.297]  <debugvars>
[10:03:16.297]    // Pre-defined
[10:03:16.298]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:03:16.298]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:03:16.298]    __dp=0x00000000
[10:03:16.298]    __ap=0x00000000
[10:03:16.298]    __traceout=0x00000001      (SWO Trace)
[10:03:16.299]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:03:16.299]    __FlashAddr=0x00000000
[10:03:16.299]    __FlashLen=0x00000000
[10:03:16.299]    __FlashArg=0x00000000
[10:03:16.299]    __FlashOp=0x00000000
[10:03:16.299]    __Result=0x00000000
[10:03:16.300]    
[10:03:16.300]    // User-defined
[10:03:16.300]    DbgMCU_CR=0x00000007
[10:03:16.300]    DbgMCU_APB1_Fz=0x00000000
[10:03:16.300]    DbgMCU_APB2_Fz=0x00000000
[10:03:16.301]    TraceClk_Pin=0x00040002
[10:03:16.301]    TraceD0_Pin=0x00040003
[10:03:16.301]    TraceD1_Pin=0x00040004
[10:03:16.301]    TraceD2_Pin=0x00040005
[10:03:16.301]    TraceD3_Pin=0x00040006
[10:03:16.301]  </debugvars>
[10:03:16.302]  
[10:03:16.302]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:03:16.302]    <block atomic="false" info="">
[10:03:16.302]      Sequence("CheckID");
[10:03:16.302]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:03:16.302]          <block atomic="false" info="">
[10:03:16.303]            __var pidr1 = 0;
[10:03:16.303]              // -> [pidr1 <= 0x00000000]
[10:03:16.303]            __var pidr2 = 0;
[10:03:16.303]              // -> [pidr2 <= 0x00000000]
[10:03:16.303]            __var jep106id = 0;
[10:03:16.304]              // -> [jep106id <= 0x00000000]
[10:03:16.304]            __var ROMTableBase = 0;
[10:03:16.304]              // -> [ROMTableBase <= 0x00000000]
[10:03:16.304]            __ap = 0;      // AHB-AP
[10:03:16.304]              // -> [__ap <= 0x00000000]
[10:03:16.304]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:03:16.305]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.305]              // -> [ROMTableBase <= 0xE00FD000]
[10:03:16.305]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:03:16.306]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.306]              // -> [pidr1 <= 0x00000004]
[10:03:16.306]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:03:16.307]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.307]              // -> [pidr2 <= 0x0000001A]
[10:03:16.307]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:03:16.307]              // -> [jep106id <= 0x00000020]
[10:03:16.307]          </block>
[10:03:16.307]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:03:16.308]            // if-block "jep106id != 0x20"
[10:03:16.308]              // =>  FALSE
[10:03:16.308]            // skip if-block "jep106id != 0x20"
[10:03:16.308]          </control>
[10:03:16.308]        </sequence>
[10:03:16.308]    </block>
[10:03:16.308]  </sequence>
[10:03:16.308]  
[10:03:16.322]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:03:16.322]  
[10:03:16.323]  <debugvars>
[10:03:16.323]    // Pre-defined
[10:03:16.323]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:03:16.323]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:03:16.323]    __dp=0x00000000
[10:03:16.323]    __ap=0x00000000
[10:03:16.324]    __traceout=0x00000001      (SWO Trace)
[10:03:16.324]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:03:16.324]    __FlashAddr=0x00000000
[10:03:16.324]    __FlashLen=0x00000000
[10:03:16.325]    __FlashArg=0x00000000
[10:03:16.325]    __FlashOp=0x00000000
[10:03:16.325]    __Result=0x00000000
[10:03:16.325]    
[10:03:16.325]    // User-defined
[10:03:16.325]    DbgMCU_CR=0x00000007
[10:03:16.325]    DbgMCU_APB1_Fz=0x00000000
[10:03:16.326]    DbgMCU_APB2_Fz=0x00000000
[10:03:16.326]    TraceClk_Pin=0x00040002
[10:03:16.326]    TraceD0_Pin=0x00040003
[10:03:16.326]    TraceD1_Pin=0x00040004
[10:03:16.326]    TraceD2_Pin=0x00040005
[10:03:16.326]    TraceD3_Pin=0x00040006
[10:03:16.327]  </debugvars>
[10:03:16.327]  
[10:03:16.327]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:03:16.327]    <block atomic="false" info="">
[10:03:16.327]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:03:16.328]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.328]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:03:16.328]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.329]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:03:16.329]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.329]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:03:16.330]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.330]    </block>
[10:03:16.330]  </sequence>
[10:03:16.330]  
[10:03:16.346]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:03:16.346]  
[10:03:16.347]  <debugvars>
[10:03:16.347]    // Pre-defined
[10:03:16.347]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:03:16.347]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:03:16.347]    __dp=0x00000000
[10:03:16.347]    __ap=0x00000000
[10:03:16.348]    __traceout=0x00000001      (SWO Trace)
[10:03:16.348]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:03:16.348]    __FlashAddr=0x00000000
[10:03:16.348]    __FlashLen=0x00000000
[10:03:16.348]    __FlashArg=0x00000000
[10:03:16.348]    __FlashOp=0x00000000
[10:03:16.349]    __Result=0x00000000
[10:03:16.349]    
[10:03:16.349]    // User-defined
[10:03:16.349]    DbgMCU_CR=0x00000007
[10:03:16.349]    DbgMCU_APB1_Fz=0x00000000
[10:03:16.349]    DbgMCU_APB2_Fz=0x00000000
[10:03:16.350]    TraceClk_Pin=0x00040002
[10:03:16.350]    TraceD0_Pin=0x00040003
[10:03:16.350]    TraceD1_Pin=0x00040004
[10:03:16.350]    TraceD2_Pin=0x00040005
[10:03:16.350]    TraceD3_Pin=0x00040006
[10:03:16.351]  </debugvars>
[10:03:16.351]  
[10:03:16.351]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:03:16.351]    <block atomic="false" info="">
[10:03:16.351]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:03:16.351]        // -> [traceSWO <= 0x00000001]
[10:03:16.352]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:03:16.352]        // -> [traceTPIU <= 0x00000000]
[10:03:16.352]    </block>
[10:03:16.352]    <control if="traceSWO" while="" timeout="0" info="">
[10:03:16.352]      // if-block "traceSWO"
[10:03:16.352]        // =>  TRUE
[10:03:16.353]      <block atomic="false" info="">
[10:03:16.353]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:03:16.353]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:03:16.353]            <block atomic="false" info="">
[10:03:16.353]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:03:16.354]                // -> [dbgmcu_val <= 0x00000000]
[10:03:16.354]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:03:16.354]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:03:16.354]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:03:16.354]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.355]                // -> [dbgmcu_val <= 0x00000007]
[10:03:16.355]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:03:16.355]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:03:16.355]              Sequence("ConfigureTraceSWOPin");
[10:03:16.355]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:03:16.355]                  <block atomic="false" info="">
[10:03:16.356]                    __var pin     = 0;
[10:03:16.356]                      // -> [pin <= 0x00000000]
[10:03:16.356]                    __var port    = 0;
[10:03:16.356]                      // -> [port <= 0x00000000]
[10:03:16.357]                    __var portAdr = 0;
[10:03:16.357]                      // -> [portAdr <= 0x00000000]
[10:03:16.357]                    __var pos     = 0;
[10:03:16.357]                      // -> [pos <= 0x00000000]
[10:03:16.357]                    __var SWO_Pin = 0x00010003;          // PB3
[10:03:16.357]                      // -> [SWO_Pin <= 0x00010003]
[10:03:16.357]                  </block>
[10:03:16.357]                  <block atomic="false" info="configure SWO">
[10:03:16.358]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:03:16.358]                      // -> [pin <= 0x00000003]
[10:03:16.358]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:03:16.358]                      // -> [port <= 0x00000001]
[10:03:16.358]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:03:16.358]                      // -> [portAdr <= 0x40020400]
[10:03:16.358]                    pos = pin * 2;
[10:03:16.359]                      // -> [pos <= 0x00000006]
[10:03:16.359]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:03:16.359]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.360]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.360]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:03:16.361]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.361]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.361]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:03:16.362]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.362]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.362]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:03:16.363]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.363]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.363]                  </block>
[10:03:16.364]                  <control if="pin <  8" while="" timeout="0" info="">
[10:03:16.364]                    // if-block "pin <  8"
[10:03:16.364]                      // =>  TRUE
[10:03:16.364]                    <block atomic="false" info="">
[10:03:16.364]                      pos = ((pin    ) & 7) * 4;
[10:03:16.365]                        // -> [pos <= 0x0000000C]
[10:03:16.365]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:03:16.366]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.366]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.366]                    </block>
[10:03:16.366]                    // end if-block "pin <  8"
[10:03:16.366]                  </control>
[10:03:16.366]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:03:16.367]                    // if-block "pin >= 8"
[10:03:16.367]                      // =>  FALSE
[10:03:16.367]                    // skip if-block "pin >= 8"
[10:03:16.367]                  </control>
[10:03:16.367]                </sequence>
[10:03:16.367]            </block>
[10:03:16.367]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:03:16.368]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:03:16.368]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.368]            </block>
[10:03:16.369]          </sequence>
[10:03:16.369]      </block>
[10:03:16.369]      // end if-block "traceSWO"
[10:03:16.369]    </control>
[10:03:16.369]    <control if="traceTPIU" while="" timeout="0" info="">
[10:03:16.369]      // if-block "traceTPIU"
[10:03:16.370]        // =>  FALSE
[10:03:16.370]      // skip if-block "traceTPIU"
[10:03:16.370]    </control>
[10:03:16.370]  </sequence>
[10:03:16.370]  
[10:03:16.374]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:03:16.374]  
[10:03:16.374]  <debugvars>
[10:03:16.374]    // Pre-defined
[10:03:16.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:03:16.375]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:03:16.375]    __dp=0x00000000
[10:03:16.375]    __ap=0x00000000
[10:03:16.375]    __traceout=0x00000001      (SWO Trace)
[10:03:16.375]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:03:16.375]    __FlashAddr=0x00000000
[10:03:16.375]    __FlashLen=0x00000000
[10:03:16.376]    __FlashArg=0x00000000
[10:03:16.376]    __FlashOp=0x00000000
[10:03:16.376]    __Result=0x00000000
[10:03:16.376]    
[10:03:16.376]    // User-defined
[10:03:16.376]    DbgMCU_CR=0x00000007
[10:03:16.376]    DbgMCU_APB1_Fz=0x00000000
[10:03:16.377]    DbgMCU_APB2_Fz=0x00000000
[10:03:16.377]    TraceClk_Pin=0x00040002
[10:03:16.377]    TraceD0_Pin=0x00040003
[10:03:16.377]    TraceD1_Pin=0x00040004
[10:03:16.377]    TraceD2_Pin=0x00040005
[10:03:16.378]    TraceD3_Pin=0x00040006
[10:03:16.378]  </debugvars>
[10:03:16.378]  
[10:03:16.378]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:03:16.378]    <block atomic="false" info="">
[10:03:16.379]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:03:16.379]        // -> [traceSWO <= 0x00000001]
[10:03:16.379]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:03:16.379]        // -> [traceTPIU <= 0x00000000]
[10:03:16.379]    </block>
[10:03:16.379]    <control if="traceSWO" while="" timeout="0" info="">
[10:03:16.380]      // if-block "traceSWO"
[10:03:16.380]        // =>  TRUE
[10:03:16.380]      <block atomic="false" info="">
[10:03:16.380]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:03:16.380]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:03:16.380]            <block atomic="false" info="">
[10:03:16.381]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:03:16.381]                // -> [dbgmcu_val <= 0x00000000]
[10:03:16.381]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:03:16.381]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:03:16.381]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:03:16.382]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.382]                // -> [dbgmcu_val <= 0x00000007]
[10:03:16.382]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:03:16.382]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:03:16.382]              Sequence("ConfigureTraceSWOPin");
[10:03:16.383]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:03:16.383]                  <block atomic="false" info="">
[10:03:16.383]                    __var pin     = 0;
[10:03:16.383]                      // -> [pin <= 0x00000000]
[10:03:16.383]                    __var port    = 0;
[10:03:16.383]                      // -> [port <= 0x00000000]
[10:03:16.384]                    __var portAdr = 0;
[10:03:16.384]                      // -> [portAdr <= 0x00000000]
[10:03:16.384]                    __var pos     = 0;
[10:03:16.384]                      // -> [pos <= 0x00000000]
[10:03:16.384]                    __var SWO_Pin = 0x00010003;          // PB3
[10:03:16.384]                      // -> [SWO_Pin <= 0x00010003]
[10:03:16.384]                  </block>
[10:03:16.385]                  <block atomic="false" info="configure SWO">
[10:03:16.385]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:03:16.385]                      // -> [pin <= 0x00000003]
[10:03:16.385]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:03:16.385]                      // -> [port <= 0x00000001]
[10:03:16.386]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:03:16.386]                      // -> [portAdr <= 0x40020400]
[10:03:16.386]                    pos = pin * 2;
[10:03:16.386]                      // -> [pos <= 0x00000006]
[10:03:16.386]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:03:16.387]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.387]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.387]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:03:16.388]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.388]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.388]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:03:16.389]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.390]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.390]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:03:16.390]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.391]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.391]                  </block>
[10:03:16.391]                  <control if="pin <  8" while="" timeout="0" info="">
[10:03:16.391]                    // if-block "pin <  8"
[10:03:16.392]                      // =>  TRUE
[10:03:16.392]                    <block atomic="false" info="">
[10:03:16.392]                      pos = ((pin    ) & 7) * 4;
[10:03:16.392]                        // -> [pos <= 0x0000000C]
[10:03:16.392]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:03:16.393]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.394]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.394]                    </block>
[10:03:16.394]                    // end if-block "pin <  8"
[10:03:16.394]                  </control>
[10:03:16.395]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:03:16.395]                    // if-block "pin >= 8"
[10:03:16.395]                      // =>  FALSE
[10:03:16.395]                    // skip if-block "pin >= 8"
[10:03:16.395]                  </control>
[10:03:16.395]                </sequence>
[10:03:16.395]            </block>
[10:03:16.395]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:03:16.396]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:03:16.396]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.396]            </block>
[10:03:16.396]          </sequence>
[10:03:16.397]      </block>
[10:03:16.397]      // end if-block "traceSWO"
[10:03:16.397]    </control>
[10:03:16.397]    <control if="traceTPIU" while="" timeout="0" info="">
[10:03:16.397]      // if-block "traceTPIU"
[10:03:16.398]        // =>  FALSE
[10:03:16.398]      // skip if-block "traceTPIU"
[10:03:16.398]    </control>
[10:03:16.398]  </sequence>
[10:03:16.398]  
[10:03:16.606]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:03:16.606]  
[10:03:16.606]  <debugvars>
[10:03:16.606]    // Pre-defined
[10:03:16.606]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:03:16.607]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:03:16.607]    __dp=0x00000000
[10:03:16.607]    __ap=0x00000000
[10:03:16.607]    __traceout=0x00000001      (SWO Trace)
[10:03:16.607]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:03:16.608]    __FlashAddr=0x00000000
[10:03:16.608]    __FlashLen=0x00000000
[10:03:16.608]    __FlashArg=0x00000000
[10:03:16.608]    __FlashOp=0x00000000
[10:03:16.608]    __Result=0x00000000
[10:03:16.608]    
[10:03:16.608]    // User-defined
[10:03:16.609]    DbgMCU_CR=0x00000007
[10:03:16.609]    DbgMCU_APB1_Fz=0x00000000
[10:03:16.609]    DbgMCU_APB2_Fz=0x00000000
[10:03:16.609]    TraceClk_Pin=0x00040002
[10:03:16.609]    TraceD0_Pin=0x00040003
[10:03:16.609]    TraceD1_Pin=0x00040004
[10:03:16.610]    TraceD2_Pin=0x00040005
[10:03:16.610]    TraceD3_Pin=0x00040006
[10:03:16.610]  </debugvars>
[10:03:16.610]  
[10:03:16.611]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:03:16.611]    <block atomic="false" info="">
[10:03:16.611]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:03:16.611]        // -> [traceSWO <= 0x00000001]
[10:03:16.611]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:03:16.611]        // -> [traceTPIU <= 0x00000000]
[10:03:16.612]    </block>
[10:03:16.612]    <control if="traceSWO" while="" timeout="0" info="">
[10:03:16.612]      // if-block "traceSWO"
[10:03:16.612]        // =>  TRUE
[10:03:16.612]      <block atomic="false" info="">
[10:03:16.612]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:03:16.613]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:03:16.613]            <block atomic="false" info="">
[10:03:16.613]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:03:16.613]                // -> [dbgmcu_val <= 0x00000000]
[10:03:16.613]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:03:16.614]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:03:16.614]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:03:16.614]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.614]                // -> [dbgmcu_val <= 0x00000007]
[10:03:16.614]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:03:16.615]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:03:16.615]              Sequence("ConfigureTraceSWOPin");
[10:03:16.615]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:03:16.615]                  <block atomic="false" info="">
[10:03:16.615]                    __var pin     = 0;
[10:03:16.615]                      // -> [pin <= 0x00000000]
[10:03:16.616]                    __var port    = 0;
[10:03:16.616]                      // -> [port <= 0x00000000]
[10:03:16.616]                    __var portAdr = 0;
[10:03:16.616]                      // -> [portAdr <= 0x00000000]
[10:03:16.616]                    __var pos     = 0;
[10:03:16.617]                      // -> [pos <= 0x00000000]
[10:03:16.617]                    __var SWO_Pin = 0x00010003;          // PB3
[10:03:16.617]                      // -> [SWO_Pin <= 0x00010003]
[10:03:16.617]                  </block>
[10:03:16.617]                  <block atomic="false" info="configure SWO">
[10:03:16.617]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:03:16.618]                      // -> [pin <= 0x00000003]
[10:03:16.618]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:03:16.618]                      // -> [port <= 0x00000001]
[10:03:16.618]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:03:16.618]                      // -> [portAdr <= 0x40020400]
[10:03:16.618]                    pos = pin * 2;
[10:03:16.618]                      // -> [pos <= 0x00000006]
[10:03:16.619]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:03:16.619]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.620]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.620]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:03:16.620]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.621]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.621]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:03:16.621]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.622]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.622]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:03:16.622]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.623]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.623]                  </block>
[10:03:16.623]                  <control if="pin <  8" while="" timeout="0" info="">
[10:03:16.623]                    // if-block "pin <  8"
[10:03:16.623]                      // =>  TRUE
[10:03:16.623]                    <block atomic="false" info="">
[10:03:16.624]                      pos = ((pin    ) & 7) * 4;
[10:03:16.624]                        // -> [pos <= 0x0000000C]
[10:03:16.624]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:03:16.625]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.625]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.625]                    </block>
[10:03:16.625]                    // end if-block "pin <  8"
[10:03:16.625]                  </control>
[10:03:16.626]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:03:16.626]                    // if-block "pin >= 8"
[10:03:16.626]                      // =>  FALSE
[10:03:16.626]                    // skip if-block "pin >= 8"
[10:03:16.626]                  </control>
[10:03:16.626]                </sequence>
[10:03:16.626]            </block>
[10:03:16.627]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:03:16.627]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:03:16.627]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:16.627]            </block>
[10:03:16.627]          </sequence>
[10:03:16.627]      </block>
[10:03:16.628]      // end if-block "traceSWO"
[10:03:16.628]    </control>
[10:03:16.628]    <control if="traceTPIU" while="" timeout="0" info="">
[10:03:16.628]      // if-block "traceTPIU"
[10:03:16.628]        // =>  FALSE
[10:03:16.628]      // skip if-block "traceTPIU"
[10:03:16.628]    </control>
[10:03:16.629]  </sequence>
[10:03:16.629]  
[10:03:52.824]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:03:52.824]  
[10:03:52.824]  <debugvars>
[10:03:52.825]    // Pre-defined
[10:03:52.825]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:03:52.825]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:03:52.826]    __dp=0x00000000
[10:03:52.826]    __ap=0x00000000
[10:03:52.826]    __traceout=0x00000001      (SWO Trace)
[10:03:52.826]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:03:52.826]    __FlashAddr=0x00000000
[10:03:52.827]    __FlashLen=0x00000000
[10:03:52.827]    __FlashArg=0x00000000
[10:03:52.827]    __FlashOp=0x00000000
[10:03:52.827]    __Result=0x00000000
[10:03:52.827]    
[10:03:52.827]    // User-defined
[10:03:52.828]    DbgMCU_CR=0x00000007
[10:03:52.828]    DbgMCU_APB1_Fz=0x00000000
[10:03:52.828]    DbgMCU_APB2_Fz=0x00000000
[10:03:52.828]    TraceClk_Pin=0x00040002
[10:03:52.828]    TraceD0_Pin=0x00040003
[10:03:52.829]    TraceD1_Pin=0x00040004
[10:03:52.829]    TraceD2_Pin=0x00040005
[10:03:52.829]    TraceD3_Pin=0x00040006
[10:03:52.829]  </debugvars>
[10:03:52.830]  
[10:03:52.830]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:03:52.830]    <block atomic="false" info="">
[10:03:52.830]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:03:52.831]        // -> [traceSWO <= 0x00000001]
[10:03:52.831]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:03:52.831]        // -> [traceTPIU <= 0x00000000]
[10:03:52.831]    </block>
[10:03:52.831]    <control if="traceSWO" while="" timeout="0" info="">
[10:03:52.832]      // if-block "traceSWO"
[10:03:52.832]        // =>  TRUE
[10:03:52.832]      <block atomic="false" info="">
[10:03:52.832]        Sequence("DisableTraceSWO");
[10:03:52.833]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:03:52.833]            <block atomic="false" info="">
[10:03:52.833]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:03:52.833]                // -> [dbgmcu_val <= 0x00000000]
[10:03:52.833]            </block>
[10:03:52.834]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:03:52.834]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:03:52.834]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:03:52.835]                // -> [dbgmcu_val <= 0x00000007]
[10:03:52.835]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:03:52.835]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:03:52.836]            </block>
[10:03:52.836]          </sequence>
[10:03:52.836]      </block>
[10:03:52.836]      // end if-block "traceSWO"
[10:03:52.836]    </control>
[10:03:52.836]    <control if="traceTPIU" while="" timeout="0" info="">
[10:03:52.837]      // if-block "traceTPIU"
[10:03:52.837]        // =>  FALSE
[10:03:52.837]      // skip if-block "traceTPIU"
[10:03:52.837]    </control>
[10:03:52.837]  </sequence>
[10:03:52.837]  
[10:21:06.820]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:21:06.820]  
[10:21:06.821]  <debugvars>
[10:21:06.821]    // Pre-defined
[10:21:06.821]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:06.821]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:21:06.821]    __dp=0x00000000
[10:21:06.822]    __ap=0x00000000
[10:21:06.822]    __traceout=0x00000001      (SWO Trace)
[10:21:06.822]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:06.822]    __FlashAddr=0x00000000
[10:21:06.822]    __FlashLen=0x00000000
[10:21:06.823]    __FlashArg=0x00000000
[10:21:06.823]    __FlashOp=0x00000000
[10:21:06.823]    __Result=0x00000000
[10:21:06.823]    
[10:21:06.823]    // User-defined
[10:21:06.823]    DbgMCU_CR=0x00000007
[10:21:06.823]    DbgMCU_APB1_Fz=0x00000000
[10:21:06.824]    DbgMCU_APB2_Fz=0x00000000
[10:21:06.824]    TraceClk_Pin=0x00040002
[10:21:06.824]    TraceD0_Pin=0x00040003
[10:21:06.824]    TraceD1_Pin=0x00040004
[10:21:06.824]    TraceD2_Pin=0x00040005
[10:21:06.824]    TraceD3_Pin=0x00040006
[10:21:06.825]  </debugvars>
[10:21:06.825]  
[10:21:06.825]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:21:06.825]    <block atomic="false" info="">
[10:21:06.825]      Sequence("CheckID");
[10:21:06.825]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:21:06.826]          <block atomic="false" info="">
[10:21:06.826]            __var pidr1 = 0;
[10:21:06.826]              // -> [pidr1 <= 0x00000000]
[10:21:06.826]            __var pidr2 = 0;
[10:21:06.826]              // -> [pidr2 <= 0x00000000]
[10:21:06.826]            __var jep106id = 0;
[10:21:06.826]              // -> [jep106id <= 0x00000000]
[10:21:06.827]            __var ROMTableBase = 0;
[10:21:06.827]              // -> [ROMTableBase <= 0x00000000]
[10:21:06.827]            __ap = 0;      // AHB-AP
[10:21:06.827]              // -> [__ap <= 0x00000000]
[10:21:06.827]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:21:06.828]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.828]              // -> [ROMTableBase <= 0xE00FD000]
[10:21:06.828]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:21:06.828]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.829]              // -> [pidr1 <= 0x00000004]
[10:21:06.829]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:21:06.829]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.829]              // -> [pidr2 <= 0x0000001A]
[10:21:06.829]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:21:06.829]              // -> [jep106id <= 0x00000020]
[10:21:06.829]          </block>
[10:21:06.829]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:21:06.830]            // if-block "jep106id != 0x20"
[10:21:06.830]              // =>  FALSE
[10:21:06.830]            // skip if-block "jep106id != 0x20"
[10:21:06.830]          </control>
[10:21:06.830]        </sequence>
[10:21:06.830]    </block>
[10:21:06.830]  </sequence>
[10:21:06.831]  
[10:21:06.845]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:21:06.845]  
[10:21:06.845]  <debugvars>
[10:21:06.846]    // Pre-defined
[10:21:06.846]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:06.846]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[10:21:06.846]    __dp=0x00000000
[10:21:06.846]    __ap=0x00000000
[10:21:06.847]    __traceout=0x00000001      (SWO Trace)
[10:21:06.847]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:06.847]    __FlashAddr=0x00000000
[10:21:06.847]    __FlashLen=0x00000000
[10:21:06.847]    __FlashArg=0x00000000
[10:21:06.848]    __FlashOp=0x00000000
[10:21:06.848]    __Result=0x00000000
[10:21:06.848]    
[10:21:06.848]    // User-defined
[10:21:06.848]    DbgMCU_CR=0x00000007
[10:21:06.848]    DbgMCU_APB1_Fz=0x00000000
[10:21:06.848]    DbgMCU_APB2_Fz=0x00000000
[10:21:06.849]    TraceClk_Pin=0x00040002
[10:21:06.849]    TraceD0_Pin=0x00040003
[10:21:06.849]    TraceD1_Pin=0x00040004
[10:21:06.849]    TraceD2_Pin=0x00040005
[10:21:06.850]    TraceD3_Pin=0x00040006
[10:21:06.850]  </debugvars>
[10:21:06.850]  
[10:21:06.850]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:21:06.850]    <block atomic="false" info="">
[10:21:06.850]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:21:06.851]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.851]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:21:06.852]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.852]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:21:06.853]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.853]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:21:06.853]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:06.854]    </block>
[10:21:06.854]  </sequence>
[10:21:06.854]  
[10:21:38.151]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[10:21:38.151]  
[10:21:38.166]  <debugvars>
[10:21:38.178]    // Pre-defined
[10:21:38.180]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:38.196]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:21:38.214]    __dp=0x00000000
[10:21:38.216]    __ap=0x00000000
[10:21:38.228]    __traceout=0x00000001      (SWO Trace)
[10:21:38.243]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:38.244]    __FlashAddr=0x00000000
[10:21:38.261]    __FlashLen=0x00000000
[10:21:38.273]    __FlashArg=0x00000000
[10:21:38.274]    __FlashOp=0x00000000
[10:21:38.309]    __Result=0x00000000
[10:21:38.337]    
[10:21:38.337]    // User-defined
[10:21:38.385]    DbgMCU_CR=0x00000007
[10:21:38.449]    DbgMCU_APB1_Fz=0x00000000
[10:21:38.510]    DbgMCU_APB2_Fz=0x00000000
[10:21:38.554]    TraceClk_Pin=0x00040002
[10:21:38.658]    TraceD0_Pin=0x00040003
[10:21:38.714]    TraceD1_Pin=0x00040004
[10:21:38.813]    TraceD2_Pin=0x00040005
[10:21:38.858]    TraceD3_Pin=0x00040006
[10:21:38.902]  </debugvars>
[10:21:38.987]  
[10:21:39.060]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[10:21:39.110]    <block atomic="false" info="">
[10:21:39.205]      Sequence("CheckID");
[10:21:39.269]        <sequence name="CheckID" Pname="" disable="false" info="">
[10:21:39.314]          <block atomic="false" info="">
[10:21:39.330]            __var pidr1 = 0;
[10:21:39.363]              // -> [pidr1 <= 0x00000000]
[10:21:39.365]            __var pidr2 = 0;
[10:21:39.379]              // -> [pidr2 <= 0x00000000]
[10:21:39.395]            __var jep106id = 0;
[10:21:39.396]              // -> [jep106id <= 0x00000000]
[10:21:39.411]            __var ROMTableBase = 0;
[10:21:39.428]              // -> [ROMTableBase <= 0x00000000]
[10:21:39.430]            __ap = 0;      // AHB-AP
[10:21:39.442]              // -> [__ap <= 0x00000000]
[10:21:39.456]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[10:21:39.473]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.487]              // -> [ROMTableBase <= 0xE00FD000]
[10:21:39.489]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[10:21:39.525]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.538]              // -> [pidr1 <= 0x00000004]
[10:21:39.553]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[10:21:39.555]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.568]              // -> [pidr2 <= 0x0000001A]
[10:21:39.582]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[10:21:39.583]              // -> [jep106id <= 0x00000020]
[10:21:39.598]          </block>
[10:21:39.615]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[10:21:39.617]            // if-block "jep106id != 0x20"
[10:21:39.630]              // =>  FALSE
[10:21:39.630]            // skip if-block "jep106id != 0x20"
[10:21:39.631]          </control>
[10:21:39.631]        </sequence>
[10:21:39.632]    </block>
[10:21:39.632]  </sequence>
[10:21:39.632]  
[10:21:39.647]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[10:21:39.647]  
[10:21:39.648]  <debugvars>
[10:21:39.648]    // Pre-defined
[10:21:39.648]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:39.649]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:21:39.649]    __dp=0x00000000
[10:21:39.649]    __ap=0x00000000
[10:21:39.649]    __traceout=0x00000001      (SWO Trace)
[10:21:39.649]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:39.649]    __FlashAddr=0x00000000
[10:21:39.649]    __FlashLen=0x00000000
[10:21:39.650]    __FlashArg=0x00000000
[10:21:39.650]    __FlashOp=0x00000000
[10:21:39.650]    __Result=0x00000000
[10:21:39.650]    
[10:21:39.650]    // User-defined
[10:21:39.650]    DbgMCU_CR=0x00000007
[10:21:39.650]    DbgMCU_APB1_Fz=0x00000000
[10:21:39.664]    DbgMCU_APB2_Fz=0x00000000
[10:21:39.665]    TraceClk_Pin=0x00040002
[10:21:39.665]    TraceD0_Pin=0x00040003
[10:21:39.665]    TraceD1_Pin=0x00040004
[10:21:39.666]    TraceD2_Pin=0x00040005
[10:21:39.666]    TraceD3_Pin=0x00040006
[10:21:39.666]  </debugvars>
[10:21:39.667]  
[10:21:39.667]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[10:21:39.667]    <block atomic="false" info="">
[10:21:39.667]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[10:21:39.668]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.668]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[10:21:39.669]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.669]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[10:21:39.670]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.670]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[10:21:39.678]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:39.678]    </block>
[10:21:39.678]  </sequence>
[10:21:39.679]  
[10:21:39.698]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[10:21:39.698]  
[10:21:39.827]  <debugvars>
[10:21:40.029]    // Pre-defined
[10:21:40.171]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:40.318]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:21:40.455]    __dp=0x00000000
[10:21:40.565]    __ap=0x00000000
[10:21:40.724]    __traceout=0x00000001      (SWO Trace)
[10:21:40.724]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:40.749]    __FlashAddr=0x00000000
[10:21:40.749]    __FlashLen=0x00000000
[10:21:40.749]    __FlashArg=0x00000000
[10:21:40.750]    __FlashOp=0x00000000
[10:21:40.750]    __Result=0x00000000
[10:21:40.750]    
[10:21:40.750]    // User-defined
[10:21:40.750]    DbgMCU_CR=0x00000007
[10:21:40.750]    DbgMCU_APB1_Fz=0x00000000
[10:21:40.753]    DbgMCU_APB2_Fz=0x00000000
[10:21:40.753]    TraceClk_Pin=0x00040002
[10:21:40.754]    TraceD0_Pin=0x00040003
[10:21:40.754]    TraceD1_Pin=0x00040004
[10:21:40.754]    TraceD2_Pin=0x00040005
[10:21:40.754]    TraceD3_Pin=0x00040006
[10:21:40.754]  </debugvars>
[10:21:40.754]  
[10:21:40.755]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:21:40.755]    <block atomic="false" info="">
[10:21:40.755]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:21:40.755]        // -> [traceSWO <= 0x00000001]
[10:21:40.763]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:21:40.764]        // -> [traceTPIU <= 0x00000000]
[10:21:40.764]    </block>
[10:21:40.764]    <control if="traceSWO" while="" timeout="0" info="">
[10:21:40.764]      // if-block "traceSWO"
[10:21:40.764]        // =>  TRUE
[10:21:40.764]      <block atomic="false" info="">
[10:21:40.765]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:21:40.765]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:21:40.765]            <block atomic="false" info="">
[10:21:40.765]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:21:40.766]                // -> [dbgmcu_val <= 0x00000000]
[10:21:40.766]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:21:40.766]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:21:40.766]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:21:40.767]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:21:40.767]                // -> [dbgmcu_val <= 0x00000007]
[10:21:40.768]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:21:40.768]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:21:40.768]              Sequence("ConfigureTraceSWOPin");
[10:21:40.768]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:21:40.768]                  <block atomic="false" info="">
[10:21:40.768]                    __var pin     = 0;
[10:21:40.776]                      // -> [pin <= 0x00000000]
[10:21:40.798]                    __var port    = 0;
[10:21:40.815]                      // -> [port <= 0x00000000]
[10:21:40.832]                    __var portAdr = 0;
[10:21:40.832]                      // -> [portAdr <= 0x00000000]
[10:21:40.832]                    __var pos     = 0;
[10:21:40.832]                      // -> [pos <= 0x00000000]
[10:21:40.848]                    __var SWO_Pin = 0x00010003;          // PB3
[10:21:40.848]                      // -> [SWO_Pin <= 0x00010003]
[10:21:40.848]                  </block>
[10:21:40.866]                  <block atomic="false" info="configure SWO">
[10:21:40.866]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:21:40.866]                      // -> [pin <= 0x00000003]
[10:21:40.866]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:21:40.883]                      // -> [port <= 0x00000001]
[10:21:40.883]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:21:40.901]                      // -> [portAdr <= 0x40020400]
[10:21:40.901]                    pos = pin * 2;
[10:21:40.901]                      // -> [pos <= 0x00000006]
[10:21:40.917]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:21:40.918]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:21:40.933]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:40.949]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:21:40.950]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.020]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.029]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:21:41.029]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.030]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.030]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:21:41.030]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.031]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.031]                  </block>
[10:21:41.031]                  <control if="pin <  8" while="" timeout="0" info="">
[10:21:41.033]                    // if-block "pin <  8"
[10:21:41.034]                      // =>  TRUE
[10:21:41.034]                    <block atomic="false" info="">
[10:21:41.034]                      pos = ((pin    ) & 7) * 4;
[10:21:41.034]                        // -> [pos <= 0x0000000C]
[10:21:41.034]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:21:41.035]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.035]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.035]                    </block>
[10:21:41.035]                    // end if-block "pin <  8"
[10:21:41.035]                  </control>
[10:21:41.035]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:21:41.036]                    // if-block "pin >= 8"
[10:21:41.036]                      // =>  FALSE
[10:21:41.036]                    // skip if-block "pin >= 8"
[10:21:41.036]                  </control>
[10:21:41.036]                </sequence>
[10:21:41.036]            </block>
[10:21:41.036]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:21:41.037]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:21:41.037]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.037]            </block>
[10:21:41.037]          </sequence>
[10:21:41.037]      </block>
[10:21:41.037]      // end if-block "traceSWO"
[10:21:41.038]    </control>
[10:21:41.038]    <control if="traceTPIU" while="" timeout="0" info="">
[10:21:41.038]      // if-block "traceTPIU"
[10:21:41.042]        // =>  FALSE
[10:21:41.042]      // skip if-block "traceTPIU"
[10:21:41.042]    </control>
[10:21:41.042]  </sequence>
[10:21:41.042]  
[10:21:41.046]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:21:41.046]  
[10:21:41.046]  <debugvars>
[10:21:41.046]    // Pre-defined
[10:21:41.047]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:41.047]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:21:41.047]    __dp=0x00000000
[10:21:41.047]    __ap=0x00000000
[10:21:41.047]    __traceout=0x00000001      (SWO Trace)
[10:21:41.047]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:41.047]    __FlashAddr=0x00000000
[10:21:41.048]    __FlashLen=0x00000000
[10:21:41.048]    __FlashArg=0x00000000
[10:21:41.048]    __FlashOp=0x00000000
[10:21:41.048]    __Result=0x00000000
[10:21:41.048]    
[10:21:41.048]    // User-defined
[10:21:41.048]    DbgMCU_CR=0x00000007
[10:21:41.049]    DbgMCU_APB1_Fz=0x00000000
[10:21:41.049]    DbgMCU_APB2_Fz=0x00000000
[10:21:41.049]    TraceClk_Pin=0x00040002
[10:21:41.049]    TraceD0_Pin=0x00040003
[10:21:41.049]    TraceD1_Pin=0x00040004
[10:21:41.049]    TraceD2_Pin=0x00040005
[10:21:41.049]    TraceD3_Pin=0x00040006
[10:21:41.049]  </debugvars>
[10:21:41.050]  
[10:21:41.050]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:21:41.050]    <block atomic="false" info="">
[10:21:41.055]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:21:41.055]        // -> [traceSWO <= 0x00000001]
[10:21:41.055]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:21:41.055]        // -> [traceTPIU <= 0x00000000]
[10:21:41.055]    </block>
[10:21:41.055]    <control if="traceSWO" while="" timeout="0" info="">
[10:21:41.055]      // if-block "traceSWO"
[10:21:41.056]        // =>  TRUE
[10:21:41.056]      <block atomic="false" info="">
[10:21:41.056]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:21:41.056]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:21:41.056]            <block atomic="false" info="">
[10:21:41.056]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:21:41.056]                // -> [dbgmcu_val <= 0x00000000]
[10:21:41.057]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:21:41.084]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:21:41.108]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:21:41.124]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.147]                // -> [dbgmcu_val <= 0x00000007]
[10:21:41.171]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:21:41.203]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:21:41.230]              Sequence("ConfigureTraceSWOPin");
[10:21:41.247]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:21:41.271]                  <block atomic="false" info="">
[10:21:41.322]                    __var pin     = 0;
[10:21:41.341]                      // -> [pin <= 0x00000000]
[10:21:41.392]                    __var port    = 0;
[10:21:41.418]                      // -> [port <= 0x00000000]
[10:21:41.466]                    __var portAdr = 0;
[10:21:41.490]                      // -> [portAdr <= 0x00000000]
[10:21:41.506]                    __var pos     = 0;
[10:21:41.513]                      // -> [pos <= 0x00000000]
[10:21:41.530]                    __var SWO_Pin = 0x00010003;          // PB3
[10:21:41.554]                      // -> [SWO_Pin <= 0x00010003]
[10:21:41.577]                  </block>
[10:21:41.606]                  <block atomic="false" info="configure SWO">
[10:21:41.629]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:21:41.652]                      // -> [pin <= 0x00000003]
[10:21:41.674]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:21:41.698]                      // -> [port <= 0x00000001]
[10:21:41.716]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:21:41.739]                      // -> [portAdr <= 0x40020400]
[10:21:41.762]                    pos = pin * 2;
[10:21:41.791]                      // -> [pos <= 0x00000006]
[10:21:41.807]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:21:41.832]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.833]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.833]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:21:41.834]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.834]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.835]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:21:41.835]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.836]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.836]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:21:41.837]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.838]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.838]                  </block>
[10:21:41.838]                  <control if="pin <  8" while="" timeout="0" info="">
[10:21:41.838]                    // if-block "pin <  8"
[10:21:41.838]                      // =>  TRUE
[10:21:41.839]                    <block atomic="false" info="">
[10:21:41.839]                      pos = ((pin    ) & 7) * 4;
[10:21:41.839]                        // -> [pos <= 0x0000000C]
[10:21:41.839]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:21:41.840]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.841]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.841]                    </block>
[10:21:41.842]                    // end if-block "pin <  8"
[10:21:41.842]                  </control>
[10:21:41.842]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:21:41.842]                    // if-block "pin >= 8"
[10:21:41.842]                      // =>  FALSE
[10:21:41.843]                    // skip if-block "pin >= 8"
[10:21:41.843]                  </control>
[10:21:41.843]                </sequence>
[10:21:41.844]            </block>
[10:21:41.844]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:21:41.844]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:21:41.845]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:41.845]            </block>
[10:21:41.845]          </sequence>
[10:21:41.846]      </block>
[10:21:41.846]      // end if-block "traceSWO"
[10:21:41.846]    </control>
[10:21:41.848]    <control if="traceTPIU" while="" timeout="0" info="">
[10:21:41.848]      // if-block "traceTPIU"
[10:21:41.848]        // =>  FALSE
[10:21:41.849]      // skip if-block "traceTPIU"
[10:21:41.849]    </control>
[10:21:41.849]  </sequence>
[10:21:41.849]  
[10:21:42.059]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[10:21:42.059]  
[10:21:42.060]  <debugvars>
[10:21:42.060]    // Pre-defined
[10:21:42.060]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:21:42.060]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:21:42.061]    __dp=0x00000000
[10:21:42.061]    __ap=0x00000000
[10:21:42.061]    __traceout=0x00000001      (SWO Trace)
[10:21:42.061]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:21:42.062]    __FlashAddr=0x00000000
[10:21:42.062]    __FlashLen=0x00000000
[10:21:42.062]    __FlashArg=0x00000000
[10:21:42.062]    __FlashOp=0x00000000
[10:21:42.062]    __Result=0x00000000
[10:21:42.063]    
[10:21:42.063]    // User-defined
[10:21:42.063]    DbgMCU_CR=0x00000007
[10:21:42.063]    DbgMCU_APB1_Fz=0x00000000
[10:21:42.063]    DbgMCU_APB2_Fz=0x00000000
[10:21:42.064]    TraceClk_Pin=0x00040002
[10:21:42.064]    TraceD0_Pin=0x00040003
[10:21:42.064]    TraceD1_Pin=0x00040004
[10:21:42.064]    TraceD2_Pin=0x00040005
[10:21:42.064]    TraceD3_Pin=0x00040006
[10:21:42.064]  </debugvars>
[10:21:42.065]  
[10:21:42.065]  <sequence name="TraceStart" Pname="" disable="false" info="">
[10:21:42.065]    <block atomic="false" info="">
[10:21:42.065]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[10:21:42.065]        // -> [traceSWO <= 0x00000001]
[10:21:42.065]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[10:21:42.065]        // -> [traceTPIU <= 0x00000000]
[10:21:42.070]    </block>
[10:21:42.070]    <control if="traceSWO" while="" timeout="0" info="">
[10:21:42.071]      // if-block "traceSWO"
[10:21:42.071]        // =>  TRUE
[10:21:42.071]      <block atomic="false" info="">
[10:21:42.071]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[10:21:42.072]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[10:21:42.072]            <block atomic="false" info="">
[10:21:42.072]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:21:42.073]                // -> [dbgmcu_val <= 0x00000000]
[10:21:42.073]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[10:21:42.073]                // -> [dbgmcu_trace_val <= 0x00000000]
[10:21:42.073]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[10:21:42.074]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.074]                // -> [dbgmcu_val <= 0x00000007]
[10:21:42.074]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[10:21:42.078]                // -> [dbgmcu_trace_val <= 0x00000020]
[10:21:42.078]              Sequence("ConfigureTraceSWOPin");
[10:21:42.078]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[10:21:42.078]                  <block atomic="false" info="">
[10:21:42.078]                    __var pin     = 0;
[10:21:42.078]                      // -> [pin <= 0x00000000]
[10:21:42.079]                    __var port    = 0;
[10:21:42.079]                      // -> [port <= 0x00000000]
[10:21:42.079]                    __var portAdr = 0;
[10:21:42.079]                      // -> [portAdr <= 0x00000000]
[10:21:42.079]                    __var pos     = 0;
[10:21:42.079]                      // -> [pos <= 0x00000000]
[10:21:42.080]                    __var SWO_Pin = 0x00010003;          // PB3
[10:21:42.080]                      // -> [SWO_Pin <= 0x00010003]
[10:21:42.080]                  </block>
[10:21:42.080]                  <block atomic="false" info="configure SWO">
[10:21:42.085]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[10:21:42.085]                      // -> [pin <= 0x00000003]
[10:21:42.085]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[10:21:42.085]                      // -> [port <= 0x00000001]
[10:21:42.086]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[10:21:42.086]                      // -> [portAdr <= 0x40020400]
[10:21:42.086]                    pos = pin * 2;
[10:21:42.086]                      // -> [pos <= 0x00000006]
[10:21:42.086]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[10:21:42.087]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.088]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.088]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[10:21:42.089]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.089]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.089]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[10:21:42.091]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.092]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.092]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[10:21:42.092]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.093]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.093]                  </block>
[10:21:42.093]                  <control if="pin <  8" while="" timeout="0" info="">
[10:21:42.093]                    // if-block "pin <  8"
[10:21:42.093]                      // =>  TRUE
[10:21:42.093]                    <block atomic="false" info="">
[10:21:42.093]                      pos = ((pin    ) & 7) * 4;
[10:21:42.094]                        // -> [pos <= 0x0000000C]
[10:21:42.094]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[10:21:42.094]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.095]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.095]                    </block>
[10:21:42.099]                    // end if-block "pin <  8"
[10:21:42.099]                  </control>
[10:21:42.099]                  <control if="pin >= 8" while="" timeout="0" info="">
[10:21:42.099]                    // if-block "pin >= 8"
[10:21:42.100]                      // =>  FALSE
[10:21:42.100]                    // skip if-block "pin >= 8"
[10:21:42.100]                  </control>
[10:21:42.100]                </sequence>
[10:21:42.101]            </block>
[10:21:42.101]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[10:21:42.101]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[10:21:42.101]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[10:21:42.102]            </block>
[10:21:42.102]          </sequence>
[10:21:42.102]      </block>
[10:21:42.105]      // end if-block "traceSWO"
[10:21:42.105]    </control>
[10:21:42.105]    <control if="traceTPIU" while="" timeout="0" info="">
[10:21:42.105]      // if-block "traceTPIU"
[10:21:42.105]        // =>  FALSE
[10:21:42.105]      // skip if-block "traceTPIU"
[10:21:42.105]    </control>
[10:21:42.106]  </sequence>
[10:21:42.106]  
[10:22:11.123]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[10:22:11.123]  
[10:22:11.124]  <debugvars>
[10:22:11.124]    // Pre-defined
[10:22:11.124]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[10:22:11.124]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[10:22:11.125]    __dp=0x00000000
[10:22:11.125]    __ap=0x00000000
[10:22:11.125]    __traceout=0x00000001      (SWO Trace)
[10:22:11.125]    __errorcontrol=0x00000000  (Skip Errors="False")
[10:22:11.126]    __FlashAddr=0x00000000
[10:22:11.126]    __FlashLen=0x00000000
[10:22:11.126]    __FlashArg=0x00000000
[10:22:11.126]    __FlashOp=0x00000000
[10:22:11.126]    __Result=0x00000000
[10:22:11.127]    
[10:22:11.127]    // User-defined
[10:22:11.127]    DbgMCU_CR=0x00000007
[10:22:11.127]    DbgMCU_APB1_Fz=0x00000000
[10:22:11.127]    DbgMCU_APB2_Fz=0x00000000
[10:22:11.128]    TraceClk_Pin=0x00040002
[10:22:11.128]    TraceD0_Pin=0x00040003
[10:22:11.128]    TraceD1_Pin=0x00040004
[10:22:11.128]    TraceD2_Pin=0x00040005
[10:22:11.128]    TraceD3_Pin=0x00040006
[10:22:11.128]  </debugvars>
[10:22:11.129]  
[10:22:11.129]  <sequence name="TraceStop" Pname="" disable="false" info="">
[10:22:11.129]    <block atomic="false" info="">
[10:22:11.129]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[10:22:11.129]        // -> [traceSWO <= 0x00000001]
[10:22:11.130]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[10:22:11.130]        // -> [traceTPIU <= 0x00000000]
[10:22:11.130]    </block>
[10:22:11.130]    <control if="traceSWO" while="" timeout="0" info="">
[10:22:11.131]      // if-block "traceSWO"
[10:22:11.131]        // =>  TRUE
[10:22:11.131]      <block atomic="false" info="">
[10:22:11.131]        Sequence("DisableTraceSWO");
[10:22:11.131]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[10:22:11.132]            <block atomic="false" info="">
[10:22:11.132]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[10:22:11.132]                // -> [dbgmcu_val <= 0x00000000]
[10:22:11.132]            </block>
[10:22:11.132]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[10:22:11.132]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[10:22:11.133]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[10:22:11.133]                // -> [dbgmcu_val <= 0x00000007]
[10:22:11.133]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[10:22:11.133]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[10:22:11.133]            </block>
[10:22:11.133]          </sequence>
[10:22:11.133]      </block>
[10:22:11.133]      // end if-block "traceSWO"
[10:22:11.133]    </control>
[10:22:11.133]    <control if="traceTPIU" while="" timeout="0" info="">
[10:22:11.134]      // if-block "traceTPIU"
[10:22:11.134]        // =>  FALSE
[10:22:11.134]      // skip if-block "traceTPIU"
[10:22:11.134]    </control>
[10:22:11.134]  </sequence>
[10:22:11.134]  
[12:52:53.914]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[12:52:53.914]  
[12:52:53.914]  <debugvars>
[12:52:53.914]    // Pre-defined
[12:52:53.914]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:52:53.914]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[12:52:53.915]    __dp=0x00000000
[12:52:53.915]    __ap=0x00000000
[12:52:53.915]    __traceout=0x00000001      (SWO Trace)
[12:52:53.915]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:52:53.915]    __FlashAddr=0x00000000
[12:52:53.915]    __FlashLen=0x00000000
[12:52:53.916]    __FlashArg=0x00000000
[12:52:53.916]    __FlashOp=0x00000000
[12:52:53.916]    __Result=0x00000000
[12:52:53.916]    
[12:52:53.916]    // User-defined
[12:52:53.916]    DbgMCU_CR=0x00000007
[12:52:53.917]    DbgMCU_APB1_Fz=0x00000000
[12:52:53.917]    DbgMCU_APB2_Fz=0x00000000
[12:52:53.917]    TraceClk_Pin=0x00040002
[12:52:53.917]    TraceD0_Pin=0x00040003
[12:52:53.917]    TraceD1_Pin=0x00040004
[12:52:53.917]    TraceD2_Pin=0x00040005
[12:52:53.917]    TraceD3_Pin=0x00040006
[12:52:53.917]  </debugvars>
[12:52:53.918]  
[12:52:53.918]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[12:52:53.918]    <block atomic="false" info="">
[12:52:53.918]      Sequence("CheckID");
[12:52:53.918]        <sequence name="CheckID" Pname="" disable="false" info="">
[12:52:53.918]          <block atomic="false" info="">
[12:52:53.918]            __var pidr1 = 0;
[12:52:53.919]              // -> [pidr1 <= 0x00000000]
[12:52:53.919]            __var pidr2 = 0;
[12:52:53.919]              // -> [pidr2 <= 0x00000000]
[12:52:53.919]            __var jep106id = 0;
[12:52:53.919]              // -> [jep106id <= 0x00000000]
[12:52:53.919]            __var ROMTableBase = 0;
[12:52:53.919]              // -> [ROMTableBase <= 0x00000000]
[12:52:53.919]            __ap = 0;      // AHB-AP
[12:52:53.920]              // -> [__ap <= 0x00000000]
[12:52:53.920]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[12:52:53.920]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.920]              // -> [ROMTableBase <= 0xE00FD000]
[12:52:53.920]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[12:52:53.921]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.921]              // -> [pidr1 <= 0x00000004]
[12:52:53.921]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[12:52:53.922]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.922]              // -> [pidr2 <= 0x0000001A]
[12:52:53.922]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[12:52:53.922]              // -> [jep106id <= 0x00000020]
[12:52:53.922]          </block>
[12:52:53.922]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[12:52:53.922]            // if-block "jep106id != 0x20"
[12:52:53.923]              // =>  FALSE
[12:52:53.923]            // skip if-block "jep106id != 0x20"
[12:52:53.923]          </control>
[12:52:53.923]        </sequence>
[12:52:53.923]    </block>
[12:52:53.923]  </sequence>
[12:52:53.923]  
[12:52:53.939]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[12:52:53.939]  
[12:52:53.939]  <debugvars>
[12:52:53.939]    // Pre-defined
[12:52:53.939]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[12:52:53.939]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[12:52:53.939]    __dp=0x00000000
[12:52:53.939]    __ap=0x00000000
[12:52:53.939]    __traceout=0x00000001      (SWO Trace)
[12:52:53.940]    __errorcontrol=0x00000000  (Skip Errors="False")
[12:52:53.940]    __FlashAddr=0x00000000
[12:52:53.940]    __FlashLen=0x00000000
[12:52:53.940]    __FlashArg=0x00000000
[12:52:53.940]    __FlashOp=0x00000000
[12:52:53.940]    __Result=0x00000000
[12:52:53.940]    
[12:52:53.940]    // User-defined
[12:52:53.941]    DbgMCU_CR=0x00000007
[12:52:53.941]    DbgMCU_APB1_Fz=0x00000000
[12:52:53.941]    DbgMCU_APB2_Fz=0x00000000
[12:52:53.941]    TraceClk_Pin=0x00040002
[12:52:53.941]    TraceD0_Pin=0x00040003
[12:52:53.941]    TraceD1_Pin=0x00040004
[12:52:53.941]    TraceD2_Pin=0x00040005
[12:52:53.941]    TraceD3_Pin=0x00040006
[12:52:53.941]  </debugvars>
[12:52:53.942]  
[12:52:53.942]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[12:52:53.942]    <block atomic="false" info="">
[12:52:53.942]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[12:52:53.943]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.943]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[12:52:53.943]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.943]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[12:52:53.944]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.944]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[12:52:53.945]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[12:52:53.945]    </block>
[12:52:53.945]  </sequence>
[12:52:53.945]  
[13:00:42.064]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:00:42.064]  
[13:00:42.064]  <debugvars>
[13:00:42.064]    // Pre-defined
[13:00:42.064]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:00:42.064]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:00:42.065]    __dp=0x00000000
[13:00:42.065]    __ap=0x00000000
[13:00:42.065]    __traceout=0x00000001      (SWO Trace)
[13:00:42.065]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:00:42.065]    __FlashAddr=0x00000000
[13:00:42.066]    __FlashLen=0x00000000
[13:00:42.066]    __FlashArg=0x00000000
[13:00:42.066]    __FlashOp=0x00000000
[13:00:42.066]    __Result=0x00000000
[13:00:42.067]    
[13:00:42.067]    // User-defined
[13:00:42.067]    DbgMCU_CR=0x00000007
[13:00:42.067]    DbgMCU_APB1_Fz=0x00000000
[13:00:42.067]    DbgMCU_APB2_Fz=0x00000000
[13:00:42.067]    TraceClk_Pin=0x00040002
[13:00:42.067]    TraceD0_Pin=0x00040003
[13:00:42.068]    TraceD1_Pin=0x00040004
[13:00:42.068]    TraceD2_Pin=0x00040005
[13:00:42.068]    TraceD3_Pin=0x00040006
[13:00:42.068]  </debugvars>
[13:00:42.068]  
[13:00:42.069]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:00:42.069]    <block atomic="false" info="">
[13:00:42.069]      Sequence("CheckID");
[13:00:42.069]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:00:42.069]          <block atomic="false" info="">
[13:00:42.070]            __var pidr1 = 0;
[13:00:42.070]              // -> [pidr1 <= 0x00000000]
[13:00:42.070]            __var pidr2 = 0;
[13:00:42.070]              // -> [pidr2 <= 0x00000000]
[13:00:42.070]            __var jep106id = 0;
[13:00:42.071]              // -> [jep106id <= 0x00000000]
[13:00:42.071]            __var ROMTableBase = 0;
[13:00:42.071]              // -> [ROMTableBase <= 0x00000000]
[13:00:42.071]            __ap = 0;      // AHB-AP
[13:00:42.071]              // -> [__ap <= 0x00000000]
[13:00:42.071]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:00:42.072]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.072]              // -> [ROMTableBase <= 0xE00FD000]
[13:00:42.072]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:00:42.073]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.073]              // -> [pidr1 <= 0x00000004]
[13:00:42.073]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:00:42.074]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.074]              // -> [pidr2 <= 0x0000001A]
[13:00:42.074]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:00:42.074]              // -> [jep106id <= 0x00000020]
[13:00:42.074]          </block>
[13:00:42.074]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:00:42.075]            // if-block "jep106id != 0x20"
[13:00:42.075]              // =>  FALSE
[13:00:42.075]            // skip if-block "jep106id != 0x20"
[13:00:42.075]          </control>
[13:00:42.075]        </sequence>
[13:00:42.076]    </block>
[13:00:42.076]  </sequence>
[13:00:42.076]  
[13:00:42.091]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:00:42.091]  
[13:00:42.092]  <debugvars>
[13:00:42.092]    // Pre-defined
[13:00:42.092]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:00:42.092]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:00:42.092]    __dp=0x00000000
[13:00:42.093]    __ap=0x00000000
[13:00:42.093]    __traceout=0x00000001      (SWO Trace)
[13:00:42.093]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:00:42.093]    __FlashAddr=0x00000000
[13:00:42.093]    __FlashLen=0x00000000
[13:00:42.093]    __FlashArg=0x00000000
[13:00:42.094]    __FlashOp=0x00000000
[13:00:42.094]    __Result=0x00000000
[13:00:42.094]    
[13:00:42.094]    // User-defined
[13:00:42.094]    DbgMCU_CR=0x00000007
[13:00:42.094]    DbgMCU_APB1_Fz=0x00000000
[13:00:42.095]    DbgMCU_APB2_Fz=0x00000000
[13:00:42.096]    TraceClk_Pin=0x00040002
[13:00:42.096]    TraceD0_Pin=0x00040003
[13:00:42.096]    TraceD1_Pin=0x00040004
[13:00:42.096]    TraceD2_Pin=0x00040005
[13:00:42.096]    TraceD3_Pin=0x00040006
[13:00:42.096]  </debugvars>
[13:00:42.096]  
[13:00:42.096]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:00:42.097]    <block atomic="false" info="">
[13:00:42.097]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:00:42.097]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.097]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:00:42.098]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.098]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:00:42.099]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.099]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:00:42.099]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:00:42.099]    </block>
[13:00:42.099]  </sequence>
[13:00:42.100]  
[13:04:53.818]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:04:53.818]  
[13:04:53.819]  <debugvars>
[13:04:53.819]    // Pre-defined
[13:04:53.819]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:04:53.819]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:04:53.819]    __dp=0x00000000
[13:04:53.819]    __ap=0x00000000
[13:04:53.820]    __traceout=0x00000001      (SWO Trace)
[13:04:53.820]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:04:53.820]    __FlashAddr=0x00000000
[13:04:53.820]    __FlashLen=0x00000000
[13:04:53.820]    __FlashArg=0x00000000
[13:04:53.820]    __FlashOp=0x00000000
[13:04:53.820]    __Result=0x00000000
[13:04:53.820]    
[13:04:53.820]    // User-defined
[13:04:53.820]    DbgMCU_CR=0x00000007
[13:04:53.821]    DbgMCU_APB1_Fz=0x00000000
[13:04:53.821]    DbgMCU_APB2_Fz=0x00000000
[13:04:53.821]    TraceClk_Pin=0x00040002
[13:04:53.821]    TraceD0_Pin=0x00040003
[13:04:53.821]    TraceD1_Pin=0x00040004
[13:04:53.821]    TraceD2_Pin=0x00040005
[13:04:53.821]    TraceD3_Pin=0x00040006
[13:04:53.821]  </debugvars>
[13:04:53.822]  
[13:04:53.822]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:04:53.822]    <block atomic="false" info="">
[13:04:53.822]      Sequence("CheckID");
[13:04:53.822]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:04:53.822]          <block atomic="false" info="">
[13:04:53.822]            __var pidr1 = 0;
[13:04:53.822]              // -> [pidr1 <= 0x00000000]
[13:04:53.823]            __var pidr2 = 0;
[13:04:53.823]              // -> [pidr2 <= 0x00000000]
[13:04:53.823]            __var jep106id = 0;
[13:04:53.823]              // -> [jep106id <= 0x00000000]
[13:04:53.823]            __var ROMTableBase = 0;
[13:04:53.823]              // -> [ROMTableBase <= 0x00000000]
[13:04:53.823]            __ap = 0;      // AHB-AP
[13:04:53.824]              // -> [__ap <= 0x00000000]
[13:04:53.824]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:04:53.824]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.824]              // -> [ROMTableBase <= 0xE00FD000]
[13:04:53.824]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:04:53.825]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.825]              // -> [pidr1 <= 0x00000004]
[13:04:53.825]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:04:53.825]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.826]              // -> [pidr2 <= 0x0000001A]
[13:04:53.826]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:04:53.826]              // -> [jep106id <= 0x00000020]
[13:04:53.826]          </block>
[13:04:53.826]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:04:53.826]            // if-block "jep106id != 0x20"
[13:04:53.826]              // =>  FALSE
[13:04:53.826]            // skip if-block "jep106id != 0x20"
[13:04:53.827]          </control>
[13:04:53.827]        </sequence>
[13:04:53.827]    </block>
[13:04:53.827]  </sequence>
[13:04:53.827]  
[13:04:53.842]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:04:53.842]  
[13:04:53.842]  <debugvars>
[13:04:53.842]    // Pre-defined
[13:04:53.842]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:04:53.842]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:04:53.843]    __dp=0x00000000
[13:04:53.843]    __ap=0x00000000
[13:04:53.843]    __traceout=0x00000001      (SWO Trace)
[13:04:53.843]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:04:53.843]    __FlashAddr=0x00000000
[13:04:53.843]    __FlashLen=0x00000000
[13:04:53.843]    __FlashArg=0x00000000
[13:04:53.844]    __FlashOp=0x00000000
[13:04:53.844]    __Result=0x00000000
[13:04:53.844]    
[13:04:53.844]    // User-defined
[13:04:53.844]    DbgMCU_CR=0x00000007
[13:04:53.844]    DbgMCU_APB1_Fz=0x00000000
[13:04:53.844]    DbgMCU_APB2_Fz=0x00000000
[13:04:53.844]    TraceClk_Pin=0x00040002
[13:04:53.844]    TraceD0_Pin=0x00040003
[13:04:53.845]    TraceD1_Pin=0x00040004
[13:04:53.845]    TraceD2_Pin=0x00040005
[13:04:53.845]    TraceD3_Pin=0x00040006
[13:04:53.845]  </debugvars>
[13:04:53.845]  
[13:04:53.845]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:04:53.845]    <block atomic="false" info="">
[13:04:53.845]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:04:53.846]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.846]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:04:53.847]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.847]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:04:53.847]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.847]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:04:53.848]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:04:53.848]    </block>
[13:04:53.848]  </sequence>
[13:04:53.848]  
[13:07:25.733]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:07:25.733]  
[13:07:25.733]  <debugvars>
[13:07:25.734]    // Pre-defined
[13:07:25.734]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:07:25.734]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:07:25.734]    __dp=0x00000000
[13:07:25.734]    __ap=0x00000000
[13:07:25.735]    __traceout=0x00000001      (SWO Trace)
[13:07:25.735]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:07:25.735]    __FlashAddr=0x00000000
[13:07:25.735]    __FlashLen=0x00000000
[13:07:25.735]    __FlashArg=0x00000000
[13:07:25.736]    __FlashOp=0x00000000
[13:07:25.736]    __Result=0x00000000
[13:07:25.736]    
[13:07:25.736]    // User-defined
[13:07:25.736]    DbgMCU_CR=0x00000007
[13:07:25.736]    DbgMCU_APB1_Fz=0x00000000
[13:07:25.737]    DbgMCU_APB2_Fz=0x00000000
[13:07:25.737]    TraceClk_Pin=0x00040002
[13:07:25.737]    TraceD0_Pin=0x00040003
[13:07:25.737]    TraceD1_Pin=0x00040004
[13:07:25.737]    TraceD2_Pin=0x00040005
[13:07:25.737]    TraceD3_Pin=0x00040006
[13:07:25.738]  </debugvars>
[13:07:25.738]  
[13:07:25.738]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:07:25.738]    <block atomic="false" info="">
[13:07:25.738]      Sequence("CheckID");
[13:07:25.738]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:07:25.739]          <block atomic="false" info="">
[13:07:25.739]            __var pidr1 = 0;
[13:07:25.739]              // -> [pidr1 <= 0x00000000]
[13:07:25.739]            __var pidr2 = 0;
[13:07:25.739]              // -> [pidr2 <= 0x00000000]
[13:07:25.739]            __var jep106id = 0;
[13:07:25.739]              // -> [jep106id <= 0x00000000]
[13:07:25.740]            __var ROMTableBase = 0;
[13:07:25.740]              // -> [ROMTableBase <= 0x00000000]
[13:07:25.740]            __ap = 0;      // AHB-AP
[13:07:25.740]              // -> [__ap <= 0x00000000]
[13:07:25.740]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:07:25.741]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.741]              // -> [ROMTableBase <= 0xE00FD000]
[13:07:25.741]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:07:25.742]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.742]              // -> [pidr1 <= 0x00000004]
[13:07:25.742]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:07:25.743]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.743]              // -> [pidr2 <= 0x0000001A]
[13:07:25.743]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:07:25.743]              // -> [jep106id <= 0x00000020]
[13:07:25.743]          </block>
[13:07:25.743]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:07:25.743]            // if-block "jep106id != 0x20"
[13:07:25.743]              // =>  FALSE
[13:07:25.744]            // skip if-block "jep106id != 0x20"
[13:07:25.744]          </control>
[13:07:25.744]        </sequence>
[13:07:25.744]    </block>
[13:07:25.744]  </sequence>
[13:07:25.744]  
[13:07:25.760]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:07:25.760]  
[13:07:25.760]  <debugvars>
[13:07:25.760]    // Pre-defined
[13:07:25.760]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:07:25.760]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:07:25.761]    __dp=0x00000000
[13:07:25.761]    __ap=0x00000000
[13:07:25.761]    __traceout=0x00000001      (SWO Trace)
[13:07:25.761]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:07:25.761]    __FlashAddr=0x00000000
[13:07:25.761]    __FlashLen=0x00000000
[13:07:25.762]    __FlashArg=0x00000000
[13:07:25.762]    __FlashOp=0x00000000
[13:07:25.762]    __Result=0x00000000
[13:07:25.762]    
[13:07:25.762]    // User-defined
[13:07:25.762]    DbgMCU_CR=0x00000007
[13:07:25.762]    DbgMCU_APB1_Fz=0x00000000
[13:07:25.763]    DbgMCU_APB2_Fz=0x00000000
[13:07:25.763]    TraceClk_Pin=0x00040002
[13:07:25.763]    TraceD0_Pin=0x00040003
[13:07:25.763]    TraceD1_Pin=0x00040004
[13:07:25.763]    TraceD2_Pin=0x00040005
[13:07:25.763]    TraceD3_Pin=0x00040006
[13:07:25.764]  </debugvars>
[13:07:25.764]  
[13:07:25.764]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:07:25.764]    <block atomic="false" info="">
[13:07:25.764]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:07:25.765]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.765]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:07:25.765]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.765]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:07:25.766]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.766]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:07:25.767]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:07:25.767]    </block>
[13:07:25.767]  </sequence>
[13:07:25.767]  
[13:11:09.076]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:11:09.076]  
[13:11:09.076]  <debugvars>
[13:11:09.077]    // Pre-defined
[13:11:09.077]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:09.077]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:11:09.077]    __dp=0x00000000
[13:11:09.077]    __ap=0x00000000
[13:11:09.077]    __traceout=0x00000001      (SWO Trace)
[13:11:09.077]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:09.078]    __FlashAddr=0x00000000
[13:11:09.078]    __FlashLen=0x00000000
[13:11:09.078]    __FlashArg=0x00000000
[13:11:09.078]    __FlashOp=0x00000000
[13:11:09.078]    __Result=0x00000000
[13:11:09.078]    
[13:11:09.078]    // User-defined
[13:11:09.078]    DbgMCU_CR=0x00000007
[13:11:09.079]    DbgMCU_APB1_Fz=0x00000000
[13:11:09.079]    DbgMCU_APB2_Fz=0x00000000
[13:11:09.079]    TraceClk_Pin=0x00040002
[13:11:09.079]    TraceD0_Pin=0x00040003
[13:11:09.079]    TraceD1_Pin=0x00040004
[13:11:09.079]    TraceD2_Pin=0x00040005
[13:11:09.079]    TraceD3_Pin=0x00040006
[13:11:09.080]  </debugvars>
[13:11:09.080]  
[13:11:09.080]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:11:09.080]    <block atomic="false" info="">
[13:11:09.080]      Sequence("CheckID");
[13:11:09.080]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:11:09.080]          <block atomic="false" info="">
[13:11:09.080]            __var pidr1 = 0;
[13:11:09.081]              // -> [pidr1 <= 0x00000000]
[13:11:09.081]            __var pidr2 = 0;
[13:11:09.081]              // -> [pidr2 <= 0x00000000]
[13:11:09.081]            __var jep106id = 0;
[13:11:09.081]              // -> [jep106id <= 0x00000000]
[13:11:09.081]            __var ROMTableBase = 0;
[13:11:09.081]              // -> [ROMTableBase <= 0x00000000]
[13:11:09.081]            __ap = 0;      // AHB-AP
[13:11:09.082]              // -> [__ap <= 0x00000000]
[13:11:09.082]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:11:09.082]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.082]              // -> [ROMTableBase <= 0xE00FD000]
[13:11:09.082]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:11:09.083]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.083]              // -> [pidr1 <= 0x00000004]
[13:11:09.083]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:11:09.084]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.084]              // -> [pidr2 <= 0x0000001A]
[13:11:09.084]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:11:09.084]              // -> [jep106id <= 0x00000020]
[13:11:09.084]          </block>
[13:11:09.084]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:11:09.085]            // if-block "jep106id != 0x20"
[13:11:09.085]              // =>  FALSE
[13:11:09.085]            // skip if-block "jep106id != 0x20"
[13:11:09.085]          </control>
[13:11:09.085]        </sequence>
[13:11:09.085]    </block>
[13:11:09.085]  </sequence>
[13:11:09.086]  
[13:11:09.101]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:11:09.101]  
[13:11:09.101]  <debugvars>
[13:11:09.101]    // Pre-defined
[13:11:09.101]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:09.101]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:11:09.102]    __dp=0x00000000
[13:11:09.102]    __ap=0x00000000
[13:11:09.102]    __traceout=0x00000001      (SWO Trace)
[13:11:09.102]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:09.102]    __FlashAddr=0x00000000
[13:11:09.102]    __FlashLen=0x00000000
[13:11:09.102]    __FlashArg=0x00000000
[13:11:09.103]    __FlashOp=0x00000000
[13:11:09.103]    __Result=0x00000000
[13:11:09.103]    
[13:11:09.103]    // User-defined
[13:11:09.103]    DbgMCU_CR=0x00000007
[13:11:09.103]    DbgMCU_APB1_Fz=0x00000000
[13:11:09.104]    DbgMCU_APB2_Fz=0x00000000
[13:11:09.104]    TraceClk_Pin=0x00040002
[13:11:09.104]    TraceD0_Pin=0x00040003
[13:11:09.104]    TraceD1_Pin=0x00040004
[13:11:09.104]    TraceD2_Pin=0x00040005
[13:11:09.105]    TraceD3_Pin=0x00040006
[13:11:09.105]  </debugvars>
[13:11:09.105]  
[13:11:09.105]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:11:09.105]    <block atomic="false" info="">
[13:11:09.106]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:11:09.106]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.106]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:11:09.107]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.107]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:11:09.107]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.107]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:11:09.108]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.108]    </block>
[13:11:09.108]  </sequence>
[13:11:09.108]  
[13:11:09.124]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[13:11:09.124]  
[13:11:09.125]  <debugvars>
[13:11:09.125]    // Pre-defined
[13:11:09.125]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:09.125]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:11:09.126]    __dp=0x00000000
[13:11:09.126]    __ap=0x00000000
[13:11:09.126]    __traceout=0x00000001      (SWO Trace)
[13:11:09.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:09.126]    __FlashAddr=0x00000000
[13:11:09.126]    __FlashLen=0x00000000
[13:11:09.126]    __FlashArg=0x00000000
[13:11:09.126]    __FlashOp=0x00000000
[13:11:09.126]    __Result=0x00000000
[13:11:09.126]    
[13:11:09.126]    // User-defined
[13:11:09.126]    DbgMCU_CR=0x00000007
[13:11:09.126]    DbgMCU_APB1_Fz=0x00000000
[13:11:09.126]    DbgMCU_APB2_Fz=0x00000000
[13:11:09.126]    TraceClk_Pin=0x00040002
[13:11:09.128]    TraceD0_Pin=0x00040003
[13:11:09.128]    TraceD1_Pin=0x00040004
[13:11:09.128]    TraceD2_Pin=0x00040005
[13:11:09.128]    TraceD3_Pin=0x00040006
[13:11:09.128]  </debugvars>
[13:11:09.128]  
[13:11:09.128]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:11:09.128]    <block atomic="false" info="">
[13:11:09.128]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:11:09.128]        // -> [traceSWO <= 0x00000001]
[13:11:09.128]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:11:09.129]        // -> [traceTPIU <= 0x00000000]
[13:11:09.129]    </block>
[13:11:09.129]    <control if="traceSWO" while="" timeout="0" info="">
[13:11:09.129]      // if-block "traceSWO"
[13:11:09.129]        // =>  TRUE
[13:11:09.129]      <block atomic="false" info="">
[13:11:09.129]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:11:09.130]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:11:09.130]            <block atomic="false" info="">
[13:11:09.130]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:11:09.130]                // -> [dbgmcu_val <= 0x00000000]
[13:11:09.130]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:11:09.130]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:11:09.131]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:11:09.131]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.131]                // -> [dbgmcu_val <= 0x00000007]
[13:11:09.131]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:11:09.131]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:11:09.132]              Sequence("ConfigureTraceSWOPin");
[13:11:09.132]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:11:09.132]                  <block atomic="false" info="">
[13:11:09.132]                    __var pin     = 0;
[13:11:09.132]                      // -> [pin <= 0x00000000]
[13:11:09.132]                    __var port    = 0;
[13:11:09.132]                      // -> [port <= 0x00000000]
[13:11:09.132]                    __var portAdr = 0;
[13:11:09.133]                      // -> [portAdr <= 0x00000000]
[13:11:09.133]                    __var pos     = 0;
[13:11:09.133]                      // -> [pos <= 0x00000000]
[13:11:09.133]                    __var SWO_Pin = 0x00010003;          // PB3
[13:11:09.133]                      // -> [SWO_Pin <= 0x00010003]
[13:11:09.133]                  </block>
[13:11:09.133]                  <block atomic="false" info="configure SWO">
[13:11:09.133]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:11:09.134]                      // -> [pin <= 0x00000003]
[13:11:09.134]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:11:09.134]                      // -> [port <= 0x00000001]
[13:11:09.134]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:11:09.134]                      // -> [portAdr <= 0x40020400]
[13:11:09.134]                    pos = pin * 2;
[13:11:09.134]                      // -> [pos <= 0x00000006]
[13:11:09.135]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:11:09.135]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.136]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.136]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:11:09.136]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.137]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.137]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:11:09.137]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.138]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.138]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:11:09.139]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.139]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.139]                  </block>
[13:11:09.139]                  <control if="pin <  8" while="" timeout="0" info="">
[13:11:09.140]                    // if-block "pin <  8"
[13:11:09.140]                      // =>  TRUE
[13:11:09.140]                    <block atomic="false" info="">
[13:11:09.140]                      pos = ((pin    ) & 7) * 4;
[13:11:09.140]                        // -> [pos <= 0x0000000C]
[13:11:09.140]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:11:09.141]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.141]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.141]                    </block>
[13:11:09.141]                    // end if-block "pin <  8"
[13:11:09.141]                  </control>
[13:11:09.142]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:11:09.142]                    // if-block "pin >= 8"
[13:11:09.142]                      // =>  FALSE
[13:11:09.142]                    // skip if-block "pin >= 8"
[13:11:09.142]                  </control>
[13:11:09.142]                </sequence>
[13:11:09.142]            </block>
[13:11:09.143]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:11:09.143]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:11:09.143]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.143]            </block>
[13:11:09.143]          </sequence>
[13:11:09.143]      </block>
[13:11:09.144]      // end if-block "traceSWO"
[13:11:09.144]    </control>
[13:11:09.144]    <control if="traceTPIU" while="" timeout="0" info="">
[13:11:09.144]      // if-block "traceTPIU"
[13:11:09.144]        // =>  FALSE
[13:11:09.144]      // skip if-block "traceTPIU"
[13:11:09.144]    </control>
[13:11:09.144]  </sequence>
[13:11:09.144]  
[13:11:09.148]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:11:09.148]  
[13:11:09.149]  <debugvars>
[13:11:09.149]    // Pre-defined
[13:11:09.149]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:09.149]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:11:09.149]    __dp=0x00000000
[13:11:09.149]    __ap=0x00000000
[13:11:09.149]    __traceout=0x00000001      (SWO Trace)
[13:11:09.149]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:09.149]    __FlashAddr=0x00000000
[13:11:09.150]    __FlashLen=0x00000000
[13:11:09.150]    __FlashArg=0x00000000
[13:11:09.150]    __FlashOp=0x00000000
[13:11:09.150]    __Result=0x00000000
[13:11:09.150]    
[13:11:09.150]    // User-defined
[13:11:09.150]    DbgMCU_CR=0x00000007
[13:11:09.150]    DbgMCU_APB1_Fz=0x00000000
[13:11:09.150]    DbgMCU_APB2_Fz=0x00000000
[13:11:09.151]    TraceClk_Pin=0x00040002
[13:11:09.151]    TraceD0_Pin=0x00040003
[13:11:09.151]    TraceD1_Pin=0x00040004
[13:11:09.151]    TraceD2_Pin=0x00040005
[13:11:09.151]    TraceD3_Pin=0x00040006
[13:11:09.151]  </debugvars>
[13:11:09.151]  
[13:11:09.151]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:11:09.151]    <block atomic="false" info="">
[13:11:09.152]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:11:09.152]        // -> [traceSWO <= 0x00000001]
[13:11:09.152]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:11:09.152]        // -> [traceTPIU <= 0x00000000]
[13:11:09.152]    </block>
[13:11:09.152]    <control if="traceSWO" while="" timeout="0" info="">
[13:11:09.153]      // if-block "traceSWO"
[13:11:09.153]        // =>  TRUE
[13:11:09.153]      <block atomic="false" info="">
[13:11:09.153]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:11:09.153]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:11:09.153]            <block atomic="false" info="">
[13:11:09.153]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:11:09.153]                // -> [dbgmcu_val <= 0x00000000]
[13:11:09.153]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:11:09.154]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:11:09.154]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:11:09.154]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.155]                // -> [dbgmcu_val <= 0x00000007]
[13:11:09.155]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:11:09.155]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:11:09.155]              Sequence("ConfigureTraceSWOPin");
[13:11:09.155]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:11:09.156]                  <block atomic="false" info="">
[13:11:09.156]                    __var pin     = 0;
[13:11:09.156]                      // -> [pin <= 0x00000000]
[13:11:09.156]                    __var port    = 0;
[13:11:09.156]                      // -> [port <= 0x00000000]
[13:11:09.156]                    __var portAdr = 0;
[13:11:09.156]                      // -> [portAdr <= 0x00000000]
[13:11:09.156]                    __var pos     = 0;
[13:11:09.156]                      // -> [pos <= 0x00000000]
[13:11:09.156]                    __var SWO_Pin = 0x00010003;          // PB3
[13:11:09.157]                      // -> [SWO_Pin <= 0x00010003]
[13:11:09.157]                  </block>
[13:11:09.157]                  <block atomic="false" info="configure SWO">
[13:11:09.157]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:11:09.157]                      // -> [pin <= 0x00000003]
[13:11:09.157]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:11:09.157]                      // -> [port <= 0x00000001]
[13:11:09.157]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:11:09.158]                      // -> [portAdr <= 0x40020400]
[13:11:09.158]                    pos = pin * 2;
[13:11:09.158]                      // -> [pos <= 0x00000006]
[13:11:09.158]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:11:09.159]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.159]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.159]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:11:09.160]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.160]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.160]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:11:09.161]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.161]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.161]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:11:09.162]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.162]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.162]                  </block>
[13:11:09.162]                  <control if="pin <  8" while="" timeout="0" info="">
[13:11:09.162]                    // if-block "pin <  8"
[13:11:09.163]                      // =>  TRUE
[13:11:09.163]                    <block atomic="false" info="">
[13:11:09.163]                      pos = ((pin    ) & 7) * 4;
[13:11:09.163]                        // -> [pos <= 0x0000000C]
[13:11:09.163]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:11:09.164]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.164]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.164]                    </block>
[13:11:09.164]                    // end if-block "pin <  8"
[13:11:09.164]                  </control>
[13:11:09.164]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:11:09.165]                    // if-block "pin >= 8"
[13:11:09.165]                      // =>  FALSE
[13:11:09.165]                    // skip if-block "pin >= 8"
[13:11:09.165]                  </control>
[13:11:09.165]                </sequence>
[13:11:09.165]            </block>
[13:11:09.165]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:11:09.166]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:11:09.166]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.166]            </block>
[13:11:09.166]          </sequence>
[13:11:09.166]      </block>
[13:11:09.167]      // end if-block "traceSWO"
[13:11:09.167]    </control>
[13:11:09.167]    <control if="traceTPIU" while="" timeout="0" info="">
[13:11:09.167]      // if-block "traceTPIU"
[13:11:09.167]        // =>  FALSE
[13:11:09.167]      // skip if-block "traceTPIU"
[13:11:09.167]    </control>
[13:11:09.167]  </sequence>
[13:11:09.168]  
[13:11:09.378]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:11:09.378]  
[13:11:09.378]  <debugvars>
[13:11:09.378]    // Pre-defined
[13:11:09.378]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:11:09.379]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:11:09.379]    __dp=0x00000000
[13:11:09.379]    __ap=0x00000000
[13:11:09.379]    __traceout=0x00000001      (SWO Trace)
[13:11:09.379]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:11:09.379]    __FlashAddr=0x00000000
[13:11:09.379]    __FlashLen=0x00000000
[13:11:09.380]    __FlashArg=0x00000000
[13:11:09.380]    __FlashOp=0x00000000
[13:11:09.380]    __Result=0x00000000
[13:11:09.380]    
[13:11:09.380]    // User-defined
[13:11:09.380]    DbgMCU_CR=0x00000007
[13:11:09.380]    DbgMCU_APB1_Fz=0x00000000
[13:11:09.381]    DbgMCU_APB2_Fz=0x00000000
[13:11:09.381]    TraceClk_Pin=0x00040002
[13:11:09.381]    TraceD0_Pin=0x00040003
[13:11:09.381]    TraceD1_Pin=0x00040004
[13:11:09.381]    TraceD2_Pin=0x00040005
[13:11:09.381]    TraceD3_Pin=0x00040006
[13:11:09.381]  </debugvars>
[13:11:09.382]  
[13:11:09.382]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:11:09.382]    <block atomic="false" info="">
[13:11:09.382]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:11:09.382]        // -> [traceSWO <= 0x00000001]
[13:11:09.382]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:11:09.383]        // -> [traceTPIU <= 0x00000000]
[13:11:09.383]    </block>
[13:11:09.383]    <control if="traceSWO" while="" timeout="0" info="">
[13:11:09.383]      // if-block "traceSWO"
[13:11:09.383]        // =>  TRUE
[13:11:09.383]      <block atomic="false" info="">
[13:11:09.383]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:11:09.384]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:11:09.384]            <block atomic="false" info="">
[13:11:09.384]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:11:09.384]                // -> [dbgmcu_val <= 0x00000000]
[13:11:09.384]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:11:09.384]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:11:09.384]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:11:09.385]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.385]                // -> [dbgmcu_val <= 0x00000007]
[13:11:09.385]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:11:09.385]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:11:09.385]              Sequence("ConfigureTraceSWOPin");
[13:11:09.386]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:11:09.386]                  <block atomic="false" info="">
[13:11:09.386]                    __var pin     = 0;
[13:11:09.386]                      // -> [pin <= 0x00000000]
[13:11:09.386]                    __var port    = 0;
[13:11:09.387]                      // -> [port <= 0x00000000]
[13:11:09.387]                    __var portAdr = 0;
[13:11:09.387]                      // -> [portAdr <= 0x00000000]
[13:11:09.387]                    __var pos     = 0;
[13:11:09.387]                      // -> [pos <= 0x00000000]
[13:11:09.387]                    __var SWO_Pin = 0x00010003;          // PB3
[13:11:09.387]                      // -> [SWO_Pin <= 0x00010003]
[13:11:09.388]                  </block>
[13:11:09.388]                  <block atomic="false" info="configure SWO">
[13:11:09.388]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:11:09.388]                      // -> [pin <= 0x00000003]
[13:11:09.388]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:11:09.389]                      // -> [port <= 0x00000001]
[13:11:09.389]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:11:09.389]                      // -> [portAdr <= 0x40020400]
[13:11:09.389]                    pos = pin * 2;
[13:11:09.389]                      // -> [pos <= 0x00000006]
[13:11:09.389]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:11:09.390]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.390]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.390]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:11:09.391]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.392]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.392]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:11:09.392]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.392]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.393]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:11:09.393]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.393]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.394]                  </block>
[13:11:09.394]                  <control if="pin <  8" while="" timeout="0" info="">
[13:11:09.394]                    // if-block "pin <  8"
[13:11:09.394]                      // =>  TRUE
[13:11:09.394]                    <block atomic="false" info="">
[13:11:09.394]                      pos = ((pin    ) & 7) * 4;
[13:11:09.394]                        // -> [pos <= 0x0000000C]
[13:11:09.395]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:11:09.395]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.395]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.396]                    </block>
[13:11:09.396]                    // end if-block "pin <  8"
[13:11:09.396]                  </control>
[13:11:09.396]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:11:09.396]                    // if-block "pin >= 8"
[13:11:09.396]                      // =>  FALSE
[13:11:09.396]                    // skip if-block "pin >= 8"
[13:11:09.397]                  </control>
[13:11:09.397]                </sequence>
[13:11:09.397]            </block>
[13:11:09.397]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:11:09.397]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:11:09.398]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:11:09.398]            </block>
[13:11:09.398]          </sequence>
[13:11:09.398]      </block>
[13:11:09.398]      // end if-block "traceSWO"
[13:11:09.399]    </control>
[13:11:09.399]    <control if="traceTPIU" while="" timeout="0" info="">
[13:11:09.399]      // if-block "traceTPIU"
[13:11:09.399]        // =>  FALSE
[13:11:09.399]      // skip if-block "traceTPIU"
[13:11:09.399]    </control>
[13:11:09.399]  </sequence>
[13:11:09.400]  
[13:18:07.495]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:18:07.495]  
[13:18:07.496]  <debugvars>
[13:18:07.497]    // Pre-defined
[13:18:07.497]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:18:07.497]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:18:07.497]    __dp=0x00000000
[13:18:07.497]    __ap=0x00000000
[13:18:07.497]    __traceout=0x00000001      (SWO Trace)
[13:18:07.497]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:18:07.497]    __FlashAddr=0x00000000
[13:18:07.497]    __FlashLen=0x00000000
[13:18:07.497]    __FlashArg=0x00000000
[13:18:07.497]    __FlashOp=0x00000000
[13:18:07.498]    __Result=0x00000000
[13:18:07.498]    
[13:18:07.498]    // User-defined
[13:18:07.498]    DbgMCU_CR=0x00000007
[13:18:07.498]    DbgMCU_APB1_Fz=0x00000000
[13:18:07.498]    DbgMCU_APB2_Fz=0x00000000
[13:18:07.498]    TraceClk_Pin=0x00040002
[13:18:07.498]    TraceD0_Pin=0x00040003
[13:18:07.499]    TraceD1_Pin=0x00040004
[13:18:07.499]    TraceD2_Pin=0x00040005
[13:18:07.499]    TraceD3_Pin=0x00040006
[13:18:07.499]  </debugvars>
[13:18:07.499]  
[13:18:07.499]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:18:07.499]    <block atomic="false" info="">
[13:18:07.499]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:18:07.500]        // -> [traceSWO <= 0x00000001]
[13:18:07.500]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:18:07.500]        // -> [traceTPIU <= 0x00000000]
[13:18:07.500]    </block>
[13:18:07.500]    <control if="traceSWO" while="" timeout="0" info="">
[13:18:07.500]      // if-block "traceSWO"
[13:18:07.500]        // =>  TRUE
[13:18:07.501]      <block atomic="false" info="">
[13:18:07.501]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:18:07.501]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:18:07.501]            <block atomic="false" info="">
[13:18:07.501]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:18:07.501]                // -> [dbgmcu_val <= 0x00000000]
[13:18:07.501]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:18:07.501]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:18:07.502]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:18:07.502]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.502]                // -> [dbgmcu_val <= 0x00000007]
[13:18:07.502]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:18:07.502]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:18:07.503]              Sequence("ConfigureTraceSWOPin");
[13:18:07.503]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:18:07.503]                  <block atomic="false" info="">
[13:18:07.503]                    __var pin     = 0;
[13:18:07.503]                      // -> [pin <= 0x00000000]
[13:18:07.503]                    __var port    = 0;
[13:18:07.503]                      // -> [port <= 0x00000000]
[13:18:07.503]                    __var portAdr = 0;
[13:18:07.503]                      // -> [portAdr <= 0x00000000]
[13:18:07.504]                    __var pos     = 0;
[13:18:07.504]                      // -> [pos <= 0x00000000]
[13:18:07.504]                    __var SWO_Pin = 0x00010003;          // PB3
[13:18:07.504]                      // -> [SWO_Pin <= 0x00010003]
[13:18:07.504]                  </block>
[13:18:07.504]                  <block atomic="false" info="configure SWO">
[13:18:07.504]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:18:07.504]                      // -> [pin <= 0x00000003]
[13:18:07.505]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:18:07.505]                      // -> [port <= 0x00000001]
[13:18:07.505]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:18:07.505]                      // -> [portAdr <= 0x40020400]
[13:18:07.505]                    pos = pin * 2;
[13:18:07.506]                      // -> [pos <= 0x00000006]
[13:18:07.506]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:18:07.506]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.506]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.507]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:18:07.507]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.507]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.508]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:18:07.508]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.508]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.508]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:18:07.509]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.509]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.510]                  </block>
[13:18:07.510]                  <control if="pin <  8" while="" timeout="0" info="">
[13:18:07.510]                    // if-block "pin <  8"
[13:18:07.510]                      // =>  TRUE
[13:18:07.510]                    <block atomic="false" info="">
[13:18:07.510]                      pos = ((pin    ) & 7) * 4;
[13:18:07.510]                        // -> [pos <= 0x0000000C]
[13:18:07.511]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:18:07.511]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.511]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.511]                    </block>
[13:18:07.511]                    // end if-block "pin <  8"
[13:18:07.512]                  </control>
[13:18:07.512]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:18:07.512]                    // if-block "pin >= 8"
[13:18:07.512]                      // =>  FALSE
[13:18:07.512]                    // skip if-block "pin >= 8"
[13:18:07.512]                  </control>
[13:18:07.513]                </sequence>
[13:18:07.513]            </block>
[13:18:07.513]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:18:07.513]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:18:07.513]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:18:07.513]            </block>
[13:18:07.513]          </sequence>
[13:18:07.514]      </block>
[13:18:07.514]      // end if-block "traceSWO"
[13:18:07.514]    </control>
[13:18:07.514]    <control if="traceTPIU" while="" timeout="0" info="">
[13:18:07.514]      // if-block "traceTPIU"
[13:18:07.514]        // =>  FALSE
[13:18:07.514]      // skip if-block "traceTPIU"
[13:18:07.515]    </control>
[13:18:07.515]  </sequence>
[13:18:07.515]  
[13:19:04.562]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:19:04.562]  
[13:19:04.562]  <debugvars>
[13:19:04.562]    // Pre-defined
[13:19:04.563]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:19:04.563]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:19:04.563]    __dp=0x00000000
[13:19:04.563]    __ap=0x00000000
[13:19:04.563]    __traceout=0x00000001      (SWO Trace)
[13:19:04.563]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:19:04.564]    __FlashAddr=0x00000000
[13:19:04.564]    __FlashLen=0x00000000
[13:19:04.564]    __FlashArg=0x00000000
[13:19:04.564]    __FlashOp=0x00000000
[13:19:04.564]    __Result=0x00000000
[13:19:04.565]    
[13:19:04.565]    // User-defined
[13:19:04.565]    DbgMCU_CR=0x00000007
[13:19:04.565]    DbgMCU_APB1_Fz=0x00000000
[13:19:04.565]    DbgMCU_APB2_Fz=0x00000000
[13:19:04.565]    TraceClk_Pin=0x00040002
[13:19:04.565]    TraceD0_Pin=0x00040003
[13:19:04.565]    TraceD1_Pin=0x00040004
[13:19:04.565]    TraceD2_Pin=0x00040005
[13:19:04.566]    TraceD3_Pin=0x00040006
[13:19:04.566]  </debugvars>
[13:19:04.566]  
[13:19:04.566]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:19:04.566]    <block atomic="false" info="">
[13:19:04.566]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:19:04.566]        // -> [traceSWO <= 0x00000001]
[13:19:04.566]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:19:04.566]        // -> [traceTPIU <= 0x00000000]
[13:19:04.567]    </block>
[13:19:04.567]    <control if="traceSWO" while="" timeout="0" info="">
[13:19:04.567]      // if-block "traceSWO"
[13:19:04.567]        // =>  TRUE
[13:19:04.567]      <block atomic="false" info="">
[13:19:04.567]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:19:04.567]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:19:04.568]            <block atomic="false" info="">
[13:19:04.568]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:19:04.568]                // -> [dbgmcu_val <= 0x00000000]
[13:19:04.568]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:19:04.568]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:19:04.568]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:19:04.569]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.569]                // -> [dbgmcu_val <= 0x00000007]
[13:19:04.569]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:19:04.569]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:19:04.569]              Sequence("ConfigureTraceSWOPin");
[13:19:04.569]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:19:04.569]                  <block atomic="false" info="">
[13:19:04.570]                    __var pin     = 0;
[13:19:04.570]                      // -> [pin <= 0x00000000]
[13:19:04.570]                    __var port    = 0;
[13:19:04.570]                      // -> [port <= 0x00000000]
[13:19:04.570]                    __var portAdr = 0;
[13:19:04.570]                      // -> [portAdr <= 0x00000000]
[13:19:04.570]                    __var pos     = 0;
[13:19:04.570]                      // -> [pos <= 0x00000000]
[13:19:04.571]                    __var SWO_Pin = 0x00010003;          // PB3
[13:19:04.571]                      // -> [SWO_Pin <= 0x00010003]
[13:19:04.571]                  </block>
[13:19:04.571]                  <block atomic="false" info="configure SWO">
[13:19:04.571]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:19:04.571]                      // -> [pin <= 0x00000003]
[13:19:04.571]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:19:04.571]                      // -> [port <= 0x00000001]
[13:19:04.572]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:19:04.572]                      // -> [portAdr <= 0x40020400]
[13:19:04.572]                    pos = pin * 2;
[13:19:04.572]                      // -> [pos <= 0x00000006]
[13:19:04.572]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:19:04.573]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.573]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.573]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:19:04.574]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.574]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.574]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:19:04.575]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.575]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.575]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:19:04.576]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.576]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.576]                  </block>
[13:19:04.576]                  <control if="pin <  8" while="" timeout="0" info="">
[13:19:04.576]                    // if-block "pin <  8"
[13:19:04.577]                      // =>  TRUE
[13:19:04.577]                    <block atomic="false" info="">
[13:19:04.577]                      pos = ((pin    ) & 7) * 4;
[13:19:04.577]                        // -> [pos <= 0x0000000C]
[13:19:04.577]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:19:04.577]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.578]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.578]                    </block>
[13:19:04.578]                    // end if-block "pin <  8"
[13:19:04.579]                  </control>
[13:19:04.579]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:19:04.579]                    // if-block "pin >= 8"
[13:19:04.579]                      // =>  FALSE
[13:19:04.579]                    // skip if-block "pin >= 8"
[13:19:04.579]                  </control>
[13:19:04.579]                </sequence>
[13:19:04.579]            </block>
[13:19:04.580]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:19:04.580]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:19:04.580]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:04.580]            </block>
[13:19:04.580]          </sequence>
[13:19:04.581]      </block>
[13:19:04.581]      // end if-block "traceSWO"
[13:19:04.581]    </control>
[13:19:04.581]    <control if="traceTPIU" while="" timeout="0" info="">
[13:19:04.581]      // if-block "traceTPIU"
[13:19:04.581]        // =>  FALSE
[13:19:04.581]      // skip if-block "traceTPIU"
[13:19:04.582]    </control>
[13:19:04.582]  </sequence>
[13:19:04.582]  
[13:19:52.202]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:19:52.202]  
[13:19:52.203]  <debugvars>
[13:19:52.204]    // Pre-defined
[13:19:52.204]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:19:52.204]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:19:52.204]    __dp=0x00000000
[13:19:52.204]    __ap=0x00000000
[13:19:52.204]    __traceout=0x00000001      (SWO Trace)
[13:19:52.205]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:19:52.205]    __FlashAddr=0x00000000
[13:19:52.205]    __FlashLen=0x00000000
[13:19:52.205]    __FlashArg=0x00000000
[13:19:52.205]    __FlashOp=0x00000000
[13:19:52.205]    __Result=0x00000000
[13:19:52.205]    
[13:19:52.205]    // User-defined
[13:19:52.206]    DbgMCU_CR=0x00000007
[13:19:52.206]    DbgMCU_APB1_Fz=0x00000000
[13:19:52.206]    DbgMCU_APB2_Fz=0x00000000
[13:19:52.206]    TraceClk_Pin=0x00040002
[13:19:52.206]    TraceD0_Pin=0x00040003
[13:19:52.206]    TraceD1_Pin=0x00040004
[13:19:52.207]    TraceD2_Pin=0x00040005
[13:19:52.207]    TraceD3_Pin=0x00040006
[13:19:52.207]  </debugvars>
[13:19:52.207]  
[13:19:52.207]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:19:52.207]    <block atomic="false" info="">
[13:19:52.208]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:19:52.208]        // -> [traceSWO <= 0x00000001]
[13:19:52.208]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:19:52.208]        // -> [traceTPIU <= 0x00000000]
[13:19:52.208]    </block>
[13:19:52.208]    <control if="traceSWO" while="" timeout="0" info="">
[13:19:52.209]      // if-block "traceSWO"
[13:19:52.209]        // =>  TRUE
[13:19:52.209]      <block atomic="false" info="">
[13:19:52.209]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:19:52.209]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:19:52.209]            <block atomic="false" info="">
[13:19:52.210]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:19:52.210]                // -> [dbgmcu_val <= 0x00000000]
[13:19:52.210]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:19:52.210]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:19:52.210]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:19:52.211]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.211]                // -> [dbgmcu_val <= 0x00000007]
[13:19:52.211]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:19:52.211]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:19:52.211]              Sequence("ConfigureTraceSWOPin");
[13:19:52.212]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:19:52.212]                  <block atomic="false" info="">
[13:19:52.212]                    __var pin     = 0;
[13:19:52.212]                      // -> [pin <= 0x00000000]
[13:19:52.212]                    __var port    = 0;
[13:19:52.212]                      // -> [port <= 0x00000000]
[13:19:52.213]                    __var portAdr = 0;
[13:19:52.213]                      // -> [portAdr <= 0x00000000]
[13:19:52.213]                    __var pos     = 0;
[13:19:52.213]                      // -> [pos <= 0x00000000]
[13:19:52.213]                    __var SWO_Pin = 0x00010003;          // PB3
[13:19:52.214]                      // -> [SWO_Pin <= 0x00010003]
[13:19:52.214]                  </block>
[13:19:52.214]                  <block atomic="false" info="configure SWO">
[13:19:52.214]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:19:52.214]                      // -> [pin <= 0x00000003]
[13:19:52.214]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:19:52.214]                      // -> [port <= 0x00000001]
[13:19:52.215]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:19:52.215]                      // -> [portAdr <= 0x40020400]
[13:19:52.215]                    pos = pin * 2;
[13:19:52.215]                      // -> [pos <= 0x00000006]
[13:19:52.215]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:19:52.216]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.216]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.216]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:19:52.217]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.217]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.217]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:19:52.218]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.218]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.218]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:19:52.219]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.219]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.220]                  </block>
[13:19:52.220]                  <control if="pin <  8" while="" timeout="0" info="">
[13:19:52.220]                    // if-block "pin <  8"
[13:19:52.220]                      // =>  TRUE
[13:19:52.220]                    <block atomic="false" info="">
[13:19:52.220]                      pos = ((pin    ) & 7) * 4;
[13:19:52.221]                        // -> [pos <= 0x0000000C]
[13:19:52.221]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:19:52.221]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.222]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.222]                    </block>
[13:19:52.222]                    // end if-block "pin <  8"
[13:19:52.222]                  </control>
[13:19:52.222]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:19:52.222]                    // if-block "pin >= 8"
[13:19:52.222]                      // =>  FALSE
[13:19:52.223]                    // skip if-block "pin >= 8"
[13:19:52.223]                  </control>
[13:19:52.223]                </sequence>
[13:19:52.223]            </block>
[13:19:52.223]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:19:52.223]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:19:52.224]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:19:52.224]            </block>
[13:19:52.224]          </sequence>
[13:19:52.224]      </block>
[13:19:52.224]      // end if-block "traceSWO"
[13:19:52.225]    </control>
[13:19:52.225]    <control if="traceTPIU" while="" timeout="0" info="">
[13:19:52.225]      // if-block "traceTPIU"
[13:19:52.225]        // =>  FALSE
[13:19:52.225]      // skip if-block "traceTPIU"
[13:19:52.225]    </control>
[13:19:52.225]  </sequence>
[13:19:52.225]  
[13:21:11.113]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:21:11.113]  
[13:21:11.117]  <debugvars>
[13:21:11.118]    // Pre-defined
[13:21:11.118]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:21:11.118]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:21:11.118]    __dp=0x00000000
[13:21:11.119]    __ap=0x00000000
[13:21:11.119]    __traceout=0x00000001      (SWO Trace)
[13:21:11.119]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:21:11.120]    __FlashAddr=0x00000000
[13:21:11.120]    __FlashLen=0x00000000
[13:21:11.120]    __FlashArg=0x00000000
[13:21:11.121]    __FlashOp=0x00000000
[13:21:11.121]    __Result=0x00000000
[13:21:11.121]    
[13:21:11.121]    // User-defined
[13:21:11.121]    DbgMCU_CR=0x00000007
[13:21:11.122]    DbgMCU_APB1_Fz=0x00000000
[13:21:11.122]    DbgMCU_APB2_Fz=0x00000000
[13:21:11.122]    TraceClk_Pin=0x00040002
[13:21:11.122]    TraceD0_Pin=0x00040003
[13:21:11.122]    TraceD1_Pin=0x00040004
[13:21:11.123]    TraceD2_Pin=0x00040005
[13:21:11.123]    TraceD3_Pin=0x00040006
[13:21:11.123]  </debugvars>
[13:21:11.123]  
[13:21:11.123]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:21:11.123]    <block atomic="false" info="">
[13:21:11.123]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:21:11.124]        // -> [traceSWO <= 0x00000001]
[13:21:11.124]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:21:11.124]        // -> [traceTPIU <= 0x00000000]
[13:21:11.124]    </block>
[13:21:11.124]    <control if="traceSWO" while="" timeout="0" info="">
[13:21:11.125]      // if-block "traceSWO"
[13:21:11.125]        // =>  TRUE
[13:21:11.125]      <block atomic="false" info="">
[13:21:11.125]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:21:11.125]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:21:11.126]            <block atomic="false" info="">
[13:21:11.126]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:21:11.126]                // -> [dbgmcu_val <= 0x00000000]
[13:21:11.126]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:21:11.126]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:21:11.127]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:21:11.127]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.128]                // -> [dbgmcu_val <= 0x00000007]
[13:21:11.128]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:21:11.128]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:21:11.128]              Sequence("ConfigureTraceSWOPin");
[13:21:11.128]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:21:11.128]                  <block atomic="false" info="">
[13:21:11.129]                    __var pin     = 0;
[13:21:11.129]                      // -> [pin <= 0x00000000]
[13:21:11.129]                    __var port    = 0;
[13:21:11.129]                      // -> [port <= 0x00000000]
[13:21:11.129]                    __var portAdr = 0;
[13:21:11.129]                      // -> [portAdr <= 0x00000000]
[13:21:11.130]                    __var pos     = 0;
[13:21:11.130]                      // -> [pos <= 0x00000000]
[13:21:11.130]                    __var SWO_Pin = 0x00010003;          // PB3
[13:21:11.130]                      // -> [SWO_Pin <= 0x00010003]
[13:21:11.130]                  </block>
[13:21:11.131]                  <block atomic="false" info="configure SWO">
[13:21:11.131]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:21:11.131]                      // -> [pin <= 0x00000003]
[13:21:11.131]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:21:11.131]                      // -> [port <= 0x00000001]
[13:21:11.131]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:21:11.131]                      // -> [portAdr <= 0x40020400]
[13:21:11.132]                    pos = pin * 2;
[13:21:11.132]                      // -> [pos <= 0x00000006]
[13:21:11.132]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:21:11.133]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.133]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.133]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:21:11.134]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.134]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.134]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:21:11.135]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.135]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.136]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:21:11.136]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.136]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.136]                  </block>
[13:21:11.136]                  <control if="pin <  8" while="" timeout="0" info="">
[13:21:11.137]                    // if-block "pin <  8"
[13:21:11.137]                      // =>  TRUE
[13:21:11.137]                    <block atomic="false" info="">
[13:21:11.137]                      pos = ((pin    ) & 7) * 4;
[13:21:11.137]                        // -> [pos <= 0x0000000C]
[13:21:11.137]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:21:11.138]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.138]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.139]                    </block>
[13:21:11.139]                    // end if-block "pin <  8"
[13:21:11.139]                  </control>
[13:21:11.139]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:21:11.139]                    // if-block "pin >= 8"
[13:21:11.139]                      // =>  FALSE
[13:21:11.140]                    // skip if-block "pin >= 8"
[13:21:11.140]                  </control>
[13:21:11.140]                </sequence>
[13:21:11.140]            </block>
[13:21:11.140]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:21:11.140]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:21:11.141]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:11.141]            </block>
[13:21:11.141]          </sequence>
[13:21:11.141]      </block>
[13:21:11.142]      // end if-block "traceSWO"
[13:21:11.142]    </control>
[13:21:11.142]    <control if="traceTPIU" while="" timeout="0" info="">
[13:21:11.142]      // if-block "traceTPIU"
[13:21:11.142]        // =>  FALSE
[13:21:11.142]      // skip if-block "traceTPIU"
[13:21:11.143]    </control>
[13:21:11.143]  </sequence>
[13:21:11.143]  
[13:21:20.978]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:21:20.978]  
[13:21:20.978]  <debugvars>
[13:21:20.978]    // Pre-defined
[13:21:20.978]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:21:20.978]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:21:20.978]    __dp=0x00000000
[13:21:20.979]    __ap=0x00000000
[13:21:20.979]    __traceout=0x00000001      (SWO Trace)
[13:21:20.979]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:21:20.979]    __FlashAddr=0x00000000
[13:21:20.979]    __FlashLen=0x00000000
[13:21:20.979]    __FlashArg=0x00000000
[13:21:20.979]    __FlashOp=0x00000000
[13:21:20.980]    __Result=0x00000000
[13:21:20.980]    
[13:21:20.980]    // User-defined
[13:21:20.980]    DbgMCU_CR=0x00000007
[13:21:20.980]    DbgMCU_APB1_Fz=0x00000000
[13:21:20.980]    DbgMCU_APB2_Fz=0x00000000
[13:21:20.980]    TraceClk_Pin=0x00040002
[13:21:20.981]    TraceD0_Pin=0x00040003
[13:21:20.981]    TraceD1_Pin=0x00040004
[13:21:20.981]    TraceD2_Pin=0x00040005
[13:21:20.981]    TraceD3_Pin=0x00040006
[13:21:20.981]  </debugvars>
[13:21:20.981]  
[13:21:20.982]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:21:20.982]    <block atomic="false" info="">
[13:21:20.982]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:21:20.982]        // -> [traceSWO <= 0x00000001]
[13:21:20.982]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:21:20.982]        // -> [traceTPIU <= 0x00000000]
[13:21:20.982]    </block>
[13:21:20.983]    <control if="traceSWO" while="" timeout="0" info="">
[13:21:20.983]      // if-block "traceSWO"
[13:21:20.983]        // =>  TRUE
[13:21:20.983]      <block atomic="false" info="">
[13:21:20.983]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:21:20.983]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:21:20.983]            <block atomic="false" info="">
[13:21:20.984]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:21:20.984]                // -> [dbgmcu_val <= 0x00000000]
[13:21:20.984]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:21:20.984]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:21:20.984]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:21:20.985]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.985]                // -> [dbgmcu_val <= 0x00000007]
[13:21:20.985]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:21:20.985]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:21:20.985]              Sequence("ConfigureTraceSWOPin");
[13:21:20.985]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:21:20.985]                  <block atomic="false" info="">
[13:21:20.986]                    __var pin     = 0;
[13:21:20.986]                      // -> [pin <= 0x00000000]
[13:21:20.986]                    __var port    = 0;
[13:21:20.986]                      // -> [port <= 0x00000000]
[13:21:20.986]                    __var portAdr = 0;
[13:21:20.986]                      // -> [portAdr <= 0x00000000]
[13:21:20.986]                    __var pos     = 0;
[13:21:20.987]                      // -> [pos <= 0x00000000]
[13:21:20.987]                    __var SWO_Pin = 0x00010003;          // PB3
[13:21:20.987]                      // -> [SWO_Pin <= 0x00010003]
[13:21:20.987]                  </block>
[13:21:20.987]                  <block atomic="false" info="configure SWO">
[13:21:20.987]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:21:20.987]                      // -> [pin <= 0x00000003]
[13:21:20.987]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:21:20.988]                      // -> [port <= 0x00000001]
[13:21:20.988]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:21:20.988]                      // -> [portAdr <= 0x40020400]
[13:21:20.988]                    pos = pin * 2;
[13:21:20.988]                      // -> [pos <= 0x00000006]
[13:21:20.988]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:21:20.989]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.989]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.989]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:21:20.990]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.990]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.990]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:21:20.991]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.991]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.991]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:21:20.992]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.992]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.992]                  </block>
[13:21:20.992]                  <control if="pin <  8" while="" timeout="0" info="">
[13:21:20.992]                    // if-block "pin <  8"
[13:21:20.993]                      // =>  TRUE
[13:21:20.993]                    <block atomic="false" info="">
[13:21:20.993]                      pos = ((pin    ) & 7) * 4;
[13:21:20.993]                        // -> [pos <= 0x0000000C]
[13:21:20.993]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:21:20.993]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.994]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.994]                    </block>
[13:21:20.994]                    // end if-block "pin <  8"
[13:21:20.994]                  </control>
[13:21:20.994]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:21:20.994]                    // if-block "pin >= 8"
[13:21:20.995]                      // =>  FALSE
[13:21:20.995]                    // skip if-block "pin >= 8"
[13:21:20.995]                  </control>
[13:21:20.995]                </sequence>
[13:21:20.995]            </block>
[13:21:20.995]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:21:20.995]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:21:20.996]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:20.996]            </block>
[13:21:20.996]          </sequence>
[13:21:20.996]      </block>
[13:21:20.996]      // end if-block "traceSWO"
[13:21:20.996]    </control>
[13:21:20.997]    <control if="traceTPIU" while="" timeout="0" info="">
[13:21:20.997]      // if-block "traceTPIU"
[13:21:20.997]        // =>  FALSE
[13:21:20.997]      // skip if-block "traceTPIU"
[13:21:20.997]    </control>
[13:21:20.997]  </sequence>
[13:21:20.997]  
[13:21:44.408]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[13:21:44.408]  
[13:21:44.408]  <debugvars>
[13:21:44.409]    // Pre-defined
[13:21:44.409]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:21:44.409]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:21:44.409]    __dp=0x00000000
[13:21:44.409]    __ap=0x00000000
[13:21:44.410]    __traceout=0x00000001      (SWO Trace)
[13:21:44.410]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:21:44.410]    __FlashAddr=0x00000000
[13:21:44.410]    __FlashLen=0x00000000
[13:21:44.410]    __FlashArg=0x00000000
[13:21:44.410]    __FlashOp=0x00000000
[13:21:44.411]    __Result=0x00000000
[13:21:44.411]    
[13:21:44.411]    // User-defined
[13:21:44.411]    DbgMCU_CR=0x00000007
[13:21:44.411]    DbgMCU_APB1_Fz=0x00000000
[13:21:44.411]    DbgMCU_APB2_Fz=0x00000000
[13:21:44.411]    TraceClk_Pin=0x00040002
[13:21:44.411]    TraceD0_Pin=0x00040003
[13:21:44.412]    TraceD1_Pin=0x00040004
[13:21:44.412]    TraceD2_Pin=0x00040005
[13:21:44.412]    TraceD3_Pin=0x00040006
[13:21:44.412]  </debugvars>
[13:21:44.412]  
[13:21:44.412]  <sequence name="TraceStop" Pname="" disable="false" info="">
[13:21:44.412]    <block atomic="false" info="">
[13:21:44.413]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[13:21:44.413]        // -> [traceSWO <= 0x00000001]
[13:21:44.413]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[13:21:44.413]        // -> [traceTPIU <= 0x00000000]
[13:21:44.413]    </block>
[13:21:44.413]    <control if="traceSWO" while="" timeout="0" info="">
[13:21:44.413]      // if-block "traceSWO"
[13:21:44.413]        // =>  TRUE
[13:21:44.414]      <block atomic="false" info="">
[13:21:44.414]        Sequence("DisableTraceSWO");
[13:21:44.414]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[13:21:44.414]            <block atomic="false" info="">
[13:21:44.414]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:21:44.414]                // -> [dbgmcu_val <= 0x00000000]
[13:21:44.414]            </block>
[13:21:44.415]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[13:21:44.415]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[13:21:44.415]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:21:44.415]                // -> [dbgmcu_val <= 0x00000007]
[13:21:44.415]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[13:21:44.416]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:44.416]            </block>
[13:21:44.416]          </sequence>
[13:21:44.416]      </block>
[13:21:44.416]      // end if-block "traceSWO"
[13:21:44.417]    </control>
[13:21:44.417]    <control if="traceTPIU" while="" timeout="0" info="">
[13:21:44.417]      // if-block "traceTPIU"
[13:21:44.417]        // =>  FALSE
[13:21:44.417]      // skip if-block "traceTPIU"
[13:21:44.417]    </control>
[13:21:44.417]  </sequence>
[13:21:44.418]  
[13:21:52.882]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:21:52.882]  
[13:21:52.882]  <debugvars>
[13:21:52.883]    // Pre-defined
[13:21:52.883]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:21:52.883]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:21:52.883]    __dp=0x00000000
[13:21:52.883]    __ap=0x00000000
[13:21:52.883]    __traceout=0x00000001      (SWO Trace)
[13:21:52.884]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:21:52.884]    __FlashAddr=0x00000000
[13:21:52.884]    __FlashLen=0x00000000
[13:21:52.884]    __FlashArg=0x00000000
[13:21:52.884]    __FlashOp=0x00000000
[13:21:52.885]    __Result=0x00000000
[13:21:52.885]    
[13:21:52.885]    // User-defined
[13:21:52.885]    DbgMCU_CR=0x00000007
[13:21:52.885]    DbgMCU_APB1_Fz=0x00000000
[13:21:52.885]    DbgMCU_APB2_Fz=0x00000000
[13:21:52.885]    TraceClk_Pin=0x00040002
[13:21:52.886]    TraceD0_Pin=0x00040003
[13:21:52.886]    TraceD1_Pin=0x00040004
[13:21:52.886]    TraceD2_Pin=0x00040005
[13:21:52.886]    TraceD3_Pin=0x00040006
[13:21:52.886]  </debugvars>
[13:21:52.887]  
[13:21:52.887]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:21:52.887]    <block atomic="false" info="">
[13:21:52.887]      Sequence("CheckID");
[13:21:52.887]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:21:52.888]          <block atomic="false" info="">
[13:21:52.888]            __var pidr1 = 0;
[13:21:52.888]              // -> [pidr1 <= 0x00000000]
[13:21:52.888]            __var pidr2 = 0;
[13:21:52.888]              // -> [pidr2 <= 0x00000000]
[13:21:52.888]            __var jep106id = 0;
[13:21:52.889]              // -> [jep106id <= 0x00000000]
[13:21:52.889]            __var ROMTableBase = 0;
[13:21:52.889]              // -> [ROMTableBase <= 0x00000000]
[13:21:52.889]            __ap = 0;      // AHB-AP
[13:21:52.889]              // -> [__ap <= 0x00000000]
[13:21:52.890]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:21:52.890]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.890]              // -> [ROMTableBase <= 0xE00FD000]
[13:21:52.891]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:21:52.891]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.891]              // -> [pidr1 <= 0x00000004]
[13:21:52.892]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:21:52.892]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.892]              // -> [pidr2 <= 0x0000001A]
[13:21:52.892]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:21:52.893]              // -> [jep106id <= 0x00000020]
[13:21:52.893]          </block>
[13:21:52.893]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:21:52.893]            // if-block "jep106id != 0x20"
[13:21:52.893]              // =>  FALSE
[13:21:52.893]            // skip if-block "jep106id != 0x20"
[13:21:52.894]          </control>
[13:21:52.894]        </sequence>
[13:21:52.894]    </block>
[13:21:52.894]  </sequence>
[13:21:52.894]  
[13:21:52.909]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:21:52.909]  
[13:21:52.909]  <debugvars>
[13:21:52.910]    // Pre-defined
[13:21:52.910]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:21:52.910]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:21:52.910]    __dp=0x00000000
[13:21:52.910]    __ap=0x00000000
[13:21:52.910]    __traceout=0x00000001      (SWO Trace)
[13:21:52.911]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:21:52.911]    __FlashAddr=0x00000000
[13:21:52.911]    __FlashLen=0x00000000
[13:21:52.911]    __FlashArg=0x00000000
[13:21:52.911]    __FlashOp=0x00000000
[13:21:52.912]    __Result=0x00000000
[13:21:52.912]    
[13:21:52.912]    // User-defined
[13:21:52.912]    DbgMCU_CR=0x00000007
[13:21:52.912]    DbgMCU_APB1_Fz=0x00000000
[13:21:52.912]    DbgMCU_APB2_Fz=0x00000000
[13:21:52.912]    TraceClk_Pin=0x00040002
[13:21:52.912]    TraceD0_Pin=0x00040003
[13:21:52.912]    TraceD1_Pin=0x00040004
[13:21:52.913]    TraceD2_Pin=0x00040005
[13:21:52.913]    TraceD3_Pin=0x00040006
[13:21:52.913]  </debugvars>
[13:21:52.913]  
[13:21:52.913]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:21:52.913]    <block atomic="false" info="">
[13:21:52.914]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:21:52.914]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.914]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:21:52.915]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.915]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:21:52.915]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.915]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:21:52.916]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:21:52.916]    </block>
[13:21:52.916]  </sequence>
[13:21:52.916]  
[13:22:24.313]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:22:24.313]  
[13:22:24.314]  <debugvars>
[13:22:24.314]    // Pre-defined
[13:22:24.314]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:22:24.314]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:22:24.314]    __dp=0x00000000
[13:22:24.314]    __ap=0x00000000
[13:22:24.314]    __traceout=0x00000001      (SWO Trace)
[13:22:24.315]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:22:24.315]    __FlashAddr=0x00000000
[13:22:24.315]    __FlashLen=0x00000000
[13:22:24.315]    __FlashArg=0x00000000
[13:22:24.315]    __FlashOp=0x00000000
[13:22:24.315]    __Result=0x00000000
[13:22:24.315]    
[13:22:24.315]    // User-defined
[13:22:24.316]    DbgMCU_CR=0x00000007
[13:22:24.316]    DbgMCU_APB1_Fz=0x00000000
[13:22:24.316]    DbgMCU_APB2_Fz=0x00000000
[13:22:24.316]    TraceClk_Pin=0x00040002
[13:22:24.316]    TraceD0_Pin=0x00040003
[13:22:24.316]    TraceD1_Pin=0x00040004
[13:22:24.316]    TraceD2_Pin=0x00040005
[13:22:24.317]    TraceD3_Pin=0x00040006
[13:22:24.317]  </debugvars>
[13:22:24.317]  
[13:22:24.317]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:22:24.317]    <block atomic="false" info="">
[13:22:24.317]      Sequence("CheckID");
[13:22:24.318]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:22:24.318]          <block atomic="false" info="">
[13:22:24.318]            __var pidr1 = 0;
[13:22:24.318]              // -> [pidr1 <= 0x00000000]
[13:22:24.318]            __var pidr2 = 0;
[13:22:24.318]              // -> [pidr2 <= 0x00000000]
[13:22:24.318]            __var jep106id = 0;
[13:22:24.319]              // -> [jep106id <= 0x00000000]
[13:22:24.319]            __var ROMTableBase = 0;
[13:22:24.319]              // -> [ROMTableBase <= 0x00000000]
[13:22:24.319]            __ap = 0;      // AHB-AP
[13:22:24.319]              // -> [__ap <= 0x00000000]
[13:22:24.319]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:22:24.320]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.320]              // -> [ROMTableBase <= 0xE00FD000]
[13:22:24.320]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:22:24.321]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.321]              // -> [pidr1 <= 0x00000004]
[13:22:24.321]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:22:24.321]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.321]              // -> [pidr2 <= 0x0000001A]
[13:22:24.322]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:22:24.322]              // -> [jep106id <= 0x00000020]
[13:22:24.322]          </block>
[13:22:24.322]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:22:24.322]            // if-block "jep106id != 0x20"
[13:22:24.322]              // =>  FALSE
[13:22:24.323]            // skip if-block "jep106id != 0x20"
[13:22:24.323]          </control>
[13:22:24.323]        </sequence>
[13:22:24.323]    </block>
[13:22:24.323]  </sequence>
[13:22:24.323]  
[13:22:24.338]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:22:24.338]  
[13:22:24.338]  <debugvars>
[13:22:24.338]    // Pre-defined
[13:22:24.338]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:22:24.338]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:22:24.339]    __dp=0x00000000
[13:22:24.339]    __ap=0x00000000
[13:22:24.339]    __traceout=0x00000001      (SWO Trace)
[13:22:24.339]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:22:24.339]    __FlashAddr=0x00000000
[13:22:24.339]    __FlashLen=0x00000000
[13:22:24.339]    __FlashArg=0x00000000
[13:22:24.340]    __FlashOp=0x00000000
[13:22:24.340]    __Result=0x00000000
[13:22:24.340]    
[13:22:24.340]    // User-defined
[13:22:24.340]    DbgMCU_CR=0x00000007
[13:22:24.340]    DbgMCU_APB1_Fz=0x00000000
[13:22:24.340]    DbgMCU_APB2_Fz=0x00000000
[13:22:24.341]    TraceClk_Pin=0x00040002
[13:22:24.341]    TraceD0_Pin=0x00040003
[13:22:24.341]    TraceD1_Pin=0x00040004
[13:22:24.341]    TraceD2_Pin=0x00040005
[13:22:24.341]    TraceD3_Pin=0x00040006
[13:22:24.341]  </debugvars>
[13:22:24.341]  
[13:22:24.341]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:22:24.342]    <block atomic="false" info="">
[13:22:24.342]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:22:24.342]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.342]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:22:24.343]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.343]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:22:24.344]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.344]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:22:24.344]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.345]    </block>
[13:22:24.345]  </sequence>
[13:22:24.345]  
[13:22:24.361]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[13:22:24.361]  
[13:22:24.361]  <debugvars>
[13:22:24.361]    // Pre-defined
[13:22:24.361]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:22:24.362]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:22:24.362]    __dp=0x00000000
[13:22:24.362]    __ap=0x00000000
[13:22:24.362]    __traceout=0x00000001      (SWO Trace)
[13:22:24.362]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:22:24.362]    __FlashAddr=0x00000000
[13:22:24.362]    __FlashLen=0x00000000
[13:22:24.363]    __FlashArg=0x00000000
[13:22:24.363]    __FlashOp=0x00000000
[13:22:24.363]    __Result=0x00000000
[13:22:24.363]    
[13:22:24.363]    // User-defined
[13:22:24.363]    DbgMCU_CR=0x00000007
[13:22:24.363]    DbgMCU_APB1_Fz=0x00000000
[13:22:24.364]    DbgMCU_APB2_Fz=0x00000000
[13:22:24.364]    TraceClk_Pin=0x00040002
[13:22:24.364]    TraceD0_Pin=0x00040003
[13:22:24.364]    TraceD1_Pin=0x00040004
[13:22:24.364]    TraceD2_Pin=0x00040005
[13:22:24.364]    TraceD3_Pin=0x00040006
[13:22:24.364]  </debugvars>
[13:22:24.364]  
[13:22:24.365]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:22:24.365]    <block atomic="false" info="">
[13:22:24.365]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:22:24.365]        // -> [traceSWO <= 0x00000001]
[13:22:24.365]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:22:24.366]        // -> [traceTPIU <= 0x00000000]
[13:22:24.366]    </block>
[13:22:24.366]    <control if="traceSWO" while="" timeout="0" info="">
[13:22:24.366]      // if-block "traceSWO"
[13:22:24.366]        // =>  TRUE
[13:22:24.366]      <block atomic="false" info="">
[13:22:24.366]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:22:24.366]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:22:24.367]            <block atomic="false" info="">
[13:22:24.367]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:22:24.367]                // -> [dbgmcu_val <= 0x00000000]
[13:22:24.367]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:22:24.367]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:22:24.367]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:22:24.368]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.368]                // -> [dbgmcu_val <= 0x00000007]
[13:22:24.368]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:22:24.368]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:22:24.368]              Sequence("ConfigureTraceSWOPin");
[13:22:24.368]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:22:24.368]                  <block atomic="false" info="">
[13:22:24.369]                    __var pin     = 0;
[13:22:24.369]                      // -> [pin <= 0x00000000]
[13:22:24.369]                    __var port    = 0;
[13:22:24.369]                      // -> [port <= 0x00000000]
[13:22:24.369]                    __var portAdr = 0;
[13:22:24.369]                      // -> [portAdr <= 0x00000000]
[13:22:24.369]                    __var pos     = 0;
[13:22:24.370]                      // -> [pos <= 0x00000000]
[13:22:24.370]                    __var SWO_Pin = 0x00010003;          // PB3
[13:22:24.370]                      // -> [SWO_Pin <= 0x00010003]
[13:22:24.370]                  </block>
[13:22:24.370]                  <block atomic="false" info="configure SWO">
[13:22:24.370]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:22:24.370]                      // -> [pin <= 0x00000003]
[13:22:24.370]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:22:24.371]                      // -> [port <= 0x00000001]
[13:22:24.371]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:22:24.371]                      // -> [portAdr <= 0x40020400]
[13:22:24.371]                    pos = pin * 2;
[13:22:24.371]                      // -> [pos <= 0x00000006]
[13:22:24.371]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:22:24.372]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.372]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.372]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:22:24.373]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.373]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.373]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:22:24.374]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.374]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.374]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:22:24.375]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.375]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.375]                  </block>
[13:22:24.376]                  <control if="pin <  8" while="" timeout="0" info="">
[13:22:24.376]                    // if-block "pin <  8"
[13:22:24.376]                      // =>  TRUE
[13:22:24.376]                    <block atomic="false" info="">
[13:22:24.376]                      pos = ((pin    ) & 7) * 4;
[13:22:24.376]                        // -> [pos <= 0x0000000C]
[13:22:24.376]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:22:24.377]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.377]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.377]                    </block>
[13:22:24.377]                    // end if-block "pin <  8"
[13:22:24.378]                  </control>
[13:22:24.378]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:22:24.378]                    // if-block "pin >= 8"
[13:22:24.378]                      // =>  FALSE
[13:22:24.378]                    // skip if-block "pin >= 8"
[13:22:24.378]                  </control>
[13:22:24.378]                </sequence>
[13:22:24.378]            </block>
[13:22:24.379]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:22:24.379]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:22:24.379]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.379]            </block>
[13:22:24.379]          </sequence>
[13:22:24.380]      </block>
[13:22:24.380]      // end if-block "traceSWO"
[13:22:24.380]    </control>
[13:22:24.380]    <control if="traceTPIU" while="" timeout="0" info="">
[13:22:24.380]      // if-block "traceTPIU"
[13:22:24.380]        // =>  FALSE
[13:22:24.380]      // skip if-block "traceTPIU"
[13:22:24.380]    </control>
[13:22:24.381]  </sequence>
[13:22:24.381]  
[13:22:24.385]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:22:24.385]  
[13:22:24.389]  <debugvars>
[13:22:24.389]    // Pre-defined
[13:22:24.389]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:22:24.389]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:22:24.389]    __dp=0x00000000
[13:22:24.390]    __ap=0x00000000
[13:22:24.390]    __traceout=0x00000001      (SWO Trace)
[13:22:24.390]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:22:24.390]    __FlashAddr=0x00000000
[13:22:24.390]    __FlashLen=0x00000000
[13:22:24.391]    __FlashArg=0x00000000
[13:22:24.391]    __FlashOp=0x00000000
[13:22:24.391]    __Result=0x00000000
[13:22:24.391]    
[13:22:24.391]    // User-defined
[13:22:24.391]    DbgMCU_CR=0x00000007
[13:22:24.391]    DbgMCU_APB1_Fz=0x00000000
[13:22:24.392]    DbgMCU_APB2_Fz=0x00000000
[13:22:24.392]    TraceClk_Pin=0x00040002
[13:22:24.392]    TraceD0_Pin=0x00040003
[13:22:24.392]    TraceD1_Pin=0x00040004
[13:22:24.392]    TraceD2_Pin=0x00040005
[13:22:24.392]    TraceD3_Pin=0x00040006
[13:22:24.393]  </debugvars>
[13:22:24.393]  
[13:22:24.393]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:22:24.393]    <block atomic="false" info="">
[13:22:24.393]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:22:24.393]        // -> [traceSWO <= 0x00000001]
[13:22:24.393]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:22:24.394]        // -> [traceTPIU <= 0x00000000]
[13:22:24.394]    </block>
[13:22:24.394]    <control if="traceSWO" while="" timeout="0" info="">
[13:22:24.394]      // if-block "traceSWO"
[13:22:24.394]        // =>  TRUE
[13:22:24.394]      <block atomic="false" info="">
[13:22:24.395]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:22:24.395]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:22:24.395]            <block atomic="false" info="">
[13:22:24.395]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:22:24.395]                // -> [dbgmcu_val <= 0x00000000]
[13:22:24.395]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:22:24.395]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:22:24.395]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:22:24.396]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.396]                // -> [dbgmcu_val <= 0x00000007]
[13:22:24.396]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:22:24.396]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:22:24.396]              Sequence("ConfigureTraceSWOPin");
[13:22:24.397]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:22:24.397]                  <block atomic="false" info="">
[13:22:24.397]                    __var pin     = 0;
[13:22:24.397]                      // -> [pin <= 0x00000000]
[13:22:24.397]                    __var port    = 0;
[13:22:24.397]                      // -> [port <= 0x00000000]
[13:22:24.397]                    __var portAdr = 0;
[13:22:24.397]                      // -> [portAdr <= 0x00000000]
[13:22:24.398]                    __var pos     = 0;
[13:22:24.398]                      // -> [pos <= 0x00000000]
[13:22:24.398]                    __var SWO_Pin = 0x00010003;          // PB3
[13:22:24.398]                      // -> [SWO_Pin <= 0x00010003]
[13:22:24.398]                  </block>
[13:22:24.398]                  <block atomic="false" info="configure SWO">
[13:22:24.398]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:22:24.398]                      // -> [pin <= 0x00000003]
[13:22:24.399]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:22:24.399]                      // -> [port <= 0x00000001]
[13:22:24.399]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:22:24.399]                      // -> [portAdr <= 0x40020400]
[13:22:24.399]                    pos = pin * 2;
[13:22:24.399]                      // -> [pos <= 0x00000006]
[13:22:24.399]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:22:24.400]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.400]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.400]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:22:24.401]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.401]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.401]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:22:24.402]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.402]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.402]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:22:24.403]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.403]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.403]                  </block>
[13:22:24.403]                  <control if="pin <  8" while="" timeout="0" info="">
[13:22:24.403]                    // if-block "pin <  8"
[13:22:24.403]                      // =>  TRUE
[13:22:24.404]                    <block atomic="false" info="">
[13:22:24.404]                      pos = ((pin    ) & 7) * 4;
[13:22:24.404]                        // -> [pos <= 0x0000000C]
[13:22:24.404]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:22:24.405]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.405]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.405]                    </block>
[13:22:24.405]                    // end if-block "pin <  8"
[13:22:24.406]                  </control>
[13:22:24.406]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:22:24.406]                    // if-block "pin >= 8"
[13:22:24.406]                      // =>  FALSE
[13:22:24.406]                    // skip if-block "pin >= 8"
[13:22:24.406]                  </control>
[13:22:24.407]                </sequence>
[13:22:24.407]            </block>
[13:22:24.407]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:22:24.407]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:22:24.407]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.407]            </block>
[13:22:24.408]          </sequence>
[13:22:24.408]      </block>
[13:22:24.408]      // end if-block "traceSWO"
[13:22:24.408]    </control>
[13:22:24.408]    <control if="traceTPIU" while="" timeout="0" info="">
[13:22:24.408]      // if-block "traceTPIU"
[13:22:24.409]        // =>  FALSE
[13:22:24.409]      // skip if-block "traceTPIU"
[13:22:24.409]    </control>
[13:22:24.409]  </sequence>
[13:22:24.409]  
[13:22:24.623]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:22:24.623]  
[13:22:24.623]  <debugvars>
[13:22:24.623]    // Pre-defined
[13:22:24.624]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:22:24.624]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:22:24.624]    __dp=0x00000000
[13:22:24.624]    __ap=0x00000000
[13:22:24.624]    __traceout=0x00000001      (SWO Trace)
[13:22:24.624]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:22:24.624]    __FlashAddr=0x00000000
[13:22:24.625]    __FlashLen=0x00000000
[13:22:24.625]    __FlashArg=0x00000000
[13:22:24.625]    __FlashOp=0x00000000
[13:22:24.625]    __Result=0x00000000
[13:22:24.625]    
[13:22:24.625]    // User-defined
[13:22:24.625]    DbgMCU_CR=0x00000007
[13:22:24.626]    DbgMCU_APB1_Fz=0x00000000
[13:22:24.626]    DbgMCU_APB2_Fz=0x00000000
[13:22:24.626]    TraceClk_Pin=0x00040002
[13:22:24.626]    TraceD0_Pin=0x00040003
[13:22:24.626]    TraceD1_Pin=0x00040004
[13:22:24.626]    TraceD2_Pin=0x00040005
[13:22:24.626]    TraceD3_Pin=0x00040006
[13:22:24.626]  </debugvars>
[13:22:24.627]  
[13:22:24.627]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:22:24.627]    <block atomic="false" info="">
[13:22:24.627]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:22:24.627]        // -> [traceSWO <= 0x00000001]
[13:22:24.627]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:22:24.627]        // -> [traceTPIU <= 0x00000000]
[13:22:24.628]    </block>
[13:22:24.628]    <control if="traceSWO" while="" timeout="0" info="">
[13:22:24.628]      // if-block "traceSWO"
[13:22:24.628]        // =>  TRUE
[13:22:24.628]      <block atomic="false" info="">
[13:22:24.628]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:22:24.628]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:22:24.629]            <block atomic="false" info="">
[13:22:24.629]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:22:24.629]                // -> [dbgmcu_val <= 0x00000000]
[13:22:24.629]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:22:24.629]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:22:24.629]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:22:24.630]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.630]                // -> [dbgmcu_val <= 0x00000007]
[13:22:24.630]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:22:24.630]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:22:24.630]              Sequence("ConfigureTraceSWOPin");
[13:22:24.631]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:22:24.631]                  <block atomic="false" info="">
[13:22:24.631]                    __var pin     = 0;
[13:22:24.631]                      // -> [pin <= 0x00000000]
[13:22:24.631]                    __var port    = 0;
[13:22:24.631]                      // -> [port <= 0x00000000]
[13:22:24.631]                    __var portAdr = 0;
[13:22:24.631]                      // -> [portAdr <= 0x00000000]
[13:22:24.632]                    __var pos     = 0;
[13:22:24.632]                      // -> [pos <= 0x00000000]
[13:22:24.632]                    __var SWO_Pin = 0x00010003;          // PB3
[13:22:24.632]                      // -> [SWO_Pin <= 0x00010003]
[13:22:24.632]                  </block>
[13:22:24.632]                  <block atomic="false" info="configure SWO">
[13:22:24.632]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:22:24.633]                      // -> [pin <= 0x00000003]
[13:22:24.633]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:22:24.633]                      // -> [port <= 0x00000001]
[13:22:24.633]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:22:24.633]                      // -> [portAdr <= 0x40020400]
[13:22:24.633]                    pos = pin * 2;
[13:22:24.633]                      // -> [pos <= 0x00000006]
[13:22:24.633]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:22:24.634]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.634]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.634]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:22:24.635]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.635]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.636]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:22:24.636]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.636]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.636]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:22:24.637]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.637]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.637]                  </block>
[13:22:24.638]                  <control if="pin <  8" while="" timeout="0" info="">
[13:22:24.638]                    // if-block "pin <  8"
[13:22:24.638]                      // =>  TRUE
[13:22:24.638]                    <block atomic="false" info="">
[13:22:24.638]                      pos = ((pin    ) & 7) * 4;
[13:22:24.638]                        // -> [pos <= 0x0000000C]
[13:22:24.638]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:22:24.639]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.639]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.640]                    </block>
[13:22:24.641]                    // end if-block "pin <  8"
[13:22:24.641]                  </control>
[13:22:24.641]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:22:24.641]                    // if-block "pin >= 8"
[13:22:24.641]                      // =>  FALSE
[13:22:24.641]                    // skip if-block "pin >= 8"
[13:22:24.641]                  </control>
[13:22:24.641]                </sequence>
[13:22:24.641]            </block>
[13:22:24.641]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:22:24.641]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:22:24.641]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:22:24.642]            </block>
[13:22:24.642]          </sequence>
[13:22:24.642]      </block>
[13:22:24.642]      // end if-block "traceSWO"
[13:22:24.642]    </control>
[13:22:24.642]    <control if="traceTPIU" while="" timeout="0" info="">
[13:22:24.642]      // if-block "traceTPIU"
[13:22:24.642]        // =>  FALSE
[13:22:24.643]      // skip if-block "traceTPIU"
[13:22:24.643]    </control>
[13:22:24.643]  </sequence>
[13:22:24.643]  
[13:25:18.852]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:25:18.852]  
[13:25:18.860]  <debugvars>
[13:25:18.861]    // Pre-defined
[13:25:18.861]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:25:18.861]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:25:18.861]    __dp=0x00000000
[13:25:18.861]    __ap=0x00000000
[13:25:18.861]    __traceout=0x00000001      (SWO Trace)
[13:25:18.861]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:25:18.862]    __FlashAddr=0x00000000
[13:25:18.862]    __FlashLen=0x00000000
[13:25:18.862]    __FlashArg=0x00000000
[13:25:18.862]    __FlashOp=0x00000000
[13:25:18.862]    __Result=0x00000000
[13:25:18.862]    
[13:25:18.862]    // User-defined
[13:25:18.863]    DbgMCU_CR=0x00000007
[13:25:18.863]    DbgMCU_APB1_Fz=0x00000000
[13:25:18.863]    DbgMCU_APB2_Fz=0x00000000
[13:25:18.863]    TraceClk_Pin=0x00040002
[13:25:18.863]    TraceD0_Pin=0x00040003
[13:25:18.863]    TraceD1_Pin=0x00040004
[13:25:18.863]    TraceD2_Pin=0x00040005
[13:25:18.863]    TraceD3_Pin=0x00040006
[13:25:18.864]  </debugvars>
[13:25:18.864]  
[13:25:18.864]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:25:18.864]    <block atomic="false" info="">
[13:25:18.864]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:25:18.865]        // -> [traceSWO <= 0x00000001]
[13:25:18.865]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:25:18.865]        // -> [traceTPIU <= 0x00000000]
[13:25:18.865]    </block>
[13:25:18.865]    <control if="traceSWO" while="" timeout="0" info="">
[13:25:18.865]      // if-block "traceSWO"
[13:25:18.865]        // =>  TRUE
[13:25:18.866]      <block atomic="false" info="">
[13:25:18.895]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:25:18.912]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:25:18.914]            <block atomic="false" info="">
[13:25:18.916]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:25:18.917]                // -> [dbgmcu_val <= 0x00000000]
[13:25:18.917]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:25:18.917]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:25:18.917]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:25:18.918]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.918]                // -> [dbgmcu_val <= 0x00000007]
[13:25:18.918]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:25:18.918]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:25:18.919]              Sequence("ConfigureTraceSWOPin");
[13:25:18.919]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:25:18.919]                  <block atomic="false" info="">
[13:25:18.919]                    __var pin     = 0;
[13:25:18.919]                      // -> [pin <= 0x00000000]
[13:25:18.920]                    __var port    = 0;
[13:25:18.920]                      // -> [port <= 0x00000000]
[13:25:18.920]                    __var portAdr = 0;
[13:25:18.920]                      // -> [portAdr <= 0x00000000]
[13:25:18.920]                    __var pos     = 0;
[13:25:18.920]                      // -> [pos <= 0x00000000]
[13:25:18.920]                    __var SWO_Pin = 0x00010003;          // PB3
[13:25:18.921]                      // -> [SWO_Pin <= 0x00010003]
[13:25:18.921]                  </block>
[13:25:18.921]                  <block atomic="false" info="configure SWO">
[13:25:18.921]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:25:18.921]                      // -> [pin <= 0x00000003]
[13:25:18.921]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:25:18.922]                      // -> [port <= 0x00000001]
[13:25:18.922]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:25:18.922]                      // -> [portAdr <= 0x40020400]
[13:25:18.922]                    pos = pin * 2;
[13:25:18.922]                      // -> [pos <= 0x00000006]
[13:25:18.922]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:25:18.923]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.923]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.923]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:25:18.924]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.924]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.925]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:25:18.925]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.926]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.926]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:25:18.926]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.927]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.927]                  </block>
[13:25:18.927]                  <control if="pin <  8" while="" timeout="0" info="">
[13:25:18.927]                    // if-block "pin <  8"
[13:25:18.927]                      // =>  TRUE
[13:25:18.927]                    <block atomic="false" info="">
[13:25:18.927]                      pos = ((pin    ) & 7) * 4;
[13:25:18.928]                        // -> [pos <= 0x0000000C]
[13:25:18.928]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:25:18.928]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.929]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.929]                    </block>
[13:25:18.929]                    // end if-block "pin <  8"
[13:25:18.929]                  </control>
[13:25:18.929]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:25:18.929]                    // if-block "pin >= 8"
[13:25:18.929]                      // =>  FALSE
[13:25:18.930]                    // skip if-block "pin >= 8"
[13:25:18.930]                  </control>
[13:25:18.930]                </sequence>
[13:25:18.930]            </block>
[13:25:18.930]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:25:18.930]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:25:18.931]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:25:18.931]            </block>
[13:25:18.931]          </sequence>
[13:25:18.931]      </block>
[13:25:18.931]      // end if-block "traceSWO"
[13:25:18.931]    </control>
[13:25:18.932]    <control if="traceTPIU" while="" timeout="0" info="">
[13:25:18.932]      // if-block "traceTPIU"
[13:25:18.932]        // =>  FALSE
[13:25:18.932]      // skip if-block "traceTPIU"
[13:25:18.932]    </control>
[13:25:18.932]  </sequence>
[13:25:18.932]  
[13:26:08.394]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[13:26:08.394]  
[13:26:08.394]  <debugvars>
[13:26:08.395]    // Pre-defined
[13:26:08.395]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:26:08.395]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:26:08.395]    __dp=0x00000000
[13:26:08.395]    __ap=0x00000000
[13:26:08.395]    __traceout=0x00000001      (SWO Trace)
[13:26:08.395]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:26:08.396]    __FlashAddr=0x00000000
[13:26:08.396]    __FlashLen=0x00000000
[13:26:08.396]    __FlashArg=0x00000000
[13:26:08.396]    __FlashOp=0x00000000
[13:26:08.396]    __Result=0x00000000
[13:26:08.396]    
[13:26:08.396]    // User-defined
[13:26:08.397]    DbgMCU_CR=0x00000007
[13:26:08.397]    DbgMCU_APB1_Fz=0x00000000
[13:26:08.397]    DbgMCU_APB2_Fz=0x00000000
[13:26:08.397]    TraceClk_Pin=0x00040002
[13:26:08.397]    TraceD0_Pin=0x00040003
[13:26:08.397]    TraceD1_Pin=0x00040004
[13:26:08.397]    TraceD2_Pin=0x00040005
[13:26:08.397]    TraceD3_Pin=0x00040006
[13:26:08.398]  </debugvars>
[13:26:08.398]  
[13:26:08.398]  <sequence name="TraceStop" Pname="" disable="false" info="">
[13:26:08.398]    <block atomic="false" info="">
[13:26:08.398]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[13:26:08.398]        // -> [traceSWO <= 0x00000001]
[13:26:08.399]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[13:26:08.399]        // -> [traceTPIU <= 0x00000000]
[13:26:08.399]    </block>
[13:26:08.399]    <control if="traceSWO" while="" timeout="0" info="">
[13:26:08.399]      // if-block "traceSWO"
[13:26:08.399]        // =>  TRUE
[13:26:08.399]      <block atomic="false" info="">
[13:26:08.400]        Sequence("DisableTraceSWO");
[13:26:08.400]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[13:26:08.400]            <block atomic="false" info="">
[13:26:08.400]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:26:08.400]                // -> [dbgmcu_val <= 0x00000000]
[13:26:08.400]            </block>
[13:26:08.401]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[13:26:08.401]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[13:26:08.401]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:26:08.401]                // -> [dbgmcu_val <= 0x00000007]
[13:26:08.402]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[13:26:08.402]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:26:08.402]            </block>
[13:26:08.402]          </sequence>
[13:26:08.402]      </block>
[13:26:08.403]      // end if-block "traceSWO"
[13:26:08.403]    </control>
[13:26:08.403]    <control if="traceTPIU" while="" timeout="0" info="">
[13:26:08.403]      // if-block "traceTPIU"
[13:26:08.403]        // =>  FALSE
[13:26:08.403]      // skip if-block "traceTPIU"
[13:26:08.403]    </control>
[13:26:08.404]  </sequence>
[13:26:08.404]  
[13:26:17.910]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:26:17.910]  
[13:26:17.910]  <debugvars>
[13:26:17.910]    // Pre-defined
[13:26:17.911]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:26:17.911]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:26:17.911]    __dp=0x00000000
[13:26:17.911]    __ap=0x00000000
[13:26:17.911]    __traceout=0x00000001      (SWO Trace)
[13:26:17.911]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:26:17.912]    __FlashAddr=0x00000000
[13:26:17.912]    __FlashLen=0x00000000
[13:26:17.912]    __FlashArg=0x00000000
[13:26:17.912]    __FlashOp=0x00000000
[13:26:17.912]    __Result=0x00000000
[13:26:17.912]    
[13:26:17.912]    // User-defined
[13:26:17.912]    DbgMCU_CR=0x00000007
[13:26:17.913]    DbgMCU_APB1_Fz=0x00000000
[13:26:17.913]    DbgMCU_APB2_Fz=0x00000000
[13:26:17.913]    TraceClk_Pin=0x00040002
[13:26:17.913]    TraceD0_Pin=0x00040003
[13:26:17.913]    TraceD1_Pin=0x00040004
[13:26:17.913]    TraceD2_Pin=0x00040005
[13:26:17.914]    TraceD3_Pin=0x00040006
[13:26:17.914]  </debugvars>
[13:26:17.914]  
[13:26:17.914]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:26:17.914]    <block atomic="false" info="">
[13:26:17.914]      Sequence("CheckID");
[13:26:17.914]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:26:17.914]          <block atomic="false" info="">
[13:26:17.915]            __var pidr1 = 0;
[13:26:17.915]              // -> [pidr1 <= 0x00000000]
[13:26:17.915]            __var pidr2 = 0;
[13:26:17.915]              // -> [pidr2 <= 0x00000000]
[13:26:17.915]            __var jep106id = 0;
[13:26:17.915]              // -> [jep106id <= 0x00000000]
[13:26:17.916]            __var ROMTableBase = 0;
[13:26:17.916]              // -> [ROMTableBase <= 0x00000000]
[13:26:17.916]            __ap = 0;      // AHB-AP
[13:26:17.916]              // -> [__ap <= 0x00000000]
[13:26:17.916]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:26:17.916]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.917]              // -> [ROMTableBase <= 0xE00FD000]
[13:26:17.917]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:26:17.917]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.917]              // -> [pidr1 <= 0x00000004]
[13:26:17.918]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:26:17.918]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.918]              // -> [pidr2 <= 0x0000001A]
[13:26:17.918]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:26:17.919]              // -> [jep106id <= 0x00000020]
[13:26:17.919]          </block>
[13:26:17.919]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:26:17.919]            // if-block "jep106id != 0x20"
[13:26:17.919]              // =>  FALSE
[13:26:17.919]            // skip if-block "jep106id != 0x20"
[13:26:17.920]          </control>
[13:26:17.920]        </sequence>
[13:26:17.920]    </block>
[13:26:17.920]  </sequence>
[13:26:17.920]  
[13:26:17.935]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:26:17.935]  
[13:26:17.935]  <debugvars>
[13:26:17.936]    // Pre-defined
[13:26:17.936]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:26:17.936]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:26:17.936]    __dp=0x00000000
[13:26:17.936]    __ap=0x00000000
[13:26:17.936]    __traceout=0x00000001      (SWO Trace)
[13:26:17.936]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:26:17.937]    __FlashAddr=0x00000000
[13:26:17.937]    __FlashLen=0x00000000
[13:26:17.937]    __FlashArg=0x00000000
[13:26:17.937]    __FlashOp=0x00000000
[13:26:17.937]    __Result=0x00000000
[13:26:17.937]    
[13:26:17.937]    // User-defined
[13:26:17.937]    DbgMCU_CR=0x00000007
[13:26:17.938]    DbgMCU_APB1_Fz=0x00000000
[13:26:17.938]    DbgMCU_APB2_Fz=0x00000000
[13:26:17.938]    TraceClk_Pin=0x00040002
[13:26:17.938]    TraceD0_Pin=0x00040003
[13:26:17.938]    TraceD1_Pin=0x00040004
[13:26:17.938]    TraceD2_Pin=0x00040005
[13:26:17.938]    TraceD3_Pin=0x00040006
[13:26:17.939]  </debugvars>
[13:26:17.939]  
[13:26:17.939]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:26:17.939]    <block atomic="false" info="">
[13:26:17.939]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:26:17.940]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.940]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:26:17.940]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.941]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:26:17.941]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.941]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:26:17.942]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:26:17.942]    </block>
[13:26:17.942]  </sequence>
[13:26:17.942]  
[13:41:50.930]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:41:50.930]  
[13:41:51.027]  <debugvars>
[13:41:51.027]    // Pre-defined
[13:41:51.036]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:41:51.037]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:41:51.037]    __dp=0x00000000
[13:41:51.037]    __ap=0x00000000
[13:41:51.037]    __traceout=0x00000001      (SWO Trace)
[13:41:51.038]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:41:51.038]    __FlashAddr=0x00000000
[13:41:51.045]    __FlashLen=0x00000000
[13:41:51.052]    __FlashArg=0x00000000
[13:41:51.052]    __FlashOp=0x00000000
[13:41:51.053]    __Result=0x00000000
[13:41:51.061]    
[13:41:51.061]    // User-defined
[13:41:51.062]    DbgMCU_CR=0x00000007
[13:41:51.062]    DbgMCU_APB1_Fz=0x00000000
[13:41:51.062]    DbgMCU_APB2_Fz=0x00000000
[13:41:51.063]    TraceClk_Pin=0x00040002
[13:41:51.063]    TraceD0_Pin=0x00040003
[13:41:51.063]    TraceD1_Pin=0x00040004
[13:41:51.063]    TraceD2_Pin=0x00040005
[13:41:51.063]    TraceD3_Pin=0x00040006
[13:41:51.064]  </debugvars>
[13:41:51.064]  
[13:41:51.064]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:41:51.064]    <block atomic="false" info="">
[13:41:51.064]      Sequence("CheckID");
[13:41:51.064]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:41:51.065]          <block atomic="false" info="">
[13:41:51.065]            __var pidr1 = 0;
[13:41:51.065]              // -> [pidr1 <= 0x00000000]
[13:41:51.065]            __var pidr2 = 0;
[13:41:51.065]              // -> [pidr2 <= 0x00000000]
[13:41:51.066]            __var jep106id = 0;
[13:41:51.066]              // -> [jep106id <= 0x00000000]
[13:41:51.069]            __var ROMTableBase = 0;
[13:41:51.069]              // -> [ROMTableBase <= 0x00000000]
[13:41:51.069]            __ap = 0;      // AHB-AP
[13:41:51.070]              // -> [__ap <= 0x00000000]
[13:41:51.070]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:41:51.070]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.070]              // -> [ROMTableBase <= 0xE00FD000]
[13:41:51.070]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:41:51.071]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.071]              // -> [pidr1 <= 0x00000004]
[13:41:51.071]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:41:51.072]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.072]              // -> [pidr2 <= 0x0000001A]
[13:41:51.072]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:41:51.072]              // -> [jep106id <= 0x00000020]
[13:41:51.072]          </block>
[13:41:51.075]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:41:51.076]            // if-block "jep106id != 0x20"
[13:41:51.076]              // =>  FALSE
[13:41:51.076]            // skip if-block "jep106id != 0x20"
[13:41:51.076]          </control>
[13:41:51.076]        </sequence>
[13:41:51.077]    </block>
[13:41:51.077]  </sequence>
[13:41:51.077]  
[13:41:51.093]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:41:51.093]  
[13:41:51.093]  <debugvars>
[13:41:51.093]    // Pre-defined
[13:41:51.093]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:41:51.093]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:41:51.094]    __dp=0x00000000
[13:41:51.094]    __ap=0x00000000
[13:41:51.094]    __traceout=0x00000001      (SWO Trace)
[13:41:51.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:41:51.094]    __FlashAddr=0x00000000
[13:41:51.095]    __FlashLen=0x00000000
[13:41:51.095]    __FlashArg=0x00000000
[13:41:51.095]    __FlashOp=0x00000000
[13:41:51.095]    __Result=0x00000000
[13:41:51.095]    
[13:41:51.095]    // User-defined
[13:41:51.095]    DbgMCU_CR=0x00000007
[13:41:51.095]    DbgMCU_APB1_Fz=0x00000000
[13:41:51.096]    DbgMCU_APB2_Fz=0x00000000
[13:41:51.096]    TraceClk_Pin=0x00040002
[13:41:51.096]    TraceD0_Pin=0x00040003
[13:41:51.096]    TraceD1_Pin=0x00040004
[13:41:51.096]    TraceD2_Pin=0x00040005
[13:41:51.096]    TraceD3_Pin=0x00040006
[13:41:51.100]  </debugvars>
[13:41:51.101]  
[13:41:51.101]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:41:51.101]    <block atomic="false" info="">
[13:41:51.101]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:41:51.102]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.102]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:41:51.103]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.103]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:41:51.103]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.104]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:41:51.104]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:41:51.104]    </block>
[13:41:51.104]  </sequence>
[13:41:51.104]  
[13:42:22.778]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:42:22.778]  
[13:42:22.778]  <debugvars>
[13:42:22.778]    // Pre-defined
[13:42:22.778]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:22.778]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:42:22.779]    __dp=0x00000000
[13:42:22.779]    __ap=0x00000000
[13:42:22.779]    __traceout=0x00000001      (SWO Trace)
[13:42:22.779]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:22.779]    __FlashAddr=0x00000000
[13:42:22.780]    __FlashLen=0x00000000
[13:42:22.780]    __FlashArg=0x00000000
[13:42:22.780]    __FlashOp=0x00000000
[13:42:22.780]    __Result=0x00000000
[13:42:22.780]    
[13:42:22.780]    // User-defined
[13:42:22.781]    DbgMCU_CR=0x00000007
[13:42:22.781]    DbgMCU_APB1_Fz=0x00000000
[13:42:22.781]    DbgMCU_APB2_Fz=0x00000000
[13:42:22.781]    TraceClk_Pin=0x00040002
[13:42:22.781]    TraceD0_Pin=0x00040003
[13:42:22.781]    TraceD1_Pin=0x00040004
[13:42:22.781]    TraceD2_Pin=0x00040005
[13:42:22.782]    TraceD3_Pin=0x00040006
[13:42:22.782]  </debugvars>
[13:42:22.782]  
[13:42:22.782]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:42:22.782]    <block atomic="false" info="">
[13:42:22.782]      Sequence("CheckID");
[13:42:22.782]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:42:22.783]          <block atomic="false" info="">
[13:42:22.783]            __var pidr1 = 0;
[13:42:22.783]              // -> [pidr1 <= 0x00000000]
[13:42:22.783]            __var pidr2 = 0;
[13:42:22.783]              // -> [pidr2 <= 0x00000000]
[13:42:22.784]            __var jep106id = 0;
[13:42:22.784]              // -> [jep106id <= 0x00000000]
[13:42:22.784]            __var ROMTableBase = 0;
[13:42:22.784]              // -> [ROMTableBase <= 0x00000000]
[13:42:22.784]            __ap = 0;      // AHB-AP
[13:42:22.784]              // -> [__ap <= 0x00000000]
[13:42:22.784]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:42:22.785]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.785]              // -> [ROMTableBase <= 0xE00FD000]
[13:42:22.785]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:42:22.786]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.786]              // -> [pidr1 <= 0x00000004]
[13:42:22.786]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:42:22.787]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.787]              // -> [pidr2 <= 0x0000001A]
[13:42:22.787]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:42:22.787]              // -> [jep106id <= 0x00000020]
[13:42:22.787]          </block>
[13:42:22.787]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:42:22.788]            // if-block "jep106id != 0x20"
[13:42:22.788]              // =>  FALSE
[13:42:22.788]            // skip if-block "jep106id != 0x20"
[13:42:22.788]          </control>
[13:42:22.788]        </sequence>
[13:42:22.788]    </block>
[13:42:22.789]  </sequence>
[13:42:22.789]  
[13:42:22.804]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:42:22.804]  
[13:42:22.804]  <debugvars>
[13:42:22.804]    // Pre-defined
[13:42:22.804]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:22.804]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:42:22.804]    __dp=0x00000000
[13:42:22.804]    __ap=0x00000000
[13:42:22.805]    __traceout=0x00000001      (SWO Trace)
[13:42:22.805]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:22.805]    __FlashAddr=0x00000000
[13:42:22.805]    __FlashLen=0x00000000
[13:42:22.805]    __FlashArg=0x00000000
[13:42:22.805]    __FlashOp=0x00000000
[13:42:22.805]    __Result=0x00000000
[13:42:22.805]    
[13:42:22.805]    // User-defined
[13:42:22.806]    DbgMCU_CR=0x00000007
[13:42:22.806]    DbgMCU_APB1_Fz=0x00000000
[13:42:22.806]    DbgMCU_APB2_Fz=0x00000000
[13:42:22.806]    TraceClk_Pin=0x00040002
[13:42:22.806]    TraceD0_Pin=0x00040003
[13:42:22.806]    TraceD1_Pin=0x00040004
[13:42:22.806]    TraceD2_Pin=0x00040005
[13:42:22.806]    TraceD3_Pin=0x00040006
[13:42:22.807]  </debugvars>
[13:42:22.807]  
[13:42:22.807]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:42:22.807]    <block atomic="false" info="">
[13:42:22.807]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:42:22.808]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.808]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:42:22.809]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.809]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:42:22.810]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.810]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:42:22.810]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.810]    </block>
[13:42:22.810]  </sequence>
[13:42:22.811]  
[13:42:22.828]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[13:42:22.828]  
[13:42:22.828]  <debugvars>
[13:42:22.828]    // Pre-defined
[13:42:22.828]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:22.829]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:42:22.829]    __dp=0x00000000
[13:42:22.829]    __ap=0x00000000
[13:42:22.829]    __traceout=0x00000001      (SWO Trace)
[13:42:22.829]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:22.829]    __FlashAddr=0x00000000
[13:42:22.829]    __FlashLen=0x00000000
[13:42:22.829]    __FlashArg=0x00000000
[13:42:22.830]    __FlashOp=0x00000000
[13:42:22.830]    __Result=0x00000000
[13:42:22.830]    
[13:42:22.830]    // User-defined
[13:42:22.830]    DbgMCU_CR=0x00000007
[13:42:22.830]    DbgMCU_APB1_Fz=0x00000000
[13:42:22.830]    DbgMCU_APB2_Fz=0x00000000
[13:42:22.830]    TraceClk_Pin=0x00040002
[13:42:22.831]    TraceD0_Pin=0x00040003
[13:42:22.831]    TraceD1_Pin=0x00040004
[13:42:22.831]    TraceD2_Pin=0x00040005
[13:42:22.831]    TraceD3_Pin=0x00040006
[13:42:22.831]  </debugvars>
[13:42:22.831]  
[13:42:22.831]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:42:22.831]    <block atomic="false" info="">
[13:42:22.831]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:42:22.832]        // -> [traceSWO <= 0x00000001]
[13:42:22.832]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:42:22.832]        // -> [traceTPIU <= 0x00000000]
[13:42:22.832]    </block>
[13:42:22.832]    <control if="traceSWO" while="" timeout="0" info="">
[13:42:22.832]      // if-block "traceSWO"
[13:42:22.833]        // =>  TRUE
[13:42:22.833]      <block atomic="false" info="">
[13:42:22.833]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:42:22.833]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:42:22.833]            <block atomic="false" info="">
[13:42:22.833]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:42:22.833]                // -> [dbgmcu_val <= 0x00000000]
[13:42:22.833]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:42:22.834]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:42:22.834]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:42:22.834]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.834]                // -> [dbgmcu_val <= 0x00000007]
[13:42:22.835]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:42:22.835]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:42:22.835]              Sequence("ConfigureTraceSWOPin");
[13:42:22.835]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:42:22.835]                  <block atomic="false" info="">
[13:42:22.835]                    __var pin     = 0;
[13:42:22.835]                      // -> [pin <= 0x00000000]
[13:42:22.836]                    __var port    = 0;
[13:42:22.836]                      // -> [port <= 0x00000000]
[13:42:22.836]                    __var portAdr = 0;
[13:42:22.836]                      // -> [portAdr <= 0x00000000]
[13:42:22.836]                    __var pos     = 0;
[13:42:22.836]                      // -> [pos <= 0x00000000]
[13:42:22.836]                    __var SWO_Pin = 0x00010003;          // PB3
[13:42:22.837]                      // -> [SWO_Pin <= 0x00010003]
[13:42:22.837]                  </block>
[13:42:22.837]                  <block atomic="false" info="configure SWO">
[13:42:22.837]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:42:22.837]                      // -> [pin <= 0x00000003]
[13:42:22.837]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:42:22.837]                      // -> [port <= 0x00000001]
[13:42:22.837]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:42:22.837]                      // -> [portAdr <= 0x40020400]
[13:42:22.838]                    pos = pin * 2;
[13:42:22.838]                      // -> [pos <= 0x00000006]
[13:42:22.838]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:42:22.838]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.839]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.839]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:42:22.840]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.840]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.840]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:42:22.841]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.841]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.841]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:42:22.842]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.842]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.842]                  </block>
[13:42:22.842]                  <control if="pin <  8" while="" timeout="0" info="">
[13:42:22.842]                    // if-block "pin <  8"
[13:42:22.843]                      // =>  TRUE
[13:42:22.843]                    <block atomic="false" info="">
[13:42:22.843]                      pos = ((pin    ) & 7) * 4;
[13:42:22.843]                        // -> [pos <= 0x0000000C]
[13:42:22.843]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:42:22.844]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.844]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.844]                    </block>
[13:42:22.844]                    // end if-block "pin <  8"
[13:42:22.845]                  </control>
[13:42:22.845]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:42:22.845]                    // if-block "pin >= 8"
[13:42:22.845]                      // =>  FALSE
[13:42:22.845]                    // skip if-block "pin >= 8"
[13:42:22.845]                  </control>
[13:42:22.845]                </sequence>
[13:42:22.845]            </block>
[13:42:22.846]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:42:22.846]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:42:22.846]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.846]            </block>
[13:42:22.847]          </sequence>
[13:42:22.847]      </block>
[13:42:22.847]      // end if-block "traceSWO"
[13:42:22.847]    </control>
[13:42:22.847]    <control if="traceTPIU" while="" timeout="0" info="">
[13:42:22.847]      // if-block "traceTPIU"
[13:42:22.847]        // =>  FALSE
[13:42:22.847]      // skip if-block "traceTPIU"
[13:42:22.848]    </control>
[13:42:22.848]  </sequence>
[13:42:22.848]  
[13:42:22.852]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:42:22.852]  
[13:42:22.852]  <debugvars>
[13:42:22.852]    // Pre-defined
[13:42:22.852]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:22.852]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:42:22.852]    __dp=0x00000000
[13:42:22.853]    __ap=0x00000000
[13:42:22.853]    __traceout=0x00000001      (SWO Trace)
[13:42:22.853]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:22.853]    __FlashAddr=0x00000000
[13:42:22.853]    __FlashLen=0x00000000
[13:42:22.853]    __FlashArg=0x00000000
[13:42:22.853]    __FlashOp=0x00000000
[13:42:22.854]    __Result=0x00000000
[13:42:22.854]    
[13:42:22.854]    // User-defined
[13:42:22.854]    DbgMCU_CR=0x00000007
[13:42:22.854]    DbgMCU_APB1_Fz=0x00000000
[13:42:22.854]    DbgMCU_APB2_Fz=0x00000000
[13:42:22.854]    TraceClk_Pin=0x00040002
[13:42:22.854]    TraceD0_Pin=0x00040003
[13:42:22.855]    TraceD1_Pin=0x00040004
[13:42:22.855]    TraceD2_Pin=0x00040005
[13:42:22.855]    TraceD3_Pin=0x00040006
[13:42:22.855]  </debugvars>
[13:42:22.855]  
[13:42:22.855]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:42:22.855]    <block atomic="false" info="">
[13:42:22.855]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:42:22.856]        // -> [traceSWO <= 0x00000001]
[13:42:22.856]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:42:22.856]        // -> [traceTPIU <= 0x00000000]
[13:42:22.856]    </block>
[13:42:22.856]    <control if="traceSWO" while="" timeout="0" info="">
[13:42:22.856]      // if-block "traceSWO"
[13:42:22.857]        // =>  TRUE
[13:42:22.857]      <block atomic="false" info="">
[13:42:22.857]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:42:22.857]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:42:22.857]            <block atomic="false" info="">
[13:42:22.857]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:42:22.857]                // -> [dbgmcu_val <= 0x00000000]
[13:42:22.858]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:42:22.858]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:42:22.858]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:42:22.858]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.859]                // -> [dbgmcu_val <= 0x00000007]
[13:42:22.859]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:42:22.859]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:42:22.859]              Sequence("ConfigureTraceSWOPin");
[13:42:22.859]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:42:22.860]                  <block atomic="false" info="">
[13:42:22.860]                    __var pin     = 0;
[13:42:22.860]                      // -> [pin <= 0x00000000]
[13:42:22.860]                    __var port    = 0;
[13:42:22.860]                      // -> [port <= 0x00000000]
[13:42:22.860]                    __var portAdr = 0;
[13:42:22.860]                      // -> [portAdr <= 0x00000000]
[13:42:22.861]                    __var pos     = 0;
[13:42:22.861]                      // -> [pos <= 0x00000000]
[13:42:22.861]                    __var SWO_Pin = 0x00010003;          // PB3
[13:42:22.861]                      // -> [SWO_Pin <= 0x00010003]
[13:42:22.861]                  </block>
[13:42:22.861]                  <block atomic="false" info="configure SWO">
[13:42:22.861]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:42:22.862]                      // -> [pin <= 0x00000003]
[13:42:22.862]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:42:22.862]                      // -> [port <= 0x00000001]
[13:42:22.862]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:42:22.862]                      // -> [portAdr <= 0x40020400]
[13:42:22.862]                    pos = pin * 2;
[13:42:22.862]                      // -> [pos <= 0x00000006]
[13:42:22.862]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:42:22.863]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.863]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.864]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:42:22.864]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.865]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.865]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:42:22.865]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.866]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.866]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:42:22.867]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.867]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.867]                  </block>
[13:42:22.867]                  <control if="pin <  8" while="" timeout="0" info="">
[13:42:22.868]                    // if-block "pin <  8"
[13:42:22.868]                      // =>  TRUE
[13:42:22.868]                    <block atomic="false" info="">
[13:42:22.868]                      pos = ((pin    ) & 7) * 4;
[13:42:22.868]                        // -> [pos <= 0x0000000C]
[13:42:22.868]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:42:22.869]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.870]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.870]                    </block>
[13:42:22.870]                    // end if-block "pin <  8"
[13:42:22.871]                  </control>
[13:42:22.871]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:42:22.871]                    // if-block "pin >= 8"
[13:42:22.871]                      // =>  FALSE
[13:42:22.871]                    // skip if-block "pin >= 8"
[13:42:22.871]                  </control>
[13:42:22.871]                </sequence>
[13:42:22.872]            </block>
[13:42:22.872]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:42:22.872]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:42:22.872]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:22.873]            </block>
[13:42:22.873]          </sequence>
[13:42:22.873]      </block>
[13:42:22.873]      // end if-block "traceSWO"
[13:42:22.873]    </control>
[13:42:22.873]    <control if="traceTPIU" while="" timeout="0" info="">
[13:42:22.874]      // if-block "traceTPIU"
[13:42:22.874]        // =>  FALSE
[13:42:22.874]      // skip if-block "traceTPIU"
[13:42:22.874]    </control>
[13:42:22.874]  </sequence>
[13:42:22.874]  
[13:42:23.101]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:42:23.101]  
[13:42:23.101]  <debugvars>
[13:42:23.102]    // Pre-defined
[13:42:23.102]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:42:23.102]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:42:23.102]    __dp=0x00000000
[13:42:23.102]    __ap=0x00000000
[13:42:23.103]    __traceout=0x00000001      (SWO Trace)
[13:42:23.103]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:42:23.103]    __FlashAddr=0x00000000
[13:42:23.103]    __FlashLen=0x00000000
[13:42:23.103]    __FlashArg=0x00000000
[13:42:23.103]    __FlashOp=0x00000000
[13:42:23.103]    __Result=0x00000000
[13:42:23.104]    
[13:42:23.104]    // User-defined
[13:42:23.104]    DbgMCU_CR=0x00000007
[13:42:23.104]    DbgMCU_APB1_Fz=0x00000000
[13:42:23.104]    DbgMCU_APB2_Fz=0x00000000
[13:42:23.104]    TraceClk_Pin=0x00040002
[13:42:23.104]    TraceD0_Pin=0x00040003
[13:42:23.104]    TraceD1_Pin=0x00040004
[13:42:23.104]    TraceD2_Pin=0x00040005
[13:42:23.105]    TraceD3_Pin=0x00040006
[13:42:23.105]  </debugvars>
[13:42:23.105]  
[13:42:23.105]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:42:23.105]    <block atomic="false" info="">
[13:42:23.105]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:42:23.105]        // -> [traceSWO <= 0x00000001]
[13:42:23.106]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:42:23.106]        // -> [traceTPIU <= 0x00000000]
[13:42:23.106]    </block>
[13:42:23.106]    <control if="traceSWO" while="" timeout="0" info="">
[13:42:23.106]      // if-block "traceSWO"
[13:42:23.106]        // =>  TRUE
[13:42:23.106]      <block atomic="false" info="">
[13:42:23.106]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:42:23.107]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:42:23.107]            <block atomic="false" info="">
[13:42:23.107]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:42:23.107]                // -> [dbgmcu_val <= 0x00000000]
[13:42:23.107]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:42:23.107]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:42:23.107]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:42:23.108]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.108]                // -> [dbgmcu_val <= 0x00000007]
[13:42:23.108]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:42:23.108]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:42:23.109]              Sequence("ConfigureTraceSWOPin");
[13:42:23.109]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:42:23.109]                  <block atomic="false" info="">
[13:42:23.109]                    __var pin     = 0;
[13:42:23.109]                      // -> [pin <= 0x00000000]
[13:42:23.109]                    __var port    = 0;
[13:42:23.109]                      // -> [port <= 0x00000000]
[13:42:23.110]                    __var portAdr = 0;
[13:42:23.110]                      // -> [portAdr <= 0x00000000]
[13:42:23.110]                    __var pos     = 0;
[13:42:23.110]                      // -> [pos <= 0x00000000]
[13:42:23.110]                    __var SWO_Pin = 0x00010003;          // PB3
[13:42:23.110]                      // -> [SWO_Pin <= 0x00010003]
[13:42:23.110]                  </block>
[13:42:23.110]                  <block atomic="false" info="configure SWO">
[13:42:23.111]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:42:23.111]                      // -> [pin <= 0x00000003]
[13:42:23.111]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:42:23.111]                      // -> [port <= 0x00000001]
[13:42:23.111]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:42:23.111]                      // -> [portAdr <= 0x40020400]
[13:42:23.111]                    pos = pin * 2;
[13:42:23.112]                      // -> [pos <= 0x00000006]
[13:42:23.112]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:42:23.112]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.113]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.113]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:42:23.113]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.114]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.114]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:42:23.114]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.115]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.115]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:42:23.115]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.116]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.116]                  </block>
[13:42:23.116]                  <control if="pin <  8" while="" timeout="0" info="">
[13:42:23.116]                    // if-block "pin <  8"
[13:42:23.116]                      // =>  TRUE
[13:42:23.116]                    <block atomic="false" info="">
[13:42:23.116]                      pos = ((pin    ) & 7) * 4;
[13:42:23.117]                        // -> [pos <= 0x0000000C]
[13:42:23.117]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:42:23.117]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.118]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.118]                    </block>
[13:42:23.118]                    // end if-block "pin <  8"
[13:42:23.118]                  </control>
[13:42:23.118]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:42:23.118]                    // if-block "pin >= 8"
[13:42:23.118]                      // =>  FALSE
[13:42:23.119]                    // skip if-block "pin >= 8"
[13:42:23.119]                  </control>
[13:42:23.119]                </sequence>
[13:42:23.120]            </block>
[13:42:23.120]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:42:23.120]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:42:23.120]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:42:23.120]            </block>
[13:42:23.121]          </sequence>
[13:42:23.121]      </block>
[13:42:23.121]      // end if-block "traceSWO"
[13:42:23.121]    </control>
[13:42:23.121]    <control if="traceTPIU" while="" timeout="0" info="">
[13:42:23.121]      // if-block "traceTPIU"
[13:42:23.121]        // =>  FALSE
[13:42:23.121]      // skip if-block "traceTPIU"
[13:42:23.121]    </control>
[13:42:23.122]  </sequence>
[13:42:23.122]  
[13:45:12.612]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[13:45:12.612]  
[13:45:12.613]  <debugvars>
[13:45:12.614]    // Pre-defined
[13:45:12.614]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:45:12.614]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:45:12.614]    __dp=0x00000000
[13:45:12.614]    __ap=0x00000000
[13:45:12.614]    __traceout=0x00000001      (SWO Trace)
[13:45:12.614]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:45:12.614]    __FlashAddr=0x00000000
[13:45:12.614]    __FlashLen=0x00000000
[13:45:12.614]    __FlashArg=0x00000000
[13:45:12.615]    __FlashOp=0x00000000
[13:45:12.615]    __Result=0x00000000
[13:45:12.615]    
[13:45:12.615]    // User-defined
[13:45:12.615]    DbgMCU_CR=0x00000007
[13:45:12.615]    DbgMCU_APB1_Fz=0x00000000
[13:45:12.615]    DbgMCU_APB2_Fz=0x00000000
[13:45:12.615]    TraceClk_Pin=0x00040002
[13:45:12.616]    TraceD0_Pin=0x00040003
[13:45:12.616]    TraceD1_Pin=0x00040004
[13:45:12.616]    TraceD2_Pin=0x00040005
[13:45:12.616]    TraceD3_Pin=0x00040006
[13:45:12.616]  </debugvars>
[13:45:12.616]  
[13:45:12.616]  <sequence name="TraceStart" Pname="" disable="false" info="">
[13:45:12.616]    <block atomic="false" info="">
[13:45:12.617]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[13:45:12.617]        // -> [traceSWO <= 0x00000001]
[13:45:12.617]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[13:45:12.617]        // -> [traceTPIU <= 0x00000000]
[13:45:12.617]    </block>
[13:45:12.617]    <control if="traceSWO" while="" timeout="0" info="">
[13:45:12.617]      // if-block "traceSWO"
[13:45:12.617]        // =>  TRUE
[13:45:12.618]      <block atomic="false" info="">
[13:45:12.618]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[13:45:12.618]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[13:45:12.618]            <block atomic="false" info="">
[13:45:12.618]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:45:12.618]                // -> [dbgmcu_val <= 0x00000000]
[13:45:12.619]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[13:45:12.619]                // -> [dbgmcu_trace_val <= 0x00000000]
[13:45:12.619]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[13:45:12.619]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.619]                // -> [dbgmcu_val <= 0x00000007]
[13:45:12.619]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[13:45:12.620]                // -> [dbgmcu_trace_val <= 0x00000020]
[13:45:12.620]              Sequence("ConfigureTraceSWOPin");
[13:45:12.620]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[13:45:12.620]                  <block atomic="false" info="">
[13:45:12.620]                    __var pin     = 0;
[13:45:12.620]                      // -> [pin <= 0x00000000]
[13:45:12.621]                    __var port    = 0;
[13:45:12.621]                      // -> [port <= 0x00000000]
[13:45:12.621]                    __var portAdr = 0;
[13:45:12.621]                      // -> [portAdr <= 0x00000000]
[13:45:12.621]                    __var pos     = 0;
[13:45:12.621]                      // -> [pos <= 0x00000000]
[13:45:12.621]                    __var SWO_Pin = 0x00010003;          // PB3
[13:45:12.621]                      // -> [SWO_Pin <= 0x00010003]
[13:45:12.621]                  </block>
[13:45:12.622]                  <block atomic="false" info="configure SWO">
[13:45:12.622]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[13:45:12.622]                      // -> [pin <= 0x00000003]
[13:45:12.622]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[13:45:12.622]                      // -> [port <= 0x00000001]
[13:45:12.623]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[13:45:12.623]                      // -> [portAdr <= 0x40020400]
[13:45:12.623]                    pos = pin * 2;
[13:45:12.623]                      // -> [pos <= 0x00000006]
[13:45:12.623]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[13:45:12.624]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.624]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.624]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[13:45:12.625]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.625]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.625]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[13:45:12.626]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.626]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.626]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[13:45:12.627]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.627]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.627]                  </block>
[13:45:12.627]                  <control if="pin <  8" while="" timeout="0" info="">
[13:45:12.627]                    // if-block "pin <  8"
[13:45:12.628]                      // =>  TRUE
[13:45:12.628]                    <block atomic="false" info="">
[13:45:12.628]                      pos = ((pin    ) & 7) * 4;
[13:45:12.628]                        // -> [pos <= 0x0000000C]
[13:45:12.628]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[13:45:12.629]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.629]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.630]                    </block>
[13:45:12.630]                    // end if-block "pin <  8"
[13:45:12.631]                  </control>
[13:45:12.631]                  <control if="pin >= 8" while="" timeout="0" info="">
[13:45:12.631]                    // if-block "pin >= 8"
[13:45:12.631]                      // =>  FALSE
[13:45:12.631]                    // skip if-block "pin >= 8"
[13:45:12.631]                  </control>
[13:45:12.631]                </sequence>
[13:45:12.631]            </block>
[13:45:12.631]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[13:45:12.631]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[13:45:12.632]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[13:45:12.632]            </block>
[13:45:12.632]          </sequence>
[13:45:12.632]      </block>
[13:45:12.632]      // end if-block "traceSWO"
[13:45:12.632]    </control>
[13:45:12.632]    <control if="traceTPIU" while="" timeout="0" info="">
[13:45:12.632]      // if-block "traceTPIU"
[13:45:12.632]        // =>  FALSE
[13:45:12.633]      // skip if-block "traceTPIU"
[13:45:12.633]    </control>
[13:45:12.633]  </sequence>
[13:45:12.633]  
[13:48:55.182]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[13:48:55.182]  
[13:48:55.183]  <debugvars>
[13:48:55.183]    // Pre-defined
[13:48:55.183]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:48:55.183]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[13:48:55.183]    __dp=0x00000000
[13:48:55.183]    __ap=0x00000000
[13:48:55.183]    __traceout=0x00000001      (SWO Trace)
[13:48:55.184]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:48:55.184]    __FlashAddr=0x00000000
[13:48:55.184]    __FlashLen=0x00000000
[13:48:55.184]    __FlashArg=0x00000000
[13:48:55.184]    __FlashOp=0x00000000
[13:48:55.185]    __Result=0x00000000
[13:48:55.185]    
[13:48:55.185]    // User-defined
[13:48:55.185]    DbgMCU_CR=0x00000007
[13:48:55.185]    DbgMCU_APB1_Fz=0x00000000
[13:48:55.185]    DbgMCU_APB2_Fz=0x00000000
[13:48:55.185]    TraceClk_Pin=0x00040002
[13:48:55.185]    TraceD0_Pin=0x00040003
[13:48:55.185]    TraceD1_Pin=0x00040004
[13:48:55.186]    TraceD2_Pin=0x00040005
[13:48:55.186]    TraceD3_Pin=0x00040006
[13:48:55.186]  </debugvars>
[13:48:55.186]  
[13:48:55.186]  <sequence name="TraceStop" Pname="" disable="false" info="">
[13:48:55.186]    <block atomic="false" info="">
[13:48:55.187]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[13:48:55.187]        // -> [traceSWO <= 0x00000001]
[13:48:55.187]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[13:48:55.187]        // -> [traceTPIU <= 0x00000000]
[13:48:55.187]    </block>
[13:48:55.187]    <control if="traceSWO" while="" timeout="0" info="">
[13:48:55.187]      // if-block "traceSWO"
[13:48:55.187]        // =>  TRUE
[13:48:55.187]      <block atomic="false" info="">
[13:48:55.188]        Sequence("DisableTraceSWO");
[13:48:55.188]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[13:48:55.188]            <block atomic="false" info="">
[13:48:55.188]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[13:48:55.188]                // -> [dbgmcu_val <= 0x00000000]
[13:48:55.188]            </block>
[13:48:55.188]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[13:48:55.189]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[13:48:55.189]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[13:48:55.189]                // -> [dbgmcu_val <= 0x00000007]
[13:48:55.189]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[13:48:55.190]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:48:55.190]            </block>
[13:48:55.190]          </sequence>
[13:48:55.190]      </block>
[13:48:55.190]      // end if-block "traceSWO"
[13:48:55.191]    </control>
[13:48:55.191]    <control if="traceTPIU" while="" timeout="0" info="">
[13:48:55.191]      // if-block "traceTPIU"
[13:48:55.191]        // =>  FALSE
[13:48:55.191]      // skip if-block "traceTPIU"
[13:48:55.191]    </control>
[13:48:55.191]  </sequence>
[13:48:55.192]  
[13:53:12.961]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[13:53:12.961]  
[13:53:12.961]  <debugvars>
[13:53:12.962]    // Pre-defined
[13:53:12.962]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:12.962]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:53:12.962]    __dp=0x00000000
[13:53:12.962]    __ap=0x00000000
[13:53:12.963]    __traceout=0x00000001      (SWO Trace)
[13:53:12.963]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:12.963]    __FlashAddr=0x00000000
[13:53:12.963]    __FlashLen=0x00000000
[13:53:12.963]    __FlashArg=0x00000000
[13:53:12.963]    __FlashOp=0x00000000
[13:53:12.964]    __Result=0x00000000
[13:53:12.964]    
[13:53:12.964]    // User-defined
[13:53:12.966]    DbgMCU_CR=0x00000007
[13:53:12.966]    DbgMCU_APB1_Fz=0x00000000
[13:53:12.966]    DbgMCU_APB2_Fz=0x00000000
[13:53:12.966]    TraceClk_Pin=0x00040002
[13:53:12.967]    TraceD0_Pin=0x00040003
[13:53:12.967]    TraceD1_Pin=0x00040004
[13:53:12.967]    TraceD2_Pin=0x00040005
[13:53:12.967]    TraceD3_Pin=0x00040006
[13:53:12.967]  </debugvars>
[13:53:12.967]  
[13:53:12.967]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[13:53:12.968]    <block atomic="false" info="">
[13:53:12.968]      Sequence("CheckID");
[13:53:12.968]        <sequence name="CheckID" Pname="" disable="false" info="">
[13:53:12.968]          <block atomic="false" info="">
[13:53:12.968]            __var pidr1 = 0;
[13:53:12.984]              // -> [pidr1 <= 0x00000000]
[13:53:12.984]            __var pidr2 = 0;
[13:53:12.984]              // -> [pidr2 <= 0x00000000]
[13:53:12.985]            __var jep106id = 0;
[13:53:12.985]              // -> [jep106id <= 0x00000000]
[13:53:12.985]            __var ROMTableBase = 0;
[13:53:12.985]              // -> [ROMTableBase <= 0x00000000]
[13:53:13.000]            __ap = 0;      // AHB-AP
[13:53:13.000]              // -> [__ap <= 0x00000000]
[13:53:13.000]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[13:53:13.001]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.021]              // -> [ROMTableBase <= 0xE00FD000]
[13:53:13.038]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[13:53:13.040]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.042]              // -> [pidr1 <= 0x00000004]
[13:53:13.042]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[13:53:13.044]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.044]              // -> [pidr2 <= 0x0000001A]
[13:53:13.045]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[13:53:13.045]              // -> [jep106id <= 0x00000020]
[13:53:13.046]          </block>
[13:53:13.047]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[13:53:13.047]            // if-block "jep106id != 0x20"
[13:53:13.047]              // =>  FALSE
[13:53:13.048]            // skip if-block "jep106id != 0x20"
[13:53:13.048]          </control>
[13:53:13.049]        </sequence>
[13:53:13.049]    </block>
[13:53:13.050]  </sequence>
[13:53:13.050]  
[13:53:13.070]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[13:53:13.070]  
[13:53:13.071]  <debugvars>
[13:53:13.071]    // Pre-defined
[13:53:13.072]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[13:53:13.072]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[13:53:13.072]    __dp=0x00000000
[13:53:13.072]    __ap=0x00000000
[13:53:13.072]    __traceout=0x00000001      (SWO Trace)
[13:53:13.072]    __errorcontrol=0x00000000  (Skip Errors="False")
[13:53:13.073]    __FlashAddr=0x00000000
[13:53:13.073]    __FlashLen=0x00000000
[13:53:13.073]    __FlashArg=0x00000000
[13:53:13.073]    __FlashOp=0x00000000
[13:53:13.073]    __Result=0x00000000
[13:53:13.073]    
[13:53:13.073]    // User-defined
[13:53:13.074]    DbgMCU_CR=0x00000007
[13:53:13.074]    DbgMCU_APB1_Fz=0x00000000
[13:53:13.074]    DbgMCU_APB2_Fz=0x00000000
[13:53:13.087]    TraceClk_Pin=0x00040002
[13:53:13.088]    TraceD0_Pin=0x00040003
[13:53:13.088]    TraceD1_Pin=0x00040004
[13:53:13.088]    TraceD2_Pin=0x00040005
[13:53:13.089]    TraceD3_Pin=0x00040006
[13:53:13.089]  </debugvars>
[13:53:13.089]  
[13:53:13.089]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[13:53:13.089]    <block atomic="false" info="">
[13:53:13.089]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[13:53:13.104]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.104]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[13:53:13.105]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.105]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[13:53:13.105]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.105]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[13:53:13.106]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[13:53:13.106]    </block>
[13:53:13.106]  </sequence>
[13:53:13.107]  
[18:25:17.705]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:25:17.705]  
[18:25:17.706]  <debugvars>
[18:25:17.706]    // Pre-defined
[18:25:17.706]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:25:17.706]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:25:17.706]    __dp=0x00000000
[18:25:17.707]    __ap=0x00000000
[18:25:17.707]    __traceout=0x00000001      (SWO Trace)
[18:25:17.707]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:25:17.707]    __FlashAddr=0x00000000
[18:25:17.708]    __FlashLen=0x00000000
[18:25:17.708]    __FlashArg=0x00000000
[18:25:17.708]    __FlashOp=0x00000000
[18:25:17.708]    __Result=0x00000000
[18:25:17.709]    
[18:25:17.709]    // User-defined
[18:25:17.709]    DbgMCU_CR=0x00000007
[18:25:17.709]    DbgMCU_APB1_Fz=0x00000000
[18:25:17.709]    DbgMCU_APB2_Fz=0x00000000
[18:25:17.710]    TraceClk_Pin=0x00040002
[18:25:17.710]    TraceD0_Pin=0x00040003
[18:25:17.710]    TraceD1_Pin=0x00040004
[18:25:17.710]    TraceD2_Pin=0x00040005
[18:25:17.710]    TraceD3_Pin=0x00040006
[18:25:17.711]  </debugvars>
[18:25:17.711]  
[18:25:17.711]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:25:17.711]    <block atomic="false" info="">
[18:25:17.711]      Sequence("CheckID");
[18:25:17.712]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:25:17.712]          <block atomic="false" info="">
[18:25:17.712]            __var pidr1 = 0;
[18:25:17.712]              // -> [pidr1 <= 0x00000000]
[18:25:17.712]            __var pidr2 = 0;
[18:25:17.713]              // -> [pidr2 <= 0x00000000]
[18:25:17.713]            __var jep106id = 0;
[18:25:17.713]              // -> [jep106id <= 0x00000000]
[18:25:17.713]            __var ROMTableBase = 0;
[18:25:17.713]              // -> [ROMTableBase <= 0x00000000]
[18:25:17.714]            __ap = 0;      // AHB-AP
[18:25:17.714]              // -> [__ap <= 0x00000000]
[18:25:17.714]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:25:17.715]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.715]              // -> [ROMTableBase <= 0xE00FD000]
[18:25:17.715]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:25:17.715]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.716]              // -> [pidr1 <= 0x00000004]
[18:25:17.716]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:25:17.717]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.717]              // -> [pidr2 <= 0x0000001A]
[18:25:17.717]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:25:17.717]              // -> [jep106id <= 0x00000020]
[18:25:17.717]          </block>
[18:25:17.717]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:25:17.718]            // if-block "jep106id != 0x20"
[18:25:17.718]              // =>  FALSE
[18:25:17.718]            // skip if-block "jep106id != 0x20"
[18:25:17.718]          </control>
[18:25:17.718]        </sequence>
[18:25:17.719]    </block>
[18:25:17.719]  </sequence>
[18:25:17.719]  
[18:25:17.735]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:25:17.735]  
[18:25:17.735]  <debugvars>
[18:25:17.735]    // Pre-defined
[18:25:17.735]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:25:17.735]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:25:17.736]    __dp=0x00000000
[18:25:17.736]    __ap=0x00000000
[18:25:17.736]    __traceout=0x00000001      (SWO Trace)
[18:25:17.736]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:25:17.736]    __FlashAddr=0x00000000
[18:25:17.736]    __FlashLen=0x00000000
[18:25:17.736]    __FlashArg=0x00000000
[18:25:17.737]    __FlashOp=0x00000000
[18:25:17.737]    __Result=0x00000000
[18:25:17.737]    
[18:25:17.737]    // User-defined
[18:25:17.737]    DbgMCU_CR=0x00000007
[18:25:17.737]    DbgMCU_APB1_Fz=0x00000000
[18:25:17.737]    DbgMCU_APB2_Fz=0x00000000
[18:25:17.737]    TraceClk_Pin=0x00040002
[18:25:17.738]    TraceD0_Pin=0x00040003
[18:25:17.738]    TraceD1_Pin=0x00040004
[18:25:17.738]    TraceD2_Pin=0x00040005
[18:25:17.738]    TraceD3_Pin=0x00040006
[18:25:17.738]  </debugvars>
[18:25:17.738]  
[18:25:17.739]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:25:17.739]    <block atomic="false" info="">
[18:25:17.739]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:25:17.739]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.739]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:25:17.740]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.740]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:25:17.741]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.741]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:25:17.741]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:25:17.741]    </block>
[18:25:17.741]  </sequence>
[18:25:17.742]  
[18:30:00.334]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:30:00.334]  
[18:30:00.334]  <debugvars>
[18:30:00.334]    // Pre-defined
[18:30:00.334]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:30:00.335]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:30:00.335]    __dp=0x00000000
[18:30:00.335]    __ap=0x00000000
[18:30:00.335]    __traceout=0x00000001      (SWO Trace)
[18:30:00.335]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:30:00.336]    __FlashAddr=0x00000000
[18:30:00.336]    __FlashLen=0x00000000
[18:30:00.336]    __FlashArg=0x00000000
[18:30:00.336]    __FlashOp=0x00000000
[18:30:00.336]    __Result=0x00000000
[18:30:00.336]    
[18:30:00.336]    // User-defined
[18:30:00.337]    DbgMCU_CR=0x00000007
[18:30:00.337]    DbgMCU_APB1_Fz=0x00000000
[18:30:00.337]    DbgMCU_APB2_Fz=0x00000000
[18:30:00.337]    TraceClk_Pin=0x00040002
[18:30:00.337]    TraceD0_Pin=0x00040003
[18:30:00.338]    TraceD1_Pin=0x00040004
[18:30:00.338]    TraceD2_Pin=0x00040005
[18:30:00.338]    TraceD3_Pin=0x00040006
[18:30:00.338]  </debugvars>
[18:30:00.338]  
[18:30:00.338]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:30:00.339]    <block atomic="false" info="">
[18:30:00.339]      Sequence("CheckID");
[18:30:00.339]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:30:00.339]          <block atomic="false" info="">
[18:30:00.339]            __var pidr1 = 0;
[18:30:00.340]              // -> [pidr1 <= 0x00000000]
[18:30:00.340]            __var pidr2 = 0;
[18:30:00.340]              // -> [pidr2 <= 0x00000000]
[18:30:00.340]            __var jep106id = 0;
[18:30:00.340]              // -> [jep106id <= 0x00000000]
[18:30:00.340]            __var ROMTableBase = 0;
[18:30:00.341]              // -> [ROMTableBase <= 0x00000000]
[18:30:00.341]            __ap = 0;      // AHB-AP
[18:30:00.341]              // -> [__ap <= 0x00000000]
[18:30:00.341]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:30:00.342]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.342]              // -> [ROMTableBase <= 0xE00FD000]
[18:30:00.342]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:30:00.342]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.343]              // -> [pidr1 <= 0x00000004]
[18:30:00.343]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:30:00.343]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.343]              // -> [pidr2 <= 0x0000001A]
[18:30:00.344]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:30:00.344]              // -> [jep106id <= 0x00000020]
[18:30:00.344]          </block>
[18:30:00.344]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:30:00.344]            // if-block "jep106id != 0x20"
[18:30:00.345]              // =>  FALSE
[18:30:00.345]            // skip if-block "jep106id != 0x20"
[18:30:00.345]          </control>
[18:30:00.345]        </sequence>
[18:30:00.345]    </block>
[18:30:00.346]  </sequence>
[18:30:00.346]  
[18:30:00.361]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:30:00.361]  
[18:30:00.361]  <debugvars>
[18:30:00.361]    // Pre-defined
[18:30:00.362]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:30:00.362]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:30:00.362]    __dp=0x00000000
[18:30:00.362]    __ap=0x00000000
[18:30:00.362]    __traceout=0x00000001      (SWO Trace)
[18:30:00.363]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:30:00.363]    __FlashAddr=0x00000000
[18:30:00.363]    __FlashLen=0x00000000
[18:30:00.363]    __FlashArg=0x00000000
[18:30:00.363]    __FlashOp=0x00000000
[18:30:00.363]    __Result=0x00000000
[18:30:00.364]    
[18:30:00.364]    // User-defined
[18:30:00.364]    DbgMCU_CR=0x00000007
[18:30:00.364]    DbgMCU_APB1_Fz=0x00000000
[18:30:00.364]    DbgMCU_APB2_Fz=0x00000000
[18:30:00.364]    TraceClk_Pin=0x00040002
[18:30:00.364]    TraceD0_Pin=0x00040003
[18:30:00.365]    TraceD1_Pin=0x00040004
[18:30:00.365]    TraceD2_Pin=0x00040005
[18:30:00.365]    TraceD3_Pin=0x00040006
[18:30:00.365]  </debugvars>
[18:30:00.365]  
[18:30:00.366]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:30:00.366]    <block atomic="false" info="">
[18:30:00.366]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:30:00.367]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.367]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:30:00.367]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.367]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:30:00.368]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.368]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:30:00.369]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:30:00.369]    </block>
[18:30:00.369]  </sequence>
[18:30:00.369]  
[18:33:54.130]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:33:54.130]  
[18:33:54.130]  <debugvars>
[18:33:54.130]    // Pre-defined
[18:33:54.131]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:33:54.131]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:33:54.131]    __dp=0x00000000
[18:33:54.131]    __ap=0x00000000
[18:33:54.131]    __traceout=0x00000001      (SWO Trace)
[18:33:54.131]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:33:54.131]    __FlashAddr=0x00000000
[18:33:54.132]    __FlashLen=0x00000000
[18:33:54.132]    __FlashArg=0x00000000
[18:33:54.132]    __FlashOp=0x00000000
[18:33:54.132]    __Result=0x00000000
[18:33:54.132]    
[18:33:54.132]    // User-defined
[18:33:54.132]    DbgMCU_CR=0x00000007
[18:33:54.132]    DbgMCU_APB1_Fz=0x00000000
[18:33:54.133]    DbgMCU_APB2_Fz=0x00000000
[18:33:54.133]    TraceClk_Pin=0x00040002
[18:33:54.133]    TraceD0_Pin=0x00040003
[18:33:54.133]    TraceD1_Pin=0x00040004
[18:33:54.133]    TraceD2_Pin=0x00040005
[18:33:54.133]    TraceD3_Pin=0x00040006
[18:33:54.134]  </debugvars>
[18:33:54.134]  
[18:33:54.134]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:33:54.134]    <block atomic="false" info="">
[18:33:54.134]      Sequence("CheckID");
[18:33:54.134]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:33:54.135]          <block atomic="false" info="">
[18:33:54.135]            __var pidr1 = 0;
[18:33:54.135]              // -> [pidr1 <= 0x00000000]
[18:33:54.135]            __var pidr2 = 0;
[18:33:54.135]              // -> [pidr2 <= 0x00000000]
[18:33:54.135]            __var jep106id = 0;
[18:33:54.135]              // -> [jep106id <= 0x00000000]
[18:33:54.135]            __var ROMTableBase = 0;
[18:33:54.136]              // -> [ROMTableBase <= 0x00000000]
[18:33:54.136]            __ap = 0;      // AHB-AP
[18:33:54.136]              // -> [__ap <= 0x00000000]
[18:33:54.136]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:33:54.137]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.137]              // -> [ROMTableBase <= 0xE00FD000]
[18:33:54.137]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:33:54.137]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.137]              // -> [pidr1 <= 0x00000004]
[18:33:54.138]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:33:54.138]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.138]              // -> [pidr2 <= 0x0000001A]
[18:33:54.138]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:33:54.139]              // -> [jep106id <= 0x00000020]
[18:33:54.139]          </block>
[18:33:54.139]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:33:54.139]            // if-block "jep106id != 0x20"
[18:33:54.272]              // =>  FALSE
[18:33:54.272]            // skip if-block "jep106id != 0x20"
[18:33:54.272]          </control>
[18:33:54.272]        </sequence>
[18:33:54.273]    </block>
[18:33:54.273]  </sequence>
[18:33:54.273]  
[18:33:54.289]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:33:54.289]  
[18:33:54.292]  <debugvars>
[18:33:54.292]    // Pre-defined
[18:33:54.292]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:33:54.292]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:33:54.292]    __dp=0x00000000
[18:33:54.293]    __ap=0x00000000
[18:33:54.293]    __traceout=0x00000001      (SWO Trace)
[18:33:54.293]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:33:54.293]    __FlashAddr=0x00000000
[18:33:54.294]    __FlashLen=0x00000000
[18:33:54.294]    __FlashArg=0x00000000
[18:33:54.294]    __FlashOp=0x00000000
[18:33:54.295]    __Result=0x00000000
[18:33:54.295]    
[18:33:54.295]    // User-defined
[18:33:54.295]    DbgMCU_CR=0x00000007
[18:33:54.295]    DbgMCU_APB1_Fz=0x00000000
[18:33:54.295]    DbgMCU_APB2_Fz=0x00000000
[18:33:54.295]    TraceClk_Pin=0x00040002
[18:33:54.295]    TraceD0_Pin=0x00040003
[18:33:54.295]    TraceD1_Pin=0x00040004
[18:33:54.295]    TraceD2_Pin=0x00040005
[18:33:54.295]    TraceD3_Pin=0x00040006
[18:33:54.296]  </debugvars>
[18:33:54.296]  
[18:33:54.296]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:33:54.296]    <block atomic="false" info="">
[18:33:54.296]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:33:54.297]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.297]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:33:54.297]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.298]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:33:54.298]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.298]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:33:54.299]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:33:54.299]    </block>
[18:33:54.299]  </sequence>
[18:33:54.299]  
[18:34:48.288]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:34:48.288]  
[18:34:48.288]  <debugvars>
[18:34:48.289]    // Pre-defined
[18:34:48.289]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:34:48.289]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:34:48.290]    __dp=0x00000000
[18:34:48.290]    __ap=0x00000000
[18:34:48.290]    __traceout=0x00000001      (SWO Trace)
[18:34:48.290]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:34:48.291]    __FlashAddr=0x00000000
[18:34:48.291]    __FlashLen=0x00000000
[18:34:48.291]    __FlashArg=0x00000000
[18:34:48.291]    __FlashOp=0x00000000
[18:34:48.292]    __Result=0x00000000
[18:34:48.292]    
[18:34:48.292]    // User-defined
[18:34:48.292]    DbgMCU_CR=0x00000007
[18:34:48.292]    DbgMCU_APB1_Fz=0x00000000
[18:34:48.293]    DbgMCU_APB2_Fz=0x00000000
[18:34:48.293]    TraceClk_Pin=0x00040002
[18:34:48.293]    TraceD0_Pin=0x00040003
[18:34:48.293]    TraceD1_Pin=0x00040004
[18:34:48.293]    TraceD2_Pin=0x00040005
[18:34:48.294]    TraceD3_Pin=0x00040006
[18:34:48.294]  </debugvars>
[18:34:48.294]  
[18:34:48.294]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:34:48.294]    <block atomic="false" info="">
[18:34:48.295]      Sequence("CheckID");
[18:34:48.295]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:34:48.295]          <block atomic="false" info="">
[18:34:48.295]            __var pidr1 = 0;
[18:34:48.295]              // -> [pidr1 <= 0x00000000]
[18:34:48.296]            __var pidr2 = 0;
[18:34:48.296]              // -> [pidr2 <= 0x00000000]
[18:34:48.296]            __var jep106id = 0;
[18:34:48.296]              // -> [jep106id <= 0x00000000]
[18:34:48.296]            __var ROMTableBase = 0;
[18:34:48.296]              // -> [ROMTableBase <= 0x00000000]
[18:34:48.297]            __ap = 0;      // AHB-AP
[18:34:48.297]              // -> [__ap <= 0x00000000]
[18:34:48.297]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:34:48.297]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.298]              // -> [ROMTableBase <= 0xE00FD000]
[18:34:48.298]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:34:48.298]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.299]              // -> [pidr1 <= 0x00000004]
[18:34:48.299]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:34:48.299]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.299]              // -> [pidr2 <= 0x0000001A]
[18:34:48.300]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:34:48.300]              // -> [jep106id <= 0x00000020]
[18:34:48.300]          </block>
[18:34:48.300]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:34:48.300]            // if-block "jep106id != 0x20"
[18:34:48.300]              // =>  FALSE
[18:34:48.300]            // skip if-block "jep106id != 0x20"
[18:34:48.301]          </control>
[18:34:48.301]        </sequence>
[18:34:48.301]    </block>
[18:34:48.301]  </sequence>
[18:34:48.301]  
[18:34:48.316]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:34:48.316]  
[18:34:48.316]  <debugvars>
[18:34:48.316]    // Pre-defined
[18:34:48.316]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:34:48.316]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:34:48.317]    __dp=0x00000000
[18:34:48.317]    __ap=0x00000000
[18:34:48.317]    __traceout=0x00000001      (SWO Trace)
[18:34:48.317]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:34:48.318]    __FlashAddr=0x00000000
[18:34:48.318]    __FlashLen=0x00000000
[18:34:48.318]    __FlashArg=0x00000000
[18:34:48.318]    __FlashOp=0x00000000
[18:34:48.319]    __Result=0x00000000
[18:34:48.319]    
[18:34:48.319]    // User-defined
[18:34:48.319]    DbgMCU_CR=0x00000007
[18:34:48.319]    DbgMCU_APB1_Fz=0x00000000
[18:34:48.319]    DbgMCU_APB2_Fz=0x00000000
[18:34:48.320]    TraceClk_Pin=0x00040002
[18:34:48.320]    TraceD0_Pin=0x00040003
[18:34:48.320]    TraceD1_Pin=0x00040004
[18:34:48.320]    TraceD2_Pin=0x00040005
[18:34:48.320]    TraceD3_Pin=0x00040006
[18:34:48.321]  </debugvars>
[18:34:48.321]  
[18:34:48.321]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:34:48.321]    <block atomic="false" info="">
[18:34:48.322]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:34:48.322]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.322]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:34:48.323]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.323]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:34:48.324]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.324]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:34:48.324]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:34:48.324]    </block>
[18:34:48.324]  </sequence>
[18:34:48.325]  
[18:37:03.291]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:37:03.291]  
[18:37:03.291]  <debugvars>
[18:37:03.292]    // Pre-defined
[18:37:03.292]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:37:03.292]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:37:03.292]    __dp=0x00000000
[18:37:03.292]    __ap=0x00000000
[18:37:03.293]    __traceout=0x00000001      (SWO Trace)
[18:37:03.293]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:37:03.293]    __FlashAddr=0x00000000
[18:37:03.293]    __FlashLen=0x00000000
[18:37:03.293]    __FlashArg=0x00000000
[18:37:03.294]    __FlashOp=0x00000000
[18:37:03.294]    __Result=0x00000000
[18:37:03.294]    
[18:37:03.294]    // User-defined
[18:37:03.294]    DbgMCU_CR=0x00000007
[18:37:03.294]    DbgMCU_APB1_Fz=0x00000000
[18:37:03.294]    DbgMCU_APB2_Fz=0x00000000
[18:37:03.295]    TraceClk_Pin=0x00040002
[18:37:03.295]    TraceD0_Pin=0x00040003
[18:37:03.295]    TraceD1_Pin=0x00040004
[18:37:03.295]    TraceD2_Pin=0x00040005
[18:37:03.295]    TraceD3_Pin=0x00040006
[18:37:03.295]  </debugvars>
[18:37:03.296]  
[18:37:03.296]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:37:03.296]    <block atomic="false" info="">
[18:37:03.296]      Sequence("CheckID");
[18:37:03.296]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:37:03.297]          <block atomic="false" info="">
[18:37:03.297]            __var pidr1 = 0;
[18:37:03.297]              // -> [pidr1 <= 0x00000000]
[18:37:03.297]            __var pidr2 = 0;
[18:37:03.297]              // -> [pidr2 <= 0x00000000]
[18:37:03.297]            __var jep106id = 0;
[18:37:03.298]              // -> [jep106id <= 0x00000000]
[18:37:03.298]            __var ROMTableBase = 0;
[18:37:03.298]              // -> [ROMTableBase <= 0x00000000]
[18:37:03.298]            __ap = 0;      // AHB-AP
[18:37:03.298]              // -> [__ap <= 0x00000000]
[18:37:03.299]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:37:03.299]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.299]              // -> [ROMTableBase <= 0xE00FD000]
[18:37:03.299]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:37:03.300]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.300]              // -> [pidr1 <= 0x00000004]
[18:37:03.300]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:37:03.301]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.301]              // -> [pidr2 <= 0x0000001A]
[18:37:03.301]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:37:03.301]              // -> [jep106id <= 0x00000020]
[18:37:03.301]          </block>
[18:37:03.301]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:37:03.301]            // if-block "jep106id != 0x20"
[18:37:03.301]              // =>  FALSE
[18:37:03.301]            // skip if-block "jep106id != 0x20"
[18:37:03.302]          </control>
[18:37:03.302]        </sequence>
[18:37:03.302]    </block>
[18:37:03.302]  </sequence>
[18:37:03.302]  
[18:37:03.317]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:37:03.317]  
[18:37:03.317]  <debugvars>
[18:37:03.318]    // Pre-defined
[18:37:03.318]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:37:03.318]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[18:37:03.318]    __dp=0x00000000
[18:37:03.318]    __ap=0x00000000
[18:37:03.319]    __traceout=0x00000001      (SWO Trace)
[18:37:03.319]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:37:03.319]    __FlashAddr=0x00000000
[18:37:03.319]    __FlashLen=0x00000000
[18:37:03.319]    __FlashArg=0x00000000
[18:37:03.319]    __FlashOp=0x00000000
[18:37:03.320]    __Result=0x00000000
[18:37:03.320]    
[18:37:03.320]    // User-defined
[18:37:03.320]    DbgMCU_CR=0x00000007
[18:37:03.320]    DbgMCU_APB1_Fz=0x00000000
[18:37:03.320]    DbgMCU_APB2_Fz=0x00000000
[18:37:03.320]    TraceClk_Pin=0x00040002
[18:37:03.320]    TraceD0_Pin=0x00040003
[18:37:03.321]    TraceD1_Pin=0x00040004
[18:37:03.321]    TraceD2_Pin=0x00040005
[18:37:03.321]    TraceD3_Pin=0x00040006
[18:37:03.321]  </debugvars>
[18:37:03.321]  
[18:37:03.321]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:37:03.321]    <block atomic="false" info="">
[18:37:03.321]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:37:03.322]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.322]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:37:03.323]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.323]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:37:03.323]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.323]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:37:03.324]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:37:03.324]    </block>
[18:37:03.324]  </sequence>
[18:37:03.324]  
[19:22:40.083]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:22:40.083]  
[19:22:40.084]  <debugvars>
[19:22:40.084]    // Pre-defined
[19:22:40.084]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:22:40.084]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:22:40.085]    __dp=0x00000000
[19:22:40.085]    __ap=0x00000000
[19:22:40.085]    __traceout=0x00000001      (SWO Trace)
[19:22:40.085]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:22:40.085]    __FlashAddr=0x00000000
[19:22:40.086]    __FlashLen=0x00000000
[19:22:40.086]    __FlashArg=0x00000000
[19:22:40.086]    __FlashOp=0x00000000
[19:22:40.086]    __Result=0x00000000
[19:22:40.087]    
[19:22:40.087]    // User-defined
[19:22:40.087]    DbgMCU_CR=0x00000007
[19:22:40.087]    DbgMCU_APB1_Fz=0x00000000
[19:22:40.087]    DbgMCU_APB2_Fz=0x00000000
[19:22:40.087]    TraceClk_Pin=0x00040002
[19:22:40.087]    TraceD0_Pin=0x00040003
[19:22:40.087]    TraceD1_Pin=0x00040004
[19:22:40.088]    TraceD2_Pin=0x00040005
[19:22:40.088]    TraceD3_Pin=0x00040006
[19:22:40.088]  </debugvars>
[19:22:40.088]  
[19:22:40.088]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:22:40.088]    <block atomic="false" info="">
[19:22:40.089]      Sequence("CheckID");
[19:22:40.089]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:22:40.089]          <block atomic="false" info="">
[19:22:40.089]            __var pidr1 = 0;
[19:22:40.089]              // -> [pidr1 <= 0x00000000]
[19:22:40.089]            __var pidr2 = 0;
[19:22:40.090]              // -> [pidr2 <= 0x00000000]
[19:22:40.090]            __var jep106id = 0;
[19:22:40.090]              // -> [jep106id <= 0x00000000]
[19:22:40.090]            __var ROMTableBase = 0;
[19:22:40.090]              // -> [ROMTableBase <= 0x00000000]
[19:22:40.090]            __ap = 0;      // AHB-AP
[19:22:40.090]              // -> [__ap <= 0x00000000]
[19:22:40.090]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:22:40.091]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.091]              // -> [ROMTableBase <= 0xE00FD000]
[19:22:40.091]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:22:40.092]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.092]              // -> [pidr1 <= 0x00000004]
[19:22:40.092]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:22:40.093]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.093]              // -> [pidr2 <= 0x0000001A]
[19:22:40.093]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:22:40.093]              // -> [jep106id <= 0x00000020]
[19:22:40.093]          </block>
[19:22:40.093]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:22:40.094]            // if-block "jep106id != 0x20"
[19:22:40.094]              // =>  FALSE
[19:22:40.094]            // skip if-block "jep106id != 0x20"
[19:22:40.094]          </control>
[19:22:40.094]        </sequence>
[19:22:40.094]    </block>
[19:22:40.094]  </sequence>
[19:22:40.094]  
[19:22:40.109]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:22:40.109]  
[19:22:40.109]  <debugvars>
[19:22:40.109]    // Pre-defined
[19:22:40.109]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:22:40.110]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:22:40.110]    __dp=0x00000000
[19:22:40.110]    __ap=0x00000000
[19:22:40.110]    __traceout=0x00000001      (SWO Trace)
[19:22:40.110]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:22:40.111]    __FlashAddr=0x00000000
[19:22:40.111]    __FlashLen=0x00000000
[19:22:40.111]    __FlashArg=0x00000000
[19:22:40.111]    __FlashOp=0x00000000
[19:22:40.111]    __Result=0x00000000
[19:22:40.112]    
[19:22:40.112]    // User-defined
[19:22:40.112]    DbgMCU_CR=0x00000007
[19:22:40.112]    DbgMCU_APB1_Fz=0x00000000
[19:22:40.112]    DbgMCU_APB2_Fz=0x00000000
[19:22:40.112]    TraceClk_Pin=0x00040002
[19:22:40.113]    TraceD0_Pin=0x00040003
[19:22:40.113]    TraceD1_Pin=0x00040004
[19:22:40.113]    TraceD2_Pin=0x00040005
[19:22:40.113]    TraceD3_Pin=0x00040006
[19:22:40.113]  </debugvars>
[19:22:40.113]  
[19:22:40.114]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:22:40.114]    <block atomic="false" info="">
[19:22:40.114]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:22:40.115]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.115]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:22:40.115]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.116]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:22:40.116]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.116]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:22:40.117]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:22:40.117]    </block>
[19:22:40.117]  </sequence>
[19:22:40.117]  
[19:23:11.656]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:23:11.656]  
[19:23:11.656]  <debugvars>
[19:23:11.656]    // Pre-defined
[19:23:11.656]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:11.656]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:11.657]    __dp=0x00000000
[19:23:11.657]    __ap=0x00000000
[19:23:11.657]    __traceout=0x00000001      (SWO Trace)
[19:23:11.658]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:11.658]    __FlashAddr=0x00000000
[19:23:11.658]    __FlashLen=0x00000000
[19:23:11.658]    __FlashArg=0x00000000
[19:23:11.658]    __FlashOp=0x00000000
[19:23:11.659]    __Result=0x00000000
[19:23:11.659]    
[19:23:11.659]    // User-defined
[19:23:11.659]    DbgMCU_CR=0x00000007
[19:23:11.659]    DbgMCU_APB1_Fz=0x00000000
[19:23:11.660]    DbgMCU_APB2_Fz=0x00000000
[19:23:11.660]    TraceClk_Pin=0x00040002
[19:23:11.660]    TraceD0_Pin=0x00040003
[19:23:11.660]    TraceD1_Pin=0x00040004
[19:23:11.661]    TraceD2_Pin=0x00040005
[19:23:11.661]    TraceD3_Pin=0x00040006
[19:23:11.661]  </debugvars>
[19:23:11.661]  
[19:23:11.662]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:23:11.662]    <block atomic="false" info="">
[19:23:11.662]      Sequence("CheckID");
[19:23:11.662]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:23:11.662]          <block atomic="false" info="">
[19:23:11.662]            __var pidr1 = 0;
[19:23:11.663]              // -> [pidr1 <= 0x00000000]
[19:23:11.663]            __var pidr2 = 0;
[19:23:11.663]              // -> [pidr2 <= 0x00000000]
[19:23:11.663]            __var jep106id = 0;
[19:23:11.663]              // -> [jep106id <= 0x00000000]
[19:23:11.663]            __var ROMTableBase = 0;
[19:23:11.664]              // -> [ROMTableBase <= 0x00000000]
[19:23:11.664]            __ap = 0;      // AHB-AP
[19:23:11.664]              // -> [__ap <= 0x00000000]
[19:23:11.664]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:23:11.664]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.665]              // -> [ROMTableBase <= 0xE00FD000]
[19:23:11.665]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:23:11.665]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.665]              // -> [pidr1 <= 0x00000004]
[19:23:11.665]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:23:11.666]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.666]              // -> [pidr2 <= 0x0000001A]
[19:23:11.666]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:23:11.666]              // -> [jep106id <= 0x00000020]
[19:23:11.667]          </block>
[19:23:11.667]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:23:11.667]            // if-block "jep106id != 0x20"
[19:23:11.667]              // =>  FALSE
[19:23:11.667]            // skip if-block "jep106id != 0x20"
[19:23:11.667]          </control>
[19:23:11.668]        </sequence>
[19:23:11.668]    </block>
[19:23:11.668]  </sequence>
[19:23:11.668]  
[19:23:11.683]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:23:11.683]  
[19:23:11.683]  <debugvars>
[19:23:11.683]    // Pre-defined
[19:23:11.684]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:11.684]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:11.684]    __dp=0x00000000
[19:23:11.684]    __ap=0x00000000
[19:23:11.684]    __traceout=0x00000001      (SWO Trace)
[19:23:11.685]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:11.685]    __FlashAddr=0x00000000
[19:23:11.685]    __FlashLen=0x00000000
[19:23:11.685]    __FlashArg=0x00000000
[19:23:11.685]    __FlashOp=0x00000000
[19:23:11.685]    __Result=0x00000000
[19:23:11.686]    
[19:23:11.686]    // User-defined
[19:23:11.686]    DbgMCU_CR=0x00000007
[19:23:11.686]    DbgMCU_APB1_Fz=0x00000000
[19:23:11.686]    DbgMCU_APB2_Fz=0x00000000
[19:23:11.686]    TraceClk_Pin=0x00040002
[19:23:11.687]    TraceD0_Pin=0x00040003
[19:23:11.687]    TraceD1_Pin=0x00040004
[19:23:11.687]    TraceD2_Pin=0x00040005
[19:23:11.687]    TraceD3_Pin=0x00040006
[19:23:11.687]  </debugvars>
[19:23:11.688]  
[19:23:11.688]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:23:11.688]    <block atomic="false" info="">
[19:23:11.688]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:23:11.689]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.689]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:23:11.690]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.690]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:23:11.690]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.691]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:23:11.691]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.691]    </block>
[19:23:11.692]  </sequence>
[19:23:11.692]  
[19:23:11.708]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:23:11.708]  
[19:23:11.709]  <debugvars>
[19:23:11.709]    // Pre-defined
[19:23:11.709]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:11.709]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:11.709]    __dp=0x00000000
[19:23:11.710]    __ap=0x00000000
[19:23:11.710]    __traceout=0x00000001      (SWO Trace)
[19:23:11.710]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:11.710]    __FlashAddr=0x00000000
[19:23:11.710]    __FlashLen=0x00000000
[19:23:11.711]    __FlashArg=0x00000000
[19:23:11.711]    __FlashOp=0x00000000
[19:23:11.711]    __Result=0x00000000
[19:23:11.711]    
[19:23:11.711]    // User-defined
[19:23:11.711]    DbgMCU_CR=0x00000007
[19:23:11.712]    DbgMCU_APB1_Fz=0x00000000
[19:23:11.712]    DbgMCU_APB2_Fz=0x00000000
[19:23:11.712]    TraceClk_Pin=0x00040002
[19:23:11.712]    TraceD0_Pin=0x00040003
[19:23:11.712]    TraceD1_Pin=0x00040004
[19:23:11.713]    TraceD2_Pin=0x00040005
[19:23:11.713]    TraceD3_Pin=0x00040006
[19:23:11.713]  </debugvars>
[19:23:11.713]  
[19:23:11.713]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:23:11.713]    <block atomic="false" info="">
[19:23:11.714]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:23:11.714]        // -> [traceSWO <= 0x00000001]
[19:23:11.714]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:23:11.714]        // -> [traceTPIU <= 0x00000000]
[19:23:11.714]    </block>
[19:23:11.715]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:11.715]      // if-block "traceSWO"
[19:23:11.715]        // =>  TRUE
[19:23:11.715]      <block atomic="false" info="">
[19:23:11.715]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:23:11.715]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:23:11.716]            <block atomic="false" info="">
[19:23:11.716]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:11.716]                // -> [dbgmcu_val <= 0x00000000]
[19:23:11.716]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:23:11.716]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:23:11.716]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:23:11.717]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.717]                // -> [dbgmcu_val <= 0x00000007]
[19:23:11.717]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:23:11.717]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:23:11.718]              Sequence("ConfigureTraceSWOPin");
[19:23:11.718]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:23:11.718]                  <block atomic="false" info="">
[19:23:11.718]                    __var pin     = 0;
[19:23:11.718]                      // -> [pin <= 0x00000000]
[19:23:11.719]                    __var port    = 0;
[19:23:11.719]                      // -> [port <= 0x00000000]
[19:23:11.719]                    __var portAdr = 0;
[19:23:11.719]                      // -> [portAdr <= 0x00000000]
[19:23:11.719]                    __var pos     = 0;
[19:23:11.720]                      // -> [pos <= 0x00000000]
[19:23:11.720]                    __var SWO_Pin = 0x00010003;          // PB3
[19:23:11.720]                      // -> [SWO_Pin <= 0x00010003]
[19:23:11.720]                  </block>
[19:23:11.720]                  <block atomic="false" info="configure SWO">
[19:23:11.720]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:23:11.721]                      // -> [pin <= 0x00000003]
[19:23:11.721]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:23:11.721]                      // -> [port <= 0x00000001]
[19:23:11.721]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:23:11.721]                      // -> [portAdr <= 0x40020400]
[19:23:11.721]                    pos = pin * 2;
[19:23:11.722]                      // -> [pos <= 0x00000006]
[19:23:11.722]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:23:11.722]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.723]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.723]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:23:11.723]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.724]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.724]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:23:11.724]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.725]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.725]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:23:11.725]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.726]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.726]                  </block>
[19:23:11.726]                  <control if="pin <  8" while="" timeout="0" info="">
[19:23:11.726]                    // if-block "pin <  8"
[19:23:11.726]                      // =>  TRUE
[19:23:11.727]                    <block atomic="false" info="">
[19:23:11.727]                      pos = ((pin    ) & 7) * 4;
[19:23:11.727]                        // -> [pos <= 0x0000000C]
[19:23:11.727]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:23:11.727]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.728]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.728]                    </block>
[19:23:11.728]                    // end if-block "pin <  8"
[19:23:11.728]                  </control>
[19:23:11.728]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:23:11.728]                    // if-block "pin >= 8"
[19:23:11.728]                      // =>  FALSE
[19:23:11.729]                    // skip if-block "pin >= 8"
[19:23:11.729]                  </control>
[19:23:11.729]                </sequence>
[19:23:11.729]            </block>
[19:23:11.729]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:11.729]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:23:11.730]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.730]            </block>
[19:23:11.730]          </sequence>
[19:23:11.730]      </block>
[19:23:11.730]      // end if-block "traceSWO"
[19:23:11.730]    </control>
[19:23:11.730]    <control if="traceTPIU" while="" timeout="0" info="">
[19:23:11.730]      // if-block "traceTPIU"
[19:23:11.730]        // =>  FALSE
[19:23:11.731]      // skip if-block "traceTPIU"
[19:23:11.731]    </control>
[19:23:11.731]  </sequence>
[19:23:11.731]  
[19:23:11.735]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:23:11.735]  
[19:23:11.735]  <debugvars>
[19:23:11.735]    // Pre-defined
[19:23:11.735]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:11.735]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:11.735]    __dp=0x00000000
[19:23:11.736]    __ap=0x00000000
[19:23:11.736]    __traceout=0x00000001      (SWO Trace)
[19:23:11.736]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:11.736]    __FlashAddr=0x00000000
[19:23:11.736]    __FlashLen=0x00000000
[19:23:11.737]    __FlashArg=0x00000000
[19:23:11.737]    __FlashOp=0x00000000
[19:23:11.737]    __Result=0x00000000
[19:23:11.737]    
[19:23:11.737]    // User-defined
[19:23:11.737]    DbgMCU_CR=0x00000007
[19:23:11.737]    DbgMCU_APB1_Fz=0x00000000
[19:23:11.738]    DbgMCU_APB2_Fz=0x00000000
[19:23:11.738]    TraceClk_Pin=0x00040002
[19:23:11.738]    TraceD0_Pin=0x00040003
[19:23:11.738]    TraceD1_Pin=0x00040004
[19:23:11.738]    TraceD2_Pin=0x00040005
[19:23:11.739]    TraceD3_Pin=0x00040006
[19:23:11.739]  </debugvars>
[19:23:11.739]  
[19:23:11.739]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:23:11.739]    <block atomic="false" info="">
[19:23:11.739]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:23:11.739]        // -> [traceSWO <= 0x00000001]
[19:23:11.740]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:23:11.740]        // -> [traceTPIU <= 0x00000000]
[19:23:11.740]    </block>
[19:23:11.740]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:11.740]      // if-block "traceSWO"
[19:23:11.740]        // =>  TRUE
[19:23:11.741]      <block atomic="false" info="">
[19:23:11.741]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:23:11.741]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:23:11.741]            <block atomic="false" info="">
[19:23:11.741]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:11.741]                // -> [dbgmcu_val <= 0x00000000]
[19:23:11.741]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:23:11.742]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:23:11.742]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:23:11.742]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.742]                // -> [dbgmcu_val <= 0x00000007]
[19:23:11.742]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:23:11.743]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:23:11.743]              Sequence("ConfigureTraceSWOPin");
[19:23:11.743]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:23:11.743]                  <block atomic="false" info="">
[19:23:11.743]                    __var pin     = 0;
[19:23:11.743]                      // -> [pin <= 0x00000000]
[19:23:11.744]                    __var port    = 0;
[19:23:11.744]                      // -> [port <= 0x00000000]
[19:23:11.744]                    __var portAdr = 0;
[19:23:11.744]                      // -> [portAdr <= 0x00000000]
[19:23:11.744]                    __var pos     = 0;
[19:23:11.744]                      // -> [pos <= 0x00000000]
[19:23:11.744]                    __var SWO_Pin = 0x00010003;          // PB3
[19:23:11.744]                      // -> [SWO_Pin <= 0x00010003]
[19:23:11.745]                  </block>
[19:23:11.745]                  <block atomic="false" info="configure SWO">
[19:23:11.745]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:23:11.745]                      // -> [pin <= 0x00000003]
[19:23:11.745]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:23:11.745]                      // -> [port <= 0x00000001]
[19:23:11.745]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:23:11.745]                      // -> [portAdr <= 0x40020400]
[19:23:11.746]                    pos = pin * 2;
[19:23:11.746]                      // -> [pos <= 0x00000006]
[19:23:11.746]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:23:11.746]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.747]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.747]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:23:11.747]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.748]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.748]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:23:11.748]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.749]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.749]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:23:11.749]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.750]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.750]                  </block>
[19:23:11.750]                  <control if="pin <  8" while="" timeout="0" info="">
[19:23:11.750]                    // if-block "pin <  8"
[19:23:11.750]                      // =>  TRUE
[19:23:11.750]                    <block atomic="false" info="">
[19:23:11.750]                      pos = ((pin    ) & 7) * 4;
[19:23:11.751]                        // -> [pos <= 0x0000000C]
[19:23:11.751]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:23:11.752]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.752]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.752]                    </block>
[19:23:11.752]                    // end if-block "pin <  8"
[19:23:11.752]                  </control>
[19:23:11.753]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:23:11.753]                    // if-block "pin >= 8"
[19:23:11.753]                      // =>  FALSE
[19:23:11.753]                    // skip if-block "pin >= 8"
[19:23:11.753]                  </control>
[19:23:11.753]                </sequence>
[19:23:11.753]            </block>
[19:23:11.753]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:11.753]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:23:11.754]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.754]            </block>
[19:23:11.754]          </sequence>
[19:23:11.754]      </block>
[19:23:11.754]      // end if-block "traceSWO"
[19:23:11.754]    </control>
[19:23:11.755]    <control if="traceTPIU" while="" timeout="0" info="">
[19:23:11.755]      // if-block "traceTPIU"
[19:23:11.755]        // =>  FALSE
[19:23:11.755]      // skip if-block "traceTPIU"
[19:23:11.755]    </control>
[19:23:11.755]  </sequence>
[19:23:11.755]  
[19:23:11.985]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:23:11.985]  
[19:23:11.985]  <debugvars>
[19:23:11.986]    // Pre-defined
[19:23:11.986]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:11.987]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:23:11.987]    __dp=0x00000000
[19:23:11.988]    __ap=0x00000000
[19:23:11.988]    __traceout=0x00000001      (SWO Trace)
[19:23:11.989]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:11.989]    __FlashAddr=0x00000000
[19:23:11.989]    __FlashLen=0x00000000
[19:23:11.990]    __FlashArg=0x00000000
[19:23:11.990]    __FlashOp=0x00000000
[19:23:11.990]    __Result=0x00000000
[19:23:11.990]    
[19:23:11.990]    // User-defined
[19:23:11.990]    DbgMCU_CR=0x00000007
[19:23:11.991]    DbgMCU_APB1_Fz=0x00000000
[19:23:11.991]    DbgMCU_APB2_Fz=0x00000000
[19:23:11.991]    TraceClk_Pin=0x00040002
[19:23:11.991]    TraceD0_Pin=0x00040003
[19:23:11.991]    TraceD1_Pin=0x00040004
[19:23:11.992]    TraceD2_Pin=0x00040005
[19:23:11.992]    TraceD3_Pin=0x00040006
[19:23:11.992]  </debugvars>
[19:23:11.992]  
[19:23:11.992]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:23:11.992]    <block atomic="false" info="">
[19:23:11.993]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:23:11.993]        // -> [traceSWO <= 0x00000001]
[19:23:11.993]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:23:11.993]        // -> [traceTPIU <= 0x00000000]
[19:23:11.994]    </block>
[19:23:11.994]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:11.994]      // if-block "traceSWO"
[19:23:11.994]        // =>  TRUE
[19:23:11.994]      <block atomic="false" info="">
[19:23:11.994]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:23:11.995]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:23:11.995]            <block atomic="false" info="">
[19:23:11.995]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:11.995]                // -> [dbgmcu_val <= 0x00000000]
[19:23:11.995]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:23:11.996]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:23:11.996]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:23:11.996]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:23:11.997]                // -> [dbgmcu_val <= 0x00000007]
[19:23:11.997]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:23:11.997]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:23:11.997]              Sequence("ConfigureTraceSWOPin");
[19:23:11.997]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:23:11.997]                  <block atomic="false" info="">
[19:23:11.998]                    __var pin     = 0;
[19:23:11.998]                      // -> [pin <= 0x00000000]
[19:23:11.998]                    __var port    = 0;
[19:23:11.998]                      // -> [port <= 0x00000000]
[19:23:11.998]                    __var portAdr = 0;
[19:23:11.998]                      // -> [portAdr <= 0x00000000]
[19:23:11.999]                    __var pos     = 0;
[19:23:11.999]                      // -> [pos <= 0x00000000]
[19:23:11.999]                    __var SWO_Pin = 0x00010003;          // PB3
[19:23:11.999]                      // -> [SWO_Pin <= 0x00010003]
[19:23:11.999]                  </block>
[19:23:11.999]                  <block atomic="false" info="configure SWO">
[19:23:12.000]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:23:12.000]                      // -> [pin <= 0x00000003]
[19:23:12.000]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:23:12.000]                      // -> [port <= 0x00000001]
[19:23:12.000]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:23:12.001]                      // -> [portAdr <= 0x40020400]
[19:23:12.001]                    pos = pin * 2;
[19:23:12.001]                      // -> [pos <= 0x00000006]
[19:23:12.001]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:23:12.002]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.002]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.002]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:23:12.003]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.003]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.004]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:23:12.004]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.005]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.005]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:23:12.005]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.006]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.006]                  </block>
[19:23:12.006]                  <control if="pin <  8" while="" timeout="0" info="">
[19:23:12.006]                    // if-block "pin <  8"
[19:23:12.006]                      // =>  TRUE
[19:23:12.007]                    <block atomic="false" info="">
[19:23:12.007]                      pos = ((pin    ) & 7) * 4;
[19:23:12.007]                        // -> [pos <= 0x0000000C]
[19:23:12.007]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:23:12.007]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.008]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.008]                    </block>
[19:23:12.008]                    // end if-block "pin <  8"
[19:23:12.008]                  </control>
[19:23:12.009]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:23:12.009]                    // if-block "pin >= 8"
[19:23:12.009]                      // =>  FALSE
[19:23:12.009]                    // skip if-block "pin >= 8"
[19:23:12.009]                  </control>
[19:23:12.009]                </sequence>
[19:23:12.010]            </block>
[19:23:12.010]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:12.010]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:23:12.010]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:23:12.010]            </block>
[19:23:12.011]          </sequence>
[19:23:12.011]      </block>
[19:23:12.011]      // end if-block "traceSWO"
[19:23:12.011]    </control>
[19:23:12.011]    <control if="traceTPIU" while="" timeout="0" info="">
[19:23:12.011]      // if-block "traceTPIU"
[19:23:12.012]        // =>  FALSE
[19:23:12.012]      // skip if-block "traceTPIU"
[19:23:12.012]    </control>
[19:23:12.012]  </sequence>
[19:23:12.012]  
[19:24:33.186]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:24:33.186]  
[19:24:33.186]  <debugvars>
[19:24:33.186]    // Pre-defined
[19:24:33.187]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:24:33.187]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:24:33.187]    __dp=0x00000000
[19:24:33.187]    __ap=0x00000000
[19:24:33.187]    __traceout=0x00000001      (SWO Trace)
[19:24:33.188]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:24:33.188]    __FlashAddr=0x00000000
[19:24:33.188]    __FlashLen=0x00000000
[19:24:33.188]    __FlashArg=0x00000000
[19:24:33.189]    __FlashOp=0x00000000
[19:24:33.189]    __Result=0x00000000
[19:24:33.189]    
[19:24:33.189]    // User-defined
[19:24:33.189]    DbgMCU_CR=0x00000007
[19:24:33.189]    DbgMCU_APB1_Fz=0x00000000
[19:24:33.190]    DbgMCU_APB2_Fz=0x00000000
[19:24:33.190]    TraceClk_Pin=0x00040002
[19:24:33.190]    TraceD0_Pin=0x00040003
[19:24:33.190]    TraceD1_Pin=0x00040004
[19:24:33.190]    TraceD2_Pin=0x00040005
[19:24:33.190]    TraceD3_Pin=0x00040006
[19:24:33.191]  </debugvars>
[19:24:33.191]  
[19:24:33.191]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:24:33.191]    <block atomic="false" info="">
[19:24:33.191]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:24:33.191]        // -> [traceSWO <= 0x00000001]
[19:24:33.192]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:24:33.192]        // -> [traceTPIU <= 0x00000000]
[19:24:33.192]    </block>
[19:24:33.192]    <control if="traceSWO" while="" timeout="0" info="">
[19:24:33.192]      // if-block "traceSWO"
[19:24:33.192]        // =>  TRUE
[19:24:33.192]      <block atomic="false" info="">
[19:24:33.192]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:24:33.193]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:24:33.193]            <block atomic="false" info="">
[19:24:33.193]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:24:33.193]                // -> [dbgmcu_val <= 0x00000000]
[19:24:33.193]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:24:33.193]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:24:33.193]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:24:33.194]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.194]                // -> [dbgmcu_val <= 0x00000007]
[19:24:33.194]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:24:33.194]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:24:33.194]              Sequence("ConfigureTraceSWOPin");
[19:24:33.194]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:24:33.194]                  <block atomic="false" info="">
[19:24:33.194]                    __var pin     = 0;
[19:24:33.195]                      // -> [pin <= 0x00000000]
[19:24:33.195]                    __var port    = 0;
[19:24:33.195]                      // -> [port <= 0x00000000]
[19:24:33.195]                    __var portAdr = 0;
[19:24:33.195]                      // -> [portAdr <= 0x00000000]
[19:24:33.195]                    __var pos     = 0;
[19:24:33.195]                      // -> [pos <= 0x00000000]
[19:24:33.195]                    __var SWO_Pin = 0x00010003;          // PB3
[19:24:33.195]                      // -> [SWO_Pin <= 0x00010003]
[19:24:33.196]                  </block>
[19:24:33.196]                  <block atomic="false" info="configure SWO">
[19:24:33.196]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:24:33.196]                      // -> [pin <= 0x00000003]
[19:24:33.196]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:24:33.196]                      // -> [port <= 0x00000001]
[19:24:33.196]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:24:33.196]                      // -> [portAdr <= 0x40020400]
[19:24:33.196]                    pos = pin * 2;
[19:24:33.197]                      // -> [pos <= 0x00000006]
[19:24:33.197]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:24:33.197]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.198]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.198]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:24:33.198]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.199]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.199]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:24:33.199]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.200]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.200]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:24:33.200]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.201]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.201]                  </block>
[19:24:33.201]                  <control if="pin <  8" while="" timeout="0" info="">
[19:24:33.201]                    // if-block "pin <  8"
[19:24:33.201]                      // =>  TRUE
[19:24:33.201]                    <block atomic="false" info="">
[19:24:33.201]                      pos = ((pin    ) & 7) * 4;
[19:24:33.201]                        // -> [pos <= 0x0000000C]
[19:24:33.202]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:24:33.202]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.202]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.203]                    </block>
[19:24:33.203]                    // end if-block "pin <  8"
[19:24:33.203]                  </control>
[19:24:33.203]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:24:33.203]                    // if-block "pin >= 8"
[19:24:33.203]                      // =>  FALSE
[19:24:33.203]                    // skip if-block "pin >= 8"
[19:24:33.203]                  </control>
[19:24:33.203]                </sequence>
[19:24:33.204]            </block>
[19:24:33.204]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:24:33.204]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:24:33.204]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:24:33.204]            </block>
[19:24:33.204]          </sequence>
[19:24:33.205]      </block>
[19:24:33.205]      // end if-block "traceSWO"
[19:24:33.205]    </control>
[19:24:33.205]    <control if="traceTPIU" while="" timeout="0" info="">
[19:24:33.205]      // if-block "traceTPIU"
[19:24:33.205]        // =>  FALSE
[19:24:33.205]      // skip if-block "traceTPIU"
[19:24:33.205]    </control>
[19:24:33.205]  </sequence>
[19:24:33.206]  
[19:25:38.748]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:25:38.748]  
[19:25:38.748]  <debugvars>
[19:25:38.748]    // Pre-defined
[19:25:38.748]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:25:38.749]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:25:38.749]    __dp=0x00000000
[19:25:38.749]    __ap=0x00000000
[19:25:38.749]    __traceout=0x00000001      (SWO Trace)
[19:25:38.749]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:25:38.749]    __FlashAddr=0x00000000
[19:25:38.749]    __FlashLen=0x00000000
[19:25:38.750]    __FlashArg=0x00000000
[19:25:38.750]    __FlashOp=0x00000000
[19:25:38.750]    __Result=0x00000000
[19:25:38.750]    
[19:25:38.750]    // User-defined
[19:25:38.750]    DbgMCU_CR=0x00000007
[19:25:38.750]    DbgMCU_APB1_Fz=0x00000000
[19:25:38.750]    DbgMCU_APB2_Fz=0x00000000
[19:25:38.751]    TraceClk_Pin=0x00040002
[19:25:38.751]    TraceD0_Pin=0x00040003
[19:25:38.751]    TraceD1_Pin=0x00040004
[19:25:38.751]    TraceD2_Pin=0x00040005
[19:25:38.751]    TraceD3_Pin=0x00040006
[19:25:38.751]  </debugvars>
[19:25:38.751]  
[19:25:38.751]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:25:38.752]    <block atomic="false" info="">
[19:25:38.752]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:25:38.752]        // -> [traceSWO <= 0x00000001]
[19:25:38.752]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:25:38.752]        // -> [traceTPIU <= 0x00000000]
[19:25:38.752]    </block>
[19:25:38.752]    <control if="traceSWO" while="" timeout="0" info="">
[19:25:38.752]      // if-block "traceSWO"
[19:25:38.753]        // =>  TRUE
[19:25:38.753]      <block atomic="false" info="">
[19:25:38.753]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:25:38.753]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:25:38.753]            <block atomic="false" info="">
[19:25:38.753]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:25:38.753]                // -> [dbgmcu_val <= 0x00000000]
[19:25:38.753]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:25:38.754]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:25:38.754]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:25:38.754]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.754]                // -> [dbgmcu_val <= 0x00000007]
[19:25:38.754]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:25:38.755]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:25:38.755]              Sequence("ConfigureTraceSWOPin");
[19:25:38.755]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:25:38.755]                  <block atomic="false" info="">
[19:25:38.755]                    __var pin     = 0;
[19:25:38.755]                      // -> [pin <= 0x00000000]
[19:25:38.755]                    __var port    = 0;
[19:25:38.755]                      // -> [port <= 0x00000000]
[19:25:38.756]                    __var portAdr = 0;
[19:25:38.756]                      // -> [portAdr <= 0x00000000]
[19:25:38.756]                    __var pos     = 0;
[19:25:38.757]                      // -> [pos <= 0x00000000]
[19:25:38.757]                    __var SWO_Pin = 0x00010003;          // PB3
[19:25:38.757]                      // -> [SWO_Pin <= 0x00010003]
[19:25:38.757]                  </block>
[19:25:38.757]                  <block atomic="false" info="configure SWO">
[19:25:38.757]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:25:38.757]                      // -> [pin <= 0x00000003]
[19:25:38.757]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:25:38.757]                      // -> [port <= 0x00000001]
[19:25:38.757]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:25:38.757]                      // -> [portAdr <= 0x40020400]
[19:25:38.757]                    pos = pin * 2;
[19:25:38.757]                      // -> [pos <= 0x00000006]
[19:25:38.758]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:25:38.758]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.759]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.759]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:25:38.759]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.760]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.760]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:25:38.760]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.761]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.761]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:25:38.761]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.762]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.762]                  </block>
[19:25:38.762]                  <control if="pin <  8" while="" timeout="0" info="">
[19:25:38.762]                    // if-block "pin <  8"
[19:25:38.762]                      // =>  TRUE
[19:25:38.762]                    <block atomic="false" info="">
[19:25:38.763]                      pos = ((pin    ) & 7) * 4;
[19:25:38.763]                        // -> [pos <= 0x0000000C]
[19:25:38.763]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:25:38.763]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.764]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.764]                    </block>
[19:25:38.764]                    // end if-block "pin <  8"
[19:25:38.764]                  </control>
[19:25:38.764]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:25:38.764]                    // if-block "pin >= 8"
[19:25:38.764]                      // =>  FALSE
[19:25:38.765]                    // skip if-block "pin >= 8"
[19:25:38.765]                  </control>
[19:25:38.765]                </sequence>
[19:25:38.765]            </block>
[19:25:38.765]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:25:38.765]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:25:38.766]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:25:38.766]            </block>
[19:25:38.766]          </sequence>
[19:25:38.766]      </block>
[19:25:38.766]      // end if-block "traceSWO"
[19:25:38.766]    </control>
[19:25:38.766]    <control if="traceTPIU" while="" timeout="0" info="">
[19:25:38.767]      // if-block "traceTPIU"
[19:25:38.767]        // =>  FALSE
[19:25:38.767]      // skip if-block "traceTPIU"
[19:25:38.767]    </control>
[19:25:38.767]  </sequence>
[19:25:38.767]  
[19:28:43.483]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:28:43.483]  
[19:28:43.483]  <debugvars>
[19:28:43.484]    // Pre-defined
[19:28:43.484]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:28:43.484]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:28:43.484]    __dp=0x00000000
[19:28:43.484]    __ap=0x00000000
[19:28:43.484]    __traceout=0x00000001      (SWO Trace)
[19:28:43.484]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:28:43.484]    __FlashAddr=0x00000000
[19:28:43.484]    __FlashLen=0x00000000
[19:28:43.485]    __FlashArg=0x00000000
[19:28:43.485]    __FlashOp=0x00000000
[19:28:43.485]    __Result=0x00000000
[19:28:43.485]    
[19:28:43.485]    // User-defined
[19:28:43.485]    DbgMCU_CR=0x00000007
[19:28:43.485]    DbgMCU_APB1_Fz=0x00000000
[19:28:43.485]    DbgMCU_APB2_Fz=0x00000000
[19:28:43.485]    TraceClk_Pin=0x00040002
[19:28:43.485]    TraceD0_Pin=0x00040003
[19:28:43.486]    TraceD1_Pin=0x00040004
[19:28:43.486]    TraceD2_Pin=0x00040005
[19:28:43.486]    TraceD3_Pin=0x00040006
[19:28:43.486]  </debugvars>
[19:28:43.486]  
[19:28:43.486]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:28:43.486]    <block atomic="false" info="">
[19:28:43.486]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:28:43.486]        // -> [traceSWO <= 0x00000001]
[19:28:43.487]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:28:43.487]        // -> [traceTPIU <= 0x00000000]
[19:28:43.487]    </block>
[19:28:43.487]    <control if="traceSWO" while="" timeout="0" info="">
[19:28:43.487]      // if-block "traceSWO"
[19:28:43.487]        // =>  TRUE
[19:28:43.487]      <block atomic="false" info="">
[19:28:43.487]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:28:43.487]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:28:43.488]            <block atomic="false" info="">
[19:28:43.488]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:28:43.488]                // -> [dbgmcu_val <= 0x00000000]
[19:28:43.488]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:28:43.488]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:28:43.488]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:28:43.489]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.489]                // -> [dbgmcu_val <= 0x00000007]
[19:28:43.489]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:28:43.489]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:28:43.489]              Sequence("ConfigureTraceSWOPin");
[19:28:43.489]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:28:43.489]                  <block atomic="false" info="">
[19:28:43.489]                    __var pin     = 0;
[19:28:43.489]                      // -> [pin <= 0x00000000]
[19:28:43.490]                    __var port    = 0;
[19:28:43.490]                      // -> [port <= 0x00000000]
[19:28:43.490]                    __var portAdr = 0;
[19:28:43.490]                      // -> [portAdr <= 0x00000000]
[19:28:43.490]                    __var pos     = 0;
[19:28:43.490]                      // -> [pos <= 0x00000000]
[19:28:43.490]                    __var SWO_Pin = 0x00010003;          // PB3
[19:28:43.490]                      // -> [SWO_Pin <= 0x00010003]
[19:28:43.490]                  </block>
[19:28:43.491]                  <block atomic="false" info="configure SWO">
[19:28:43.491]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:28:43.491]                      // -> [pin <= 0x00000003]
[19:28:43.491]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:28:43.491]                      // -> [port <= 0x00000001]
[19:28:43.491]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:28:43.491]                      // -> [portAdr <= 0x40020400]
[19:28:43.491]                    pos = pin * 2;
[19:28:43.491]                      // -> [pos <= 0x00000006]
[19:28:43.492]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:28:43.492]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.492]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.493]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:28:43.493]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.493]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.494]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:28:43.494]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.494]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.495]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:28:43.495]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.495]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.496]                  </block>
[19:28:43.496]                  <control if="pin <  8" while="" timeout="0" info="">
[19:28:43.496]                    // if-block "pin <  8"
[19:28:43.496]                      // =>  TRUE
[19:28:43.496]                    <block atomic="false" info="">
[19:28:43.496]                      pos = ((pin    ) & 7) * 4;
[19:28:43.496]                        // -> [pos <= 0x0000000C]
[19:28:43.496]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:28:43.497]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.497]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.497]                    </block>
[19:28:43.497]                    // end if-block "pin <  8"
[19:28:43.498]                  </control>
[19:28:43.498]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:28:43.498]                    // if-block "pin >= 8"
[19:28:43.498]                      // =>  FALSE
[19:28:43.498]                    // skip if-block "pin >= 8"
[19:28:43.498]                  </control>
[19:28:43.498]                </sequence>
[19:28:43.498]            </block>
[19:28:43.498]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:28:43.498]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:28:43.499]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:28:43.499]            </block>
[19:28:43.499]          </sequence>
[19:28:43.499]      </block>
[19:28:43.499]      // end if-block "traceSWO"
[19:28:43.500]    </control>
[19:28:43.500]    <control if="traceTPIU" while="" timeout="0" info="">
[19:28:43.500]      // if-block "traceTPIU"
[19:28:43.500]        // =>  FALSE
[19:28:43.500]      // skip if-block "traceTPIU"
[19:28:43.500]    </control>
[19:28:43.500]  </sequence>
[19:28:43.500]  
[19:29:11.125]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:29:11.125]  
[19:29:11.125]  <debugvars>
[19:29:11.125]    // Pre-defined
[19:29:11.125]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:29:11.125]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:29:11.126]    __dp=0x00000000
[19:29:11.126]    __ap=0x00000000
[19:29:11.126]    __traceout=0x00000001      (SWO Trace)
[19:29:11.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:29:11.126]    __FlashAddr=0x00000000
[19:29:11.127]    __FlashLen=0x00000000
[19:29:11.127]    __FlashArg=0x00000000
[19:29:11.127]    __FlashOp=0x00000000
[19:29:11.127]    __Result=0x00000000
[19:29:11.127]    
[19:29:11.127]    // User-defined
[19:29:11.128]    DbgMCU_CR=0x00000007
[19:29:11.128]    DbgMCU_APB1_Fz=0x00000000
[19:29:11.128]    DbgMCU_APB2_Fz=0x00000000
[19:29:11.128]    TraceClk_Pin=0x00040002
[19:29:11.128]    TraceD0_Pin=0x00040003
[19:29:11.128]    TraceD1_Pin=0x00040004
[19:29:11.129]    TraceD2_Pin=0x00040005
[19:29:11.129]    TraceD3_Pin=0x00040006
[19:29:11.129]  </debugvars>
[19:29:11.129]  
[19:29:11.129]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:29:11.130]    <block atomic="false" info="">
[19:29:11.130]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:29:11.130]        // -> [traceSWO <= 0x00000001]
[19:29:11.130]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:29:11.130]        // -> [traceTPIU <= 0x00000000]
[19:29:11.130]    </block>
[19:29:11.131]    <control if="traceSWO" while="" timeout="0" info="">
[19:29:11.131]      // if-block "traceSWO"
[19:29:11.131]        // =>  TRUE
[19:29:11.131]      <block atomic="false" info="">
[19:29:11.131]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:29:11.131]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:29:11.132]            <block atomic="false" info="">
[19:29:11.132]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:29:11.132]                // -> [dbgmcu_val <= 0x00000000]
[19:29:11.132]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:29:11.132]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:29:11.132]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:29:11.133]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.133]                // -> [dbgmcu_val <= 0x00000007]
[19:29:11.133]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:29:11.134]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:29:11.134]              Sequence("ConfigureTraceSWOPin");
[19:29:11.134]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:29:11.134]                  <block atomic="false" info="">
[19:29:11.134]                    __var pin     = 0;
[19:29:11.134]                      // -> [pin <= 0x00000000]
[19:29:11.134]                    __var port    = 0;
[19:29:11.135]                      // -> [port <= 0x00000000]
[19:29:11.135]                    __var portAdr = 0;
[19:29:11.135]                      // -> [portAdr <= 0x00000000]
[19:29:11.135]                    __var pos     = 0;
[19:29:11.135]                      // -> [pos <= 0x00000000]
[19:29:11.135]                    __var SWO_Pin = 0x00010003;          // PB3
[19:29:11.136]                      // -> [SWO_Pin <= 0x00010003]
[19:29:11.136]                  </block>
[19:29:11.136]                  <block atomic="false" info="configure SWO">
[19:29:11.136]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:29:11.136]                      // -> [pin <= 0x00000003]
[19:29:11.136]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:29:11.137]                      // -> [port <= 0x00000001]
[19:29:11.137]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:29:11.137]                      // -> [portAdr <= 0x40020400]
[19:29:11.137]                    pos = pin * 2;
[19:29:11.137]                      // -> [pos <= 0x00000006]
[19:29:11.137]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:29:11.138]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.138]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.138]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:29:11.139]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.139]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.139]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:29:11.140]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.140]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.141]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:29:11.141]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.141]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.142]                  </block>
[19:29:11.142]                  <control if="pin <  8" while="" timeout="0" info="">
[19:29:11.142]                    // if-block "pin <  8"
[19:29:11.142]                      // =>  TRUE
[19:29:11.142]                    <block atomic="false" info="">
[19:29:11.142]                      pos = ((pin    ) & 7) * 4;
[19:29:11.143]                        // -> [pos <= 0x0000000C]
[19:29:11.143]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:29:11.143]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.144]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.144]                    </block>
[19:29:11.144]                    // end if-block "pin <  8"
[19:29:11.144]                  </control>
[19:29:11.144]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:29:11.144]                    // if-block "pin >= 8"
[19:29:11.145]                      // =>  FALSE
[19:29:11.145]                    // skip if-block "pin >= 8"
[19:29:11.145]                  </control>
[19:29:11.145]                </sequence>
[19:29:11.145]            </block>
[19:29:11.145]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:29:11.146]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:29:11.146]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:29:11.146]            </block>
[19:29:11.146]          </sequence>
[19:29:11.147]      </block>
[19:29:11.147]      // end if-block "traceSWO"
[19:29:11.147]    </control>
[19:29:11.147]    <control if="traceTPIU" while="" timeout="0" info="">
[19:29:11.147]      // if-block "traceTPIU"
[19:29:11.147]        // =>  FALSE
[19:29:11.148]      // skip if-block "traceTPIU"
[19:29:11.148]    </control>
[19:29:11.148]  </sequence>
[19:29:11.148]  
[19:43:43.559]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:43:43.559]  
[19:43:43.560]  <debugvars>
[19:43:43.560]    // Pre-defined
[19:43:43.560]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:43.560]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:43:43.560]    __dp=0x00000000
[19:43:43.560]    __ap=0x00000000
[19:43:43.560]    __traceout=0x00000001      (SWO Trace)
[19:43:43.560]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:43.561]    __FlashAddr=0x00000000
[19:43:43.561]    __FlashLen=0x00000000
[19:43:43.561]    __FlashArg=0x00000000
[19:43:43.561]    __FlashOp=0x00000000
[19:43:43.561]    __Result=0x00000000
[19:43:43.561]    
[19:43:43.561]    // User-defined
[19:43:43.561]    DbgMCU_CR=0x00000007
[19:43:43.561]    DbgMCU_APB1_Fz=0x00000000
[19:43:43.561]    DbgMCU_APB2_Fz=0x00000000
[19:43:43.562]    TraceClk_Pin=0x00040002
[19:43:43.562]    TraceD0_Pin=0x00040003
[19:43:43.562]    TraceD1_Pin=0x00040004
[19:43:43.562]    TraceD2_Pin=0x00040005
[19:43:43.562]    TraceD3_Pin=0x00040006
[19:43:43.562]  </debugvars>
[19:43:43.562]  
[19:43:43.562]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:43:43.563]    <block atomic="false" info="">
[19:43:43.563]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:43:43.563]        // -> [traceSWO <= 0x00000001]
[19:43:43.563]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:43:43.563]        // -> [traceTPIU <= 0x00000000]
[19:43:43.563]    </block>
[19:43:43.563]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:43.563]      // if-block "traceSWO"
[19:43:43.563]        // =>  TRUE
[19:43:43.564]      <block atomic="false" info="">
[19:43:43.564]        Sequence("DisableTraceSWO");
[19:43:43.564]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:43:43.564]            <block atomic="false" info="">
[19:43:43.564]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:43.564]                // -> [dbgmcu_val <= 0x00000000]
[19:43:43.564]            </block>
[19:43:43.565]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:43.565]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:43:43.565]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:43.565]                // -> [dbgmcu_val <= 0x00000007]
[19:43:43.565]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:43:43.566]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:43.566]            </block>
[19:43:43.566]          </sequence>
[19:43:43.566]      </block>
[19:43:43.566]      // end if-block "traceSWO"
[19:43:43.566]    </control>
[19:43:43.567]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:43.567]      // if-block "traceTPIU"
[19:43:43.567]        // =>  FALSE
[19:43:43.567]      // skip if-block "traceTPIU"
[19:43:43.567]    </control>
[19:43:43.567]  </sequence>
[19:43:43.567]  
[19:43:46.168]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:43:46.168]  
[19:43:46.169]  <debugvars>
[19:43:46.169]    // Pre-defined
[19:43:46.169]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:46.169]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:43:46.169]    __dp=0x00000000
[19:43:46.170]    __ap=0x00000000
[19:43:46.170]    __traceout=0x00000001      (SWO Trace)
[19:43:46.170]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:46.170]    __FlashAddr=0x00000000
[19:43:46.170]    __FlashLen=0x00000000
[19:43:46.171]    __FlashArg=0x00000000
[19:43:46.171]    __FlashOp=0x00000000
[19:43:46.171]    __Result=0x00000000
[19:43:46.171]    
[19:43:46.171]    // User-defined
[19:43:46.171]    DbgMCU_CR=0x00000007
[19:43:46.172]    DbgMCU_APB1_Fz=0x00000000
[19:43:46.172]    DbgMCU_APB2_Fz=0x00000000
[19:43:46.172]    TraceClk_Pin=0x00040002
[19:43:46.172]    TraceD0_Pin=0x00040003
[19:43:46.172]    TraceD1_Pin=0x00040004
[19:43:46.173]    TraceD2_Pin=0x00040005
[19:43:46.173]    TraceD3_Pin=0x00040006
[19:43:46.173]  </debugvars>
[19:43:46.173]  
[19:43:46.173]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:43:46.174]    <block atomic="false" info="">
[19:43:46.174]      Sequence("CheckID");
[19:43:46.174]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:43:46.174]          <block atomic="false" info="">
[19:43:46.174]            __var pidr1 = 0;
[19:43:46.175]              // -> [pidr1 <= 0x00000000]
[19:43:46.175]            __var pidr2 = 0;
[19:43:46.175]              // -> [pidr2 <= 0x00000000]
[19:43:46.175]            __var jep106id = 0;
[19:43:46.175]              // -> [jep106id <= 0x00000000]
[19:43:46.176]            __var ROMTableBase = 0;
[19:43:46.176]              // -> [ROMTableBase <= 0x00000000]
[19:43:46.176]            __ap = 0;      // AHB-AP
[19:43:46.176]              // -> [__ap <= 0x00000000]
[19:43:46.176]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:43:46.177]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.177]              // -> [ROMTableBase <= 0xE00FD000]
[19:43:46.177]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:43:46.178]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.178]              // -> [pidr1 <= 0x00000004]
[19:43:46.178]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:43:46.179]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.179]              // -> [pidr2 <= 0x0000001A]
[19:43:46.179]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:43:46.179]              // -> [jep106id <= 0x00000020]
[19:43:46.179]          </block>
[19:43:46.180]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:43:46.180]            // if-block "jep106id != 0x20"
[19:43:46.180]              // =>  FALSE
[19:43:46.180]            // skip if-block "jep106id != 0x20"
[19:43:46.180]          </control>
[19:43:46.180]        </sequence>
[19:43:46.181]    </block>
[19:43:46.181]  </sequence>
[19:43:46.182]  
[19:43:46.196]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:43:46.196]  
[19:43:46.196]  <debugvars>
[19:43:46.196]    // Pre-defined
[19:43:46.196]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:46.196]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:43:46.197]    __dp=0x00000000
[19:43:46.197]    __ap=0x00000000
[19:43:46.197]    __traceout=0x00000001      (SWO Trace)
[19:43:46.197]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:46.197]    __FlashAddr=0x00000000
[19:43:46.197]    __FlashLen=0x00000000
[19:43:46.198]    __FlashArg=0x00000000
[19:43:46.198]    __FlashOp=0x00000000
[19:43:46.198]    __Result=0x00000000
[19:43:46.198]    
[19:43:46.198]    // User-defined
[19:43:46.198]    DbgMCU_CR=0x00000007
[19:43:46.199]    DbgMCU_APB1_Fz=0x00000000
[19:43:46.199]    DbgMCU_APB2_Fz=0x00000000
[19:43:46.199]    TraceClk_Pin=0x00040002
[19:43:46.199]    TraceD0_Pin=0x00040003
[19:43:46.199]    TraceD1_Pin=0x00040004
[19:43:46.200]    TraceD2_Pin=0x00040005
[19:43:46.200]    TraceD3_Pin=0x00040006
[19:43:46.200]  </debugvars>
[19:43:46.200]  
[19:43:46.200]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:43:46.201]    <block atomic="false" info="">
[19:43:46.201]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:43:46.201]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.202]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:43:46.202]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.202]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:43:46.203]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.203]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:43:46.204]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.204]    </block>
[19:43:46.204]  </sequence>
[19:43:46.204]  
[19:43:46.221]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:43:46.221]  
[19:43:46.221]  <debugvars>
[19:43:46.221]    // Pre-defined
[19:43:46.222]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:46.222]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:43:46.222]    __dp=0x00000000
[19:43:46.222]    __ap=0x00000000
[19:43:46.223]    __traceout=0x00000001      (SWO Trace)
[19:43:46.223]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:46.223]    __FlashAddr=0x00000000
[19:43:46.223]    __FlashLen=0x00000000
[19:43:46.223]    __FlashArg=0x00000000
[19:43:46.224]    __FlashOp=0x00000000
[19:43:46.224]    __Result=0x00000000
[19:43:46.224]    
[19:43:46.224]    // User-defined
[19:43:46.224]    DbgMCU_CR=0x00000007
[19:43:46.224]    DbgMCU_APB1_Fz=0x00000000
[19:43:46.225]    DbgMCU_APB2_Fz=0x00000000
[19:43:46.225]    TraceClk_Pin=0x00040002
[19:43:46.225]    TraceD0_Pin=0x00040003
[19:43:46.225]    TraceD1_Pin=0x00040004
[19:43:46.225]    TraceD2_Pin=0x00040005
[19:43:46.226]    TraceD3_Pin=0x00040006
[19:43:46.226]  </debugvars>
[19:43:46.226]  
[19:43:46.226]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:43:46.226]    <block atomic="false" info="">
[19:43:46.227]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:43:46.227]        // -> [traceSWO <= 0x00000001]
[19:43:46.227]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:43:46.227]        // -> [traceTPIU <= 0x00000000]
[19:43:46.227]    </block>
[19:43:46.227]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:46.228]      // if-block "traceSWO"
[19:43:46.228]        // =>  TRUE
[19:43:46.228]      <block atomic="false" info="">
[19:43:46.228]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:43:46.228]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:43:46.228]            <block atomic="false" info="">
[19:43:46.229]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:46.229]                // -> [dbgmcu_val <= 0x00000000]
[19:43:46.229]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:43:46.229]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:43:46.229]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:43:46.230]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.230]                // -> [dbgmcu_val <= 0x00000007]
[19:43:46.230]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:43:46.230]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:43:46.231]              Sequence("ConfigureTraceSWOPin");
[19:43:46.231]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:43:46.231]                  <block atomic="false" info="">
[19:43:46.231]                    __var pin     = 0;
[19:43:46.231]                      // -> [pin <= 0x00000000]
[19:43:46.232]                    __var port    = 0;
[19:43:46.232]                      // -> [port <= 0x00000000]
[19:43:46.232]                    __var portAdr = 0;
[19:43:46.232]                      // -> [portAdr <= 0x00000000]
[19:43:46.232]                    __var pos     = 0;
[19:43:46.232]                      // -> [pos <= 0x00000000]
[19:43:46.233]                    __var SWO_Pin = 0x00010003;          // PB3
[19:43:46.233]                      // -> [SWO_Pin <= 0x00010003]
[19:43:46.233]                  </block>
[19:43:46.233]                  <block atomic="false" info="configure SWO">
[19:43:46.233]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:43:46.233]                      // -> [pin <= 0x00000003]
[19:43:46.234]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:43:46.234]                      // -> [port <= 0x00000001]
[19:43:46.234]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:43:46.234]                      // -> [portAdr <= 0x40020400]
[19:43:46.234]                    pos = pin * 2;
[19:43:46.234]                      // -> [pos <= 0x00000006]
[19:43:46.235]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:43:46.235]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.236]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.236]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:43:46.236]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.237]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.237]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:43:46.238]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.238]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.239]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:43:46.239]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.240]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.240]                  </block>
[19:43:46.240]                  <control if="pin <  8" while="" timeout="0" info="">
[19:43:46.240]                    // if-block "pin <  8"
[19:43:46.241]                      // =>  TRUE
[19:43:46.241]                    <block atomic="false" info="">
[19:43:46.241]                      pos = ((pin    ) & 7) * 4;
[19:43:46.241]                        // -> [pos <= 0x0000000C]
[19:43:46.242]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:43:46.242]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.243]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.243]                    </block>
[19:43:46.243]                    // end if-block "pin <  8"
[19:43:46.243]                  </control>
[19:43:46.243]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:43:46.244]                    // if-block "pin >= 8"
[19:43:46.244]                      // =>  FALSE
[19:43:46.244]                    // skip if-block "pin >= 8"
[19:43:46.244]                  </control>
[19:43:46.244]                </sequence>
[19:43:46.244]            </block>
[19:43:46.245]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:46.245]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:43:46.246]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.246]            </block>
[19:43:46.246]          </sequence>
[19:43:46.246]      </block>
[19:43:46.246]      // end if-block "traceSWO"
[19:43:46.247]    </control>
[19:43:46.247]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:46.247]      // if-block "traceTPIU"
[19:43:46.247]        // =>  FALSE
[19:43:46.247]      // skip if-block "traceTPIU"
[19:43:46.247]    </control>
[19:43:46.248]  </sequence>
[19:43:46.248]  
[19:43:46.252]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:43:46.252]  
[19:43:46.252]  <debugvars>
[19:43:46.252]    // Pre-defined
[19:43:46.253]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:46.253]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:43:46.253]    __dp=0x00000000
[19:43:46.253]    __ap=0x00000000
[19:43:46.253]    __traceout=0x00000001      (SWO Trace)
[19:43:46.254]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:46.254]    __FlashAddr=0x00000000
[19:43:46.254]    __FlashLen=0x00000000
[19:43:46.254]    __FlashArg=0x00000000
[19:43:46.254]    __FlashOp=0x00000000
[19:43:46.254]    __Result=0x00000000
[19:43:46.255]    
[19:43:46.255]    // User-defined
[19:43:46.255]    DbgMCU_CR=0x00000007
[19:43:46.255]    DbgMCU_APB1_Fz=0x00000000
[19:43:46.255]    DbgMCU_APB2_Fz=0x00000000
[19:43:46.255]    TraceClk_Pin=0x00040002
[19:43:46.255]    TraceD0_Pin=0x00040003
[19:43:46.256]    TraceD1_Pin=0x00040004
[19:43:46.256]    TraceD2_Pin=0x00040005
[19:43:46.256]    TraceD3_Pin=0x00040006
[19:43:46.256]  </debugvars>
[19:43:46.256]  
[19:43:46.257]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:43:46.257]    <block atomic="false" info="">
[19:43:46.257]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:43:46.257]        // -> [traceSWO <= 0x00000001]
[19:43:46.257]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:43:46.258]        // -> [traceTPIU <= 0x00000000]
[19:43:46.258]    </block>
[19:43:46.258]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:46.258]      // if-block "traceSWO"
[19:43:46.258]        // =>  TRUE
[19:43:46.258]      <block atomic="false" info="">
[19:43:46.259]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:43:46.259]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:43:46.259]            <block atomic="false" info="">
[19:43:46.259]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:46.259]                // -> [dbgmcu_val <= 0x00000000]
[19:43:46.260]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:43:46.260]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:43:46.260]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:43:46.260]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.261]                // -> [dbgmcu_val <= 0x00000007]
[19:43:46.261]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:43:46.261]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:43:46.261]              Sequence("ConfigureTraceSWOPin");
[19:43:46.261]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:43:46.261]                  <block atomic="false" info="">
[19:43:46.262]                    __var pin     = 0;
[19:43:46.262]                      // -> [pin <= 0x00000000]
[19:43:46.262]                    __var port    = 0;
[19:43:46.262]                      // -> [port <= 0x00000000]
[19:43:46.262]                    __var portAdr = 0;
[19:43:46.262]                      // -> [portAdr <= 0x00000000]
[19:43:46.263]                    __var pos     = 0;
[19:43:46.263]                      // -> [pos <= 0x00000000]
[19:43:46.263]                    __var SWO_Pin = 0x00010003;          // PB3
[19:43:46.263]                      // -> [SWO_Pin <= 0x00010003]
[19:43:46.263]                  </block>
[19:43:46.263]                  <block atomic="false" info="configure SWO">
[19:43:46.264]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:43:46.264]                      // -> [pin <= 0x00000003]
[19:43:46.264]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:43:46.264]                      // -> [port <= 0x00000001]
[19:43:46.264]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:43:46.264]                      // -> [portAdr <= 0x40020400]
[19:43:46.264]                    pos = pin * 2;
[19:43:46.265]                      // -> [pos <= 0x00000006]
[19:43:46.265]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:43:46.265]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.266]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.266]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:43:46.266]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.267]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.267]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:43:46.268]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.268]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.268]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:43:46.269]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.269]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.270]                  </block>
[19:43:46.270]                  <control if="pin <  8" while="" timeout="0" info="">
[19:43:46.270]                    // if-block "pin <  8"
[19:43:46.270]                      // =>  TRUE
[19:43:46.270]                    <block atomic="false" info="">
[19:43:46.270]                      pos = ((pin    ) & 7) * 4;
[19:43:46.270]                        // -> [pos <= 0x0000000C]
[19:43:46.271]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:43:46.271]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.271]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.271]                    </block>
[19:43:46.271]                    // end if-block "pin <  8"
[19:43:46.271]                  </control>
[19:43:46.271]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:43:46.272]                    // if-block "pin >= 8"
[19:43:46.272]                      // =>  FALSE
[19:43:46.272]                    // skip if-block "pin >= 8"
[19:43:46.272]                  </control>
[19:43:46.272]                </sequence>
[19:43:46.272]            </block>
[19:43:46.272]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:46.273]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:43:46.273]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.273]            </block>
[19:43:46.274]          </sequence>
[19:43:46.274]      </block>
[19:43:46.274]      // end if-block "traceSWO"
[19:43:46.274]    </control>
[19:43:46.274]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:46.274]      // if-block "traceTPIU"
[19:43:46.275]        // =>  FALSE
[19:43:46.275]      // skip if-block "traceTPIU"
[19:43:46.275]    </control>
[19:43:46.275]  </sequence>
[19:43:46.275]  
[19:43:46.496]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:43:46.496]  
[19:43:46.497]  <debugvars>
[19:43:46.497]    // Pre-defined
[19:43:46.497]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:46.497]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:43:46.497]    __dp=0x00000000
[19:43:46.498]    __ap=0x00000000
[19:43:46.498]    __traceout=0x00000001      (SWO Trace)
[19:43:46.498]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:46.498]    __FlashAddr=0x00000000
[19:43:46.498]    __FlashLen=0x00000000
[19:43:46.498]    __FlashArg=0x00000000
[19:43:46.499]    __FlashOp=0x00000000
[19:43:46.499]    __Result=0x00000000
[19:43:46.499]    
[19:43:46.499]    // User-defined
[19:43:46.499]    DbgMCU_CR=0x00000007
[19:43:46.499]    DbgMCU_APB1_Fz=0x00000000
[19:43:46.500]    DbgMCU_APB2_Fz=0x00000000
[19:43:46.500]    TraceClk_Pin=0x00040002
[19:43:46.500]    TraceD0_Pin=0x00040003
[19:43:46.500]    TraceD1_Pin=0x00040004
[19:43:46.500]    TraceD2_Pin=0x00040005
[19:43:46.500]    TraceD3_Pin=0x00040006
[19:43:46.501]  </debugvars>
[19:43:46.501]  
[19:43:46.501]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:43:46.501]    <block atomic="false" info="">
[19:43:46.501]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:43:46.501]        // -> [traceSWO <= 0x00000001]
[19:43:46.502]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:43:46.502]        // -> [traceTPIU <= 0x00000000]
[19:43:46.502]    </block>
[19:43:46.502]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:46.502]      // if-block "traceSWO"
[19:43:46.502]        // =>  TRUE
[19:43:46.502]      <block atomic="false" info="">
[19:43:46.503]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:43:46.503]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:43:46.503]            <block atomic="false" info="">
[19:43:46.503]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:46.503]                // -> [dbgmcu_val <= 0x00000000]
[19:43:46.503]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:43:46.504]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:43:46.504]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:43:46.504]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.504]                // -> [dbgmcu_val <= 0x00000007]
[19:43:46.505]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:43:46.505]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:43:46.505]              Sequence("ConfigureTraceSWOPin");
[19:43:46.505]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:43:46.505]                  <block atomic="false" info="">
[19:43:46.505]                    __var pin     = 0;
[19:43:46.505]                      // -> [pin <= 0x00000000]
[19:43:46.506]                    __var port    = 0;
[19:43:46.506]                      // -> [port <= 0x00000000]
[19:43:46.506]                    __var portAdr = 0;
[19:43:46.506]                      // -> [portAdr <= 0x00000000]
[19:43:46.506]                    __var pos     = 0;
[19:43:46.506]                      // -> [pos <= 0x00000000]
[19:43:46.507]                    __var SWO_Pin = 0x00010003;          // PB3
[19:43:46.507]                      // -> [SWO_Pin <= 0x00010003]
[19:43:46.507]                  </block>
[19:43:46.507]                  <block atomic="false" info="configure SWO">
[19:43:46.507]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:43:46.507]                      // -> [pin <= 0x00000003]
[19:43:46.507]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:43:46.508]                      // -> [port <= 0x00000001]
[19:43:46.508]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:43:46.508]                      // -> [portAdr <= 0x40020400]
[19:43:46.508]                    pos = pin * 2;
[19:43:46.508]                      // -> [pos <= 0x00000006]
[19:43:46.508]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:43:46.509]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.509]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.509]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:43:46.510]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.510]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.510]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:43:46.511]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.511]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.511]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:43:46.512]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.512]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.512]                  </block>
[19:43:46.512]                  <control if="pin <  8" while="" timeout="0" info="">
[19:43:46.512]                    // if-block "pin <  8"
[19:43:46.512]                      // =>  TRUE
[19:43:46.512]                    <block atomic="false" info="">
[19:43:46.513]                      pos = ((pin    ) & 7) * 4;
[19:43:46.513]                        // -> [pos <= 0x0000000C]
[19:43:46.513]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:43:46.513]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.514]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.514]                    </block>
[19:43:46.514]                    // end if-block "pin <  8"
[19:43:46.514]                  </control>
[19:43:46.514]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:43:46.514]                    // if-block "pin >= 8"
[19:43:46.514]                      // =>  FALSE
[19:43:46.514]                    // skip if-block "pin >= 8"
[19:43:46.514]                  </control>
[19:43:46.515]                </sequence>
[19:43:46.515]            </block>
[19:43:46.515]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:46.515]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:43:46.515]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:46.515]            </block>
[19:43:46.516]          </sequence>
[19:43:46.516]      </block>
[19:43:46.516]      // end if-block "traceSWO"
[19:43:46.516]    </control>
[19:43:46.516]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:46.516]      // if-block "traceTPIU"
[19:43:46.516]        // =>  FALSE
[19:43:46.516]      // skip if-block "traceTPIU"
[19:43:46.516]    </control>
[19:43:46.516]  </sequence>
[19:43:46.517]  
[19:56:14.986]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:56:14.986]  
[19:56:14.986]  <debugvars>
[19:56:14.986]    // Pre-defined
[19:56:14.986]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:56:14.986]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:56:14.987]    __dp=0x00000000
[19:56:14.987]    __ap=0x00000000
[19:56:14.987]    __traceout=0x00000001      (SWO Trace)
[19:56:14.987]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:56:14.987]    __FlashAddr=0x00000000
[19:56:14.987]    __FlashLen=0x00000000
[19:56:14.988]    __FlashArg=0x00000000
[19:56:14.988]    __FlashOp=0x00000000
[19:56:14.988]    __Result=0x00000000
[19:56:14.988]    
[19:56:14.988]    // User-defined
[19:56:14.988]    DbgMCU_CR=0x00000007
[19:56:14.989]    DbgMCU_APB1_Fz=0x00000000
[19:56:14.989]    DbgMCU_APB2_Fz=0x00000000
[19:56:14.989]    TraceClk_Pin=0x00040002
[19:56:14.989]    TraceD0_Pin=0x00040003
[19:56:14.989]    TraceD1_Pin=0x00040004
[19:56:14.989]    TraceD2_Pin=0x00040005
[19:56:14.990]    TraceD3_Pin=0x00040006
[19:56:14.990]  </debugvars>
[19:56:14.990]  
[19:56:14.990]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:56:14.990]    <block atomic="false" info="">
[19:56:14.990]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:56:14.992]        // -> [traceSWO <= 0x00000001]
[19:56:14.992]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:56:14.992]        // -> [traceTPIU <= 0x00000000]
[19:56:14.992]    </block>
[19:56:14.992]    <control if="traceSWO" while="" timeout="0" info="">
[19:56:14.992]      // if-block "traceSWO"
[19:56:14.993]        // =>  TRUE
[19:56:14.993]      <block atomic="false" info="">
[19:56:14.993]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:56:14.993]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:56:14.993]            <block atomic="false" info="">
[19:56:14.993]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:56:14.994]                // -> [dbgmcu_val <= 0x00000000]
[19:56:14.994]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:56:14.994]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:56:14.994]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:56:14.994]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:56:14.995]                // -> [dbgmcu_val <= 0x00000007]
[19:56:14.995]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:56:14.995]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:56:14.995]              Sequence("ConfigureTraceSWOPin");
[19:56:14.995]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:56:14.995]                  <block atomic="false" info="">
[19:56:14.995]                    __var pin     = 0;
[19:56:14.996]                      // -> [pin <= 0x00000000]
[19:56:14.996]                    __var port    = 0;
[19:56:14.996]                      // -> [port <= 0x00000000]
[19:56:14.996]                    __var portAdr = 0;
[19:56:14.996]                      // -> [portAdr <= 0x00000000]
[19:56:14.996]                    __var pos     = 0;
[19:56:14.997]                      // -> [pos <= 0x00000000]
[19:56:14.997]                    __var SWO_Pin = 0x00010003;          // PB3
[19:56:14.997]                      // -> [SWO_Pin <= 0x00010003]
[19:56:14.997]                  </block>
[19:56:14.997]                  <block atomic="false" info="configure SWO">
[19:56:14.997]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:56:14.998]                      // -> [pin <= 0x00000003]
[19:56:14.998]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:56:14.998]                      // -> [port <= 0x00000001]
[19:56:14.998]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:56:14.998]                      // -> [portAdr <= 0x40020400]
[19:56:14.998]                    pos = pin * 2;
[19:56:14.999]                      // -> [pos <= 0x00000006]
[19:56:14.999]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:56:14.999]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.000]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.000]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:56:15.000]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.001]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.001]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:56:15.001]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.002]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.002]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:56:15.002]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.003]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.003]                  </block>
[19:56:15.003]                  <control if="pin <  8" while="" timeout="0" info="">
[19:56:15.003]                    // if-block "pin <  8"
[19:56:15.004]                      // =>  TRUE
[19:56:15.004]                    <block atomic="false" info="">
[19:56:15.004]                      pos = ((pin    ) & 7) * 4;
[19:56:15.004]                        // -> [pos <= 0x0000000C]
[19:56:15.004]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:56:15.005]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.005]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.005]                    </block>
[19:56:15.006]                    // end if-block "pin <  8"
[19:56:15.006]                  </control>
[19:56:15.006]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:56:15.006]                    // if-block "pin >= 8"
[19:56:15.006]                      // =>  FALSE
[19:56:15.006]                    // skip if-block "pin >= 8"
[19:56:15.007]                  </control>
[19:56:15.007]                </sequence>
[19:56:15.007]            </block>
[19:56:15.007]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:56:15.007]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:56:15.007]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:56:15.007]            </block>
[19:56:15.007]          </sequence>
[19:56:15.007]      </block>
[19:56:15.007]      // end if-block "traceSWO"
[19:56:15.008]    </control>
[19:56:15.008]    <control if="traceTPIU" while="" timeout="0" info="">
[19:56:15.008]      // if-block "traceTPIU"
[19:56:15.008]        // =>  FALSE
[19:56:15.009]      // skip if-block "traceTPIU"
[19:56:15.009]    </control>
[19:56:15.009]  </sequence>
[19:56:15.009]  
[19:58:16.926]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:58:16.926]  
[19:58:16.926]  <debugvars>
[19:58:16.926]    // Pre-defined
[19:58:16.927]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:58:16.927]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:58:16.927]    __dp=0x00000000
[19:58:16.927]    __ap=0x00000000
[19:58:16.927]    __traceout=0x00000001      (SWO Trace)
[19:58:16.928]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:58:16.928]    __FlashAddr=0x00000000
[19:58:16.928]    __FlashLen=0x00000000
[19:58:16.928]    __FlashArg=0x00000000
[19:58:16.928]    __FlashOp=0x00000000
[19:58:16.929]    __Result=0x00000000
[19:58:16.929]    
[19:58:16.929]    // User-defined
[19:58:16.929]    DbgMCU_CR=0x00000007
[19:58:16.929]    DbgMCU_APB1_Fz=0x00000000
[19:58:16.929]    DbgMCU_APB2_Fz=0x00000000
[19:58:16.930]    TraceClk_Pin=0x00040002
[19:58:16.930]    TraceD0_Pin=0x00040003
[19:58:16.930]    TraceD1_Pin=0x00040004
[19:58:16.930]    TraceD2_Pin=0x00040005
[19:58:16.930]    TraceD3_Pin=0x00040006
[19:58:16.930]  </debugvars>
[19:58:16.931]  
[19:58:16.931]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:58:16.931]    <block atomic="false" info="">
[19:58:16.931]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:58:16.931]        // -> [traceSWO <= 0x00000001]
[19:58:16.931]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:58:16.932]        // -> [traceTPIU <= 0x00000000]
[19:58:16.932]    </block>
[19:58:16.932]    <control if="traceSWO" while="" timeout="0" info="">
[19:58:16.932]      // if-block "traceSWO"
[19:58:16.932]        // =>  TRUE
[19:58:16.933]      <block atomic="false" info="">
[19:58:16.933]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:58:16.933]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:58:16.933]            <block atomic="false" info="">
[19:58:16.933]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:58:16.933]                // -> [dbgmcu_val <= 0x00000000]
[19:58:16.933]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:58:16.934]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:58:16.934]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:58:16.934]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.935]                // -> [dbgmcu_val <= 0x00000007]
[19:58:16.935]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:58:16.935]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:58:16.935]              Sequence("ConfigureTraceSWOPin");
[19:58:16.935]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:58:16.935]                  <block atomic="false" info="">
[19:58:16.935]                    __var pin     = 0;
[19:58:16.936]                      // -> [pin <= 0x00000000]
[19:58:16.936]                    __var port    = 0;
[19:58:16.936]                      // -> [port <= 0x00000000]
[19:58:16.936]                    __var portAdr = 0;
[19:58:16.936]                      // -> [portAdr <= 0x00000000]
[19:58:16.937]                    __var pos     = 0;
[19:58:16.937]                      // -> [pos <= 0x00000000]
[19:58:16.937]                    __var SWO_Pin = 0x00010003;          // PB3
[19:58:16.937]                      // -> [SWO_Pin <= 0x00010003]
[19:58:16.937]                  </block>
[19:58:16.937]                  <block atomic="false" info="configure SWO">
[19:58:16.938]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:58:16.938]                      // -> [pin <= 0x00000003]
[19:58:16.938]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:58:16.938]                      // -> [port <= 0x00000001]
[19:58:16.938]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:58:16.939]                      // -> [portAdr <= 0x40020400]
[19:58:16.939]                    pos = pin * 2;
[19:58:16.939]                      // -> [pos <= 0x00000006]
[19:58:16.939]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:58:16.940]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.940]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.940]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:58:16.941]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.941]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.942]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:58:16.942]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.943]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.943]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:58:16.943]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.944]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.944]                  </block>
[19:58:16.944]                  <control if="pin <  8" while="" timeout="0" info="">
[19:58:16.944]                    // if-block "pin <  8"
[19:58:16.945]                      // =>  TRUE
[19:58:16.945]                    <block atomic="false" info="">
[19:58:16.945]                      pos = ((pin    ) & 7) * 4;
[19:58:16.945]                        // -> [pos <= 0x0000000C]
[19:58:16.945]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:58:16.946]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.946]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.946]                    </block>
[19:58:16.947]                    // end if-block "pin <  8"
[19:58:16.947]                  </control>
[19:58:16.947]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:58:16.947]                    // if-block "pin >= 8"
[19:58:16.947]                      // =>  FALSE
[19:58:16.948]                    // skip if-block "pin >= 8"
[19:58:16.948]                  </control>
[19:58:16.948]                </sequence>
[19:58:16.948]            </block>
[19:58:16.948]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:58:16.948]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:58:16.949]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:58:16.949]            </block>
[19:58:16.949]          </sequence>
[19:58:16.949]      </block>
[19:58:16.950]      // end if-block "traceSWO"
[19:58:16.950]    </control>
[19:58:16.950]    <control if="traceTPIU" while="" timeout="0" info="">
[19:58:16.950]      // if-block "traceTPIU"
[19:58:16.950]        // =>  FALSE
[19:58:16.950]      // skip if-block "traceTPIU"
[19:58:16.951]    </control>
[19:58:16.951]  </sequence>
[19:58:16.951]  
[20:11:53.924]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:11:53.924]  
[20:11:53.924]  <debugvars>
[20:11:53.924]    // Pre-defined
[20:11:53.925]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:11:53.925]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:11:53.925]    __dp=0x00000000
[20:11:53.925]    __ap=0x00000000
[20:11:53.925]    __traceout=0x00000001      (SWO Trace)
[20:11:53.925]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:11:53.925]    __FlashAddr=0x00000000
[20:11:53.925]    __FlashLen=0x00000000
[20:11:53.926]    __FlashArg=0x00000000
[20:11:53.926]    __FlashOp=0x00000000
[20:11:53.926]    __Result=0x00000000
[20:11:53.926]    
[20:11:53.926]    // User-defined
[20:11:53.926]    DbgMCU_CR=0x00000007
[20:11:53.926]    DbgMCU_APB1_Fz=0x00000000
[20:11:53.927]    DbgMCU_APB2_Fz=0x00000000
[20:11:53.927]    TraceClk_Pin=0x00040002
[20:11:53.927]    TraceD0_Pin=0x00040003
[20:11:53.927]    TraceD1_Pin=0x00040004
[20:11:53.927]    TraceD2_Pin=0x00040005
[20:11:53.927]    TraceD3_Pin=0x00040006
[20:11:53.927]  </debugvars>
[20:11:53.927]  
[20:11:53.928]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:11:53.928]    <block atomic="false" info="">
[20:11:53.928]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:11:53.928]        // -> [traceSWO <= 0x00000001]
[20:11:53.928]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:11:53.928]        // -> [traceTPIU <= 0x00000000]
[20:11:53.928]    </block>
[20:11:53.929]    <control if="traceSWO" while="" timeout="0" info="">
[20:11:53.929]      // if-block "traceSWO"
[20:11:53.929]        // =>  TRUE
[20:11:53.929]      <block atomic="false" info="">
[20:11:53.929]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:11:53.929]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:11:53.929]            <block atomic="false" info="">
[20:11:53.929]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:11:53.930]                // -> [dbgmcu_val <= 0x00000000]
[20:11:53.930]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:11:53.930]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:11:53.930]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:11:53.930]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.931]                // -> [dbgmcu_val <= 0x00000007]
[20:11:53.931]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:11:53.931]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:11:53.931]              Sequence("ConfigureTraceSWOPin");
[20:11:53.931]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:11:53.931]                  <block atomic="false" info="">
[20:11:53.932]                    __var pin     = 0;
[20:11:53.932]                      // -> [pin <= 0x00000000]
[20:11:53.932]                    __var port    = 0;
[20:11:53.932]                      // -> [port <= 0x00000000]
[20:11:53.932]                    __var portAdr = 0;
[20:11:53.932]                      // -> [portAdr <= 0x00000000]
[20:11:53.932]                    __var pos     = 0;
[20:11:53.932]                      // -> [pos <= 0x00000000]
[20:11:53.933]                    __var SWO_Pin = 0x00010003;          // PB3
[20:11:53.933]                      // -> [SWO_Pin <= 0x00010003]
[20:11:53.933]                  </block>
[20:11:53.933]                  <block atomic="false" info="configure SWO">
[20:11:53.933]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:11:53.933]                      // -> [pin <= 0x00000003]
[20:11:53.934]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:11:53.934]                      // -> [port <= 0x00000001]
[20:11:53.934]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:11:53.934]                      // -> [portAdr <= 0x40020400]
[20:11:53.934]                    pos = pin * 2;
[20:11:53.935]                      // -> [pos <= 0x00000006]
[20:11:53.935]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:11:53.935]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.935]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.936]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:11:53.936]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.937]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.937]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:11:53.937]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.938]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.938]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:11:53.938]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.939]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.939]                  </block>
[20:11:53.939]                  <control if="pin <  8" while="" timeout="0" info="">
[20:11:53.939]                    // if-block "pin <  8"
[20:11:53.939]                      // =>  TRUE
[20:11:53.939]                    <block atomic="false" info="">
[20:11:53.939]                      pos = ((pin    ) & 7) * 4;
[20:11:53.939]                        // -> [pos <= 0x0000000C]
[20:11:53.940]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:11:53.940]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.941]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.941]                    </block>
[20:11:53.941]                    // end if-block "pin <  8"
[20:11:53.941]                  </control>
[20:11:53.941]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:11:53.941]                    // if-block "pin >= 8"
[20:11:53.941]                      // =>  FALSE
[20:11:53.942]                    // skip if-block "pin >= 8"
[20:11:53.942]                  </control>
[20:11:53.942]                </sequence>
[20:11:53.942]            </block>
[20:11:53.942]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:11:53.942]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:11:53.943]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:11:53.943]            </block>
[20:11:53.943]          </sequence>
[20:11:53.943]      </block>
[20:11:53.943]      // end if-block "traceSWO"
[20:11:53.943]    </control>
[20:11:53.944]    <control if="traceTPIU" while="" timeout="0" info="">
[20:11:53.944]      // if-block "traceTPIU"
[20:11:53.944]        // =>  FALSE
[20:11:53.944]      // skip if-block "traceTPIU"
[20:11:53.944]    </control>
[20:11:53.944]  </sequence>
[20:11:53.944]  
[20:13:28.903]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:13:28.903]  
[20:13:28.909]  <debugvars>
[20:13:28.910]    // Pre-defined
[20:13:28.910]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:13:28.910]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:13:28.910]    __dp=0x00000000
[20:13:28.910]    __ap=0x00000000
[20:13:28.910]    __traceout=0x00000001      (SWO Trace)
[20:13:28.911]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:13:28.911]    __FlashAddr=0x00000000
[20:13:28.911]    __FlashLen=0x00000000
[20:13:28.911]    __FlashArg=0x00000000
[20:13:28.911]    __FlashOp=0x00000000
[20:13:28.911]    __Result=0x00000000
[20:13:28.911]    
[20:13:28.911]    // User-defined
[20:13:28.911]    DbgMCU_CR=0x00000007
[20:13:28.912]    DbgMCU_APB1_Fz=0x00000000
[20:13:28.912]    DbgMCU_APB2_Fz=0x00000000
[20:13:28.912]    TraceClk_Pin=0x00040002
[20:13:28.912]    TraceD0_Pin=0x00040003
[20:13:28.912]    TraceD1_Pin=0x00040004
[20:13:28.912]    TraceD2_Pin=0x00040005
[20:13:28.912]    TraceD3_Pin=0x00040006
[20:13:28.913]  </debugvars>
[20:13:28.913]  
[20:13:28.913]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:13:28.913]    <block atomic="false" info="">
[20:13:28.913]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:13:28.913]        // -> [traceSWO <= 0x00000001]
[20:13:28.913]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:13:28.914]        // -> [traceTPIU <= 0x00000000]
[20:13:28.914]    </block>
[20:13:28.914]    <control if="traceSWO" while="" timeout="0" info="">
[20:13:28.914]      // if-block "traceSWO"
[20:13:28.914]        // =>  TRUE
[20:13:28.914]      <block atomic="false" info="">
[20:13:28.914]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:13:28.915]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:13:28.915]            <block atomic="false" info="">
[20:13:28.915]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:13:28.915]                // -> [dbgmcu_val <= 0x00000000]
[20:13:28.915]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:13:28.915]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:13:28.915]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:13:28.916]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.916]                // -> [dbgmcu_val <= 0x00000007]
[20:13:28.916]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:13:28.916]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:13:28.917]              Sequence("ConfigureTraceSWOPin");
[20:13:28.917]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:13:28.917]                  <block atomic="false" info="">
[20:13:28.917]                    __var pin     = 0;
[20:13:28.917]                      // -> [pin <= 0x00000000]
[20:13:28.917]                    __var port    = 0;
[20:13:28.917]                      // -> [port <= 0x00000000]
[20:13:28.918]                    __var portAdr = 0;
[20:13:28.918]                      // -> [portAdr <= 0x00000000]
[20:13:28.918]                    __var pos     = 0;
[20:13:28.918]                      // -> [pos <= 0x00000000]
[20:13:28.918]                    __var SWO_Pin = 0x00010003;          // PB3
[20:13:28.918]                      // -> [SWO_Pin <= 0x00010003]
[20:13:28.918]                  </block>
[20:13:28.919]                  <block atomic="false" info="configure SWO">
[20:13:28.919]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:13:28.919]                      // -> [pin <= 0x00000003]
[20:13:28.919]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:13:28.919]                      // -> [port <= 0x00000001]
[20:13:28.919]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:13:28.919]                      // -> [portAdr <= 0x40020400]
[20:13:28.920]                    pos = pin * 2;
[20:13:28.920]                      // -> [pos <= 0x00000006]
[20:13:28.920]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:13:28.920]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.921]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.921]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:13:28.921]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.922]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.922]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:13:28.923]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.923]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.923]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:13:28.924]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.924]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.924]                  </block>
[20:13:28.924]                  <control if="pin <  8" while="" timeout="0" info="">
[20:13:28.924]                    // if-block "pin <  8"
[20:13:28.925]                      // =>  TRUE
[20:13:28.925]                    <block atomic="false" info="">
[20:13:28.925]                      pos = ((pin    ) & 7) * 4;
[20:13:28.925]                        // -> [pos <= 0x0000000C]
[20:13:28.925]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:13:28.925]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.926]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.926]                    </block>
[20:13:28.926]                    // end if-block "pin <  8"
[20:13:28.926]                  </control>
[20:13:28.926]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:13:28.926]                    // if-block "pin >= 8"
[20:13:28.927]                      // =>  FALSE
[20:13:28.927]                    // skip if-block "pin >= 8"
[20:13:28.927]                  </control>
[20:13:28.927]                </sequence>
[20:13:28.927]            </block>
[20:13:28.927]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:13:28.927]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:13:28.928]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:13:28.928]            </block>
[20:13:28.928]          </sequence>
[20:13:28.928]      </block>
[20:13:28.928]      // end if-block "traceSWO"
[20:13:28.929]    </control>
[20:13:28.929]    <control if="traceTPIU" while="" timeout="0" info="">
[20:13:28.929]      // if-block "traceTPIU"
[20:13:28.929]        // =>  FALSE
[20:13:28.929]      // skip if-block "traceTPIU"
[20:13:28.929]    </control>
[20:13:28.929]  </sequence>
[20:13:28.929]  
[20:14:56.298]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:14:56.298]  
[20:14:56.302]  <debugvars>
[20:14:56.302]    // Pre-defined
[20:14:56.303]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:14:56.304]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:14:56.304]    __dp=0x00000000
[20:14:56.305]    __ap=0x00000000
[20:14:56.305]    __traceout=0x00000001      (SWO Trace)
[20:14:56.306]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:14:56.306]    __FlashAddr=0x00000000
[20:14:56.307]    __FlashLen=0x00000000
[20:14:56.308]    __FlashArg=0x00000000
[20:14:56.308]    __FlashOp=0x00000000
[20:14:56.309]    __Result=0x00000000
[20:14:56.309]    
[20:14:56.309]    // User-defined
[20:14:56.310]    DbgMCU_CR=0x00000007
[20:14:56.310]    DbgMCU_APB1_Fz=0x00000000
[20:14:56.311]    DbgMCU_APB2_Fz=0x00000000
[20:14:56.311]    TraceClk_Pin=0x00040002
[20:14:56.311]    TraceD0_Pin=0x00040003
[20:14:56.311]    TraceD1_Pin=0x00040004
[20:14:56.312]    TraceD2_Pin=0x00040005
[20:14:56.312]    TraceD3_Pin=0x00040006
[20:14:56.312]  </debugvars>
[20:14:56.312]  
[20:14:56.313]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:14:56.313]    <block atomic="false" info="">
[20:14:56.313]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:14:56.313]        // -> [traceSWO <= 0x00000001]
[20:14:56.313]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:14:56.314]        // -> [traceTPIU <= 0x00000000]
[20:14:56.314]    </block>
[20:14:56.314]    <control if="traceSWO" while="" timeout="0" info="">
[20:14:56.314]      // if-block "traceSWO"
[20:14:56.314]        // =>  TRUE
[20:14:56.315]      <block atomic="false" info="">
[20:14:56.315]        Sequence("DisableTraceSWO");
[20:14:56.315]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:14:56.315]            <block atomic="false" info="">
[20:14:56.315]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:14:56.316]                // -> [dbgmcu_val <= 0x00000000]
[20:14:56.316]            </block>
[20:14:56.316]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:14:56.316]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:14:56.317]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:14:56.317]                // -> [dbgmcu_val <= 0x00000007]
[20:14:56.317]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:14:56.318]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:14:56.318]            </block>
[20:14:56.318]          </sequence>
[20:14:56.319]      </block>
[20:14:56.319]      // end if-block "traceSWO"
[20:14:56.319]    </control>
[20:14:56.319]    <control if="traceTPIU" while="" timeout="0" info="">
[20:14:56.319]      // if-block "traceTPIU"
[20:14:56.320]        // =>  FALSE
[20:14:56.320]      // skip if-block "traceTPIU"
[20:14:56.320]    </control>
[20:14:56.320]  </sequence>
[20:14:56.320]  
[20:15:42.817]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:15:42.817]  
[20:15:42.817]  <debugvars>
[20:15:42.817]    // Pre-defined
[20:15:42.818]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:15:42.818]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:15:42.818]    __dp=0x00000000
[20:15:42.818]    __ap=0x00000000
[20:15:42.818]    __traceout=0x00000001      (SWO Trace)
[20:15:42.818]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:15:42.819]    __FlashAddr=0x00000000
[20:15:42.819]    __FlashLen=0x00000000
[20:15:42.819]    __FlashArg=0x00000000
[20:15:42.819]    __FlashOp=0x00000000
[20:15:42.819]    __Result=0x00000000
[20:15:42.819]    
[20:15:42.819]    // User-defined
[20:15:42.820]    DbgMCU_CR=0x00000007
[20:15:42.820]    DbgMCU_APB1_Fz=0x00000000
[20:15:42.820]    DbgMCU_APB2_Fz=0x00000000
[20:15:42.820]    TraceClk_Pin=0x00040002
[20:15:42.820]    TraceD0_Pin=0x00040003
[20:15:42.820]    TraceD1_Pin=0x00040004
[20:15:42.820]    TraceD2_Pin=0x00040005
[20:15:42.821]    TraceD3_Pin=0x00040006
[20:15:42.821]  </debugvars>
[20:15:42.821]  
[20:15:42.821]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:15:42.821]    <block atomic="false" info="">
[20:15:42.821]      Sequence("CheckID");
[20:15:42.821]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:15:42.822]          <block atomic="false" info="">
[20:15:42.822]            __var pidr1 = 0;
[20:15:42.822]              // -> [pidr1 <= 0x00000000]
[20:15:42.822]            __var pidr2 = 0;
[20:15:42.822]              // -> [pidr2 <= 0x00000000]
[20:15:42.822]            __var jep106id = 0;
[20:15:42.823]              // -> [jep106id <= 0x00000000]
[20:15:42.823]            __var ROMTableBase = 0;
[20:15:42.823]              // -> [ROMTableBase <= 0x00000000]
[20:15:42.823]            __ap = 0;      // AHB-AP
[20:15:42.823]              // -> [__ap <= 0x00000000]
[20:15:42.823]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:15:42.824]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.824]              // -> [ROMTableBase <= 0xE00FD000]
[20:15:42.824]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:15:42.824]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.825]              // -> [pidr1 <= 0x00000004]
[20:15:42.825]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:15:42.825]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.826]              // -> [pidr2 <= 0x0000001A]
[20:15:42.826]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:15:42.826]              // -> [jep106id <= 0x00000020]
[20:15:42.826]          </block>
[20:15:42.826]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:15:42.826]            // if-block "jep106id != 0x20"
[20:15:42.827]              // =>  FALSE
[20:15:42.827]            // skip if-block "jep106id != 0x20"
[20:15:42.827]          </control>
[20:15:42.827]        </sequence>
[20:15:42.827]    </block>
[20:15:42.827]  </sequence>
[20:15:42.827]  
[20:15:42.842]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:15:42.842]  
[20:15:42.843]  <debugvars>
[20:15:42.843]    // Pre-defined
[20:15:42.843]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:15:42.843]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[20:15:42.844]    __dp=0x00000000
[20:15:42.844]    __ap=0x00000000
[20:15:42.844]    __traceout=0x00000001      (SWO Trace)
[20:15:42.844]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:15:42.844]    __FlashAddr=0x00000000
[20:15:42.845]    __FlashLen=0x00000000
[20:15:42.845]    __FlashArg=0x00000000
[20:15:42.845]    __FlashOp=0x00000000
[20:15:42.845]    __Result=0x00000000
[20:15:42.845]    
[20:15:42.845]    // User-defined
[20:15:42.846]    DbgMCU_CR=0x00000007
[20:15:42.846]    DbgMCU_APB1_Fz=0x00000000
[20:15:42.846]    DbgMCU_APB2_Fz=0x00000000
[20:15:42.846]    TraceClk_Pin=0x00040002
[20:15:42.847]    TraceD0_Pin=0x00040003
[20:15:42.847]    TraceD1_Pin=0x00040004
[20:15:42.847]    TraceD2_Pin=0x00040005
[20:15:42.847]    TraceD3_Pin=0x00040006
[20:15:42.847]  </debugvars>
[20:15:42.848]  
[20:15:42.848]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:15:42.848]    <block atomic="false" info="">
[20:15:42.848]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:15:42.849]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.849]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:15:42.850]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.850]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:15:42.851]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.851]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:15:42.852]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:15:42.852]    </block>
[20:15:42.852]  </sequence>
[20:15:42.852]  
[20:16:14.383]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:16:14.383]  
[20:16:14.383]  <debugvars>
[20:16:14.383]    // Pre-defined
[20:16:14.383]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:14.383]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:14.383]    __dp=0x00000000
[20:16:14.384]    __ap=0x00000000
[20:16:14.384]    __traceout=0x00000001      (SWO Trace)
[20:16:14.384]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:14.384]    __FlashAddr=0x00000000
[20:16:14.385]    __FlashLen=0x00000000
[20:16:14.385]    __FlashArg=0x00000000
[20:16:14.385]    __FlashOp=0x00000000
[20:16:14.385]    __Result=0x00000000
[20:16:14.385]    
[20:16:14.385]    // User-defined
[20:16:14.385]    DbgMCU_CR=0x00000007
[20:16:14.386]    DbgMCU_APB1_Fz=0x00000000
[20:16:14.386]    DbgMCU_APB2_Fz=0x00000000
[20:16:14.386]    TraceClk_Pin=0x00040002
[20:16:14.386]    TraceD0_Pin=0x00040003
[20:16:14.386]    TraceD1_Pin=0x00040004
[20:16:14.386]    TraceD2_Pin=0x00040005
[20:16:14.386]    TraceD3_Pin=0x00040006
[20:16:14.387]  </debugvars>
[20:16:14.387]  
[20:16:14.387]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:16:14.387]    <block atomic="false" info="">
[20:16:14.387]      Sequence("CheckID");
[20:16:14.387]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:16:14.387]          <block atomic="false" info="">
[20:16:14.388]            __var pidr1 = 0;
[20:16:14.388]              // -> [pidr1 <= 0x00000000]
[20:16:14.388]            __var pidr2 = 0;
[20:16:14.388]              // -> [pidr2 <= 0x00000000]
[20:16:14.388]            __var jep106id = 0;
[20:16:14.389]              // -> [jep106id <= 0x00000000]
[20:16:14.389]            __var ROMTableBase = 0;
[20:16:14.389]              // -> [ROMTableBase <= 0x00000000]
[20:16:14.390]            __ap = 0;      // AHB-AP
[20:16:14.390]              // -> [__ap <= 0x00000000]
[20:16:14.390]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:16:14.390]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.391]              // -> [ROMTableBase <= 0xE00FD000]
[20:16:14.391]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:16:14.391]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.392]              // -> [pidr1 <= 0x00000004]
[20:16:14.392]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:16:14.392]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.392]              // -> [pidr2 <= 0x0000001A]
[20:16:14.393]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:16:14.393]              // -> [jep106id <= 0x00000020]
[20:16:14.393]          </block>
[20:16:14.393]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:16:14.394]            // if-block "jep106id != 0x20"
[20:16:14.394]              // =>  FALSE
[20:16:14.394]            // skip if-block "jep106id != 0x20"
[20:16:14.394]          </control>
[20:16:14.394]        </sequence>
[20:16:14.394]    </block>
[20:16:14.394]  </sequence>
[20:16:14.394]  
[20:16:14.409]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:16:14.409]  
[20:16:14.410]  <debugvars>
[20:16:14.410]    // Pre-defined
[20:16:14.410]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:14.410]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:14.410]    __dp=0x00000000
[20:16:14.411]    __ap=0x00000000
[20:16:14.411]    __traceout=0x00000001      (SWO Trace)
[20:16:14.411]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:14.411]    __FlashAddr=0x00000000
[20:16:14.411]    __FlashLen=0x00000000
[20:16:14.411]    __FlashArg=0x00000000
[20:16:14.411]    __FlashOp=0x00000000
[20:16:14.411]    __Result=0x00000000
[20:16:14.412]    
[20:16:14.412]    // User-defined
[20:16:14.412]    DbgMCU_CR=0x00000007
[20:16:14.412]    DbgMCU_APB1_Fz=0x00000000
[20:16:14.412]    DbgMCU_APB2_Fz=0x00000000
[20:16:14.412]    TraceClk_Pin=0x00040002
[20:16:14.412]    TraceD0_Pin=0x00040003
[20:16:14.413]    TraceD1_Pin=0x00040004
[20:16:14.413]    TraceD2_Pin=0x00040005
[20:16:14.413]    TraceD3_Pin=0x00040006
[20:16:14.413]  </debugvars>
[20:16:14.413]  
[20:16:14.414]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:16:14.414]    <block atomic="false" info="">
[20:16:14.414]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:16:14.414]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.415]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:16:14.415]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.415]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:16:14.416]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.416]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:16:14.416]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.417]    </block>
[20:16:14.417]  </sequence>
[20:16:14.417]  
[20:16:14.433]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:16:14.433]  
[20:16:14.434]  <debugvars>
[20:16:14.434]    // Pre-defined
[20:16:14.434]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:14.434]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:14.434]    __dp=0x00000000
[20:16:14.434]    __ap=0x00000000
[20:16:14.435]    __traceout=0x00000001      (SWO Trace)
[20:16:14.435]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:14.435]    __FlashAddr=0x00000000
[20:16:14.435]    __FlashLen=0x00000000
[20:16:14.435]    __FlashArg=0x00000000
[20:16:14.435]    __FlashOp=0x00000000
[20:16:14.436]    __Result=0x00000000
[20:16:14.436]    
[20:16:14.436]    // User-defined
[20:16:14.436]    DbgMCU_CR=0x00000007
[20:16:14.436]    DbgMCU_APB1_Fz=0x00000000
[20:16:14.436]    DbgMCU_APB2_Fz=0x00000000
[20:16:14.436]    TraceClk_Pin=0x00040002
[20:16:14.437]    TraceD0_Pin=0x00040003
[20:16:14.437]    TraceD1_Pin=0x00040004
[20:16:14.437]    TraceD2_Pin=0x00040005
[20:16:14.437]    TraceD3_Pin=0x00040006
[20:16:14.437]  </debugvars>
[20:16:14.437]  
[20:16:14.437]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:16:14.438]    <block atomic="false" info="">
[20:16:14.438]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:16:14.438]        // -> [traceSWO <= 0x00000001]
[20:16:14.438]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:16:14.438]        // -> [traceTPIU <= 0x00000000]
[20:16:14.438]    </block>
[20:16:14.439]    <control if="traceSWO" while="" timeout="0" info="">
[20:16:14.439]      // if-block "traceSWO"
[20:16:14.439]        // =>  TRUE
[20:16:14.439]      <block atomic="false" info="">
[20:16:14.439]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:16:14.439]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:16:14.439]            <block atomic="false" info="">
[20:16:14.440]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:16:14.440]                // -> [dbgmcu_val <= 0x00000000]
[20:16:14.440]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:16:14.440]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:16:14.440]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:16:14.441]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.441]                // -> [dbgmcu_val <= 0x00000007]
[20:16:14.441]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:16:14.441]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:16:14.441]              Sequence("ConfigureTraceSWOPin");
[20:16:14.441]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:16:14.442]                  <block atomic="false" info="">
[20:16:14.442]                    __var pin     = 0;
[20:16:14.442]                      // -> [pin <= 0x00000000]
[20:16:14.442]                    __var port    = 0;
[20:16:14.442]                      // -> [port <= 0x00000000]
[20:16:14.442]                    __var portAdr = 0;
[20:16:14.442]                      // -> [portAdr <= 0x00000000]
[20:16:14.443]                    __var pos     = 0;
[20:16:14.443]                      // -> [pos <= 0x00000000]
[20:16:14.443]                    __var SWO_Pin = 0x00010003;          // PB3
[20:16:14.443]                      // -> [SWO_Pin <= 0x00010003]
[20:16:14.444]                  </block>
[20:16:14.444]                  <block atomic="false" info="configure SWO">
[20:16:14.444]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:16:14.444]                      // -> [pin <= 0x00000003]
[20:16:14.444]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:16:14.444]                      // -> [port <= 0x00000001]
[20:16:14.444]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:16:14.444]                      // -> [portAdr <= 0x40020400]
[20:16:14.444]                    pos = pin * 2;
[20:16:14.444]                      // -> [pos <= 0x00000006]
[20:16:14.445]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:16:14.445]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.445]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.445]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:16:14.446]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.446]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.446]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:16:14.447]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.447]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.448]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:16:14.448]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.449]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.449]                  </block>
[20:16:14.449]                  <control if="pin <  8" while="" timeout="0" info="">
[20:16:14.449]                    // if-block "pin <  8"
[20:16:14.449]                      // =>  TRUE
[20:16:14.449]                    <block atomic="false" info="">
[20:16:14.449]                      pos = ((pin    ) & 7) * 4;
[20:16:14.450]                        // -> [pos <= 0x0000000C]
[20:16:14.450]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:16:14.450]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.451]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.451]                    </block>
[20:16:14.451]                    // end if-block "pin <  8"
[20:16:14.451]                  </control>
[20:16:14.451]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:16:14.451]                    // if-block "pin >= 8"
[20:16:14.452]                      // =>  FALSE
[20:16:14.452]                    // skip if-block "pin >= 8"
[20:16:14.452]                  </control>
[20:16:14.452]                </sequence>
[20:16:14.452]            </block>
[20:16:14.452]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:16:14.452]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:16:14.453]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.453]            </block>
[20:16:14.453]          </sequence>
[20:16:14.454]      </block>
[20:16:14.454]      // end if-block "traceSWO"
[20:16:14.454]    </control>
[20:16:14.454]    <control if="traceTPIU" while="" timeout="0" info="">
[20:16:14.454]      // if-block "traceTPIU"
[20:16:14.454]        // =>  FALSE
[20:16:14.454]      // skip if-block "traceTPIU"
[20:16:14.454]    </control>
[20:16:14.454]  </sequence>
[20:16:14.455]  
[20:16:14.458]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:16:14.458]  
[20:16:14.458]  <debugvars>
[20:16:14.459]    // Pre-defined
[20:16:14.459]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:14.459]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:14.459]    __dp=0x00000000
[20:16:14.459]    __ap=0x00000000
[20:16:14.459]    __traceout=0x00000001      (SWO Trace)
[20:16:14.460]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:14.460]    __FlashAddr=0x00000000
[20:16:14.460]    __FlashLen=0x00000000
[20:16:14.460]    __FlashArg=0x00000000
[20:16:14.460]    __FlashOp=0x00000000
[20:16:14.460]    __Result=0x00000000
[20:16:14.461]    
[20:16:14.461]    // User-defined
[20:16:14.461]    DbgMCU_CR=0x00000007
[20:16:14.461]    DbgMCU_APB1_Fz=0x00000000
[20:16:14.461]    DbgMCU_APB2_Fz=0x00000000
[20:16:14.461]    TraceClk_Pin=0x00040002
[20:16:14.462]    TraceD0_Pin=0x00040003
[20:16:14.462]    TraceD1_Pin=0x00040004
[20:16:14.462]    TraceD2_Pin=0x00040005
[20:16:14.462]    TraceD3_Pin=0x00040006
[20:16:14.462]  </debugvars>
[20:16:14.462]  
[20:16:14.462]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:16:14.463]    <block atomic="false" info="">
[20:16:14.463]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:16:14.463]        // -> [traceSWO <= 0x00000001]
[20:16:14.463]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:16:14.463]        // -> [traceTPIU <= 0x00000000]
[20:16:14.464]    </block>
[20:16:14.464]    <control if="traceSWO" while="" timeout="0" info="">
[20:16:14.464]      // if-block "traceSWO"
[20:16:14.464]        // =>  TRUE
[20:16:14.464]      <block atomic="false" info="">
[20:16:14.464]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:16:14.465]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:16:14.465]            <block atomic="false" info="">
[20:16:14.465]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:16:14.465]                // -> [dbgmcu_val <= 0x00000000]
[20:16:14.465]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:16:14.465]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:16:14.465]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:16:14.466]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.466]                // -> [dbgmcu_val <= 0x00000007]
[20:16:14.466]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:16:14.467]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:16:14.467]              Sequence("ConfigureTraceSWOPin");
[20:16:14.467]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:16:14.467]                  <block atomic="false" info="">
[20:16:14.467]                    __var pin     = 0;
[20:16:14.467]                      // -> [pin <= 0x00000000]
[20:16:14.467]                    __var port    = 0;
[20:16:14.468]                      // -> [port <= 0x00000000]
[20:16:14.468]                    __var portAdr = 0;
[20:16:14.468]                      // -> [portAdr <= 0x00000000]
[20:16:14.468]                    __var pos     = 0;
[20:16:14.468]                      // -> [pos <= 0x00000000]
[20:16:14.468]                    __var SWO_Pin = 0x00010003;          // PB3
[20:16:14.469]                      // -> [SWO_Pin <= 0x00010003]
[20:16:14.469]                  </block>
[20:16:14.469]                  <block atomic="false" info="configure SWO">
[20:16:14.469]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:16:14.469]                      // -> [pin <= 0x00000003]
[20:16:14.469]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:16:14.469]                      // -> [port <= 0x00000001]
[20:16:14.469]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:16:14.470]                      // -> [portAdr <= 0x40020400]
[20:16:14.470]                    pos = pin * 2;
[20:16:14.470]                      // -> [pos <= 0x00000006]
[20:16:14.470]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:16:14.470]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.471]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.471]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:16:14.472]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.472]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.472]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:16:14.473]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.473]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.473]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:16:14.473]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.474]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.474]                  </block>
[20:16:14.474]                  <control if="pin <  8" while="" timeout="0" info="">
[20:16:14.474]                    // if-block "pin <  8"
[20:16:14.474]                      // =>  TRUE
[20:16:14.474]                    <block atomic="false" info="">
[20:16:14.474]                      pos = ((pin    ) & 7) * 4;
[20:16:14.475]                        // -> [pos <= 0x0000000C]
[20:16:14.475]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:16:14.475]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.476]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.476]                    </block>
[20:16:14.476]                    // end if-block "pin <  8"
[20:16:14.476]                  </control>
[20:16:14.476]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:16:14.476]                    // if-block "pin >= 8"
[20:16:14.476]                      // =>  FALSE
[20:16:14.476]                    // skip if-block "pin >= 8"
[20:16:14.476]                  </control>
[20:16:14.476]                </sequence>
[20:16:14.476]            </block>
[20:16:14.476]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:16:14.476]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:16:14.477]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.477]            </block>
[20:16:14.477]          </sequence>
[20:16:14.477]      </block>
[20:16:14.477]      // end if-block "traceSWO"
[20:16:14.478]    </control>
[20:16:14.478]    <control if="traceTPIU" while="" timeout="0" info="">
[20:16:14.478]      // if-block "traceTPIU"
[20:16:14.478]        // =>  FALSE
[20:16:14.478]      // skip if-block "traceTPIU"
[20:16:14.478]    </control>
[20:16:14.478]  </sequence>
[20:16:14.478]  
[20:16:14.686]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:16:14.686]  
[20:16:14.687]  <debugvars>
[20:16:14.687]    // Pre-defined
[20:16:14.687]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:16:14.687]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:16:14.687]    __dp=0x00000000
[20:16:14.688]    __ap=0x00000000
[20:16:14.688]    __traceout=0x00000001      (SWO Trace)
[20:16:14.688]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:16:14.688]    __FlashAddr=0x00000000
[20:16:14.688]    __FlashLen=0x00000000
[20:16:14.689]    __FlashArg=0x00000000
[20:16:14.689]    __FlashOp=0x00000000
[20:16:14.689]    __Result=0x00000000
[20:16:14.689]    
[20:16:14.689]    // User-defined
[20:16:14.689]    DbgMCU_CR=0x00000007
[20:16:14.690]    DbgMCU_APB1_Fz=0x00000000
[20:16:14.690]    DbgMCU_APB2_Fz=0x00000000
[20:16:14.690]    TraceClk_Pin=0x00040002
[20:16:14.690]    TraceD0_Pin=0x00040003
[20:16:14.690]    TraceD1_Pin=0x00040004
[20:16:14.691]    TraceD2_Pin=0x00040005
[20:16:14.691]    TraceD3_Pin=0x00040006
[20:16:14.691]  </debugvars>
[20:16:14.691]  
[20:16:14.691]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:16:14.692]    <block atomic="false" info="">
[20:16:14.692]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:16:14.692]        // -> [traceSWO <= 0x00000001]
[20:16:14.692]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:16:14.693]        // -> [traceTPIU <= 0x00000000]
[20:16:14.693]    </block>
[20:16:14.693]    <control if="traceSWO" while="" timeout="0" info="">
[20:16:14.693]      // if-block "traceSWO"
[20:16:14.693]        // =>  TRUE
[20:16:14.693]      <block atomic="false" info="">
[20:16:14.694]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:16:14.694]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:16:14.694]            <block atomic="false" info="">
[20:16:14.694]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:16:14.694]                // -> [dbgmcu_val <= 0x00000000]
[20:16:14.695]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:16:14.695]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:16:14.695]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:16:14.696]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.696]                // -> [dbgmcu_val <= 0x00000007]
[20:16:14.696]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:16:14.696]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:16:14.696]              Sequence("ConfigureTraceSWOPin");
[20:16:14.696]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:16:14.697]                  <block atomic="false" info="">
[20:16:14.697]                    __var pin     = 0;
[20:16:14.697]                      // -> [pin <= 0x00000000]
[20:16:14.697]                    __var port    = 0;
[20:16:14.697]                      // -> [port <= 0x00000000]
[20:16:14.698]                    __var portAdr = 0;
[20:16:14.698]                      // -> [portAdr <= 0x00000000]
[20:16:14.698]                    __var pos     = 0;
[20:16:14.698]                      // -> [pos <= 0x00000000]
[20:16:14.698]                    __var SWO_Pin = 0x00010003;          // PB3
[20:16:14.699]                      // -> [SWO_Pin <= 0x00010003]
[20:16:14.699]                  </block>
[20:16:14.699]                  <block atomic="false" info="configure SWO">
[20:16:14.699]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:16:14.699]                      // -> [pin <= 0x00000003]
[20:16:14.699]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:16:14.699]                      // -> [port <= 0x00000001]
[20:16:14.700]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:16:14.700]                      // -> [portAdr <= 0x40020400]
[20:16:14.700]                    pos = pin * 2;
[20:16:14.700]                      // -> [pos <= 0x00000006]
[20:16:14.700]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:16:14.701]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.701]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.701]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:16:14.702]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.702]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.702]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:16:14.703]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.703]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.703]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:16:14.704]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.705]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.705]                  </block>
[20:16:14.705]                  <control if="pin <  8" while="" timeout="0" info="">
[20:16:14.705]                    // if-block "pin <  8"
[20:16:14.705]                      // =>  TRUE
[20:16:14.705]                    <block atomic="false" info="">
[20:16:14.705]                      pos = ((pin    ) & 7) * 4;
[20:16:14.706]                        // -> [pos <= 0x0000000C]
[20:16:14.707]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:16:14.707]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.707]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.707]                    </block>
[20:16:14.707]                    // end if-block "pin <  8"
[20:16:14.707]                  </control>
[20:16:14.708]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:16:14.708]                    // if-block "pin >= 8"
[20:16:14.708]                      // =>  FALSE
[20:16:14.708]                    // skip if-block "pin >= 8"
[20:16:14.708]                  </control>
[20:16:14.708]                </sequence>
[20:16:14.708]            </block>
[20:16:14.708]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:16:14.709]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:16:14.709]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:16:14.709]            </block>
[20:16:14.709]          </sequence>
[20:16:14.710]      </block>
[20:16:14.710]      // end if-block "traceSWO"
[20:16:14.710]    </control>
[20:16:14.710]    <control if="traceTPIU" while="" timeout="0" info="">
[20:16:14.710]      // if-block "traceTPIU"
[20:16:14.710]        // =>  FALSE
[20:16:14.710]      // skip if-block "traceTPIU"
[20:16:14.710]    </control>
[20:16:14.711]  </sequence>
[20:16:14.711]  
[20:19:26.099]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:19:26.099]  
[20:19:26.105]  <debugvars>
[20:19:26.106]    // Pre-defined
[20:19:26.106]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:19:26.106]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:19:26.107]    __dp=0x00000000
[20:19:26.107]    __ap=0x00000000
[20:19:26.107]    __traceout=0x00000001      (SWO Trace)
[20:19:26.107]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:19:26.108]    __FlashAddr=0x00000000
[20:19:26.108]    __FlashLen=0x00000000
[20:19:26.108]    __FlashArg=0x00000000
[20:19:26.108]    __FlashOp=0x00000000
[20:19:26.108]    __Result=0x00000000
[20:19:26.109]    
[20:19:26.109]    // User-defined
[20:19:26.109]    DbgMCU_CR=0x00000007
[20:19:26.109]    DbgMCU_APB1_Fz=0x00000000
[20:19:26.109]    DbgMCU_APB2_Fz=0x00000000
[20:19:26.109]    TraceClk_Pin=0x00040002
[20:19:26.110]    TraceD0_Pin=0x00040003
[20:19:26.110]    TraceD1_Pin=0x00040004
[20:19:26.110]    TraceD2_Pin=0x00040005
[20:19:26.110]    TraceD3_Pin=0x00040006
[20:19:26.110]  </debugvars>
[20:19:26.111]  
[20:19:26.111]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:19:26.111]    <block atomic="false" info="">
[20:19:26.111]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:19:26.112]        // -> [traceSWO <= 0x00000001]
[20:19:26.112]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:19:26.112]        // -> [traceTPIU <= 0x00000000]
[20:19:26.112]    </block>
[20:19:26.112]    <control if="traceSWO" while="" timeout="0" info="">
[20:19:26.113]      // if-block "traceSWO"
[20:19:26.113]        // =>  TRUE
[20:19:26.113]      <block atomic="false" info="">
[20:19:26.113]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:19:26.113]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:19:26.114]            <block atomic="false" info="">
[20:19:26.114]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:19:26.114]                // -> [dbgmcu_val <= 0x00000000]
[20:19:26.114]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:19:26.114]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:19:26.115]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:19:26.115]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.115]                // -> [dbgmcu_val <= 0x00000007]
[20:19:26.116]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:19:26.116]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:19:26.116]              Sequence("ConfigureTraceSWOPin");
[20:19:26.116]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:19:26.116]                  <block atomic="false" info="">
[20:19:26.117]                    __var pin     = 0;
[20:19:26.117]                      // -> [pin <= 0x00000000]
[20:19:26.117]                    __var port    = 0;
[20:19:26.117]                      // -> [port <= 0x00000000]
[20:19:26.117]                    __var portAdr = 0;
[20:19:26.118]                      // -> [portAdr <= 0x00000000]
[20:19:26.118]                    __var pos     = 0;
[20:19:26.118]                      // -> [pos <= 0x00000000]
[20:19:26.118]                    __var SWO_Pin = 0x00010003;          // PB3
[20:19:26.118]                      // -> [SWO_Pin <= 0x00010003]
[20:19:26.119]                  </block>
[20:19:26.119]                  <block atomic="false" info="configure SWO">
[20:19:26.119]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:19:26.119]                      // -> [pin <= 0x00000003]
[20:19:26.120]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:19:26.120]                      // -> [port <= 0x00000001]
[20:19:26.120]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:19:26.120]                      // -> [portAdr <= 0x40020400]
[20:19:26.120]                    pos = pin * 2;
[20:19:26.121]                      // -> [pos <= 0x00000006]
[20:19:26.121]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:19:26.121]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.122]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.122]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:19:26.123]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.123]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.124]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:19:26.124]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.125]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.126]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:19:26.126]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.126]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.126]                  </block>
[20:19:26.127]                  <control if="pin <  8" while="" timeout="0" info="">
[20:19:26.127]                    // if-block "pin <  8"
[20:19:26.127]                      // =>  TRUE
[20:19:26.127]                    <block atomic="false" info="">
[20:19:26.127]                      pos = ((pin    ) & 7) * 4;
[20:19:26.128]                        // -> [pos <= 0x0000000C]
[20:19:26.128]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:19:26.128]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.129]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.129]                    </block>
[20:19:26.129]                    // end if-block "pin <  8"
[20:19:26.129]                  </control>
[20:19:26.130]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:19:26.130]                    // if-block "pin >= 8"
[20:19:26.130]                      // =>  FALSE
[20:19:26.130]                    // skip if-block "pin >= 8"
[20:19:26.130]                  </control>
[20:19:26.130]                </sequence>
[20:19:26.131]            </block>
[20:19:26.131]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:19:26.131]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:19:26.132]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:26.132]            </block>
[20:19:26.132]          </sequence>
[20:19:26.132]      </block>
[20:19:26.132]      // end if-block "traceSWO"
[20:19:26.133]    </control>
[20:19:26.133]    <control if="traceTPIU" while="" timeout="0" info="">
[20:19:26.133]      // if-block "traceTPIU"
[20:19:26.133]        // =>  FALSE
[20:19:26.133]      // skip if-block "traceTPIU"
[20:19:26.133]    </control>
[20:19:26.134]  </sequence>
[20:19:26.134]  
[20:24:44.981]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:24:44.981]  
[20:24:44.982]  <debugvars>
[20:24:44.983]    // Pre-defined
[20:24:44.983]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:44.984]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:44.984]    __dp=0x00000000
[20:24:44.985]    __ap=0x00000000
[20:24:44.985]    __traceout=0x00000001      (SWO Trace)
[20:24:44.986]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:44.987]    __FlashAddr=0x00000000
[20:24:44.987]    __FlashLen=0x00000000
[20:24:44.988]    __FlashArg=0x00000000
[20:24:44.989]    __FlashOp=0x00000000
[20:24:44.989]    __Result=0x00000000
[20:24:44.990]    
[20:24:44.990]    // User-defined
[20:24:44.990]    DbgMCU_CR=0x00000007
[20:24:44.991]    DbgMCU_APB1_Fz=0x00000000
[20:24:44.992]    DbgMCU_APB2_Fz=0x00000000
[20:24:44.992]    TraceClk_Pin=0x00040002
[20:24:44.993]    TraceD0_Pin=0x00040003
[20:24:44.993]    TraceD1_Pin=0x00040004
[20:24:44.993]    TraceD2_Pin=0x00040005
[20:24:44.994]    TraceD3_Pin=0x00040006
[20:24:44.994]  </debugvars>
[20:24:44.994]  
[20:24:44.994]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:24:44.995]    <block atomic="false" info="">
[20:24:44.995]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:24:44.995]        // -> [traceSWO <= 0x00000001]
[20:24:44.995]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:24:44.995]        // -> [traceTPIU <= 0x00000000]
[20:24:44.996]    </block>
[20:24:44.996]    <control if="traceSWO" while="" timeout="0" info="">
[20:24:44.996]      // if-block "traceSWO"
[20:24:44.996]        // =>  TRUE
[20:24:44.996]      <block atomic="false" info="">
[20:24:44.997]        Sequence("DisableTraceSWO");
[20:24:44.997]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:24:44.997]            <block atomic="false" info="">
[20:24:44.997]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:24:44.997]                // -> [dbgmcu_val <= 0x00000000]
[20:24:44.998]            </block>
[20:24:44.998]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:24:44.998]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:24:44.999]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:24:44.999]                // -> [dbgmcu_val <= 0x00000007]
[20:24:44.999]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:24:44.999]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:45.000]            </block>
[20:24:45.001]          </sequence>
[20:24:45.001]      </block>
[20:24:45.001]      // end if-block "traceSWO"
[20:24:45.001]    </control>
[20:24:45.001]    <control if="traceTPIU" while="" timeout="0" info="">
[20:24:45.001]      // if-block "traceTPIU"
[20:24:45.002]        // =>  FALSE
[20:24:45.002]      // skip if-block "traceTPIU"
[20:24:45.002]    </control>
[20:24:45.002]  </sequence>
[20:24:45.002]  
