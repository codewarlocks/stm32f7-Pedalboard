/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0013.log
 *  Created     : 22:49:05 (06/05/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[22:49:05.825]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:49:05.825]  
[22:49:05.826]  <debugvars>
[22:49:05.826]    // Pre-defined
[22:49:05.826]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:05.827]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:49:05.827]    __dp=0x00000000
[22:49:05.827]    __ap=0x00000000
[22:49:05.827]    __traceout=0x00000001      (SWO Trace)
[22:49:05.827]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:05.828]    __FlashAddr=0x00000000
[22:49:05.828]    __FlashLen=0x00000000
[22:49:05.828]    __FlashArg=0x00000000
[22:49:05.828]    __FlashOp=0x00000000
[22:49:05.828]    __Result=0x00000000
[22:49:05.829]    
[22:49:05.829]    // User-defined
[22:49:05.829]    DbgMCU_CR=0x00000007
[22:49:05.829]    DbgMCU_APB1_Fz=0x00000000
[22:49:05.829]    DbgMCU_APB2_Fz=0x00000000
[22:49:05.830]    TraceClk_Pin=0x00040002
[22:49:05.830]    TraceD0_Pin=0x00040003
[22:49:05.830]    TraceD1_Pin=0x00040004
[22:49:05.830]    TraceD2_Pin=0x00040005
[22:49:05.830]    TraceD3_Pin=0x00040006
[22:49:05.831]  </debugvars>
[22:49:05.831]  
[22:49:05.831]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:49:05.831]    <block atomic="false" info="">
[22:49:05.832]      Sequence("CheckID");
[22:49:05.832]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:49:05.832]          <block atomic="false" info="">
[22:49:05.832]            __var pidr1 = 0;
[22:49:05.832]              // -> [pidr1 <= 0x00000000]
[22:49:05.833]            __var pidr2 = 0;
[22:49:05.833]              // -> [pidr2 <= 0x00000000]
[22:49:05.833]            __var jep106id = 0;
[22:49:05.833]              // -> [jep106id <= 0x00000000]
[22:49:05.833]            __var ROMTableBase = 0;
[22:49:05.834]              // -> [ROMTableBase <= 0x00000000]
[22:49:05.834]            __ap = 0;      // AHB-AP
[22:49:05.834]              // -> [__ap <= 0x00000000]
[22:49:05.835]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:49:05.835]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.835]              // -> [ROMTableBase <= 0xE00FD000]
[22:49:05.835]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:49:05.836]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.836]              // -> [pidr1 <= 0x00000004]
[22:49:05.836]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:49:05.837]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.837]              // -> [pidr2 <= 0x0000001A]
[22:49:05.837]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:49:05.837]              // -> [jep106id <= 0x00000020]
[22:49:05.838]          </block>
[22:49:05.838]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:49:05.838]            // if-block "jep106id != 0x20"
[22:49:05.838]              // =>  FALSE
[22:49:05.838]            // skip if-block "jep106id != 0x20"
[22:49:05.839]          </control>
[22:49:05.839]        </sequence>
[22:49:05.839]    </block>
[22:49:05.839]  </sequence>
[22:49:05.839]  
[22:49:05.854]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:49:05.854]  
[22:49:05.854]  <debugvars>
[22:49:05.854]    // Pre-defined
[22:49:05.854]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:05.855]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:49:05.855]    __dp=0x00000000
[22:49:05.855]    __ap=0x00000000
[22:49:05.855]    __traceout=0x00000001      (SWO Trace)
[22:49:05.855]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:05.855]    __FlashAddr=0x00000000
[22:49:05.856]    __FlashLen=0x00000000
[22:49:05.856]    __FlashArg=0x00000000
[22:49:05.856]    __FlashOp=0x00000000
[22:49:05.856]    __Result=0x00000000
[22:49:05.856]    
[22:49:05.856]    // User-defined
[22:49:05.857]    DbgMCU_CR=0x00000007
[22:49:05.857]    DbgMCU_APB1_Fz=0x00000000
[22:49:05.857]    DbgMCU_APB2_Fz=0x00000000
[22:49:05.857]    TraceClk_Pin=0x00040002
[22:49:05.857]    TraceD0_Pin=0x00040003
[22:49:05.858]    TraceD1_Pin=0x00040004
[22:49:05.858]    TraceD2_Pin=0x00040005
[22:49:05.858]    TraceD3_Pin=0x00040006
[22:49:05.858]  </debugvars>
[22:49:05.858]  
[22:49:05.858]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:49:05.859]    <block atomic="false" info="">
[22:49:05.859]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:49:05.859]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.860]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:49:05.860]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.860]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:49:05.861]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.861]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:49:05.862]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:05.862]    </block>
[22:49:05.862]  </sequence>
[22:49:05.862]  
[22:49:30.926]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:49:30.926]  
[22:49:30.926]  <debugvars>
[22:49:30.926]    // Pre-defined
[22:49:30.926]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:30.927]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:49:30.927]    __dp=0x00000000
[22:49:30.927]    __ap=0x00000000
[22:49:30.927]    __traceout=0x00000001      (SWO Trace)
[22:49:30.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:30.928]    __FlashAddr=0x00000000
[22:49:30.928]    __FlashLen=0x00000000
[22:49:30.928]    __FlashArg=0x00000000
[22:49:30.928]    __FlashOp=0x00000000
[22:49:30.928]    __Result=0x00000000
[22:49:30.928]    
[22:49:30.928]    // User-defined
[22:49:30.929]    DbgMCU_CR=0x00000007
[22:49:30.929]    DbgMCU_APB1_Fz=0x00000000
[22:49:30.929]    DbgMCU_APB2_Fz=0x00000000
[22:49:30.929]    TraceClk_Pin=0x00040002
[22:49:30.929]    TraceD0_Pin=0x00040003
[22:49:30.929]    TraceD1_Pin=0x00040004
[22:49:30.930]    TraceD2_Pin=0x00040005
[22:49:30.930]    TraceD3_Pin=0x00040006
[22:49:30.930]  </debugvars>
[22:49:30.930]  
[22:49:30.930]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:49:30.930]    <block atomic="false" info="">
[22:49:30.931]      Sequence("CheckID");
[22:49:30.931]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:49:30.931]          <block atomic="false" info="">
[22:49:30.931]            __var pidr1 = 0;
[22:49:30.931]              // -> [pidr1 <= 0x00000000]
[22:49:30.931]            __var pidr2 = 0;
[22:49:30.932]              // -> [pidr2 <= 0x00000000]
[22:49:30.932]            __var jep106id = 0;
[22:49:30.932]              // -> [jep106id <= 0x00000000]
[22:49:30.932]            __var ROMTableBase = 0;
[22:49:30.932]              // -> [ROMTableBase <= 0x00000000]
[22:49:30.932]            __ap = 0;      // AHB-AP
[22:49:30.933]              // -> [__ap <= 0x00000000]
[22:49:30.933]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:49:30.933]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.933]              // -> [ROMTableBase <= 0xE00FD000]
[22:49:30.934]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:49:30.934]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.934]              // -> [pidr1 <= 0x00000004]
[22:49:30.935]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:49:30.935]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.935]              // -> [pidr2 <= 0x0000001A]
[22:49:30.935]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:49:30.935]              // -> [jep106id <= 0x00000020]
[22:49:30.936]          </block>
[22:49:30.936]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:49:30.936]            // if-block "jep106id != 0x20"
[22:49:30.936]              // =>  FALSE
[22:49:30.936]            // skip if-block "jep106id != 0x20"
[22:49:30.936]          </control>
[22:49:30.936]        </sequence>
[22:49:30.937]    </block>
[22:49:30.937]  </sequence>
[22:49:30.937]  
[22:49:30.951]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:49:30.951]  
[22:49:30.951]  <debugvars>
[22:49:30.951]    // Pre-defined
[22:49:30.951]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:30.951]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:49:30.951]    __dp=0x00000000
[22:49:30.952]    __ap=0x00000000
[22:49:30.952]    __traceout=0x00000001      (SWO Trace)
[22:49:30.952]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:30.952]    __FlashAddr=0x00000000
[22:49:30.953]    __FlashLen=0x00000000
[22:49:30.953]    __FlashArg=0x00000000
[22:49:30.953]    __FlashOp=0x00000000
[22:49:30.953]    __Result=0x00000000
[22:49:30.953]    
[22:49:30.953]    // User-defined
[22:49:30.953]    DbgMCU_CR=0x00000007
[22:49:30.954]    DbgMCU_APB1_Fz=0x00000000
[22:49:30.954]    DbgMCU_APB2_Fz=0x00000000
[22:49:30.954]    TraceClk_Pin=0x00040002
[22:49:30.954]    TraceD0_Pin=0x00040003
[22:49:30.955]    TraceD1_Pin=0x00040004
[22:49:30.955]    TraceD2_Pin=0x00040005
[22:49:30.955]    TraceD3_Pin=0x00040006
[22:49:30.955]  </debugvars>
[22:49:30.955]  
[22:49:30.956]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:49:30.956]    <block atomic="false" info="">
[22:49:30.956]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:49:30.956]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.956]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:49:30.957]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.957]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:49:30.957]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.957]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:49:30.958]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.958]    </block>
[22:49:30.958]  </sequence>
[22:49:30.958]  
[22:49:30.975]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:49:30.975]  
[22:49:30.975]  <debugvars>
[22:49:30.975]    // Pre-defined
[22:49:30.975]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:30.976]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:49:30.976]    __dp=0x00000000
[22:49:30.976]    __ap=0x00000000
[22:49:30.976]    __traceout=0x00000001      (SWO Trace)
[22:49:30.976]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:30.976]    __FlashAddr=0x00000000
[22:49:30.977]    __FlashLen=0x00000000
[22:49:30.977]    __FlashArg=0x00000000
[22:49:30.977]    __FlashOp=0x00000000
[22:49:30.977]    __Result=0x00000000
[22:49:30.977]    
[22:49:30.977]    // User-defined
[22:49:30.978]    DbgMCU_CR=0x00000007
[22:49:30.978]    DbgMCU_APB1_Fz=0x00000000
[22:49:30.978]    DbgMCU_APB2_Fz=0x00000000
[22:49:30.978]    TraceClk_Pin=0x00040002
[22:49:30.978]    TraceD0_Pin=0x00040003
[22:49:30.979]    TraceD1_Pin=0x00040004
[22:49:30.979]    TraceD2_Pin=0x00040005
[22:49:30.979]    TraceD3_Pin=0x00040006
[22:49:30.979]  </debugvars>
[22:49:30.979]  
[22:49:30.979]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:49:30.980]    <block atomic="false" info="">
[22:49:30.980]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:49:30.980]        // -> [traceSWO <= 0x00000001]
[22:49:30.980]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:49:30.980]        // -> [traceTPIU <= 0x00000000]
[22:49:30.981]    </block>
[22:49:30.981]    <control if="traceSWO" while="" timeout="0" info="">
[22:49:30.981]      // if-block "traceSWO"
[22:49:30.981]        // =>  TRUE
[22:49:30.981]      <block atomic="false" info="">
[22:49:30.981]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:49:30.982]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:49:30.982]            <block atomic="false" info="">
[22:49:30.982]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:49:30.982]                // -> [dbgmcu_val <= 0x00000000]
[22:49:30.982]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:49:30.983]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:49:30.983]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:49:30.983]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.983]                // -> [dbgmcu_val <= 0x00000007]
[22:49:30.984]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:49:30.984]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:49:30.984]              Sequence("ConfigureTraceSWOPin");
[22:49:30.984]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:49:30.984]                  <block atomic="false" info="">
[22:49:30.985]                    __var pin     = 0;
[22:49:30.985]                      // -> [pin <= 0x00000000]
[22:49:30.985]                    __var port    = 0;
[22:49:30.985]                      // -> [port <= 0x00000000]
[22:49:30.985]                    __var portAdr = 0;
[22:49:30.985]                      // -> [portAdr <= 0x00000000]
[22:49:30.986]                    __var pos     = 0;
[22:49:30.986]                      // -> [pos <= 0x00000000]
[22:49:30.986]                    __var SWO_Pin = 0x00010003;          // PB3
[22:49:30.986]                      // -> [SWO_Pin <= 0x00010003]
[22:49:30.986]                  </block>
[22:49:30.986]                  <block atomic="false" info="configure SWO">
[22:49:30.986]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:49:30.987]                      // -> [pin <= 0x00000003]
[22:49:30.987]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:49:30.987]                      // -> [port <= 0x00000001]
[22:49:30.987]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:49:30.987]                      // -> [portAdr <= 0x40020400]
[22:49:30.988]                    pos = pin * 2;
[22:49:30.988]                      // -> [pos <= 0x00000006]
[22:49:30.988]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:49:30.989]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.989]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.989]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:49:30.990]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.990]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.990]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:49:30.991]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.991]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.992]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:49:30.992]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.992]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.993]                  </block>
[22:49:30.993]                  <control if="pin <  8" while="" timeout="0" info="">
[22:49:30.993]                    // if-block "pin <  8"
[22:49:30.993]                      // =>  TRUE
[22:49:30.993]                    <block atomic="false" info="">
[22:49:30.993]                      pos = ((pin    ) & 7) * 4;
[22:49:30.994]                        // -> [pos <= 0x0000000C]
[22:49:30.994]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:49:30.994]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.995]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.995]                    </block>
[22:49:30.995]                    // end if-block "pin <  8"
[22:49:30.995]                  </control>
[22:49:30.995]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:49:30.995]                    // if-block "pin >= 8"
[22:49:30.995]                      // =>  FALSE
[22:49:30.995]                    // skip if-block "pin >= 8"
[22:49:30.996]                  </control>
[22:49:30.996]                </sequence>
[22:49:30.996]            </block>
[22:49:30.996]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:49:30.996]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:49:30.997]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:30.997]            </block>
[22:49:30.997]          </sequence>
[22:49:30.997]      </block>
[22:49:30.997]      // end if-block "traceSWO"
[22:49:30.997]    </control>
[22:49:30.997]    <control if="traceTPIU" while="" timeout="0" info="">
[22:49:30.998]      // if-block "traceTPIU"
[22:49:30.998]        // =>  FALSE
[22:49:30.998]      // skip if-block "traceTPIU"
[22:49:30.999]    </control>
[22:49:30.999]  </sequence>
[22:49:30.999]  
[22:49:31.002]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:49:31.002]  
[22:49:31.002]  <debugvars>
[22:49:31.002]    // Pre-defined
[22:49:31.003]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:31.003]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:49:31.003]    __dp=0x00000000
[22:49:31.004]    __ap=0x00000000
[22:49:31.004]    __traceout=0x00000001      (SWO Trace)
[22:49:31.004]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:31.004]    __FlashAddr=0x00000000
[22:49:31.004]    __FlashLen=0x00000000
[22:49:31.004]    __FlashArg=0x00000000
[22:49:31.004]    __FlashOp=0x00000000
[22:49:31.004]    __Result=0x00000000
[22:49:31.005]    
[22:49:31.005]    // User-defined
[22:49:31.005]    DbgMCU_CR=0x00000007
[22:49:31.006]    DbgMCU_APB1_Fz=0x00000000
[22:49:31.006]    DbgMCU_APB2_Fz=0x00000000
[22:49:31.006]    TraceClk_Pin=0x00040002
[22:49:31.006]    TraceD0_Pin=0x00040003
[22:49:31.006]    TraceD1_Pin=0x00040004
[22:49:31.006]    TraceD2_Pin=0x00040005
[22:49:31.006]    TraceD3_Pin=0x00040006
[22:49:31.007]  </debugvars>
[22:49:31.007]  
[22:49:31.007]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:49:31.007]    <block atomic="false" info="">
[22:49:31.007]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:49:31.007]        // -> [traceSWO <= 0x00000001]
[22:49:31.008]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:49:31.008]        // -> [traceTPIU <= 0x00000000]
[22:49:31.008]    </block>
[22:49:31.008]    <control if="traceSWO" while="" timeout="0" info="">
[22:49:31.008]      // if-block "traceSWO"
[22:49:31.008]        // =>  TRUE
[22:49:31.009]      <block atomic="false" info="">
[22:49:31.009]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:49:31.009]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:49:31.009]            <block atomic="false" info="">
[22:49:31.009]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:49:31.009]                // -> [dbgmcu_val <= 0x00000000]
[22:49:31.010]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:49:31.010]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:49:31.010]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:49:31.010]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.011]                // -> [dbgmcu_val <= 0x00000007]
[22:49:31.011]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:49:31.011]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:49:31.011]              Sequence("ConfigureTraceSWOPin");
[22:49:31.011]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:49:31.012]                  <block atomic="false" info="">
[22:49:31.012]                    __var pin     = 0;
[22:49:31.012]                      // -> [pin <= 0x00000000]
[22:49:31.012]                    __var port    = 0;
[22:49:31.012]                      // -> [port <= 0x00000000]
[22:49:31.012]                    __var portAdr = 0;
[22:49:31.013]                      // -> [portAdr <= 0x00000000]
[22:49:31.013]                    __var pos     = 0;
[22:49:31.013]                      // -> [pos <= 0x00000000]
[22:49:31.013]                    __var SWO_Pin = 0x00010003;          // PB3
[22:49:31.013]                      // -> [SWO_Pin <= 0x00010003]
[22:49:31.013]                  </block>
[22:49:31.013]                  <block atomic="false" info="configure SWO">
[22:49:31.014]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:49:31.014]                      // -> [pin <= 0x00000003]
[22:49:31.014]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:49:31.014]                      // -> [port <= 0x00000001]
[22:49:31.014]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:49:31.015]                      // -> [portAdr <= 0x40020400]
[22:49:31.015]                    pos = pin * 2;
[22:49:31.015]                      // -> [pos <= 0x00000006]
[22:49:31.015]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:49:31.016]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.016]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.016]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:49:31.017]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.017]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.017]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:49:31.018]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.018]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.018]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:49:31.019]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.019]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.020]                  </block>
[22:49:31.020]                  <control if="pin <  8" while="" timeout="0" info="">
[22:49:31.020]                    // if-block "pin <  8"
[22:49:31.020]                      // =>  TRUE
[22:49:31.020]                    <block atomic="false" info="">
[22:49:31.020]                      pos = ((pin    ) & 7) * 4;
[22:49:31.021]                        // -> [pos <= 0x0000000C]
[22:49:31.021]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:49:31.021]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.022]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.022]                    </block>
[22:49:31.022]                    // end if-block "pin <  8"
[22:49:31.022]                  </control>
[22:49:31.022]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:49:31.023]                    // if-block "pin >= 8"
[22:49:31.023]                      // =>  FALSE
[22:49:31.023]                    // skip if-block "pin >= 8"
[22:49:31.023]                  </control>
[22:49:31.023]                </sequence>
[22:49:31.023]            </block>
[22:49:31.024]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:49:31.024]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:49:31.024]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.024]            </block>
[22:49:31.025]          </sequence>
[22:49:31.025]      </block>
[22:49:31.025]      // end if-block "traceSWO"
[22:49:31.025]    </control>
[22:49:31.025]    <control if="traceTPIU" while="" timeout="0" info="">
[22:49:31.025]      // if-block "traceTPIU"
[22:49:31.026]        // =>  FALSE
[22:49:31.026]      // skip if-block "traceTPIU"
[22:49:31.026]    </control>
[22:49:31.026]  </sequence>
[22:49:31.026]  
[22:49:31.238]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:49:31.238]  
[22:49:31.238]  <debugvars>
[22:49:31.239]    // Pre-defined
[22:49:31.239]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:49:31.239]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:49:31.239]    __dp=0x00000000
[22:49:31.239]    __ap=0x00000000
[22:49:31.239]    __traceout=0x00000001      (SWO Trace)
[22:49:31.240]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:49:31.240]    __FlashAddr=0x00000000
[22:49:31.240]    __FlashLen=0x00000000
[22:49:31.240]    __FlashArg=0x00000000
[22:49:31.240]    __FlashOp=0x00000000
[22:49:31.241]    __Result=0x00000000
[22:49:31.241]    
[22:49:31.241]    // User-defined
[22:49:31.241]    DbgMCU_CR=0x00000007
[22:49:31.241]    DbgMCU_APB1_Fz=0x00000000
[22:49:31.241]    DbgMCU_APB2_Fz=0x00000000
[22:49:31.241]    TraceClk_Pin=0x00040002
[22:49:31.242]    TraceD0_Pin=0x00040003
[22:49:31.242]    TraceD1_Pin=0x00040004
[22:49:31.242]    TraceD2_Pin=0x00040005
[22:49:31.242]    TraceD3_Pin=0x00040006
[22:49:31.242]  </debugvars>
[22:49:31.242]  
[22:49:31.243]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:49:31.243]    <block atomic="false" info="">
[22:49:31.243]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:49:31.243]        // -> [traceSWO <= 0x00000001]
[22:49:31.243]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:49:31.243]        // -> [traceTPIU <= 0x00000000]
[22:49:31.243]    </block>
[22:49:31.244]    <control if="traceSWO" while="" timeout="0" info="">
[22:49:31.244]      // if-block "traceSWO"
[22:49:31.244]        // =>  TRUE
[22:49:31.244]      <block atomic="false" info="">
[22:49:31.244]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:49:31.245]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:49:31.245]            <block atomic="false" info="">
[22:49:31.245]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:49:31.245]                // -> [dbgmcu_val <= 0x00000000]
[22:49:31.245]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:49:31.245]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:49:31.245]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:49:31.246]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.246]                // -> [dbgmcu_val <= 0x00000007]
[22:49:31.246]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:49:31.246]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:49:31.246]              Sequence("ConfigureTraceSWOPin");
[22:49:31.247]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:49:31.247]                  <block atomic="false" info="">
[22:49:31.247]                    __var pin     = 0;
[22:49:31.247]                      // -> [pin <= 0x00000000]
[22:49:31.247]                    __var port    = 0;
[22:49:31.247]                      // -> [port <= 0x00000000]
[22:49:31.247]                    __var portAdr = 0;
[22:49:31.247]                      // -> [portAdr <= 0x00000000]
[22:49:31.248]                    __var pos     = 0;
[22:49:31.248]                      // -> [pos <= 0x00000000]
[22:49:31.248]                    __var SWO_Pin = 0x00010003;          // PB3
[22:49:31.248]                      // -> [SWO_Pin <= 0x00010003]
[22:49:31.248]                  </block>
[22:49:31.248]                  <block atomic="false" info="configure SWO">
[22:49:31.248]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:49:31.248]                      // -> [pin <= 0x00000003]
[22:49:31.249]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:49:31.249]                      // -> [port <= 0x00000001]
[22:49:31.249]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:49:31.249]                      // -> [portAdr <= 0x40020400]
[22:49:31.249]                    pos = pin * 2;
[22:49:31.249]                      // -> [pos <= 0x00000006]
[22:49:31.249]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:49:31.250]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.251]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.251]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:49:31.251]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.251]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.252]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:49:31.252]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.252]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.252]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:49:31.253]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.253]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.253]                  </block>
[22:49:31.254]                  <control if="pin <  8" while="" timeout="0" info="">
[22:49:31.254]                    // if-block "pin <  8"
[22:49:31.254]                      // =>  TRUE
[22:49:31.254]                    <block atomic="false" info="">
[22:49:31.254]                      pos = ((pin    ) & 7) * 4;
[22:49:31.254]                        // -> [pos <= 0x0000000C]
[22:49:31.254]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:49:31.254]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.254]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.255]                    </block>
[22:49:31.255]                    // end if-block "pin <  8"
[22:49:31.255]                  </control>
[22:49:31.255]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:49:31.255]                    // if-block "pin >= 8"
[22:49:31.255]                      // =>  FALSE
[22:49:31.255]                    // skip if-block "pin >= 8"
[22:49:31.255]                  </control>
[22:49:31.256]                </sequence>
[22:49:31.256]            </block>
[22:49:31.257]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:49:31.257]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:49:31.257]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:49:31.257]            </block>
[22:49:31.257]          </sequence>
[22:49:31.257]      </block>
[22:49:31.258]      // end if-block "traceSWO"
[22:49:31.258]    </control>
[22:49:31.258]    <control if="traceTPIU" while="" timeout="0" info="">
[22:49:31.258]      // if-block "traceTPIU"
[22:49:31.258]        // =>  FALSE
[22:49:31.258]      // skip if-block "traceTPIU"
[22:49:31.258]    </control>
[22:49:31.259]  </sequence>
[22:49:31.259]  
[22:50:33.934]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:50:33.934]  
[22:50:33.937]  <debugvars>
[22:50:33.937]    // Pre-defined
[22:50:33.937]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:50:33.937]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:50:33.938]    __dp=0x00000000
[22:50:33.938]    __ap=0x00000000
[22:50:33.938]    __traceout=0x00000001      (SWO Trace)
[22:50:33.938]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:50:33.938]    __FlashAddr=0x00000000
[22:50:33.938]    __FlashLen=0x00000000
[22:50:33.939]    __FlashArg=0x00000000
[22:50:33.939]    __FlashOp=0x00000000
[22:50:33.939]    __Result=0x00000000
[22:50:33.939]    
[22:50:33.939]    // User-defined
[22:50:33.939]    DbgMCU_CR=0x00000007
[22:50:33.939]    DbgMCU_APB1_Fz=0x00000000
[22:50:33.939]    DbgMCU_APB2_Fz=0x00000000
[22:50:33.940]    TraceClk_Pin=0x00040002
[22:50:33.940]    TraceD0_Pin=0x00040003
[22:50:33.940]    TraceD1_Pin=0x00040004
[22:50:33.940]    TraceD2_Pin=0x00040005
[22:50:33.940]    TraceD3_Pin=0x00040006
[22:50:33.940]  </debugvars>
[22:50:33.940]  
[22:50:33.941]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:50:33.941]    <block atomic="false" info="">
[22:50:33.941]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:50:33.941]        // -> [traceSWO <= 0x00000001]
[22:50:33.941]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:50:33.941]        // -> [traceTPIU <= 0x00000000]
[22:50:33.941]    </block>
[22:50:33.941]    <control if="traceSWO" while="" timeout="0" info="">
[22:50:33.942]      // if-block "traceSWO"
[22:50:33.942]        // =>  TRUE
[22:50:33.942]      <block atomic="false" info="">
[22:50:33.942]        Sequence("DisableTraceSWO");
[22:50:33.942]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:50:33.942]            <block atomic="false" info="">
[22:50:33.942]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:50:33.942]                // -> [dbgmcu_val <= 0x00000000]
[22:50:33.943]            </block>
[22:50:33.943]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:50:33.943]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:50:33.943]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:50:33.944]                // -> [dbgmcu_val <= 0x00000007]
[22:50:33.944]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[22:50:33.944]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:50:33.944]            </block>
[22:50:33.945]          </sequence>
[22:50:33.945]      </block>
[22:50:33.945]      // end if-block "traceSWO"
[22:50:33.945]    </control>
[22:50:33.945]    <control if="traceTPIU" while="" timeout="0" info="">
[22:50:33.945]      // if-block "traceTPIU"
[22:50:33.945]        // =>  FALSE
[22:50:33.945]      // skip if-block "traceTPIU"
[22:50:33.946]    </control>
[22:50:33.946]  </sequence>
[22:50:33.946]  
[22:53:51.065]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:53:51.065]  
[22:53:51.065]  <debugvars>
[22:53:51.065]    // Pre-defined
[22:53:51.065]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:53:51.065]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:53:51.066]    __dp=0x00000000
[22:53:51.066]    __ap=0x00000000
[22:53:51.066]    __traceout=0x00000001      (SWO Trace)
[22:53:51.066]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:53:51.067]    __FlashAddr=0x00000000
[22:53:51.067]    __FlashLen=0x00000000
[22:53:51.067]    __FlashArg=0x00000000
[22:53:51.067]    __FlashOp=0x00000000
[22:53:51.067]    __Result=0x00000000
[22:53:51.067]    
[22:53:51.067]    // User-defined
[22:53:51.068]    DbgMCU_CR=0x00000007
[22:53:51.068]    DbgMCU_APB1_Fz=0x00000000
[22:53:51.068]    DbgMCU_APB2_Fz=0x00000000
[22:53:51.068]    TraceClk_Pin=0x00040002
[22:53:51.068]    TraceD0_Pin=0x00040003
[22:53:51.069]    TraceD1_Pin=0x00040004
[22:53:51.069]    TraceD2_Pin=0x00040005
[22:53:51.069]    TraceD3_Pin=0x00040006
[22:53:51.069]  </debugvars>
[22:53:51.069]  
[22:53:51.069]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:53:51.070]    <block atomic="false" info="">
[22:53:51.070]      Sequence("CheckID");
[22:53:51.070]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:53:51.070]          <block atomic="false" info="">
[22:53:51.070]            __var pidr1 = 0;
[22:53:51.071]              // -> [pidr1 <= 0x00000000]
[22:53:51.071]            __var pidr2 = 0;
[22:53:51.071]              // -> [pidr2 <= 0x00000000]
[22:53:51.071]            __var jep106id = 0;
[22:53:51.071]              // -> [jep106id <= 0x00000000]
[22:53:51.071]            __var ROMTableBase = 0;
[22:53:51.072]              // -> [ROMTableBase <= 0x00000000]
[22:53:51.072]            __ap = 0;      // AHB-AP
[22:53:51.072]              // -> [__ap <= 0x00000000]
[22:53:51.072]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:53:51.073]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.073]              // -> [ROMTableBase <= 0xE00FD000]
[22:53:51.073]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:53:51.074]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.074]              // -> [pidr1 <= 0x00000004]
[22:53:51.074]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:53:51.074]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.074]              // -> [pidr2 <= 0x0000001A]
[22:53:51.074]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:53:51.074]              // -> [jep106id <= 0x00000020]
[22:53:51.074]          </block>
[22:53:51.074]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:53:51.075]            // if-block "jep106id != 0x20"
[22:53:51.075]              // =>  FALSE
[22:53:51.075]            // skip if-block "jep106id != 0x20"
[22:53:51.075]          </control>
[22:53:51.075]        </sequence>
[22:53:51.075]    </block>
[22:53:51.076]  </sequence>
[22:53:51.077]  
[22:53:51.092]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:53:51.092]  
[22:53:51.093]  <debugvars>
[22:53:51.093]    // Pre-defined
[22:53:51.093]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:53:51.093]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[22:53:51.093]    __dp=0x00000000
[22:53:51.094]    __ap=0x00000000
[22:53:51.094]    __traceout=0x00000001      (SWO Trace)
[22:53:51.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:53:51.094]    __FlashAddr=0x00000000
[22:53:51.094]    __FlashLen=0x00000000
[22:53:51.095]    __FlashArg=0x00000000
[22:53:51.095]    __FlashOp=0x00000000
[22:53:51.095]    __Result=0x00000000
[22:53:51.095]    
[22:53:51.095]    // User-defined
[22:53:51.095]    DbgMCU_CR=0x00000007
[22:53:51.096]    DbgMCU_APB1_Fz=0x00000000
[22:53:51.096]    DbgMCU_APB2_Fz=0x00000000
[22:53:51.096]    TraceClk_Pin=0x00040002
[22:53:51.096]    TraceD0_Pin=0x00040003
[22:53:51.096]    TraceD1_Pin=0x00040004
[22:53:51.097]    TraceD2_Pin=0x00040005
[22:53:51.097]    TraceD3_Pin=0x00040006
[22:53:51.097]  </debugvars>
[22:53:51.097]  
[22:53:51.097]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:53:51.097]    <block atomic="false" info="">
[22:53:51.098]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:53:51.098]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.098]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:53:51.099]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.099]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:53:51.100]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.100]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:53:51.101]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:53:51.101]    </block>
[22:53:51.101]  </sequence>
[22:53:51.101]  
[22:54:23.037]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:54:23.037]  
[22:54:23.038]  <debugvars>
[22:54:23.038]    // Pre-defined
[22:54:23.038]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:23.038]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:54:23.038]    __dp=0x00000000
[22:54:23.039]    __ap=0x00000000
[22:54:23.039]    __traceout=0x00000001      (SWO Trace)
[22:54:23.039]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:23.039]    __FlashAddr=0x00000000
[22:54:23.039]    __FlashLen=0x00000000
[22:54:23.040]    __FlashArg=0x00000000
[22:54:23.040]    __FlashOp=0x00000000
[22:54:23.040]    __Result=0x00000000
[22:54:23.041]    
[22:54:23.041]    // User-defined
[22:54:23.041]    DbgMCU_CR=0x00000007
[22:54:23.041]    DbgMCU_APB1_Fz=0x00000000
[22:54:23.041]    DbgMCU_APB2_Fz=0x00000000
[22:54:23.041]    TraceClk_Pin=0x00040002
[22:54:23.041]    TraceD0_Pin=0x00040003
[22:54:23.042]    TraceD1_Pin=0x00040004
[22:54:23.042]    TraceD2_Pin=0x00040005
[22:54:23.042]    TraceD3_Pin=0x00040006
[22:54:23.042]  </debugvars>
[22:54:23.042]  
[22:54:23.042]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:54:23.043]    <block atomic="false" info="">
[22:54:23.043]      Sequence("CheckID");
[22:54:23.043]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:54:23.043]          <block atomic="false" info="">
[22:54:23.043]            __var pidr1 = 0;
[22:54:23.043]              // -> [pidr1 <= 0x00000000]
[22:54:23.043]            __var pidr2 = 0;
[22:54:23.044]              // -> [pidr2 <= 0x00000000]
[22:54:23.044]            __var jep106id = 0;
[22:54:23.044]              // -> [jep106id <= 0x00000000]
[22:54:23.044]            __var ROMTableBase = 0;
[22:54:23.044]              // -> [ROMTableBase <= 0x00000000]
[22:54:23.044]            __ap = 0;      // AHB-AP
[22:54:23.045]              // -> [__ap <= 0x00000000]
[22:54:23.045]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:54:23.045]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.045]              // -> [ROMTableBase <= 0xE00FD000]
[22:54:23.045]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:54:23.046]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.046]              // -> [pidr1 <= 0x00000004]
[22:54:23.046]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:54:23.047]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.047]              // -> [pidr2 <= 0x0000001A]
[22:54:23.047]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:54:23.047]              // -> [jep106id <= 0x00000020]
[22:54:23.047]          </block>
[22:54:23.047]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:54:23.047]            // if-block "jep106id != 0x20"
[22:54:23.048]              // =>  FALSE
[22:54:23.048]            // skip if-block "jep106id != 0x20"
[22:54:23.048]          </control>
[22:54:23.048]        </sequence>
[22:54:23.048]    </block>
[22:54:23.048]  </sequence>
[22:54:23.048]  
[22:54:23.062]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:54:23.062]  
[22:54:23.063]  <debugvars>
[22:54:23.063]    // Pre-defined
[22:54:23.063]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:23.063]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:54:23.063]    __dp=0x00000000
[22:54:23.064]    __ap=0x00000000
[22:54:23.064]    __traceout=0x00000001      (SWO Trace)
[22:54:23.064]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:23.064]    __FlashAddr=0x00000000
[22:54:23.064]    __FlashLen=0x00000000
[22:54:23.065]    __FlashArg=0x00000000
[22:54:23.065]    __FlashOp=0x00000000
[22:54:23.065]    __Result=0x00000000
[22:54:23.065]    
[22:54:23.065]    // User-defined
[22:54:23.065]    DbgMCU_CR=0x00000007
[22:54:23.065]    DbgMCU_APB1_Fz=0x00000000
[22:54:23.066]    DbgMCU_APB2_Fz=0x00000000
[22:54:23.066]    TraceClk_Pin=0x00040002
[22:54:23.066]    TraceD0_Pin=0x00040003
[22:54:23.066]    TraceD1_Pin=0x00040004
[22:54:23.066]    TraceD2_Pin=0x00040005
[22:54:23.067]    TraceD3_Pin=0x00040006
[22:54:23.067]  </debugvars>
[22:54:23.067]  
[22:54:23.067]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:54:23.067]    <block atomic="false" info="">
[22:54:23.067]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:54:23.068]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.068]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:54:23.069]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.069]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:54:23.069]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.070]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:54:23.070]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.070]    </block>
[22:54:23.070]  </sequence>
[22:54:23.071]  
[22:54:23.087]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:54:23.087]  
[22:54:23.087]  <debugvars>
[22:54:23.087]    // Pre-defined
[22:54:23.087]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:23.087]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:54:23.088]    __dp=0x00000000
[22:54:23.088]    __ap=0x00000000
[22:54:23.088]    __traceout=0x00000001      (SWO Trace)
[22:54:23.088]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:23.088]    __FlashAddr=0x00000000
[22:54:23.089]    __FlashLen=0x00000000
[22:54:23.089]    __FlashArg=0x00000000
[22:54:23.089]    __FlashOp=0x00000000
[22:54:23.089]    __Result=0x00000000
[22:54:23.089]    
[22:54:23.089]    // User-defined
[22:54:23.090]    DbgMCU_CR=0x00000007
[22:54:23.090]    DbgMCU_APB1_Fz=0x00000000
[22:54:23.090]    DbgMCU_APB2_Fz=0x00000000
[22:54:23.090]    TraceClk_Pin=0x00040002
[22:54:23.090]    TraceD0_Pin=0x00040003
[22:54:23.090]    TraceD1_Pin=0x00040004
[22:54:23.091]    TraceD2_Pin=0x00040005
[22:54:23.091]    TraceD3_Pin=0x00040006
[22:54:23.091]  </debugvars>
[22:54:23.091]  
[22:54:23.091]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:54:23.092]    <block atomic="false" info="">
[22:54:23.092]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:54:23.092]        // -> [traceSWO <= 0x00000001]
[22:54:23.092]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:54:23.092]        // -> [traceTPIU <= 0x00000000]
[22:54:23.093]    </block>
[22:54:23.093]    <control if="traceSWO" while="" timeout="0" info="">
[22:54:23.093]      // if-block "traceSWO"
[22:54:23.093]        // =>  TRUE
[22:54:23.093]      <block atomic="false" info="">
[22:54:23.093]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:54:23.093]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:54:23.094]            <block atomic="false" info="">
[22:54:23.094]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:54:23.094]                // -> [dbgmcu_val <= 0x00000000]
[22:54:23.094]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:54:23.094]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:54:23.094]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:54:23.095]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.095]                // -> [dbgmcu_val <= 0x00000007]
[22:54:23.095]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:54:23.095]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:54:23.095]              Sequence("ConfigureTraceSWOPin");
[22:54:23.096]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:54:23.096]                  <block atomic="false" info="">
[22:54:23.096]                    __var pin     = 0;
[22:54:23.096]                      // -> [pin <= 0x00000000]
[22:54:23.096]                    __var port    = 0;
[22:54:23.096]                      // -> [port <= 0x00000000]
[22:54:23.097]                    __var portAdr = 0;
[22:54:23.097]                      // -> [portAdr <= 0x00000000]
[22:54:23.097]                    __var pos     = 0;
[22:54:23.097]                      // -> [pos <= 0x00000000]
[22:54:23.097]                    __var SWO_Pin = 0x00010003;          // PB3
[22:54:23.097]                      // -> [SWO_Pin <= 0x00010003]
[22:54:23.097]                  </block>
[22:54:23.097]                  <block atomic="false" info="configure SWO">
[22:54:23.098]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:54:23.098]                      // -> [pin <= 0x00000003]
[22:54:23.098]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:54:23.098]                      // -> [port <= 0x00000001]
[22:54:23.098]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:54:23.098]                      // -> [portAdr <= 0x40020400]
[22:54:23.098]                    pos = pin * 2;
[22:54:23.098]                      // -> [pos <= 0x00000006]
[22:54:23.098]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:54:23.099]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.099]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.099]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:54:23.100]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.100]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.100]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:54:23.101]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.101]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.101]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:54:23.102]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.102]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.102]                  </block>
[22:54:23.102]                  <control if="pin <  8" while="" timeout="0" info="">
[22:54:23.103]                    // if-block "pin <  8"
[22:54:23.103]                      // =>  TRUE
[22:54:23.103]                    <block atomic="false" info="">
[22:54:23.103]                      pos = ((pin    ) & 7) * 4;
[22:54:23.103]                        // -> [pos <= 0x0000000C]
[22:54:23.103]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:54:23.104]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.104]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.104]                    </block>
[22:54:23.104]                    // end if-block "pin <  8"
[22:54:23.105]                  </control>
[22:54:23.105]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:54:23.105]                    // if-block "pin >= 8"
[22:54:23.105]                      // =>  FALSE
[22:54:23.105]                    // skip if-block "pin >= 8"
[22:54:23.105]                  </control>
[22:54:23.105]                </sequence>
[22:54:23.105]            </block>
[22:54:23.105]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:54:23.106]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:54:23.106]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.106]            </block>
[22:54:23.106]          </sequence>
[22:54:23.106]      </block>
[22:54:23.106]      // end if-block "traceSWO"
[22:54:23.107]    </control>
[22:54:23.107]    <control if="traceTPIU" while="" timeout="0" info="">
[22:54:23.107]      // if-block "traceTPIU"
[22:54:23.107]        // =>  FALSE
[22:54:23.107]      // skip if-block "traceTPIU"
[22:54:23.107]    </control>
[22:54:23.107]  </sequence>
[22:54:23.107]  
[22:54:23.111]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:54:23.111]  
[22:54:23.112]  <debugvars>
[22:54:23.112]    // Pre-defined
[22:54:23.112]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:23.112]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:54:23.112]    __dp=0x00000000
[22:54:23.112]    __ap=0x00000000
[22:54:23.113]    __traceout=0x00000001      (SWO Trace)
[22:54:23.113]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:23.113]    __FlashAddr=0x00000000
[22:54:23.113]    __FlashLen=0x00000000
[22:54:23.113]    __FlashArg=0x00000000
[22:54:23.113]    __FlashOp=0x00000000
[22:54:23.113]    __Result=0x00000000
[22:54:23.113]    
[22:54:23.113]    // User-defined
[22:54:23.114]    DbgMCU_CR=0x00000007
[22:54:23.114]    DbgMCU_APB1_Fz=0x00000000
[22:54:23.114]    DbgMCU_APB2_Fz=0x00000000
[22:54:23.114]    TraceClk_Pin=0x00040002
[22:54:23.114]    TraceD0_Pin=0x00040003
[22:54:23.114]    TraceD1_Pin=0x00040004
[22:54:23.114]    TraceD2_Pin=0x00040005
[22:54:23.115]    TraceD3_Pin=0x00040006
[22:54:23.115]  </debugvars>
[22:54:23.115]  
[22:54:23.115]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:54:23.115]    <block atomic="false" info="">
[22:54:23.115]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:54:23.116]        // -> [traceSWO <= 0x00000001]
[22:54:23.116]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:54:23.116]        // -> [traceTPIU <= 0x00000000]
[22:54:23.116]    </block>
[22:54:23.116]    <control if="traceSWO" while="" timeout="0" info="">
[22:54:23.116]      // if-block "traceSWO"
[22:54:23.116]        // =>  TRUE
[22:54:23.117]      <block atomic="false" info="">
[22:54:23.117]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:54:23.117]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:54:23.117]            <block atomic="false" info="">
[22:54:23.117]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:54:23.117]                // -> [dbgmcu_val <= 0x00000000]
[22:54:23.117]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:54:23.118]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:54:23.118]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:54:23.118]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.118]                // -> [dbgmcu_val <= 0x00000007]
[22:54:23.118]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:54:23.119]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:54:23.119]              Sequence("ConfigureTraceSWOPin");
[22:54:23.119]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:54:23.119]                  <block atomic="false" info="">
[22:54:23.119]                    __var pin     = 0;
[22:54:23.119]                      // -> [pin <= 0x00000000]
[22:54:23.119]                    __var port    = 0;
[22:54:23.119]                      // -> [port <= 0x00000000]
[22:54:23.120]                    __var portAdr = 0;
[22:54:23.120]                      // -> [portAdr <= 0x00000000]
[22:54:23.120]                    __var pos     = 0;
[22:54:23.120]                      // -> [pos <= 0x00000000]
[22:54:23.120]                    __var SWO_Pin = 0x00010003;          // PB3
[22:54:23.120]                      // -> [SWO_Pin <= 0x00010003]
[22:54:23.120]                  </block>
[22:54:23.120]                  <block atomic="false" info="configure SWO">
[22:54:23.121]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:54:23.121]                      // -> [pin <= 0x00000003]
[22:54:23.121]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:54:23.121]                      // -> [port <= 0x00000001]
[22:54:23.121]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:54:23.121]                      // -> [portAdr <= 0x40020400]
[22:54:23.121]                    pos = pin * 2;
[22:54:23.121]                      // -> [pos <= 0x00000006]
[22:54:23.121]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:54:23.122]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.122]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.122]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:54:23.123]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.123]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.123]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:54:23.124]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.124]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.124]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:54:23.125]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.125]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.125]                  </block>
[22:54:23.126]                  <control if="pin <  8" while="" timeout="0" info="">
[22:54:23.126]                    // if-block "pin <  8"
[22:54:23.126]                      // =>  TRUE
[22:54:23.126]                    <block atomic="false" info="">
[22:54:23.126]                      pos = ((pin    ) & 7) * 4;
[22:54:23.127]                        // -> [pos <= 0x0000000C]
[22:54:23.127]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:54:23.127]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.127]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.127]                    </block>
[22:54:23.127]                    // end if-block "pin <  8"
[22:54:23.128]                  </control>
[22:54:23.128]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:54:23.128]                    // if-block "pin >= 8"
[22:54:23.128]                      // =>  FALSE
[22:54:23.128]                    // skip if-block "pin >= 8"
[22:54:23.128]                  </control>
[22:54:23.128]                </sequence>
[22:54:23.128]            </block>
[22:54:23.129]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:54:23.129]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:54:23.129]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.129]            </block>
[22:54:23.129]          </sequence>
[22:54:23.129]      </block>
[22:54:23.130]      // end if-block "traceSWO"
[22:54:23.130]    </control>
[22:54:23.130]    <control if="traceTPIU" while="" timeout="0" info="">
[22:54:23.130]      // if-block "traceTPIU"
[22:54:23.130]        // =>  FALSE
[22:54:23.130]      // skip if-block "traceTPIU"
[22:54:23.130]    </control>
[22:54:23.130]  </sequence>
[22:54:23.130]  
[22:54:23.340]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:54:23.340]  
[22:54:23.340]  <debugvars>
[22:54:23.340]    // Pre-defined
[22:54:23.340]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:54:23.340]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[22:54:23.341]    __dp=0x00000000
[22:54:23.341]    __ap=0x00000000
[22:54:23.341]    __traceout=0x00000001      (SWO Trace)
[22:54:23.341]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:54:23.341]    __FlashAddr=0x00000000
[22:54:23.341]    __FlashLen=0x00000000
[22:54:23.341]    __FlashArg=0x00000000
[22:54:23.341]    __FlashOp=0x00000000
[22:54:23.342]    __Result=0x00000000
[22:54:23.342]    
[22:54:23.342]    // User-defined
[22:54:23.342]    DbgMCU_CR=0x00000007
[22:54:23.342]    DbgMCU_APB1_Fz=0x00000000
[22:54:23.342]    DbgMCU_APB2_Fz=0x00000000
[22:54:23.342]    TraceClk_Pin=0x00040002
[22:54:23.342]    TraceD0_Pin=0x00040003
[22:54:23.342]    TraceD1_Pin=0x00040004
[22:54:23.343]    TraceD2_Pin=0x00040005
[22:54:23.343]    TraceD3_Pin=0x00040006
[22:54:23.343]  </debugvars>
[22:54:23.343]  
[22:54:23.343]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:54:23.343]    <block atomic="false" info="">
[22:54:23.343]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:54:23.343]        // -> [traceSWO <= 0x00000001]
[22:54:23.344]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:54:23.344]        // -> [traceTPIU <= 0x00000000]
[22:54:23.344]    </block>
[22:54:23.344]    <control if="traceSWO" while="" timeout="0" info="">
[22:54:23.344]      // if-block "traceSWO"
[22:54:23.344]        // =>  TRUE
[22:54:23.344]      <block atomic="false" info="">
[22:54:23.344]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:54:23.345]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:54:23.345]            <block atomic="false" info="">
[22:54:23.345]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:54:23.345]                // -> [dbgmcu_val <= 0x00000000]
[22:54:23.345]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:54:23.345]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:54:23.345]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:54:23.346]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.346]                // -> [dbgmcu_val <= 0x00000007]
[22:54:23.346]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:54:23.346]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:54:23.346]              Sequence("ConfigureTraceSWOPin");
[22:54:23.346]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:54:23.347]                  <block atomic="false" info="">
[22:54:23.347]                    __var pin     = 0;
[22:54:23.347]                      // -> [pin <= 0x00000000]
[22:54:23.347]                    __var port    = 0;
[22:54:23.347]                      // -> [port <= 0x00000000]
[22:54:23.347]                    __var portAdr = 0;
[22:54:23.347]                      // -> [portAdr <= 0x00000000]
[22:54:23.347]                    __var pos     = 0;
[22:54:23.347]                      // -> [pos <= 0x00000000]
[22:54:23.348]                    __var SWO_Pin = 0x00010003;          // PB3
[22:54:23.348]                      // -> [SWO_Pin <= 0x00010003]
[22:54:23.348]                  </block>
[22:54:23.348]                  <block atomic="false" info="configure SWO">
[22:54:23.348]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:54:23.348]                      // -> [pin <= 0x00000003]
[22:54:23.348]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:54:23.348]                      // -> [port <= 0x00000001]
[22:54:23.349]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:54:23.349]                      // -> [portAdr <= 0x40020400]
[22:54:23.349]                    pos = pin * 2;
[22:54:23.349]                      // -> [pos <= 0x00000006]
[22:54:23.349]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:54:23.350]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.350]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.350]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:54:23.350]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.351]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.351]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:54:23.351]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.352]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.352]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:54:23.352]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.353]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.353]                  </block>
[22:54:23.353]                  <control if="pin <  8" while="" timeout="0" info="">
[22:54:23.353]                    // if-block "pin <  8"
[22:54:23.353]                      // =>  TRUE
[22:54:23.353]                    <block atomic="false" info="">
[22:54:23.353]                      pos = ((pin    ) & 7) * 4;
[22:54:23.354]                        // -> [pos <= 0x0000000C]
[22:54:23.354]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:54:23.354]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.355]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.355]                    </block>
[22:54:23.355]                    // end if-block "pin <  8"
[22:54:23.355]                  </control>
[22:54:23.355]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:54:23.355]                    // if-block "pin >= 8"
[22:54:23.355]                      // =>  FALSE
[22:54:23.355]                    // skip if-block "pin >= 8"
[22:54:23.356]                  </control>
[22:54:23.356]                </sequence>
[22:54:23.356]            </block>
[22:54:23.356]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:54:23.356]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:54:23.356]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:54:23.357]            </block>
[22:54:23.357]          </sequence>
[22:54:23.357]      </block>
[22:54:23.357]      // end if-block "traceSWO"
[22:54:23.357]    </control>
[22:54:23.357]    <control if="traceTPIU" while="" timeout="0" info="">
[22:54:23.357]      // if-block "traceTPIU"
[22:54:23.357]        // =>  FALSE
[22:54:23.358]      // skip if-block "traceTPIU"
[22:54:23.358]    </control>
[22:54:23.358]  </sequence>
[22:54:23.358]  
[23:01:41.418]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:01:41.418]  
[23:01:41.419]  <debugvars>
[23:01:41.419]    // Pre-defined
[23:01:41.419]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:01:41.419]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:01:41.420]    __dp=0x00000000
[23:01:41.420]    __ap=0x00000000
[23:01:41.420]    __traceout=0x00000001      (SWO Trace)
[23:01:41.421]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:01:41.421]    __FlashAddr=0x00000000
[23:01:41.421]    __FlashLen=0x00000000
[23:01:41.421]    __FlashArg=0x00000000
[23:01:41.421]    __FlashOp=0x00000000
[23:01:41.421]    __Result=0x00000000
[23:01:41.421]    
[23:01:41.421]    // User-defined
[23:01:41.421]    DbgMCU_CR=0x00000007
[23:01:41.422]    DbgMCU_APB1_Fz=0x00000000
[23:01:41.422]    DbgMCU_APB2_Fz=0x00000000
[23:01:41.422]    TraceClk_Pin=0x00040002
[23:01:41.422]    TraceD0_Pin=0x00040003
[23:01:41.422]    TraceD1_Pin=0x00040004
[23:01:41.423]    TraceD2_Pin=0x00040005
[23:01:41.423]    TraceD3_Pin=0x00040006
[23:01:41.423]  </debugvars>
[23:01:41.423]  
[23:01:41.423]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:01:41.423]    <block atomic="false" info="">
[23:01:41.424]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:01:41.424]        // -> [traceSWO <= 0x00000001]
[23:01:41.424]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:01:41.424]        // -> [traceTPIU <= 0x00000000]
[23:01:41.424]    </block>
[23:01:41.425]    <control if="traceSWO" while="" timeout="0" info="">
[23:01:41.425]      // if-block "traceSWO"
[23:01:41.425]        // =>  TRUE
[23:01:41.425]      <block atomic="false" info="">
[23:01:41.425]        Sequence("DisableTraceSWO");
[23:01:41.425]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:01:41.426]            <block atomic="false" info="">
[23:01:41.426]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:01:41.426]                // -> [dbgmcu_val <= 0x00000000]
[23:01:41.426]            </block>
[23:01:41.426]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:01:41.426]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:01:41.427]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:01:41.427]                // -> [dbgmcu_val <= 0x00000007]
[23:01:41.427]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:01:41.428]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:01:41.428]            </block>
[23:01:41.428]          </sequence>
[23:01:41.428]      </block>
[23:01:41.428]      // end if-block "traceSWO"
[23:01:41.429]    </control>
[23:01:41.429]    <control if="traceTPIU" while="" timeout="0" info="">
[23:01:41.429]      // if-block "traceTPIU"
[23:01:41.429]        // =>  FALSE
[23:01:41.429]      // skip if-block "traceTPIU"
[23:01:41.430]    </control>
[23:01:41.430]  </sequence>
[23:01:41.430]  
[23:03:46.613]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:03:46.613]  
[23:03:46.614]  <debugvars>
[23:03:46.614]    // Pre-defined
[23:03:46.614]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:03:46.614]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:03:46.615]    __dp=0x00000000
[23:03:46.615]    __ap=0x00000000
[23:03:46.615]    __traceout=0x00000001      (SWO Trace)
[23:03:46.615]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:03:46.615]    __FlashAddr=0x00000000
[23:03:46.616]    __FlashLen=0x00000000
[23:03:46.616]    __FlashArg=0x00000000
[23:03:46.616]    __FlashOp=0x00000000
[23:03:46.616]    __Result=0x00000000
[23:03:46.616]    
[23:03:46.616]    // User-defined
[23:03:46.616]    DbgMCU_CR=0x00000007
[23:03:46.617]    DbgMCU_APB1_Fz=0x00000000
[23:03:46.617]    DbgMCU_APB2_Fz=0x00000000
[23:03:46.617]    TraceClk_Pin=0x00040002
[23:03:46.617]    TraceD0_Pin=0x00040003
[23:03:46.617]    TraceD1_Pin=0x00040004
[23:03:46.618]    TraceD2_Pin=0x00040005
[23:03:46.618]    TraceD3_Pin=0x00040006
[23:03:46.618]  </debugvars>
[23:03:46.618]  
[23:03:46.618]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:03:46.619]    <block atomic="false" info="">
[23:03:46.619]      Sequence("CheckID");
[23:03:46.619]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:03:46.619]          <block atomic="false" info="">
[23:03:46.619]            __var pidr1 = 0;
[23:03:46.620]              // -> [pidr1 <= 0x00000000]
[23:03:46.620]            __var pidr2 = 0;
[23:03:46.620]              // -> [pidr2 <= 0x00000000]
[23:03:46.620]            __var jep106id = 0;
[23:03:46.620]              // -> [jep106id <= 0x00000000]
[23:03:46.620]            __var ROMTableBase = 0;
[23:03:46.621]              // -> [ROMTableBase <= 0x00000000]
[23:03:46.621]            __ap = 0;      // AHB-AP
[23:03:46.621]              // -> [__ap <= 0x00000000]
[23:03:46.621]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:03:46.622]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.622]              // -> [ROMTableBase <= 0xE00FD000]
[23:03:46.622]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:03:46.622]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.623]              // -> [pidr1 <= 0x00000004]
[23:03:46.623]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:03:46.623]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.623]              // -> [pidr2 <= 0x0000001A]
[23:03:46.624]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:03:46.624]              // -> [jep106id <= 0x00000020]
[23:03:46.624]          </block>
[23:03:46.624]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:03:46.624]            // if-block "jep106id != 0x20"
[23:03:46.624]              // =>  FALSE
[23:03:46.625]            // skip if-block "jep106id != 0x20"
[23:03:46.625]          </control>
[23:03:46.625]        </sequence>
[23:03:46.625]    </block>
[23:03:46.625]  </sequence>
[23:03:46.625]  
[23:03:46.640]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:03:46.640]  
[23:03:46.640]  <debugvars>
[23:03:46.641]    // Pre-defined
[23:03:46.641]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:03:46.641]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:03:46.641]    __dp=0x00000000
[23:03:46.641]    __ap=0x00000000
[23:03:46.642]    __traceout=0x00000001      (SWO Trace)
[23:03:46.642]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:03:46.642]    __FlashAddr=0x00000000
[23:03:46.642]    __FlashLen=0x00000000
[23:03:46.642]    __FlashArg=0x00000000
[23:03:46.643]    __FlashOp=0x00000000
[23:03:46.643]    __Result=0x00000000
[23:03:46.643]    
[23:03:46.643]    // User-defined
[23:03:46.643]    DbgMCU_CR=0x00000007
[23:03:46.643]    DbgMCU_APB1_Fz=0x00000000
[23:03:46.643]    DbgMCU_APB2_Fz=0x00000000
[23:03:46.644]    TraceClk_Pin=0x00040002
[23:03:46.644]    TraceD0_Pin=0x00040003
[23:03:46.644]    TraceD1_Pin=0x00040004
[23:03:46.644]    TraceD2_Pin=0x00040005
[23:03:46.644]    TraceD3_Pin=0x00040006
[23:03:46.645]  </debugvars>
[23:03:46.645]  
[23:03:46.645]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:03:46.645]    <block atomic="false" info="">
[23:03:46.645]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:03:46.646]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.646]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:03:46.647]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.647]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:03:46.648]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.648]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:03:46.648]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:03:46.648]    </block>
[23:03:46.649]  </sequence>
[23:03:46.649]  
[23:04:18.452]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:04:18.452]  
[23:04:18.452]  <debugvars>
[23:04:18.452]    // Pre-defined
[23:04:18.452]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:04:18.452]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:04:18.453]    __dp=0x00000000
[23:04:18.453]    __ap=0x00000000
[23:04:18.453]    __traceout=0x00000001      (SWO Trace)
[23:04:18.453]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:04:18.453]    __FlashAddr=0x00000000
[23:04:18.453]    __FlashLen=0x00000000
[23:04:18.453]    __FlashArg=0x00000000
[23:04:18.454]    __FlashOp=0x00000000
[23:04:18.454]    __Result=0x00000000
[23:04:18.454]    
[23:04:18.454]    // User-defined
[23:04:18.454]    DbgMCU_CR=0x00000007
[23:04:18.454]    DbgMCU_APB1_Fz=0x00000000
[23:04:18.454]    DbgMCU_APB2_Fz=0x00000000
[23:04:18.454]    TraceClk_Pin=0x00040002
[23:04:18.454]    TraceD0_Pin=0x00040003
[23:04:18.455]    TraceD1_Pin=0x00040004
[23:04:18.455]    TraceD2_Pin=0x00040005
[23:04:18.455]    TraceD3_Pin=0x00040006
[23:04:18.455]  </debugvars>
[23:04:18.455]  
[23:04:18.455]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:04:18.455]    <block atomic="false" info="">
[23:04:18.455]      Sequence("CheckID");
[23:04:18.456]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:04:18.456]          <block atomic="false" info="">
[23:04:18.456]            __var pidr1 = 0;
[23:04:18.456]              // -> [pidr1 <= 0x00000000]
[23:04:18.456]            __var pidr2 = 0;
[23:04:18.456]              // -> [pidr2 <= 0x00000000]
[23:04:18.456]            __var jep106id = 0;
[23:04:18.456]              // -> [jep106id <= 0x00000000]
[23:04:18.457]            __var ROMTableBase = 0;
[23:04:18.457]              // -> [ROMTableBase <= 0x00000000]
[23:04:18.457]            __ap = 0;      // AHB-AP
[23:04:18.457]              // -> [__ap <= 0x00000000]
[23:04:18.457]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:04:18.457]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.457]              // -> [ROMTableBase <= 0xE00FD000]
[23:04:18.458]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:04:18.458]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.458]              // -> [pidr1 <= 0x00000004]
[23:04:18.458]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:04:18.459]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.459]              // -> [pidr2 <= 0x0000001A]
[23:04:18.459]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:04:18.459]              // -> [jep106id <= 0x00000020]
[23:04:18.459]          </block>
[23:04:18.460]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:04:18.460]            // if-block "jep106id != 0x20"
[23:04:18.460]              // =>  FALSE
[23:04:18.460]            // skip if-block "jep106id != 0x20"
[23:04:18.460]          </control>
[23:04:18.460]        </sequence>
[23:04:18.460]    </block>
[23:04:18.460]  </sequence>
[23:04:18.460]  
[23:04:18.475]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:04:18.475]  
[23:04:18.475]  <debugvars>
[23:04:18.475]    // Pre-defined
[23:04:18.475]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:04:18.475]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:04:18.475]    __dp=0x00000000
[23:04:18.475]    __ap=0x00000000
[23:04:18.476]    __traceout=0x00000001      (SWO Trace)
[23:04:18.476]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:04:18.476]    __FlashAddr=0x00000000
[23:04:18.476]    __FlashLen=0x00000000
[23:04:18.476]    __FlashArg=0x00000000
[23:04:18.476]    __FlashOp=0x00000000
[23:04:18.476]    __Result=0x00000000
[23:04:18.476]    
[23:04:18.476]    // User-defined
[23:04:18.477]    DbgMCU_CR=0x00000007
[23:04:18.477]    DbgMCU_APB1_Fz=0x00000000
[23:04:18.477]    DbgMCU_APB2_Fz=0x00000000
[23:04:18.477]    TraceClk_Pin=0x00040002
[23:04:18.477]    TraceD0_Pin=0x00040003
[23:04:18.477]    TraceD1_Pin=0x00040004
[23:04:18.477]    TraceD2_Pin=0x00040005
[23:04:18.477]    TraceD3_Pin=0x00040006
[23:04:18.478]  </debugvars>
[23:04:18.478]  
[23:04:18.478]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:04:18.478]    <block atomic="false" info="">
[23:04:18.478]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:04:18.478]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.479]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:04:18.479]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.479]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:04:18.480]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.480]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:04:18.480]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.480]    </block>
[23:04:18.480]  </sequence>
[23:04:18.480]  
[23:04:18.498]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:04:18.498]  
[23:04:18.498]  <debugvars>
[23:04:18.498]    // Pre-defined
[23:04:18.498]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:04:18.498]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:04:18.498]    __dp=0x00000000
[23:04:18.498]    __ap=0x00000000
[23:04:18.498]    __traceout=0x00000001      (SWO Trace)
[23:04:18.499]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:04:18.499]    __FlashAddr=0x00000000
[23:04:18.499]    __FlashLen=0x00000000
[23:04:18.499]    __FlashArg=0x00000000
[23:04:18.499]    __FlashOp=0x00000000
[23:04:18.499]    __Result=0x00000000
[23:04:18.500]    
[23:04:18.500]    // User-defined
[23:04:18.500]    DbgMCU_CR=0x00000007
[23:04:18.500]    DbgMCU_APB1_Fz=0x00000000
[23:04:18.500]    DbgMCU_APB2_Fz=0x00000000
[23:04:18.500]    TraceClk_Pin=0x00040002
[23:04:18.500]    TraceD0_Pin=0x00040003
[23:04:18.500]    TraceD1_Pin=0x00040004
[23:04:18.500]    TraceD2_Pin=0x00040005
[23:04:18.500]    TraceD3_Pin=0x00040006
[23:04:18.500]  </debugvars>
[23:04:18.501]  
[23:04:18.501]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:04:18.501]    <block atomic="false" info="">
[23:04:18.501]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:04:18.501]        // -> [traceSWO <= 0x00000001]
[23:04:18.501]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:04:18.501]        // -> [traceTPIU <= 0x00000000]
[23:04:18.501]    </block>
[23:04:18.502]    <control if="traceSWO" while="" timeout="0" info="">
[23:04:18.502]      // if-block "traceSWO"
[23:04:18.502]        // =>  TRUE
[23:04:18.502]      <block atomic="false" info="">
[23:04:18.502]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:04:18.502]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:04:18.502]            <block atomic="false" info="">
[23:04:18.502]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:04:18.502]                // -> [dbgmcu_val <= 0x00000000]
[23:04:18.503]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:04:18.503]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:04:18.503]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:04:18.503]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.504]                // -> [dbgmcu_val <= 0x00000007]
[23:04:18.504]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:04:18.504]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:04:18.504]              Sequence("ConfigureTraceSWOPin");
[23:04:18.504]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:04:18.504]                  <block atomic="false" info="">
[23:04:18.504]                    __var pin     = 0;
[23:04:18.505]                      // -> [pin <= 0x00000000]
[23:04:18.505]                    __var port    = 0;
[23:04:18.505]                      // -> [port <= 0x00000000]
[23:04:18.505]                    __var portAdr = 0;
[23:04:18.505]                      // -> [portAdr <= 0x00000000]
[23:04:18.505]                    __var pos     = 0;
[23:04:18.505]                      // -> [pos <= 0x00000000]
[23:04:18.506]                    __var SWO_Pin = 0x00010003;          // PB3
[23:04:18.506]                      // -> [SWO_Pin <= 0x00010003]
[23:04:18.506]                  </block>
[23:04:18.506]                  <block atomic="false" info="configure SWO">
[23:04:18.506]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:04:18.506]                      // -> [pin <= 0x00000003]
[23:04:18.506]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:04:18.506]                      // -> [port <= 0x00000001]
[23:04:18.507]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:04:18.507]                      // -> [portAdr <= 0x40020400]
[23:04:18.507]                    pos = pin * 2;
[23:04:18.507]                      // -> [pos <= 0x00000006]
[23:04:18.507]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:04:18.508]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.508]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.508]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:04:18.509]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.509]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.509]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:04:18.510]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.510]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.511]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:04:18.511]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.511]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.511]                  </block>
[23:04:18.512]                  <control if="pin <  8" while="" timeout="0" info="">
[23:04:18.512]                    // if-block "pin <  8"
[23:04:18.512]                      // =>  TRUE
[23:04:18.512]                    <block atomic="false" info="">
[23:04:18.512]                      pos = ((pin    ) & 7) * 4;
[23:04:18.512]                        // -> [pos <= 0x0000000C]
[23:04:18.512]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:04:18.513]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.513]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.513]                    </block>
[23:04:18.514]                    // end if-block "pin <  8"
[23:04:18.514]                  </control>
[23:04:18.514]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:04:18.514]                    // if-block "pin >= 8"
[23:04:18.514]                      // =>  FALSE
[23:04:18.514]                    // skip if-block "pin >= 8"
[23:04:18.514]                  </control>
[23:04:18.514]                </sequence>
[23:04:18.515]            </block>
[23:04:18.515]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:04:18.515]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:04:18.515]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.516]            </block>
[23:04:18.516]          </sequence>
[23:04:18.516]      </block>
[23:04:18.516]      // end if-block "traceSWO"
[23:04:18.516]    </control>
[23:04:18.516]    <control if="traceTPIU" while="" timeout="0" info="">
[23:04:18.516]      // if-block "traceTPIU"
[23:04:18.516]        // =>  FALSE
[23:04:18.516]      // skip if-block "traceTPIU"
[23:04:18.517]    </control>
[23:04:18.517]  </sequence>
[23:04:18.517]  
[23:04:18.521]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:04:18.521]  
[23:04:18.521]  <debugvars>
[23:04:18.521]    // Pre-defined
[23:04:18.522]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:04:18.522]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:04:18.522]    __dp=0x00000000
[23:04:18.522]    __ap=0x00000000
[23:04:18.522]    __traceout=0x00000001      (SWO Trace)
[23:04:18.522]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:04:18.522]    __FlashAddr=0x00000000
[23:04:18.523]    __FlashLen=0x00000000
[23:04:18.523]    __FlashArg=0x00000000
[23:04:18.523]    __FlashOp=0x00000000
[23:04:18.523]    __Result=0x00000000
[23:04:18.523]    
[23:04:18.523]    // User-defined
[23:04:18.523]    DbgMCU_CR=0x00000007
[23:04:18.523]    DbgMCU_APB1_Fz=0x00000000
[23:04:18.524]    DbgMCU_APB2_Fz=0x00000000
[23:04:18.524]    TraceClk_Pin=0x00040002
[23:04:18.524]    TraceD0_Pin=0x00040003
[23:04:18.524]    TraceD1_Pin=0x00040004
[23:04:18.524]    TraceD2_Pin=0x00040005
[23:04:18.524]    TraceD3_Pin=0x00040006
[23:04:18.524]  </debugvars>
[23:04:18.524]  
[23:04:18.524]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:04:18.524]    <block atomic="false" info="">
[23:04:18.525]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:04:18.525]        // -> [traceSWO <= 0x00000001]
[23:04:18.525]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:04:18.525]        // -> [traceTPIU <= 0x00000000]
[23:04:18.525]    </block>
[23:04:18.525]    <control if="traceSWO" while="" timeout="0" info="">
[23:04:18.525]      // if-block "traceSWO"
[23:04:18.525]        // =>  TRUE
[23:04:18.526]      <block atomic="false" info="">
[23:04:18.526]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:04:18.526]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:04:18.526]            <block atomic="false" info="">
[23:04:18.526]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:04:18.526]                // -> [dbgmcu_val <= 0x00000000]
[23:04:18.526]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:04:18.526]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:04:18.527]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:04:18.527]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.527]                // -> [dbgmcu_val <= 0x00000007]
[23:04:18.527]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:04:18.527]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:04:18.527]              Sequence("ConfigureTraceSWOPin");
[23:04:18.528]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:04:18.528]                  <block atomic="false" info="">
[23:04:18.528]                    __var pin     = 0;
[23:04:18.528]                      // -> [pin <= 0x00000000]
[23:04:18.528]                    __var port    = 0;
[23:04:18.528]                      // -> [port <= 0x00000000]
[23:04:18.528]                    __var portAdr = 0;
[23:04:18.528]                      // -> [portAdr <= 0x00000000]
[23:04:18.529]                    __var pos     = 0;
[23:04:18.529]                      // -> [pos <= 0x00000000]
[23:04:18.529]                    __var SWO_Pin = 0x00010003;          // PB3
[23:04:18.529]                      // -> [SWO_Pin <= 0x00010003]
[23:04:18.529]                  </block>
[23:04:18.529]                  <block atomic="false" info="configure SWO">
[23:04:18.529]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:04:18.529]                      // -> [pin <= 0x00000003]
[23:04:18.530]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:04:18.530]                      // -> [port <= 0x00000001]
[23:04:18.530]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:04:18.530]                      // -> [portAdr <= 0x40020400]
[23:04:18.530]                    pos = pin * 2;
[23:04:18.530]                      // -> [pos <= 0x00000006]
[23:04:18.530]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:04:18.531]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.531]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.531]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:04:18.532]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.532]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.532]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:04:18.533]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.533]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.533]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:04:18.534]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.534]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.534]                  </block>
[23:04:18.534]                  <control if="pin <  8" while="" timeout="0" info="">
[23:04:18.535]                    // if-block "pin <  8"
[23:04:18.535]                      // =>  TRUE
[23:04:18.535]                    <block atomic="false" info="">
[23:04:18.535]                      pos = ((pin    ) & 7) * 4;
[23:04:18.535]                        // -> [pos <= 0x0000000C]
[23:04:18.535]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:04:18.536]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.536]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.536]                    </block>
[23:04:18.536]                    // end if-block "pin <  8"
[23:04:18.536]                  </control>
[23:04:18.537]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:04:18.537]                    // if-block "pin >= 8"
[23:04:18.537]                      // =>  FALSE
[23:04:18.537]                    // skip if-block "pin >= 8"
[23:04:18.537]                  </control>
[23:04:18.537]                </sequence>
[23:04:18.537]            </block>
[23:04:18.537]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:04:18.538]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:04:18.538]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.538]            </block>
[23:04:18.538]          </sequence>
[23:04:18.538]      </block>
[23:04:18.539]      // end if-block "traceSWO"
[23:04:18.539]    </control>
[23:04:18.539]    <control if="traceTPIU" while="" timeout="0" info="">
[23:04:18.539]      // if-block "traceTPIU"
[23:04:18.539]        // =>  FALSE
[23:04:18.539]      // skip if-block "traceTPIU"
[23:04:18.539]    </control>
[23:04:18.539]  </sequence>
[23:04:18.539]  
[23:04:18.746]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:04:18.746]  
[23:04:18.746]  <debugvars>
[23:04:18.746]    // Pre-defined
[23:04:18.746]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:04:18.746]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:04:18.746]    __dp=0x00000000
[23:04:18.746]    __ap=0x00000000
[23:04:18.747]    __traceout=0x00000001      (SWO Trace)
[23:04:18.747]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:04:18.747]    __FlashAddr=0x00000000
[23:04:18.747]    __FlashLen=0x00000000
[23:04:18.747]    __FlashArg=0x00000000
[23:04:18.747]    __FlashOp=0x00000000
[23:04:18.747]    __Result=0x00000000
[23:04:18.747]    
[23:04:18.747]    // User-defined
[23:04:18.748]    DbgMCU_CR=0x00000007
[23:04:18.748]    DbgMCU_APB1_Fz=0x00000000
[23:04:18.748]    DbgMCU_APB2_Fz=0x00000000
[23:04:18.748]    TraceClk_Pin=0x00040002
[23:04:18.748]    TraceD0_Pin=0x00040003
[23:04:18.748]    TraceD1_Pin=0x00040004
[23:04:18.748]    TraceD2_Pin=0x00040005
[23:04:18.748]    TraceD3_Pin=0x00040006
[23:04:18.749]  </debugvars>
[23:04:18.749]  
[23:04:18.749]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:04:18.749]    <block atomic="false" info="">
[23:04:18.749]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:04:18.749]        // -> [traceSWO <= 0x00000001]
[23:04:18.749]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:04:18.750]        // -> [traceTPIU <= 0x00000000]
[23:04:18.750]    </block>
[23:04:18.750]    <control if="traceSWO" while="" timeout="0" info="">
[23:04:18.750]      // if-block "traceSWO"
[23:04:18.750]        // =>  TRUE
[23:04:18.750]      <block atomic="false" info="">
[23:04:18.750]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:04:18.750]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:04:18.751]            <block atomic="false" info="">
[23:04:18.751]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:04:18.751]                // -> [dbgmcu_val <= 0x00000000]
[23:04:18.751]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:04:18.752]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:04:18.752]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:04:18.752]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.752]                // -> [dbgmcu_val <= 0x00000007]
[23:04:18.752]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:04:18.752]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:04:18.753]              Sequence("ConfigureTraceSWOPin");
[23:04:18.753]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:04:18.753]                  <block atomic="false" info="">
[23:04:18.753]                    __var pin     = 0;
[23:04:18.753]                      // -> [pin <= 0x00000000]
[23:04:18.753]                    __var port    = 0;
[23:04:18.753]                      // -> [port <= 0x00000000]
[23:04:18.753]                    __var portAdr = 0;
[23:04:18.754]                      // -> [portAdr <= 0x00000000]
[23:04:18.754]                    __var pos     = 0;
[23:04:18.754]                      // -> [pos <= 0x00000000]
[23:04:18.754]                    __var SWO_Pin = 0x00010003;          // PB3
[23:04:18.754]                      // -> [SWO_Pin <= 0x00010003]
[23:04:18.754]                  </block>
[23:04:18.754]                  <block atomic="false" info="configure SWO">
[23:04:18.754]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:04:18.755]                      // -> [pin <= 0x00000003]
[23:04:18.755]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:04:18.755]                      // -> [port <= 0x00000001]
[23:04:18.755]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:04:18.755]                      // -> [portAdr <= 0x40020400]
[23:04:18.755]                    pos = pin * 2;
[23:04:18.755]                      // -> [pos <= 0x00000006]
[23:04:18.755]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:04:18.756]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.756]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.757]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:04:18.757]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.757]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.758]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:04:18.758]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.758]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.758]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:04:18.759]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.759]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.759]                  </block>
[23:04:18.759]                  <control if="pin <  8" while="" timeout="0" info="">
[23:04:18.760]                    // if-block "pin <  8"
[23:04:18.760]                      // =>  TRUE
[23:04:18.760]                    <block atomic="false" info="">
[23:04:18.760]                      pos = ((pin    ) & 7) * 4;
[23:04:18.760]                        // -> [pos <= 0x0000000C]
[23:04:18.760]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:04:18.761]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.761]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.761]                    </block>
[23:04:18.761]                    // end if-block "pin <  8"
[23:04:18.761]                  </control>
[23:04:18.762]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:04:18.762]                    // if-block "pin >= 8"
[23:04:18.762]                      // =>  FALSE
[23:04:18.762]                    // skip if-block "pin >= 8"
[23:04:18.762]                  </control>
[23:04:18.762]                </sequence>
[23:04:18.762]            </block>
[23:04:18.762]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:04:18.763]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:04:18.763]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:04:18.763]            </block>
[23:04:18.763]          </sequence>
[23:04:18.763]      </block>
[23:04:18.764]      // end if-block "traceSWO"
[23:04:18.764]    </control>
[23:04:18.764]    <control if="traceTPIU" while="" timeout="0" info="">
[23:04:18.764]      // if-block "traceTPIU"
[23:04:18.764]        // =>  FALSE
[23:04:18.764]      // skip if-block "traceTPIU"
[23:04:18.764]    </control>
[23:04:18.764]  </sequence>
[23:04:18.764]  
[23:07:59.315]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:07:59.315]  
[23:07:59.451]  <debugvars>
[23:07:59.453]    // Pre-defined
[23:07:59.455]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:07:59.455]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:07:59.456]    __dp=0x00000000
[23:07:59.456]    __ap=0x00000000
[23:07:59.457]    __traceout=0x00000001      (SWO Trace)
[23:07:59.457]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:07:59.457]    __FlashAddr=0x00000000
[23:07:59.458]    __FlashLen=0x00000000
[23:07:59.458]    __FlashArg=0x00000000
[23:07:59.459]    __FlashOp=0x00000000
[23:07:59.459]    __Result=0x00000000
[23:07:59.459]    
[23:07:59.459]    // User-defined
[23:07:59.460]    DbgMCU_CR=0x00000007
[23:07:59.460]    DbgMCU_APB1_Fz=0x00000000
[23:07:59.460]    DbgMCU_APB2_Fz=0x00000000
[23:07:59.461]    TraceClk_Pin=0x00040002
[23:07:59.461]    TraceD0_Pin=0x00040003
[23:07:59.461]    TraceD1_Pin=0x00040004
[23:07:59.461]    TraceD2_Pin=0x00040005
[23:07:59.461]    TraceD3_Pin=0x00040006
[23:07:59.461]  </debugvars>
[23:07:59.461]  
[23:07:59.461]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:07:59.462]    <block atomic="false" info="">
[23:07:59.462]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:07:59.462]        // -> [traceSWO <= 0x00000001]
[23:07:59.462]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:07:59.462]        // -> [traceTPIU <= 0x00000000]
[23:07:59.463]    </block>
[23:07:59.463]    <control if="traceSWO" while="" timeout="0" info="">
[23:07:59.463]      // if-block "traceSWO"
[23:07:59.463]        // =>  TRUE
[23:07:59.463]      <block atomic="false" info="">
[23:07:59.463]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:07:59.463]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:07:59.464]            <block atomic="false" info="">
[23:07:59.464]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:07:59.464]                // -> [dbgmcu_val <= 0x00000000]
[23:07:59.464]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:07:59.464]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:07:59.465]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:07:59.465]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.465]                // -> [dbgmcu_val <= 0x00000007]
[23:07:59.465]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:07:59.465]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:07:59.466]              Sequence("ConfigureTraceSWOPin");
[23:07:59.466]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:07:59.466]                  <block atomic="false" info="">
[23:07:59.466]                    __var pin     = 0;
[23:07:59.466]                      // -> [pin <= 0x00000000]
[23:07:59.466]                    __var port    = 0;
[23:07:59.466]                      // -> [port <= 0x00000000]
[23:07:59.466]                    __var portAdr = 0;
[23:07:59.467]                      // -> [portAdr <= 0x00000000]
[23:07:59.467]                    __var pos     = 0;
[23:07:59.467]                      // -> [pos <= 0x00000000]
[23:07:59.467]                    __var SWO_Pin = 0x00010003;          // PB3
[23:07:59.467]                      // -> [SWO_Pin <= 0x00010003]
[23:07:59.467]                  </block>
[23:07:59.467]                  <block atomic="false" info="configure SWO">
[23:07:59.467]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:07:59.467]                      // -> [pin <= 0x00000003]
[23:07:59.468]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:07:59.468]                      // -> [port <= 0x00000001]
[23:07:59.468]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:07:59.468]                      // -> [portAdr <= 0x40020400]
[23:07:59.468]                    pos = pin * 2;
[23:07:59.468]                      // -> [pos <= 0x00000006]
[23:07:59.468]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:07:59.469]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.469]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.469]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:07:59.470]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.470]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.470]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:07:59.471]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.471]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.471]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:07:59.472]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.472]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.472]                  </block>
[23:07:59.472]                  <control if="pin <  8" while="" timeout="0" info="">
[23:07:59.473]                    // if-block "pin <  8"
[23:07:59.473]                      // =>  TRUE
[23:07:59.473]                    <block atomic="false" info="">
[23:07:59.473]                      pos = ((pin    ) & 7) * 4;
[23:07:59.473]                        // -> [pos <= 0x0000000C]
[23:07:59.473]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:07:59.473]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.474]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.474]                    </block>
[23:07:59.474]                    // end if-block "pin <  8"
[23:07:59.474]                  </control>
[23:07:59.474]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:07:59.474]                    // if-block "pin >= 8"
[23:07:59.475]                      // =>  FALSE
[23:07:59.475]                    // skip if-block "pin >= 8"
[23:07:59.475]                  </control>
[23:07:59.475]                </sequence>
[23:07:59.475]            </block>
[23:07:59.475]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:07:59.475]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:07:59.477]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:07:59.477]            </block>
[23:07:59.477]          </sequence>
[23:07:59.477]      </block>
[23:07:59.477]      // end if-block "traceSWO"
[23:07:59.477]    </control>
[23:07:59.477]    <control if="traceTPIU" while="" timeout="0" info="">
[23:07:59.477]      // if-block "traceTPIU"
[23:07:59.477]        // =>  FALSE
[23:07:59.478]      // skip if-block "traceTPIU"
[23:07:59.478]    </control>
[23:07:59.478]  </sequence>
[23:07:59.478]  
[23:09:39.550]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:09:39.550]  
[23:09:39.550]  <debugvars>
[23:09:39.550]    // Pre-defined
[23:09:39.551]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:09:39.551]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:09:39.551]    __dp=0x00000000
[23:09:39.551]    __ap=0x00000000
[23:09:39.551]    __traceout=0x00000001      (SWO Trace)
[23:09:39.551]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:09:39.552]    __FlashAddr=0x00000000
[23:09:39.552]    __FlashLen=0x00000000
[23:09:39.552]    __FlashArg=0x00000000
[23:09:39.552]    __FlashOp=0x00000000
[23:09:39.552]    __Result=0x00000000
[23:09:39.553]    
[23:09:39.553]    // User-defined
[23:09:39.553]    DbgMCU_CR=0x00000007
[23:09:39.553]    DbgMCU_APB1_Fz=0x00000000
[23:09:39.553]    DbgMCU_APB2_Fz=0x00000000
[23:09:39.553]    TraceClk_Pin=0x00040002
[23:09:39.554]    TraceD0_Pin=0x00040003
[23:09:39.554]    TraceD1_Pin=0x00040004
[23:09:39.554]    TraceD2_Pin=0x00040005
[23:09:39.554]    TraceD3_Pin=0x00040006
[23:09:39.554]  </debugvars>
[23:09:39.554]  
[23:09:39.555]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:09:39.555]    <block atomic="false" info="">
[23:09:39.555]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:09:39.555]        // -> [traceSWO <= 0x00000001]
[23:09:39.555]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:09:39.556]        // -> [traceTPIU <= 0x00000000]
[23:09:39.556]    </block>
[23:09:39.556]    <control if="traceSWO" while="" timeout="0" info="">
[23:09:39.556]      // if-block "traceSWO"
[23:09:39.556]        // =>  TRUE
[23:09:39.556]      <block atomic="false" info="">
[23:09:39.556]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:09:39.557]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:09:39.557]            <block atomic="false" info="">
[23:09:39.557]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:09:39.557]                // -> [dbgmcu_val <= 0x00000000]
[23:09:39.557]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:09:39.557]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:09:39.558]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:09:39.558]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.558]                // -> [dbgmcu_val <= 0x00000007]
[23:09:39.558]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:09:39.559]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:09:39.559]              Sequence("ConfigureTraceSWOPin");
[23:09:39.559]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:09:39.559]                  <block atomic="false" info="">
[23:09:39.559]                    __var pin     = 0;
[23:09:39.559]                      // -> [pin <= 0x00000000]
[23:09:39.559]                    __var port    = 0;
[23:09:39.559]                      // -> [port <= 0x00000000]
[23:09:39.560]                    __var portAdr = 0;
[23:09:39.560]                      // -> [portAdr <= 0x00000000]
[23:09:39.560]                    __var pos     = 0;
[23:09:39.560]                      // -> [pos <= 0x00000000]
[23:09:39.560]                    __var SWO_Pin = 0x00010003;          // PB3
[23:09:39.560]                      // -> [SWO_Pin <= 0x00010003]
[23:09:39.560]                  </block>
[23:09:39.560]                  <block atomic="false" info="configure SWO">
[23:09:39.561]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:09:39.561]                      // -> [pin <= 0x00000003]
[23:09:39.561]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:09:39.561]                      // -> [port <= 0x00000001]
[23:09:39.561]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:09:39.561]                      // -> [portAdr <= 0x40020400]
[23:09:39.562]                    pos = pin * 2;
[23:09:39.562]                      // -> [pos <= 0x00000006]
[23:09:39.562]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:09:39.562]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.563]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.563]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:09:39.563]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.564]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.564]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:09:39.564]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.565]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.565]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:09:39.565]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.566]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.566]                  </block>
[23:09:39.566]                  <control if="pin <  8" while="" timeout="0" info="">
[23:09:39.566]                    // if-block "pin <  8"
[23:09:39.566]                      // =>  TRUE
[23:09:39.566]                    <block atomic="false" info="">
[23:09:39.567]                      pos = ((pin    ) & 7) * 4;
[23:09:39.567]                        // -> [pos <= 0x0000000C]
[23:09:39.567]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:09:39.567]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.568]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.568]                    </block>
[23:09:39.568]                    // end if-block "pin <  8"
[23:09:39.568]                  </control>
[23:09:39.568]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:09:39.568]                    // if-block "pin >= 8"
[23:09:39.568]                      // =>  FALSE
[23:09:39.569]                    // skip if-block "pin >= 8"
[23:09:39.569]                  </control>
[23:09:39.569]                </sequence>
[23:09:39.569]            </block>
[23:09:39.569]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:09:39.569]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:09:39.570]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:09:39.570]            </block>
[23:09:39.570]          </sequence>
[23:09:39.570]      </block>
[23:09:39.570]      // end if-block "traceSWO"
[23:09:39.570]    </control>
[23:09:39.570]    <control if="traceTPIU" while="" timeout="0" info="">
[23:09:39.571]      // if-block "traceTPIU"
[23:09:39.571]        // =>  FALSE
[23:09:39.571]      // skip if-block "traceTPIU"
[23:09:39.571]    </control>
[23:09:39.571]  </sequence>
[23:09:39.571]  
[23:11:18.011]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:11:18.011]  
[23:11:18.011]  <debugvars>
[23:11:18.012]    // Pre-defined
[23:11:18.013]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:11:18.013]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:11:18.014]    __dp=0x00000000
[23:11:18.014]    __ap=0x00000000
[23:11:18.015]    __traceout=0x00000001      (SWO Trace)
[23:11:18.015]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:11:18.016]    __FlashAddr=0x00000000
[23:11:18.016]    __FlashLen=0x00000000
[23:11:18.017]    __FlashArg=0x00000000
[23:11:18.018]    __FlashOp=0x00000000
[23:11:18.018]    __Result=0x00000000
[23:11:18.019]    
[23:11:18.019]    // User-defined
[23:11:18.019]    DbgMCU_CR=0x00000007
[23:11:18.020]    DbgMCU_APB1_Fz=0x00000000
[23:11:18.020]    DbgMCU_APB2_Fz=0x00000000
[23:11:18.020]    TraceClk_Pin=0x00040002
[23:11:18.021]    TraceD0_Pin=0x00040003
[23:11:18.021]    TraceD1_Pin=0x00040004
[23:11:18.022]    TraceD2_Pin=0x00040005
[23:11:18.022]    TraceD3_Pin=0x00040006
[23:11:18.022]  </debugvars>
[23:11:18.022]  
[23:11:18.023]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:11:18.023]    <block atomic="false" info="">
[23:11:18.023]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:11:18.023]        // -> [traceSWO <= 0x00000001]
[23:11:18.023]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:11:18.023]        // -> [traceTPIU <= 0x00000000]
[23:11:18.024]    </block>
[23:11:18.024]    <control if="traceSWO" while="" timeout="0" info="">
[23:11:18.024]      // if-block "traceSWO"
[23:11:18.024]        // =>  TRUE
[23:11:18.024]      <block atomic="false" info="">
[23:11:18.024]        Sequence("DisableTraceSWO");
[23:11:18.025]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:11:18.025]            <block atomic="false" info="">
[23:11:18.025]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:11:18.025]                // -> [dbgmcu_val <= 0x00000000]
[23:11:18.025]            </block>
[23:11:18.026]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:11:18.026]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:11:18.026]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:11:18.027]                // -> [dbgmcu_val <= 0x00000007]
[23:11:18.027]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:11:18.027]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:11:18.027]            </block>
[23:11:18.028]          </sequence>
[23:11:18.028]      </block>
[23:11:18.028]      // end if-block "traceSWO"
[23:11:18.028]    </control>
[23:11:18.028]    <control if="traceTPIU" while="" timeout="0" info="">
[23:11:18.028]      // if-block "traceTPIU"
[23:11:18.029]        // =>  FALSE
[23:11:18.029]      // skip if-block "traceTPIU"
[23:11:18.029]    </control>
[23:11:18.029]  </sequence>
[23:11:18.029]  
[23:17:50.670]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:17:50.670]  
[23:17:50.670]  <debugvars>
[23:17:50.670]    // Pre-defined
[23:17:50.670]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:17:50.670]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:17:50.671]    __dp=0x00000000
[23:17:50.671]    __ap=0x00000000
[23:17:50.671]    __traceout=0x00000001      (SWO Trace)
[23:17:50.671]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:17:50.671]    __FlashAddr=0x00000000
[23:17:50.672]    __FlashLen=0x00000000
[23:17:50.672]    __FlashArg=0x00000000
[23:17:50.672]    __FlashOp=0x00000000
[23:17:50.672]    __Result=0x00000000
[23:17:50.673]    
[23:17:50.673]    // User-defined
[23:17:50.673]    DbgMCU_CR=0x00000007
[23:17:50.673]    DbgMCU_APB1_Fz=0x00000000
[23:17:50.673]    DbgMCU_APB2_Fz=0x00000000
[23:17:50.673]    TraceClk_Pin=0x00040002
[23:17:50.673]    TraceD0_Pin=0x00040003
[23:17:50.674]    TraceD1_Pin=0x00040004
[23:17:50.674]    TraceD2_Pin=0x00040005
[23:17:50.674]    TraceD3_Pin=0x00040006
[23:17:50.674]  </debugvars>
[23:17:50.674]  
[23:17:50.675]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:17:50.675]    <block atomic="false" info="">
[23:17:50.675]      Sequence("CheckID");
[23:17:50.675]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:17:50.675]          <block atomic="false" info="">
[23:17:50.676]            __var pidr1 = 0;
[23:17:50.676]              // -> [pidr1 <= 0x00000000]
[23:17:50.676]            __var pidr2 = 0;
[23:17:50.676]              // -> [pidr2 <= 0x00000000]
[23:17:50.676]            __var jep106id = 0;
[23:17:50.676]              // -> [jep106id <= 0x00000000]
[23:17:50.677]            __var ROMTableBase = 0;
[23:17:50.677]              // -> [ROMTableBase <= 0x00000000]
[23:17:50.677]            __ap = 0;      // AHB-AP
[23:17:50.677]              // -> [__ap <= 0x00000000]
[23:17:50.677]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:17:50.678]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.678]              // -> [ROMTableBase <= 0xE00FD000]
[23:17:50.678]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:17:50.678]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.678]              // -> [pidr1 <= 0x00000004]
[23:17:50.679]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:17:50.679]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.679]              // -> [pidr2 <= 0x0000001A]
[23:17:50.680]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:17:50.680]              // -> [jep106id <= 0x00000020]
[23:17:50.680]          </block>
[23:17:50.680]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:17:50.680]            // if-block "jep106id != 0x20"
[23:17:50.680]              // =>  FALSE
[23:17:50.681]            // skip if-block "jep106id != 0x20"
[23:17:50.681]          </control>
[23:17:50.681]        </sequence>
[23:17:50.681]    </block>
[23:17:50.681]  </sequence>
[23:17:50.681]  
[23:17:50.696]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:17:50.696]  
[23:17:50.696]  <debugvars>
[23:17:50.697]    // Pre-defined
[23:17:50.697]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:17:50.697]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:17:50.697]    __dp=0x00000000
[23:17:50.697]    __ap=0x00000000
[23:17:50.698]    __traceout=0x00000001      (SWO Trace)
[23:17:50.698]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:17:50.699]    __FlashAddr=0x00000000
[23:17:50.699]    __FlashLen=0x00000000
[23:17:50.699]    __FlashArg=0x00000000
[23:17:50.699]    __FlashOp=0x00000000
[23:17:50.699]    __Result=0x00000000
[23:17:50.700]    
[23:17:50.700]    // User-defined
[23:17:50.700]    DbgMCU_CR=0x00000007
[23:17:50.700]    DbgMCU_APB1_Fz=0x00000000
[23:17:50.700]    DbgMCU_APB2_Fz=0x00000000
[23:17:50.700]    TraceClk_Pin=0x00040002
[23:17:50.700]    TraceD0_Pin=0x00040003
[23:17:50.701]    TraceD1_Pin=0x00040004
[23:17:50.701]    TraceD2_Pin=0x00040005
[23:17:50.701]    TraceD3_Pin=0x00040006
[23:17:50.701]  </debugvars>
[23:17:50.701]  
[23:17:50.702]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:17:50.702]    <block atomic="false" info="">
[23:17:50.702]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:17:50.703]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.703]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:17:50.703]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.703]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:17:50.704]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.704]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:17:50.705]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:17:50.705]    </block>
[23:17:50.705]  </sequence>
[23:17:50.705]  
[23:18:22.326]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:18:22.326]  
[23:18:22.327]  <debugvars>
[23:18:22.327]    // Pre-defined
[23:18:22.327]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:18:22.327]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:18:22.327]    __dp=0x00000000
[23:18:22.327]    __ap=0x00000000
[23:18:22.328]    __traceout=0x00000001      (SWO Trace)
[23:18:22.328]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:18:22.328]    __FlashAddr=0x00000000
[23:18:22.328]    __FlashLen=0x00000000
[23:18:22.328]    __FlashArg=0x00000000
[23:18:22.329]    __FlashOp=0x00000000
[23:18:22.329]    __Result=0x00000000
[23:18:22.329]    
[23:18:22.329]    // User-defined
[23:18:22.329]    DbgMCU_CR=0x00000007
[23:18:22.329]    DbgMCU_APB1_Fz=0x00000000
[23:18:22.329]    DbgMCU_APB2_Fz=0x00000000
[23:18:22.330]    TraceClk_Pin=0x00040002
[23:18:22.330]    TraceD0_Pin=0x00040003
[23:18:22.330]    TraceD1_Pin=0x00040004
[23:18:22.330]    TraceD2_Pin=0x00040005
[23:18:22.330]    TraceD3_Pin=0x00040006
[23:18:22.330]  </debugvars>
[23:18:22.331]  
[23:18:22.331]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:18:22.331]    <block atomic="false" info="">
[23:18:22.331]      Sequence("CheckID");
[23:18:22.331]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:18:22.331]          <block atomic="false" info="">
[23:18:22.332]            __var pidr1 = 0;
[23:18:22.332]              // -> [pidr1 <= 0x00000000]
[23:18:22.332]            __var pidr2 = 0;
[23:18:22.332]              // -> [pidr2 <= 0x00000000]
[23:18:22.332]            __var jep106id = 0;
[23:18:22.332]              // -> [jep106id <= 0x00000000]
[23:18:22.333]            __var ROMTableBase = 0;
[23:18:22.333]              // -> [ROMTableBase <= 0x00000000]
[23:18:22.333]            __ap = 0;      // AHB-AP
[23:18:22.333]              // -> [__ap <= 0x00000000]
[23:18:22.333]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:18:22.333]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.333]              // -> [ROMTableBase <= 0xE00FD000]
[23:18:22.334]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:18:22.334]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.334]              // -> [pidr1 <= 0x00000004]
[23:18:22.334]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:18:22.335]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.335]              // -> [pidr2 <= 0x0000001A]
[23:18:22.335]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:18:22.335]              // -> [jep106id <= 0x00000020]
[23:18:22.335]          </block>
[23:18:22.335]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:18:22.335]            // if-block "jep106id != 0x20"
[23:18:22.336]              // =>  FALSE
[23:18:22.336]            // skip if-block "jep106id != 0x20"
[23:18:22.336]          </control>
[23:18:22.336]        </sequence>
[23:18:22.336]    </block>
[23:18:22.336]  </sequence>
[23:18:22.336]  
[23:18:22.351]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:18:22.351]  
[23:18:22.351]  <debugvars>
[23:18:22.351]    // Pre-defined
[23:18:22.351]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:18:22.352]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:18:22.352]    __dp=0x00000000
[23:18:22.352]    __ap=0x00000000
[23:18:22.352]    __traceout=0x00000001      (SWO Trace)
[23:18:22.352]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:18:22.353]    __FlashAddr=0x00000000
[23:18:22.353]    __FlashLen=0x00000000
[23:18:22.353]    __FlashArg=0x00000000
[23:18:22.353]    __FlashOp=0x00000000
[23:18:22.353]    __Result=0x00000000
[23:18:22.353]    
[23:18:22.353]    // User-defined
[23:18:22.354]    DbgMCU_CR=0x00000007
[23:18:22.354]    DbgMCU_APB1_Fz=0x00000000
[23:18:22.354]    DbgMCU_APB2_Fz=0x00000000
[23:18:22.354]    TraceClk_Pin=0x00040002
[23:18:22.354]    TraceD0_Pin=0x00040003
[23:18:22.354]    TraceD1_Pin=0x00040004
[23:18:22.355]    TraceD2_Pin=0x00040005
[23:18:22.355]    TraceD3_Pin=0x00040006
[23:18:22.355]  </debugvars>
[23:18:22.355]  
[23:18:22.355]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:18:22.355]    <block atomic="false" info="">
[23:18:22.355]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:18:22.356]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.356]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:18:22.356]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.357]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:18:22.357]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.357]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:18:22.358]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.358]    </block>
[23:18:22.358]  </sequence>
[23:18:22.358]  
[23:18:22.376]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:18:22.376]  
[23:18:22.376]  <debugvars>
[23:18:22.376]    // Pre-defined
[23:18:22.376]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:18:22.377]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:18:22.377]    __dp=0x00000000
[23:18:22.377]    __ap=0x00000000
[23:18:22.377]    __traceout=0x00000001      (SWO Trace)
[23:18:22.377]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:18:22.377]    __FlashAddr=0x00000000
[23:18:22.378]    __FlashLen=0x00000000
[23:18:22.378]    __FlashArg=0x00000000
[23:18:22.378]    __FlashOp=0x00000000
[23:18:22.378]    __Result=0x00000000
[23:18:22.378]    
[23:18:22.378]    // User-defined
[23:18:22.378]    DbgMCU_CR=0x00000007
[23:18:22.378]    DbgMCU_APB1_Fz=0x00000000
[23:18:22.379]    DbgMCU_APB2_Fz=0x00000000
[23:18:22.379]    TraceClk_Pin=0x00040002
[23:18:22.379]    TraceD0_Pin=0x00040003
[23:18:22.379]    TraceD1_Pin=0x00040004
[23:18:22.379]    TraceD2_Pin=0x00040005
[23:18:22.380]    TraceD3_Pin=0x00040006
[23:18:22.380]  </debugvars>
[23:18:22.380]  
[23:18:22.380]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:18:22.380]    <block atomic="false" info="">
[23:18:22.380]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:18:22.380]        // -> [traceSWO <= 0x00000001]
[23:18:22.381]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:18:22.381]        // -> [traceTPIU <= 0x00000000]
[23:18:22.381]    </block>
[23:18:22.381]    <control if="traceSWO" while="" timeout="0" info="">
[23:18:22.381]      // if-block "traceSWO"
[23:18:22.381]        // =>  TRUE
[23:18:22.381]      <block atomic="false" info="">
[23:18:22.381]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:18:22.382]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:18:22.382]            <block atomic="false" info="">
[23:18:22.382]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:18:22.382]                // -> [dbgmcu_val <= 0x00000000]
[23:18:22.382]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:18:22.382]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:18:22.382]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:18:22.383]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.383]                // -> [dbgmcu_val <= 0x00000007]
[23:18:22.383]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:18:22.383]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:18:22.383]              Sequence("ConfigureTraceSWOPin");
[23:18:22.383]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:18:22.383]                  <block atomic="false" info="">
[23:18:22.384]                    __var pin     = 0;
[23:18:22.384]                      // -> [pin <= 0x00000000]
[23:18:22.384]                    __var port    = 0;
[23:18:22.384]                      // -> [port <= 0x00000000]
[23:18:22.384]                    __var portAdr = 0;
[23:18:22.384]                      // -> [portAdr <= 0x00000000]
[23:18:22.384]                    __var pos     = 0;
[23:18:22.384]                      // -> [pos <= 0x00000000]
[23:18:22.385]                    __var SWO_Pin = 0x00010003;          // PB3
[23:18:22.385]                      // -> [SWO_Pin <= 0x00010003]
[23:18:22.385]                  </block>
[23:18:22.385]                  <block atomic="false" info="configure SWO">
[23:18:22.385]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:18:22.385]                      // -> [pin <= 0x00000003]
[23:18:22.385]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:18:22.385]                      // -> [port <= 0x00000001]
[23:18:22.385]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:18:22.386]                      // -> [portAdr <= 0x40020400]
[23:18:22.386]                    pos = pin * 2;
[23:18:22.386]                      // -> [pos <= 0x00000006]
[23:18:22.386]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:18:22.386]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.387]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.387]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:18:22.387]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.388]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.388]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:18:22.388]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.389]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.389]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:18:22.390]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.390]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.390]                  </block>
[23:18:22.390]                  <control if="pin <  8" while="" timeout="0" info="">
[23:18:22.390]                    // if-block "pin <  8"
[23:18:22.391]                      // =>  TRUE
[23:18:22.391]                    <block atomic="false" info="">
[23:18:22.391]                      pos = ((pin    ) & 7) * 4;
[23:18:22.391]                        // -> [pos <= 0x0000000C]
[23:18:22.391]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:18:22.391]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.392]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.392]                    </block>
[23:18:22.392]                    // end if-block "pin <  8"
[23:18:22.392]                  </control>
[23:18:22.392]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:18:22.393]                    // if-block "pin >= 8"
[23:18:22.393]                      // =>  FALSE
[23:18:22.393]                    // skip if-block "pin >= 8"
[23:18:22.393]                  </control>
[23:18:22.393]                </sequence>
[23:18:22.393]            </block>
[23:18:22.393]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:18:22.394]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:18:22.394]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.394]            </block>
[23:18:22.394]          </sequence>
[23:18:22.395]      </block>
[23:18:22.395]      // end if-block "traceSWO"
[23:18:22.395]    </control>
[23:18:22.395]    <control if="traceTPIU" while="" timeout="0" info="">
[23:18:22.395]      // if-block "traceTPIU"
[23:18:22.395]        // =>  FALSE
[23:18:22.395]      // skip if-block "traceTPIU"
[23:18:22.396]    </control>
[23:18:22.396]  </sequence>
[23:18:22.396]  
[23:18:22.400]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:18:22.400]  
[23:18:22.403]  <debugvars>
[23:18:22.403]    // Pre-defined
[23:18:22.403]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:18:22.403]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:18:22.403]    __dp=0x00000000
[23:18:22.403]    __ap=0x00000000
[23:18:22.403]    __traceout=0x00000001      (SWO Trace)
[23:18:22.404]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:18:22.404]    __FlashAddr=0x00000000
[23:18:22.404]    __FlashLen=0x00000000
[23:18:22.404]    __FlashArg=0x00000000
[23:18:22.404]    __FlashOp=0x00000000
[23:18:22.404]    __Result=0x00000000
[23:18:22.404]    
[23:18:22.404]    // User-defined
[23:18:22.404]    DbgMCU_CR=0x00000007
[23:18:22.405]    DbgMCU_APB1_Fz=0x00000000
[23:18:22.405]    DbgMCU_APB2_Fz=0x00000000
[23:18:22.405]    TraceClk_Pin=0x00040002
[23:18:22.405]    TraceD0_Pin=0x00040003
[23:18:22.405]    TraceD1_Pin=0x00040004
[23:18:22.405]    TraceD2_Pin=0x00040005
[23:18:22.405]    TraceD3_Pin=0x00040006
[23:18:22.405]  </debugvars>
[23:18:22.405]  
[23:18:22.406]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:18:22.406]    <block atomic="false" info="">
[23:18:22.406]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:18:22.406]        // -> [traceSWO <= 0x00000001]
[23:18:22.406]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:18:22.406]        // -> [traceTPIU <= 0x00000000]
[23:18:22.406]    </block>
[23:18:22.406]    <control if="traceSWO" while="" timeout="0" info="">
[23:18:22.406]      // if-block "traceSWO"
[23:18:22.407]        // =>  TRUE
[23:18:22.407]      <block atomic="false" info="">
[23:18:22.407]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:18:22.407]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:18:22.407]            <block atomic="false" info="">
[23:18:22.407]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:18:22.407]                // -> [dbgmcu_val <= 0x00000000]
[23:18:22.407]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:18:22.408]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:18:22.408]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:18:22.408]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.408]                // -> [dbgmcu_val <= 0x00000007]
[23:18:22.408]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:18:22.409]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:18:22.409]              Sequence("ConfigureTraceSWOPin");
[23:18:22.409]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:18:22.409]                  <block atomic="false" info="">
[23:18:22.409]                    __var pin     = 0;
[23:18:22.409]                      // -> [pin <= 0x00000000]
[23:18:22.409]                    __var port    = 0;
[23:18:22.410]                      // -> [port <= 0x00000000]
[23:18:22.410]                    __var portAdr = 0;
[23:18:22.410]                      // -> [portAdr <= 0x00000000]
[23:18:22.410]                    __var pos     = 0;
[23:18:22.410]                      // -> [pos <= 0x00000000]
[23:18:22.410]                    __var SWO_Pin = 0x00010003;          // PB3
[23:18:22.411]                      // -> [SWO_Pin <= 0x00010003]
[23:18:22.411]                  </block>
[23:18:22.411]                  <block atomic="false" info="configure SWO">
[23:18:22.411]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:18:22.411]                      // -> [pin <= 0x00000003]
[23:18:22.411]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:18:22.411]                      // -> [port <= 0x00000001]
[23:18:22.411]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:18:22.412]                      // -> [portAdr <= 0x40020400]
[23:18:22.412]                    pos = pin * 2;
[23:18:22.412]                      // -> [pos <= 0x00000006]
[23:18:22.412]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:18:22.412]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.413]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.413]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:18:22.413]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.414]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.414]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:18:22.415]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.417]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.417]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:18:22.418]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.418]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.418]                  </block>
[23:18:22.418]                  <control if="pin <  8" while="" timeout="0" info="">
[23:18:22.419]                    // if-block "pin <  8"
[23:18:22.419]                      // =>  TRUE
[23:18:22.419]                    <block atomic="false" info="">
[23:18:22.419]                      pos = ((pin    ) & 7) * 4;
[23:18:22.419]                        // -> [pos <= 0x0000000C]
[23:18:22.419]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:18:22.420]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.420]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.420]                    </block>
[23:18:22.420]                    // end if-block "pin <  8"
[23:18:22.421]                  </control>
[23:18:22.421]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:18:22.421]                    // if-block "pin >= 8"
[23:18:22.421]                      // =>  FALSE
[23:18:22.421]                    // skip if-block "pin >= 8"
[23:18:22.421]                  </control>
[23:18:22.421]                </sequence>
[23:18:22.422]            </block>
[23:18:22.422]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:18:22.422]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:18:22.422]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.422]            </block>
[23:18:22.422]          </sequence>
[23:18:22.423]      </block>
[23:18:22.423]      // end if-block "traceSWO"
[23:18:22.423]    </control>
[23:18:22.423]    <control if="traceTPIU" while="" timeout="0" info="">
[23:18:22.423]      // if-block "traceTPIU"
[23:18:22.423]        // =>  FALSE
[23:18:22.423]      // skip if-block "traceTPIU"
[23:18:22.423]    </control>
[23:18:22.423]  </sequence>
[23:18:22.424]  
[23:18:22.640]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:18:22.640]  
[23:18:22.641]  <debugvars>
[23:18:22.641]    // Pre-defined
[23:18:22.641]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:18:22.641]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:18:22.641]    __dp=0x00000000
[23:18:22.642]    __ap=0x00000000
[23:18:22.642]    __traceout=0x00000001      (SWO Trace)
[23:18:22.642]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:18:22.642]    __FlashAddr=0x00000000
[23:18:22.642]    __FlashLen=0x00000000
[23:18:22.642]    __FlashArg=0x00000000
[23:18:22.643]    __FlashOp=0x00000000
[23:18:22.643]    __Result=0x00000000
[23:18:22.643]    
[23:18:22.643]    // User-defined
[23:18:22.643]    DbgMCU_CR=0x00000007
[23:18:22.643]    DbgMCU_APB1_Fz=0x00000000
[23:18:22.643]    DbgMCU_APB2_Fz=0x00000000
[23:18:22.644]    TraceClk_Pin=0x00040002
[23:18:22.644]    TraceD0_Pin=0x00040003
[23:18:22.644]    TraceD1_Pin=0x00040004
[23:18:22.644]    TraceD2_Pin=0x00040005
[23:18:22.644]    TraceD3_Pin=0x00040006
[23:18:22.644]  </debugvars>
[23:18:22.645]  
[23:18:22.645]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:18:22.645]    <block atomic="false" info="">
[23:18:22.645]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:18:22.645]        // -> [traceSWO <= 0x00000001]
[23:18:22.645]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:18:22.646]        // -> [traceTPIU <= 0x00000000]
[23:18:22.646]    </block>
[23:18:22.646]    <control if="traceSWO" while="" timeout="0" info="">
[23:18:22.646]      // if-block "traceSWO"
[23:18:22.646]        // =>  TRUE
[23:18:22.646]      <block atomic="false" info="">
[23:18:22.646]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:18:22.647]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:18:22.647]            <block atomic="false" info="">
[23:18:22.647]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:18:22.647]                // -> [dbgmcu_val <= 0x00000000]
[23:18:22.647]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:18:22.647]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:18:22.648]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:18:22.648]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.648]                // -> [dbgmcu_val <= 0x00000007]
[23:18:22.648]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:18:22.649]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:18:22.649]              Sequence("ConfigureTraceSWOPin");
[23:18:22.649]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:18:22.649]                  <block atomic="false" info="">
[23:18:22.649]                    __var pin     = 0;
[23:18:22.649]                      // -> [pin <= 0x00000000]
[23:18:22.649]                    __var port    = 0;
[23:18:22.650]                      // -> [port <= 0x00000000]
[23:18:22.650]                    __var portAdr = 0;
[23:18:22.650]                      // -> [portAdr <= 0x00000000]
[23:18:22.650]                    __var pos     = 0;
[23:18:22.650]                      // -> [pos <= 0x00000000]
[23:18:22.651]                    __var SWO_Pin = 0x00010003;          // PB3
[23:18:22.651]                      // -> [SWO_Pin <= 0x00010003]
[23:18:22.651]                  </block>
[23:18:22.651]                  <block atomic="false" info="configure SWO">
[23:18:22.651]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:18:22.651]                      // -> [pin <= 0x00000003]
[23:18:22.651]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:18:22.652]                      // -> [port <= 0x00000001]
[23:18:22.652]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:18:22.652]                      // -> [portAdr <= 0x40020400]
[23:18:22.652]                    pos = pin * 2;
[23:18:22.652]                      // -> [pos <= 0x00000006]
[23:18:22.652]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:18:22.653]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.653]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.653]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:18:22.654]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.654]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.654]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:18:22.655]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.655]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.655]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:18:22.656]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.656]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.656]                  </block>
[23:18:22.656]                  <control if="pin <  8" while="" timeout="0" info="">
[23:18:22.656]                    // if-block "pin <  8"
[23:18:22.656]                      // =>  TRUE
[23:18:22.657]                    <block atomic="false" info="">
[23:18:22.657]                      pos = ((pin    ) & 7) * 4;
[23:18:22.657]                        // -> [pos <= 0x0000000C]
[23:18:22.657]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:18:22.657]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.658]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.658]                    </block>
[23:18:22.658]                    // end if-block "pin <  8"
[23:18:22.658]                  </control>
[23:18:22.658]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:18:22.658]                    // if-block "pin >= 8"
[23:18:22.659]                      // =>  FALSE
[23:18:22.659]                    // skip if-block "pin >= 8"
[23:18:22.659]                  </control>
[23:18:22.659]                </sequence>
[23:18:22.659]            </block>
[23:18:22.659]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:18:22.659]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:18:22.660]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:18:22.660]            </block>
[23:18:22.660]          </sequence>
[23:18:22.660]      </block>
[23:18:22.660]      // end if-block "traceSWO"
[23:18:22.660]    </control>
[23:18:22.661]    <control if="traceTPIU" while="" timeout="0" info="">
[23:18:22.661]      // if-block "traceTPIU"
[23:18:22.661]        // =>  FALSE
[23:18:22.661]      // skip if-block "traceTPIU"
[23:18:22.661]    </control>
[23:18:22.661]  </sequence>
[23:18:22.661]  
[23:27:59.263]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:27:59.263]  
[23:27:59.263]  <debugvars>
[23:27:59.264]    // Pre-defined
[23:27:59.264]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:27:59.264]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:27:59.264]    __dp=0x00000000
[23:27:59.264]    __ap=0x00000000
[23:27:59.264]    __traceout=0x00000001      (SWO Trace)
[23:27:59.265]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:27:59.265]    __FlashAddr=0x00000000
[23:27:59.265]    __FlashLen=0x00000000
[23:27:59.265]    __FlashArg=0x00000000
[23:27:59.265]    __FlashOp=0x00000000
[23:27:59.265]    __Result=0x00000000
[23:27:59.266]    
[23:27:59.266]    // User-defined
[23:27:59.266]    DbgMCU_CR=0x00000007
[23:27:59.266]    DbgMCU_APB1_Fz=0x00000000
[23:27:59.266]    DbgMCU_APB2_Fz=0x00000000
[23:27:59.266]    TraceClk_Pin=0x00040002
[23:27:59.266]    TraceD0_Pin=0x00040003
[23:27:59.266]    TraceD1_Pin=0x00040004
[23:27:59.267]    TraceD2_Pin=0x00040005
[23:27:59.267]    TraceD3_Pin=0x00040006
[23:27:59.267]  </debugvars>
[23:27:59.267]  
[23:27:59.267]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:27:59.267]    <block atomic="false" info="">
[23:27:59.267]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:27:59.267]        // -> [traceSWO <= 0x00000001]
[23:27:59.268]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:27:59.268]        // -> [traceTPIU <= 0x00000000]
[23:27:59.268]    </block>
[23:27:59.268]    <control if="traceSWO" while="" timeout="0" info="">
[23:27:59.268]      // if-block "traceSWO"
[23:27:59.268]        // =>  TRUE
[23:27:59.268]      <block atomic="false" info="">
[23:27:59.268]        Sequence("DisableTraceSWO");
[23:27:59.268]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:27:59.269]            <block atomic="false" info="">
[23:27:59.269]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:27:59.269]                // -> [dbgmcu_val <= 0x00000000]
[23:27:59.269]            </block>
[23:27:59.269]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:27:59.269]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:27:59.270]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:27:59.270]                // -> [dbgmcu_val <= 0x00000007]
[23:27:59.270]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:27:59.270]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:27:59.270]            </block>
[23:27:59.271]          </sequence>
[23:27:59.271]      </block>
[23:27:59.271]      // end if-block "traceSWO"
[23:27:59.271]    </control>
[23:27:59.271]    <control if="traceTPIU" while="" timeout="0" info="">
[23:27:59.271]      // if-block "traceTPIU"
[23:27:59.271]        // =>  FALSE
[23:27:59.272]      // skip if-block "traceTPIU"
[23:27:59.272]    </control>
[23:27:59.272]  </sequence>
[23:27:59.272]  
[23:28:07.862]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:28:07.862]  
[23:28:07.862]  <debugvars>
[23:28:07.863]    // Pre-defined
[23:28:07.863]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:07.863]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:28:07.863]    __dp=0x00000000
[23:28:07.864]    __ap=0x00000000
[23:28:07.864]    __traceout=0x00000001      (SWO Trace)
[23:28:07.864]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:07.864]    __FlashAddr=0x00000000
[23:28:07.864]    __FlashLen=0x00000000
[23:28:07.864]    __FlashArg=0x00000000
[23:28:07.865]    __FlashOp=0x00000000
[23:28:07.865]    __Result=0x00000000
[23:28:07.865]    
[23:28:07.865]    // User-defined
[23:28:07.865]    DbgMCU_CR=0x00000007
[23:28:07.865]    DbgMCU_APB1_Fz=0x00000000
[23:28:07.865]    DbgMCU_APB2_Fz=0x00000000
[23:28:07.866]    TraceClk_Pin=0x00040002
[23:28:07.866]    TraceD0_Pin=0x00040003
[23:28:07.866]    TraceD1_Pin=0x00040004
[23:28:07.866]    TraceD2_Pin=0x00040005
[23:28:07.866]    TraceD3_Pin=0x00040006
[23:28:07.866]  </debugvars>
[23:28:07.867]  
[23:28:07.867]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:28:07.867]    <block atomic="false" info="">
[23:28:07.867]      Sequence("CheckID");
[23:28:07.867]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:28:07.867]          <block atomic="false" info="">
[23:28:07.868]            __var pidr1 = 0;
[23:28:07.868]              // -> [pidr1 <= 0x00000000]
[23:28:07.868]            __var pidr2 = 0;
[23:28:07.868]              // -> [pidr2 <= 0x00000000]
[23:28:07.868]            __var jep106id = 0;
[23:28:07.868]              // -> [jep106id <= 0x00000000]
[23:28:07.868]            __var ROMTableBase = 0;
[23:28:07.869]              // -> [ROMTableBase <= 0x00000000]
[23:28:07.869]            __ap = 0;      // AHB-AP
[23:28:07.869]              // -> [__ap <= 0x00000000]
[23:28:07.869]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:28:07.869]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.870]              // -> [ROMTableBase <= 0xE00FD000]
[23:28:07.870]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:28:07.870]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.870]              // -> [pidr1 <= 0x00000004]
[23:28:07.870]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:28:07.871]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.871]              // -> [pidr2 <= 0x0000001A]
[23:28:07.871]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:28:07.871]              // -> [jep106id <= 0x00000020]
[23:28:07.871]          </block>
[23:28:07.872]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:28:07.872]            // if-block "jep106id != 0x20"
[23:28:07.872]              // =>  FALSE
[23:28:07.872]            // skip if-block "jep106id != 0x20"
[23:28:07.872]          </control>
[23:28:07.872]        </sequence>
[23:28:07.872]    </block>
[23:28:07.872]  </sequence>
[23:28:07.873]  
[23:28:07.887]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:28:07.887]  
[23:28:07.888]  <debugvars>
[23:28:07.888]    // Pre-defined
[23:28:07.888]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:07.888]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:28:07.888]    __dp=0x00000000
[23:28:07.888]    __ap=0x00000000
[23:28:07.889]    __traceout=0x00000001      (SWO Trace)
[23:28:07.889]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:07.889]    __FlashAddr=0x00000000
[23:28:07.889]    __FlashLen=0x00000000
[23:28:07.889]    __FlashArg=0x00000000
[23:28:07.890]    __FlashOp=0x00000000
[23:28:07.890]    __Result=0x00000000
[23:28:07.890]    
[23:28:07.890]    // User-defined
[23:28:07.890]    DbgMCU_CR=0x00000007
[23:28:07.890]    DbgMCU_APB1_Fz=0x00000000
[23:28:07.891]    DbgMCU_APB2_Fz=0x00000000
[23:28:07.891]    TraceClk_Pin=0x00040002
[23:28:07.891]    TraceD0_Pin=0x00040003
[23:28:07.891]    TraceD1_Pin=0x00040004
[23:28:07.891]    TraceD2_Pin=0x00040005
[23:28:07.891]    TraceD3_Pin=0x00040006
[23:28:07.892]  </debugvars>
[23:28:07.892]  
[23:28:07.892]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:28:07.892]    <block atomic="false" info="">
[23:28:07.892]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:28:07.893]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.893]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:28:07.894]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.894]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:28:07.895]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.895]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:28:07.895]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:07.895]    </block>
[23:28:07.896]  </sequence>
[23:28:07.896]  
[23:28:39.308]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:28:39.308]  
[23:28:39.308]  <debugvars>
[23:28:39.308]    // Pre-defined
[23:28:39.308]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:39.308]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:39.308]    __dp=0x00000000
[23:28:39.308]    __ap=0x00000000
[23:28:39.309]    __traceout=0x00000001      (SWO Trace)
[23:28:39.309]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:39.309]    __FlashAddr=0x00000000
[23:28:39.309]    __FlashLen=0x00000000
[23:28:39.309]    __FlashArg=0x00000000
[23:28:39.309]    __FlashOp=0x00000000
[23:28:39.309]    __Result=0x00000000
[23:28:39.309]    
[23:28:39.309]    // User-defined
[23:28:39.310]    DbgMCU_CR=0x00000007
[23:28:39.310]    DbgMCU_APB1_Fz=0x00000000
[23:28:39.310]    DbgMCU_APB2_Fz=0x00000000
[23:28:39.310]    TraceClk_Pin=0x00040002
[23:28:39.310]    TraceD0_Pin=0x00040003
[23:28:39.310]    TraceD1_Pin=0x00040004
[23:28:39.310]    TraceD2_Pin=0x00040005
[23:28:39.310]    TraceD3_Pin=0x00040006
[23:28:39.311]  </debugvars>
[23:28:39.311]  
[23:28:39.311]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:28:39.311]    <block atomic="false" info="">
[23:28:39.311]      Sequence("CheckID");
[23:28:39.311]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:28:39.311]          <block atomic="false" info="">
[23:28:39.311]            __var pidr1 = 0;
[23:28:39.312]              // -> [pidr1 <= 0x00000000]
[23:28:39.312]            __var pidr2 = 0;
[23:28:39.312]              // -> [pidr2 <= 0x00000000]
[23:28:39.312]            __var jep106id = 0;
[23:28:39.312]              // -> [jep106id <= 0x00000000]
[23:28:39.312]            __var ROMTableBase = 0;
[23:28:39.312]              // -> [ROMTableBase <= 0x00000000]
[23:28:39.312]            __ap = 0;      // AHB-AP
[23:28:39.313]              // -> [__ap <= 0x00000000]
[23:28:39.313]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:28:39.313]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.313]              // -> [ROMTableBase <= 0xE00FD000]
[23:28:39.313]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:28:39.314]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.314]              // -> [pidr1 <= 0x00000004]
[23:28:39.314]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:28:39.315]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.315]              // -> [pidr2 <= 0x0000001A]
[23:28:39.315]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:28:39.315]              // -> [jep106id <= 0x00000020]
[23:28:39.315]          </block>
[23:28:39.315]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:28:39.315]            // if-block "jep106id != 0x20"
[23:28:39.315]              // =>  FALSE
[23:28:39.316]            // skip if-block "jep106id != 0x20"
[23:28:39.316]          </control>
[23:28:39.316]        </sequence>
[23:28:39.316]    </block>
[23:28:39.316]  </sequence>
[23:28:39.316]  
[23:28:39.330]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:28:39.330]  
[23:28:39.330]  <debugvars>
[23:28:39.330]    // Pre-defined
[23:28:39.330]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:39.331]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:39.331]    __dp=0x00000000
[23:28:39.331]    __ap=0x00000000
[23:28:39.331]    __traceout=0x00000001      (SWO Trace)
[23:28:39.331]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:39.331]    __FlashAddr=0x00000000
[23:28:39.331]    __FlashLen=0x00000000
[23:28:39.331]    __FlashArg=0x00000000
[23:28:39.331]    __FlashOp=0x00000000
[23:28:39.332]    __Result=0x00000000
[23:28:39.332]    
[23:28:39.332]    // User-defined
[23:28:39.332]    DbgMCU_CR=0x00000007
[23:28:39.332]    DbgMCU_APB1_Fz=0x00000000
[23:28:39.332]    DbgMCU_APB2_Fz=0x00000000
[23:28:39.332]    TraceClk_Pin=0x00040002
[23:28:39.332]    TraceD0_Pin=0x00040003
[23:28:39.332]    TraceD1_Pin=0x00040004
[23:28:39.332]    TraceD2_Pin=0x00040005
[23:28:39.333]    TraceD3_Pin=0x00040006
[23:28:39.333]  </debugvars>
[23:28:39.333]  
[23:28:39.333]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:28:39.333]    <block atomic="false" info="">
[23:28:39.333]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:28:39.334]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.334]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:28:39.334]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.334]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:28:39.335]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.335]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:28:39.335]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.335]    </block>
[23:28:39.335]  </sequence>
[23:28:39.336]  
[23:28:39.352]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:28:39.352]  
[23:28:39.352]  <debugvars>
[23:28:39.353]    // Pre-defined
[23:28:39.353]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:39.353]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:39.353]    __dp=0x00000000
[23:28:39.353]    __ap=0x00000000
[23:28:39.353]    __traceout=0x00000001      (SWO Trace)
[23:28:39.353]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:39.353]    __FlashAddr=0x00000000
[23:28:39.353]    __FlashLen=0x00000000
[23:28:39.354]    __FlashArg=0x00000000
[23:28:39.354]    __FlashOp=0x00000000
[23:28:39.354]    __Result=0x00000000
[23:28:39.354]    
[23:28:39.354]    // User-defined
[23:28:39.354]    DbgMCU_CR=0x00000007
[23:28:39.354]    DbgMCU_APB1_Fz=0x00000000
[23:28:39.354]    DbgMCU_APB2_Fz=0x00000000
[23:28:39.354]    TraceClk_Pin=0x00040002
[23:28:39.355]    TraceD0_Pin=0x00040003
[23:28:39.355]    TraceD1_Pin=0x00040004
[23:28:39.355]    TraceD2_Pin=0x00040005
[23:28:39.355]    TraceD3_Pin=0x00040006
[23:28:39.355]  </debugvars>
[23:28:39.355]  
[23:28:39.355]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:28:39.355]    <block atomic="false" info="">
[23:28:39.355]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:28:39.355]        // -> [traceSWO <= 0x00000001]
[23:28:39.356]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:28:39.356]        // -> [traceTPIU <= 0x00000000]
[23:28:39.356]    </block>
[23:28:39.356]    <control if="traceSWO" while="" timeout="0" info="">
[23:28:39.356]      // if-block "traceSWO"
[23:28:39.356]        // =>  TRUE
[23:28:39.356]      <block atomic="false" info="">
[23:28:39.356]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:28:39.357]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:28:39.357]            <block atomic="false" info="">
[23:28:39.357]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:28:39.357]                // -> [dbgmcu_val <= 0x00000000]
[23:28:39.357]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:28:39.357]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:28:39.357]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:28:39.358]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.358]                // -> [dbgmcu_val <= 0x00000007]
[23:28:39.358]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:28:39.358]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:28:39.358]              Sequence("ConfigureTraceSWOPin");
[23:28:39.358]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:28:39.358]                  <block atomic="false" info="">
[23:28:39.358]                    __var pin     = 0;
[23:28:39.359]                      // -> [pin <= 0x00000000]
[23:28:39.359]                    __var port    = 0;
[23:28:39.359]                      // -> [port <= 0x00000000]
[23:28:39.359]                    __var portAdr = 0;
[23:28:39.359]                      // -> [portAdr <= 0x00000000]
[23:28:39.359]                    __var pos     = 0;
[23:28:39.359]                      // -> [pos <= 0x00000000]
[23:28:39.359]                    __var SWO_Pin = 0x00010003;          // PB3
[23:28:39.359]                      // -> [SWO_Pin <= 0x00010003]
[23:28:39.360]                  </block>
[23:28:39.360]                  <block atomic="false" info="configure SWO">
[23:28:39.360]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:28:39.360]                      // -> [pin <= 0x00000003]
[23:28:39.360]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:28:39.360]                      // -> [port <= 0x00000001]
[23:28:39.360]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:28:39.360]                      // -> [portAdr <= 0x40020400]
[23:28:39.360]                    pos = pin * 2;
[23:28:39.361]                      // -> [pos <= 0x00000006]
[23:28:39.361]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:28:39.361]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.362]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.362]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:28:39.362]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.363]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.363]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:28:39.363]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.364]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.364]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:28:39.364]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.365]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.365]                  </block>
[23:28:39.365]                  <control if="pin <  8" while="" timeout="0" info="">
[23:28:39.365]                    // if-block "pin <  8"
[23:28:39.365]                      // =>  TRUE
[23:28:39.365]                    <block atomic="false" info="">
[23:28:39.365]                      pos = ((pin    ) & 7) * 4;
[23:28:39.365]                        // -> [pos <= 0x0000000C]
[23:28:39.365]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:28:39.366]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.366]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.366]                    </block>
[23:28:39.366]                    // end if-block "pin <  8"
[23:28:39.367]                  </control>
[23:28:39.367]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:28:39.367]                    // if-block "pin >= 8"
[23:28:39.367]                      // =>  FALSE
[23:28:39.367]                    // skip if-block "pin >= 8"
[23:28:39.367]                  </control>
[23:28:39.367]                </sequence>
[23:28:39.368]            </block>
[23:28:39.368]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:28:39.368]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:28:39.368]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.368]            </block>
[23:28:39.369]          </sequence>
[23:28:39.369]      </block>
[23:28:39.369]      // end if-block "traceSWO"
[23:28:39.369]    </control>
[23:28:39.369]    <control if="traceTPIU" while="" timeout="0" info="">
[23:28:39.369]      // if-block "traceTPIU"
[23:28:39.369]        // =>  FALSE
[23:28:39.369]      // skip if-block "traceTPIU"
[23:28:39.369]    </control>
[23:28:39.370]  </sequence>
[23:28:39.370]  
[23:28:39.373]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:28:39.373]  
[23:28:39.373]  <debugvars>
[23:28:39.374]    // Pre-defined
[23:28:39.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:39.374]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:39.374]    __dp=0x00000000
[23:28:39.374]    __ap=0x00000000
[23:28:39.374]    __traceout=0x00000001      (SWO Trace)
[23:28:39.374]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:39.374]    __FlashAddr=0x00000000
[23:28:39.374]    __FlashLen=0x00000000
[23:28:39.375]    __FlashArg=0x00000000
[23:28:39.375]    __FlashOp=0x00000000
[23:28:39.375]    __Result=0x00000000
[23:28:39.375]    
[23:28:39.375]    // User-defined
[23:28:39.375]    DbgMCU_CR=0x00000007
[23:28:39.375]    DbgMCU_APB1_Fz=0x00000000
[23:28:39.375]    DbgMCU_APB2_Fz=0x00000000
[23:28:39.375]    TraceClk_Pin=0x00040002
[23:28:39.376]    TraceD0_Pin=0x00040003
[23:28:39.376]    TraceD1_Pin=0x00040004
[23:28:39.376]    TraceD2_Pin=0x00040005
[23:28:39.376]    TraceD3_Pin=0x00040006
[23:28:39.376]  </debugvars>
[23:28:39.376]  
[23:28:39.376]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:28:39.376]    <block atomic="false" info="">
[23:28:39.377]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:28:39.377]        // -> [traceSWO <= 0x00000001]
[23:28:39.377]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:28:39.377]        // -> [traceTPIU <= 0x00000000]
[23:28:39.377]    </block>
[23:28:39.377]    <control if="traceSWO" while="" timeout="0" info="">
[23:28:39.377]      // if-block "traceSWO"
[23:28:39.378]        // =>  TRUE
[23:28:39.378]      <block atomic="false" info="">
[23:28:39.378]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:28:39.378]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:28:39.378]            <block atomic="false" info="">
[23:28:39.378]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:28:39.378]                // -> [dbgmcu_val <= 0x00000000]
[23:28:39.378]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:28:39.378]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:28:39.379]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:28:39.379]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.379]                // -> [dbgmcu_val <= 0x00000007]
[23:28:39.379]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:28:39.379]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:28:39.380]              Sequence("ConfigureTraceSWOPin");
[23:28:39.380]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:28:39.380]                  <block atomic="false" info="">
[23:28:39.380]                    __var pin     = 0;
[23:28:39.380]                      // -> [pin <= 0x00000000]
[23:28:39.380]                    __var port    = 0;
[23:28:39.380]                      // -> [port <= 0x00000000]
[23:28:39.380]                    __var portAdr = 0;
[23:28:39.381]                      // -> [portAdr <= 0x00000000]
[23:28:39.381]                    __var pos     = 0;
[23:28:39.381]                      // -> [pos <= 0x00000000]
[23:28:39.381]                    __var SWO_Pin = 0x00010003;          // PB3
[23:28:39.381]                      // -> [SWO_Pin <= 0x00010003]
[23:28:39.381]                  </block>
[23:28:39.381]                  <block atomic="false" info="configure SWO">
[23:28:39.381]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:28:39.381]                      // -> [pin <= 0x00000003]
[23:28:39.382]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:28:39.382]                      // -> [port <= 0x00000001]
[23:28:39.382]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:28:39.382]                      // -> [portAdr <= 0x40020400]
[23:28:39.382]                    pos = pin * 2;
[23:28:39.382]                      // -> [pos <= 0x00000006]
[23:28:39.382]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:28:39.383]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.383]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.383]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:28:39.384]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.384]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.384]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:28:39.385]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.385]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.385]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:28:39.386]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.386]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.386]                  </block>
[23:28:39.387]                  <control if="pin <  8" while="" timeout="0" info="">
[23:28:39.387]                    // if-block "pin <  8"
[23:28:39.387]                      // =>  TRUE
[23:28:39.387]                    <block atomic="false" info="">
[23:28:39.387]                      pos = ((pin    ) & 7) * 4;
[23:28:39.387]                        // -> [pos <= 0x0000000C]
[23:28:39.387]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:28:39.388]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.388]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.388]                    </block>
[23:28:39.388]                    // end if-block "pin <  8"
[23:28:39.389]                  </control>
[23:28:39.389]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:28:39.389]                    // if-block "pin >= 8"
[23:28:39.389]                      // =>  FALSE
[23:28:39.389]                    // skip if-block "pin >= 8"
[23:28:39.389]                  </control>
[23:28:39.389]                </sequence>
[23:28:39.389]            </block>
[23:28:39.389]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:28:39.390]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:28:39.390]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.390]            </block>
[23:28:39.390]          </sequence>
[23:28:39.390]      </block>
[23:28:39.390]      // end if-block "traceSWO"
[23:28:39.391]    </control>
[23:28:39.391]    <control if="traceTPIU" while="" timeout="0" info="">
[23:28:39.391]      // if-block "traceTPIU"
[23:28:39.391]        // =>  FALSE
[23:28:39.391]      // skip if-block "traceTPIU"
[23:28:39.391]    </control>
[23:28:39.391]  </sequence>
[23:28:39.391]  
[23:28:39.619]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:28:39.619]  
[23:28:39.619]  <debugvars>
[23:28:39.619]    // Pre-defined
[23:28:39.620]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:28:39.620]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:28:39.620]    __dp=0x00000000
[23:28:39.620]    __ap=0x00000000
[23:28:39.620]    __traceout=0x00000001      (SWO Trace)
[23:28:39.620]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:28:39.620]    __FlashAddr=0x00000000
[23:28:39.621]    __FlashLen=0x00000000
[23:28:39.621]    __FlashArg=0x00000000
[23:28:39.621]    __FlashOp=0x00000000
[23:28:39.621]    __Result=0x00000000
[23:28:39.621]    
[23:28:39.621]    // User-defined
[23:28:39.621]    DbgMCU_CR=0x00000007
[23:28:39.621]    DbgMCU_APB1_Fz=0x00000000
[23:28:39.621]    DbgMCU_APB2_Fz=0x00000000
[23:28:39.621]    TraceClk_Pin=0x00040002
[23:28:39.621]    TraceD0_Pin=0x00040003
[23:28:39.622]    TraceD1_Pin=0x00040004
[23:28:39.622]    TraceD2_Pin=0x00040005
[23:28:39.622]    TraceD3_Pin=0x00040006
[23:28:39.622]  </debugvars>
[23:28:39.622]  
[23:28:39.622]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:28:39.622]    <block atomic="false" info="">
[23:28:39.623]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:28:39.623]        // -> [traceSWO <= 0x00000001]
[23:28:39.623]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:28:39.623]        // -> [traceTPIU <= 0x00000000]
[23:28:39.623]    </block>
[23:28:39.623]    <control if="traceSWO" while="" timeout="0" info="">
[23:28:39.624]      // if-block "traceSWO"
[23:28:39.624]        // =>  TRUE
[23:28:39.624]      <block atomic="false" info="">
[23:28:39.624]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:28:39.624]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:28:39.624]            <block atomic="false" info="">
[23:28:39.624]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:28:39.624]                // -> [dbgmcu_val <= 0x00000000]
[23:28:39.625]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:28:39.625]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:28:39.625]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:28:39.625]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.625]                // -> [dbgmcu_val <= 0x00000007]
[23:28:39.626]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:28:39.626]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:28:39.626]              Sequence("ConfigureTraceSWOPin");
[23:28:39.626]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:28:39.626]                  <block atomic="false" info="">
[23:28:39.626]                    __var pin     = 0;
[23:28:39.626]                      // -> [pin <= 0x00000000]
[23:28:39.626]                    __var port    = 0;
[23:28:39.626]                      // -> [port <= 0x00000000]
[23:28:39.626]                    __var portAdr = 0;
[23:28:39.627]                      // -> [portAdr <= 0x00000000]
[23:28:39.627]                    __var pos     = 0;
[23:28:39.627]                      // -> [pos <= 0x00000000]
[23:28:39.627]                    __var SWO_Pin = 0x00010003;          // PB3
[23:28:39.627]                      // -> [SWO_Pin <= 0x00010003]
[23:28:39.627]                  </block>
[23:28:39.627]                  <block atomic="false" info="configure SWO">
[23:28:39.627]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:28:39.627]                      // -> [pin <= 0x00000003]
[23:28:39.628]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:28:39.628]                      // -> [port <= 0x00000001]
[23:28:39.628]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:28:39.628]                      // -> [portAdr <= 0x40020400]
[23:28:39.628]                    pos = pin * 2;
[23:28:39.628]                      // -> [pos <= 0x00000006]
[23:28:39.628]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:28:39.629]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.629]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.629]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:28:39.630]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.630]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.630]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:28:39.631]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.631]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.631]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:28:39.632]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.632]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.632]                  </block>
[23:28:39.633]                  <control if="pin <  8" while="" timeout="0" info="">
[23:28:39.633]                    // if-block "pin <  8"
[23:28:39.633]                      // =>  TRUE
[23:28:39.633]                    <block atomic="false" info="">
[23:28:39.633]                      pos = ((pin    ) & 7) * 4;
[23:28:39.633]                        // -> [pos <= 0x0000000C]
[23:28:39.633]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:28:39.634]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.634]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.634]                    </block>
[23:28:39.634]                    // end if-block "pin <  8"
[23:28:39.634]                  </control>
[23:28:39.634]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:28:39.635]                    // if-block "pin >= 8"
[23:28:39.635]                      // =>  FALSE
[23:28:39.635]                    // skip if-block "pin >= 8"
[23:28:39.635]                  </control>
[23:28:39.635]                </sequence>
[23:28:39.635]            </block>
[23:28:39.635]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:28:39.635]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:28:39.636]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:28:39.636]            </block>
[23:28:39.636]          </sequence>
[23:28:39.636]      </block>
[23:28:39.636]      // end if-block "traceSWO"
[23:28:39.636]    </control>
[23:28:39.636]    <control if="traceTPIU" while="" timeout="0" info="">
[23:28:39.637]      // if-block "traceTPIU"
[23:28:39.637]        // =>  FALSE
[23:28:39.637]      // skip if-block "traceTPIU"
[23:28:39.637]    </control>
[23:28:39.637]  </sequence>
[23:28:39.637]  
[23:30:08.703]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:30:08.703]  
[23:30:08.704]  <debugvars>
[23:30:08.704]    // Pre-defined
[23:30:08.704]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:30:08.704]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:30:08.704]    __dp=0x00000000
[23:30:08.705]    __ap=0x00000000
[23:30:08.705]    __traceout=0x00000001      (SWO Trace)
[23:30:08.705]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:30:08.705]    __FlashAddr=0x00000000
[23:30:08.705]    __FlashLen=0x00000000
[23:30:08.705]    __FlashArg=0x00000000
[23:30:08.705]    __FlashOp=0x00000000
[23:30:08.705]    __Result=0x00000000
[23:30:08.705]    
[23:30:08.705]    // User-defined
[23:30:08.706]    DbgMCU_CR=0x00000007
[23:30:08.706]    DbgMCU_APB1_Fz=0x00000000
[23:30:08.706]    DbgMCU_APB2_Fz=0x00000000
[23:30:08.706]    TraceClk_Pin=0x00040002
[23:30:08.706]    TraceD0_Pin=0x00040003
[23:30:08.706]    TraceD1_Pin=0x00040004
[23:30:08.706]    TraceD2_Pin=0x00040005
[23:30:08.706]    TraceD3_Pin=0x00040006
[23:30:08.707]  </debugvars>
[23:30:08.707]  
[23:30:08.707]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:30:08.707]    <block atomic="false" info="">
[23:30:08.707]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:30:08.707]        // -> [traceSWO <= 0x00000001]
[23:30:08.707]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:30:08.707]        // -> [traceTPIU <= 0x00000000]
[23:30:08.707]    </block>
[23:30:08.708]    <control if="traceSWO" while="" timeout="0" info="">
[23:30:08.708]      // if-block "traceSWO"
[23:30:08.708]        // =>  TRUE
[23:30:08.708]      <block atomic="false" info="">
[23:30:08.708]        Sequence("DisableTraceSWO");
[23:30:08.708]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:30:08.708]            <block atomic="false" info="">
[23:30:08.708]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:30:08.708]                // -> [dbgmcu_val <= 0x00000000]
[23:30:08.709]            </block>
[23:30:08.709]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:30:08.709]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:30:08.709]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:30:08.709]                // -> [dbgmcu_val <= 0x00000007]
[23:30:08.709]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:30:08.710]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:30:08.710]            </block>
[23:30:08.710]          </sequence>
[23:30:08.710]      </block>
[23:30:08.710]      // end if-block "traceSWO"
[23:30:08.710]    </control>
[23:30:08.711]    <control if="traceTPIU" while="" timeout="0" info="">
[23:30:08.711]      // if-block "traceTPIU"
[23:30:08.711]        // =>  FALSE
[23:30:08.711]      // skip if-block "traceTPIU"
[23:30:08.711]    </control>
[23:30:08.711]  </sequence>
[23:30:08.711]  
[23:32:14.894]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:32:14.894]  
[23:32:14.894]  <debugvars>
[23:32:14.895]    // Pre-defined
[23:32:14.895]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:14.895]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:32:14.895]    __dp=0x00000000
[23:32:14.895]    __ap=0x00000000
[23:32:14.895]    __traceout=0x00000001      (SWO Trace)
[23:32:14.896]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:14.896]    __FlashAddr=0x00000000
[23:32:14.896]    __FlashLen=0x00000000
[23:32:14.896]    __FlashArg=0x00000000
[23:32:14.896]    __FlashOp=0x00000000
[23:32:14.896]    __Result=0x00000000
[23:32:14.896]    
[23:32:14.896]    // User-defined
[23:32:14.897]    DbgMCU_CR=0x00000007
[23:32:14.897]    DbgMCU_APB1_Fz=0x00000000
[23:32:14.897]    DbgMCU_APB2_Fz=0x00000000
[23:32:14.897]    TraceClk_Pin=0x00040002
[23:32:14.897]    TraceD0_Pin=0x00040003
[23:32:14.897]    TraceD1_Pin=0x00040004
[23:32:14.897]    TraceD2_Pin=0x00040005
[23:32:14.898]    TraceD3_Pin=0x00040006
[23:32:14.898]  </debugvars>
[23:32:14.898]  
[23:32:14.898]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:32:14.898]    <block atomic="false" info="">
[23:32:14.898]      Sequence("CheckID");
[23:32:14.898]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:32:14.899]          <block atomic="false" info="">
[23:32:14.899]            __var pidr1 = 0;
[23:32:14.899]              // -> [pidr1 <= 0x00000000]
[23:32:14.899]            __var pidr2 = 0;
[23:32:14.899]              // -> [pidr2 <= 0x00000000]
[23:32:14.899]            __var jep106id = 0;
[23:32:14.899]              // -> [jep106id <= 0x00000000]
[23:32:14.899]            __var ROMTableBase = 0;
[23:32:14.899]              // -> [ROMTableBase <= 0x00000000]
[23:32:14.900]            __ap = 0;      // AHB-AP
[23:32:14.900]              // -> [__ap <= 0x00000000]
[23:32:14.900]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:32:14.900]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.900]              // -> [ROMTableBase <= 0xE00FD000]
[23:32:14.900]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:32:14.901]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.901]              // -> [pidr1 <= 0x00000004]
[23:32:14.901]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:32:14.902]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.902]              // -> [pidr2 <= 0x0000001A]
[23:32:14.902]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:32:14.902]              // -> [jep106id <= 0x00000020]
[23:32:14.902]          </block>
[23:32:14.902]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:32:14.903]            // if-block "jep106id != 0x20"
[23:32:14.903]              // =>  FALSE
[23:32:14.903]            // skip if-block "jep106id != 0x20"
[23:32:14.903]          </control>
[23:32:14.903]        </sequence>
[23:32:14.903]    </block>
[23:32:14.903]  </sequence>
[23:32:14.903]  
[23:32:14.918]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:32:14.918]  
[23:32:14.918]  <debugvars>
[23:32:14.918]    // Pre-defined
[23:32:14.919]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:14.919]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:32:14.919]    __dp=0x00000000
[23:32:14.919]    __ap=0x00000000
[23:32:14.919]    __traceout=0x00000001      (SWO Trace)
[23:32:14.919]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:14.920]    __FlashAddr=0x00000000
[23:32:14.920]    __FlashLen=0x00000000
[23:32:14.920]    __FlashArg=0x00000000
[23:32:14.920]    __FlashOp=0x00000000
[23:32:14.920]    __Result=0x00000000
[23:32:14.920]    
[23:32:14.920]    // User-defined
[23:32:14.921]    DbgMCU_CR=0x00000007
[23:32:14.921]    DbgMCU_APB1_Fz=0x00000000
[23:32:14.921]    DbgMCU_APB2_Fz=0x00000000
[23:32:14.921]    TraceClk_Pin=0x00040002
[23:32:14.921]    TraceD0_Pin=0x00040003
[23:32:14.922]    TraceD1_Pin=0x00040004
[23:32:14.922]    TraceD2_Pin=0x00040005
[23:32:14.922]    TraceD3_Pin=0x00040006
[23:32:14.922]  </debugvars>
[23:32:14.922]  
[23:32:14.922]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:32:14.922]    <block atomic="false" info="">
[23:32:14.923]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:32:14.923]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.923]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:32:14.924]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.924]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:32:14.925]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.925]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:32:14.925]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:14.926]    </block>
[23:32:14.926]  </sequence>
[23:32:14.926]  
[23:32:45.902]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:32:45.902]  
[23:32:45.902]  <debugvars>
[23:32:45.902]    // Pre-defined
[23:32:45.903]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:45.903]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:45.903]    __dp=0x00000000
[23:32:45.903]    __ap=0x00000000
[23:32:45.903]    __traceout=0x00000001      (SWO Trace)
[23:32:45.903]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:45.903]    __FlashAddr=0x00000000
[23:32:45.904]    __FlashLen=0x00000000
[23:32:45.904]    __FlashArg=0x00000000
[23:32:45.904]    __FlashOp=0x00000000
[23:32:45.904]    __Result=0x00000000
[23:32:45.904]    
[23:32:45.904]    // User-defined
[23:32:45.905]    DbgMCU_CR=0x00000007
[23:32:45.905]    DbgMCU_APB1_Fz=0x00000000
[23:32:45.905]    DbgMCU_APB2_Fz=0x00000000
[23:32:45.905]    TraceClk_Pin=0x00040002
[23:32:45.905]    TraceD0_Pin=0x00040003
[23:32:45.906]    TraceD1_Pin=0x00040004
[23:32:45.906]    TraceD2_Pin=0x00040005
[23:32:45.906]    TraceD3_Pin=0x00040006
[23:32:45.906]  </debugvars>
[23:32:45.906]  
[23:32:45.907]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:32:45.907]    <block atomic="false" info="">
[23:32:45.907]      Sequence("CheckID");
[23:32:45.907]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:32:45.907]          <block atomic="false" info="">
[23:32:45.907]            __var pidr1 = 0;
[23:32:45.907]              // -> [pidr1 <= 0x00000000]
[23:32:45.908]            __var pidr2 = 0;
[23:32:45.908]              // -> [pidr2 <= 0x00000000]
[23:32:45.908]            __var jep106id = 0;
[23:32:45.908]              // -> [jep106id <= 0x00000000]
[23:32:45.908]            __var ROMTableBase = 0;
[23:32:45.908]              // -> [ROMTableBase <= 0x00000000]
[23:32:45.908]            __ap = 0;      // AHB-AP
[23:32:45.908]              // -> [__ap <= 0x00000000]
[23:32:45.908]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:32:45.909]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.909]              // -> [ROMTableBase <= 0xE00FD000]
[23:32:45.909]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:32:45.910]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.910]              // -> [pidr1 <= 0x00000004]
[23:32:45.910]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:32:45.911]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.911]              // -> [pidr2 <= 0x0000001A]
[23:32:45.911]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:32:45.911]              // -> [jep106id <= 0x00000020]
[23:32:45.912]          </block>
[23:32:45.912]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:32:45.912]            // if-block "jep106id != 0x20"
[23:32:45.912]              // =>  FALSE
[23:32:45.912]            // skip if-block "jep106id != 0x20"
[23:32:45.912]          </control>
[23:32:45.913]        </sequence>
[23:32:45.913]    </block>
[23:32:45.913]  </sequence>
[23:32:45.913]  
[23:32:45.929]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:32:45.929]  
[23:32:45.929]  <debugvars>
[23:32:45.929]    // Pre-defined
[23:32:45.929]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:45.929]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:45.929]    __dp=0x00000000
[23:32:45.930]    __ap=0x00000000
[23:32:45.930]    __traceout=0x00000001      (SWO Trace)
[23:32:45.930]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:45.930]    __FlashAddr=0x00000000
[23:32:45.930]    __FlashLen=0x00000000
[23:32:45.930]    __FlashArg=0x00000000
[23:32:45.931]    __FlashOp=0x00000000
[23:32:45.931]    __Result=0x00000000
[23:32:45.931]    
[23:32:45.931]    // User-defined
[23:32:45.931]    DbgMCU_CR=0x00000007
[23:32:45.931]    DbgMCU_APB1_Fz=0x00000000
[23:32:45.931]    DbgMCU_APB2_Fz=0x00000000
[23:32:45.932]    TraceClk_Pin=0x00040002
[23:32:45.932]    TraceD0_Pin=0x00040003
[23:32:45.932]    TraceD1_Pin=0x00040004
[23:32:45.932]    TraceD2_Pin=0x00040005
[23:32:45.932]    TraceD3_Pin=0x00040006
[23:32:45.932]  </debugvars>
[23:32:45.933]  
[23:32:45.933]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:32:45.933]    <block atomic="false" info="">
[23:32:45.933]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:32:45.933]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.934]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:32:45.934]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.934]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:32:45.935]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.935]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:32:45.935]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.935]    </block>
[23:32:45.935]  </sequence>
[23:32:45.936]  
[23:32:45.959]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:32:45.959]  
[23:32:45.959]  <debugvars>
[23:32:45.959]    // Pre-defined
[23:32:45.959]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:45.960]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:45.960]    __dp=0x00000000
[23:32:45.960]    __ap=0x00000000
[23:32:45.960]    __traceout=0x00000001      (SWO Trace)
[23:32:45.960]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:45.961]    __FlashAddr=0x00000000
[23:32:45.961]    __FlashLen=0x00000000
[23:32:45.961]    __FlashArg=0x00000000
[23:32:45.961]    __FlashOp=0x00000000
[23:32:45.961]    __Result=0x00000000
[23:32:45.961]    
[23:32:45.961]    // User-defined
[23:32:45.962]    DbgMCU_CR=0x00000007
[23:32:45.962]    DbgMCU_APB1_Fz=0x00000000
[23:32:45.962]    DbgMCU_APB2_Fz=0x00000000
[23:32:45.962]    TraceClk_Pin=0x00040002
[23:32:45.962]    TraceD0_Pin=0x00040003
[23:32:45.962]    TraceD1_Pin=0x00040004
[23:32:45.963]    TraceD2_Pin=0x00040005
[23:32:45.963]    TraceD3_Pin=0x00040006
[23:32:45.963]  </debugvars>
[23:32:45.963]  
[23:32:45.963]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:32:45.963]    <block atomic="false" info="">
[23:32:45.963]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:32:45.963]        // -> [traceSWO <= 0x00000001]
[23:32:45.964]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:32:45.964]        // -> [traceTPIU <= 0x00000000]
[23:32:45.964]    </block>
[23:32:45.964]    <control if="traceSWO" while="" timeout="0" info="">
[23:32:45.964]      // if-block "traceSWO"
[23:32:45.964]        // =>  TRUE
[23:32:45.964]      <block atomic="false" info="">
[23:32:45.964]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:32:45.964]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:32:45.965]            <block atomic="false" info="">
[23:32:45.965]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:32:45.965]                // -> [dbgmcu_val <= 0x00000000]
[23:32:45.965]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:32:45.965]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:32:45.965]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:32:45.966]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.966]                // -> [dbgmcu_val <= 0x00000007]
[23:32:45.966]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:32:45.966]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:32:45.966]              Sequence("ConfigureTraceSWOPin");
[23:32:45.966]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:32:45.966]                  <block atomic="false" info="">
[23:32:45.966]                    __var pin     = 0;
[23:32:45.967]                      // -> [pin <= 0x00000000]
[23:32:45.967]                    __var port    = 0;
[23:32:45.967]                      // -> [port <= 0x00000000]
[23:32:45.967]                    __var portAdr = 0;
[23:32:45.967]                      // -> [portAdr <= 0x00000000]
[23:32:45.967]                    __var pos     = 0;
[23:32:45.967]                      // -> [pos <= 0x00000000]
[23:32:45.967]                    __var SWO_Pin = 0x00010003;          // PB3
[23:32:45.967]                      // -> [SWO_Pin <= 0x00010003]
[23:32:45.968]                  </block>
[23:32:45.968]                  <block atomic="false" info="configure SWO">
[23:32:45.968]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:32:45.968]                      // -> [pin <= 0x00000003]
[23:32:45.968]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:32:45.968]                      // -> [port <= 0x00000001]
[23:32:45.968]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:32:45.968]                      // -> [portAdr <= 0x40020400]
[23:32:45.969]                    pos = pin * 2;
[23:32:45.969]                      // -> [pos <= 0x00000006]
[23:32:45.969]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:32:45.969]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.970]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.970]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:32:45.970]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.971]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.971]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:32:45.971]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.972]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.972]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:32:45.972]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.973]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.973]                  </block>
[23:32:45.973]                  <control if="pin <  8" while="" timeout="0" info="">
[23:32:45.973]                    // if-block "pin <  8"
[23:32:45.973]                      // =>  TRUE
[23:32:45.973]                    <block atomic="false" info="">
[23:32:45.973]                      pos = ((pin    ) & 7) * 4;
[23:32:45.973]                        // -> [pos <= 0x0000000C]
[23:32:45.973]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:32:45.974]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.974]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.974]                    </block>
[23:32:45.975]                    // end if-block "pin <  8"
[23:32:45.975]                  </control>
[23:32:45.975]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:32:45.975]                    // if-block "pin >= 8"
[23:32:45.975]                      // =>  FALSE
[23:32:45.975]                    // skip if-block "pin >= 8"
[23:32:45.975]                  </control>
[23:32:45.976]                </sequence>
[23:32:45.976]            </block>
[23:32:45.976]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:32:45.976]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:32:45.977]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.977]            </block>
[23:32:45.977]          </sequence>
[23:32:45.977]      </block>
[23:32:45.977]      // end if-block "traceSWO"
[23:32:45.977]    </control>
[23:32:45.977]    <control if="traceTPIU" while="" timeout="0" info="">
[23:32:45.978]      // if-block "traceTPIU"
[23:32:45.978]        // =>  FALSE
[23:32:45.978]      // skip if-block "traceTPIU"
[23:32:45.978]    </control>
[23:32:45.978]  </sequence>
[23:32:45.978]  
[23:32:45.982]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:32:45.982]  
[23:32:45.982]  <debugvars>
[23:32:45.982]    // Pre-defined
[23:32:45.982]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:45.983]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:45.983]    __dp=0x00000000
[23:32:45.983]    __ap=0x00000000
[23:32:45.983]    __traceout=0x00000001      (SWO Trace)
[23:32:45.983]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:45.983]    __FlashAddr=0x00000000
[23:32:45.984]    __FlashLen=0x00000000
[23:32:45.984]    __FlashArg=0x00000000
[23:32:45.984]    __FlashOp=0x00000000
[23:32:45.984]    __Result=0x00000000
[23:32:45.984]    
[23:32:45.984]    // User-defined
[23:32:45.984]    DbgMCU_CR=0x00000007
[23:32:45.985]    DbgMCU_APB1_Fz=0x00000000
[23:32:45.985]    DbgMCU_APB2_Fz=0x00000000
[23:32:45.985]    TraceClk_Pin=0x00040002
[23:32:45.985]    TraceD0_Pin=0x00040003
[23:32:45.985]    TraceD1_Pin=0x00040004
[23:32:45.985]    TraceD2_Pin=0x00040005
[23:32:45.986]    TraceD3_Pin=0x00040006
[23:32:45.986]  </debugvars>
[23:32:45.986]  
[23:32:45.986]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:32:45.986]    <block atomic="false" info="">
[23:32:45.986]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:32:45.986]        // -> [traceSWO <= 0x00000001]
[23:32:45.986]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:32:45.987]        // -> [traceTPIU <= 0x00000000]
[23:32:45.987]    </block>
[23:32:45.987]    <control if="traceSWO" while="" timeout="0" info="">
[23:32:45.987]      // if-block "traceSWO"
[23:32:45.987]        // =>  TRUE
[23:32:45.987]      <block atomic="false" info="">
[23:32:45.987]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:32:45.987]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:32:45.988]            <block atomic="false" info="">
[23:32:45.988]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:32:45.988]                // -> [dbgmcu_val <= 0x00000000]
[23:32:45.988]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:32:45.988]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:32:45.988]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:32:45.989]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.989]                // -> [dbgmcu_val <= 0x00000007]
[23:32:45.989]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:32:45.989]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:32:45.989]              Sequence("ConfigureTraceSWOPin");
[23:32:45.989]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:32:45.989]                  <block atomic="false" info="">
[23:32:45.989]                    __var pin     = 0;
[23:32:45.989]                      // -> [pin <= 0x00000000]
[23:32:45.990]                    __var port    = 0;
[23:32:45.990]                      // -> [port <= 0x00000000]
[23:32:45.990]                    __var portAdr = 0;
[23:32:45.990]                      // -> [portAdr <= 0x00000000]
[23:32:45.990]                    __var pos     = 0;
[23:32:45.990]                      // -> [pos <= 0x00000000]
[23:32:45.990]                    __var SWO_Pin = 0x00010003;          // PB3
[23:32:45.990]                      // -> [SWO_Pin <= 0x00010003]
[23:32:45.991]                  </block>
[23:32:45.991]                  <block atomic="false" info="configure SWO">
[23:32:45.991]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:32:45.991]                      // -> [pin <= 0x00000003]
[23:32:45.991]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:32:45.991]                      // -> [port <= 0x00000001]
[23:32:45.991]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:32:45.991]                      // -> [portAdr <= 0x40020400]
[23:32:45.992]                    pos = pin * 2;
[23:32:45.992]                      // -> [pos <= 0x00000006]
[23:32:45.992]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:32:45.993]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.993]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.993]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:32:45.994]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.995]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.995]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:32:45.996]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.996]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.996]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:32:45.997]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.997]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.997]                  </block>
[23:32:45.998]                  <control if="pin <  8" while="" timeout="0" info="">
[23:32:45.998]                    // if-block "pin <  8"
[23:32:45.998]                      // =>  TRUE
[23:32:45.998]                    <block atomic="false" info="">
[23:32:45.998]                      pos = ((pin    ) & 7) * 4;
[23:32:45.998]                        // -> [pos <= 0x0000000C]
[23:32:45.998]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:32:45.999]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.999]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:45.999]                    </block>
[23:32:46.000]                    // end if-block "pin <  8"
[23:32:46.000]                  </control>
[23:32:46.000]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:32:46.000]                    // if-block "pin >= 8"
[23:32:46.000]                      // =>  FALSE
[23:32:46.000]                    // skip if-block "pin >= 8"
[23:32:46.000]                  </control>
[23:32:46.000]                </sequence>
[23:32:46.000]            </block>
[23:32:46.001]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:32:46.001]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:32:46.001]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.001]            </block>
[23:32:46.001]          </sequence>
[23:32:46.001]      </block>
[23:32:46.002]      // end if-block "traceSWO"
[23:32:46.002]    </control>
[23:32:46.002]    <control if="traceTPIU" while="" timeout="0" info="">
[23:32:46.002]      // if-block "traceTPIU"
[23:32:46.002]        // =>  FALSE
[23:32:46.002]      // skip if-block "traceTPIU"
[23:32:46.002]    </control>
[23:32:46.002]  </sequence>
[23:32:46.003]  
[23:32:46.254]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:32:46.254]  
[23:32:46.254]  <debugvars>
[23:32:46.254]    // Pre-defined
[23:32:46.255]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:32:46.255]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:32:46.255]    __dp=0x00000000
[23:32:46.255]    __ap=0x00000000
[23:32:46.255]    __traceout=0x00000001      (SWO Trace)
[23:32:46.255]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:32:46.255]    __FlashAddr=0x00000000
[23:32:46.255]    __FlashLen=0x00000000
[23:32:46.256]    __FlashArg=0x00000000
[23:32:46.256]    __FlashOp=0x00000000
[23:32:46.256]    __Result=0x00000000
[23:32:46.256]    
[23:32:46.256]    // User-defined
[23:32:46.256]    DbgMCU_CR=0x00000007
[23:32:46.256]    DbgMCU_APB1_Fz=0x00000000
[23:32:46.256]    DbgMCU_APB2_Fz=0x00000000
[23:32:46.256]    TraceClk_Pin=0x00040002
[23:32:46.256]    TraceD0_Pin=0x00040003
[23:32:46.257]    TraceD1_Pin=0x00040004
[23:32:46.257]    TraceD2_Pin=0x00040005
[23:32:46.257]    TraceD3_Pin=0x00040006
[23:32:46.257]  </debugvars>
[23:32:46.257]  
[23:32:46.257]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:32:46.257]    <block atomic="false" info="">
[23:32:46.257]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:32:46.258]        // -> [traceSWO <= 0x00000001]
[23:32:46.258]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:32:46.258]        // -> [traceTPIU <= 0x00000000]
[23:32:46.258]    </block>
[23:32:46.258]    <control if="traceSWO" while="" timeout="0" info="">
[23:32:46.258]      // if-block "traceSWO"
[23:32:46.258]        // =>  TRUE
[23:32:46.258]      <block atomic="false" info="">
[23:32:46.258]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:32:46.259]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:32:46.259]            <block atomic="false" info="">
[23:32:46.259]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:32:46.259]                // -> [dbgmcu_val <= 0x00000000]
[23:32:46.259]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:32:46.259]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:32:46.259]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:32:46.260]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.260]                // -> [dbgmcu_val <= 0x00000007]
[23:32:46.260]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:32:46.260]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:32:46.260]              Sequence("ConfigureTraceSWOPin");
[23:32:46.260]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:32:46.260]                  <block atomic="false" info="">
[23:32:46.261]                    __var pin     = 0;
[23:32:46.261]                      // -> [pin <= 0x00000000]
[23:32:46.261]                    __var port    = 0;
[23:32:46.261]                      // -> [port <= 0x00000000]
[23:32:46.261]                    __var portAdr = 0;
[23:32:46.261]                      // -> [portAdr <= 0x00000000]
[23:32:46.261]                    __var pos     = 0;
[23:32:46.261]                      // -> [pos <= 0x00000000]
[23:32:46.261]                    __var SWO_Pin = 0x00010003;          // PB3
[23:32:46.262]                      // -> [SWO_Pin <= 0x00010003]
[23:32:46.262]                  </block>
[23:32:46.262]                  <block atomic="false" info="configure SWO">
[23:32:46.262]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:32:46.262]                      // -> [pin <= 0x00000003]
[23:32:46.262]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:32:46.262]                      // -> [port <= 0x00000001]
[23:32:46.262]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:32:46.263]                      // -> [portAdr <= 0x40020400]
[23:32:46.263]                    pos = pin * 2;
[23:32:46.263]                      // -> [pos <= 0x00000006]
[23:32:46.263]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:32:46.263]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.264]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.264]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:32:46.264]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.265]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.265]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:32:46.265]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.266]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.266]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:32:46.266]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.267]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.267]                  </block>
[23:32:46.267]                  <control if="pin <  8" while="" timeout="0" info="">
[23:32:46.267]                    // if-block "pin <  8"
[23:32:46.267]                      // =>  TRUE
[23:32:46.267]                    <block atomic="false" info="">
[23:32:46.267]                      pos = ((pin    ) & 7) * 4;
[23:32:46.267]                        // -> [pos <= 0x0000000C]
[23:32:46.267]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:32:46.268]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.268]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.268]                    </block>
[23:32:46.269]                    // end if-block "pin <  8"
[23:32:46.269]                  </control>
[23:32:46.269]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:32:46.269]                    // if-block "pin >= 8"
[23:32:46.269]                      // =>  FALSE
[23:32:46.269]                    // skip if-block "pin >= 8"
[23:32:46.269]                  </control>
[23:32:46.269]                </sequence>
[23:32:46.269]            </block>
[23:32:46.270]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:32:46.270]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:32:46.270]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:32:46.270]            </block>
[23:32:46.270]          </sequence>
[23:32:46.271]      </block>
[23:32:46.271]      // end if-block "traceSWO"
[23:32:46.271]    </control>
[23:32:46.271]    <control if="traceTPIU" while="" timeout="0" info="">
[23:32:46.271]      // if-block "traceTPIU"
[23:32:46.271]        // =>  FALSE
[23:32:46.271]      // skip if-block "traceTPIU"
[23:32:46.271]    </control>
[23:32:46.271]  </sequence>
[23:32:46.272]  
