/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0014.log
 *  Created     : 23:37:39 (06/05/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[23:37:39.846]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:37:39.846]  
[23:37:39.846]  <debugvars>
[23:37:39.846]    // Pre-defined
[23:37:39.846]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:37:39.846]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:37:39.847]    __dp=0x00000000
[23:37:39.847]    __ap=0x00000000
[23:37:39.847]    __traceout=0x00000001      (SWO Trace)
[23:37:39.847]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:37:39.847]    __FlashAddr=0x00000000
[23:37:39.847]    __FlashLen=0x00000000
[23:37:39.847]    __FlashArg=0x00000000
[23:37:39.847]    __FlashOp=0x00000000
[23:37:39.848]    __Result=0x00000000
[23:37:39.848]    
[23:37:39.848]    // User-defined
[23:37:39.848]    DbgMCU_CR=0x00000007
[23:37:39.848]    DbgMCU_APB1_Fz=0x00000000
[23:37:39.848]    DbgMCU_APB2_Fz=0x00000000
[23:37:39.848]    TraceClk_Pin=0x00040002
[23:37:39.848]    TraceD0_Pin=0x00040003
[23:37:39.848]    TraceD1_Pin=0x00040004
[23:37:39.849]    TraceD2_Pin=0x00040005
[23:37:39.849]    TraceD3_Pin=0x00040006
[23:37:39.849]  </debugvars>
[23:37:39.849]  
[23:37:39.849]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:37:39.849]    <block atomic="false" info="">
[23:37:39.849]      Sequence("CheckID");
[23:37:39.849]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:37:39.850]          <block atomic="false" info="">
[23:37:39.850]            __var pidr1 = 0;
[23:37:39.850]              // -> [pidr1 <= 0x00000000]
[23:37:39.850]            __var pidr2 = 0;
[23:37:39.850]              // -> [pidr2 <= 0x00000000]
[23:37:39.850]            __var jep106id = 0;
[23:37:39.850]              // -> [jep106id <= 0x00000000]
[23:37:39.850]            __var ROMTableBase = 0;
[23:37:39.851]              // -> [ROMTableBase <= 0x00000000]
[23:37:39.851]            __ap = 0;      // AHB-AP
[23:37:39.851]              // -> [__ap <= 0x00000000]
[23:37:39.851]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:37:39.851]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.851]              // -> [ROMTableBase <= 0xE00FD000]
[23:37:39.852]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:37:39.852]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.852]              // -> [pidr1 <= 0x00000004]
[23:37:39.852]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:37:39.853]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.853]              // -> [pidr2 <= 0x0000001A]
[23:37:39.853]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:37:39.853]              // -> [jep106id <= 0x00000020]
[23:37:39.853]          </block>
[23:37:39.853]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:37:39.853]            // if-block "jep106id != 0x20"
[23:37:39.853]              // =>  FALSE
[23:37:39.853]            // skip if-block "jep106id != 0x20"
[23:37:39.853]          </control>
[23:37:39.854]        </sequence>
[23:37:39.854]    </block>
[23:37:39.854]  </sequence>
[23:37:39.854]  
[23:37:39.869]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:37:39.869]  
[23:37:39.870]  <debugvars>
[23:37:39.870]    // Pre-defined
[23:37:39.870]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:37:39.870]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:37:39.870]    __dp=0x00000000
[23:37:39.871]    __ap=0x00000000
[23:37:39.871]    __traceout=0x00000001      (SWO Trace)
[23:37:39.871]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:37:39.871]    __FlashAddr=0x00000000
[23:37:39.871]    __FlashLen=0x00000000
[23:37:39.872]    __FlashArg=0x00000000
[23:37:39.872]    __FlashOp=0x00000000
[23:37:39.872]    __Result=0x00000000
[23:37:39.872]    
[23:37:39.872]    // User-defined
[23:37:39.872]    DbgMCU_CR=0x00000007
[23:37:39.872]    DbgMCU_APB1_Fz=0x00000000
[23:37:39.873]    DbgMCU_APB2_Fz=0x00000000
[23:37:39.873]    TraceClk_Pin=0x00040002
[23:37:39.873]    TraceD0_Pin=0x00040003
[23:37:39.873]    TraceD1_Pin=0x00040004
[23:37:39.873]    TraceD2_Pin=0x00040005
[23:37:39.874]    TraceD3_Pin=0x00040006
[23:37:39.874]  </debugvars>
[23:37:39.874]  
[23:37:39.874]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:37:39.874]    <block atomic="false" info="">
[23:37:39.875]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:37:39.875]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.875]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:37:39.876]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.876]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:37:39.877]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.877]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:37:39.877]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:37:39.878]    </block>
[23:37:39.878]  </sequence>
[23:37:39.878]  
[23:38:10.699]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:38:10.699]  
[23:38:10.699]  <debugvars>
[23:38:10.699]    // Pre-defined
[23:38:10.700]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:38:10.700]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:38:10.700]    __dp=0x00000000
[23:38:10.700]    __ap=0x00000000
[23:38:10.700]    __traceout=0x00000001      (SWO Trace)
[23:38:10.700]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:38:10.701]    __FlashAddr=0x00000000
[23:38:10.701]    __FlashLen=0x00000000
[23:38:10.701]    __FlashArg=0x00000000
[23:38:10.701]    __FlashOp=0x00000000
[23:38:10.701]    __Result=0x00000000
[23:38:10.701]    
[23:38:10.701]    // User-defined
[23:38:10.701]    DbgMCU_CR=0x00000007
[23:38:10.701]    DbgMCU_APB1_Fz=0x00000000
[23:38:10.702]    DbgMCU_APB2_Fz=0x00000000
[23:38:10.702]    TraceClk_Pin=0x00040002
[23:38:10.702]    TraceD0_Pin=0x00040003
[23:38:10.702]    TraceD1_Pin=0x00040004
[23:38:10.702]    TraceD2_Pin=0x00040005
[23:38:10.702]    TraceD3_Pin=0x00040006
[23:38:10.703]  </debugvars>
[23:38:10.703]  
[23:38:10.703]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:38:10.703]    <block atomic="false" info="">
[23:38:10.703]      Sequence("CheckID");
[23:38:10.703]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:38:10.703]          <block atomic="false" info="">
[23:38:10.703]            __var pidr1 = 0;
[23:38:10.704]              // -> [pidr1 <= 0x00000000]
[23:38:10.704]            __var pidr2 = 0;
[23:38:10.704]              // -> [pidr2 <= 0x00000000]
[23:38:10.704]            __var jep106id = 0;
[23:38:10.704]              // -> [jep106id <= 0x00000000]
[23:38:10.704]            __var ROMTableBase = 0;
[23:38:10.704]              // -> [ROMTableBase <= 0x00000000]
[23:38:10.704]            __ap = 0;      // AHB-AP
[23:38:10.705]              // -> [__ap <= 0x00000000]
[23:38:10.705]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:38:10.705]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.705]              // -> [ROMTableBase <= 0xE00FD000]
[23:38:10.705]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:38:10.706]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.706]              // -> [pidr1 <= 0x00000004]
[23:38:10.706]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:38:10.707]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.707]              // -> [pidr2 <= 0x0000001A]
[23:38:10.707]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:38:10.707]              // -> [jep106id <= 0x00000020]
[23:38:10.707]          </block>
[23:38:10.707]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:38:10.707]            // if-block "jep106id != 0x20"
[23:38:10.708]              // =>  FALSE
[23:38:10.708]            // skip if-block "jep106id != 0x20"
[23:38:10.708]          </control>
[23:38:10.708]        </sequence>
[23:38:10.708]    </block>
[23:38:10.708]  </sequence>
[23:38:10.708]  
[23:38:10.723]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:38:10.723]  
[23:38:10.723]  <debugvars>
[23:38:10.723]    // Pre-defined
[23:38:10.724]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:38:10.724]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:38:10.724]    __dp=0x00000000
[23:38:10.724]    __ap=0x00000000
[23:38:10.724]    __traceout=0x00000001      (SWO Trace)
[23:38:10.724]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:38:10.724]    __FlashAddr=0x00000000
[23:38:10.724]    __FlashLen=0x00000000
[23:38:10.725]    __FlashArg=0x00000000
[23:38:10.725]    __FlashOp=0x00000000
[23:38:10.725]    __Result=0x00000000
[23:38:10.725]    
[23:38:10.725]    // User-defined
[23:38:10.725]    DbgMCU_CR=0x00000007
[23:38:10.725]    DbgMCU_APB1_Fz=0x00000000
[23:38:10.725]    DbgMCU_APB2_Fz=0x00000000
[23:38:10.725]    TraceClk_Pin=0x00040002
[23:38:10.725]    TraceD0_Pin=0x00040003
[23:38:10.726]    TraceD1_Pin=0x00040004
[23:38:10.726]    TraceD2_Pin=0x00040005
[23:38:10.726]    TraceD3_Pin=0x00040006
[23:38:10.726]  </debugvars>
[23:38:10.726]  
[23:38:10.726]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:38:10.726]    <block atomic="false" info="">
[23:38:10.726]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:38:10.727]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.727]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:38:10.728]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.728]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:38:10.728]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.728]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:38:10.729]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.729]    </block>
[23:38:10.729]  </sequence>
[23:38:10.729]  
[23:38:10.744]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:38:10.744]  
[23:38:10.745]  <debugvars>
[23:38:10.745]    // Pre-defined
[23:38:10.745]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:38:10.745]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:38:10.745]    __dp=0x00000000
[23:38:10.745]    __ap=0x00000000
[23:38:10.746]    __traceout=0x00000001      (SWO Trace)
[23:38:10.746]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:38:10.746]    __FlashAddr=0x00000000
[23:38:10.746]    __FlashLen=0x00000000
[23:38:10.746]    __FlashArg=0x00000000
[23:38:10.746]    __FlashOp=0x00000000
[23:38:10.747]    __Result=0x00000000
[23:38:10.747]    
[23:38:10.747]    // User-defined
[23:38:10.747]    DbgMCU_CR=0x00000007
[23:38:10.747]    DbgMCU_APB1_Fz=0x00000000
[23:38:10.747]    DbgMCU_APB2_Fz=0x00000000
[23:38:10.747]    TraceClk_Pin=0x00040002
[23:38:10.747]    TraceD0_Pin=0x00040003
[23:38:10.748]    TraceD1_Pin=0x00040004
[23:38:10.748]    TraceD2_Pin=0x00040005
[23:38:10.748]    TraceD3_Pin=0x00040006
[23:38:10.748]  </debugvars>
[23:38:10.748]  
[23:38:10.748]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:38:10.748]    <block atomic="false" info="">
[23:38:10.748]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:38:10.749]        // -> [traceSWO <= 0x00000001]
[23:38:10.749]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:38:10.749]        // -> [traceTPIU <= 0x00000000]
[23:38:10.749]    </block>
[23:38:10.749]    <control if="traceSWO" while="" timeout="0" info="">
[23:38:10.749]      // if-block "traceSWO"
[23:38:10.749]        // =>  TRUE
[23:38:10.749]      <block atomic="false" info="">
[23:38:10.749]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:38:10.750]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:38:10.750]            <block atomic="false" info="">
[23:38:10.750]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:38:10.750]                // -> [dbgmcu_val <= 0x00000000]
[23:38:10.750]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:38:10.750]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:38:10.750]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:38:10.751]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.751]                // -> [dbgmcu_val <= 0x00000007]
[23:38:10.751]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:38:10.751]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:38:10.751]              Sequence("ConfigureTraceSWOPin");
[23:38:10.751]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:38:10.751]                  <block atomic="false" info="">
[23:38:10.752]                    __var pin     = 0;
[23:38:10.752]                      // -> [pin <= 0x00000000]
[23:38:10.752]                    __var port    = 0;
[23:38:10.752]                      // -> [port <= 0x00000000]
[23:38:10.752]                    __var portAdr = 0;
[23:38:10.752]                      // -> [portAdr <= 0x00000000]
[23:38:10.752]                    __var pos     = 0;
[23:38:10.752]                      // -> [pos <= 0x00000000]
[23:38:10.753]                    __var SWO_Pin = 0x00010003;          // PB3
[23:38:10.753]                      // -> [SWO_Pin <= 0x00010003]
[23:38:10.753]                  </block>
[23:38:10.753]                  <block atomic="false" info="configure SWO">
[23:38:10.753]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:38:10.753]                      // -> [pin <= 0x00000003]
[23:38:10.753]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:38:10.753]                      // -> [port <= 0x00000001]
[23:38:10.754]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:38:10.754]                      // -> [portAdr <= 0x40020400]
[23:38:10.754]                    pos = pin * 2;
[23:38:10.754]                      // -> [pos <= 0x00000006]
[23:38:10.754]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:38:10.755]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.755]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.755]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:38:10.756]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.756]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.756]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:38:10.757]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.757]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.757]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:38:10.757]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.758]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.758]                  </block>
[23:38:10.758]                  <control if="pin <  8" while="" timeout="0" info="">
[23:38:10.758]                    // if-block "pin <  8"
[23:38:10.758]                      // =>  TRUE
[23:38:10.758]                    <block atomic="false" info="">
[23:38:10.759]                      pos = ((pin    ) & 7) * 4;
[23:38:10.759]                        // -> [pos <= 0x0000000C]
[23:38:10.759]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:38:10.759]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.760]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.760]                    </block>
[23:38:10.760]                    // end if-block "pin <  8"
[23:38:10.760]                  </control>
[23:38:10.760]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:38:10.760]                    // if-block "pin >= 8"
[23:38:10.761]                      // =>  FALSE
[23:38:10.761]                    // skip if-block "pin >= 8"
[23:38:10.761]                  </control>
[23:38:10.761]                </sequence>
[23:38:10.761]            </block>
[23:38:10.761]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:38:10.761]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:38:10.762]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.762]            </block>
[23:38:10.762]          </sequence>
[23:38:10.762]      </block>
[23:38:10.762]      // end if-block "traceSWO"
[23:38:10.762]    </control>
[23:38:10.763]    <control if="traceTPIU" while="" timeout="0" info="">
[23:38:10.763]      // if-block "traceTPIU"
[23:38:10.763]        // =>  FALSE
[23:38:10.763]      // skip if-block "traceTPIU"
[23:38:10.763]    </control>
[23:38:10.763]  </sequence>
[23:38:10.763]  
[23:38:10.767]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:38:10.767]  
[23:38:10.767]  <debugvars>
[23:38:10.768]    // Pre-defined
[23:38:10.768]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:38:10.768]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:38:10.768]    __dp=0x00000000
[23:38:10.768]    __ap=0x00000000
[23:38:10.768]    __traceout=0x00000001      (SWO Trace)
[23:38:10.769]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:38:10.769]    __FlashAddr=0x00000000
[23:38:10.769]    __FlashLen=0x00000000
[23:38:10.769]    __FlashArg=0x00000000
[23:38:10.769]    __FlashOp=0x00000000
[23:38:10.769]    __Result=0x00000000
[23:38:10.769]    
[23:38:10.769]    // User-defined
[23:38:10.770]    DbgMCU_CR=0x00000007
[23:38:10.770]    DbgMCU_APB1_Fz=0x00000000
[23:38:10.770]    DbgMCU_APB2_Fz=0x00000000
[23:38:10.770]    TraceClk_Pin=0x00040002
[23:38:10.770]    TraceD0_Pin=0x00040003
[23:38:10.770]    TraceD1_Pin=0x00040004
[23:38:10.770]    TraceD2_Pin=0x00040005
[23:38:10.770]    TraceD3_Pin=0x00040006
[23:38:10.771]  </debugvars>
[23:38:10.771]  
[23:38:10.771]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:38:10.771]    <block atomic="false" info="">
[23:38:10.771]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:38:10.771]        // -> [traceSWO <= 0x00000001]
[23:38:10.771]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:38:10.771]        // -> [traceTPIU <= 0x00000000]
[23:38:10.771]    </block>
[23:38:10.772]    <control if="traceSWO" while="" timeout="0" info="">
[23:38:10.772]      // if-block "traceSWO"
[23:38:10.772]        // =>  TRUE
[23:38:10.772]      <block atomic="false" info="">
[23:38:10.772]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:38:10.772]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:38:10.772]            <block atomic="false" info="">
[23:38:10.772]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:38:10.773]                // -> [dbgmcu_val <= 0x00000000]
[23:38:10.773]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:38:10.773]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:38:10.773]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:38:10.773]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.773]                // -> [dbgmcu_val <= 0x00000007]
[23:38:10.773]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:38:10.774]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:38:10.774]              Sequence("ConfigureTraceSWOPin");
[23:38:10.774]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:38:10.774]                  <block atomic="false" info="">
[23:38:10.774]                    __var pin     = 0;
[23:38:10.774]                      // -> [pin <= 0x00000000]
[23:38:10.774]                    __var port    = 0;
[23:38:10.774]                      // -> [port <= 0x00000000]
[23:38:10.774]                    __var portAdr = 0;
[23:38:10.775]                      // -> [portAdr <= 0x00000000]
[23:38:10.775]                    __var pos     = 0;
[23:38:10.775]                      // -> [pos <= 0x00000000]
[23:38:10.775]                    __var SWO_Pin = 0x00010003;          // PB3
[23:38:10.775]                      // -> [SWO_Pin <= 0x00010003]
[23:38:10.775]                  </block>
[23:38:10.775]                  <block atomic="false" info="configure SWO">
[23:38:10.775]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:38:10.775]                      // -> [pin <= 0x00000003]
[23:38:10.776]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:38:10.776]                      // -> [port <= 0x00000001]
[23:38:10.776]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:38:10.776]                      // -> [portAdr <= 0x40020400]
[23:38:10.776]                    pos = pin * 2;
[23:38:10.776]                      // -> [pos <= 0x00000006]
[23:38:10.776]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:38:10.777]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.777]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.777]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:38:10.778]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.778]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.778]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:38:10.779]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.779]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.779]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:38:10.780]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.780]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.780]                  </block>
[23:38:10.780]                  <control if="pin <  8" while="" timeout="0" info="">
[23:38:10.780]                    // if-block "pin <  8"
[23:38:10.781]                      // =>  TRUE
[23:38:10.781]                    <block atomic="false" info="">
[23:38:10.781]                      pos = ((pin    ) & 7) * 4;
[23:38:10.781]                        // -> [pos <= 0x0000000C]
[23:38:10.781]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:38:10.781]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.782]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.782]                    </block>
[23:38:10.782]                    // end if-block "pin <  8"
[23:38:10.782]                  </control>
[23:38:10.782]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:38:10.782]                    // if-block "pin >= 8"
[23:38:10.782]                      // =>  FALSE
[23:38:10.783]                    // skip if-block "pin >= 8"
[23:38:10.783]                  </control>
[23:38:10.783]                </sequence>
[23:38:10.783]            </block>
[23:38:10.783]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:38:10.783]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:38:10.784]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:10.784]            </block>
[23:38:10.784]          </sequence>
[23:38:10.784]      </block>
[23:38:10.784]      // end if-block "traceSWO"
[23:38:10.784]    </control>
[23:38:10.784]    <control if="traceTPIU" while="" timeout="0" info="">
[23:38:10.784]      // if-block "traceTPIU"
[23:38:10.784]        // =>  FALSE
[23:38:10.784]      // skip if-block "traceTPIU"
[23:38:10.785]    </control>
[23:38:10.785]  </sequence>
[23:38:10.785]  
[23:38:11.008]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:38:11.008]  
[23:38:11.008]  <debugvars>
[23:38:11.008]    // Pre-defined
[23:38:11.009]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:38:11.009]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:38:11.009]    __dp=0x00000000
[23:38:11.009]    __ap=0x00000000
[23:38:11.009]    __traceout=0x00000001      (SWO Trace)
[23:38:11.009]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:38:11.010]    __FlashAddr=0x00000000
[23:38:11.010]    __FlashLen=0x00000000
[23:38:11.010]    __FlashArg=0x00000000
[23:38:11.010]    __FlashOp=0x00000000
[23:38:11.010]    __Result=0x00000000
[23:38:11.011]    
[23:38:11.011]    // User-defined
[23:38:11.011]    DbgMCU_CR=0x00000007
[23:38:11.011]    DbgMCU_APB1_Fz=0x00000000
[23:38:11.011]    DbgMCU_APB2_Fz=0x00000000
[23:38:11.011]    TraceClk_Pin=0x00040002
[23:38:11.011]    TraceD0_Pin=0x00040003
[23:38:11.012]    TraceD1_Pin=0x00040004
[23:38:11.012]    TraceD2_Pin=0x00040005
[23:38:11.012]    TraceD3_Pin=0x00040006
[23:38:11.012]  </debugvars>
[23:38:11.012]  
[23:38:11.012]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:38:11.013]    <block atomic="false" info="">
[23:38:11.013]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:38:11.013]        // -> [traceSWO <= 0x00000001]
[23:38:11.013]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:38:11.013]        // -> [traceTPIU <= 0x00000000]
[23:38:11.013]    </block>
[23:38:11.013]    <control if="traceSWO" while="" timeout="0" info="">
[23:38:11.013]      // if-block "traceSWO"
[23:38:11.014]        // =>  TRUE
[23:38:11.014]      <block atomic="false" info="">
[23:38:11.014]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:38:11.014]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:38:11.014]            <block atomic="false" info="">
[23:38:11.014]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:38:11.014]                // -> [dbgmcu_val <= 0x00000000]
[23:38:11.015]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:38:11.015]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:38:11.015]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:38:11.015]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.015]                // -> [dbgmcu_val <= 0x00000007]
[23:38:11.015]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:38:11.016]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:38:11.016]              Sequence("ConfigureTraceSWOPin");
[23:38:11.016]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:38:11.016]                  <block atomic="false" info="">
[23:38:11.016]                    __var pin     = 0;
[23:38:11.016]                      // -> [pin <= 0x00000000]
[23:38:11.016]                    __var port    = 0;
[23:38:11.016]                      // -> [port <= 0x00000000]
[23:38:11.016]                    __var portAdr = 0;
[23:38:11.017]                      // -> [portAdr <= 0x00000000]
[23:38:11.017]                    __var pos     = 0;
[23:38:11.017]                      // -> [pos <= 0x00000000]
[23:38:11.017]                    __var SWO_Pin = 0x00010003;          // PB3
[23:38:11.017]                      // -> [SWO_Pin <= 0x00010003]
[23:38:11.017]                  </block>
[23:38:11.017]                  <block atomic="false" info="configure SWO">
[23:38:11.017]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:38:11.018]                      // -> [pin <= 0x00000003]
[23:38:11.018]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:38:11.018]                      // -> [port <= 0x00000001]
[23:38:11.018]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:38:11.018]                      // -> [portAdr <= 0x40020400]
[23:38:11.018]                    pos = pin * 2;
[23:38:11.018]                      // -> [pos <= 0x00000006]
[23:38:11.018]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:38:11.019]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.019]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.019]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:38:11.020]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.020]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.020]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:38:11.021]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.021]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.021]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:38:11.022]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.022]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.022]                  </block>
[23:38:11.022]                  <control if="pin <  8" while="" timeout="0" info="">
[23:38:11.022]                    // if-block "pin <  8"
[23:38:11.022]                      // =>  TRUE
[23:38:11.023]                    <block atomic="false" info="">
[23:38:11.023]                      pos = ((pin    ) & 7) * 4;
[23:38:11.023]                        // -> [pos <= 0x0000000C]
[23:38:11.023]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:38:11.023]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.024]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.024]                    </block>
[23:38:11.024]                    // end if-block "pin <  8"
[23:38:11.024]                  </control>
[23:38:11.024]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:38:11.024]                    // if-block "pin >= 8"
[23:38:11.024]                      // =>  FALSE
[23:38:11.025]                    // skip if-block "pin >= 8"
[23:38:11.025]                  </control>
[23:38:11.025]                </sequence>
[23:38:11.025]            </block>
[23:38:11.025]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:38:11.025]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:38:11.025]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:38:11.026]            </block>
[23:38:11.026]          </sequence>
[23:38:11.026]      </block>
[23:38:11.026]      // end if-block "traceSWO"
[23:38:11.026]    </control>
[23:38:11.026]    <control if="traceTPIU" while="" timeout="0" info="">
[23:38:11.026]      // if-block "traceTPIU"
[23:38:11.026]        // =>  FALSE
[23:38:11.027]      // skip if-block "traceTPIU"
[23:38:11.027]    </control>
[23:38:11.027]  </sequence>
[23:38:11.027]  
[23:43:55.265]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:43:55.265]  
[23:43:55.266]  <debugvars>
[23:43:55.266]    // Pre-defined
[23:43:55.266]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:43:55.267]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:43:55.267]    __dp=0x00000000
[23:43:55.267]    __ap=0x00000000
[23:43:55.267]    __traceout=0x00000001      (SWO Trace)
[23:43:55.267]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:43:55.268]    __FlashAddr=0x00000000
[23:43:55.268]    __FlashLen=0x00000000
[23:43:55.268]    __FlashArg=0x00000000
[23:43:55.268]    __FlashOp=0x00000000
[23:43:55.268]    __Result=0x00000000
[23:43:55.269]    
[23:43:55.269]    // User-defined
[23:43:55.269]    DbgMCU_CR=0x00000007
[23:43:55.269]    DbgMCU_APB1_Fz=0x00000000
[23:43:55.269]    DbgMCU_APB2_Fz=0x00000000
[23:43:55.269]    TraceClk_Pin=0x00040002
[23:43:55.270]    TraceD0_Pin=0x00040003
[23:43:55.270]    TraceD1_Pin=0x00040004
[23:43:55.270]    TraceD2_Pin=0x00040005
[23:43:55.270]    TraceD3_Pin=0x00040006
[23:43:55.270]  </debugvars>
[23:43:55.270]  
[23:43:55.271]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:43:55.271]    <block atomic="false" info="">
[23:43:55.271]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:43:55.271]        // -> [traceSWO <= 0x00000001]
[23:43:55.271]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:43:55.272]        // -> [traceTPIU <= 0x00000000]
[23:43:55.272]    </block>
[23:43:55.272]    <control if="traceSWO" while="" timeout="0" info="">
[23:43:55.272]      // if-block "traceSWO"
[23:43:55.272]        // =>  TRUE
[23:43:55.272]      <block atomic="false" info="">
[23:43:55.273]        Sequence("DisableTraceSWO");
[23:43:55.273]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:43:55.273]            <block atomic="false" info="">
[23:43:55.273]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:43:55.273]                // -> [dbgmcu_val <= 0x00000000]
[23:43:55.273]            </block>
[23:43:55.273]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:43:55.274]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:43:55.274]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:43:55.274]                // -> [dbgmcu_val <= 0x00000007]
[23:43:55.274]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:43:55.275]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:43:55.275]            </block>
[23:43:55.276]          </sequence>
[23:43:55.276]      </block>
[23:43:55.276]      // end if-block "traceSWO"
[23:43:55.276]    </control>
[23:43:55.276]    <control if="traceTPIU" while="" timeout="0" info="">
[23:43:55.276]      // if-block "traceTPIU"
[23:43:55.277]        // =>  FALSE
[23:43:55.277]      // skip if-block "traceTPIU"
[23:43:55.277]    </control>
[23:43:55.277]  </sequence>
[23:43:55.277]  
[23:44:05.609]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:44:05.609]  
[23:44:05.609]  <debugvars>
[23:44:05.609]    // Pre-defined
[23:44:05.610]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:05.610]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:44:05.610]    __dp=0x00000000
[23:44:05.610]    __ap=0x00000000
[23:44:05.610]    __traceout=0x00000001      (SWO Trace)
[23:44:05.611]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:05.611]    __FlashAddr=0x00000000
[23:44:05.611]    __FlashLen=0x00000000
[23:44:05.611]    __FlashArg=0x00000000
[23:44:05.611]    __FlashOp=0x00000000
[23:44:05.612]    __Result=0x00000000
[23:44:05.612]    
[23:44:05.612]    // User-defined
[23:44:05.612]    DbgMCU_CR=0x00000007
[23:44:05.612]    DbgMCU_APB1_Fz=0x00000000
[23:44:05.613]    DbgMCU_APB2_Fz=0x00000000
[23:44:05.613]    TraceClk_Pin=0x00040002
[23:44:05.613]    TraceD0_Pin=0x00040003
[23:44:05.613]    TraceD1_Pin=0x00040004
[23:44:05.613]    TraceD2_Pin=0x00040005
[23:44:05.614]    TraceD3_Pin=0x00040006
[23:44:05.614]  </debugvars>
[23:44:05.614]  
[23:44:05.614]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:44:05.614]    <block atomic="false" info="">
[23:44:05.615]      Sequence("CheckID");
[23:44:05.615]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:44:05.615]          <block atomic="false" info="">
[23:44:05.615]            __var pidr1 = 0;
[23:44:05.615]              // -> [pidr1 <= 0x00000000]
[23:44:05.615]            __var pidr2 = 0;
[23:44:05.616]              // -> [pidr2 <= 0x00000000]
[23:44:05.616]            __var jep106id = 0;
[23:44:05.616]              // -> [jep106id <= 0x00000000]
[23:44:05.616]            __var ROMTableBase = 0;
[23:44:05.616]              // -> [ROMTableBase <= 0x00000000]
[23:44:05.616]            __ap = 0;      // AHB-AP
[23:44:05.617]              // -> [__ap <= 0x00000000]
[23:44:05.617]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:44:05.617]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.617]              // -> [ROMTableBase <= 0xE00FD000]
[23:44:05.617]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:44:05.618]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.618]              // -> [pidr1 <= 0x00000004]
[23:44:05.618]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:44:05.620]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.620]              // -> [pidr2 <= 0x0000001A]
[23:44:05.620]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:44:05.620]              // -> [jep106id <= 0x00000020]
[23:44:05.620]          </block>
[23:44:05.620]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:44:05.620]            // if-block "jep106id != 0x20"
[23:44:05.620]              // =>  FALSE
[23:44:05.620]            // skip if-block "jep106id != 0x20"
[23:44:05.620]          </control>
[23:44:05.620]        </sequence>
[23:44:05.620]    </block>
[23:44:05.621]  </sequence>
[23:44:05.621]  
[23:44:05.635]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:44:05.635]  
[23:44:05.636]  <debugvars>
[23:44:05.636]    // Pre-defined
[23:44:05.636]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:05.636]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:44:05.636]    __dp=0x00000000
[23:44:05.636]    __ap=0x00000000
[23:44:05.636]    __traceout=0x00000001      (SWO Trace)
[23:44:05.637]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:05.637]    __FlashAddr=0x00000000
[23:44:05.637]    __FlashLen=0x00000000
[23:44:05.637]    __FlashArg=0x00000000
[23:44:05.637]    __FlashOp=0x00000000
[23:44:05.637]    __Result=0x00000000
[23:44:05.637]    
[23:44:05.637]    // User-defined
[23:44:05.638]    DbgMCU_CR=0x00000007
[23:44:05.638]    DbgMCU_APB1_Fz=0x00000000
[23:44:05.638]    DbgMCU_APB2_Fz=0x00000000
[23:44:05.638]    TraceClk_Pin=0x00040002
[23:44:05.638]    TraceD0_Pin=0x00040003
[23:44:05.638]    TraceD1_Pin=0x00040004
[23:44:05.639]    TraceD2_Pin=0x00040005
[23:44:05.639]    TraceD3_Pin=0x00040006
[23:44:05.639]  </debugvars>
[23:44:05.639]  
[23:44:05.639]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:44:05.639]    <block atomic="false" info="">
[23:44:05.639]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:44:05.640]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.640]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:44:05.641]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.641]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:44:05.641]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.641]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:44:05.642]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:05.642]    </block>
[23:44:05.642]  </sequence>
[23:44:05.642]  
[23:44:36.541]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:44:36.541]  
[23:44:36.541]  <debugvars>
[23:44:36.542]    // Pre-defined
[23:44:36.542]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:36.542]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:36.542]    __dp=0x00000000
[23:44:36.542]    __ap=0x00000000
[23:44:36.543]    __traceout=0x00000001      (SWO Trace)
[23:44:36.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:36.543]    __FlashAddr=0x00000000
[23:44:36.543]    __FlashLen=0x00000000
[23:44:36.543]    __FlashArg=0x00000000
[23:44:36.544]    __FlashOp=0x00000000
[23:44:36.544]    __Result=0x00000000
[23:44:36.544]    
[23:44:36.544]    // User-defined
[23:44:36.544]    DbgMCU_CR=0x00000007
[23:44:36.544]    DbgMCU_APB1_Fz=0x00000000
[23:44:36.545]    DbgMCU_APB2_Fz=0x00000000
[23:44:36.545]    TraceClk_Pin=0x00040002
[23:44:36.545]    TraceD0_Pin=0x00040003
[23:44:36.545]    TraceD1_Pin=0x00040004
[23:44:36.545]    TraceD2_Pin=0x00040005
[23:44:36.545]    TraceD3_Pin=0x00040006
[23:44:36.546]  </debugvars>
[23:44:36.546]  
[23:44:36.546]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:44:36.546]    <block atomic="false" info="">
[23:44:36.546]      Sequence("CheckID");
[23:44:36.547]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:44:36.547]          <block atomic="false" info="">
[23:44:36.547]            __var pidr1 = 0;
[23:44:36.547]              // -> [pidr1 <= 0x00000000]
[23:44:36.547]            __var pidr2 = 0;
[23:44:36.548]              // -> [pidr2 <= 0x00000000]
[23:44:36.548]            __var jep106id = 0;
[23:44:36.548]              // -> [jep106id <= 0x00000000]
[23:44:36.548]            __var ROMTableBase = 0;
[23:44:36.548]              // -> [ROMTableBase <= 0x00000000]
[23:44:36.548]            __ap = 0;      // AHB-AP
[23:44:36.549]              // -> [__ap <= 0x00000000]
[23:44:36.549]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:44:36.549]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.549]              // -> [ROMTableBase <= 0xE00FD000]
[23:44:36.549]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:44:36.550]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.550]              // -> [pidr1 <= 0x00000004]
[23:44:36.551]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:44:36.551]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.551]              // -> [pidr2 <= 0x0000001A]
[23:44:36.551]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:44:36.552]              // -> [jep106id <= 0x00000020]
[23:44:36.552]          </block>
[23:44:36.552]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:44:36.552]            // if-block "jep106id != 0x20"
[23:44:36.552]              // =>  FALSE
[23:44:36.552]            // skip if-block "jep106id != 0x20"
[23:44:36.552]          </control>
[23:44:36.553]        </sequence>
[23:44:36.553]    </block>
[23:44:36.553]  </sequence>
[23:44:36.553]  
[23:44:36.567]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:44:36.567]  
[23:44:36.567]  <debugvars>
[23:44:36.567]    // Pre-defined
[23:44:36.567]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:36.568]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:36.568]    __dp=0x00000000
[23:44:36.568]    __ap=0x00000000
[23:44:36.568]    __traceout=0x00000001      (SWO Trace)
[23:44:36.568]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:36.568]    __FlashAddr=0x00000000
[23:44:36.568]    __FlashLen=0x00000000
[23:44:36.569]    __FlashArg=0x00000000
[23:44:36.569]    __FlashOp=0x00000000
[23:44:36.569]    __Result=0x00000000
[23:44:36.569]    
[23:44:36.569]    // User-defined
[23:44:36.569]    DbgMCU_CR=0x00000007
[23:44:36.569]    DbgMCU_APB1_Fz=0x00000000
[23:44:36.570]    DbgMCU_APB2_Fz=0x00000000
[23:44:36.570]    TraceClk_Pin=0x00040002
[23:44:36.570]    TraceD0_Pin=0x00040003
[23:44:36.570]    TraceD1_Pin=0x00040004
[23:44:36.570]    TraceD2_Pin=0x00040005
[23:44:36.570]    TraceD3_Pin=0x00040006
[23:44:36.570]  </debugvars>
[23:44:36.570]  
[23:44:36.571]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:44:36.571]    <block atomic="false" info="">
[23:44:36.571]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:44:36.571]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.571]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:44:36.572]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.572]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:44:36.572]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.573]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:44:36.573]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.573]    </block>
[23:44:36.573]  </sequence>
[23:44:36.574]  
[23:44:36.590]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:44:36.590]  
[23:44:36.590]  <debugvars>
[23:44:36.590]    // Pre-defined
[23:44:36.590]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:36.591]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:36.591]    __dp=0x00000000
[23:44:36.591]    __ap=0x00000000
[23:44:36.591]    __traceout=0x00000001      (SWO Trace)
[23:44:36.591]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:36.591]    __FlashAddr=0x00000000
[23:44:36.592]    __FlashLen=0x00000000
[23:44:36.592]    __FlashArg=0x00000000
[23:44:36.592]    __FlashOp=0x00000000
[23:44:36.592]    __Result=0x00000000
[23:44:36.592]    
[23:44:36.592]    // User-defined
[23:44:36.592]    DbgMCU_CR=0x00000007
[23:44:36.593]    DbgMCU_APB1_Fz=0x00000000
[23:44:36.593]    DbgMCU_APB2_Fz=0x00000000
[23:44:36.593]    TraceClk_Pin=0x00040002
[23:44:36.593]    TraceD0_Pin=0x00040003
[23:44:36.593]    TraceD1_Pin=0x00040004
[23:44:36.593]    TraceD2_Pin=0x00040005
[23:44:36.593]    TraceD3_Pin=0x00040006
[23:44:36.594]  </debugvars>
[23:44:36.594]  
[23:44:36.594]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:44:36.594]    <block atomic="false" info="">
[23:44:36.594]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:44:36.594]        // -> [traceSWO <= 0x00000001]
[23:44:36.594]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:44:36.594]        // -> [traceTPIU <= 0x00000000]
[23:44:36.595]    </block>
[23:44:36.595]    <control if="traceSWO" while="" timeout="0" info="">
[23:44:36.595]      // if-block "traceSWO"
[23:44:36.595]        // =>  TRUE
[23:44:36.595]      <block atomic="false" info="">
[23:44:36.595]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:44:36.595]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:44:36.596]            <block atomic="false" info="">
[23:44:36.596]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:44:36.596]                // -> [dbgmcu_val <= 0x00000000]
[23:44:36.596]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:44:36.596]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:44:36.596]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:44:36.597]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.597]                // -> [dbgmcu_val <= 0x00000007]
[23:44:36.597]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:44:36.597]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:44:36.597]              Sequence("ConfigureTraceSWOPin");
[23:44:36.597]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:44:36.597]                  <block atomic="false" info="">
[23:44:36.597]                    __var pin     = 0;
[23:44:36.598]                      // -> [pin <= 0x00000000]
[23:44:36.598]                    __var port    = 0;
[23:44:36.598]                      // -> [port <= 0x00000000]
[23:44:36.598]                    __var portAdr = 0;
[23:44:36.598]                      // -> [portAdr <= 0x00000000]
[23:44:36.598]                    __var pos     = 0;
[23:44:36.598]                      // -> [pos <= 0x00000000]
[23:44:36.599]                    __var SWO_Pin = 0x00010003;          // PB3
[23:44:36.599]                      // -> [SWO_Pin <= 0x00010003]
[23:44:36.599]                  </block>
[23:44:36.599]                  <block atomic="false" info="configure SWO">
[23:44:36.599]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:44:36.599]                      // -> [pin <= 0x00000003]
[23:44:36.599]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:44:36.599]                      // -> [port <= 0x00000001]
[23:44:36.599]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:44:36.600]                      // -> [portAdr <= 0x40020400]
[23:44:36.600]                    pos = pin * 2;
[23:44:36.600]                      // -> [pos <= 0x00000006]
[23:44:36.600]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:44:36.600]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.601]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.601]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:44:36.601]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.602]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.602]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:44:36.602]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.603]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.603]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:44:36.603]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.604]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.604]                  </block>
[23:44:36.604]                  <control if="pin <  8" while="" timeout="0" info="">
[23:44:36.605]                    // if-block "pin <  8"
[23:44:36.605]                      // =>  TRUE
[23:44:36.605]                    <block atomic="false" info="">
[23:44:36.605]                      pos = ((pin    ) & 7) * 4;
[23:44:36.605]                        // -> [pos <= 0x0000000C]
[23:44:36.605]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:44:36.606]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.606]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.606]                    </block>
[23:44:36.607]                    // end if-block "pin <  8"
[23:44:36.607]                  </control>
[23:44:36.607]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:44:36.607]                    // if-block "pin >= 8"
[23:44:36.607]                      // =>  FALSE
[23:44:36.607]                    // skip if-block "pin >= 8"
[23:44:36.607]                  </control>
[23:44:36.608]                </sequence>
[23:44:36.608]            </block>
[23:44:36.608]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:44:36.608]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:44:36.609]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.609]            </block>
[23:44:36.609]          </sequence>
[23:44:36.609]      </block>
[23:44:36.609]      // end if-block "traceSWO"
[23:44:36.609]    </control>
[23:44:36.610]    <control if="traceTPIU" while="" timeout="0" info="">
[23:44:36.610]      // if-block "traceTPIU"
[23:44:36.610]        // =>  FALSE
[23:44:36.610]      // skip if-block "traceTPIU"
[23:44:36.610]    </control>
[23:44:36.610]  </sequence>
[23:44:36.610]  
[23:44:36.614]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:44:36.614]  
[23:44:36.614]  <debugvars>
[23:44:36.614]    // Pre-defined
[23:44:36.615]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:36.615]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:36.615]    __dp=0x00000000
[23:44:36.615]    __ap=0x00000000
[23:44:36.615]    __traceout=0x00000001      (SWO Trace)
[23:44:36.615]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:36.616]    __FlashAddr=0x00000000
[23:44:36.616]    __FlashLen=0x00000000
[23:44:36.616]    __FlashArg=0x00000000
[23:44:36.616]    __FlashOp=0x00000000
[23:44:36.616]    __Result=0x00000000
[23:44:36.616]    
[23:44:36.616]    // User-defined
[23:44:36.616]    DbgMCU_CR=0x00000007
[23:44:36.617]    DbgMCU_APB1_Fz=0x00000000
[23:44:36.617]    DbgMCU_APB2_Fz=0x00000000
[23:44:36.617]    TraceClk_Pin=0x00040002
[23:44:36.617]    TraceD0_Pin=0x00040003
[23:44:36.617]    TraceD1_Pin=0x00040004
[23:44:36.617]    TraceD2_Pin=0x00040005
[23:44:36.617]    TraceD3_Pin=0x00040006
[23:44:36.618]  </debugvars>
[23:44:36.618]  
[23:44:36.618]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:44:36.618]    <block atomic="false" info="">
[23:44:36.618]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:44:36.618]        // -> [traceSWO <= 0x00000001]
[23:44:36.619]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:44:36.619]        // -> [traceTPIU <= 0x00000000]
[23:44:36.619]    </block>
[23:44:36.619]    <control if="traceSWO" while="" timeout="0" info="">
[23:44:36.619]      // if-block "traceSWO"
[23:44:36.619]        // =>  TRUE
[23:44:36.619]      <block atomic="false" info="">
[23:44:36.619]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:44:36.619]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:44:36.619]            <block atomic="false" info="">
[23:44:36.620]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:44:36.620]                // -> [dbgmcu_val <= 0x00000000]
[23:44:36.620]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:44:36.620]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:44:36.620]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:44:36.621]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.621]                // -> [dbgmcu_val <= 0x00000007]
[23:44:36.621]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:44:36.621]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:44:36.621]              Sequence("ConfigureTraceSWOPin");
[23:44:36.621]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:44:36.621]                  <block atomic="false" info="">
[23:44:36.621]                    __var pin     = 0;
[23:44:36.621]                      // -> [pin <= 0x00000000]
[23:44:36.622]                    __var port    = 0;
[23:44:36.622]                      // -> [port <= 0x00000000]
[23:44:36.622]                    __var portAdr = 0;
[23:44:36.622]                      // -> [portAdr <= 0x00000000]
[23:44:36.622]                    __var pos     = 0;
[23:44:36.622]                      // -> [pos <= 0x00000000]
[23:44:36.622]                    __var SWO_Pin = 0x00010003;          // PB3
[23:44:36.622]                      // -> [SWO_Pin <= 0x00010003]
[23:44:36.622]                  </block>
[23:44:36.623]                  <block atomic="false" info="configure SWO">
[23:44:36.623]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:44:36.623]                      // -> [pin <= 0x00000003]
[23:44:36.623]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:44:36.623]                      // -> [port <= 0x00000001]
[23:44:36.623]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:44:36.623]                      // -> [portAdr <= 0x40020400]
[23:44:36.623]                    pos = pin * 2;
[23:44:36.623]                      // -> [pos <= 0x00000006]
[23:44:36.624]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:44:36.624]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.624]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.624]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:44:36.625]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.625]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.625]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:44:36.626]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.626]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.627]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:44:36.627]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.627]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.627]                  </block>
[23:44:36.628]                  <control if="pin <  8" while="" timeout="0" info="">
[23:44:36.628]                    // if-block "pin <  8"
[23:44:36.628]                      // =>  TRUE
[23:44:36.628]                    <block atomic="false" info="">
[23:44:36.628]                      pos = ((pin    ) & 7) * 4;
[23:44:36.628]                        // -> [pos <= 0x0000000C]
[23:44:36.628]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:44:36.629]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.629]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.629]                    </block>
[23:44:36.630]                    // end if-block "pin <  8"
[23:44:36.630]                  </control>
[23:44:36.630]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:44:36.630]                    // if-block "pin >= 8"
[23:44:36.630]                      // =>  FALSE
[23:44:36.630]                    // skip if-block "pin >= 8"
[23:44:36.630]                  </control>
[23:44:36.630]                </sequence>
[23:44:36.630]            </block>
[23:44:36.631]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:44:36.631]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:44:36.631]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.631]            </block>
[23:44:36.631]          </sequence>
[23:44:36.631]      </block>
[23:44:36.632]      // end if-block "traceSWO"
[23:44:36.632]    </control>
[23:44:36.632]    <control if="traceTPIU" while="" timeout="0" info="">
[23:44:36.632]      // if-block "traceTPIU"
[23:44:36.632]        // =>  FALSE
[23:44:36.632]      // skip if-block "traceTPIU"
[23:44:36.632]    </control>
[23:44:36.632]  </sequence>
[23:44:36.632]  
[23:44:36.859]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:44:36.859]  
[23:44:36.860]  <debugvars>
[23:44:36.860]    // Pre-defined
[23:44:36.860]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:36.860]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:36.861]    __dp=0x00000000
[23:44:36.861]    __ap=0x00000000
[23:44:36.861]    __traceout=0x00000001      (SWO Trace)
[23:44:36.861]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:36.861]    __FlashAddr=0x00000000
[23:44:36.862]    __FlashLen=0x00000000
[23:44:36.862]    __FlashArg=0x00000000
[23:44:36.862]    __FlashOp=0x00000000
[23:44:36.862]    __Result=0x00000000
[23:44:36.862]    
[23:44:36.862]    // User-defined
[23:44:36.862]    DbgMCU_CR=0x00000007
[23:44:36.863]    DbgMCU_APB1_Fz=0x00000000
[23:44:36.863]    DbgMCU_APB2_Fz=0x00000000
[23:44:36.863]    TraceClk_Pin=0x00040002
[23:44:36.863]    TraceD0_Pin=0x00040003
[23:44:36.863]    TraceD1_Pin=0x00040004
[23:44:36.863]    TraceD2_Pin=0x00040005
[23:44:36.864]    TraceD3_Pin=0x00040006
[23:44:36.864]  </debugvars>
[23:44:36.864]  
[23:44:36.864]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:44:36.864]    <block atomic="false" info="">
[23:44:36.865]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:44:36.865]        // -> [traceSWO <= 0x00000001]
[23:44:36.865]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:44:36.865]        // -> [traceTPIU <= 0x00000000]
[23:44:36.865]    </block>
[23:44:36.865]    <control if="traceSWO" while="" timeout="0" info="">
[23:44:36.866]      // if-block "traceSWO"
[23:44:36.866]        // =>  TRUE
[23:44:36.866]      <block atomic="false" info="">
[23:44:36.866]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:44:36.866]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:44:36.866]            <block atomic="false" info="">
[23:44:36.866]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:44:36.867]                // -> [dbgmcu_val <= 0x00000000]
[23:44:36.867]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:44:36.867]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:44:36.867]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:44:36.868]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.868]                // -> [dbgmcu_val <= 0x00000007]
[23:44:36.868]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:44:36.868]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:44:36.868]              Sequence("ConfigureTraceSWOPin");
[23:44:36.868]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:44:36.868]                  <block atomic="false" info="">
[23:44:36.869]                    __var pin     = 0;
[23:44:36.869]                      // -> [pin <= 0x00000000]
[23:44:36.869]                    __var port    = 0;
[23:44:36.869]                      // -> [port <= 0x00000000]
[23:44:36.869]                    __var portAdr = 0;
[23:44:36.869]                      // -> [portAdr <= 0x00000000]
[23:44:36.869]                    __var pos     = 0;
[23:44:36.869]                      // -> [pos <= 0x00000000]
[23:44:36.870]                    __var SWO_Pin = 0x00010003;          // PB3
[23:44:36.870]                      // -> [SWO_Pin <= 0x00010003]
[23:44:36.870]                  </block>
[23:44:36.870]                  <block atomic="false" info="configure SWO">
[23:44:36.870]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:44:36.870]                      // -> [pin <= 0x00000003]
[23:44:36.870]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:44:36.870]                      // -> [port <= 0x00000001]
[23:44:36.871]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:44:36.871]                      // -> [portAdr <= 0x40020400]
[23:44:36.871]                    pos = pin * 2;
[23:44:36.871]                      // -> [pos <= 0x00000006]
[23:44:36.871]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:44:36.871]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.872]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.872]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:44:36.872]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.873]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.873]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:44:36.873]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.874]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.874]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:44:36.874]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.875]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.875]                  </block>
[23:44:36.875]                  <control if="pin <  8" while="" timeout="0" info="">
[23:44:36.875]                    // if-block "pin <  8"
[23:44:36.875]                      // =>  TRUE
[23:44:36.875]                    <block atomic="false" info="">
[23:44:36.875]                      pos = ((pin    ) & 7) * 4;
[23:44:36.876]                        // -> [pos <= 0x0000000C]
[23:44:36.876]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:44:36.876]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.877]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.877]                    </block>
[23:44:36.877]                    // end if-block "pin <  8"
[23:44:36.877]                  </control>
[23:44:36.877]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:44:36.877]                    // if-block "pin >= 8"
[23:44:36.877]                      // =>  FALSE
[23:44:36.877]                    // skip if-block "pin >= 8"
[23:44:36.877]                  </control>
[23:44:36.878]                </sequence>
[23:44:36.878]            </block>
[23:44:36.878]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:44:36.878]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:44:36.878]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:36.878]            </block>
[23:44:36.879]          </sequence>
[23:44:36.879]      </block>
[23:44:36.879]      // end if-block "traceSWO"
[23:44:36.879]    </control>
[23:44:36.879]    <control if="traceTPIU" while="" timeout="0" info="">
[23:44:36.879]      // if-block "traceTPIU"
[23:44:36.879]        // =>  FALSE
[23:44:36.879]      // skip if-block "traceTPIU"
[23:44:36.879]    </control>
[23:44:36.879]  </sequence>
[23:44:36.880]  
[23:44:59.850]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:44:59.850]  
[23:44:59.850]  <debugvars>
[23:44:59.850]    // Pre-defined
[23:44:59.851]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:44:59.851]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:44:59.851]    __dp=0x00000000
[23:44:59.851]    __ap=0x00000000
[23:44:59.851]    __traceout=0x00000001      (SWO Trace)
[23:44:59.852]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:44:59.852]    __FlashAddr=0x00000000
[23:44:59.852]    __FlashLen=0x00000000
[23:44:59.852]    __FlashArg=0x00000000
[23:44:59.852]    __FlashOp=0x00000000
[23:44:59.852]    __Result=0x00000000
[23:44:59.853]    
[23:44:59.853]    // User-defined
[23:44:59.853]    DbgMCU_CR=0x00000007
[23:44:59.853]    DbgMCU_APB1_Fz=0x00000000
[23:44:59.853]    DbgMCU_APB2_Fz=0x00000000
[23:44:59.853]    TraceClk_Pin=0x00040002
[23:44:59.853]    TraceD0_Pin=0x00040003
[23:44:59.854]    TraceD1_Pin=0x00040004
[23:44:59.854]    TraceD2_Pin=0x00040005
[23:44:59.854]    TraceD3_Pin=0x00040006
[23:44:59.854]  </debugvars>
[23:44:59.854]  
[23:44:59.854]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:44:59.855]    <block atomic="false" info="">
[23:44:59.855]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:44:59.855]        // -> [traceSWO <= 0x00000001]
[23:44:59.855]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:44:59.855]        // -> [traceTPIU <= 0x00000000]
[23:44:59.856]    </block>
[23:44:59.856]    <control if="traceSWO" while="" timeout="0" info="">
[23:44:59.856]      // if-block "traceSWO"
[23:44:59.856]        // =>  TRUE
[23:44:59.856]      <block atomic="false" info="">
[23:44:59.856]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:44:59.856]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:44:59.857]            <block atomic="false" info="">
[23:44:59.857]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:44:59.857]                // -> [dbgmcu_val <= 0x00000000]
[23:44:59.857]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:44:59.857]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:44:59.857]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:44:59.858]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.858]                // -> [dbgmcu_val <= 0x00000007]
[23:44:59.858]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:44:59.858]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:44:59.858]              Sequence("ConfigureTraceSWOPin");
[23:44:59.858]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:44:59.859]                  <block atomic="false" info="">
[23:44:59.859]                    __var pin     = 0;
[23:44:59.859]                      // -> [pin <= 0x00000000]
[23:44:59.859]                    __var port    = 0;
[23:44:59.859]                      // -> [port <= 0x00000000]
[23:44:59.859]                    __var portAdr = 0;
[23:44:59.859]                      // -> [portAdr <= 0x00000000]
[23:44:59.860]                    __var pos     = 0;
[23:44:59.860]                      // -> [pos <= 0x00000000]
[23:44:59.860]                    __var SWO_Pin = 0x00010003;          // PB3
[23:44:59.860]                      // -> [SWO_Pin <= 0x00010003]
[23:44:59.860]                  </block>
[23:44:59.860]                  <block atomic="false" info="configure SWO">
[23:44:59.860]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:44:59.861]                      // -> [pin <= 0x00000003]
[23:44:59.861]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:44:59.861]                      // -> [port <= 0x00000001]
[23:44:59.861]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:44:59.861]                      // -> [portAdr <= 0x40020400]
[23:44:59.861]                    pos = pin * 2;
[23:44:59.861]                      // -> [pos <= 0x00000006]
[23:44:59.861]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:44:59.862]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.862]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.862]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:44:59.863]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.863]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.863]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:44:59.864]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.864]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.864]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:44:59.865]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.865]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.866]                  </block>
[23:44:59.866]                  <control if="pin <  8" while="" timeout="0" info="">
[23:44:59.866]                    // if-block "pin <  8"
[23:44:59.866]                      // =>  TRUE
[23:44:59.866]                    <block atomic="false" info="">
[23:44:59.866]                      pos = ((pin    ) & 7) * 4;
[23:44:59.866]                        // -> [pos <= 0x0000000C]
[23:44:59.867]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:44:59.867]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.867]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.868]                    </block>
[23:44:59.868]                    // end if-block "pin <  8"
[23:44:59.868]                  </control>
[23:44:59.868]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:44:59.868]                    // if-block "pin >= 8"
[23:44:59.868]                      // =>  FALSE
[23:44:59.868]                    // skip if-block "pin >= 8"
[23:44:59.868]                  </control>
[23:44:59.869]                </sequence>
[23:44:59.869]            </block>
[23:44:59.869]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:44:59.869]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:44:59.869]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:44:59.870]            </block>
[23:44:59.870]          </sequence>
[23:44:59.870]      </block>
[23:44:59.870]      // end if-block "traceSWO"
[23:44:59.870]    </control>
[23:44:59.870]    <control if="traceTPIU" while="" timeout="0" info="">
[23:44:59.870]      // if-block "traceTPIU"
[23:44:59.871]        // =>  FALSE
[23:44:59.871]      // skip if-block "traceTPIU"
[23:44:59.871]    </control>
[23:44:59.871]  </sequence>
[23:44:59.871]  
[23:45:25.568]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:45:25.568]  
[23:45:25.568]  <debugvars>
[23:45:25.569]    // Pre-defined
[23:45:25.569]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:45:25.569]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:45:25.569]    __dp=0x00000000
[23:45:25.570]    __ap=0x00000000
[23:45:25.570]    __traceout=0x00000001      (SWO Trace)
[23:45:25.570]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:45:25.570]    __FlashAddr=0x00000000
[23:45:25.570]    __FlashLen=0x00000000
[23:45:25.571]    __FlashArg=0x00000000
[23:45:25.571]    __FlashOp=0x00000000
[23:45:25.571]    __Result=0x00000000
[23:45:25.571]    
[23:45:25.571]    // User-defined
[23:45:25.571]    DbgMCU_CR=0x00000007
[23:45:25.571]    DbgMCU_APB1_Fz=0x00000000
[23:45:25.572]    DbgMCU_APB2_Fz=0x00000000
[23:45:25.572]    TraceClk_Pin=0x00040002
[23:45:25.572]    TraceD0_Pin=0x00040003
[23:45:25.572]    TraceD1_Pin=0x00040004
[23:45:25.572]    TraceD2_Pin=0x00040005
[23:45:25.573]    TraceD3_Pin=0x00040006
[23:45:25.573]  </debugvars>
[23:45:25.573]  
[23:45:25.573]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:45:25.573]    <block atomic="false" info="">
[23:45:25.574]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:45:25.574]        // -> [traceSWO <= 0x00000001]
[23:45:25.574]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:45:25.574]        // -> [traceTPIU <= 0x00000000]
[23:45:25.574]    </block>
[23:45:25.574]    <control if="traceSWO" while="" timeout="0" info="">
[23:45:25.575]      // if-block "traceSWO"
[23:45:25.575]        // =>  TRUE
[23:45:25.575]      <block atomic="false" info="">
[23:45:25.575]        Sequence("DisableTraceSWO");
[23:45:25.575]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:45:25.575]            <block atomic="false" info="">
[23:45:25.576]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:45:25.576]                // -> [dbgmcu_val <= 0x00000000]
[23:45:25.576]            </block>
[23:45:25.576]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:45:25.576]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:45:25.577]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:45:25.577]                // -> [dbgmcu_val <= 0x00000007]
[23:45:25.577]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:45:25.578]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:45:25.578]            </block>
[23:45:25.578]          </sequence>
[23:45:25.578]      </block>
[23:45:25.578]      // end if-block "traceSWO"
[23:45:25.579]    </control>
[23:45:25.579]    <control if="traceTPIU" while="" timeout="0" info="">
[23:45:25.579]      // if-block "traceTPIU"
[23:45:25.579]        // =>  FALSE
[23:45:25.579]      // skip if-block "traceTPIU"
[23:45:25.579]    </control>
[23:45:25.580]  </sequence>
[23:45:25.580]  
[23:47:32.488]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:47:32.488]  
[23:47:32.489]  <debugvars>
[23:47:32.489]    // Pre-defined
[23:47:32.489]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:47:32.489]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:47:32.489]    __dp=0x00000000
[23:47:32.490]    __ap=0x00000000
[23:47:32.490]    __traceout=0x00000001      (SWO Trace)
[23:47:32.490]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:47:32.490]    __FlashAddr=0x00000000
[23:47:32.490]    __FlashLen=0x00000000
[23:47:32.490]    __FlashArg=0x00000000
[23:47:32.491]    __FlashOp=0x00000000
[23:47:32.491]    __Result=0x00000000
[23:47:32.491]    
[23:47:32.491]    // User-defined
[23:47:32.491]    DbgMCU_CR=0x00000007
[23:47:32.491]    DbgMCU_APB1_Fz=0x00000000
[23:47:32.491]    DbgMCU_APB2_Fz=0x00000000
[23:47:32.492]    TraceClk_Pin=0x00040002
[23:47:32.492]    TraceD0_Pin=0x00040003
[23:47:32.492]    TraceD1_Pin=0x00040004
[23:47:32.492]    TraceD2_Pin=0x00040005
[23:47:32.492]    TraceD3_Pin=0x00040006
[23:47:32.492]  </debugvars>
[23:47:32.492]  
[23:47:32.492]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:47:32.493]    <block atomic="false" info="">
[23:47:32.493]      Sequence("CheckID");
[23:47:32.493]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:47:32.493]          <block atomic="false" info="">
[23:47:32.493]            __var pidr1 = 0;
[23:47:32.493]              // -> [pidr1 <= 0x00000000]
[23:47:32.493]            __var pidr2 = 0;
[23:47:32.494]              // -> [pidr2 <= 0x00000000]
[23:47:32.494]            __var jep106id = 0;
[23:47:32.494]              // -> [jep106id <= 0x00000000]
[23:47:32.494]            __var ROMTableBase = 0;
[23:47:32.494]              // -> [ROMTableBase <= 0x00000000]
[23:47:32.494]            __ap = 0;      // AHB-AP
[23:47:32.494]              // -> [__ap <= 0x00000000]
[23:47:32.494]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:47:32.495]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.495]              // -> [ROMTableBase <= 0xE00FD000]
[23:47:32.495]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:47:32.496]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.496]              // -> [pidr1 <= 0x00000004]
[23:47:32.496]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:47:32.496]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.496]              // -> [pidr2 <= 0x0000001A]
[23:47:32.497]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:47:32.497]              // -> [jep106id <= 0x00000020]
[23:47:32.497]          </block>
[23:47:32.497]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:47:32.497]            // if-block "jep106id != 0x20"
[23:47:32.497]              // =>  FALSE
[23:47:32.497]            // skip if-block "jep106id != 0x20"
[23:47:32.497]          </control>
[23:47:32.498]        </sequence>
[23:47:32.499]    </block>
[23:47:32.499]  </sequence>
[23:47:32.499]  
[23:47:32.514]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:47:32.514]  
[23:47:32.514]  <debugvars>
[23:47:32.514]    // Pre-defined
[23:47:32.514]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:47:32.515]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:47:32.515]    __dp=0x00000000
[23:47:32.515]    __ap=0x00000000
[23:47:32.515]    __traceout=0x00000001      (SWO Trace)
[23:47:32.515]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:47:32.516]    __FlashAddr=0x00000000
[23:47:32.516]    __FlashLen=0x00000000
[23:47:32.516]    __FlashArg=0x00000000
[23:47:32.516]    __FlashOp=0x00000000
[23:47:32.516]    __Result=0x00000000
[23:47:32.517]    
[23:47:32.517]    // User-defined
[23:47:32.517]    DbgMCU_CR=0x00000007
[23:47:32.517]    DbgMCU_APB1_Fz=0x00000000
[23:47:32.517]    DbgMCU_APB2_Fz=0x00000000
[23:47:32.517]    TraceClk_Pin=0x00040002
[23:47:32.518]    TraceD0_Pin=0x00040003
[23:47:32.518]    TraceD1_Pin=0x00040004
[23:47:32.518]    TraceD2_Pin=0x00040005
[23:47:32.518]    TraceD3_Pin=0x00040006
[23:47:32.518]  </debugvars>
[23:47:32.518]  
[23:47:32.519]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:47:32.519]    <block atomic="false" info="">
[23:47:32.519]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:47:32.520]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.520]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:47:32.520]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.521]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:47:32.521]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.522]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:47:32.522]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:47:32.523]    </block>
[23:47:32.523]  </sequence>
[23:47:32.523]  
[23:48:03.946]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:48:03.946]  
[23:48:03.946]  <debugvars>
[23:48:03.947]    // Pre-defined
[23:48:03.947]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:48:03.947]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:48:03.947]    __dp=0x00000000
[23:48:03.947]    __ap=0x00000000
[23:48:03.947]    __traceout=0x00000001      (SWO Trace)
[23:48:03.947]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:48:03.947]    __FlashAddr=0x00000000
[23:48:03.948]    __FlashLen=0x00000000
[23:48:03.948]    __FlashArg=0x00000000
[23:48:03.948]    __FlashOp=0x00000000
[23:48:03.948]    __Result=0x00000000
[23:48:03.948]    
[23:48:03.948]    // User-defined
[23:48:03.948]    DbgMCU_CR=0x00000007
[23:48:03.948]    DbgMCU_APB1_Fz=0x00000000
[23:48:03.948]    DbgMCU_APB2_Fz=0x00000000
[23:48:03.948]    TraceClk_Pin=0x00040002
[23:48:03.949]    TraceD0_Pin=0x00040003
[23:48:03.949]    TraceD1_Pin=0x00040004
[23:48:03.949]    TraceD2_Pin=0x00040005
[23:48:03.949]    TraceD3_Pin=0x00040006
[23:48:03.949]  </debugvars>
[23:48:03.949]  
[23:48:03.949]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:48:03.949]    <block atomic="false" info="">
[23:48:03.950]      Sequence("CheckID");
[23:48:03.950]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:48:03.950]          <block atomic="false" info="">
[23:48:03.950]            __var pidr1 = 0;
[23:48:03.950]              // -> [pidr1 <= 0x00000000]
[23:48:03.950]            __var pidr2 = 0;
[23:48:03.950]              // -> [pidr2 <= 0x00000000]
[23:48:03.950]            __var jep106id = 0;
[23:48:03.951]              // -> [jep106id <= 0x00000000]
[23:48:03.951]            __var ROMTableBase = 0;
[23:48:03.951]              // -> [ROMTableBase <= 0x00000000]
[23:48:03.951]            __ap = 0;      // AHB-AP
[23:48:03.951]              // -> [__ap <= 0x00000000]
[23:48:03.951]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:48:03.951]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.952]              // -> [ROMTableBase <= 0xE00FD000]
[23:48:03.952]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:48:03.952]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.952]              // -> [pidr1 <= 0x00000004]
[23:48:03.952]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:48:03.953]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.953]              // -> [pidr2 <= 0x0000001A]
[23:48:03.953]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:48:03.953]              // -> [jep106id <= 0x00000020]
[23:48:03.953]          </block>
[23:48:03.953]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:48:03.954]            // if-block "jep106id != 0x20"
[23:48:03.954]              // =>  FALSE
[23:48:03.954]            // skip if-block "jep106id != 0x20"
[23:48:03.954]          </control>
[23:48:03.954]        </sequence>
[23:48:03.954]    </block>
[23:48:03.954]  </sequence>
[23:48:03.954]  
[23:48:03.969]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:48:03.969]  
[23:48:03.969]  <debugvars>
[23:48:03.969]    // Pre-defined
[23:48:03.969]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:48:03.969]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:48:03.970]    __dp=0x00000000
[23:48:03.970]    __ap=0x00000000
[23:48:03.970]    __traceout=0x00000001      (SWO Trace)
[23:48:03.970]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:48:03.970]    __FlashAddr=0x00000000
[23:48:03.970]    __FlashLen=0x00000000
[23:48:03.970]    __FlashArg=0x00000000
[23:48:03.970]    __FlashOp=0x00000000
[23:48:03.970]    __Result=0x00000000
[23:48:03.971]    
[23:48:03.971]    // User-defined
[23:48:03.971]    DbgMCU_CR=0x00000007
[23:48:03.971]    DbgMCU_APB1_Fz=0x00000000
[23:48:03.971]    DbgMCU_APB2_Fz=0x00000000
[23:48:03.971]    TraceClk_Pin=0x00040002
[23:48:03.971]    TraceD0_Pin=0x00040003
[23:48:03.971]    TraceD1_Pin=0x00040004
[23:48:03.971]    TraceD2_Pin=0x00040005
[23:48:03.971]    TraceD3_Pin=0x00040006
[23:48:03.972]  </debugvars>
[23:48:03.972]  
[23:48:03.972]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:48:03.972]    <block atomic="false" info="">
[23:48:03.972]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:48:03.973]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.973]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:48:03.973]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.973]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:48:03.974]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.974]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:48:03.974]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.974]    </block>
[23:48:03.975]  </sequence>
[23:48:03.975]  
[23:48:03.991]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:48:03.991]  
[23:48:03.991]  <debugvars>
[23:48:03.991]    // Pre-defined
[23:48:03.991]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:48:03.991]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:48:03.992]    __dp=0x00000000
[23:48:03.992]    __ap=0x00000000
[23:48:03.992]    __traceout=0x00000001      (SWO Trace)
[23:48:03.992]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:48:03.992]    __FlashAddr=0x00000000
[23:48:03.992]    __FlashLen=0x00000000
[23:48:03.992]    __FlashArg=0x00000000
[23:48:03.992]    __FlashOp=0x00000000
[23:48:03.993]    __Result=0x00000000
[23:48:03.993]    
[23:48:03.993]    // User-defined
[23:48:03.993]    DbgMCU_CR=0x00000007
[23:48:03.993]    DbgMCU_APB1_Fz=0x00000000
[23:48:03.993]    DbgMCU_APB2_Fz=0x00000000
[23:48:03.993]    TraceClk_Pin=0x00040002
[23:48:03.993]    TraceD0_Pin=0x00040003
[23:48:03.993]    TraceD1_Pin=0x00040004
[23:48:03.993]    TraceD2_Pin=0x00040005
[23:48:03.994]    TraceD3_Pin=0x00040006
[23:48:03.994]  </debugvars>
[23:48:03.994]  
[23:48:03.994]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:48:03.994]    <block atomic="false" info="">
[23:48:03.994]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:48:03.995]        // -> [traceSWO <= 0x00000001]
[23:48:03.995]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:48:03.995]        // -> [traceTPIU <= 0x00000000]
[23:48:03.995]    </block>
[23:48:03.995]    <control if="traceSWO" while="" timeout="0" info="">
[23:48:03.995]      // if-block "traceSWO"
[23:48:03.995]        // =>  TRUE
[23:48:03.995]      <block atomic="false" info="">
[23:48:03.995]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:48:03.996]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:48:03.996]            <block atomic="false" info="">
[23:48:03.996]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:48:03.996]                // -> [dbgmcu_val <= 0x00000000]
[23:48:03.996]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:48:03.996]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:48:03.996]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:48:03.997]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:48:03.997]                // -> [dbgmcu_val <= 0x00000007]
[23:48:03.997]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:48:03.997]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:48:03.997]              Sequence("ConfigureTraceSWOPin");
[23:48:03.997]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:48:03.997]                  <block atomic="false" info="">
[23:48:03.998]                    __var pin     = 0;
[23:48:03.998]                      // -> [pin <= 0x00000000]
[23:48:03.998]                    __var port    = 0;
[23:48:03.998]                      // -> [port <= 0x00000000]
[23:48:03.998]                    __var portAdr = 0;
[23:48:03.998]                      // -> [portAdr <= 0x00000000]
[23:48:03.998]                    __var pos     = 0;
[23:48:03.998]                      // -> [pos <= 0x00000000]
[23:48:03.998]                    __var SWO_Pin = 0x00010003;          // PB3
[23:48:03.999]                      // -> [SWO_Pin <= 0x00010003]
[23:48:03.999]                  </block>
[23:48:03.999]                  <block atomic="false" info="configure SWO">
[23:48:03.999]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:48:03.999]                      // -> [pin <= 0x00000003]
[23:48:03.999]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:48:03.999]                      // -> [port <= 0x00000001]
[23:48:03.999]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:48:03.999]                      // -> [portAdr <= 0x40020400]
[23:48:04.000]                    pos = pin * 2;
[23:48:04.000]                      // -> [pos <= 0x00000006]
[23:48:04.000]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:48:04.000]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.001]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.001]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:48:04.001]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.002]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.002]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:48:04.002]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.003]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.003]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:48:04.003]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.004]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.004]                  </block>
[23:48:04.004]                  <control if="pin <  8" while="" timeout="0" info="">
[23:48:04.004]                    // if-block "pin <  8"
[23:48:04.004]                      // =>  TRUE
[23:48:04.004]                    <block atomic="false" info="">
[23:48:04.004]                      pos = ((pin    ) & 7) * 4;
[23:48:04.005]                        // -> [pos <= 0x0000000C]
[23:48:04.005]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:48:04.005]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.005]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.006]                    </block>
[23:48:04.006]                    // end if-block "pin <  8"
[23:48:04.006]                  </control>
[23:48:04.006]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:48:04.006]                    // if-block "pin >= 8"
[23:48:04.006]                      // =>  FALSE
[23:48:04.006]                    // skip if-block "pin >= 8"
[23:48:04.006]                  </control>
[23:48:04.007]                </sequence>
[23:48:04.007]            </block>
[23:48:04.007]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:48:04.007]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:48:04.007]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.008]            </block>
[23:48:04.008]          </sequence>
[23:48:04.008]      </block>
[23:48:04.008]      // end if-block "traceSWO"
[23:48:04.008]    </control>
[23:48:04.008]    <control if="traceTPIU" while="" timeout="0" info="">
[23:48:04.008]      // if-block "traceTPIU"
[23:48:04.009]        // =>  FALSE
[23:48:04.009]      // skip if-block "traceTPIU"
[23:48:04.009]    </control>
[23:48:04.009]  </sequence>
[23:48:04.009]  
[23:48:04.013]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:48:04.013]  
[23:48:04.013]  <debugvars>
[23:48:04.013]    // Pre-defined
[23:48:04.013]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:48:04.013]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:48:04.013]    __dp=0x00000000
[23:48:04.013]    __ap=0x00000000
[23:48:04.014]    __traceout=0x00000001      (SWO Trace)
[23:48:04.014]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:48:04.014]    __FlashAddr=0x00000000
[23:48:04.014]    __FlashLen=0x00000000
[23:48:04.014]    __FlashArg=0x00000000
[23:48:04.014]    __FlashOp=0x00000000
[23:48:04.014]    __Result=0x00000000
[23:48:04.014]    
[23:48:04.014]    // User-defined
[23:48:04.014]    DbgMCU_CR=0x00000007
[23:48:04.015]    DbgMCU_APB1_Fz=0x00000000
[23:48:04.015]    DbgMCU_APB2_Fz=0x00000000
[23:48:04.015]    TraceClk_Pin=0x00040002
[23:48:04.015]    TraceD0_Pin=0x00040003
[23:48:04.015]    TraceD1_Pin=0x00040004
[23:48:04.015]    TraceD2_Pin=0x00040005
[23:48:04.015]    TraceD3_Pin=0x00040006
[23:48:04.015]  </debugvars>
[23:48:04.016]  
[23:48:04.016]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:48:04.016]    <block atomic="false" info="">
[23:48:04.016]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:48:04.016]        // -> [traceSWO <= 0x00000001]
[23:48:04.016]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:48:04.016]        // -> [traceTPIU <= 0x00000000]
[23:48:04.016]    </block>
[23:48:04.016]    <control if="traceSWO" while="" timeout="0" info="">
[23:48:04.017]      // if-block "traceSWO"
[23:48:04.017]        // =>  TRUE
[23:48:04.017]      <block atomic="false" info="">
[23:48:04.017]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:48:04.017]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:48:04.017]            <block atomic="false" info="">
[23:48:04.017]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:48:04.017]                // -> [dbgmcu_val <= 0x00000000]
[23:48:04.017]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:48:04.018]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:48:04.018]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:48:04.018]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.018]                // -> [dbgmcu_val <= 0x00000007]
[23:48:04.018]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:48:04.018]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:48:04.019]              Sequence("ConfigureTraceSWOPin");
[23:48:04.019]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:48:04.019]                  <block atomic="false" info="">
[23:48:04.019]                    __var pin     = 0;
[23:48:04.019]                      // -> [pin <= 0x00000000]
[23:48:04.019]                    __var port    = 0;
[23:48:04.019]                      // -> [port <= 0x00000000]
[23:48:04.019]                    __var portAdr = 0;
[23:48:04.020]                      // -> [portAdr <= 0x00000000]
[23:48:04.020]                    __var pos     = 0;
[23:48:04.020]                      // -> [pos <= 0x00000000]
[23:48:04.020]                    __var SWO_Pin = 0x00010003;          // PB3
[23:48:04.020]                      // -> [SWO_Pin <= 0x00010003]
[23:48:04.020]                  </block>
[23:48:04.020]                  <block atomic="false" info="configure SWO">
[23:48:04.020]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:48:04.020]                      // -> [pin <= 0x00000003]
[23:48:04.021]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:48:04.021]                      // -> [port <= 0x00000001]
[23:48:04.021]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:48:04.021]                      // -> [portAdr <= 0x40020400]
[23:48:04.021]                    pos = pin * 2;
[23:48:04.021]                      // -> [pos <= 0x00000006]
[23:48:04.021]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:48:04.022]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.022]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.022]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:48:04.023]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.023]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.023]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:48:04.024]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.024]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.024]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:48:04.025]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.025]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.025]                  </block>
[23:48:04.026]                  <control if="pin <  8" while="" timeout="0" info="">
[23:48:04.026]                    // if-block "pin <  8"
[23:48:04.026]                      // =>  TRUE
[23:48:04.026]                    <block atomic="false" info="">
[23:48:04.026]                      pos = ((pin    ) & 7) * 4;
[23:48:04.026]                        // -> [pos <= 0x0000000C]
[23:48:04.026]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:48:04.027]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.027]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.027]                    </block>
[23:48:04.027]                    // end if-block "pin <  8"
[23:48:04.027]                  </control>
[23:48:04.028]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:48:04.028]                    // if-block "pin >= 8"
[23:48:04.028]                      // =>  FALSE
[23:48:04.028]                    // skip if-block "pin >= 8"
[23:48:04.028]                  </control>
[23:48:04.028]                </sequence>
[23:48:04.028]            </block>
[23:48:04.028]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:48:04.028]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:48:04.029]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.029]            </block>
[23:48:04.029]          </sequence>
[23:48:04.029]      </block>
[23:48:04.029]      // end if-block "traceSWO"
[23:48:04.029]    </control>
[23:48:04.030]    <control if="traceTPIU" while="" timeout="0" info="">
[23:48:04.030]      // if-block "traceTPIU"
[23:48:04.030]        // =>  FALSE
[23:48:04.030]      // skip if-block "traceTPIU"
[23:48:04.030]    </control>
[23:48:04.030]  </sequence>
[23:48:04.030]  
[23:48:04.242]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:48:04.242]  
[23:48:04.243]  <debugvars>
[23:48:04.243]    // Pre-defined
[23:48:04.243]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:48:04.243]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:48:04.243]    __dp=0x00000000
[23:48:04.243]    __ap=0x00000000
[23:48:04.243]    __traceout=0x00000001      (SWO Trace)
[23:48:04.244]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:48:04.244]    __FlashAddr=0x00000000
[23:48:04.244]    __FlashLen=0x00000000
[23:48:04.244]    __FlashArg=0x00000000
[23:48:04.244]    __FlashOp=0x00000000
[23:48:04.244]    __Result=0x00000000
[23:48:04.244]    
[23:48:04.244]    // User-defined
[23:48:04.244]    DbgMCU_CR=0x00000007
[23:48:04.244]    DbgMCU_APB1_Fz=0x00000000
[23:48:04.245]    DbgMCU_APB2_Fz=0x00000000
[23:48:04.245]    TraceClk_Pin=0x00040002
[23:48:04.245]    TraceD0_Pin=0x00040003
[23:48:04.245]    TraceD1_Pin=0x00040004
[23:48:04.245]    TraceD2_Pin=0x00040005
[23:48:04.245]    TraceD3_Pin=0x00040006
[23:48:04.245]  </debugvars>
[23:48:04.245]  
[23:48:04.246]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:48:04.246]    <block atomic="false" info="">
[23:48:04.246]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:48:04.246]        // -> [traceSWO <= 0x00000001]
[23:48:04.246]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:48:04.246]        // -> [traceTPIU <= 0x00000000]
[23:48:04.246]    </block>
[23:48:04.246]    <control if="traceSWO" while="" timeout="0" info="">
[23:48:04.246]      // if-block "traceSWO"
[23:48:04.247]        // =>  TRUE
[23:48:04.247]      <block atomic="false" info="">
[23:48:04.247]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:48:04.247]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:48:04.247]            <block atomic="false" info="">
[23:48:04.247]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:48:04.247]                // -> [dbgmcu_val <= 0x00000000]
[23:48:04.247]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:48:04.247]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:48:04.248]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:48:04.248]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.248]                // -> [dbgmcu_val <= 0x00000007]
[23:48:04.248]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:48:04.248]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:48:04.248]              Sequence("ConfigureTraceSWOPin");
[23:48:04.249]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:48:04.249]                  <block atomic="false" info="">
[23:48:04.249]                    __var pin     = 0;
[23:48:04.249]                      // -> [pin <= 0x00000000]
[23:48:04.249]                    __var port    = 0;
[23:48:04.249]                      // -> [port <= 0x00000000]
[23:48:04.249]                    __var portAdr = 0;
[23:48:04.249]                      // -> [portAdr <= 0x00000000]
[23:48:04.249]                    __var pos     = 0;
[23:48:04.250]                      // -> [pos <= 0x00000000]
[23:48:04.250]                    __var SWO_Pin = 0x00010003;          // PB3
[23:48:04.250]                      // -> [SWO_Pin <= 0x00010003]
[23:48:04.250]                  </block>
[23:48:04.250]                  <block atomic="false" info="configure SWO">
[23:48:04.250]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:48:04.250]                      // -> [pin <= 0x00000003]
[23:48:04.250]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:48:04.251]                      // -> [port <= 0x00000001]
[23:48:04.251]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:48:04.251]                      // -> [portAdr <= 0x40020400]
[23:48:04.251]                    pos = pin * 2;
[23:48:04.251]                      // -> [pos <= 0x00000006]
[23:48:04.251]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:48:04.252]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.252]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.252]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:48:04.253]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.253]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.253]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:48:04.254]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.254]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.254]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:48:04.255]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.255]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.255]                  </block>
[23:48:04.255]                  <control if="pin <  8" while="" timeout="0" info="">
[23:48:04.256]                    // if-block "pin <  8"
[23:48:04.256]                      // =>  TRUE
[23:48:04.256]                    <block atomic="false" info="">
[23:48:04.256]                      pos = ((pin    ) & 7) * 4;
[23:48:04.256]                        // -> [pos <= 0x0000000C]
[23:48:04.256]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:48:04.257]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.257]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.257]                    </block>
[23:48:04.257]                    // end if-block "pin <  8"
[23:48:04.257]                  </control>
[23:48:04.257]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:48:04.258]                    // if-block "pin >= 8"
[23:48:04.258]                      // =>  FALSE
[23:48:04.258]                    // skip if-block "pin >= 8"
[23:48:04.258]                  </control>
[23:48:04.258]                </sequence>
[23:48:04.258]            </block>
[23:48:04.258]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:48:04.258]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:48:04.259]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:48:04.259]            </block>
[23:48:04.259]          </sequence>
[23:48:04.259]      </block>
[23:48:04.259]      // end if-block "traceSWO"
[23:48:04.259]    </control>
[23:48:04.260]    <control if="traceTPIU" while="" timeout="0" info="">
[23:48:04.260]      // if-block "traceTPIU"
[23:48:04.260]        // =>  FALSE
[23:48:04.260]      // skip if-block "traceTPIU"
[23:48:04.260]    </control>
[23:48:04.260]  </sequence>
[23:48:04.260]  
[23:50:16.193]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:50:16.193]  
[23:50:16.193]  <debugvars>
[23:50:16.193]    // Pre-defined
[23:50:16.194]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:50:16.194]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:50:16.194]    __dp=0x00000000
[23:50:16.195]    __ap=0x00000000
[23:50:16.195]    __traceout=0x00000001      (SWO Trace)
[23:50:16.195]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:50:16.195]    __FlashAddr=0x00000000
[23:50:16.195]    __FlashLen=0x00000000
[23:50:16.195]    __FlashArg=0x00000000
[23:50:16.196]    __FlashOp=0x00000000
[23:50:16.196]    __Result=0x00000000
[23:50:16.196]    
[23:50:16.196]    // User-defined
[23:50:16.196]    DbgMCU_CR=0x00000007
[23:50:16.196]    DbgMCU_APB1_Fz=0x00000000
[23:50:16.197]    DbgMCU_APB2_Fz=0x00000000
[23:50:16.197]    TraceClk_Pin=0x00040002
[23:50:16.197]    TraceD0_Pin=0x00040003
[23:50:16.197]    TraceD1_Pin=0x00040004
[23:50:16.197]    TraceD2_Pin=0x00040005
[23:50:16.198]    TraceD3_Pin=0x00040006
[23:50:16.198]  </debugvars>
[23:50:16.198]  
[23:50:16.198]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:50:16.198]    <block atomic="false" info="">
[23:50:16.198]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:50:16.199]        // -> [traceSWO <= 0x00000001]
[23:50:16.199]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:50:16.199]        // -> [traceTPIU <= 0x00000000]
[23:50:16.199]    </block>
[23:50:16.199]    <control if="traceSWO" while="" timeout="0" info="">
[23:50:16.200]      // if-block "traceSWO"
[23:50:16.200]        // =>  TRUE
[23:50:16.200]      <block atomic="false" info="">
[23:50:16.200]        Sequence("DisableTraceSWO");
[23:50:16.200]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:50:16.201]            <block atomic="false" info="">
[23:50:16.201]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:50:16.201]                // -> [dbgmcu_val <= 0x00000000]
[23:50:16.201]            </block>
[23:50:16.201]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:50:16.201]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:50:16.202]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:50:16.202]                // -> [dbgmcu_val <= 0x00000007]
[23:50:16.202]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:50:16.203]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:50:16.203]            </block>
[23:50:16.203]          </sequence>
[23:50:16.203]      </block>
[23:50:16.203]      // end if-block "traceSWO"
[23:50:16.203]    </control>
[23:50:16.203]    <control if="traceTPIU" while="" timeout="0" info="">
[23:50:16.204]      // if-block "traceTPIU"
[23:50:16.204]        // =>  FALSE
[23:50:16.204]      // skip if-block "traceTPIU"
[23:50:16.204]    </control>
[23:50:16.204]  </sequence>
[23:50:16.204]  
[23:50:43.476]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:50:43.476]  
[23:50:43.476]  <debugvars>
[23:50:43.476]    // Pre-defined
[23:50:43.476]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:50:43.476]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:50:43.477]    __dp=0x00000000
[23:50:43.477]    __ap=0x00000000
[23:50:43.477]    __traceout=0x00000001      (SWO Trace)
[23:50:43.477]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:50:43.477]    __FlashAddr=0x00000000
[23:50:43.477]    __FlashLen=0x00000000
[23:50:43.477]    __FlashArg=0x00000000
[23:50:43.477]    __FlashOp=0x00000000
[23:50:43.477]    __Result=0x00000000
[23:50:43.478]    
[23:50:43.478]    // User-defined
[23:50:43.478]    DbgMCU_CR=0x00000007
[23:50:43.478]    DbgMCU_APB1_Fz=0x00000000
[23:50:43.478]    DbgMCU_APB2_Fz=0x00000000
[23:50:43.478]    TraceClk_Pin=0x00040002
[23:50:43.478]    TraceD0_Pin=0x00040003
[23:50:43.478]    TraceD1_Pin=0x00040004
[23:50:43.478]    TraceD2_Pin=0x00040005
[23:50:43.479]    TraceD3_Pin=0x00040006
[23:50:43.479]  </debugvars>
[23:50:43.479]  
[23:50:43.479]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:50:43.479]    <block atomic="false" info="">
[23:50:43.479]      Sequence("CheckID");
[23:50:43.479]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:50:43.479]          <block atomic="false" info="">
[23:50:43.479]            __var pidr1 = 0;
[23:50:43.480]              // -> [pidr1 <= 0x00000000]
[23:50:43.480]            __var pidr2 = 0;
[23:50:43.480]              // -> [pidr2 <= 0x00000000]
[23:50:43.480]            __var jep106id = 0;
[23:50:43.480]              // -> [jep106id <= 0x00000000]
[23:50:43.480]            __var ROMTableBase = 0;
[23:50:43.480]              // -> [ROMTableBase <= 0x00000000]
[23:50:43.480]            __ap = 0;      // AHB-AP
[23:50:43.481]              // -> [__ap <= 0x00000000]
[23:50:43.481]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:50:43.481]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.481]              // -> [ROMTableBase <= 0xE00FD000]
[23:50:43.481]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:50:43.482]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.482]              // -> [pidr1 <= 0x00000004]
[23:50:43.482]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:50:43.482]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.482]              // -> [pidr2 <= 0x0000001A]
[23:50:43.483]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:50:43.483]              // -> [jep106id <= 0x00000020]
[23:50:43.483]          </block>
[23:50:43.483]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:50:43.483]            // if-block "jep106id != 0x20"
[23:50:43.483]              // =>  FALSE
[23:50:43.483]            // skip if-block "jep106id != 0x20"
[23:50:43.484]          </control>
[23:50:43.484]        </sequence>
[23:50:43.484]    </block>
[23:50:43.484]  </sequence>
[23:50:43.484]  
[23:50:43.499]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:50:43.499]  
[23:50:43.499]  <debugvars>
[23:50:43.499]    // Pre-defined
[23:50:43.499]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:50:43.499]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:50:43.500]    __dp=0x00000000
[23:50:43.500]    __ap=0x00000000
[23:50:43.500]    __traceout=0x00000001      (SWO Trace)
[23:50:43.500]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:50:43.500]    __FlashAddr=0x00000000
[23:50:43.500]    __FlashLen=0x00000000
[23:50:43.500]    __FlashArg=0x00000000
[23:50:43.500]    __FlashOp=0x00000000
[23:50:43.501]    __Result=0x00000000
[23:50:43.501]    
[23:50:43.501]    // User-defined
[23:50:43.501]    DbgMCU_CR=0x00000007
[23:50:43.501]    DbgMCU_APB1_Fz=0x00000000
[23:50:43.501]    DbgMCU_APB2_Fz=0x00000000
[23:50:43.501]    TraceClk_Pin=0x00040002
[23:50:43.501]    TraceD0_Pin=0x00040003
[23:50:43.501]    TraceD1_Pin=0x00040004
[23:50:43.501]    TraceD2_Pin=0x00040005
[23:50:43.502]    TraceD3_Pin=0x00040006
[23:50:43.502]  </debugvars>
[23:50:43.502]  
[23:50:43.502]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:50:43.502]    <block atomic="false" info="">
[23:50:43.502]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:50:43.503]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.503]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:50:43.503]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.503]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:50:43.504]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.504]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:50:43.504]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:50:43.504]    </block>
[23:50:43.505]  </sequence>
[23:50:43.505]  
[23:51:14.753]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:51:14.753]  
[23:51:14.753]  <debugvars>
[23:51:14.753]    // Pre-defined
[23:51:14.754]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:51:14.754]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:51:14.754]    __dp=0x00000000
[23:51:14.754]    __ap=0x00000000
[23:51:14.754]    __traceout=0x00000001      (SWO Trace)
[23:51:14.755]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:51:14.755]    __FlashAddr=0x00000000
[23:51:14.755]    __FlashLen=0x00000000
[23:51:14.755]    __FlashArg=0x00000000
[23:51:14.755]    __FlashOp=0x00000000
[23:51:14.756]    __Result=0x00000000
[23:51:14.756]    
[23:51:14.756]    // User-defined
[23:51:14.756]    DbgMCU_CR=0x00000007
[23:51:14.756]    DbgMCU_APB1_Fz=0x00000000
[23:51:14.756]    DbgMCU_APB2_Fz=0x00000000
[23:51:14.757]    TraceClk_Pin=0x00040002
[23:51:14.757]    TraceD0_Pin=0x00040003
[23:51:14.757]    TraceD1_Pin=0x00040004
[23:51:14.757]    TraceD2_Pin=0x00040005
[23:51:14.757]    TraceD3_Pin=0x00040006
[23:51:14.757]  </debugvars>
[23:51:14.758]  
[23:51:14.758]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:51:14.758]    <block atomic="false" info="">
[23:51:14.758]      Sequence("CheckID");
[23:51:14.758]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:51:14.759]          <block atomic="false" info="">
[23:51:14.759]            __var pidr1 = 0;
[23:51:14.759]              // -> [pidr1 <= 0x00000000]
[23:51:14.759]            __var pidr2 = 0;
[23:51:14.759]              // -> [pidr2 <= 0x00000000]
[23:51:14.759]            __var jep106id = 0;
[23:51:14.760]              // -> [jep106id <= 0x00000000]
[23:51:14.760]            __var ROMTableBase = 0;
[23:51:14.760]              // -> [ROMTableBase <= 0x00000000]
[23:51:14.760]            __ap = 0;      // AHB-AP
[23:51:14.760]              // -> [__ap <= 0x00000000]
[23:51:14.760]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:51:14.761]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.761]              // -> [ROMTableBase <= 0xE00FD000]
[23:51:14.761]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:51:14.762]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.762]              // -> [pidr1 <= 0x00000004]
[23:51:14.762]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:51:14.762]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.762]              // -> [pidr2 <= 0x0000001A]
[23:51:14.763]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:51:14.763]              // -> [jep106id <= 0x00000020]
[23:51:14.763]          </block>
[23:51:14.763]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:51:14.763]            // if-block "jep106id != 0x20"
[23:51:14.763]              // =>  FALSE
[23:51:14.764]            // skip if-block "jep106id != 0x20"
[23:51:14.764]          </control>
[23:51:14.764]        </sequence>
[23:51:14.764]    </block>
[23:51:14.764]  </sequence>
[23:51:14.764]  
[23:51:14.779]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:51:14.779]  
[23:51:14.780]  <debugvars>
[23:51:14.780]    // Pre-defined
[23:51:14.780]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:51:14.780]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:51:14.780]    __dp=0x00000000
[23:51:14.780]    __ap=0x00000000
[23:51:14.781]    __traceout=0x00000001      (SWO Trace)
[23:51:14.781]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:51:14.781]    __FlashAddr=0x00000000
[23:51:14.781]    __FlashLen=0x00000000
[23:51:14.781]    __FlashArg=0x00000000
[23:51:14.781]    __FlashOp=0x00000000
[23:51:14.782]    __Result=0x00000000
[23:51:14.782]    
[23:51:14.782]    // User-defined
[23:51:14.782]    DbgMCU_CR=0x00000007
[23:51:14.782]    DbgMCU_APB1_Fz=0x00000000
[23:51:14.782]    DbgMCU_APB2_Fz=0x00000000
[23:51:14.782]    TraceClk_Pin=0x00040002
[23:51:14.783]    TraceD0_Pin=0x00040003
[23:51:14.783]    TraceD1_Pin=0x00040004
[23:51:14.783]    TraceD2_Pin=0x00040005
[23:51:14.783]    TraceD3_Pin=0x00040006
[23:51:14.783]  </debugvars>
[23:51:14.783]  
[23:51:14.783]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:51:14.784]    <block atomic="false" info="">
[23:51:14.784]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:51:14.784]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.785]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:51:14.785]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.785]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:51:14.786]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.786]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:51:14.786]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.787]    </block>
[23:51:14.787]  </sequence>
[23:51:14.787]  
[23:51:14.802]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:51:14.802]  
[23:51:14.802]  <debugvars>
[23:51:14.803]    // Pre-defined
[23:51:14.803]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:51:14.803]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:51:14.803]    __dp=0x00000000
[23:51:14.803]    __ap=0x00000000
[23:51:14.803]    __traceout=0x00000001      (SWO Trace)
[23:51:14.804]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:51:14.804]    __FlashAddr=0x00000000
[23:51:14.804]    __FlashLen=0x00000000
[23:51:14.804]    __FlashArg=0x00000000
[23:51:14.804]    __FlashOp=0x00000000
[23:51:14.804]    __Result=0x00000000
[23:51:14.805]    
[23:51:14.805]    // User-defined
[23:51:14.805]    DbgMCU_CR=0x00000007
[23:51:14.805]    DbgMCU_APB1_Fz=0x00000000
[23:51:14.805]    DbgMCU_APB2_Fz=0x00000000
[23:51:14.805]    TraceClk_Pin=0x00040002
[23:51:14.806]    TraceD0_Pin=0x00040003
[23:51:14.806]    TraceD1_Pin=0x00040004
[23:51:14.806]    TraceD2_Pin=0x00040005
[23:51:14.806]    TraceD3_Pin=0x00040006
[23:51:14.806]  </debugvars>
[23:51:14.806]  
[23:51:14.807]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:51:14.807]    <block atomic="false" info="">
[23:51:14.807]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:51:14.807]        // -> [traceSWO <= 0x00000001]
[23:51:14.807]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:51:14.807]        // -> [traceTPIU <= 0x00000000]
[23:51:14.807]    </block>
[23:51:14.808]    <control if="traceSWO" while="" timeout="0" info="">
[23:51:14.808]      // if-block "traceSWO"
[23:51:14.808]        // =>  TRUE
[23:51:14.808]      <block atomic="false" info="">
[23:51:14.808]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:51:14.808]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:51:14.809]            <block atomic="false" info="">
[23:51:14.809]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:51:14.809]                // -> [dbgmcu_val <= 0x00000000]
[23:51:14.809]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:51:14.809]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:51:14.809]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:51:14.810]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.810]                // -> [dbgmcu_val <= 0x00000007]
[23:51:14.810]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:51:14.810]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:51:14.810]              Sequence("ConfigureTraceSWOPin");
[23:51:14.811]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:51:14.811]                  <block atomic="false" info="">
[23:51:14.811]                    __var pin     = 0;
[23:51:14.811]                      // -> [pin <= 0x00000000]
[23:51:14.811]                    __var port    = 0;
[23:51:14.811]                      // -> [port <= 0x00000000]
[23:51:14.811]                    __var portAdr = 0;
[23:51:14.812]                      // -> [portAdr <= 0x00000000]
[23:51:14.812]                    __var pos     = 0;
[23:51:14.812]                      // -> [pos <= 0x00000000]
[23:51:14.812]                    __var SWO_Pin = 0x00010003;          // PB3
[23:51:14.812]                      // -> [SWO_Pin <= 0x00010003]
[23:51:14.812]                  </block>
[23:51:14.812]                  <block atomic="false" info="configure SWO">
[23:51:14.812]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:51:14.813]                      // -> [pin <= 0x00000003]
[23:51:14.813]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:51:14.813]                      // -> [port <= 0x00000001]
[23:51:14.813]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:51:14.813]                      // -> [portAdr <= 0x40020400]
[23:51:14.813]                    pos = pin * 2;
[23:51:14.813]                      // -> [pos <= 0x00000006]
[23:51:14.814]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:51:14.814]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.814]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.815]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:51:14.815]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.815]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.815]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:51:14.816]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.816]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.816]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:51:14.817]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.817]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.817]                  </block>
[23:51:14.818]                  <control if="pin <  8" while="" timeout="0" info="">
[23:51:14.818]                    // if-block "pin <  8"
[23:51:14.818]                      // =>  TRUE
[23:51:14.818]                    <block atomic="false" info="">
[23:51:14.818]                      pos = ((pin    ) & 7) * 4;
[23:51:14.818]                        // -> [pos <= 0x0000000C]
[23:51:14.818]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:51:14.819]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.819]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.819]                    </block>
[23:51:14.819]                    // end if-block "pin <  8"
[23:51:14.819]                  </control>
[23:51:14.820]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:51:14.820]                    // if-block "pin >= 8"
[23:51:14.820]                      // =>  FALSE
[23:51:14.820]                    // skip if-block "pin >= 8"
[23:51:14.820]                  </control>
[23:51:14.820]                </sequence>
[23:51:14.820]            </block>
[23:51:14.820]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:51:14.820]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:51:14.821]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.821]            </block>
[23:51:14.821]          </sequence>
[23:51:14.821]      </block>
[23:51:14.821]      // end if-block "traceSWO"
[23:51:14.821]    </control>
[23:51:14.822]    <control if="traceTPIU" while="" timeout="0" info="">
[23:51:14.822]      // if-block "traceTPIU"
[23:51:14.822]        // =>  FALSE
[23:51:14.822]      // skip if-block "traceTPIU"
[23:51:14.822]    </control>
[23:51:14.822]  </sequence>
[23:51:14.822]  
[23:51:14.826]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:51:14.826]  
[23:51:14.826]  <debugvars>
[23:51:14.826]    // Pre-defined
[23:51:14.826]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:51:14.826]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:51:14.827]    __dp=0x00000000
[23:51:14.827]    __ap=0x00000000
[23:51:14.827]    __traceout=0x00000001      (SWO Trace)
[23:51:14.827]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:51:14.828]    __FlashAddr=0x00000000
[23:51:14.828]    __FlashLen=0x00000000
[23:51:14.828]    __FlashArg=0x00000000
[23:51:14.828]    __FlashOp=0x00000000
[23:51:14.828]    __Result=0x00000000
[23:51:14.828]    
[23:51:14.828]    // User-defined
[23:51:14.829]    DbgMCU_CR=0x00000007
[23:51:14.829]    DbgMCU_APB1_Fz=0x00000000
[23:51:14.829]    DbgMCU_APB2_Fz=0x00000000
[23:51:14.829]    TraceClk_Pin=0x00040002
[23:51:14.829]    TraceD0_Pin=0x00040003
[23:51:14.830]    TraceD1_Pin=0x00040004
[23:51:14.830]    TraceD2_Pin=0x00040005
[23:51:14.830]    TraceD3_Pin=0x00040006
[23:51:14.830]  </debugvars>
[23:51:14.830]  
[23:51:14.830]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:51:14.830]    <block atomic="false" info="">
[23:51:14.831]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:51:14.831]        // -> [traceSWO <= 0x00000001]
[23:51:14.831]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:51:14.831]        // -> [traceTPIU <= 0x00000000]
[23:51:14.831]    </block>
[23:51:14.831]    <control if="traceSWO" while="" timeout="0" info="">
[23:51:14.831]      // if-block "traceSWO"
[23:51:14.831]        // =>  TRUE
[23:51:14.832]      <block atomic="false" info="">
[23:51:14.832]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:51:14.832]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:51:14.832]            <block atomic="false" info="">
[23:51:14.832]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:51:14.832]                // -> [dbgmcu_val <= 0x00000000]
[23:51:14.832]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:51:14.832]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:51:14.832]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:51:14.833]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.833]                // -> [dbgmcu_val <= 0x00000007]
[23:51:14.833]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:51:14.833]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:51:14.833]              Sequence("ConfigureTraceSWOPin");
[23:51:14.834]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:51:14.834]                  <block atomic="false" info="">
[23:51:14.834]                    __var pin     = 0;
[23:51:14.834]                      // -> [pin <= 0x00000000]
[23:51:14.834]                    __var port    = 0;
[23:51:14.834]                      // -> [port <= 0x00000000]
[23:51:14.834]                    __var portAdr = 0;
[23:51:14.834]                      // -> [portAdr <= 0x00000000]
[23:51:14.834]                    __var pos     = 0;
[23:51:14.835]                      // -> [pos <= 0x00000000]
[23:51:14.835]                    __var SWO_Pin = 0x00010003;          // PB3
[23:51:14.835]                      // -> [SWO_Pin <= 0x00010003]
[23:51:14.835]                  </block>
[23:51:14.835]                  <block atomic="false" info="configure SWO">
[23:51:14.835]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:51:14.835]                      // -> [pin <= 0x00000003]
[23:51:14.835]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:51:14.836]                      // -> [port <= 0x00000001]
[23:51:14.836]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:51:14.836]                      // -> [portAdr <= 0x40020400]
[23:51:14.836]                    pos = pin * 2;
[23:51:14.836]                      // -> [pos <= 0x00000006]
[23:51:14.836]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:51:14.837]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.837]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.837]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:51:14.837]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.838]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.838]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:51:14.838]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.839]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.839]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:51:14.839]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.840]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.840]                  </block>
[23:51:14.840]                  <control if="pin <  8" while="" timeout="0" info="">
[23:51:14.840]                    // if-block "pin <  8"
[23:51:14.840]                      // =>  TRUE
[23:51:14.840]                    <block atomic="false" info="">
[23:51:14.840]                      pos = ((pin    ) & 7) * 4;
[23:51:14.840]                        // -> [pos <= 0x0000000C]
[23:51:14.841]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:51:14.841]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.841]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.842]                    </block>
[23:51:14.842]                    // end if-block "pin <  8"
[23:51:14.842]                  </control>
[23:51:14.842]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:51:14.842]                    // if-block "pin >= 8"
[23:51:14.842]                      // =>  FALSE
[23:51:14.842]                    // skip if-block "pin >= 8"
[23:51:14.842]                  </control>
[23:51:14.842]                </sequence>
[23:51:14.842]            </block>
[23:51:14.843]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:51:14.843]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:51:14.843]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:14.843]            </block>
[23:51:14.843]          </sequence>
[23:51:14.844]      </block>
[23:51:14.844]      // end if-block "traceSWO"
[23:51:14.844]    </control>
[23:51:14.844]    <control if="traceTPIU" while="" timeout="0" info="">
[23:51:14.844]      // if-block "traceTPIU"
[23:51:14.844]        // =>  FALSE
[23:51:14.844]      // skip if-block "traceTPIU"
[23:51:14.844]    </control>
[23:51:14.844]  </sequence>
[23:51:14.844]  
[23:51:15.056]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:51:15.056]  
[23:51:15.056]  <debugvars>
[23:51:15.056]    // Pre-defined
[23:51:15.056]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:51:15.057]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:51:15.057]    __dp=0x00000000
[23:51:15.057]    __ap=0x00000000
[23:51:15.057]    __traceout=0x00000001      (SWO Trace)
[23:51:15.057]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:51:15.057]    __FlashAddr=0x00000000
[23:51:15.059]    __FlashLen=0x00000000
[23:51:15.059]    __FlashArg=0x00000000
[23:51:15.059]    __FlashOp=0x00000000
[23:51:15.059]    __Result=0x00000000
[23:51:15.059]    
[23:51:15.059]    // User-defined
[23:51:15.059]    DbgMCU_CR=0x00000007
[23:51:15.059]    DbgMCU_APB1_Fz=0x00000000
[23:51:15.059]    DbgMCU_APB2_Fz=0x00000000
[23:51:15.059]    TraceClk_Pin=0x00040002
[23:51:15.059]    TraceD0_Pin=0x00040003
[23:51:15.060]    TraceD1_Pin=0x00040004
[23:51:15.060]    TraceD2_Pin=0x00040005
[23:51:15.060]    TraceD3_Pin=0x00040006
[23:51:15.060]  </debugvars>
[23:51:15.060]  
[23:51:15.060]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:51:15.060]    <block atomic="false" info="">
[23:51:15.061]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:51:15.061]        // -> [traceSWO <= 0x00000001]
[23:51:15.061]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:51:15.061]        // -> [traceTPIU <= 0x00000000]
[23:51:15.061]    </block>
[23:51:15.061]    <control if="traceSWO" while="" timeout="0" info="">
[23:51:15.062]      // if-block "traceSWO"
[23:51:15.062]        // =>  TRUE
[23:51:15.062]      <block atomic="false" info="">
[23:51:15.062]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:51:15.062]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:51:15.062]            <block atomic="false" info="">
[23:51:15.062]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:51:15.063]                // -> [dbgmcu_val <= 0x00000000]
[23:51:15.063]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:51:15.063]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:51:15.063]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:51:15.063]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.064]                // -> [dbgmcu_val <= 0x00000007]
[23:51:15.064]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:51:15.064]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:51:15.064]              Sequence("ConfigureTraceSWOPin");
[23:51:15.064]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:51:15.064]                  <block atomic="false" info="">
[23:51:15.064]                    __var pin     = 0;
[23:51:15.065]                      // -> [pin <= 0x00000000]
[23:51:15.065]                    __var port    = 0;
[23:51:15.065]                      // -> [port <= 0x00000000]
[23:51:15.065]                    __var portAdr = 0;
[23:51:15.065]                      // -> [portAdr <= 0x00000000]
[23:51:15.065]                    __var pos     = 0;
[23:51:15.065]                      // -> [pos <= 0x00000000]
[23:51:15.065]                    __var SWO_Pin = 0x00010003;          // PB3
[23:51:15.065]                      // -> [SWO_Pin <= 0x00010003]
[23:51:15.066]                  </block>
[23:51:15.066]                  <block atomic="false" info="configure SWO">
[23:51:15.066]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:51:15.066]                      // -> [pin <= 0x00000003]
[23:51:15.066]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:51:15.066]                      // -> [port <= 0x00000001]
[23:51:15.066]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:51:15.066]                      // -> [portAdr <= 0x40020400]
[23:51:15.067]                    pos = pin * 2;
[23:51:15.067]                      // -> [pos <= 0x00000006]
[23:51:15.067]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:51:15.067]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.068]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.068]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:51:15.068]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.069]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.069]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:51:15.069]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.070]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.070]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:51:15.070]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.071]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.071]                  </block>
[23:51:15.071]                  <control if="pin <  8" while="" timeout="0" info="">
[23:51:15.071]                    // if-block "pin <  8"
[23:51:15.071]                      // =>  TRUE
[23:51:15.071]                    <block atomic="false" info="">
[23:51:15.071]                      pos = ((pin    ) & 7) * 4;
[23:51:15.071]                        // -> [pos <= 0x0000000C]
[23:51:15.071]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:51:15.072]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.072]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.072]                    </block>
[23:51:15.073]                    // end if-block "pin <  8"
[23:51:15.073]                  </control>
[23:51:15.073]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:51:15.073]                    // if-block "pin >= 8"
[23:51:15.073]                      // =>  FALSE
[23:51:15.073]                    // skip if-block "pin >= 8"
[23:51:15.073]                  </control>
[23:51:15.073]                </sequence>
[23:51:15.073]            </block>
[23:51:15.074]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:51:15.074]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:51:15.074]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:51:15.074]            </block>
[23:51:15.074]          </sequence>
[23:51:15.074]      </block>
[23:51:15.075]      // end if-block "traceSWO"
[23:51:15.075]    </control>
[23:51:15.075]    <control if="traceTPIU" while="" timeout="0" info="">
[23:51:15.075]      // if-block "traceTPIU"
[23:51:15.075]        // =>  FALSE
[23:51:15.075]      // skip if-block "traceTPIU"
[23:51:15.075]    </control>
[23:51:15.075]  </sequence>
[23:51:15.075]  
[23:53:06.250]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:53:06.250]  
[23:53:06.250]  <debugvars>
[23:53:06.250]    // Pre-defined
[23:53:06.250]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:53:06.251]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:53:06.251]    __dp=0x00000000
[23:53:06.251]    __ap=0x00000000
[23:53:06.251]    __traceout=0x00000001      (SWO Trace)
[23:53:06.251]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:53:06.251]    __FlashAddr=0x00000000
[23:53:06.252]    __FlashLen=0x00000000
[23:53:06.252]    __FlashArg=0x00000000
[23:53:06.252]    __FlashOp=0x00000000
[23:53:06.252]    __Result=0x00000000
[23:53:06.252]    
[23:53:06.252]    // User-defined
[23:53:06.252]    DbgMCU_CR=0x00000007
[23:53:06.253]    DbgMCU_APB1_Fz=0x00000000
[23:53:06.253]    DbgMCU_APB2_Fz=0x00000000
[23:53:06.253]    TraceClk_Pin=0x00040002
[23:53:06.253]    TraceD0_Pin=0x00040003
[23:53:06.253]    TraceD1_Pin=0x00040004
[23:53:06.253]    TraceD2_Pin=0x00040005
[23:53:06.254]    TraceD3_Pin=0x00040006
[23:53:06.254]  </debugvars>
[23:53:06.254]  
[23:53:06.254]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:53:06.254]    <block atomic="false" info="">
[23:53:06.254]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:53:06.255]        // -> [traceSWO <= 0x00000001]
[23:53:06.255]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:53:06.255]        // -> [traceTPIU <= 0x00000000]
[23:53:06.255]    </block>
[23:53:06.255]    <control if="traceSWO" while="" timeout="0" info="">
[23:53:06.255]      // if-block "traceSWO"
[23:53:06.256]        // =>  TRUE
[23:53:06.256]      <block atomic="false" info="">
[23:53:06.256]        Sequence("DisableTraceSWO");
[23:53:06.256]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:53:06.256]            <block atomic="false" info="">
[23:53:06.257]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:53:06.257]                // -> [dbgmcu_val <= 0x00000000]
[23:53:06.257]            </block>
[23:53:06.257]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:53:06.257]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:53:06.258]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:53:06.258]                // -> [dbgmcu_val <= 0x00000007]
[23:53:06.258]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:53:06.258]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:53:06.259]            </block>
[23:53:06.259]          </sequence>
[23:53:06.259]      </block>
[23:53:06.259]      // end if-block "traceSWO"
[23:53:06.259]    </control>
[23:53:06.259]    <control if="traceTPIU" while="" timeout="0" info="">
[23:53:06.259]      // if-block "traceTPIU"
[23:53:06.260]        // =>  FALSE
[23:53:06.260]      // skip if-block "traceTPIU"
[23:53:06.260]    </control>
[23:53:06.260]  </sequence>
[23:53:06.260]  
[23:53:37.094]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:53:37.094]  
[23:53:37.094]  <debugvars>
[23:53:37.094]    // Pre-defined
[23:53:37.094]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:53:37.095]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:53:37.095]    __dp=0x00000000
[23:53:37.095]    __ap=0x00000000
[23:53:37.095]    __traceout=0x00000001      (SWO Trace)
[23:53:37.095]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:53:37.095]    __FlashAddr=0x00000000
[23:53:37.096]    __FlashLen=0x00000000
[23:53:37.096]    __FlashArg=0x00000000
[23:53:37.096]    __FlashOp=0x00000000
[23:53:37.096]    __Result=0x00000000
[23:53:37.096]    
[23:53:37.096]    // User-defined
[23:53:37.096]    DbgMCU_CR=0x00000007
[23:53:37.097]    DbgMCU_APB1_Fz=0x00000000
[23:53:37.097]    DbgMCU_APB2_Fz=0x00000000
[23:53:37.097]    TraceClk_Pin=0x00040002
[23:53:37.097]    TraceD0_Pin=0x00040003
[23:53:37.097]    TraceD1_Pin=0x00040004
[23:53:37.097]    TraceD2_Pin=0x00040005
[23:53:37.098]    TraceD3_Pin=0x00040006
[23:53:37.098]  </debugvars>
[23:53:37.098]  
[23:53:37.098]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:53:37.098]    <block atomic="false" info="">
[23:53:37.098]      Sequence("CheckID");
[23:53:37.098]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:53:37.099]          <block atomic="false" info="">
[23:53:37.099]            __var pidr1 = 0;
[23:53:37.099]              // -> [pidr1 <= 0x00000000]
[23:53:37.099]            __var pidr2 = 0;
[23:53:37.099]              // -> [pidr2 <= 0x00000000]
[23:53:37.099]            __var jep106id = 0;
[23:53:37.099]              // -> [jep106id <= 0x00000000]
[23:53:37.100]            __var ROMTableBase = 0;
[23:53:37.100]              // -> [ROMTableBase <= 0x00000000]
[23:53:37.100]            __ap = 0;      // AHB-AP
[23:53:37.100]              // -> [__ap <= 0x00000000]
[23:53:37.100]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:53:37.101]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.101]              // -> [ROMTableBase <= 0xE00FD000]
[23:53:37.101]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:53:37.101]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.102]              // -> [pidr1 <= 0x00000004]
[23:53:37.102]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:53:37.102]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.102]              // -> [pidr2 <= 0x0000001A]
[23:53:37.102]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:53:37.102]              // -> [jep106id <= 0x00000020]
[23:53:37.102]          </block>
[23:53:37.102]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:53:37.102]            // if-block "jep106id != 0x20"
[23:53:37.102]              // =>  FALSE
[23:53:37.102]            // skip if-block "jep106id != 0x20"
[23:53:37.102]          </control>
[23:53:37.102]        </sequence>
[23:53:37.103]    </block>
[23:53:37.103]  </sequence>
[23:53:37.103]  
[23:53:37.118]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:53:37.118]  
[23:53:37.118]  <debugvars>
[23:53:37.119]    // Pre-defined
[23:53:37.119]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:53:37.119]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:53:37.119]    __dp=0x00000000
[23:53:37.119]    __ap=0x00000000
[23:53:37.120]    __traceout=0x00000001      (SWO Trace)
[23:53:37.120]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:53:37.120]    __FlashAddr=0x00000000
[23:53:37.120]    __FlashLen=0x00000000
[23:53:37.120]    __FlashArg=0x00000000
[23:53:37.121]    __FlashOp=0x00000000
[23:53:37.121]    __Result=0x00000000
[23:53:37.121]    
[23:53:37.121]    // User-defined
[23:53:37.121]    DbgMCU_CR=0x00000007
[23:53:37.121]    DbgMCU_APB1_Fz=0x00000000
[23:53:37.121]    DbgMCU_APB2_Fz=0x00000000
[23:53:37.122]    TraceClk_Pin=0x00040002
[23:53:37.122]    TraceD0_Pin=0x00040003
[23:53:37.122]    TraceD1_Pin=0x00040004
[23:53:37.122]    TraceD2_Pin=0x00040005
[23:53:37.122]    TraceD3_Pin=0x00040006
[23:53:37.123]  </debugvars>
[23:53:37.123]  
[23:53:37.123]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:53:37.123]    <block atomic="false" info="">
[23:53:37.123]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:53:37.124]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.124]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:53:37.125]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.125]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:53:37.126]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.126]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:53:37.126]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:53:37.126]    </block>
[23:53:37.127]  </sequence>
[23:53:37.127]  
[23:54:08.363]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:54:08.363]  
[23:54:08.363]  <debugvars>
[23:54:08.363]    // Pre-defined
[23:54:08.363]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:54:08.363]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:54:08.364]    __dp=0x00000000
[23:54:08.364]    __ap=0x00000000
[23:54:08.364]    __traceout=0x00000001      (SWO Trace)
[23:54:08.364]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:54:08.364]    __FlashAddr=0x00000000
[23:54:08.364]    __FlashLen=0x00000000
[23:54:08.364]    __FlashArg=0x00000000
[23:54:08.364]    __FlashOp=0x00000000
[23:54:08.364]    __Result=0x00000000
[23:54:08.365]    
[23:54:08.365]    // User-defined
[23:54:08.365]    DbgMCU_CR=0x00000007
[23:54:08.365]    DbgMCU_APB1_Fz=0x00000000
[23:54:08.365]    DbgMCU_APB2_Fz=0x00000000
[23:54:08.365]    TraceClk_Pin=0x00040002
[23:54:08.365]    TraceD0_Pin=0x00040003
[23:54:08.365]    TraceD1_Pin=0x00040004
[23:54:08.365]    TraceD2_Pin=0x00040005
[23:54:08.365]    TraceD3_Pin=0x00040006
[23:54:08.366]  </debugvars>
[23:54:08.366]  
[23:54:08.366]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:54:08.366]    <block atomic="false" info="">
[23:54:08.366]      Sequence("CheckID");
[23:54:08.366]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:54:08.366]          <block atomic="false" info="">
[23:54:08.366]            __var pidr1 = 0;
[23:54:08.366]              // -> [pidr1 <= 0x00000000]
[23:54:08.367]            __var pidr2 = 0;
[23:54:08.367]              // -> [pidr2 <= 0x00000000]
[23:54:08.367]            __var jep106id = 0;
[23:54:08.367]              // -> [jep106id <= 0x00000000]
[23:54:08.367]            __var ROMTableBase = 0;
[23:54:08.367]              // -> [ROMTableBase <= 0x00000000]
[23:54:08.367]            __ap = 0;      // AHB-AP
[23:54:08.367]              // -> [__ap <= 0x00000000]
[23:54:08.367]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:54:08.368]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.368]              // -> [ROMTableBase <= 0xE00FD000]
[23:54:08.368]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:54:08.369]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.369]              // -> [pidr1 <= 0x00000004]
[23:54:08.369]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:54:08.369]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.369]              // -> [pidr2 <= 0x0000001A]
[23:54:08.369]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:54:08.370]              // -> [jep106id <= 0x00000020]
[23:54:08.370]          </block>
[23:54:08.370]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:54:08.370]            // if-block "jep106id != 0x20"
[23:54:08.370]              // =>  FALSE
[23:54:08.370]            // skip if-block "jep106id != 0x20"
[23:54:08.370]          </control>
[23:54:08.370]        </sequence>
[23:54:08.371]    </block>
[23:54:08.371]  </sequence>
[23:54:08.371]  
[23:54:08.385]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:54:08.385]  
[23:54:08.385]  <debugvars>
[23:54:08.385]    // Pre-defined
[23:54:08.386]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:54:08.386]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:54:08.386]    __dp=0x00000000
[23:54:08.386]    __ap=0x00000000
[23:54:08.386]    __traceout=0x00000001      (SWO Trace)
[23:54:08.386]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:54:08.386]    __FlashAddr=0x00000000
[23:54:08.387]    __FlashLen=0x00000000
[23:54:08.387]    __FlashArg=0x00000000
[23:54:08.387]    __FlashOp=0x00000000
[23:54:08.387]    __Result=0x00000000
[23:54:08.387]    
[23:54:08.387]    // User-defined
[23:54:08.387]    DbgMCU_CR=0x00000007
[23:54:08.387]    DbgMCU_APB1_Fz=0x00000000
[23:54:08.387]    DbgMCU_APB2_Fz=0x00000000
[23:54:08.387]    TraceClk_Pin=0x00040002
[23:54:08.388]    TraceD0_Pin=0x00040003
[23:54:08.388]    TraceD1_Pin=0x00040004
[23:54:08.388]    TraceD2_Pin=0x00040005
[23:54:08.388]    TraceD3_Pin=0x00040006
[23:54:08.388]  </debugvars>
[23:54:08.388]  
[23:54:08.388]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:54:08.388]    <block atomic="false" info="">
[23:54:08.389]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:54:08.389]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.389]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:54:08.390]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.390]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:54:08.390]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.390]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:54:08.391]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.391]    </block>
[23:54:08.391]  </sequence>
[23:54:08.391]  
[23:54:08.407]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:54:08.407]  
[23:54:08.408]  <debugvars>
[23:54:08.408]    // Pre-defined
[23:54:08.408]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:54:08.408]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:54:08.408]    __dp=0x00000000
[23:54:08.408]    __ap=0x00000000
[23:54:08.408]    __traceout=0x00000001      (SWO Trace)
[23:54:08.408]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:54:08.409]    __FlashAddr=0x00000000
[23:54:08.409]    __FlashLen=0x00000000
[23:54:08.409]    __FlashArg=0x00000000
[23:54:08.409]    __FlashOp=0x00000000
[23:54:08.409]    __Result=0x00000000
[23:54:08.409]    
[23:54:08.409]    // User-defined
[23:54:08.409]    DbgMCU_CR=0x00000007
[23:54:08.410]    DbgMCU_APB1_Fz=0x00000000
[23:54:08.410]    DbgMCU_APB2_Fz=0x00000000
[23:54:08.410]    TraceClk_Pin=0x00040002
[23:54:08.410]    TraceD0_Pin=0x00040003
[23:54:08.410]    TraceD1_Pin=0x00040004
[23:54:08.410]    TraceD2_Pin=0x00040005
[23:54:08.410]    TraceD3_Pin=0x00040006
[23:54:08.411]  </debugvars>
[23:54:08.411]  
[23:54:08.411]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:54:08.411]    <block atomic="false" info="">
[23:54:08.411]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:54:08.411]        // -> [traceSWO <= 0x00000001]
[23:54:08.411]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:54:08.411]        // -> [traceTPIU <= 0x00000000]
[23:54:08.411]    </block>
[23:54:08.412]    <control if="traceSWO" while="" timeout="0" info="">
[23:54:08.412]      // if-block "traceSWO"
[23:54:08.412]        // =>  TRUE
[23:54:08.412]      <block atomic="false" info="">
[23:54:08.412]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:54:08.412]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:54:08.412]            <block atomic="false" info="">
[23:54:08.412]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:54:08.412]                // -> [dbgmcu_val <= 0x00000000]
[23:54:08.413]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:54:08.413]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:54:08.413]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:54:08.413]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.413]                // -> [dbgmcu_val <= 0x00000007]
[23:54:08.414]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:54:08.414]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:54:08.414]              Sequence("ConfigureTraceSWOPin");
[23:54:08.414]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:54:08.414]                  <block atomic="false" info="">
[23:54:08.414]                    __var pin     = 0;
[23:54:08.414]                      // -> [pin <= 0x00000000]
[23:54:08.414]                    __var port    = 0;
[23:54:08.414]                      // -> [port <= 0x00000000]
[23:54:08.415]                    __var portAdr = 0;
[23:54:08.415]                      // -> [portAdr <= 0x00000000]
[23:54:08.415]                    __var pos     = 0;
[23:54:08.415]                      // -> [pos <= 0x00000000]
[23:54:08.415]                    __var SWO_Pin = 0x00010003;          // PB3
[23:54:08.415]                      // -> [SWO_Pin <= 0x00010003]
[23:54:08.415]                  </block>
[23:54:08.415]                  <block atomic="false" info="configure SWO">
[23:54:08.415]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:54:08.416]                      // -> [pin <= 0x00000003]
[23:54:08.416]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:54:08.416]                      // -> [port <= 0x00000001]
[23:54:08.416]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:54:08.416]                      // -> [portAdr <= 0x40020400]
[23:54:08.416]                    pos = pin * 2;
[23:54:08.416]                      // -> [pos <= 0x00000006]
[23:54:08.416]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:54:08.417]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.417]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.417]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:54:08.418]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.418]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.418]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:54:08.419]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.419]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.419]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:54:08.420]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.420]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.420]                  </block>
[23:54:08.421]                  <control if="pin <  8" while="" timeout="0" info="">
[23:54:08.421]                    // if-block "pin <  8"
[23:54:08.421]                      // =>  TRUE
[23:54:08.421]                    <block atomic="false" info="">
[23:54:08.421]                      pos = ((pin    ) & 7) * 4;
[23:54:08.421]                        // -> [pos <= 0x0000000C]
[23:54:08.421]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:54:08.422]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.422]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.422]                    </block>
[23:54:08.422]                    // end if-block "pin <  8"
[23:54:08.422]                  </control>
[23:54:08.422]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:54:08.423]                    // if-block "pin >= 8"
[23:54:08.423]                      // =>  FALSE
[23:54:08.423]                    // skip if-block "pin >= 8"
[23:54:08.423]                  </control>
[23:54:08.423]                </sequence>
[23:54:08.423]            </block>
[23:54:08.423]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:54:08.423]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:54:08.424]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.424]            </block>
[23:54:08.424]          </sequence>
[23:54:08.424]      </block>
[23:54:08.424]      // end if-block "traceSWO"
[23:54:08.424]    </control>
[23:54:08.425]    <control if="traceTPIU" while="" timeout="0" info="">
[23:54:08.425]      // if-block "traceTPIU"
[23:54:08.425]        // =>  FALSE
[23:54:08.425]      // skip if-block "traceTPIU"
[23:54:08.425]    </control>
[23:54:08.425]  </sequence>
[23:54:08.425]  
[23:54:08.429]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:54:08.429]  
[23:54:08.430]  <debugvars>
[23:54:08.430]    // Pre-defined
[23:54:08.430]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:54:08.430]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:54:08.430]    __dp=0x00000000
[23:54:08.430]    __ap=0x00000000
[23:54:08.430]    __traceout=0x00000001      (SWO Trace)
[23:54:08.430]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:54:08.431]    __FlashAddr=0x00000000
[23:54:08.431]    __FlashLen=0x00000000
[23:54:08.431]    __FlashArg=0x00000000
[23:54:08.431]    __FlashOp=0x00000000
[23:54:08.431]    __Result=0x00000000
[23:54:08.431]    
[23:54:08.431]    // User-defined
[23:54:08.431]    DbgMCU_CR=0x00000007
[23:54:08.431]    DbgMCU_APB1_Fz=0x00000000
[23:54:08.431]    DbgMCU_APB2_Fz=0x00000000
[23:54:08.432]    TraceClk_Pin=0x00040002
[23:54:08.432]    TraceD0_Pin=0x00040003
[23:54:08.432]    TraceD1_Pin=0x00040004
[23:54:08.432]    TraceD2_Pin=0x00040005
[23:54:08.432]    TraceD3_Pin=0x00040006
[23:54:08.432]  </debugvars>
[23:54:08.432]  
[23:54:08.432]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:54:08.432]    <block atomic="false" info="">
[23:54:08.433]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:54:08.433]        // -> [traceSWO <= 0x00000001]
[23:54:08.433]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:54:08.433]        // -> [traceTPIU <= 0x00000000]
[23:54:08.433]    </block>
[23:54:08.433]    <control if="traceSWO" while="" timeout="0" info="">
[23:54:08.433]      // if-block "traceSWO"
[23:54:08.433]        // =>  TRUE
[23:54:08.433]      <block atomic="false" info="">
[23:54:08.434]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:54:08.434]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:54:08.434]            <block atomic="false" info="">
[23:54:08.434]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:54:08.434]                // -> [dbgmcu_val <= 0x00000000]
[23:54:08.434]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:54:08.434]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:54:08.434]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:54:08.435]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.435]                // -> [dbgmcu_val <= 0x00000007]
[23:54:08.435]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:54:08.435]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:54:08.435]              Sequence("ConfigureTraceSWOPin");
[23:54:08.435]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:54:08.435]                  <block atomic="false" info="">
[23:54:08.436]                    __var pin     = 0;
[23:54:08.436]                      // -> [pin <= 0x00000000]
[23:54:08.436]                    __var port    = 0;
[23:54:08.436]                      // -> [port <= 0x00000000]
[23:54:08.436]                    __var portAdr = 0;
[23:54:08.436]                      // -> [portAdr <= 0x00000000]
[23:54:08.436]                    __var pos     = 0;
[23:54:08.436]                      // -> [pos <= 0x00000000]
[23:54:08.436]                    __var SWO_Pin = 0x00010003;          // PB3
[23:54:08.437]                      // -> [SWO_Pin <= 0x00010003]
[23:54:08.437]                  </block>
[23:54:08.437]                  <block atomic="false" info="configure SWO">
[23:54:08.437]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:54:08.437]                      // -> [pin <= 0x00000003]
[23:54:08.437]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:54:08.437]                      // -> [port <= 0x00000001]
[23:54:08.437]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:54:08.437]                      // -> [portAdr <= 0x40020400]
[23:54:08.438]                    pos = pin * 2;
[23:54:08.438]                      // -> [pos <= 0x00000006]
[23:54:08.438]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:54:08.438]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.439]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.439]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:54:08.439]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.440]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.440]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:54:08.440]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.441]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.441]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:54:08.441]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.442]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.442]                  </block>
[23:54:08.442]                  <control if="pin <  8" while="" timeout="0" info="">
[23:54:08.442]                    // if-block "pin <  8"
[23:54:08.442]                      // =>  TRUE
[23:54:08.442]                    <block atomic="false" info="">
[23:54:08.442]                      pos = ((pin    ) & 7) * 4;
[23:54:08.442]                        // -> [pos <= 0x0000000C]
[23:54:08.443]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:54:08.443]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.444]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.444]                    </block>
[23:54:08.444]                    // end if-block "pin <  8"
[23:54:08.444]                  </control>
[23:54:08.444]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:54:08.444]                    // if-block "pin >= 8"
[23:54:08.444]                      // =>  FALSE
[23:54:08.444]                    // skip if-block "pin >= 8"
[23:54:08.445]                  </control>
[23:54:08.445]                </sequence>
[23:54:08.445]            </block>
[23:54:08.445]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:54:08.445]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:54:08.445]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.446]            </block>
[23:54:08.446]          </sequence>
[23:54:08.446]      </block>
[23:54:08.446]      // end if-block "traceSWO"
[23:54:08.446]    </control>
[23:54:08.446]    <control if="traceTPIU" while="" timeout="0" info="">
[23:54:08.446]      // if-block "traceTPIU"
[23:54:08.446]        // =>  FALSE
[23:54:08.446]      // skip if-block "traceTPIU"
[23:54:08.447]    </control>
[23:54:08.447]  </sequence>
[23:54:08.447]  
[23:54:08.655]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:54:08.655]  
[23:54:08.656]  <debugvars>
[23:54:08.656]    // Pre-defined
[23:54:08.656]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:54:08.656]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:54:08.656]    __dp=0x00000000
[23:54:08.656]    __ap=0x00000000
[23:54:08.657]    __traceout=0x00000001      (SWO Trace)
[23:54:08.657]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:54:08.657]    __FlashAddr=0x00000000
[23:54:08.657]    __FlashLen=0x00000000
[23:54:08.657]    __FlashArg=0x00000000
[23:54:08.657]    __FlashOp=0x00000000
[23:54:08.657]    __Result=0x00000000
[23:54:08.658]    
[23:54:08.658]    // User-defined
[23:54:08.658]    DbgMCU_CR=0x00000007
[23:54:08.658]    DbgMCU_APB1_Fz=0x00000000
[23:54:08.658]    DbgMCU_APB2_Fz=0x00000000
[23:54:08.658]    TraceClk_Pin=0x00040002
[23:54:08.658]    TraceD0_Pin=0x00040003
[23:54:08.658]    TraceD1_Pin=0x00040004
[23:54:08.658]    TraceD2_Pin=0x00040005
[23:54:08.659]    TraceD3_Pin=0x00040006
[23:54:08.659]  </debugvars>
[23:54:08.659]  
[23:54:08.659]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:54:08.659]    <block atomic="false" info="">
[23:54:08.659]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:54:08.659]        // -> [traceSWO <= 0x00000001]
[23:54:08.659]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:54:08.660]        // -> [traceTPIU <= 0x00000000]
[23:54:08.660]    </block>
[23:54:08.660]    <control if="traceSWO" while="" timeout="0" info="">
[23:54:08.660]      // if-block "traceSWO"
[23:54:08.660]        // =>  TRUE
[23:54:08.660]      <block atomic="false" info="">
[23:54:08.660]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:54:08.660]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:54:08.661]            <block atomic="false" info="">
[23:54:08.661]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:54:08.661]                // -> [dbgmcu_val <= 0x00000000]
[23:54:08.661]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:54:08.661]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:54:08.661]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:54:08.662]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.662]                // -> [dbgmcu_val <= 0x00000007]
[23:54:08.662]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:54:08.662]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:54:08.662]              Sequence("ConfigureTraceSWOPin");
[23:54:08.662]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:54:08.662]                  <block atomic="false" info="">
[23:54:08.662]                    __var pin     = 0;
[23:54:08.662]                      // -> [pin <= 0x00000000]
[23:54:08.663]                    __var port    = 0;
[23:54:08.663]                      // -> [port <= 0x00000000]
[23:54:08.663]                    __var portAdr = 0;
[23:54:08.663]                      // -> [portAdr <= 0x00000000]
[23:54:08.663]                    __var pos     = 0;
[23:54:08.663]                      // -> [pos <= 0x00000000]
[23:54:08.664]                    __var SWO_Pin = 0x00010003;          // PB3
[23:54:08.664]                      // -> [SWO_Pin <= 0x00010003]
[23:54:08.664]                  </block>
[23:54:08.664]                  <block atomic="false" info="configure SWO">
[23:54:08.664]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:54:08.664]                      // -> [pin <= 0x00000003]
[23:54:08.664]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:54:08.664]                      // -> [port <= 0x00000001]
[23:54:08.665]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:54:08.665]                      // -> [portAdr <= 0x40020400]
[23:54:08.665]                    pos = pin * 2;
[23:54:08.665]                      // -> [pos <= 0x00000006]
[23:54:08.665]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:54:08.665]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.666]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.666]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:54:08.666]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.667]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.667]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:54:08.667]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.668]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.668]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:54:08.668]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.669]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.669]                  </block>
[23:54:08.669]                  <control if="pin <  8" while="" timeout="0" info="">
[23:54:08.669]                    // if-block "pin <  8"
[23:54:08.669]                      // =>  TRUE
[23:54:08.669]                    <block atomic="false" info="">
[23:54:08.669]                      pos = ((pin    ) & 7) * 4;
[23:54:08.670]                        // -> [pos <= 0x0000000C]
[23:54:08.670]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:54:08.670]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.670]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.671]                    </block>
[23:54:08.671]                    // end if-block "pin <  8"
[23:54:08.671]                  </control>
[23:54:08.671]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:54:08.671]                    // if-block "pin >= 8"
[23:54:08.671]                      // =>  FALSE
[23:54:08.671]                    // skip if-block "pin >= 8"
[23:54:08.671]                  </control>
[23:54:08.672]                </sequence>
[23:54:08.672]            </block>
[23:54:08.672]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:54:08.672]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:54:08.672]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:54:08.673]            </block>
[23:54:08.673]          </sequence>
[23:54:08.673]      </block>
[23:54:08.673]      // end if-block "traceSWO"
[23:54:08.673]    </control>
[23:54:08.673]    <control if="traceTPIU" while="" timeout="0" info="">
[23:54:08.673]      // if-block "traceTPIU"
[23:54:08.673]        // =>  FALSE
[23:54:08.673]      // skip if-block "traceTPIU"
[23:54:08.674]    </control>
[23:54:08.674]  </sequence>
[23:54:08.674]  
[23:55:48.179]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:55:48.179]  
[23:55:48.180]  <debugvars>
[23:55:48.180]    // Pre-defined
[23:55:48.180]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:55:48.180]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:55:48.181]    __dp=0x00000000
[23:55:48.181]    __ap=0x00000000
[23:55:48.181]    __traceout=0x00000001      (SWO Trace)
[23:55:48.181]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:55:48.182]    __FlashAddr=0x00000000
[23:55:48.182]    __FlashLen=0x00000000
[23:55:48.182]    __FlashArg=0x00000000
[23:55:48.182]    __FlashOp=0x00000000
[23:55:48.183]    __Result=0x00000000
[23:55:48.183]    
[23:55:48.183]    // User-defined
[23:55:48.183]    DbgMCU_CR=0x00000007
[23:55:48.183]    DbgMCU_APB1_Fz=0x00000000
[23:55:48.184]    DbgMCU_APB2_Fz=0x00000000
[23:55:48.184]    TraceClk_Pin=0x00040002
[23:55:48.184]    TraceD0_Pin=0x00040003
[23:55:48.184]    TraceD1_Pin=0x00040004
[23:55:48.184]    TraceD2_Pin=0x00040005
[23:55:48.185]    TraceD3_Pin=0x00040006
[23:55:48.185]  </debugvars>
[23:55:48.185]  
[23:55:48.185]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:55:48.185]    <block atomic="false" info="">
[23:55:48.185]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:55:48.186]        // -> [traceSWO <= 0x00000001]
[23:55:48.186]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:55:48.186]        // -> [traceTPIU <= 0x00000000]
[23:55:48.186]    </block>
[23:55:48.186]    <control if="traceSWO" while="" timeout="0" info="">
[23:55:48.186]      // if-block "traceSWO"
[23:55:48.186]        // =>  TRUE
[23:55:48.186]      <block atomic="false" info="">
[23:55:48.187]        Sequence("DisableTraceSWO");
[23:55:48.187]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:55:48.187]            <block atomic="false" info="">
[23:55:48.187]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:55:48.187]                // -> [dbgmcu_val <= 0x00000000]
[23:55:48.187]            </block>
[23:55:48.187]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:55:48.187]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:55:48.188]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:55:48.188]                // -> [dbgmcu_val <= 0x00000007]
[23:55:48.188]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:55:48.189]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:55:48.189]            </block>
[23:55:48.189]          </sequence>
[23:55:48.189]      </block>
[23:55:48.189]      // end if-block "traceSWO"
[23:55:48.189]    </control>
[23:55:48.190]    <control if="traceTPIU" while="" timeout="0" info="">
[23:55:48.190]      // if-block "traceTPIU"
[23:55:48.190]        // =>  FALSE
[23:55:48.190]      // skip if-block "traceTPIU"
[23:55:48.190]    </control>
[23:55:48.190]  </sequence>
[23:55:48.190]  
[23:56:06.507]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:56:06.507]  
[23:56:06.508]  <debugvars>
[23:56:06.508]    // Pre-defined
[23:56:06.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:06.508]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:56:06.508]    __dp=0x00000000
[23:56:06.509]    __ap=0x00000000
[23:56:06.509]    __traceout=0x00000001      (SWO Trace)
[23:56:06.509]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:06.509]    __FlashAddr=0x00000000
[23:56:06.509]    __FlashLen=0x00000000
[23:56:06.509]    __FlashArg=0x00000000
[23:56:06.510]    __FlashOp=0x00000000
[23:56:06.510]    __Result=0x00000000
[23:56:06.510]    
[23:56:06.510]    // User-defined
[23:56:06.510]    DbgMCU_CR=0x00000007
[23:56:06.510]    DbgMCU_APB1_Fz=0x00000000
[23:56:06.511]    DbgMCU_APB2_Fz=0x00000000
[23:56:06.511]    TraceClk_Pin=0x00040002
[23:56:06.511]    TraceD0_Pin=0x00040003
[23:56:06.511]    TraceD1_Pin=0x00040004
[23:56:06.511]    TraceD2_Pin=0x00040005
[23:56:06.511]    TraceD3_Pin=0x00040006
[23:56:06.512]  </debugvars>
[23:56:06.512]  
[23:56:06.512]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:56:06.512]    <block atomic="false" info="">
[23:56:06.512]      Sequence("CheckID");
[23:56:06.512]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:56:06.513]          <block atomic="false" info="">
[23:56:06.513]            __var pidr1 = 0;
[23:56:06.513]              // -> [pidr1 <= 0x00000000]
[23:56:06.513]            __var pidr2 = 0;
[23:56:06.513]              // -> [pidr2 <= 0x00000000]
[23:56:06.513]            __var jep106id = 0;
[23:56:06.514]              // -> [jep106id <= 0x00000000]
[23:56:06.514]            __var ROMTableBase = 0;
[23:56:06.514]              // -> [ROMTableBase <= 0x00000000]
[23:56:06.514]            __ap = 0;      // AHB-AP
[23:56:06.514]              // -> [__ap <= 0x00000000]
[23:56:06.514]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:56:06.515]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.515]              // -> [ROMTableBase <= 0xE00FD000]
[23:56:06.515]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:56:06.516]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.516]              // -> [pidr1 <= 0x00000004]
[23:56:06.516]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:56:06.516]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.517]              // -> [pidr2 <= 0x0000001A]
[23:56:06.517]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:56:06.517]              // -> [jep106id <= 0x00000020]
[23:56:06.517]          </block>
[23:56:06.517]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:56:06.517]            // if-block "jep106id != 0x20"
[23:56:06.518]              // =>  FALSE
[23:56:06.518]            // skip if-block "jep106id != 0x20"
[23:56:06.518]          </control>
[23:56:06.518]        </sequence>
[23:56:06.518]    </block>
[23:56:06.518]  </sequence>
[23:56:06.519]  
[23:56:06.535]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:56:06.535]  
[23:56:06.535]  <debugvars>
[23:56:06.535]    // Pre-defined
[23:56:06.536]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:06.536]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[23:56:06.536]    __dp=0x00000000
[23:56:06.536]    __ap=0x00000000
[23:56:06.537]    __traceout=0x00000001      (SWO Trace)
[23:56:06.537]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:06.537]    __FlashAddr=0x00000000
[23:56:06.537]    __FlashLen=0x00000000
[23:56:06.537]    __FlashArg=0x00000000
[23:56:06.537]    __FlashOp=0x00000000
[23:56:06.538]    __Result=0x00000000
[23:56:06.538]    
[23:56:06.538]    // User-defined
[23:56:06.538]    DbgMCU_CR=0x00000007
[23:56:06.538]    DbgMCU_APB1_Fz=0x00000000
[23:56:06.538]    DbgMCU_APB2_Fz=0x00000000
[23:56:06.538]    TraceClk_Pin=0x00040002
[23:56:06.538]    TraceD0_Pin=0x00040003
[23:56:06.539]    TraceD1_Pin=0x00040004
[23:56:06.539]    TraceD2_Pin=0x00040005
[23:56:06.539]    TraceD3_Pin=0x00040006
[23:56:06.539]  </debugvars>
[23:56:06.539]  
[23:56:06.539]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:56:06.539]    <block atomic="false" info="">
[23:56:06.539]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:56:06.540]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.540]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:56:06.541]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.541]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:56:06.541]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.541]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:56:06.542]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:06.542]    </block>
[23:56:06.542]  </sequence>
[23:56:06.542]  
[23:56:37.959]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:56:37.959]  
[23:56:37.959]  <debugvars>
[23:56:37.959]    // Pre-defined
[23:56:37.960]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:37.960]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:37.960]    __dp=0x00000000
[23:56:37.960]    __ap=0x00000000
[23:56:37.960]    __traceout=0x00000001      (SWO Trace)
[23:56:37.960]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:37.960]    __FlashAddr=0x00000000
[23:56:37.961]    __FlashLen=0x00000000
[23:56:37.961]    __FlashArg=0x00000000
[23:56:37.961]    __FlashOp=0x00000000
[23:56:37.961]    __Result=0x00000000
[23:56:37.961]    
[23:56:37.961]    // User-defined
[23:56:37.961]    DbgMCU_CR=0x00000007
[23:56:37.961]    DbgMCU_APB1_Fz=0x00000000
[23:56:37.962]    DbgMCU_APB2_Fz=0x00000000
[23:56:37.962]    TraceClk_Pin=0x00040002
[23:56:37.962]    TraceD0_Pin=0x00040003
[23:56:37.962]    TraceD1_Pin=0x00040004
[23:56:37.962]    TraceD2_Pin=0x00040005
[23:56:37.962]    TraceD3_Pin=0x00040006
[23:56:37.962]  </debugvars>
[23:56:37.963]  
[23:56:37.963]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:56:37.963]    <block atomic="false" info="">
[23:56:37.963]      Sequence("CheckID");
[23:56:37.963]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:56:37.963]          <block atomic="false" info="">
[23:56:37.963]            __var pidr1 = 0;
[23:56:37.964]              // -> [pidr1 <= 0x00000000]
[23:56:37.964]            __var pidr2 = 0;
[23:56:37.964]              // -> [pidr2 <= 0x00000000]
[23:56:37.964]            __var jep106id = 0;
[23:56:37.964]              // -> [jep106id <= 0x00000000]
[23:56:37.964]            __var ROMTableBase = 0;
[23:56:37.964]              // -> [ROMTableBase <= 0x00000000]
[23:56:37.965]            __ap = 0;      // AHB-AP
[23:56:37.965]              // -> [__ap <= 0x00000000]
[23:56:37.965]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:56:37.965]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.965]              // -> [ROMTableBase <= 0xE00FD000]
[23:56:37.965]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:56:37.966]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.966]              // -> [pidr1 <= 0x00000004]
[23:56:37.966]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:56:37.966]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.967]              // -> [pidr2 <= 0x0000001A]
[23:56:37.967]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:56:37.967]              // -> [jep106id <= 0x00000020]
[23:56:37.967]          </block>
[23:56:37.967]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:56:37.967]            // if-block "jep106id != 0x20"
[23:56:37.967]              // =>  FALSE
[23:56:37.967]            // skip if-block "jep106id != 0x20"
[23:56:37.967]          </control>
[23:56:37.967]        </sequence>
[23:56:37.968]    </block>
[23:56:37.968]  </sequence>
[23:56:37.968]  
[23:56:37.982]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:56:37.982]  
[23:56:37.982]  <debugvars>
[23:56:37.982]    // Pre-defined
[23:56:37.982]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:37.982]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:37.982]    __dp=0x00000000
[23:56:37.983]    __ap=0x00000000
[23:56:37.983]    __traceout=0x00000001      (SWO Trace)
[23:56:37.983]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:37.983]    __FlashAddr=0x00000000
[23:56:37.983]    __FlashLen=0x00000000
[23:56:37.984]    __FlashArg=0x00000000
[23:56:37.984]    __FlashOp=0x00000000
[23:56:37.984]    __Result=0x00000000
[23:56:37.984]    
[23:56:37.984]    // User-defined
[23:56:37.984]    DbgMCU_CR=0x00000007
[23:56:37.985]    DbgMCU_APB1_Fz=0x00000000
[23:56:37.985]    DbgMCU_APB2_Fz=0x00000000
[23:56:37.985]    TraceClk_Pin=0x00040002
[23:56:37.985]    TraceD0_Pin=0x00040003
[23:56:37.985]    TraceD1_Pin=0x00040004
[23:56:37.985]    TraceD2_Pin=0x00040005
[23:56:37.986]    TraceD3_Pin=0x00040006
[23:56:37.986]  </debugvars>
[23:56:37.986]  
[23:56:37.986]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:56:37.986]    <block atomic="false" info="">
[23:56:37.986]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:56:37.987]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.987]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:56:37.988]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.988]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:56:37.989]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.989]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:56:37.989]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:37.989]    </block>
[23:56:37.990]  </sequence>
[23:56:37.990]  
[23:56:38.007]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:56:38.007]  
[23:56:38.007]  <debugvars>
[23:56:38.007]    // Pre-defined
[23:56:38.007]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:38.007]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:38.007]    __dp=0x00000000
[23:56:38.007]    __ap=0x00000000
[23:56:38.007]    __traceout=0x00000001      (SWO Trace)
[23:56:38.007]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:38.007]    __FlashAddr=0x00000000
[23:56:38.007]    __FlashLen=0x00000000
[23:56:38.007]    __FlashArg=0x00000000
[23:56:38.008]    __FlashOp=0x00000000
[23:56:38.008]    __Result=0x00000000
[23:56:38.008]    
[23:56:38.008]    // User-defined
[23:56:38.008]    DbgMCU_CR=0x00000007
[23:56:38.008]    DbgMCU_APB1_Fz=0x00000000
[23:56:38.009]    DbgMCU_APB2_Fz=0x00000000
[23:56:38.009]    TraceClk_Pin=0x00040002
[23:56:38.009]    TraceD0_Pin=0x00040003
[23:56:38.009]    TraceD1_Pin=0x00040004
[23:56:38.009]    TraceD2_Pin=0x00040005
[23:56:38.009]    TraceD3_Pin=0x00040006
[23:56:38.009]  </debugvars>
[23:56:38.010]  
[23:56:38.010]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:56:38.010]    <block atomic="false" info="">
[23:56:38.010]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:56:38.010]        // -> [traceSWO <= 0x00000001]
[23:56:38.010]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:56:38.011]        // -> [traceTPIU <= 0x00000000]
[23:56:38.011]    </block>
[23:56:38.011]    <control if="traceSWO" while="" timeout="0" info="">
[23:56:38.011]      // if-block "traceSWO"
[23:56:38.011]        // =>  TRUE
[23:56:38.011]      <block atomic="false" info="">
[23:56:38.011]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:56:38.012]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:56:38.012]            <block atomic="false" info="">
[23:56:38.012]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:56:38.012]                // -> [dbgmcu_val <= 0x00000000]
[23:56:38.012]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:56:38.012]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:56:38.012]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:56:38.013]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.013]                // -> [dbgmcu_val <= 0x00000007]
[23:56:38.013]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:56:38.013]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:56:38.013]              Sequence("ConfigureTraceSWOPin");
[23:56:38.013]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:56:38.014]                  <block atomic="false" info="">
[23:56:38.014]                    __var pin     = 0;
[23:56:38.014]                      // -> [pin <= 0x00000000]
[23:56:38.014]                    __var port    = 0;
[23:56:38.014]                      // -> [port <= 0x00000000]
[23:56:38.014]                    __var portAdr = 0;
[23:56:38.014]                      // -> [portAdr <= 0x00000000]
[23:56:38.014]                    __var pos     = 0;
[23:56:38.014]                      // -> [pos <= 0x00000000]
[23:56:38.015]                    __var SWO_Pin = 0x00010003;          // PB3
[23:56:38.015]                      // -> [SWO_Pin <= 0x00010003]
[23:56:38.015]                  </block>
[23:56:38.015]                  <block atomic="false" info="configure SWO">
[23:56:38.015]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:56:38.015]                      // -> [pin <= 0x00000003]
[23:56:38.015]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:56:38.015]                      // -> [port <= 0x00000001]
[23:56:38.016]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:56:38.016]                      // -> [portAdr <= 0x40020400]
[23:56:38.016]                    pos = pin * 2;
[23:56:38.016]                      // -> [pos <= 0x00000006]
[23:56:38.016]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:56:38.016]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.017]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.017]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:56:38.017]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.018]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.018]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:56:38.018]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.019]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.019]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:56:38.019]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.020]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.020]                  </block>
[23:56:38.020]                  <control if="pin <  8" while="" timeout="0" info="">
[23:56:38.020]                    // if-block "pin <  8"
[23:56:38.021]                      // =>  TRUE
[23:56:38.021]                    <block atomic="false" info="">
[23:56:38.021]                      pos = ((pin    ) & 7) * 4;
[23:56:38.021]                        // -> [pos <= 0x0000000C]
[23:56:38.021]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:56:38.022]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.022]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.022]                    </block>
[23:56:38.023]                    // end if-block "pin <  8"
[23:56:38.023]                  </control>
[23:56:38.023]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:56:38.023]                    // if-block "pin >= 8"
[23:56:38.023]                      // =>  FALSE
[23:56:38.023]                    // skip if-block "pin >= 8"
[23:56:38.023]                  </control>
[23:56:38.024]                </sequence>
[23:56:38.024]            </block>
[23:56:38.024]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:56:38.024]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:56:38.024]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.025]            </block>
[23:56:38.025]          </sequence>
[23:56:38.025]      </block>
[23:56:38.025]      // end if-block "traceSWO"
[23:56:38.025]    </control>
[23:56:38.025]    <control if="traceTPIU" while="" timeout="0" info="">
[23:56:38.025]      // if-block "traceTPIU"
[23:56:38.026]        // =>  FALSE
[23:56:38.026]      // skip if-block "traceTPIU"
[23:56:38.026]    </control>
[23:56:38.026]  </sequence>
[23:56:38.026]  
[23:56:38.030]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:56:38.030]  
[23:56:38.030]  <debugvars>
[23:56:38.030]    // Pre-defined
[23:56:38.031]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:38.031]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:38.031]    __dp=0x00000000
[23:56:38.031]    __ap=0x00000000
[23:56:38.031]    __traceout=0x00000001      (SWO Trace)
[23:56:38.031]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:38.032]    __FlashAddr=0x00000000
[23:56:38.032]    __FlashLen=0x00000000
[23:56:38.032]    __FlashArg=0x00000000
[23:56:38.032]    __FlashOp=0x00000000
[23:56:38.032]    __Result=0x00000000
[23:56:38.032]    
[23:56:38.032]    // User-defined
[23:56:38.033]    DbgMCU_CR=0x00000007
[23:56:38.033]    DbgMCU_APB1_Fz=0x00000000
[23:56:38.033]    DbgMCU_APB2_Fz=0x00000000
[23:56:38.033]    TraceClk_Pin=0x00040002
[23:56:38.033]    TraceD0_Pin=0x00040003
[23:56:38.034]    TraceD1_Pin=0x00040004
[23:56:38.034]    TraceD2_Pin=0x00040005
[23:56:38.034]    TraceD3_Pin=0x00040006
[23:56:38.034]  </debugvars>
[23:56:38.034]  
[23:56:38.034]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:56:38.035]    <block atomic="false" info="">
[23:56:38.035]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:56:38.035]        // -> [traceSWO <= 0x00000001]
[23:56:38.035]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:56:38.035]        // -> [traceTPIU <= 0x00000000]
[23:56:38.035]    </block>
[23:56:38.036]    <control if="traceSWO" while="" timeout="0" info="">
[23:56:38.036]      // if-block "traceSWO"
[23:56:38.036]        // =>  TRUE
[23:56:38.036]      <block atomic="false" info="">
[23:56:38.036]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:56:38.036]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:56:38.036]            <block atomic="false" info="">
[23:56:38.037]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:56:38.037]                // -> [dbgmcu_val <= 0x00000000]
[23:56:38.037]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:56:38.037]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:56:38.037]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:56:38.038]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.038]                // -> [dbgmcu_val <= 0x00000007]
[23:56:38.038]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:56:38.038]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:56:38.038]              Sequence("ConfigureTraceSWOPin");
[23:56:38.038]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:56:38.039]                  <block atomic="false" info="">
[23:56:38.039]                    __var pin     = 0;
[23:56:38.039]                      // -> [pin <= 0x00000000]
[23:56:38.039]                    __var port    = 0;
[23:56:38.039]                      // -> [port <= 0x00000000]
[23:56:38.039]                    __var portAdr = 0;
[23:56:38.039]                      // -> [portAdr <= 0x00000000]
[23:56:38.039]                    __var pos     = 0;
[23:56:38.040]                      // -> [pos <= 0x00000000]
[23:56:38.040]                    __var SWO_Pin = 0x00010003;          // PB3
[23:56:38.040]                      // -> [SWO_Pin <= 0x00010003]
[23:56:38.040]                  </block>
[23:56:38.040]                  <block atomic="false" info="configure SWO">
[23:56:38.040]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:56:38.040]                      // -> [pin <= 0x00000003]
[23:56:38.041]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:56:38.041]                      // -> [port <= 0x00000001]
[23:56:38.041]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:56:38.041]                      // -> [portAdr <= 0x40020400]
[23:56:38.041]                    pos = pin * 2;
[23:56:38.041]                      // -> [pos <= 0x00000006]
[23:56:38.041]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:56:38.042]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.042]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.042]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:56:38.043]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.043]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.043]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:56:38.043]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.044]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.044]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:56:38.045]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.045]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.045]                  </block>
[23:56:38.046]                  <control if="pin <  8" while="" timeout="0" info="">
[23:56:38.046]                    // if-block "pin <  8"
[23:56:38.046]                      // =>  TRUE
[23:56:38.046]                    <block atomic="false" info="">
[23:56:38.046]                      pos = ((pin    ) & 7) * 4;
[23:56:38.046]                        // -> [pos <= 0x0000000C]
[23:56:38.046]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:56:38.047]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.047]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.047]                    </block>
[23:56:38.047]                    // end if-block "pin <  8"
[23:56:38.047]                  </control>
[23:56:38.048]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:56:38.048]                    // if-block "pin >= 8"
[23:56:38.048]                      // =>  FALSE
[23:56:38.048]                    // skip if-block "pin >= 8"
[23:56:38.048]                  </control>
[23:56:38.048]                </sequence>
[23:56:38.048]            </block>
[23:56:38.048]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:56:38.048]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:56:38.049]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.049]            </block>
[23:56:38.049]          </sequence>
[23:56:38.049]      </block>
[23:56:38.049]      // end if-block "traceSWO"
[23:56:38.049]    </control>
[23:56:38.049]    <control if="traceTPIU" while="" timeout="0" info="">
[23:56:38.050]      // if-block "traceTPIU"
[23:56:38.050]        // =>  FALSE
[23:56:38.050]      // skip if-block "traceTPIU"
[23:56:38.050]    </control>
[23:56:38.050]  </sequence>
[23:56:38.050]  
[23:56:38.260]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:56:38.260]  
[23:56:38.260]  <debugvars>
[23:56:38.260]    // Pre-defined
[23:56:38.260]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:56:38.260]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:56:38.261]    __dp=0x00000000
[23:56:38.261]    __ap=0x00000000
[23:56:38.261]    __traceout=0x00000001      (SWO Trace)
[23:56:38.261]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:56:38.261]    __FlashAddr=0x00000000
[23:56:38.261]    __FlashLen=0x00000000
[23:56:38.262]    __FlashArg=0x00000000
[23:56:38.262]    __FlashOp=0x00000000
[23:56:38.262]    __Result=0x00000000
[23:56:38.262]    
[23:56:38.262]    // User-defined
[23:56:38.262]    DbgMCU_CR=0x00000007
[23:56:38.263]    DbgMCU_APB1_Fz=0x00000000
[23:56:38.263]    DbgMCU_APB2_Fz=0x00000000
[23:56:38.263]    TraceClk_Pin=0x00040002
[23:56:38.263]    TraceD0_Pin=0x00040003
[23:56:38.263]    TraceD1_Pin=0x00040004
[23:56:38.263]    TraceD2_Pin=0x00040005
[23:56:38.264]    TraceD3_Pin=0x00040006
[23:56:38.264]  </debugvars>
[23:56:38.264]  
[23:56:38.264]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:56:38.264]    <block atomic="false" info="">
[23:56:38.264]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:56:38.265]        // -> [traceSWO <= 0x00000001]
[23:56:38.265]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:56:38.265]        // -> [traceTPIU <= 0x00000000]
[23:56:38.265]    </block>
[23:56:38.265]    <control if="traceSWO" while="" timeout="0" info="">
[23:56:38.265]      // if-block "traceSWO"
[23:56:38.265]        // =>  TRUE
[23:56:38.266]      <block atomic="false" info="">
[23:56:38.266]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:56:38.266]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:56:38.266]            <block atomic="false" info="">
[23:56:38.266]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:56:38.266]                // -> [dbgmcu_val <= 0x00000000]
[23:56:38.266]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:56:38.267]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:56:38.267]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:56:38.267]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.267]                // -> [dbgmcu_val <= 0x00000007]
[23:56:38.267]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:56:38.267]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:56:38.268]              Sequence("ConfigureTraceSWOPin");
[23:56:38.268]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:56:38.268]                  <block atomic="false" info="">
[23:56:38.268]                    __var pin     = 0;
[23:56:38.268]                      // -> [pin <= 0x00000000]
[23:56:38.268]                    __var port    = 0;
[23:56:38.268]                      // -> [port <= 0x00000000]
[23:56:38.268]                    __var portAdr = 0;
[23:56:38.269]                      // -> [portAdr <= 0x00000000]
[23:56:38.269]                    __var pos     = 0;
[23:56:38.269]                      // -> [pos <= 0x00000000]
[23:56:38.269]                    __var SWO_Pin = 0x00010003;          // PB3
[23:56:38.269]                      // -> [SWO_Pin <= 0x00010003]
[23:56:38.269]                  </block>
[23:56:38.270]                  <block atomic="false" info="configure SWO">
[23:56:38.270]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:56:38.270]                      // -> [pin <= 0x00000003]
[23:56:38.270]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:56:38.270]                      // -> [port <= 0x00000001]
[23:56:38.270]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:56:38.271]                      // -> [portAdr <= 0x40020400]
[23:56:38.271]                    pos = pin * 2;
[23:56:38.271]                      // -> [pos <= 0x00000006]
[23:56:38.271]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:56:38.271]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.272]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.272]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:56:38.272]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.273]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.273]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:56:38.273]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.274]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.274]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:56:38.275]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.275]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.275]                  </block>
[23:56:38.275]                  <control if="pin <  8" while="" timeout="0" info="">
[23:56:38.275]                    // if-block "pin <  8"
[23:56:38.276]                      // =>  TRUE
[23:56:38.276]                    <block atomic="false" info="">
[23:56:38.276]                      pos = ((pin    ) & 7) * 4;
[23:56:38.276]                        // -> [pos <= 0x0000000C]
[23:56:38.276]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:56:38.277]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.277]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.277]                    </block>
[23:56:38.277]                    // end if-block "pin <  8"
[23:56:38.277]                  </control>
[23:56:38.277]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:56:38.278]                    // if-block "pin >= 8"
[23:56:38.278]                      // =>  FALSE
[23:56:38.278]                    // skip if-block "pin >= 8"
[23:56:38.278]                  </control>
[23:56:38.278]                </sequence>
[23:56:38.278]            </block>
[23:56:38.278]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:56:38.278]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:56:38.279]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:56:38.279]            </block>
[23:56:38.279]          </sequence>
[23:56:38.279]      </block>
[23:56:38.279]      // end if-block "traceSWO"
[23:56:38.280]    </control>
[23:56:38.280]    <control if="traceTPIU" while="" timeout="0" info="">
[23:56:38.280]      // if-block "traceTPIU"
[23:56:38.280]        // =>  FALSE
[23:56:38.280]      // skip if-block "traceTPIU"
[23:56:38.280]    </control>
[23:56:38.280]  </sequence>
[23:56:38.281]  
[23:59:33.239]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:59:33.239]  
[23:59:33.240]  <debugvars>
[23:59:33.240]    // Pre-defined
[23:59:33.240]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:59:33.240]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[23:59:33.240]    __dp=0x00000000
[23:59:33.241]    __ap=0x00000000
[23:59:33.241]    __traceout=0x00000001      (SWO Trace)
[23:59:33.241]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:59:33.241]    __FlashAddr=0x00000000
[23:59:33.241]    __FlashLen=0x00000000
[23:59:33.241]    __FlashArg=0x00000000
[23:59:33.242]    __FlashOp=0x00000000
[23:59:33.242]    __Result=0x00000000
[23:59:33.242]    
[23:59:33.242]    // User-defined
[23:59:33.242]    DbgMCU_CR=0x00000007
[23:59:33.242]    DbgMCU_APB1_Fz=0x00000000
[23:59:33.242]    DbgMCU_APB2_Fz=0x00000000
[23:59:33.243]    TraceClk_Pin=0x00040002
[23:59:33.243]    TraceD0_Pin=0x00040003
[23:59:33.243]    TraceD1_Pin=0x00040004
[23:59:33.243]    TraceD2_Pin=0x00040005
[23:59:33.243]    TraceD3_Pin=0x00040006
[23:59:33.243]  </debugvars>
[23:59:33.243]  
[23:59:33.243]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:59:33.244]    <block atomic="false" info="">
[23:59:33.244]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:59:33.244]        // -> [traceSWO <= 0x00000001]
[23:59:33.244]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:59:33.244]        // -> [traceTPIU <= 0x00000000]
[23:59:33.244]    </block>
[23:59:33.245]    <control if="traceSWO" while="" timeout="0" info="">
[23:59:33.245]      // if-block "traceSWO"
[23:59:33.245]        // =>  TRUE
[23:59:33.245]      <block atomic="false" info="">
[23:59:33.245]        Sequence("DisableTraceSWO");
[23:59:33.245]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:59:33.245]            <block atomic="false" info="">
[23:59:33.246]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:59:33.246]                // -> [dbgmcu_val <= 0x00000000]
[23:59:33.246]            </block>
[23:59:33.246]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:59:33.246]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:59:33.247]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:59:33.247]                // -> [dbgmcu_val <= 0x00000007]
[23:59:33.247]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:59:33.247]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:59:33.248]            </block>
[23:59:33.248]          </sequence>
[23:59:33.248]      </block>
[23:59:33.248]      // end if-block "traceSWO"
[23:59:33.248]    </control>
[23:59:33.248]    <control if="traceTPIU" while="" timeout="0" info="">
[23:59:33.248]      // if-block "traceTPIU"
[23:59:33.249]        // =>  FALSE
[23:59:33.249]      // skip if-block "traceTPIU"
[23:59:33.249]    </control>
[23:59:33.249]  </sequence>
[23:59:33.249]  
[00:09:05.728]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:09:05.728]  
[00:09:05.728]  <debugvars>
[00:09:05.728]    // Pre-defined
[00:09:05.728]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:05.729]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:09:05.729]    __dp=0x00000000
[00:09:05.729]    __ap=0x00000000
[00:09:05.729]    __traceout=0x00000001      (SWO Trace)
[00:09:05.729]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:05.729]    __FlashAddr=0x00000000
[00:09:05.729]    __FlashLen=0x00000000
[00:09:05.729]    __FlashArg=0x00000000
[00:09:05.730]    __FlashOp=0x00000000
[00:09:05.730]    __Result=0x00000000
[00:09:05.730]    
[00:09:05.730]    // User-defined
[00:09:05.730]    DbgMCU_CR=0x00000007
[00:09:05.730]    DbgMCU_APB1_Fz=0x00000000
[00:09:05.730]    DbgMCU_APB2_Fz=0x00000000
[00:09:05.730]    TraceClk_Pin=0x00040002
[00:09:05.731]    TraceD0_Pin=0x00040003
[00:09:05.731]    TraceD1_Pin=0x00040004
[00:09:05.731]    TraceD2_Pin=0x00040005
[00:09:05.731]    TraceD3_Pin=0x00040006
[00:09:05.731]  </debugvars>
[00:09:05.731]  
[00:09:05.731]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:09:05.731]    <block atomic="false" info="">
[00:09:05.732]      Sequence("CheckID");
[00:09:05.732]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:09:05.732]          <block atomic="false" info="">
[00:09:05.732]            __var pidr1 = 0;
[00:09:05.732]              // -> [pidr1 <= 0x00000000]
[00:09:05.732]            __var pidr2 = 0;
[00:09:05.732]              // -> [pidr2 <= 0x00000000]
[00:09:05.732]            __var jep106id = 0;
[00:09:05.733]              // -> [jep106id <= 0x00000000]
[00:09:05.733]            __var ROMTableBase = 0;
[00:09:05.733]              // -> [ROMTableBase <= 0x00000000]
[00:09:05.733]            __ap = 0;      // AHB-AP
[00:09:05.733]              // -> [__ap <= 0x00000000]
[00:09:05.733]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:09:05.733]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.734]              // -> [ROMTableBase <= 0xE00FD000]
[00:09:05.734]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:09:05.734]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.734]              // -> [pidr1 <= 0x00000004]
[00:09:05.735]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:09:05.735]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.735]              // -> [pidr2 <= 0x0000001A]
[00:09:05.735]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:09:05.735]              // -> [jep106id <= 0x00000020]
[00:09:05.736]          </block>
[00:09:05.736]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:09:05.736]            // if-block "jep106id != 0x20"
[00:09:05.736]              // =>  FALSE
[00:09:05.736]            // skip if-block "jep106id != 0x20"
[00:09:05.736]          </control>
[00:09:05.736]        </sequence>
[00:09:05.736]    </block>
[00:09:05.736]  </sequence>
[00:09:05.737]  
[00:09:05.751]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:09:05.751]  
[00:09:05.751]  <debugvars>
[00:09:05.751]    // Pre-defined
[00:09:05.751]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:05.751]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:09:05.752]    __dp=0x00000000
[00:09:05.752]    __ap=0x00000000
[00:09:05.752]    __traceout=0x00000001      (SWO Trace)
[00:09:05.752]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:05.752]    __FlashAddr=0x00000000
[00:09:05.752]    __FlashLen=0x00000000
[00:09:05.752]    __FlashArg=0x00000000
[00:09:05.752]    __FlashOp=0x00000000
[00:09:05.753]    __Result=0x00000000
[00:09:05.753]    
[00:09:05.753]    // User-defined
[00:09:05.753]    DbgMCU_CR=0x00000007
[00:09:05.753]    DbgMCU_APB1_Fz=0x00000000
[00:09:05.753]    DbgMCU_APB2_Fz=0x00000000
[00:09:05.753]    TraceClk_Pin=0x00040002
[00:09:05.753]    TraceD0_Pin=0x00040003
[00:09:05.753]    TraceD1_Pin=0x00040004
[00:09:05.753]    TraceD2_Pin=0x00040005
[00:09:05.754]    TraceD3_Pin=0x00040006
[00:09:05.754]  </debugvars>
[00:09:05.754]  
[00:09:05.754]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:09:05.754]    <block atomic="false" info="">
[00:09:05.754]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:09:05.755]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.755]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:09:05.755]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.755]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:09:05.756]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.756]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:09:05.756]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:05.756]    </block>
[00:09:05.757]  </sequence>
[00:09:05.757]  
[00:09:37.204]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:09:37.204]  
[00:09:37.205]  <debugvars>
[00:09:37.205]    // Pre-defined
[00:09:37.205]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:37.205]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:09:37.205]    __dp=0x00000000
[00:09:37.206]    __ap=0x00000000
[00:09:37.206]    __traceout=0x00000001      (SWO Trace)
[00:09:37.206]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:37.206]    __FlashAddr=0x00000000
[00:09:37.206]    __FlashLen=0x00000000
[00:09:37.206]    __FlashArg=0x00000000
[00:09:37.207]    __FlashOp=0x00000000
[00:09:37.207]    __Result=0x00000000
[00:09:37.207]    
[00:09:37.207]    // User-defined
[00:09:37.207]    DbgMCU_CR=0x00000007
[00:09:37.207]    DbgMCU_APB1_Fz=0x00000000
[00:09:37.207]    DbgMCU_APB2_Fz=0x00000000
[00:09:37.208]    TraceClk_Pin=0x00040002
[00:09:37.208]    TraceD0_Pin=0x00040003
[00:09:37.208]    TraceD1_Pin=0x00040004
[00:09:37.208]    TraceD2_Pin=0x00040005
[00:09:37.208]    TraceD3_Pin=0x00040006
[00:09:37.208]  </debugvars>
[00:09:37.209]  
[00:09:37.209]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:09:37.209]    <block atomic="false" info="">
[00:09:37.209]      Sequence("CheckID");
[00:09:37.209]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:09:37.209]          <block atomic="false" info="">
[00:09:37.210]            __var pidr1 = 0;
[00:09:37.210]              // -> [pidr1 <= 0x00000000]
[00:09:37.210]            __var pidr2 = 0;
[00:09:37.210]              // -> [pidr2 <= 0x00000000]
[00:09:37.210]            __var jep106id = 0;
[00:09:37.210]              // -> [jep106id <= 0x00000000]
[00:09:37.210]            __var ROMTableBase = 0;
[00:09:37.211]              // -> [ROMTableBase <= 0x00000000]
[00:09:37.211]            __ap = 0;      // AHB-AP
[00:09:37.211]              // -> [__ap <= 0x00000000]
[00:09:37.211]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:09:37.211]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.211]              // -> [ROMTableBase <= 0xE00FD000]
[00:09:37.212]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:09:37.212]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.212]              // -> [pidr1 <= 0x00000004]
[00:09:37.212]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:09:37.213]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.213]              // -> [pidr2 <= 0x0000001A]
[00:09:37.213]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:09:37.213]              // -> [jep106id <= 0x00000020]
[00:09:37.213]          </block>
[00:09:37.213]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:09:37.214]            // if-block "jep106id != 0x20"
[00:09:37.214]              // =>  FALSE
[00:09:37.214]            // skip if-block "jep106id != 0x20"
[00:09:37.214]          </control>
[00:09:37.214]        </sequence>
[00:09:37.214]    </block>
[00:09:37.214]  </sequence>
[00:09:37.214]  
[00:09:37.229]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:09:37.229]  
[00:09:37.229]  <debugvars>
[00:09:37.229]    // Pre-defined
[00:09:37.230]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:37.230]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:09:37.230]    __dp=0x00000000
[00:09:37.230]    __ap=0x00000000
[00:09:37.230]    __traceout=0x00000001      (SWO Trace)
[00:09:37.230]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:37.230]    __FlashAddr=0x00000000
[00:09:37.231]    __FlashLen=0x00000000
[00:09:37.231]    __FlashArg=0x00000000
[00:09:37.231]    __FlashOp=0x00000000
[00:09:37.231]    __Result=0x00000000
[00:09:37.231]    
[00:09:37.231]    // User-defined
[00:09:37.231]    DbgMCU_CR=0x00000007
[00:09:37.231]    DbgMCU_APB1_Fz=0x00000000
[00:09:37.231]    DbgMCU_APB2_Fz=0x00000000
[00:09:37.232]    TraceClk_Pin=0x00040002
[00:09:37.232]    TraceD0_Pin=0x00040003
[00:09:37.232]    TraceD1_Pin=0x00040004
[00:09:37.232]    TraceD2_Pin=0x00040005
[00:09:37.232]    TraceD3_Pin=0x00040006
[00:09:37.232]  </debugvars>
[00:09:37.233]  
[00:09:37.233]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:09:37.233]    <block atomic="false" info="">
[00:09:37.233]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:09:37.233]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.234]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:09:37.234]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.234]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:09:37.235]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.235]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:09:37.235]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.235]    </block>
[00:09:37.235]  </sequence>
[00:09:37.236]  
[00:09:37.252]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:09:37.252]  
[00:09:37.252]  <debugvars>
[00:09:37.252]    // Pre-defined
[00:09:37.253]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:37.253]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:09:37.253]    __dp=0x00000000
[00:09:37.253]    __ap=0x00000000
[00:09:37.253]    __traceout=0x00000001      (SWO Trace)
[00:09:37.254]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:37.254]    __FlashAddr=0x00000000
[00:09:37.254]    __FlashLen=0x00000000
[00:09:37.254]    __FlashArg=0x00000000
[00:09:37.255]    __FlashOp=0x00000000
[00:09:37.255]    __Result=0x00000000
[00:09:37.255]    
[00:09:37.255]    // User-defined
[00:09:37.255]    DbgMCU_CR=0x00000007
[00:09:37.255]    DbgMCU_APB1_Fz=0x00000000
[00:09:37.255]    DbgMCU_APB2_Fz=0x00000000
[00:09:37.256]    TraceClk_Pin=0x00040002
[00:09:37.256]    TraceD0_Pin=0x00040003
[00:09:37.256]    TraceD1_Pin=0x00040004
[00:09:37.256]    TraceD2_Pin=0x00040005
[00:09:37.257]    TraceD3_Pin=0x00040006
[00:09:37.257]  </debugvars>
[00:09:37.257]  
[00:09:37.257]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:09:37.257]    <block atomic="false" info="">
[00:09:37.258]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:09:37.258]        // -> [traceSWO <= 0x00000001]
[00:09:37.258]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:09:37.258]        // -> [traceTPIU <= 0x00000000]
[00:09:37.258]    </block>
[00:09:37.258]    <control if="traceSWO" while="" timeout="0" info="">
[00:09:37.259]      // if-block "traceSWO"
[00:09:37.259]        // =>  TRUE
[00:09:37.259]      <block atomic="false" info="">
[00:09:37.259]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:09:37.259]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:09:37.260]            <block atomic="false" info="">
[00:09:37.260]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:09:37.260]                // -> [dbgmcu_val <= 0x00000000]
[00:09:37.260]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:09:37.260]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:09:37.260]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:09:37.261]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.261]                // -> [dbgmcu_val <= 0x00000007]
[00:09:37.261]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:09:37.262]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:09:37.262]              Sequence("ConfigureTraceSWOPin");
[00:09:37.262]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:09:37.262]                  <block atomic="false" info="">
[00:09:37.262]                    __var pin     = 0;
[00:09:37.262]                      // -> [pin <= 0x00000000]
[00:09:37.262]                    __var port    = 0;
[00:09:37.263]                      // -> [port <= 0x00000000]
[00:09:37.263]                    __var portAdr = 0;
[00:09:37.263]                      // -> [portAdr <= 0x00000000]
[00:09:37.263]                    __var pos     = 0;
[00:09:37.263]                      // -> [pos <= 0x00000000]
[00:09:37.263]                    __var SWO_Pin = 0x00010003;          // PB3
[00:09:37.263]                      // -> [SWO_Pin <= 0x00010003]
[00:09:37.264]                  </block>
[00:09:37.264]                  <block atomic="false" info="configure SWO">
[00:09:37.264]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:09:37.264]                      // -> [pin <= 0x00000003]
[00:09:37.264]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:09:37.264]                      // -> [port <= 0x00000001]
[00:09:37.264]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:09:37.264]                      // -> [portAdr <= 0x40020400]
[00:09:37.265]                    pos = pin * 2;
[00:09:37.265]                      // -> [pos <= 0x00000006]
[00:09:37.265]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:09:37.265]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.266]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.266]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:09:37.266]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.267]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.267]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:09:37.267]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.268]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.268]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:09:37.268]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.269]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.269]                  </block>
[00:09:37.269]                  <control if="pin <  8" while="" timeout="0" info="">
[00:09:37.269]                    // if-block "pin <  8"
[00:09:37.269]                      // =>  TRUE
[00:09:37.270]                    <block atomic="false" info="">
[00:09:37.270]                      pos = ((pin    ) & 7) * 4;
[00:09:37.270]                        // -> [pos <= 0x0000000C]
[00:09:37.270]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:09:37.270]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.271]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.271]                    </block>
[00:09:37.271]                    // end if-block "pin <  8"
[00:09:37.271]                  </control>
[00:09:37.271]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:09:37.271]                    // if-block "pin >= 8"
[00:09:37.271]                      // =>  FALSE
[00:09:37.272]                    // skip if-block "pin >= 8"
[00:09:37.272]                  </control>
[00:09:37.272]                </sequence>
[00:09:37.272]            </block>
[00:09:37.272]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:09:37.272]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:09:37.273]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.273]            </block>
[00:09:37.273]          </sequence>
[00:09:37.273]      </block>
[00:09:37.273]      // end if-block "traceSWO"
[00:09:37.273]    </control>
[00:09:37.274]    <control if="traceTPIU" while="" timeout="0" info="">
[00:09:37.274]      // if-block "traceTPIU"
[00:09:37.274]        // =>  FALSE
[00:09:37.274]      // skip if-block "traceTPIU"
[00:09:37.274]    </control>
[00:09:37.274]  </sequence>
[00:09:37.274]  
[00:09:37.278]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:09:37.278]  
[00:09:37.278]  <debugvars>
[00:09:37.278]    // Pre-defined
[00:09:37.278]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:37.279]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:09:37.279]    __dp=0x00000000
[00:09:37.279]    __ap=0x00000000
[00:09:37.279]    __traceout=0x00000001      (SWO Trace)
[00:09:37.279]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:37.279]    __FlashAddr=0x00000000
[00:09:37.279]    __FlashLen=0x00000000
[00:09:37.280]    __FlashArg=0x00000000
[00:09:37.280]    __FlashOp=0x00000000
[00:09:37.280]    __Result=0x00000000
[00:09:37.281]    
[00:09:37.281]    // User-defined
[00:09:37.281]    DbgMCU_CR=0x00000007
[00:09:37.281]    DbgMCU_APB1_Fz=0x00000000
[00:09:37.281]    DbgMCU_APB2_Fz=0x00000000
[00:09:37.281]    TraceClk_Pin=0x00040002
[00:09:37.281]    TraceD0_Pin=0x00040003
[00:09:37.281]    TraceD1_Pin=0x00040004
[00:09:37.281]    TraceD2_Pin=0x00040005
[00:09:37.281]    TraceD3_Pin=0x00040006
[00:09:37.282]  </debugvars>
[00:09:37.282]  
[00:09:37.282]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:09:37.282]    <block atomic="false" info="">
[00:09:37.282]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:09:37.282]        // -> [traceSWO <= 0x00000001]
[00:09:37.282]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:09:37.282]        // -> [traceTPIU <= 0x00000000]
[00:09:37.283]    </block>
[00:09:37.283]    <control if="traceSWO" while="" timeout="0" info="">
[00:09:37.283]      // if-block "traceSWO"
[00:09:37.283]        // =>  TRUE
[00:09:37.283]      <block atomic="false" info="">
[00:09:37.283]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:09:37.283]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:09:37.283]            <block atomic="false" info="">
[00:09:37.283]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:09:37.284]                // -> [dbgmcu_val <= 0x00000000]
[00:09:37.284]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:09:37.284]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:09:37.284]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:09:37.284]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.284]                // -> [dbgmcu_val <= 0x00000007]
[00:09:37.285]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:09:37.285]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:09:37.285]              Sequence("ConfigureTraceSWOPin");
[00:09:37.285]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:09:37.285]                  <block atomic="false" info="">
[00:09:37.285]                    __var pin     = 0;
[00:09:37.285]                      // -> [pin <= 0x00000000]
[00:09:37.285]                    __var port    = 0;
[00:09:37.285]                      // -> [port <= 0x00000000]
[00:09:37.285]                    __var portAdr = 0;
[00:09:37.285]                      // -> [portAdr <= 0x00000000]
[00:09:37.286]                    __var pos     = 0;
[00:09:37.286]                      // -> [pos <= 0x00000000]
[00:09:37.286]                    __var SWO_Pin = 0x00010003;          // PB3
[00:09:37.286]                      // -> [SWO_Pin <= 0x00010003]
[00:09:37.286]                  </block>
[00:09:37.286]                  <block atomic="false" info="configure SWO">
[00:09:37.286]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:09:37.286]                      // -> [pin <= 0x00000003]
[00:09:37.286]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:09:37.287]                      // -> [port <= 0x00000001]
[00:09:37.287]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:09:37.287]                      // -> [portAdr <= 0x40020400]
[00:09:37.287]                    pos = pin * 2;
[00:09:37.287]                      // -> [pos <= 0x00000006]
[00:09:37.287]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:09:37.288]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.288]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.288]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:09:37.289]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.289]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.289]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:09:37.289]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.290]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.290]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:09:37.290]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.291]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.291]                  </block>
[00:09:37.291]                  <control if="pin <  8" while="" timeout="0" info="">
[00:09:37.291]                    // if-block "pin <  8"
[00:09:37.291]                      // =>  TRUE
[00:09:37.291]                    <block atomic="false" info="">
[00:09:37.291]                      pos = ((pin    ) & 7) * 4;
[00:09:37.292]                        // -> [pos <= 0x0000000C]
[00:09:37.292]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:09:37.292]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.293]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.293]                    </block>
[00:09:37.293]                    // end if-block "pin <  8"
[00:09:37.293]                  </control>
[00:09:37.293]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:09:37.293]                    // if-block "pin >= 8"
[00:09:37.293]                      // =>  FALSE
[00:09:37.294]                    // skip if-block "pin >= 8"
[00:09:37.294]                  </control>
[00:09:37.294]                </sequence>
[00:09:37.294]            </block>
[00:09:37.294]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:09:37.294]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:09:37.295]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.295]            </block>
[00:09:37.295]          </sequence>
[00:09:37.295]      </block>
[00:09:37.295]      // end if-block "traceSWO"
[00:09:37.295]    </control>
[00:09:37.295]    <control if="traceTPIU" while="" timeout="0" info="">
[00:09:37.296]      // if-block "traceTPIU"
[00:09:37.296]        // =>  FALSE
[00:09:37.296]      // skip if-block "traceTPIU"
[00:09:37.296]    </control>
[00:09:37.296]  </sequence>
[00:09:37.296]  
[00:09:37.509]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:09:37.509]  
[00:09:37.509]  <debugvars>
[00:09:37.510]    // Pre-defined
[00:09:37.510]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:09:37.510]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:09:37.510]    __dp=0x00000000
[00:09:37.510]    __ap=0x00000000
[00:09:37.510]    __traceout=0x00000001      (SWO Trace)
[00:09:37.511]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:09:37.511]    __FlashAddr=0x00000000
[00:09:37.511]    __FlashLen=0x00000000
[00:09:37.511]    __FlashArg=0x00000000
[00:09:37.511]    __FlashOp=0x00000000
[00:09:37.512]    __Result=0x00000000
[00:09:37.512]    
[00:09:37.512]    // User-defined
[00:09:37.512]    DbgMCU_CR=0x00000007
[00:09:37.512]    DbgMCU_APB1_Fz=0x00000000
[00:09:37.512]    DbgMCU_APB2_Fz=0x00000000
[00:09:37.513]    TraceClk_Pin=0x00040002
[00:09:37.513]    TraceD0_Pin=0x00040003
[00:09:37.513]    TraceD1_Pin=0x00040004
[00:09:37.513]    TraceD2_Pin=0x00040005
[00:09:37.513]    TraceD3_Pin=0x00040006
[00:09:37.513]  </debugvars>
[00:09:37.514]  
[00:09:37.514]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:09:37.514]    <block atomic="false" info="">
[00:09:37.514]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:09:37.514]        // -> [traceSWO <= 0x00000001]
[00:09:37.515]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:09:37.515]        // -> [traceTPIU <= 0x00000000]
[00:09:37.515]    </block>
[00:09:37.515]    <control if="traceSWO" while="" timeout="0" info="">
[00:09:37.515]      // if-block "traceSWO"
[00:09:37.515]        // =>  TRUE
[00:09:37.515]      <block atomic="false" info="">
[00:09:37.516]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:09:37.516]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:09:37.517]            <block atomic="false" info="">
[00:09:37.517]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:09:37.517]                // -> [dbgmcu_val <= 0x00000000]
[00:09:37.517]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:09:37.517]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:09:37.517]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:09:37.518]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.518]                // -> [dbgmcu_val <= 0x00000007]
[00:09:37.518]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:09:37.518]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:09:37.518]              Sequence("ConfigureTraceSWOPin");
[00:09:37.518]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:09:37.518]                  <block atomic="false" info="">
[00:09:37.518]                    __var pin     = 0;
[00:09:37.519]                      // -> [pin <= 0x00000000]
[00:09:37.519]                    __var port    = 0;
[00:09:37.519]                      // -> [port <= 0x00000000]
[00:09:37.519]                    __var portAdr = 0;
[00:09:37.519]                      // -> [portAdr <= 0x00000000]
[00:09:37.519]                    __var pos     = 0;
[00:09:37.519]                      // -> [pos <= 0x00000000]
[00:09:37.519]                    __var SWO_Pin = 0x00010003;          // PB3
[00:09:37.520]                      // -> [SWO_Pin <= 0x00010003]
[00:09:37.520]                  </block>
[00:09:37.520]                  <block atomic="false" info="configure SWO">
[00:09:37.520]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:09:37.520]                      // -> [pin <= 0x00000003]
[00:09:37.520]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:09:37.520]                      // -> [port <= 0x00000001]
[00:09:37.520]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:09:37.521]                      // -> [portAdr <= 0x40020400]
[00:09:37.521]                    pos = pin * 2;
[00:09:37.521]                      // -> [pos <= 0x00000006]
[00:09:37.521]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:09:37.521]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.522]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.522]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:09:37.522]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.523]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.523]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:09:37.523]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.524]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.524]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:09:37.524]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.525]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.525]                  </block>
[00:09:37.525]                  <control if="pin <  8" while="" timeout="0" info="">
[00:09:37.525]                    // if-block "pin <  8"
[00:09:37.525]                      // =>  TRUE
[00:09:37.525]                    <block atomic="false" info="">
[00:09:37.526]                      pos = ((pin    ) & 7) * 4;
[00:09:37.526]                        // -> [pos <= 0x0000000C]
[00:09:37.526]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:09:37.526]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.527]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.527]                    </block>
[00:09:37.527]                    // end if-block "pin <  8"
[00:09:37.527]                  </control>
[00:09:37.527]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:09:37.527]                    // if-block "pin >= 8"
[00:09:37.527]                      // =>  FALSE
[00:09:37.527]                    // skip if-block "pin >= 8"
[00:09:37.528]                  </control>
[00:09:37.528]                </sequence>
[00:09:37.528]            </block>
[00:09:37.528]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:09:37.528]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:09:37.528]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:09:37.529]            </block>
[00:09:37.529]          </sequence>
[00:09:37.529]      </block>
[00:09:37.529]      // end if-block "traceSWO"
[00:09:37.529]    </control>
[00:09:37.529]    <control if="traceTPIU" while="" timeout="0" info="">
[00:09:37.529]      // if-block "traceTPIU"
[00:09:37.529]        // =>  FALSE
[00:09:37.530]      // skip if-block "traceTPIU"
[00:09:37.530]    </control>
[00:09:37.530]  </sequence>
[00:09:37.530]  
[00:11:47.433]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:11:47.433]  
[00:11:47.434]  <debugvars>
[00:11:47.434]    // Pre-defined
[00:11:47.434]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:11:47.435]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:11:47.435]    __dp=0x00000000
[00:11:47.435]    __ap=0x00000000
[00:11:47.436]    __traceout=0x00000001      (SWO Trace)
[00:11:47.436]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:11:47.437]    __FlashAddr=0x00000000
[00:11:47.437]    __FlashLen=0x00000000
[00:11:47.437]    __FlashArg=0x00000000
[00:11:47.438]    __FlashOp=0x00000000
[00:11:47.438]    __Result=0x00000000
[00:11:47.438]    
[00:11:47.438]    // User-defined
[00:11:47.438]    DbgMCU_CR=0x00000007
[00:11:47.439]    DbgMCU_APB1_Fz=0x00000000
[00:11:47.439]    DbgMCU_APB2_Fz=0x00000000
[00:11:47.439]    TraceClk_Pin=0x00040002
[00:11:47.439]    TraceD0_Pin=0x00040003
[00:11:47.439]    TraceD1_Pin=0x00040004
[00:11:47.440]    TraceD2_Pin=0x00040005
[00:11:47.440]    TraceD3_Pin=0x00040006
[00:11:47.440]  </debugvars>
[00:11:47.440]  
[00:11:47.440]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:11:47.440]    <block atomic="false" info="">
[00:11:47.441]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:11:47.441]        // -> [traceSWO <= 0x00000001]
[00:11:47.441]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:11:47.441]        // -> [traceTPIU <= 0x00000000]
[00:11:47.441]    </block>
[00:11:47.441]    <control if="traceSWO" while="" timeout="0" info="">
[00:11:47.442]      // if-block "traceSWO"
[00:11:47.442]        // =>  TRUE
[00:11:47.442]      <block atomic="false" info="">
[00:11:47.442]        Sequence("DisableTraceSWO");
[00:11:47.442]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:11:47.442]            <block atomic="false" info="">
[00:11:47.443]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:11:47.443]                // -> [dbgmcu_val <= 0x00000000]
[00:11:47.443]            </block>
[00:11:47.443]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:11:47.443]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:11:47.444]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:11:47.444]                // -> [dbgmcu_val <= 0x00000007]
[00:11:47.444]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[00:11:47.445]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:11:47.445]            </block>
[00:11:47.445]          </sequence>
[00:11:47.445]      </block>
[00:11:47.445]      // end if-block "traceSWO"
[00:11:47.445]    </control>
[00:11:47.445]    <control if="traceTPIU" while="" timeout="0" info="">
[00:11:47.446]      // if-block "traceTPIU"
[00:11:47.446]        // =>  FALSE
[00:11:47.446]      // skip if-block "traceTPIU"
[00:11:47.446]    </control>
[00:11:47.446]  </sequence>
[00:11:47.446]  
[00:18:31.641]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:18:31.641]  
[00:18:31.641]  <debugvars>
[00:18:31.641]    // Pre-defined
[00:18:31.642]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:18:31.642]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:18:31.642]    __dp=0x00000000
[00:18:31.642]    __ap=0x00000000
[00:18:31.642]    __traceout=0x00000001      (SWO Trace)
[00:18:31.642]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:18:31.642]    __FlashAddr=0x00000000
[00:18:31.643]    __FlashLen=0x00000000
[00:18:31.643]    __FlashArg=0x00000000
[00:18:31.643]    __FlashOp=0x00000000
[00:18:31.643]    __Result=0x00000000
[00:18:31.643]    
[00:18:31.643]    // User-defined
[00:18:31.643]    DbgMCU_CR=0x00000007
[00:18:31.644]    DbgMCU_APB1_Fz=0x00000000
[00:18:31.644]    DbgMCU_APB2_Fz=0x00000000
[00:18:31.644]    TraceClk_Pin=0x00040002
[00:18:31.644]    TraceD0_Pin=0x00040003
[00:18:31.644]    TraceD1_Pin=0x00040004
[00:18:31.644]    TraceD2_Pin=0x00040005
[00:18:31.645]    TraceD3_Pin=0x00040006
[00:18:31.645]  </debugvars>
[00:18:31.645]  
[00:18:31.645]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:18:31.645]    <block atomic="false" info="">
[00:18:31.645]      Sequence("CheckID");
[00:18:31.646]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:18:31.646]          <block atomic="false" info="">
[00:18:31.646]            __var pidr1 = 0;
[00:18:31.646]              // -> [pidr1 <= 0x00000000]
[00:18:31.646]            __var pidr2 = 0;
[00:18:31.646]              // -> [pidr2 <= 0x00000000]
[00:18:31.646]            __var jep106id = 0;
[00:18:31.647]              // -> [jep106id <= 0x00000000]
[00:18:31.647]            __var ROMTableBase = 0;
[00:18:31.647]              // -> [ROMTableBase <= 0x00000000]
[00:18:31.647]            __ap = 0;      // AHB-AP
[00:18:31.647]              // -> [__ap <= 0x00000000]
[00:18:31.647]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:18:31.648]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.648]              // -> [ROMTableBase <= 0xE00FD000]
[00:18:31.648]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:18:31.648]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.648]              // -> [pidr1 <= 0x00000004]
[00:18:31.649]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:18:31.649]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.649]              // -> [pidr2 <= 0x0000001A]
[00:18:31.649]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:18:31.649]              // -> [jep106id <= 0x00000020]
[00:18:31.650]          </block>
[00:18:31.650]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:18:31.650]            // if-block "jep106id != 0x20"
[00:18:31.650]              // =>  FALSE
[00:18:31.650]            // skip if-block "jep106id != 0x20"
[00:18:31.650]          </control>
[00:18:31.650]        </sequence>
[00:18:31.651]    </block>
[00:18:31.651]  </sequence>
[00:18:31.651]  
[00:18:31.665]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:18:31.665]  
[00:18:31.666]  <debugvars>
[00:18:31.666]    // Pre-defined
[00:18:31.666]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:18:31.666]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:18:31.666]    __dp=0x00000000
[00:18:31.667]    __ap=0x00000000
[00:18:31.667]    __traceout=0x00000001      (SWO Trace)
[00:18:31.667]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:18:31.667]    __FlashAddr=0x00000000
[00:18:31.667]    __FlashLen=0x00000000
[00:18:31.667]    __FlashArg=0x00000000
[00:18:31.668]    __FlashOp=0x00000000
[00:18:31.668]    __Result=0x00000000
[00:18:31.668]    
[00:18:31.668]    // User-defined
[00:18:31.668]    DbgMCU_CR=0x00000007
[00:18:31.668]    DbgMCU_APB1_Fz=0x00000000
[00:18:31.669]    DbgMCU_APB2_Fz=0x00000000
[00:18:31.669]    TraceClk_Pin=0x00040002
[00:18:31.669]    TraceD0_Pin=0x00040003
[00:18:31.669]    TraceD1_Pin=0x00040004
[00:18:31.669]    TraceD2_Pin=0x00040005
[00:18:31.669]    TraceD3_Pin=0x00040006
[00:18:31.670]  </debugvars>
[00:18:31.670]  
[00:18:31.670]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:18:31.670]    <block atomic="false" info="">
[00:18:31.670]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:18:31.671]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.671]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:18:31.672]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.672]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:18:31.672]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.672]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:18:31.673]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:18:31.673]    </block>
[00:18:31.673]  </sequence>
[00:18:31.673]  
[00:19:51.647]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:19:51.647]  
[00:19:51.647]  <debugvars>
[00:19:51.647]    // Pre-defined
[00:19:51.647]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:19:51.647]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:19:51.648]    __dp=0x00000000
[00:19:51.648]    __ap=0x00000000
[00:19:51.648]    __traceout=0x00000001      (SWO Trace)
[00:19:51.648]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:19:51.648]    __FlashAddr=0x00000000
[00:19:51.648]    __FlashLen=0x00000000
[00:19:51.649]    __FlashArg=0x00000000
[00:19:51.649]    __FlashOp=0x00000000
[00:19:51.649]    __Result=0x00000000
[00:19:51.649]    
[00:19:51.649]    // User-defined
[00:19:51.649]    DbgMCU_CR=0x00000007
[00:19:51.649]    DbgMCU_APB1_Fz=0x00000000
[00:19:51.649]    DbgMCU_APB2_Fz=0x00000000
[00:19:51.649]    TraceClk_Pin=0x00040002
[00:19:51.650]    TraceD0_Pin=0x00040003
[00:19:51.650]    TraceD1_Pin=0x00040004
[00:19:51.650]    TraceD2_Pin=0x00040005
[00:19:51.650]    TraceD3_Pin=0x00040006
[00:19:51.650]  </debugvars>
[00:19:51.650]  
[00:19:51.650]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:19:51.650]    <block atomic="false" info="">
[00:19:51.650]      Sequence("CheckID");
[00:19:51.651]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:19:51.651]          <block atomic="false" info="">
[00:19:51.651]            __var pidr1 = 0;
[00:19:51.651]              // -> [pidr1 <= 0x00000000]
[00:19:51.651]            __var pidr2 = 0;
[00:19:51.651]              // -> [pidr2 <= 0x00000000]
[00:19:51.651]            __var jep106id = 0;
[00:19:51.651]              // -> [jep106id <= 0x00000000]
[00:19:51.651]            __var ROMTableBase = 0;
[00:19:51.652]              // -> [ROMTableBase <= 0x00000000]
[00:19:51.652]            __ap = 0;      // AHB-AP
[00:19:51.652]              // -> [__ap <= 0x00000000]
[00:19:51.652]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:19:51.652]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.652]              // -> [ROMTableBase <= 0xE00FD000]
[00:19:51.652]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:19:51.653]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.653]              // -> [pidr1 <= 0x00000004]
[00:19:51.653]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:19:51.654]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.654]              // -> [pidr2 <= 0x0000001A]
[00:19:51.654]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:19:51.654]              // -> [jep106id <= 0x00000020]
[00:19:51.654]          </block>
[00:19:51.654]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:19:51.654]            // if-block "jep106id != 0x20"
[00:19:51.655]              // =>  FALSE
[00:19:51.655]            // skip if-block "jep106id != 0x20"
[00:19:51.655]          </control>
[00:19:51.655]        </sequence>
[00:19:51.655]    </block>
[00:19:51.655]  </sequence>
[00:19:51.655]  
[00:19:51.671]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:19:51.671]  
[00:19:51.671]  <debugvars>
[00:19:51.672]    // Pre-defined
[00:19:51.672]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:19:51.672]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:19:51.672]    __dp=0x00000000
[00:19:51.672]    __ap=0x00000000
[00:19:51.672]    __traceout=0x00000001      (SWO Trace)
[00:19:51.673]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:19:51.673]    __FlashAddr=0x00000000
[00:19:51.673]    __FlashLen=0x00000000
[00:19:51.673]    __FlashArg=0x00000000
[00:19:51.673]    __FlashOp=0x00000000
[00:19:51.674]    __Result=0x00000000
[00:19:51.674]    
[00:19:51.674]    // User-defined
[00:19:51.674]    DbgMCU_CR=0x00000007
[00:19:51.674]    DbgMCU_APB1_Fz=0x00000000
[00:19:51.674]    DbgMCU_APB2_Fz=0x00000000
[00:19:51.674]    TraceClk_Pin=0x00040002
[00:19:51.675]    TraceD0_Pin=0x00040003
[00:19:51.675]    TraceD1_Pin=0x00040004
[00:19:51.675]    TraceD2_Pin=0x00040005
[00:19:51.675]    TraceD3_Pin=0x00040006
[00:19:51.675]  </debugvars>
[00:19:51.675]  
[00:19:51.675]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:19:51.676]    <block atomic="false" info="">
[00:19:51.676]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:19:51.676]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.676]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:19:51.677]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.677]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:19:51.677]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.678]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:19:51.678]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.678]    </block>
[00:19:51.678]  </sequence>
[00:19:51.679]  
[00:19:51.697]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:19:51.697]  
[00:19:51.697]  <debugvars>
[00:19:51.698]    // Pre-defined
[00:19:51.698]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:19:51.698]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:19:51.698]    __dp=0x00000000
[00:19:51.698]    __ap=0x00000000
[00:19:51.698]    __traceout=0x00000001      (SWO Trace)
[00:19:51.698]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:19:51.699]    __FlashAddr=0x00000000
[00:19:51.699]    __FlashLen=0x00000000
[00:19:51.699]    __FlashArg=0x00000000
[00:19:51.699]    __FlashOp=0x00000000
[00:19:51.699]    __Result=0x00000000
[00:19:51.699]    
[00:19:51.699]    // User-defined
[00:19:51.700]    DbgMCU_CR=0x00000007
[00:19:51.700]    DbgMCU_APB1_Fz=0x00000000
[00:19:51.700]    DbgMCU_APB2_Fz=0x00000000
[00:19:51.700]    TraceClk_Pin=0x00040002
[00:19:51.700]    TraceD0_Pin=0x00040003
[00:19:51.700]    TraceD1_Pin=0x00040004
[00:19:51.700]    TraceD2_Pin=0x00040005
[00:19:51.700]    TraceD3_Pin=0x00040006
[00:19:51.701]  </debugvars>
[00:19:51.701]  
[00:19:51.701]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:19:51.701]    <block atomic="false" info="">
[00:19:51.701]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:19:51.701]        // -> [traceSWO <= 0x00000001]
[00:19:51.701]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:19:51.702]        // -> [traceTPIU <= 0x00000000]
[00:19:51.702]    </block>
[00:19:51.702]    <control if="traceSWO" while="" timeout="0" info="">
[00:19:51.702]      // if-block "traceSWO"
[00:19:51.702]        // =>  TRUE
[00:19:51.702]      <block atomic="false" info="">
[00:19:51.702]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:19:51.703]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:19:51.703]            <block atomic="false" info="">
[00:19:51.703]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:19:51.703]                // -> [dbgmcu_val <= 0x00000000]
[00:19:51.703]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:19:51.703]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:19:51.703]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:19:51.703]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.703]                // -> [dbgmcu_val <= 0x00000007]
[00:19:51.703]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:19:51.703]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:19:51.703]              Sequence("ConfigureTraceSWOPin");
[00:19:51.703]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:19:51.703]                  <block atomic="false" info="">
[00:19:51.703]                    __var pin     = 0;
[00:19:51.704]                      // -> [pin <= 0x00000000]
[00:19:51.704]                    __var port    = 0;
[00:19:51.704]                      // -> [port <= 0x00000000]
[00:19:51.704]                    __var portAdr = 0;
[00:19:51.704]                      // -> [portAdr <= 0x00000000]
[00:19:51.704]                    __var pos     = 0;
[00:19:51.704]                      // -> [pos <= 0x00000000]
[00:19:51.704]                    __var SWO_Pin = 0x00010003;          // PB3
[00:19:51.705]                      // -> [SWO_Pin <= 0x00010003]
[00:19:51.705]                  </block>
[00:19:51.705]                  <block atomic="false" info="configure SWO">
[00:19:51.705]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:19:51.705]                      // -> [pin <= 0x00000003]
[00:19:51.705]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:19:51.705]                      // -> [port <= 0x00000001]
[00:19:51.706]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:19:51.706]                      // -> [portAdr <= 0x40020400]
[00:19:51.706]                    pos = pin * 2;
[00:19:51.706]                      // -> [pos <= 0x00000006]
[00:19:51.706]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:19:51.707]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.707]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.707]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:19:51.708]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.709]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.709]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:19:51.709]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.709]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.710]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:19:51.710]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.711]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.711]                  </block>
[00:19:51.711]                  <control if="pin <  8" while="" timeout="0" info="">
[00:19:51.711]                    // if-block "pin <  8"
[00:19:51.711]                      // =>  TRUE
[00:19:51.711]                    <block atomic="false" info="">
[00:19:51.711]                      pos = ((pin    ) & 7) * 4;
[00:19:51.711]                        // -> [pos <= 0x0000000C]
[00:19:51.712]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:19:51.712]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.713]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.713]                    </block>
[00:19:51.713]                    // end if-block "pin <  8"
[00:19:51.713]                  </control>
[00:19:51.713]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:19:51.713]                    // if-block "pin >= 8"
[00:19:51.713]                      // =>  FALSE
[00:19:51.714]                    // skip if-block "pin >= 8"
[00:19:51.714]                  </control>
[00:19:51.714]                </sequence>
[00:19:51.714]            </block>
[00:19:51.714]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:19:51.714]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:19:51.715]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.715]            </block>
[00:19:51.715]          </sequence>
[00:19:51.715]      </block>
[00:19:51.715]      // end if-block "traceSWO"
[00:19:51.715]    </control>
[00:19:51.715]    <control if="traceTPIU" while="" timeout="0" info="">
[00:19:51.716]      // if-block "traceTPIU"
[00:19:51.716]        // =>  FALSE
[00:19:51.716]      // skip if-block "traceTPIU"
[00:19:51.716]    </control>
[00:19:51.716]  </sequence>
[00:19:51.716]  
[00:19:51.720]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:19:51.720]  
[00:19:51.720]  <debugvars>
[00:19:51.720]    // Pre-defined
[00:19:51.721]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:19:51.721]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:19:51.721]    __dp=0x00000000
[00:19:51.721]    __ap=0x00000000
[00:19:51.721]    __traceout=0x00000001      (SWO Trace)
[00:19:51.721]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:19:51.721]    __FlashAddr=0x00000000
[00:19:51.721]    __FlashLen=0x00000000
[00:19:51.722]    __FlashArg=0x00000000
[00:19:51.722]    __FlashOp=0x00000000
[00:19:51.722]    __Result=0x00000000
[00:19:51.722]    
[00:19:51.722]    // User-defined
[00:19:51.722]    DbgMCU_CR=0x00000007
[00:19:51.722]    DbgMCU_APB1_Fz=0x00000000
[00:19:51.722]    DbgMCU_APB2_Fz=0x00000000
[00:19:51.722]    TraceClk_Pin=0x00040002
[00:19:51.723]    TraceD0_Pin=0x00040003
[00:19:51.723]    TraceD1_Pin=0x00040004
[00:19:51.723]    TraceD2_Pin=0x00040005
[00:19:51.723]    TraceD3_Pin=0x00040006
[00:19:51.723]  </debugvars>
[00:19:51.723]  
[00:19:51.723]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:19:51.723]    <block atomic="false" info="">
[00:19:51.723]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:19:51.724]        // -> [traceSWO <= 0x00000001]
[00:19:51.724]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:19:51.724]        // -> [traceTPIU <= 0x00000000]
[00:19:51.724]    </block>
[00:19:51.724]    <control if="traceSWO" while="" timeout="0" info="">
[00:19:51.724]      // if-block "traceSWO"
[00:19:51.724]        // =>  TRUE
[00:19:51.724]      <block atomic="false" info="">
[00:19:51.724]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:19:51.725]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:19:51.725]            <block atomic="false" info="">
[00:19:51.725]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:19:51.725]                // -> [dbgmcu_val <= 0x00000000]
[00:19:51.725]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:19:51.725]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:19:51.725]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:19:51.726]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.726]                // -> [dbgmcu_val <= 0x00000007]
[00:19:51.726]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:19:51.726]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:19:51.726]              Sequence("ConfigureTraceSWOPin");
[00:19:51.726]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:19:51.726]                  <block atomic="false" info="">
[00:19:51.727]                    __var pin     = 0;
[00:19:51.727]                      // -> [pin <= 0x00000000]
[00:19:51.727]                    __var port    = 0;
[00:19:51.727]                      // -> [port <= 0x00000000]
[00:19:51.727]                    __var portAdr = 0;
[00:19:51.727]                      // -> [portAdr <= 0x00000000]
[00:19:51.727]                    __var pos     = 0;
[00:19:51.727]                      // -> [pos <= 0x00000000]
[00:19:51.727]                    __var SWO_Pin = 0x00010003;          // PB3
[00:19:51.728]                      // -> [SWO_Pin <= 0x00010003]
[00:19:51.728]                  </block>
[00:19:51.728]                  <block atomic="false" info="configure SWO">
[00:19:51.728]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:19:51.728]                      // -> [pin <= 0x00000003]
[00:19:51.728]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:19:51.728]                      // -> [port <= 0x00000001]
[00:19:51.728]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:19:51.729]                      // -> [portAdr <= 0x40020400]
[00:19:51.729]                    pos = pin * 2;
[00:19:51.729]                      // -> [pos <= 0x00000006]
[00:19:51.729]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:19:51.730]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.730]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.730]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:19:51.731]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.731]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.731]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:19:51.732]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.732]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.732]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:19:51.733]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.733]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.733]                  </block>
[00:19:51.734]                  <control if="pin <  8" while="" timeout="0" info="">
[00:19:51.734]                    // if-block "pin <  8"
[00:19:51.734]                      // =>  TRUE
[00:19:51.734]                    <block atomic="false" info="">
[00:19:51.734]                      pos = ((pin    ) & 7) * 4;
[00:19:51.734]                        // -> [pos <= 0x0000000C]
[00:19:51.734]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:19:51.735]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.735]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.735]                    </block>
[00:19:51.735]                    // end if-block "pin <  8"
[00:19:51.736]                  </control>
[00:19:51.736]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:19:51.736]                    // if-block "pin >= 8"
[00:19:51.736]                      // =>  FALSE
[00:19:51.736]                    // skip if-block "pin >= 8"
[00:19:51.736]                  </control>
[00:19:51.736]                </sequence>
[00:19:51.737]            </block>
[00:19:51.737]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:19:51.737]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:19:51.737]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.737]            </block>
[00:19:51.737]          </sequence>
[00:19:51.738]      </block>
[00:19:51.738]      // end if-block "traceSWO"
[00:19:51.738]    </control>
[00:19:51.738]    <control if="traceTPIU" while="" timeout="0" info="">
[00:19:51.738]      // if-block "traceTPIU"
[00:19:51.738]        // =>  FALSE
[00:19:51.738]      // skip if-block "traceTPIU"
[00:19:51.738]    </control>
[00:19:51.739]  </sequence>
[00:19:51.739]  
[00:19:51.982]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:19:51.982]  
[00:19:51.983]  <debugvars>
[00:19:51.983]    // Pre-defined
[00:19:51.983]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:19:51.983]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:19:51.983]    __dp=0x00000000
[00:19:51.983]    __ap=0x00000000
[00:19:51.984]    __traceout=0x00000001      (SWO Trace)
[00:19:51.984]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:19:51.984]    __FlashAddr=0x00000000
[00:19:51.984]    __FlashLen=0x00000000
[00:19:51.984]    __FlashArg=0x00000000
[00:19:51.984]    __FlashOp=0x00000000
[00:19:51.984]    __Result=0x00000000
[00:19:51.985]    
[00:19:51.985]    // User-defined
[00:19:51.985]    DbgMCU_CR=0x00000007
[00:19:51.985]    DbgMCU_APB1_Fz=0x00000000
[00:19:51.985]    DbgMCU_APB2_Fz=0x00000000
[00:19:51.985]    TraceClk_Pin=0x00040002
[00:19:51.985]    TraceD0_Pin=0x00040003
[00:19:51.985]    TraceD1_Pin=0x00040004
[00:19:51.986]    TraceD2_Pin=0x00040005
[00:19:51.986]    TraceD3_Pin=0x00040006
[00:19:51.986]  </debugvars>
[00:19:51.986]  
[00:19:51.986]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:19:51.986]    <block atomic="false" info="">
[00:19:51.986]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:19:51.986]        // -> [traceSWO <= 0x00000001]
[00:19:51.987]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:19:51.987]        // -> [traceTPIU <= 0x00000000]
[00:19:51.987]    </block>
[00:19:51.987]    <control if="traceSWO" while="" timeout="0" info="">
[00:19:51.987]      // if-block "traceSWO"
[00:19:51.987]        // =>  TRUE
[00:19:51.987]      <block atomic="false" info="">
[00:19:51.987]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:19:51.987]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:19:51.988]            <block atomic="false" info="">
[00:19:51.988]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:19:51.988]                // -> [dbgmcu_val <= 0x00000000]
[00:19:51.988]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:19:51.988]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:19:51.988]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:19:51.989]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.989]                // -> [dbgmcu_val <= 0x00000007]
[00:19:51.989]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:19:51.989]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:19:51.989]              Sequence("ConfigureTraceSWOPin");
[00:19:51.989]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:19:51.989]                  <block atomic="false" info="">
[00:19:51.989]                    __var pin     = 0;
[00:19:51.990]                      // -> [pin <= 0x00000000]
[00:19:51.990]                    __var port    = 0;
[00:19:51.990]                      // -> [port <= 0x00000000]
[00:19:51.990]                    __var portAdr = 0;
[00:19:51.990]                      // -> [portAdr <= 0x00000000]
[00:19:51.990]                    __var pos     = 0;
[00:19:51.990]                      // -> [pos <= 0x00000000]
[00:19:51.990]                    __var SWO_Pin = 0x00010003;          // PB3
[00:19:51.990]                      // -> [SWO_Pin <= 0x00010003]
[00:19:51.991]                  </block>
[00:19:51.991]                  <block atomic="false" info="configure SWO">
[00:19:51.991]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:19:51.991]                      // -> [pin <= 0x00000003]
[00:19:51.991]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:19:51.991]                      // -> [port <= 0x00000001]
[00:19:51.991]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:19:51.991]                      // -> [portAdr <= 0x40020400]
[00:19:51.992]                    pos = pin * 2;
[00:19:51.992]                      // -> [pos <= 0x00000006]
[00:19:51.992]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:19:51.992]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.993]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.993]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:19:51.993]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.994]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.994]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:19:51.994]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.995]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.995]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:19:51.995]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.996]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.996]                  </block>
[00:19:51.996]                  <control if="pin <  8" while="" timeout="0" info="">
[00:19:51.996]                    // if-block "pin <  8"
[00:19:51.996]                      // =>  TRUE
[00:19:51.996]                    <block atomic="false" info="">
[00:19:51.996]                      pos = ((pin    ) & 7) * 4;
[00:19:51.996]                        // -> [pos <= 0x0000000C]
[00:19:51.997]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:19:51.997]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.997]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.998]                    </block>
[00:19:51.998]                    // end if-block "pin <  8"
[00:19:51.998]                  </control>
[00:19:51.998]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:19:51.998]                    // if-block "pin >= 8"
[00:19:51.998]                      // =>  FALSE
[00:19:51.998]                    // skip if-block "pin >= 8"
[00:19:51.998]                  </control>
[00:19:51.998]                </sequence>
[00:19:51.999]            </block>
[00:19:51.999]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:19:51.999]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:19:51.999]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:19:51.999]            </block>
[00:19:52.000]          </sequence>
[00:19:52.000]      </block>
[00:19:52.000]      // end if-block "traceSWO"
[00:19:52.000]    </control>
[00:19:52.000]    <control if="traceTPIU" while="" timeout="0" info="">
[00:19:52.000]      // if-block "traceTPIU"
[00:19:52.000]        // =>  FALSE
[00:19:52.000]      // skip if-block "traceTPIU"
[00:19:52.000]    </control>
[00:19:52.001]  </sequence>
[00:19:52.001]  
[00:23:48.592]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:23:48.592]  
[00:23:48.600]  <debugvars>
[00:23:48.600]    // Pre-defined
[00:23:48.600]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:23:48.600]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:23:48.601]    __dp=0x00000000
[00:23:48.601]    __ap=0x00000000
[00:23:48.601]    __traceout=0x00000001      (SWO Trace)
[00:23:48.601]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:23:48.601]    __FlashAddr=0x00000000
[00:23:48.602]    __FlashLen=0x00000000
[00:23:48.602]    __FlashArg=0x00000000
[00:23:48.602]    __FlashOp=0x00000000
[00:23:48.602]    __Result=0x00000000
[00:23:48.602]    
[00:23:48.602]    // User-defined
[00:23:48.603]    DbgMCU_CR=0x00000007
[00:23:48.603]    DbgMCU_APB1_Fz=0x00000000
[00:23:48.603]    DbgMCU_APB2_Fz=0x00000000
[00:23:48.603]    TraceClk_Pin=0x00040002
[00:23:48.603]    TraceD0_Pin=0x00040003
[00:23:48.604]    TraceD1_Pin=0x00040004
[00:23:48.604]    TraceD2_Pin=0x00040005
[00:23:48.604]    TraceD3_Pin=0x00040006
[00:23:48.604]  </debugvars>
[00:23:48.604]  
[00:23:48.605]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:23:48.605]    <block atomic="false" info="">
[00:23:48.605]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:23:48.605]        // -> [traceSWO <= 0x00000001]
[00:23:48.605]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:23:48.606]        // -> [traceTPIU <= 0x00000000]
[00:23:48.606]    </block>
[00:23:48.606]    <control if="traceSWO" while="" timeout="0" info="">
[00:23:48.606]      // if-block "traceSWO"
[00:23:48.606]        // =>  TRUE
[00:23:48.606]      <block atomic="false" info="">
[00:23:48.607]        Sequence("DisableTraceSWO");
[00:23:48.607]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:23:48.607]            <block atomic="false" info="">
[00:23:48.607]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:23:48.607]                // -> [dbgmcu_val <= 0x00000000]
[00:23:48.607]            </block>
[00:23:48.608]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:23:48.608]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:23:48.609]  
[00:23:48.609]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[00:23:48.609]  
[00:23:48.610]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:23:48.610]            </block>
[00:23:48.610]          </sequence>
[00:23:48.610]      </block>
[00:23:48.610]      // end if-block "traceSWO"
[00:23:48.611]    </control>
[00:23:48.611]  </sequence>
[00:23:48.611]  
[00:23:54.833]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:23:54.833]  
[00:23:54.833]  <debugvars>
[00:23:54.833]    // Pre-defined
[00:23:54.833]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:23:54.833]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:23:54.834]    __dp=0x00000000
[00:23:54.834]    __ap=0x00000000
[00:23:54.834]    __traceout=0x00000001      (SWO Trace)
[00:23:54.834]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:23:54.834]    __FlashAddr=0x00000000
[00:23:54.835]    __FlashLen=0x00000000
[00:23:54.835]    __FlashArg=0x00000000
[00:23:54.835]    __FlashOp=0x00000000
[00:23:54.835]    __Result=0x00000000
[00:23:54.835]    
[00:23:54.835]    // User-defined
[00:23:54.836]    DbgMCU_CR=0x00000007
[00:23:54.836]    DbgMCU_APB1_Fz=0x00000000
[00:23:54.836]    DbgMCU_APB2_Fz=0x00000000
[00:23:54.836]    TraceClk_Pin=0x00040002
[00:23:54.836]    TraceD0_Pin=0x00040003
[00:23:54.837]    TraceD1_Pin=0x00040004
[00:23:54.837]    TraceD2_Pin=0x00040005
[00:23:54.837]    TraceD3_Pin=0x00040006
[00:23:54.837]  </debugvars>
[00:23:54.837]  
[00:23:54.838]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:23:54.838]    <block atomic="false" info="">
[00:23:54.838]      Sequence("CheckID");
[00:23:54.838]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:23:54.838]          <block atomic="false" info="">
[00:23:54.838]            __var pidr1 = 0;
[00:23:54.839]              // -> [pidr1 <= 0x00000000]
[00:23:54.839]            __var pidr2 = 0;
[00:23:54.839]              // -> [pidr2 <= 0x00000000]
[00:23:54.839]            __var jep106id = 0;
[00:23:54.839]              // -> [jep106id <= 0x00000000]
[00:23:54.839]            __var ROMTableBase = 0;
[00:23:54.840]              // -> [ROMTableBase <= 0x00000000]
[00:23:54.840]            __ap = 0;      // AHB-AP
[00:23:54.840]              // -> [__ap <= 0x00000000]
[00:23:54.840]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:23:54.840]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.841]              // -> [ROMTableBase <= 0xE00FD000]
[00:23:54.841]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:23:54.841]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.842]              // -> [pidr1 <= 0x00000004]
[00:23:54.842]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:23:54.842]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.843]              // -> [pidr2 <= 0x0000001A]
[00:23:54.843]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:23:54.843]              // -> [jep106id <= 0x00000020]
[00:23:54.843]          </block>
[00:23:54.843]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:23:54.843]            // if-block "jep106id != 0x20"
[00:23:54.844]              // =>  FALSE
[00:23:54.844]            // skip if-block "jep106id != 0x20"
[00:23:54.844]          </control>
[00:23:54.844]        </sequence>
[00:23:54.844]    </block>
[00:23:54.844]  </sequence>
[00:23:54.845]  
[00:23:54.859]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:23:54.859]  
[00:23:54.859]  <debugvars>
[00:23:54.859]    // Pre-defined
[00:23:54.859]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:23:54.860]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:23:54.860]    __dp=0x00000000
[00:23:54.860]    __ap=0x00000000
[00:23:54.860]    __traceout=0x00000001      (SWO Trace)
[00:23:54.860]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:23:54.860]    __FlashAddr=0x00000000
[00:23:54.860]    __FlashLen=0x00000000
[00:23:54.861]    __FlashArg=0x00000000
[00:23:54.861]    __FlashOp=0x00000000
[00:23:54.861]    __Result=0x00000000
[00:23:54.861]    
[00:23:54.861]    // User-defined
[00:23:54.861]    DbgMCU_CR=0x00000007
[00:23:54.861]    DbgMCU_APB1_Fz=0x00000000
[00:23:54.862]    DbgMCU_APB2_Fz=0x00000000
[00:23:54.862]    TraceClk_Pin=0x00040002
[00:23:54.862]    TraceD0_Pin=0x00040003
[00:23:54.862]    TraceD1_Pin=0x00040004
[00:23:54.862]    TraceD2_Pin=0x00040005
[00:23:54.862]    TraceD3_Pin=0x00040006
[00:23:54.862]  </debugvars>
[00:23:54.862]  
[00:23:54.863]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:23:54.863]    <block atomic="false" info="">
[00:23:54.863]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:23:54.864]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.864]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:23:54.864]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.864]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:23:54.865]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.865]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:23:54.865]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:23:54.866]    </block>
[00:23:54.866]  </sequence>
[00:23:54.866]  
[00:24:26.351]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:24:26.351]  
[00:24:26.351]  <debugvars>
[00:24:26.352]    // Pre-defined
[00:24:26.352]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:26.352]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:26.352]    __dp=0x00000000
[00:24:26.352]    __ap=0x00000000
[00:24:26.353]    __traceout=0x00000001      (SWO Trace)
[00:24:26.353]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:26.353]    __FlashAddr=0x00000000
[00:24:26.353]    __FlashLen=0x00000000
[00:24:26.353]    __FlashArg=0x00000000
[00:24:26.354]    __FlashOp=0x00000000
[00:24:26.354]    __Result=0x00000000
[00:24:26.354]    
[00:24:26.354]    // User-defined
[00:24:26.354]    DbgMCU_CR=0x00000007
[00:24:26.354]    DbgMCU_APB1_Fz=0x00000000
[00:24:26.354]    DbgMCU_APB2_Fz=0x00000000
[00:24:26.355]    TraceClk_Pin=0x00040002
[00:24:26.355]    TraceD0_Pin=0x00040003
[00:24:26.355]    TraceD1_Pin=0x00040004
[00:24:26.355]    TraceD2_Pin=0x00040005
[00:24:26.355]    TraceD3_Pin=0x00040006
[00:24:26.355]  </debugvars>
[00:24:26.356]  
[00:24:26.356]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:24:26.356]    <block atomic="false" info="">
[00:24:26.356]      Sequence("CheckID");
[00:24:26.356]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:24:26.357]          <block atomic="false" info="">
[00:24:26.357]            __var pidr1 = 0;
[00:24:26.357]              // -> [pidr1 <= 0x00000000]
[00:24:26.357]            __var pidr2 = 0;
[00:24:26.357]              // -> [pidr2 <= 0x00000000]
[00:24:26.357]            __var jep106id = 0;
[00:24:26.358]              // -> [jep106id <= 0x00000000]
[00:24:26.358]            __var ROMTableBase = 0;
[00:24:26.358]              // -> [ROMTableBase <= 0x00000000]
[00:24:26.358]            __ap = 0;      // AHB-AP
[00:24:26.358]              // -> [__ap <= 0x00000000]
[00:24:26.358]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:24:26.359]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.359]              // -> [ROMTableBase <= 0xE00FD000]
[00:24:26.359]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:24:26.359]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.360]              // -> [pidr1 <= 0x00000004]
[00:24:26.360]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:24:26.360]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.361]              // -> [pidr2 <= 0x0000001A]
[00:24:26.361]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:24:26.361]              // -> [jep106id <= 0x00000020]
[00:24:26.361]          </block>
[00:24:26.361]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:24:26.361]            // if-block "jep106id != 0x20"
[00:24:26.361]              // =>  FALSE
[00:24:26.361]            // skip if-block "jep106id != 0x20"
[00:24:26.362]          </control>
[00:24:26.362]        </sequence>
[00:24:26.362]    </block>
[00:24:26.362]  </sequence>
[00:24:26.362]  
[00:24:26.377]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:24:26.377]  
[00:24:26.377]  <debugvars>
[00:24:26.377]    // Pre-defined
[00:24:26.378]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:26.378]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:26.378]    __dp=0x00000000
[00:24:26.378]    __ap=0x00000000
[00:24:26.378]    __traceout=0x00000001      (SWO Trace)
[00:24:26.378]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:26.378]    __FlashAddr=0x00000000
[00:24:26.379]    __FlashLen=0x00000000
[00:24:26.379]    __FlashArg=0x00000000
[00:24:26.379]    __FlashOp=0x00000000
[00:24:26.379]    __Result=0x00000000
[00:24:26.379]    
[00:24:26.379]    // User-defined
[00:24:26.380]    DbgMCU_CR=0x00000007
[00:24:26.380]    DbgMCU_APB1_Fz=0x00000000
[00:24:26.380]    DbgMCU_APB2_Fz=0x00000000
[00:24:26.380]    TraceClk_Pin=0x00040002
[00:24:26.380]    TraceD0_Pin=0x00040003
[00:24:26.381]    TraceD1_Pin=0x00040004
[00:24:26.381]    TraceD2_Pin=0x00040005
[00:24:26.381]    TraceD3_Pin=0x00040006
[00:24:26.381]  </debugvars>
[00:24:26.381]  
[00:24:26.381]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:24:26.381]    <block atomic="false" info="">
[00:24:26.382]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:24:26.382]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.382]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:24:26.383]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.383]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:24:26.384]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.384]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:24:26.385]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.385]    </block>
[00:24:26.385]  </sequence>
[00:24:26.385]  
[00:24:26.402]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:24:26.402]  
[00:24:26.402]  <debugvars>
[00:24:26.402]    // Pre-defined
[00:24:26.402]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:26.402]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:26.403]    __dp=0x00000000
[00:24:26.403]    __ap=0x00000000
[00:24:26.403]    __traceout=0x00000001      (SWO Trace)
[00:24:26.403]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:26.403]    __FlashAddr=0x00000000
[00:24:26.404]    __FlashLen=0x00000000
[00:24:26.404]    __FlashArg=0x00000000
[00:24:26.404]    __FlashOp=0x00000000
[00:24:26.404]    __Result=0x00000000
[00:24:26.404]    
[00:24:26.404]    // User-defined
[00:24:26.404]    DbgMCU_CR=0x00000007
[00:24:26.405]    DbgMCU_APB1_Fz=0x00000000
[00:24:26.405]    DbgMCU_APB2_Fz=0x00000000
[00:24:26.405]    TraceClk_Pin=0x00040002
[00:24:26.405]    TraceD0_Pin=0x00040003
[00:24:26.405]    TraceD1_Pin=0x00040004
[00:24:26.405]    TraceD2_Pin=0x00040005
[00:24:26.406]    TraceD3_Pin=0x00040006
[00:24:26.406]  </debugvars>
[00:24:26.406]  
[00:24:26.406]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:24:26.406]    <block atomic="false" info="">
[00:24:26.406]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:24:26.407]        // -> [traceSWO <= 0x00000001]
[00:24:26.407]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:24:26.407]        // -> [traceTPIU <= 0x00000000]
[00:24:26.407]    </block>
[00:24:26.407]    <control if="traceSWO" while="" timeout="0" info="">
[00:24:26.407]      // if-block "traceSWO"
[00:24:26.408]        // =>  TRUE
[00:24:26.408]      <block atomic="false" info="">
[00:24:26.408]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:24:26.408]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:24:26.408]            <block atomic="false" info="">
[00:24:26.408]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:24:26.409]                // -> [dbgmcu_val <= 0x00000000]
[00:24:26.409]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:24:26.409]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:24:26.409]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:24:26.410]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.410]                // -> [dbgmcu_val <= 0x00000007]
[00:24:26.410]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:24:26.410]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:24:26.410]              Sequence("ConfigureTraceSWOPin");
[00:24:26.410]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:24:26.411]                  <block atomic="false" info="">
[00:24:26.411]                    __var pin     = 0;
[00:24:26.411]                      // -> [pin <= 0x00000000]
[00:24:26.411]                    __var port    = 0;
[00:24:26.411]                      // -> [port <= 0x00000000]
[00:24:26.411]                    __var portAdr = 0;
[00:24:26.412]                      // -> [portAdr <= 0x00000000]
[00:24:26.412]                    __var pos     = 0;
[00:24:26.412]                      // -> [pos <= 0x00000000]
[00:24:26.412]                    __var SWO_Pin = 0x00010003;          // PB3
[00:24:26.412]                      // -> [SWO_Pin <= 0x00010003]
[00:24:26.412]                  </block>
[00:24:26.412]                  <block atomic="false" info="configure SWO">
[00:24:26.413]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:24:26.413]                      // -> [pin <= 0x00000003]
[00:24:26.413]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:24:26.413]                      // -> [port <= 0x00000001]
[00:24:26.413]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:24:26.413]                      // -> [portAdr <= 0x40020400]
[00:24:26.414]                    pos = pin * 2;
[00:24:26.414]                      // -> [pos <= 0x00000006]
[00:24:26.414]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:24:26.414]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.415]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.415]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:24:26.416]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.416]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.416]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:24:26.417]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.417]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.417]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:24:26.418]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.418]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.418]                  </block>
[00:24:26.418]                  <control if="pin <  8" while="" timeout="0" info="">
[00:24:26.419]                    // if-block "pin <  8"
[00:24:26.419]                      // =>  TRUE
[00:24:26.419]                    <block atomic="false" info="">
[00:24:26.419]                      pos = ((pin    ) & 7) * 4;
[00:24:26.419]                        // -> [pos <= 0x0000000C]
[00:24:26.419]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:24:26.420]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.420]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.420]                    </block>
[00:24:26.421]                    // end if-block "pin <  8"
[00:24:26.421]                  </control>
[00:24:26.421]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:24:26.421]                    // if-block "pin >= 8"
[00:24:26.421]                      // =>  FALSE
[00:24:26.421]                    // skip if-block "pin >= 8"
[00:24:26.421]                  </control>
[00:24:26.422]                </sequence>
[00:24:26.422]            </block>
[00:24:26.422]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:24:26.422]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:24:26.423]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.423]            </block>
[00:24:26.423]          </sequence>
[00:24:26.423]      </block>
[00:24:26.423]      // end if-block "traceSWO"
[00:24:26.423]    </control>
[00:24:26.423]    <control if="traceTPIU" while="" timeout="0" info="">
[00:24:26.424]      // if-block "traceTPIU"
[00:24:26.424]        // =>  FALSE
[00:24:26.424]      // skip if-block "traceTPIU"
[00:24:26.424]    </control>
[00:24:26.424]  </sequence>
[00:24:26.424]  
[00:24:26.428]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:24:26.428]  
[00:24:26.428]  <debugvars>
[00:24:26.429]    // Pre-defined
[00:24:26.429]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:26.429]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:26.429]    __dp=0x00000000
[00:24:26.429]    __ap=0x00000000
[00:24:26.430]    __traceout=0x00000001      (SWO Trace)
[00:24:26.430]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:26.430]    __FlashAddr=0x00000000
[00:24:26.430]    __FlashLen=0x00000000
[00:24:26.430]    __FlashArg=0x00000000
[00:24:26.430]    __FlashOp=0x00000000
[00:24:26.431]    __Result=0x00000000
[00:24:26.431]    
[00:24:26.431]    // User-defined
[00:24:26.431]    DbgMCU_CR=0x00000007
[00:24:26.431]    DbgMCU_APB1_Fz=0x00000000
[00:24:26.431]    DbgMCU_APB2_Fz=0x00000000
[00:24:26.431]    TraceClk_Pin=0x00040002
[00:24:26.432]    TraceD0_Pin=0x00040003
[00:24:26.432]    TraceD1_Pin=0x00040004
[00:24:26.432]    TraceD2_Pin=0x00040005
[00:24:26.432]    TraceD3_Pin=0x00040006
[00:24:26.432]  </debugvars>
[00:24:26.432]  
[00:24:26.433]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:24:26.433]    <block atomic="false" info="">
[00:24:26.433]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:24:26.433]        // -> [traceSWO <= 0x00000001]
[00:24:26.433]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:24:26.433]        // -> [traceTPIU <= 0x00000000]
[00:24:26.434]    </block>
[00:24:26.434]    <control if="traceSWO" while="" timeout="0" info="">
[00:24:26.434]      // if-block "traceSWO"
[00:24:26.434]        // =>  TRUE
[00:24:26.434]      <block atomic="false" info="">
[00:24:26.434]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:24:26.435]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:24:26.435]            <block atomic="false" info="">
[00:24:26.435]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:24:26.435]                // -> [dbgmcu_val <= 0x00000000]
[00:24:26.435]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:24:26.435]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:24:26.435]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:24:26.436]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.436]                // -> [dbgmcu_val <= 0x00000007]
[00:24:26.436]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:24:26.436]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:24:26.437]              Sequence("ConfigureTraceSWOPin");
[00:24:26.437]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:24:26.437]                  <block atomic="false" info="">
[00:24:26.437]                    __var pin     = 0;
[00:24:26.437]                      // -> [pin <= 0x00000000]
[00:24:26.437]                    __var port    = 0;
[00:24:26.437]                      // -> [port <= 0x00000000]
[00:24:26.438]                    __var portAdr = 0;
[00:24:26.438]                      // -> [portAdr <= 0x00000000]
[00:24:26.438]                    __var pos     = 0;
[00:24:26.438]                      // -> [pos <= 0x00000000]
[00:24:26.438]                    __var SWO_Pin = 0x00010003;          // PB3
[00:24:26.438]                      // -> [SWO_Pin <= 0x00010003]
[00:24:26.439]                  </block>
[00:24:26.439]                  <block atomic="false" info="configure SWO">
[00:24:26.439]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:24:26.439]                      // -> [pin <= 0x00000003]
[00:24:26.439]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:24:26.439]                      // -> [port <= 0x00000001]
[00:24:26.439]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:24:26.440]                      // -> [portAdr <= 0x40020400]
[00:24:26.440]                    pos = pin * 2;
[00:24:26.440]                      // -> [pos <= 0x00000006]
[00:24:26.440]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:24:26.440]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.441]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.441]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:24:26.441]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.442]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.442]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:24:26.442]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.443]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.443]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:24:26.443]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.444]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.444]                  </block>
[00:24:26.444]                  <control if="pin <  8" while="" timeout="0" info="">
[00:24:26.444]                    // if-block "pin <  8"
[00:24:26.444]                      // =>  TRUE
[00:24:26.444]                    <block atomic="false" info="">
[00:24:26.445]                      pos = ((pin    ) & 7) * 4;
[00:24:26.445]                        // -> [pos <= 0x0000000C]
[00:24:26.445]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:24:26.445]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.446]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.446]                    </block>
[00:24:26.446]                    // end if-block "pin <  8"
[00:24:26.446]                  </control>
[00:24:26.446]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:24:26.446]                    // if-block "pin >= 8"
[00:24:26.447]                      // =>  FALSE
[00:24:26.447]                    // skip if-block "pin >= 8"
[00:24:26.447]                  </control>
[00:24:26.447]                </sequence>
[00:24:26.447]            </block>
[00:24:26.447]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:24:26.447]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:24:26.448]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.448]            </block>
[00:24:26.448]          </sequence>
[00:24:26.448]      </block>
[00:24:26.448]      // end if-block "traceSWO"
[00:24:26.448]    </control>
[00:24:26.449]    <control if="traceTPIU" while="" timeout="0" info="">
[00:24:26.449]      // if-block "traceTPIU"
[00:24:26.449]        // =>  FALSE
[00:24:26.449]      // skip if-block "traceTPIU"
[00:24:26.449]    </control>
[00:24:26.449]  </sequence>
[00:24:26.449]  
[00:24:26.662]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:24:26.662]  
[00:24:26.662]  <debugvars>
[00:24:26.662]    // Pre-defined
[00:24:26.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:24:26.663]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:24:26.663]    __dp=0x00000000
[00:24:26.663]    __ap=0x00000000
[00:24:26.663]    __traceout=0x00000001      (SWO Trace)
[00:24:26.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:24:26.664]    __FlashAddr=0x00000000
[00:24:26.664]    __FlashLen=0x00000000
[00:24:26.664]    __FlashArg=0x00000000
[00:24:26.664]    __FlashOp=0x00000000
[00:24:26.665]    __Result=0x00000000
[00:24:26.665]    
[00:24:26.665]    // User-defined
[00:24:26.665]    DbgMCU_CR=0x00000007
[00:24:26.665]    DbgMCU_APB1_Fz=0x00000000
[00:24:26.665]    DbgMCU_APB2_Fz=0x00000000
[00:24:26.666]    TraceClk_Pin=0x00040002
[00:24:26.666]    TraceD0_Pin=0x00040003
[00:24:26.666]    TraceD1_Pin=0x00040004
[00:24:26.666]    TraceD2_Pin=0x00040005
[00:24:26.666]    TraceD3_Pin=0x00040006
[00:24:26.667]  </debugvars>
[00:24:26.667]  
[00:24:26.667]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:24:26.667]    <block atomic="false" info="">
[00:24:26.667]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:24:26.668]        // -> [traceSWO <= 0x00000001]
[00:24:26.668]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:24:26.668]        // -> [traceTPIU <= 0x00000000]
[00:24:26.668]    </block>
[00:24:26.668]    <control if="traceSWO" while="" timeout="0" info="">
[00:24:26.669]      // if-block "traceSWO"
[00:24:26.669]        // =>  TRUE
[00:24:26.669]      <block atomic="false" info="">
[00:24:26.669]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:24:26.669]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:24:26.669]            <block atomic="false" info="">
[00:24:26.670]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:24:26.670]                // -> [dbgmcu_val <= 0x00000000]
[00:24:26.670]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:24:26.670]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:24:26.671]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:24:26.671]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.671]                // -> [dbgmcu_val <= 0x00000007]
[00:24:26.672]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:24:26.672]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:24:26.672]              Sequence("ConfigureTraceSWOPin");
[00:24:26.672]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:24:26.672]                  <block atomic="false" info="">
[00:24:26.672]                    __var pin     = 0;
[00:24:26.673]                      // -> [pin <= 0x00000000]
[00:24:26.673]                    __var port    = 0;
[00:24:26.673]                      // -> [port <= 0x00000000]
[00:24:26.673]                    __var portAdr = 0;
[00:24:26.673]                      // -> [portAdr <= 0x00000000]
[00:24:26.673]                    __var pos     = 0;
[00:24:26.674]                      // -> [pos <= 0x00000000]
[00:24:26.674]                    __var SWO_Pin = 0x00010003;          // PB3
[00:24:26.674]                      // -> [SWO_Pin <= 0x00010003]
[00:24:26.674]                  </block>
[00:24:26.674]                  <block atomic="false" info="configure SWO">
[00:24:26.675]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:24:26.675]                      // -> [pin <= 0x00000003]
[00:24:26.675]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:24:26.675]                      // -> [port <= 0x00000001]
[00:24:26.675]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:24:26.675]                      // -> [portAdr <= 0x40020400]
[00:24:26.676]                    pos = pin * 2;
[00:24:26.676]                      // -> [pos <= 0x00000006]
[00:24:26.676]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:24:26.677]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.677]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.677]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:24:26.678]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.678]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.678]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:24:26.679]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.679]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.679]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:24:26.680]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.681]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.681]                  </block>
[00:24:26.681]                  <control if="pin <  8" while="" timeout="0" info="">
[00:24:26.681]                    // if-block "pin <  8"
[00:24:26.681]                      // =>  TRUE
[00:24:26.681]                    <block atomic="false" info="">
[00:24:26.682]                      pos = ((pin    ) & 7) * 4;
[00:24:26.682]                        // -> [pos <= 0x0000000C]
[00:24:26.682]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:24:26.682]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.683]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.683]                    </block>
[00:24:26.683]                    // end if-block "pin <  8"
[00:24:26.683]                  </control>
[00:24:26.684]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:24:26.684]                    // if-block "pin >= 8"
[00:24:26.684]                      // =>  FALSE
[00:24:26.684]                    // skip if-block "pin >= 8"
[00:24:26.684]                  </control>
[00:24:26.685]                </sequence>
[00:24:26.685]            </block>
[00:24:26.685]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:24:26.685]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:24:26.685]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:24:26.686]            </block>
[00:24:26.686]          </sequence>
[00:24:26.686]      </block>
[00:24:26.686]      // end if-block "traceSWO"
[00:24:26.686]    </control>
[00:24:26.686]    <control if="traceTPIU" while="" timeout="0" info="">
[00:24:26.686]      // if-block "traceTPIU"
[00:24:26.687]        // =>  FALSE
[00:24:26.687]      // skip if-block "traceTPIU"
[00:24:26.687]    </control>
[00:24:26.687]  </sequence>
[00:24:26.687]  
[00:29:17.556]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:29:17.556]  
[00:29:17.557]  <debugvars>
[00:29:17.557]    // Pre-defined
[00:29:17.557]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:29:17.557]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:29:17.558]    __dp=0x00000000
[00:29:17.558]    __ap=0x00000000
[00:29:17.558]    __traceout=0x00000001      (SWO Trace)
[00:29:17.558]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:29:17.558]    __FlashAddr=0x00000000
[00:29:17.559]    __FlashLen=0x00000000
[00:29:17.559]    __FlashArg=0x00000000
[00:29:17.559]    __FlashOp=0x00000000
[00:29:17.559]    __Result=0x00000000
[00:29:17.559]    
[00:29:17.559]    // User-defined
[00:29:17.559]    DbgMCU_CR=0x00000007
[00:29:17.560]    DbgMCU_APB1_Fz=0x00000000
[00:29:17.560]    DbgMCU_APB2_Fz=0x00000000
[00:29:17.560]    TraceClk_Pin=0x00040002
[00:29:17.560]    TraceD0_Pin=0x00040003
[00:29:17.560]    TraceD1_Pin=0x00040004
[00:29:17.561]    TraceD2_Pin=0x00040005
[00:29:17.561]    TraceD3_Pin=0x00040006
[00:29:17.561]  </debugvars>
[00:29:17.561]  
[00:29:17.561]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:29:17.561]    <block atomic="false" info="">
[00:29:17.562]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:29:17.562]        // -> [traceSWO <= 0x00000001]
[00:29:17.562]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:29:17.562]        // -> [traceTPIU <= 0x00000000]
[00:29:17.562]    </block>
[00:29:17.562]    <control if="traceSWO" while="" timeout="0" info="">
[00:29:17.563]      // if-block "traceSWO"
[00:29:17.563]        // =>  TRUE
[00:29:17.563]      <block atomic="false" info="">
[00:29:17.563]        Sequence("DisableTraceSWO");
[00:29:17.563]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:29:17.563]            <block atomic="false" info="">
[00:29:17.563]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:29:17.564]                // -> [dbgmcu_val <= 0x00000000]
[00:29:17.564]            </block>
[00:29:17.564]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:29:17.564]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:29:17.564]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:29:17.565]                // -> [dbgmcu_val <= 0x00000007]
[00:29:17.565]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[00:29:17.565]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:29:17.565]            </block>
[00:29:17.566]          </sequence>
[00:29:17.566]      </block>
[00:29:17.566]      // end if-block "traceSWO"
[00:29:17.566]    </control>
[00:29:17.566]    <control if="traceTPIU" while="" timeout="0" info="">
[00:29:17.566]      // if-block "traceTPIU"
[00:29:17.566]        // =>  FALSE
[00:29:17.566]      // skip if-block "traceTPIU"
[00:29:17.566]    </control>
[00:29:17.567]  </sequence>
[00:29:17.567]  
[00:29:42.663]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:29:42.663]  
[00:29:42.663]  <debugvars>
[00:29:42.663]    // Pre-defined
[00:29:42.663]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:29:42.663]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:29:42.664]    __dp=0x00000000
[00:29:42.664]    __ap=0x00000000
[00:29:42.664]    __traceout=0x00000001      (SWO Trace)
[00:29:42.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:29:42.664]    __FlashAddr=0x00000000
[00:29:42.665]    __FlashLen=0x00000000
[00:29:42.665]    __FlashArg=0x00000000
[00:29:42.665]    __FlashOp=0x00000000
[00:29:42.665]    __Result=0x00000000
[00:29:42.665]    
[00:29:42.665]    // User-defined
[00:29:42.666]    DbgMCU_CR=0x00000007
[00:29:42.666]    DbgMCU_APB1_Fz=0x00000000
[00:29:42.666]    DbgMCU_APB2_Fz=0x00000000
[00:29:42.666]    TraceClk_Pin=0x00040002
[00:29:42.666]    TraceD0_Pin=0x00040003
[00:29:42.667]    TraceD1_Pin=0x00040004
[00:29:42.667]    TraceD2_Pin=0x00040005
[00:29:42.667]    TraceD3_Pin=0x00040006
[00:29:42.667]  </debugvars>
[00:29:42.667]  
[00:29:42.667]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:29:42.668]    <block atomic="false" info="">
[00:29:42.668]      Sequence("CheckID");
[00:29:42.668]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:29:42.668]          <block atomic="false" info="">
[00:29:42.668]            __var pidr1 = 0;
[00:29:42.669]              // -> [pidr1 <= 0x00000000]
[00:29:42.669]            __var pidr2 = 0;
[00:29:42.669]              // -> [pidr2 <= 0x00000000]
[00:29:42.669]            __var jep106id = 0;
[00:29:42.669]              // -> [jep106id <= 0x00000000]
[00:29:42.669]            __var ROMTableBase = 0;
[00:29:42.670]              // -> [ROMTableBase <= 0x00000000]
[00:29:42.670]            __ap = 0;      // AHB-AP
[00:29:42.670]              // -> [__ap <= 0x00000000]
[00:29:42.670]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:29:42.670]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.670]              // -> [ROMTableBase <= 0xE00FD000]
[00:29:42.671]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:29:42.671]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.671]              // -> [pidr1 <= 0x00000004]
[00:29:42.672]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:29:42.672]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.672]              // -> [pidr2 <= 0x0000001A]
[00:29:42.672]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:29:42.673]              // -> [jep106id <= 0x00000020]
[00:29:42.673]          </block>
[00:29:42.673]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:29:42.673]            // if-block "jep106id != 0x20"
[00:29:42.673]              // =>  FALSE
[00:29:42.673]            // skip if-block "jep106id != 0x20"
[00:29:42.674]          </control>
[00:29:42.674]        </sequence>
[00:29:42.674]    </block>
[00:29:42.674]  </sequence>
[00:29:42.674]  
[00:29:42.688]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:29:42.688]  
[00:29:42.689]  <debugvars>
[00:29:42.689]    // Pre-defined
[00:29:42.689]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:29:42.689]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:29:42.689]    __dp=0x00000000
[00:29:42.689]    __ap=0x00000000
[00:29:42.690]    __traceout=0x00000001      (SWO Trace)
[00:29:42.690]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:29:42.690]    __FlashAddr=0x00000000
[00:29:42.690]    __FlashLen=0x00000000
[00:29:42.690]    __FlashArg=0x00000000
[00:29:42.690]    __FlashOp=0x00000000
[00:29:42.691]    __Result=0x00000000
[00:29:42.691]    
[00:29:42.691]    // User-defined
[00:29:42.691]    DbgMCU_CR=0x00000007
[00:29:42.691]    DbgMCU_APB1_Fz=0x00000000
[00:29:42.691]    DbgMCU_APB2_Fz=0x00000000
[00:29:42.691]    TraceClk_Pin=0x00040002
[00:29:42.692]    TraceD0_Pin=0x00040003
[00:29:42.692]    TraceD1_Pin=0x00040004
[00:29:42.692]    TraceD2_Pin=0x00040005
[00:29:42.692]    TraceD3_Pin=0x00040006
[00:29:42.692]  </debugvars>
[00:29:42.692]  
[00:29:42.693]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:29:42.693]    <block atomic="false" info="">
[00:29:42.693]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:29:42.694]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.694]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:29:42.694]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.695]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:29:42.695]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.695]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:29:42.696]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:29:42.696]    </block>
[00:29:42.696]  </sequence>
[00:29:42.696]  
[00:30:14.047]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:30:14.047]  
[00:30:14.047]  <debugvars>
[00:30:14.048]    // Pre-defined
[00:30:14.048]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:30:14.048]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:30:14.048]    __dp=0x00000000
[00:30:14.048]    __ap=0x00000000
[00:30:14.048]    __traceout=0x00000001      (SWO Trace)
[00:30:14.048]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:30:14.049]    __FlashAddr=0x00000000
[00:30:14.049]    __FlashLen=0x00000000
[00:30:14.049]    __FlashArg=0x00000000
[00:30:14.049]    __FlashOp=0x00000000
[00:30:14.049]    __Result=0x00000000
[00:30:14.049]    
[00:30:14.049]    // User-defined
[00:30:14.050]    DbgMCU_CR=0x00000007
[00:30:14.050]    DbgMCU_APB1_Fz=0x00000000
[00:30:14.050]    DbgMCU_APB2_Fz=0x00000000
[00:30:14.050]    TraceClk_Pin=0x00040002
[00:30:14.050]    TraceD0_Pin=0x00040003
[00:30:14.050]    TraceD1_Pin=0x00040004
[00:30:14.051]    TraceD2_Pin=0x00040005
[00:30:14.051]    TraceD3_Pin=0x00040006
[00:30:14.051]  </debugvars>
[00:30:14.051]  
[00:30:14.051]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:30:14.051]    <block atomic="false" info="">
[00:30:14.051]      Sequence("CheckID");
[00:30:14.052]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:30:14.052]          <block atomic="false" info="">
[00:30:14.052]            __var pidr1 = 0;
[00:30:14.052]              // -> [pidr1 <= 0x00000000]
[00:30:14.052]            __var pidr2 = 0;
[00:30:14.052]              // -> [pidr2 <= 0x00000000]
[00:30:14.053]            __var jep106id = 0;
[00:30:14.053]              // -> [jep106id <= 0x00000000]
[00:30:14.053]            __var ROMTableBase = 0;
[00:30:14.053]              // -> [ROMTableBase <= 0x00000000]
[00:30:14.053]            __ap = 0;      // AHB-AP
[00:30:14.053]              // -> [__ap <= 0x00000000]
[00:30:14.053]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:30:14.054]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.054]              // -> [ROMTableBase <= 0xE00FD000]
[00:30:14.054]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:30:14.055]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.055]              // -> [pidr1 <= 0x00000004]
[00:30:14.055]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:30:14.055]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.055]              // -> [pidr2 <= 0x0000001A]
[00:30:14.056]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:30:14.056]              // -> [jep106id <= 0x00000020]
[00:30:14.056]          </block>
[00:30:14.056]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:30:14.056]            // if-block "jep106id != 0x20"
[00:30:14.056]              // =>  FALSE
[00:30:14.056]            // skip if-block "jep106id != 0x20"
[00:30:14.057]          </control>
[00:30:14.057]        </sequence>
[00:30:14.057]    </block>
[00:30:14.057]  </sequence>
[00:30:14.057]  
[00:30:14.071]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:30:14.071]  
[00:30:14.071]  <debugvars>
[00:30:14.072]    // Pre-defined
[00:30:14.072]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:30:14.072]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:30:14.072]    __dp=0x00000000
[00:30:14.072]    __ap=0x00000000
[00:30:14.073]    __traceout=0x00000001      (SWO Trace)
[00:30:14.073]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:30:14.073]    __FlashAddr=0x00000000
[00:30:14.073]    __FlashLen=0x00000000
[00:30:14.073]    __FlashArg=0x00000000
[00:30:14.074]    __FlashOp=0x00000000
[00:30:14.074]    __Result=0x00000000
[00:30:14.074]    
[00:30:14.074]    // User-defined
[00:30:14.074]    DbgMCU_CR=0x00000007
[00:30:14.074]    DbgMCU_APB1_Fz=0x00000000
[00:30:14.075]    DbgMCU_APB2_Fz=0x00000000
[00:30:14.075]    TraceClk_Pin=0x00040002
[00:30:14.075]    TraceD0_Pin=0x00040003
[00:30:14.075]    TraceD1_Pin=0x00040004
[00:30:14.075]    TraceD2_Pin=0x00040005
[00:30:14.075]    TraceD3_Pin=0x00040006
[00:30:14.076]  </debugvars>
[00:30:14.076]  
[00:30:14.076]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:30:14.076]    <block atomic="false" info="">
[00:30:14.076]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:30:14.077]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.077]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:30:14.078]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.078]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:30:14.079]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.079]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:30:14.080]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.080]    </block>
[00:30:14.080]  </sequence>
[00:30:14.080]  
[00:30:14.098]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:30:14.098]  
[00:30:14.098]  <debugvars>
[00:30:14.098]    // Pre-defined
[00:30:14.098]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:30:14.099]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:30:14.099]    __dp=0x00000000
[00:30:14.099]    __ap=0x00000000
[00:30:14.099]    __traceout=0x00000001      (SWO Trace)
[00:30:14.099]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:30:14.100]    __FlashAddr=0x00000000
[00:30:14.100]    __FlashLen=0x00000000
[00:30:14.100]    __FlashArg=0x00000000
[00:30:14.100]    __FlashOp=0x00000000
[00:30:14.100]    __Result=0x00000000
[00:30:14.100]    
[00:30:14.100]    // User-defined
[00:30:14.101]    DbgMCU_CR=0x00000007
[00:30:14.101]    DbgMCU_APB1_Fz=0x00000000
[00:30:14.101]    DbgMCU_APB2_Fz=0x00000000
[00:30:14.101]    TraceClk_Pin=0x00040002
[00:30:14.101]    TraceD0_Pin=0x00040003
[00:30:14.102]    TraceD1_Pin=0x00040004
[00:30:14.102]    TraceD2_Pin=0x00040005
[00:30:14.102]    TraceD3_Pin=0x00040006
[00:30:14.102]  </debugvars>
[00:30:14.102]  
[00:30:14.103]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:30:14.103]    <block atomic="false" info="">
[00:30:14.103]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:30:14.103]        // -> [traceSWO <= 0x00000001]
[00:30:14.103]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:30:14.103]        // -> [traceTPIU <= 0x00000000]
[00:30:14.104]    </block>
[00:30:14.104]    <control if="traceSWO" while="" timeout="0" info="">
[00:30:14.104]      // if-block "traceSWO"
[00:30:14.104]        // =>  TRUE
[00:30:14.104]      <block atomic="false" info="">
[00:30:14.104]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:30:14.104]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:30:14.105]            <block atomic="false" info="">
[00:30:14.105]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:30:14.105]                // -> [dbgmcu_val <= 0x00000000]
[00:30:14.105]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:30:14.106]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:30:14.106]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:30:14.106]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.106]                // -> [dbgmcu_val <= 0x00000007]
[00:30:14.107]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:30:14.107]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:30:14.107]              Sequence("ConfigureTraceSWOPin");
[00:30:14.107]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:30:14.107]                  <block atomic="false" info="">
[00:30:14.107]                    __var pin     = 0;
[00:30:14.107]                      // -> [pin <= 0x00000000]
[00:30:14.108]                    __var port    = 0;
[00:30:14.108]                      // -> [port <= 0x00000000]
[00:30:14.108]                    __var portAdr = 0;
[00:30:14.108]                      // -> [portAdr <= 0x00000000]
[00:30:14.108]                    __var pos     = 0;
[00:30:14.108]                      // -> [pos <= 0x00000000]
[00:30:14.109]                    __var SWO_Pin = 0x00010003;          // PB3
[00:30:14.109]                      // -> [SWO_Pin <= 0x00010003]
[00:30:14.109]                  </block>
[00:30:14.109]                  <block atomic="false" info="configure SWO">
[00:30:14.109]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:30:14.109]                      // -> [pin <= 0x00000003]
[00:30:14.109]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:30:14.109]                      // -> [port <= 0x00000001]
[00:30:14.110]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:30:14.110]                      // -> [portAdr <= 0x40020400]
[00:30:14.110]                    pos = pin * 2;
[00:30:14.110]                      // -> [pos <= 0x00000006]
[00:30:14.110]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:30:14.111]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.111]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.112]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:30:14.112]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.113]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.113]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:30:14.113]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.114]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.114]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:30:14.114]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.115]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.115]                  </block>
[00:30:14.115]                  <control if="pin <  8" while="" timeout="0" info="">
[00:30:14.115]                    // if-block "pin <  8"
[00:30:14.115]                      // =>  TRUE
[00:30:14.115]                    <block atomic="false" info="">
[00:30:14.116]                      pos = ((pin    ) & 7) * 4;
[00:30:14.116]                        // -> [pos <= 0x0000000C]
[00:30:14.116]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:30:14.116]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.117]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.117]                    </block>
[00:30:14.117]                    // end if-block "pin <  8"
[00:30:14.117]                  </control>
[00:30:14.117]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:30:14.117]                    // if-block "pin >= 8"
[00:30:14.118]                      // =>  FALSE
[00:30:14.118]                    // skip if-block "pin >= 8"
[00:30:14.118]                  </control>
[00:30:14.118]                </sequence>
[00:30:14.118]            </block>
[00:30:14.119]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:30:14.119]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:30:14.119]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.119]            </block>
[00:30:14.120]          </sequence>
[00:30:14.120]      </block>
[00:30:14.120]      // end if-block "traceSWO"
[00:30:14.120]    </control>
[00:30:14.120]    <control if="traceTPIU" while="" timeout="0" info="">
[00:30:14.120]      // if-block "traceTPIU"
[00:30:14.120]        // =>  FALSE
[00:30:14.121]      // skip if-block "traceTPIU"
[00:30:14.121]    </control>
[00:30:14.121]  </sequence>
[00:30:14.121]  
[00:30:14.125]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:30:14.125]  
[00:30:14.125]  <debugvars>
[00:30:14.125]    // Pre-defined
[00:30:14.125]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:30:14.126]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:30:14.126]    __dp=0x00000000
[00:30:14.126]    __ap=0x00000000
[00:30:14.126]    __traceout=0x00000001      (SWO Trace)
[00:30:14.126]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:30:14.127]    __FlashAddr=0x00000000
[00:30:14.127]    __FlashLen=0x00000000
[00:30:14.127]    __FlashArg=0x00000000
[00:30:14.127]    __FlashOp=0x00000000
[00:30:14.127]    __Result=0x00000000
[00:30:14.128]    
[00:30:14.128]    // User-defined
[00:30:14.128]    DbgMCU_CR=0x00000007
[00:30:14.128]    DbgMCU_APB1_Fz=0x00000000
[00:30:14.128]    DbgMCU_APB2_Fz=0x00000000
[00:30:14.128]    TraceClk_Pin=0x00040002
[00:30:14.129]    TraceD0_Pin=0x00040003
[00:30:14.129]    TraceD1_Pin=0x00040004
[00:30:14.129]    TraceD2_Pin=0x00040005
[00:30:14.129]    TraceD3_Pin=0x00040006
[00:30:14.129]  </debugvars>
[00:30:14.129]  
[00:30:14.130]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:30:14.130]    <block atomic="false" info="">
[00:30:14.130]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:30:14.130]        // -> [traceSWO <= 0x00000001]
[00:30:14.130]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:30:14.131]        // -> [traceTPIU <= 0x00000000]
[00:30:14.131]    </block>
[00:30:14.131]    <control if="traceSWO" while="" timeout="0" info="">
[00:30:14.131]      // if-block "traceSWO"
[00:30:14.131]        // =>  TRUE
[00:30:14.132]      <block atomic="false" info="">
[00:30:14.132]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:30:14.132]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:30:14.132]            <block atomic="false" info="">
[00:30:14.132]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:30:14.132]                // -> [dbgmcu_val <= 0x00000000]
[00:30:14.133]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:30:14.133]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:30:14.133]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:30:14.133]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.133]                // -> [dbgmcu_val <= 0x00000007]
[00:30:14.134]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:30:14.134]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:30:14.134]              Sequence("ConfigureTraceSWOPin");
[00:30:14.134]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:30:14.134]                  <block atomic="false" info="">
[00:30:14.134]                    __var pin     = 0;
[00:30:14.135]                      // -> [pin <= 0x00000000]
[00:30:14.135]                    __var port    = 0;
[00:30:14.135]                      // -> [port <= 0x00000000]
[00:30:14.135]                    __var portAdr = 0;
[00:30:14.135]                      // -> [portAdr <= 0x00000000]
[00:30:14.135]                    __var pos     = 0;
[00:30:14.136]                      // -> [pos <= 0x00000000]
[00:30:14.136]                    __var SWO_Pin = 0x00010003;          // PB3
[00:30:14.136]                      // -> [SWO_Pin <= 0x00010003]
[00:30:14.136]                  </block>
[00:30:14.136]                  <block atomic="false" info="configure SWO">
[00:30:14.136]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:30:14.136]                      // -> [pin <= 0x00000003]
[00:30:14.137]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:30:14.137]                      // -> [port <= 0x00000001]
[00:30:14.137]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:30:14.137]                      // -> [portAdr <= 0x40020400]
[00:30:14.137]                    pos = pin * 2;
[00:30:14.137]                      // -> [pos <= 0x00000006]
[00:30:14.137]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:30:14.138]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.138]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.138]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:30:14.139]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.139]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.139]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:30:14.140]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.140]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.141]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:30:14.141]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.141]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.141]                  </block>
[00:30:14.142]                  <control if="pin <  8" while="" timeout="0" info="">
[00:30:14.142]                    // if-block "pin <  8"
[00:30:14.142]                      // =>  TRUE
[00:30:14.142]                    <block atomic="false" info="">
[00:30:14.142]                      pos = ((pin    ) & 7) * 4;
[00:30:14.142]                        // -> [pos <= 0x0000000C]
[00:30:14.142]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:30:14.143]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.143]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.143]                    </block>
[00:30:14.143]                    // end if-block "pin <  8"
[00:30:14.144]                  </control>
[00:30:14.144]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:30:14.144]                    // if-block "pin >= 8"
[00:30:14.144]                      // =>  FALSE
[00:30:14.144]                    // skip if-block "pin >= 8"
[00:30:14.144]                  </control>
[00:30:14.144]                </sequence>
[00:30:14.144]            </block>
[00:30:14.144]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:30:14.145]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:30:14.145]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.145]            </block>
[00:30:14.145]          </sequence>
[00:30:14.146]      </block>
[00:30:14.146]      // end if-block "traceSWO"
[00:30:14.146]    </control>
[00:30:14.146]    <control if="traceTPIU" while="" timeout="0" info="">
[00:30:14.146]      // if-block "traceTPIU"
[00:30:14.146]        // =>  FALSE
[00:30:14.146]      // skip if-block "traceTPIU"
[00:30:14.146]    </control>
[00:30:14.146]  </sequence>
[00:30:14.147]  
[00:30:14.361]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:30:14.361]  
[00:30:14.362]  <debugvars>
[00:30:14.362]    // Pre-defined
[00:30:14.363]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:30:14.363]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:30:14.363]    __dp=0x00000000
[00:30:14.363]    __ap=0x00000000
[00:30:14.363]    __traceout=0x00000001      (SWO Trace)
[00:30:14.364]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:30:14.364]    __FlashAddr=0x00000000
[00:30:14.364]    __FlashLen=0x00000000
[00:30:14.364]    __FlashArg=0x00000000
[00:30:14.364]    __FlashOp=0x00000000
[00:30:14.364]    __Result=0x00000000
[00:30:14.365]    
[00:30:14.365]    // User-defined
[00:30:14.365]    DbgMCU_CR=0x00000007
[00:30:14.365]    DbgMCU_APB1_Fz=0x00000000
[00:30:14.365]    DbgMCU_APB2_Fz=0x00000000
[00:30:14.365]    TraceClk_Pin=0x00040002
[00:30:14.366]    TraceD0_Pin=0x00040003
[00:30:14.366]    TraceD1_Pin=0x00040004
[00:30:14.366]    TraceD2_Pin=0x00040005
[00:30:14.366]    TraceD3_Pin=0x00040006
[00:30:14.366]  </debugvars>
[00:30:14.366]  
[00:30:14.366]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:30:14.367]    <block atomic="false" info="">
[00:30:14.367]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:30:14.367]        // -> [traceSWO <= 0x00000001]
[00:30:14.367]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:30:14.367]        // -> [traceTPIU <= 0x00000000]
[00:30:14.367]    </block>
[00:30:14.368]    <control if="traceSWO" while="" timeout="0" info="">
[00:30:14.368]      // if-block "traceSWO"
[00:30:14.368]        // =>  TRUE
[00:30:14.368]      <block atomic="false" info="">
[00:30:14.368]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:30:14.368]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:30:14.368]            <block atomic="false" info="">
[00:30:14.369]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:30:14.369]                // -> [dbgmcu_val <= 0x00000000]
[00:30:14.369]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:30:14.369]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:30:14.369]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:30:14.369]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.370]                // -> [dbgmcu_val <= 0x00000007]
[00:30:14.370]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:30:14.370]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:30:14.370]              Sequence("ConfigureTraceSWOPin");
[00:30:14.370]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:30:14.370]                  <block atomic="false" info="">
[00:30:14.371]                    __var pin     = 0;
[00:30:14.371]                      // -> [pin <= 0x00000000]
[00:30:14.371]                    __var port    = 0;
[00:30:14.371]                      // -> [port <= 0x00000000]
[00:30:14.371]                    __var portAdr = 0;
[00:30:14.371]                      // -> [portAdr <= 0x00000000]
[00:30:14.371]                    __var pos     = 0;
[00:30:14.372]                      // -> [pos <= 0x00000000]
[00:30:14.372]                    __var SWO_Pin = 0x00010003;          // PB3
[00:30:14.372]                      // -> [SWO_Pin <= 0x00010003]
[00:30:14.372]                  </block>
[00:30:14.372]                  <block atomic="false" info="configure SWO">
[00:30:14.372]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:30:14.373]                      // -> [pin <= 0x00000003]
[00:30:14.373]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:30:14.373]                      // -> [port <= 0x00000001]
[00:30:14.373]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:30:14.373]                      // -> [portAdr <= 0x40020400]
[00:30:14.373]                    pos = pin * 2;
[00:30:14.373]                      // -> [pos <= 0x00000006]
[00:30:14.373]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:30:14.374]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.374]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.374]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:30:14.375]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.375]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.376]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:30:14.376]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.376]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.377]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:30:14.377]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.377]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.377]                  </block>
[00:30:14.378]                  <control if="pin <  8" while="" timeout="0" info="">
[00:30:14.378]                    // if-block "pin <  8"
[00:30:14.378]                      // =>  TRUE
[00:30:14.378]                    <block atomic="false" info="">
[00:30:14.378]                      pos = ((pin    ) & 7) * 4;
[00:30:14.378]                        // -> [pos <= 0x0000000C]
[00:30:14.378]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:30:14.379]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.379]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.380]                    </block>
[00:30:14.380]                    // end if-block "pin <  8"
[00:30:14.380]                  </control>
[00:30:14.380]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:30:14.380]                    // if-block "pin >= 8"
[00:30:14.380]                      // =>  FALSE
[00:30:14.380]                    // skip if-block "pin >= 8"
[00:30:14.381]                  </control>
[00:30:14.381]                </sequence>
[00:30:14.381]            </block>
[00:30:14.381]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:30:14.381]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:30:14.382]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:30:14.382]            </block>
[00:30:14.382]          </sequence>
[00:30:14.382]      </block>
[00:30:14.382]      // end if-block "traceSWO"
[00:30:14.382]    </control>
[00:30:14.382]    <control if="traceTPIU" while="" timeout="0" info="">
[00:30:14.382]      // if-block "traceTPIU"
[00:30:14.382]        // =>  FALSE
[00:30:14.383]      // skip if-block "traceTPIU"
[00:30:14.383]    </control>
[00:30:14.383]  </sequence>
[00:30:14.383]  
[00:34:15.532]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:34:15.532]  
[00:34:15.532]  <debugvars>
[00:34:15.532]    // Pre-defined
[00:34:15.532]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:34:15.532]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:34:15.533]    __dp=0x00000000
[00:34:15.533]    __ap=0x00000000
[00:34:15.533]    __traceout=0x00000001      (SWO Trace)
[00:34:15.533]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:34:15.533]    __FlashAddr=0x00000000
[00:34:15.533]    __FlashLen=0x00000000
[00:34:15.533]    __FlashArg=0x00000000
[00:34:15.533]    __FlashOp=0x00000000
[00:34:15.534]    __Result=0x00000000
[00:34:15.534]    
[00:34:15.534]    // User-defined
[00:34:15.534]    DbgMCU_CR=0x00000007
[00:34:15.534]    DbgMCU_APB1_Fz=0x00000000
[00:34:15.534]    DbgMCU_APB2_Fz=0x00000000
[00:34:15.534]    TraceClk_Pin=0x00040002
[00:34:15.534]    TraceD0_Pin=0x00040003
[00:34:15.534]    TraceD1_Pin=0x00040004
[00:34:15.534]    TraceD2_Pin=0x00040005
[00:34:15.535]    TraceD3_Pin=0x00040006
[00:34:15.535]  </debugvars>
[00:34:15.535]  
[00:34:15.535]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:34:15.535]    <block atomic="false" info="">
[00:34:15.535]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:34:15.535]        // -> [traceSWO <= 0x00000001]
[00:34:15.536]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:34:15.536]        // -> [traceTPIU <= 0x00000000]
[00:34:15.536]    </block>
[00:34:15.536]    <control if="traceSWO" while="" timeout="0" info="">
[00:34:15.536]      // if-block "traceSWO"
[00:34:15.536]        // =>  TRUE
[00:34:15.536]      <block atomic="false" info="">
[00:34:15.536]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:34:15.536]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:34:15.537]            <block atomic="false" info="">
[00:34:15.537]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:34:15.537]                // -> [dbgmcu_val <= 0x00000000]
[00:34:15.537]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:34:15.537]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:34:15.537]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:34:15.538]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.538]                // -> [dbgmcu_val <= 0x00000007]
[00:34:15.538]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:34:15.538]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:34:15.538]              Sequence("ConfigureTraceSWOPin");
[00:34:15.538]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:34:15.539]                  <block atomic="false" info="">
[00:34:15.539]                    __var pin     = 0;
[00:34:15.539]                      // -> [pin <= 0x00000000]
[00:34:15.539]                    __var port    = 0;
[00:34:15.539]                      // -> [port <= 0x00000000]
[00:34:15.539]                    __var portAdr = 0;
[00:34:15.539]                      // -> [portAdr <= 0x00000000]
[00:34:15.539]                    __var pos     = 0;
[00:34:15.540]                      // -> [pos <= 0x00000000]
[00:34:15.540]                    __var SWO_Pin = 0x00010003;          // PB3
[00:34:15.540]                      // -> [SWO_Pin <= 0x00010003]
[00:34:15.540]                  </block>
[00:34:15.540]                  <block atomic="false" info="configure SWO">
[00:34:15.540]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:34:15.540]                      // -> [pin <= 0x00000003]
[00:34:15.541]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:34:15.541]                      // -> [port <= 0x00000001]
[00:34:15.541]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:34:15.541]                      // -> [portAdr <= 0x40020400]
[00:34:15.541]                    pos = pin * 2;
[00:34:15.541]                      // -> [pos <= 0x00000006]
[00:34:15.541]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:34:15.542]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.542]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.542]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:34:15.543]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.543]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.543]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:34:15.544]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.544]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.544]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:34:15.545]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.545]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.545]                  </block>
[00:34:15.545]                  <control if="pin <  8" while="" timeout="0" info="">
[00:34:15.546]                    // if-block "pin <  8"
[00:34:15.546]                      // =>  TRUE
[00:34:15.546]                    <block atomic="false" info="">
[00:34:15.546]                      pos = ((pin    ) & 7) * 4;
[00:34:15.546]                        // -> [pos <= 0x0000000C]
[00:34:15.546]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:34:15.547]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.547]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.547]                    </block>
[00:34:15.547]                    // end if-block "pin <  8"
[00:34:15.547]                  </control>
[00:34:15.548]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:34:15.548]                    // if-block "pin >= 8"
[00:34:15.548]                      // =>  FALSE
[00:34:15.548]                    // skip if-block "pin >= 8"
[00:34:15.548]                  </control>
[00:34:15.548]                </sequence>
[00:34:15.548]            </block>
[00:34:15.548]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:34:15.549]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:34:15.549]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:15.549]            </block>
[00:34:15.549]          </sequence>
[00:34:15.549]      </block>
[00:34:15.549]      // end if-block "traceSWO"
[00:34:15.550]    </control>
[00:34:15.550]    <control if="traceTPIU" while="" timeout="0" info="">
[00:34:15.550]      // if-block "traceTPIU"
[00:34:15.550]        // =>  FALSE
[00:34:15.550]      // skip if-block "traceTPIU"
[00:34:15.550]    </control>
[00:34:15.550]  </sequence>
[00:34:15.550]  
[00:34:27.431]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:34:27.431]  
[00:34:27.436]  <debugvars>
[00:34:27.436]    // Pre-defined
[00:34:27.437]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:34:27.437]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:34:27.437]    __dp=0x00000000
[00:34:27.438]    __ap=0x00000000
[00:34:27.439]    __traceout=0x00000001      (SWO Trace)
[00:34:27.439]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:34:27.439]    __FlashAddr=0x00000000
[00:34:27.439]    __FlashLen=0x00000000
[00:34:27.439]    __FlashArg=0x00000000
[00:34:27.440]    __FlashOp=0x00000000
[00:34:27.440]    __Result=0x00000000
[00:34:27.440]    
[00:34:27.440]    // User-defined
[00:34:27.440]    DbgMCU_CR=0x00000007
[00:34:27.440]    DbgMCU_APB1_Fz=0x00000000
[00:34:27.441]    DbgMCU_APB2_Fz=0x00000000
[00:34:27.441]    TraceClk_Pin=0x00040002
[00:34:27.441]    TraceD0_Pin=0x00040003
[00:34:27.441]    TraceD1_Pin=0x00040004
[00:34:27.441]    TraceD2_Pin=0x00040005
[00:34:27.441]    TraceD3_Pin=0x00040006
[00:34:27.442]  </debugvars>
[00:34:27.442]  
[00:34:27.442]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:34:27.442]    <block atomic="false" info="">
[00:34:27.442]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:34:27.443]        // -> [traceSWO <= 0x00000001]
[00:34:27.443]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:34:27.443]        // -> [traceTPIU <= 0x00000000]
[00:34:27.443]    </block>
[00:34:27.443]    <control if="traceSWO" while="" timeout="0" info="">
[00:34:27.443]      // if-block "traceSWO"
[00:34:27.444]        // =>  TRUE
[00:34:27.444]      <block atomic="false" info="">
[00:34:27.444]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:34:27.444]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:34:27.444]            <block atomic="false" info="">
[00:34:27.445]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:34:27.445]                // -> [dbgmcu_val <= 0x00000000]
[00:34:27.445]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:34:27.445]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:34:27.445]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:34:27.446]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.446]                // -> [dbgmcu_val <= 0x00000007]
[00:34:27.446]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:34:27.446]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:34:27.446]              Sequence("ConfigureTraceSWOPin");
[00:34:27.447]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:34:27.447]                  <block atomic="false" info="">
[00:34:27.447]                    __var pin     = 0;
[00:34:27.447]                      // -> [pin <= 0x00000000]
[00:34:27.447]                    __var port    = 0;
[00:34:27.447]                      // -> [port <= 0x00000000]
[00:34:27.448]                    __var portAdr = 0;
[00:34:27.448]                      // -> [portAdr <= 0x00000000]
[00:34:27.448]                    __var pos     = 0;
[00:34:27.448]                      // -> [pos <= 0x00000000]
[00:34:27.448]                    __var SWO_Pin = 0x00010003;          // PB3
[00:34:27.449]                      // -> [SWO_Pin <= 0x00010003]
[00:34:27.449]                  </block>
[00:34:27.449]                  <block atomic="false" info="configure SWO">
[00:34:27.449]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:34:27.449]                      // -> [pin <= 0x00000003]
[00:34:27.449]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:34:27.450]                      // -> [port <= 0x00000001]
[00:34:27.450]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:34:27.450]                      // -> [portAdr <= 0x40020400]
[00:34:27.450]                    pos = pin * 2;
[00:34:27.450]                      // -> [pos <= 0x00000006]
[00:34:27.450]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:34:27.451]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.451]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.451]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:34:27.452]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.452]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.453]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:34:27.453]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.454]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.454]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:34:27.454]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.455]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.455]                  </block>
[00:34:27.455]                  <control if="pin <  8" while="" timeout="0" info="">
[00:34:27.455]                    // if-block "pin <  8"
[00:34:27.456]                      // =>  TRUE
[00:34:27.456]                    <block atomic="false" info="">
[00:34:27.456]                      pos = ((pin    ) & 7) * 4;
[00:34:27.456]                        // -> [pos <= 0x0000000C]
[00:34:27.456]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:34:27.457]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.457]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.458]                    </block>
[00:34:27.458]                    // end if-block "pin <  8"
[00:34:27.458]                  </control>
[00:34:27.458]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:34:27.458]                    // if-block "pin >= 8"
[00:34:27.458]                      // =>  FALSE
[00:34:27.458]                    // skip if-block "pin >= 8"
[00:34:27.458]                  </control>
[00:34:27.459]                </sequence>
[00:34:27.459]            </block>
[00:34:27.459]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:34:27.459]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:34:27.460]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:34:27.460]            </block>
[00:34:27.460]          </sequence>
[00:34:27.460]      </block>
[00:34:27.460]      // end if-block "traceSWO"
[00:34:27.460]    </control>
[00:34:27.460]    <control if="traceTPIU" while="" timeout="0" info="">
[00:34:27.461]      // if-block "traceTPIU"
[00:34:27.461]        // =>  FALSE
[00:34:27.461]      // skip if-block "traceTPIU"
[00:34:27.461]    </control>
[00:34:27.461]  </sequence>
[00:34:27.461]  
[00:36:06.626]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:36:06.626]  
[00:36:06.626]  <debugvars>
[00:36:06.627]    // Pre-defined
[00:36:06.627]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:06.627]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:36:06.627]    __dp=0x00000000
[00:36:06.628]    __ap=0x00000000
[00:36:06.628]    __traceout=0x00000001      (SWO Trace)
[00:36:06.628]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:06.628]    __FlashAddr=0x00000000
[00:36:06.629]    __FlashLen=0x00000000
[00:36:06.629]    __FlashArg=0x00000000
[00:36:06.629]    __FlashOp=0x00000000
[00:36:06.629]    __Result=0x00000000
[00:36:06.629]    
[00:36:06.629]    // User-defined
[00:36:06.630]    DbgMCU_CR=0x00000007
[00:36:06.630]    DbgMCU_APB1_Fz=0x00000000
[00:36:06.630]    DbgMCU_APB2_Fz=0x00000000
[00:36:06.630]    TraceClk_Pin=0x00040002
[00:36:06.630]    TraceD0_Pin=0x00040003
[00:36:06.631]    TraceD1_Pin=0x00040004
[00:36:06.631]    TraceD2_Pin=0x00040005
[00:36:06.631]    TraceD3_Pin=0x00040006
[00:36:06.631]  </debugvars>
[00:36:06.631]  
[00:36:06.632]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:36:06.632]    <block atomic="false" info="">
[00:36:06.632]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:36:06.632]        // -> [traceSWO <= 0x00000001]
[00:36:06.632]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:36:06.633]        // -> [traceTPIU <= 0x00000000]
[00:36:06.633]    </block>
[00:36:06.633]    <control if="traceSWO" while="" timeout="0" info="">
[00:36:06.633]      // if-block "traceSWO"
[00:36:06.633]        // =>  TRUE
[00:36:06.634]      <block atomic="false" info="">
[00:36:06.634]        Sequence("DisableTraceSWO");
[00:36:06.634]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:36:06.634]            <block atomic="false" info="">
[00:36:06.634]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:36:06.634]                // -> [dbgmcu_val <= 0x00000000]
[00:36:06.635]            </block>
[00:36:06.635]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:36:06.635]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:36:06.636]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:36:06.636]                // -> [dbgmcu_val <= 0x00000007]
[00:36:06.636]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[00:36:06.637]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:06.637]            </block>
[00:36:06.637]          </sequence>
[00:36:06.637]      </block>
[00:36:06.637]      // end if-block "traceSWO"
[00:36:06.637]    </control>
[00:36:06.638]    <control if="traceTPIU" while="" timeout="0" info="">
[00:36:06.638]      // if-block "traceTPIU"
[00:36:06.638]        // =>  FALSE
[00:36:06.638]      // skip if-block "traceTPIU"
[00:36:06.638]    </control>
[00:36:06.638]  </sequence>
[00:36:06.639]  
[00:36:15.431]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:36:15.431]  
[00:36:15.431]  <debugvars>
[00:36:15.432]    // Pre-defined
[00:36:15.432]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:15.432]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:36:15.432]    __dp=0x00000000
[00:36:15.432]    __ap=0x00000000
[00:36:15.432]    __traceout=0x00000001      (SWO Trace)
[00:36:15.432]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:15.432]    __FlashAddr=0x00000000
[00:36:15.433]    __FlashLen=0x00000000
[00:36:15.433]    __FlashArg=0x00000000
[00:36:15.433]    __FlashOp=0x00000000
[00:36:15.433]    __Result=0x00000000
[00:36:15.433]    
[00:36:15.433]    // User-defined
[00:36:15.433]    DbgMCU_CR=0x00000007
[00:36:15.433]    DbgMCU_APB1_Fz=0x00000000
[00:36:15.433]    DbgMCU_APB2_Fz=0x00000000
[00:36:15.434]    TraceClk_Pin=0x00040002
[00:36:15.434]    TraceD0_Pin=0x00040003
[00:36:15.434]    TraceD1_Pin=0x00040004
[00:36:15.434]    TraceD2_Pin=0x00040005
[00:36:15.434]    TraceD3_Pin=0x00040006
[00:36:15.434]  </debugvars>
[00:36:15.434]  
[00:36:15.435]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:36:15.435]    <block atomic="false" info="">
[00:36:15.435]      Sequence("CheckID");
[00:36:15.435]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:36:15.435]          <block atomic="false" info="">
[00:36:15.435]            __var pidr1 = 0;
[00:36:15.435]              // -> [pidr1 <= 0x00000000]
[00:36:15.436]            __var pidr2 = 0;
[00:36:15.436]              // -> [pidr2 <= 0x00000000]
[00:36:15.436]            __var jep106id = 0;
[00:36:15.436]              // -> [jep106id <= 0x00000000]
[00:36:15.436]            __var ROMTableBase = 0;
[00:36:15.436]              // -> [ROMTableBase <= 0x00000000]
[00:36:15.436]            __ap = 0;      // AHB-AP
[00:36:15.436]              // -> [__ap <= 0x00000000]
[00:36:15.436]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:36:15.437]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.437]              // -> [ROMTableBase <= 0xE00FD000]
[00:36:15.437]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:36:15.437]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.438]              // -> [pidr1 <= 0x00000004]
[00:36:15.438]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:36:15.438]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.438]              // -> [pidr2 <= 0x0000001A]
[00:36:15.439]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:36:15.439]              // -> [jep106id <= 0x00000020]
[00:36:15.439]          </block>
[00:36:15.439]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:36:15.439]            // if-block "jep106id != 0x20"
[00:36:15.439]              // =>  FALSE
[00:36:15.439]            // skip if-block "jep106id != 0x20"
[00:36:15.439]          </control>
[00:36:15.440]        </sequence>
[00:36:15.440]    </block>
[00:36:15.440]  </sequence>
[00:36:15.440]  
[00:36:15.455]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:36:15.455]  
[00:36:15.455]  <debugvars>
[00:36:15.456]    // Pre-defined
[00:36:15.456]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:15.456]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:36:15.456]    __dp=0x00000000
[00:36:15.456]    __ap=0x00000000
[00:36:15.456]    __traceout=0x00000001      (SWO Trace)
[00:36:15.456]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:15.456]    __FlashAddr=0x00000000
[00:36:15.456]    __FlashLen=0x00000000
[00:36:15.457]    __FlashArg=0x00000000
[00:36:15.457]    __FlashOp=0x00000000
[00:36:15.457]    __Result=0x00000000
[00:36:15.457]    
[00:36:15.457]    // User-defined
[00:36:15.457]    DbgMCU_CR=0x00000007
[00:36:15.457]    DbgMCU_APB1_Fz=0x00000000
[00:36:15.457]    DbgMCU_APB2_Fz=0x00000000
[00:36:15.458]    TraceClk_Pin=0x00040002
[00:36:15.458]    TraceD0_Pin=0x00040003
[00:36:15.458]    TraceD1_Pin=0x00040004
[00:36:15.458]    TraceD2_Pin=0x00040005
[00:36:15.458]    TraceD3_Pin=0x00040006
[00:36:15.458]  </debugvars>
[00:36:15.458]  
[00:36:15.458]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:36:15.459]    <block atomic="false" info="">
[00:36:15.459]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:36:15.459]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.459]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:36:15.460]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.460]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:36:15.460]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.461]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:36:15.461]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:15.461]    </block>
[00:36:15.461]  </sequence>
[00:36:15.461]  
[00:36:46.875]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:36:46.875]  
[00:36:46.876]  <debugvars>
[00:36:46.876]    // Pre-defined
[00:36:46.876]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:46.876]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:36:46.876]    __dp=0x00000000
[00:36:46.877]    __ap=0x00000000
[00:36:46.877]    __traceout=0x00000001      (SWO Trace)
[00:36:46.877]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:46.877]    __FlashAddr=0x00000000
[00:36:46.877]    __FlashLen=0x00000000
[00:36:46.877]    __FlashArg=0x00000000
[00:36:46.878]    __FlashOp=0x00000000
[00:36:46.878]    __Result=0x00000000
[00:36:46.878]    
[00:36:46.878]    // User-defined
[00:36:46.878]    DbgMCU_CR=0x00000007
[00:36:46.878]    DbgMCU_APB1_Fz=0x00000000
[00:36:46.879]    DbgMCU_APB2_Fz=0x00000000
[00:36:46.879]    TraceClk_Pin=0x00040002
[00:36:46.879]    TraceD0_Pin=0x00040003
[00:36:46.879]    TraceD1_Pin=0x00040004
[00:36:46.879]    TraceD2_Pin=0x00040005
[00:36:46.879]    TraceD3_Pin=0x00040006
[00:36:46.880]  </debugvars>
[00:36:46.880]  
[00:36:46.880]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:36:46.880]    <block atomic="false" info="">
[00:36:46.880]      Sequence("CheckID");
[00:36:46.880]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:36:46.881]          <block atomic="false" info="">
[00:36:46.881]            __var pidr1 = 0;
[00:36:46.881]              // -> [pidr1 <= 0x00000000]
[00:36:46.881]            __var pidr2 = 0;
[00:36:46.881]              // -> [pidr2 <= 0x00000000]
[00:36:46.882]            __var jep106id = 0;
[00:36:46.882]              // -> [jep106id <= 0x00000000]
[00:36:46.882]            __var ROMTableBase = 0;
[00:36:46.882]              // -> [ROMTableBase <= 0x00000000]
[00:36:46.882]            __ap = 0;      // AHB-AP
[00:36:46.882]              // -> [__ap <= 0x00000000]
[00:36:46.883]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:36:46.883]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.883]              // -> [ROMTableBase <= 0xE00FD000]
[00:36:46.883]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:36:46.884]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.884]              // -> [pidr1 <= 0x00000004]
[00:36:46.884]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:36:46.885]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.885]              // -> [pidr2 <= 0x0000001A]
[00:36:46.885]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:36:46.885]              // -> [jep106id <= 0x00000020]
[00:36:46.885]          </block>
[00:36:46.886]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:36:46.886]            // if-block "jep106id != 0x20"
[00:36:46.886]              // =>  FALSE
[00:36:46.886]            // skip if-block "jep106id != 0x20"
[00:36:46.886]          </control>
[00:36:46.886]        </sequence>
[00:36:46.887]    </block>
[00:36:46.887]  </sequence>
[00:36:46.887]  
[00:36:46.901]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:36:46.901]  
[00:36:46.902]  <debugvars>
[00:36:46.902]    // Pre-defined
[00:36:46.902]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:46.902]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:36:46.902]    __dp=0x00000000
[00:36:46.902]    __ap=0x00000000
[00:36:46.902]    __traceout=0x00000001      (SWO Trace)
[00:36:46.903]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:46.903]    __FlashAddr=0x00000000
[00:36:46.903]    __FlashLen=0x00000000
[00:36:46.903]    __FlashArg=0x00000000
[00:36:46.903]    __FlashOp=0x00000000
[00:36:46.903]    __Result=0x00000000
[00:36:46.903]    
[00:36:46.903]    // User-defined
[00:36:46.903]    DbgMCU_CR=0x00000007
[00:36:46.904]    DbgMCU_APB1_Fz=0x00000000
[00:36:46.904]    DbgMCU_APB2_Fz=0x00000000
[00:36:46.904]    TraceClk_Pin=0x00040002
[00:36:46.904]    TraceD0_Pin=0x00040003
[00:36:46.904]    TraceD1_Pin=0x00040004
[00:36:46.904]    TraceD2_Pin=0x00040005
[00:36:46.905]    TraceD3_Pin=0x00040006
[00:36:46.905]  </debugvars>
[00:36:46.905]  
[00:36:46.905]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:36:46.905]    <block atomic="false" info="">
[00:36:46.905]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:36:46.906]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.906]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:36:46.907]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.907]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:36:46.907]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.907]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:36:46.908]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.908]    </block>
[00:36:46.908]  </sequence>
[00:36:46.908]  
[00:36:46.924]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:36:46.924]  
[00:36:46.924]  <debugvars>
[00:36:46.925]    // Pre-defined
[00:36:46.925]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:46.925]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:36:46.925]    __dp=0x00000000
[00:36:46.925]    __ap=0x00000000
[00:36:46.925]    __traceout=0x00000001      (SWO Trace)
[00:36:46.926]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:46.926]    __FlashAddr=0x00000000
[00:36:46.926]    __FlashLen=0x00000000
[00:36:46.926]    __FlashArg=0x00000000
[00:36:46.926]    __FlashOp=0x00000000
[00:36:46.926]    __Result=0x00000000
[00:36:46.927]    
[00:36:46.927]    // User-defined
[00:36:46.927]    DbgMCU_CR=0x00000007
[00:36:46.927]    DbgMCU_APB1_Fz=0x00000000
[00:36:46.927]    DbgMCU_APB2_Fz=0x00000000
[00:36:46.927]    TraceClk_Pin=0x00040002
[00:36:46.928]    TraceD0_Pin=0x00040003
[00:36:46.928]    TraceD1_Pin=0x00040004
[00:36:46.928]    TraceD2_Pin=0x00040005
[00:36:46.928]    TraceD3_Pin=0x00040006
[00:36:46.928]  </debugvars>
[00:36:46.928]  
[00:36:46.929]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:36:46.929]    <block atomic="false" info="">
[00:36:46.929]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:36:46.929]        // -> [traceSWO <= 0x00000001]
[00:36:46.929]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:36:46.930]        // -> [traceTPIU <= 0x00000000]
[00:36:46.930]    </block>
[00:36:46.930]    <control if="traceSWO" while="" timeout="0" info="">
[00:36:46.930]      // if-block "traceSWO"
[00:36:46.930]        // =>  TRUE
[00:36:46.930]      <block atomic="false" info="">
[00:36:46.930]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:36:46.931]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:36:46.931]            <block atomic="false" info="">
[00:36:46.931]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:36:46.931]                // -> [dbgmcu_val <= 0x00000000]
[00:36:46.931]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:36:46.931]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:36:46.932]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:36:46.932]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.932]                // -> [dbgmcu_val <= 0x00000007]
[00:36:46.932]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:36:46.932]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:36:46.932]              Sequence("ConfigureTraceSWOPin");
[00:36:46.933]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:36:46.933]                  <block atomic="false" info="">
[00:36:46.933]                    __var pin     = 0;
[00:36:46.933]                      // -> [pin <= 0x00000000]
[00:36:46.933]                    __var port    = 0;
[00:36:46.933]                      // -> [port <= 0x00000000]
[00:36:46.934]                    __var portAdr = 0;
[00:36:46.934]                      // -> [portAdr <= 0x00000000]
[00:36:46.934]                    __var pos     = 0;
[00:36:46.934]                      // -> [pos <= 0x00000000]
[00:36:46.934]                    __var SWO_Pin = 0x00010003;          // PB3
[00:36:46.934]                      // -> [SWO_Pin <= 0x00010003]
[00:36:46.934]                  </block>
[00:36:46.934]                  <block atomic="false" info="configure SWO">
[00:36:46.935]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:36:46.935]                      // -> [pin <= 0x00000003]
[00:36:46.935]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:36:46.935]                      // -> [port <= 0x00000001]
[00:36:46.935]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:36:46.935]                      // -> [portAdr <= 0x40020400]
[00:36:46.935]                    pos = pin * 2;
[00:36:46.936]                      // -> [pos <= 0x00000006]
[00:36:46.936]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:36:46.936]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.937]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.937]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:36:46.937]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.938]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.938]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:36:46.939]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.939]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.939]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:36:46.940]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.940]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.940]                  </block>
[00:36:46.941]                  <control if="pin <  8" while="" timeout="0" info="">
[00:36:46.941]                    // if-block "pin <  8"
[00:36:46.941]                      // =>  TRUE
[00:36:46.941]                    <block atomic="false" info="">
[00:36:46.941]                      pos = ((pin    ) & 7) * 4;
[00:36:46.941]                        // -> [pos <= 0x0000000C]
[00:36:46.941]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:36:46.942]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.943]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.943]                    </block>
[00:36:46.943]                    // end if-block "pin <  8"
[00:36:46.943]                  </control>
[00:36:46.943]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:36:46.943]                    // if-block "pin >= 8"
[00:36:46.943]                      // =>  FALSE
[00:36:46.944]                    // skip if-block "pin >= 8"
[00:36:46.944]                  </control>
[00:36:46.944]                </sequence>
[00:36:46.944]            </block>
[00:36:46.944]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:36:46.944]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:36:46.945]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.945]            </block>
[00:36:46.945]          </sequence>
[00:36:46.945]      </block>
[00:36:46.945]      // end if-block "traceSWO"
[00:36:46.945]    </control>
[00:36:46.945]    <control if="traceTPIU" while="" timeout="0" info="">
[00:36:46.946]      // if-block "traceTPIU"
[00:36:46.946]        // =>  FALSE
[00:36:46.946]      // skip if-block "traceTPIU"
[00:36:46.946]    </control>
[00:36:46.946]  </sequence>
[00:36:46.946]  
[00:36:46.950]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:36:46.950]  
[00:36:46.950]  <debugvars>
[00:36:46.950]    // Pre-defined
[00:36:46.950]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:46.951]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:36:46.951]    __dp=0x00000000
[00:36:46.951]    __ap=0x00000000
[00:36:46.951]    __traceout=0x00000001      (SWO Trace)
[00:36:46.951]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:46.951]    __FlashAddr=0x00000000
[00:36:46.951]    __FlashLen=0x00000000
[00:36:46.952]    __FlashArg=0x00000000
[00:36:46.952]    __FlashOp=0x00000000
[00:36:46.952]    __Result=0x00000000
[00:36:46.952]    
[00:36:46.952]    // User-defined
[00:36:46.952]    DbgMCU_CR=0x00000007
[00:36:46.952]    DbgMCU_APB1_Fz=0x00000000
[00:36:46.952]    DbgMCU_APB2_Fz=0x00000000
[00:36:46.953]    TraceClk_Pin=0x00040002
[00:36:46.953]    TraceD0_Pin=0x00040003
[00:36:46.953]    TraceD1_Pin=0x00040004
[00:36:46.953]    TraceD2_Pin=0x00040005
[00:36:46.953]    TraceD3_Pin=0x00040006
[00:36:46.953]  </debugvars>
[00:36:46.953]  
[00:36:46.953]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:36:46.954]    <block atomic="false" info="">
[00:36:46.954]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:36:46.954]        // -> [traceSWO <= 0x00000001]
[00:36:46.954]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:36:46.954]        // -> [traceTPIU <= 0x00000000]
[00:36:46.954]    </block>
[00:36:46.954]    <control if="traceSWO" while="" timeout="0" info="">
[00:36:46.954]      // if-block "traceSWO"
[00:36:46.955]        // =>  TRUE
[00:36:46.955]      <block atomic="false" info="">
[00:36:46.955]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:36:46.955]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:36:46.955]            <block atomic="false" info="">
[00:36:46.955]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:36:46.955]                // -> [dbgmcu_val <= 0x00000000]
[00:36:46.955]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:36:46.956]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:36:46.956]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:36:46.956]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.956]                // -> [dbgmcu_val <= 0x00000007]
[00:36:46.956]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:36:46.957]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:36:46.957]              Sequence("ConfigureTraceSWOPin");
[00:36:46.957]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:36:46.957]                  <block atomic="false" info="">
[00:36:46.957]                    __var pin     = 0;
[00:36:46.957]                      // -> [pin <= 0x00000000]
[00:36:46.957]                    __var port    = 0;
[00:36:46.957]                      // -> [port <= 0x00000000]
[00:36:46.958]                    __var portAdr = 0;
[00:36:46.958]                      // -> [portAdr <= 0x00000000]
[00:36:46.958]                    __var pos     = 0;
[00:36:46.958]                      // -> [pos <= 0x00000000]
[00:36:46.958]                    __var SWO_Pin = 0x00010003;          // PB3
[00:36:46.958]                      // -> [SWO_Pin <= 0x00010003]
[00:36:46.958]                  </block>
[00:36:46.958]                  <block atomic="false" info="configure SWO">
[00:36:46.959]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:36:46.959]                      // -> [pin <= 0x00000003]
[00:36:46.959]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:36:46.959]                      // -> [port <= 0x00000001]
[00:36:46.959]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:36:46.959]                      // -> [portAdr <= 0x40020400]
[00:36:46.959]                    pos = pin * 2;
[00:36:46.959]                      // -> [pos <= 0x00000006]
[00:36:46.960]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:36:46.960]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.960]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.961]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:36:46.961]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.961]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.962]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:36:46.962]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.962]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.962]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:36:46.963]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.963]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.963]                  </block>
[00:36:46.964]                  <control if="pin <  8" while="" timeout="0" info="">
[00:36:46.964]                    // if-block "pin <  8"
[00:36:46.964]                      // =>  TRUE
[00:36:46.964]                    <block atomic="false" info="">
[00:36:46.964]                      pos = ((pin    ) & 7) * 4;
[00:36:46.964]                        // -> [pos <= 0x0000000C]
[00:36:46.964]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:36:46.965]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.965]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.965]                    </block>
[00:36:46.966]                    // end if-block "pin <  8"
[00:36:46.966]                  </control>
[00:36:46.966]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:36:46.966]                    // if-block "pin >= 8"
[00:36:46.966]                      // =>  FALSE
[00:36:46.966]                    // skip if-block "pin >= 8"
[00:36:46.966]                  </control>
[00:36:46.966]                </sequence>
[00:36:46.966]            </block>
[00:36:46.967]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:36:46.967]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:36:46.967]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:46.967]            </block>
[00:36:46.967]          </sequence>
[00:36:46.967]      </block>
[00:36:46.968]      // end if-block "traceSWO"
[00:36:46.968]    </control>
[00:36:46.968]    <control if="traceTPIU" while="" timeout="0" info="">
[00:36:46.968]      // if-block "traceTPIU"
[00:36:46.968]        // =>  FALSE
[00:36:46.968]      // skip if-block "traceTPIU"
[00:36:46.968]    </control>
[00:36:46.969]  </sequence>
[00:36:46.969]  
[00:36:47.177]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:36:47.177]  
[00:36:47.177]  <debugvars>
[00:36:47.177]    // Pre-defined
[00:36:47.177]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:36:47.178]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:36:47.178]    __dp=0x00000000
[00:36:47.178]    __ap=0x00000000
[00:36:47.178]    __traceout=0x00000001      (SWO Trace)
[00:36:47.178]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:36:47.178]    __FlashAddr=0x00000000
[00:36:47.179]    __FlashLen=0x00000000
[00:36:47.179]    __FlashArg=0x00000000
[00:36:47.179]    __FlashOp=0x00000000
[00:36:47.179]    __Result=0x00000000
[00:36:47.179]    
[00:36:47.179]    // User-defined
[00:36:47.179]    DbgMCU_CR=0x00000007
[00:36:47.180]    DbgMCU_APB1_Fz=0x00000000
[00:36:47.180]    DbgMCU_APB2_Fz=0x00000000
[00:36:47.180]    TraceClk_Pin=0x00040002
[00:36:47.180]    TraceD0_Pin=0x00040003
[00:36:47.181]    TraceD1_Pin=0x00040004
[00:36:47.181]    TraceD2_Pin=0x00040005
[00:36:47.181]    TraceD3_Pin=0x00040006
[00:36:47.181]  </debugvars>
[00:36:47.181]  
[00:36:47.181]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:36:47.182]    <block atomic="false" info="">
[00:36:47.182]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:36:47.182]        // -> [traceSWO <= 0x00000001]
[00:36:47.182]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:36:47.182]        // -> [traceTPIU <= 0x00000000]
[00:36:47.183]    </block>
[00:36:47.183]    <control if="traceSWO" while="" timeout="0" info="">
[00:36:47.183]      // if-block "traceSWO"
[00:36:47.183]        // =>  TRUE
[00:36:47.183]      <block atomic="false" info="">
[00:36:47.183]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:36:47.183]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:36:47.184]            <block atomic="false" info="">
[00:36:47.184]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:36:47.184]                // -> [dbgmcu_val <= 0x00000000]
[00:36:47.184]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:36:47.184]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:36:47.185]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:36:47.185]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.185]                // -> [dbgmcu_val <= 0x00000007]
[00:36:47.185]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:36:47.186]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:36:47.186]              Sequence("ConfigureTraceSWOPin");
[00:36:47.186]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:36:47.186]                  <block atomic="false" info="">
[00:36:47.186]                    __var pin     = 0;
[00:36:47.186]                      // -> [pin <= 0x00000000]
[00:36:47.186]                    __var port    = 0;
[00:36:47.187]                      // -> [port <= 0x00000000]
[00:36:47.187]                    __var portAdr = 0;
[00:36:47.187]                      // -> [portAdr <= 0x00000000]
[00:36:47.187]                    __var pos     = 0;
[00:36:47.187]                      // -> [pos <= 0x00000000]
[00:36:47.187]                    __var SWO_Pin = 0x00010003;          // PB3
[00:36:47.187]                      // -> [SWO_Pin <= 0x00010003]
[00:36:47.187]                  </block>
[00:36:47.188]                  <block atomic="false" info="configure SWO">
[00:36:47.188]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:36:47.188]                      // -> [pin <= 0x00000003]
[00:36:47.188]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:36:47.188]                      // -> [port <= 0x00000001]
[00:36:47.188]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:36:47.188]                      // -> [portAdr <= 0x40020400]
[00:36:47.188]                    pos = pin * 2;
[00:36:47.188]                      // -> [pos <= 0x00000006]
[00:36:47.189]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:36:47.189]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.189]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.190]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:36:47.190]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.190]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.190]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:36:47.191]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.191]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.191]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:36:47.192]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.192]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.192]                  </block>
[00:36:47.193]                  <control if="pin <  8" while="" timeout="0" info="">
[00:36:47.193]                    // if-block "pin <  8"
[00:36:47.193]                      // =>  TRUE
[00:36:47.193]                    <block atomic="false" info="">
[00:36:47.193]                      pos = ((pin    ) & 7) * 4;
[00:36:47.193]                        // -> [pos <= 0x0000000C]
[00:36:47.193]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:36:47.194]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.194]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.194]                    </block>
[00:36:47.194]                    // end if-block "pin <  8"
[00:36:47.194]                  </control>
[00:36:47.195]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:36:47.195]                    // if-block "pin >= 8"
[00:36:47.195]                      // =>  FALSE
[00:36:47.195]                    // skip if-block "pin >= 8"
[00:36:47.195]                  </control>
[00:36:47.195]                </sequence>
[00:36:47.195]            </block>
[00:36:47.195]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:36:47.196]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:36:47.196]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:36:47.196]            </block>
[00:36:47.196]          </sequence>
[00:36:47.196]      </block>
[00:36:47.197]      // end if-block "traceSWO"
[00:36:47.197]    </control>
[00:36:47.197]    <control if="traceTPIU" while="" timeout="0" info="">
[00:36:47.197]      // if-block "traceTPIU"
[00:36:47.197]        // =>  FALSE
[00:36:47.197]      // skip if-block "traceTPIU"
[00:36:47.197]    </control>
[00:36:47.198]  </sequence>
[00:36:47.198]  
[00:40:02.660]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:40:02.660]  
[00:40:02.661]  <debugvars>
[00:40:02.661]    // Pre-defined
[00:40:02.661]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:40:02.662]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:40:02.662]    __dp=0x00000000
[00:40:02.662]    __ap=0x00000000
[00:40:02.662]    __traceout=0x00000001      (SWO Trace)
[00:40:02.662]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:40:02.663]    __FlashAddr=0x00000000
[00:40:02.663]    __FlashLen=0x00000000
[00:40:02.663]    __FlashArg=0x00000000
[00:40:02.663]    __FlashOp=0x00000000
[00:40:02.663]    __Result=0x00000000
[00:40:02.664]    
[00:40:02.664]    // User-defined
[00:40:02.664]    DbgMCU_CR=0x00000007
[00:40:02.664]    DbgMCU_APB1_Fz=0x00000000
[00:40:02.664]    DbgMCU_APB2_Fz=0x00000000
[00:40:02.664]    TraceClk_Pin=0x00040002
[00:40:02.665]    TraceD0_Pin=0x00040003
[00:40:02.665]    TraceD1_Pin=0x00040004
[00:40:02.665]    TraceD2_Pin=0x00040005
[00:40:02.665]    TraceD3_Pin=0x00040006
[00:40:02.665]  </debugvars>
[00:40:02.666]  
[00:40:02.666]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:40:02.666]    <block atomic="false" info="">
[00:40:02.666]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:40:02.666]        // -> [traceSWO <= 0x00000001]
[00:40:02.666]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:40:02.667]        // -> [traceTPIU <= 0x00000000]
[00:40:02.667]    </block>
[00:40:02.667]    <control if="traceSWO" while="" timeout="0" info="">
[00:40:02.667]      // if-block "traceSWO"
[00:40:02.667]        // =>  TRUE
[00:40:02.668]      <block atomic="false" info="">
[00:40:02.668]        Sequence("DisableTraceSWO");
[00:40:02.668]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:40:02.668]            <block atomic="false" info="">
[00:40:02.668]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:40:02.669]                // -> [dbgmcu_val <= 0x00000000]
[00:40:02.669]            </block>
[00:40:02.669]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:40:02.669]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:40:02.670]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:40:02.670]                // -> [dbgmcu_val <= 0x00000007]
[00:40:02.670]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[00:40:02.671]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:40:02.671]            </block>
[00:40:02.671]          </sequence>
[00:40:02.671]      </block>
[00:40:02.672]      // end if-block "traceSWO"
[00:40:02.672]    </control>
[00:40:02.672]    <control if="traceTPIU" while="" timeout="0" info="">
[00:40:02.672]      // if-block "traceTPIU"
[00:40:02.672]        // =>  FALSE
[00:40:02.672]      // skip if-block "traceTPIU"
[00:40:02.673]    </control>
[00:40:02.673]  </sequence>
[00:40:02.673]  
[00:42:20.422]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:42:20.422]  
[00:42:20.422]  <debugvars>
[00:42:20.422]    // Pre-defined
[00:42:20.422]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:20.422]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:42:20.422]    __dp=0x00000000
[00:42:20.423]    __ap=0x00000000
[00:42:20.423]    __traceout=0x00000001      (SWO Trace)
[00:42:20.423]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:20.423]    __FlashAddr=0x00000000
[00:42:20.423]    __FlashLen=0x00000000
[00:42:20.423]    __FlashArg=0x00000000
[00:42:20.423]    __FlashOp=0x00000000
[00:42:20.423]    __Result=0x00000000
[00:42:20.423]    
[00:42:20.423]    // User-defined
[00:42:20.424]    DbgMCU_CR=0x00000007
[00:42:20.424]    DbgMCU_APB1_Fz=0x00000000
[00:42:20.424]    DbgMCU_APB2_Fz=0x00000000
[00:42:20.424]    TraceClk_Pin=0x00040002
[00:42:20.424]    TraceD0_Pin=0x00040003
[00:42:20.424]    TraceD1_Pin=0x00040004
[00:42:20.424]    TraceD2_Pin=0x00040005
[00:42:20.424]    TraceD3_Pin=0x00040006
[00:42:20.425]  </debugvars>
[00:42:20.425]  
[00:42:20.425]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:42:20.425]    <block atomic="false" info="">
[00:42:20.425]      Sequence("CheckID");
[00:42:20.425]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:42:20.425]          <block atomic="false" info="">
[00:42:20.425]            __var pidr1 = 0;
[00:42:20.425]              // -> [pidr1 <= 0x00000000]
[00:42:20.426]            __var pidr2 = 0;
[00:42:20.426]              // -> [pidr2 <= 0x00000000]
[00:42:20.426]            __var jep106id = 0;
[00:42:20.426]              // -> [jep106id <= 0x00000000]
[00:42:20.426]            __var ROMTableBase = 0;
[00:42:20.426]              // -> [ROMTableBase <= 0x00000000]
[00:42:20.426]            __ap = 0;      // AHB-AP
[00:42:20.426]              // -> [__ap <= 0x00000000]
[00:42:20.427]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:42:20.427]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.427]              // -> [ROMTableBase <= 0xE00FD000]
[00:42:20.427]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:42:20.428]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.428]              // -> [pidr1 <= 0x00000004]
[00:42:20.428]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:42:20.428]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.429]              // -> [pidr2 <= 0x0000001A]
[00:42:20.429]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:42:20.429]              // -> [jep106id <= 0x00000020]
[00:42:20.429]          </block>
[00:42:20.429]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:42:20.429]            // if-block "jep106id != 0x20"
[00:42:20.429]              // =>  FALSE
[00:42:20.429]            // skip if-block "jep106id != 0x20"
[00:42:20.429]          </control>
[00:42:20.430]        </sequence>
[00:42:20.430]    </block>
[00:42:20.430]  </sequence>
[00:42:20.430]  
[00:42:20.444]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:42:20.444]  
[00:42:20.445]  <debugvars>
[00:42:20.445]    // Pre-defined
[00:42:20.445]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:20.445]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:42:20.445]    __dp=0x00000000
[00:42:20.445]    __ap=0x00000000
[00:42:20.445]    __traceout=0x00000001      (SWO Trace)
[00:42:20.445]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:20.446]    __FlashAddr=0x00000000
[00:42:20.446]    __FlashLen=0x00000000
[00:42:20.446]    __FlashArg=0x00000000
[00:42:20.446]    __FlashOp=0x00000000
[00:42:20.446]    __Result=0x00000000
[00:42:20.446]    
[00:42:20.446]    // User-defined
[00:42:20.446]    DbgMCU_CR=0x00000007
[00:42:20.446]    DbgMCU_APB1_Fz=0x00000000
[00:42:20.446]    DbgMCU_APB2_Fz=0x00000000
[00:42:20.447]    TraceClk_Pin=0x00040002
[00:42:20.447]    TraceD0_Pin=0x00040003
[00:42:20.447]    TraceD1_Pin=0x00040004
[00:42:20.447]    TraceD2_Pin=0x00040005
[00:42:20.447]    TraceD3_Pin=0x00040006
[00:42:20.447]  </debugvars>
[00:42:20.447]  
[00:42:20.447]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:42:20.448]    <block atomic="false" info="">
[00:42:20.448]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:42:20.448]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.448]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:42:20.449]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.449]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:42:20.449]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.449]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:42:20.450]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:20.450]    </block>
[00:42:20.450]  </sequence>
[00:42:20.450]  
[00:42:51.292]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:42:51.292]  
[00:42:51.292]  <debugvars>
[00:42:51.292]    // Pre-defined
[00:42:51.292]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:51.292]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:42:51.292]    __dp=0x00000000
[00:42:51.292]    __ap=0x00000000
[00:42:51.292]    __traceout=0x00000001      (SWO Trace)
[00:42:51.293]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:51.293]    __FlashAddr=0x00000000
[00:42:51.293]    __FlashLen=0x00000000
[00:42:51.293]    __FlashArg=0x00000000
[00:42:51.293]    __FlashOp=0x00000000
[00:42:51.293]    __Result=0x00000000
[00:42:51.293]    
[00:42:51.293]    // User-defined
[00:42:51.293]    DbgMCU_CR=0x00000007
[00:42:51.293]    DbgMCU_APB1_Fz=0x00000000
[00:42:51.294]    DbgMCU_APB2_Fz=0x00000000
[00:42:51.294]    TraceClk_Pin=0x00040002
[00:42:51.294]    TraceD0_Pin=0x00040003
[00:42:51.294]    TraceD1_Pin=0x00040004
[00:42:51.294]    TraceD2_Pin=0x00040005
[00:42:51.294]    TraceD3_Pin=0x00040006
[00:42:51.294]  </debugvars>
[00:42:51.294]  
[00:42:51.294]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:42:51.295]    <block atomic="false" info="">
[00:42:51.295]      Sequence("CheckID");
[00:42:51.295]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:42:51.295]          <block atomic="false" info="">
[00:42:51.295]            __var pidr1 = 0;
[00:42:51.295]              // -> [pidr1 <= 0x00000000]
[00:42:51.295]            __var pidr2 = 0;
[00:42:51.295]              // -> [pidr2 <= 0x00000000]
[00:42:51.295]            __var jep106id = 0;
[00:42:51.296]              // -> [jep106id <= 0x00000000]
[00:42:51.296]            __var ROMTableBase = 0;
[00:42:51.296]              // -> [ROMTableBase <= 0x00000000]
[00:42:51.296]            __ap = 0;      // AHB-AP
[00:42:51.296]              // -> [__ap <= 0x00000000]
[00:42:51.296]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:42:51.296]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.297]              // -> [ROMTableBase <= 0xE00FD000]
[00:42:51.297]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:42:51.297]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.297]              // -> [pidr1 <= 0x00000004]
[00:42:51.297]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:42:51.298]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.298]              // -> [pidr2 <= 0x0000001A]
[00:42:51.298]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:42:51.298]              // -> [jep106id <= 0x00000020]
[00:42:51.298]          </block>
[00:42:51.298]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:42:51.298]            // if-block "jep106id != 0x20"
[00:42:51.299]              // =>  FALSE
[00:42:51.299]            // skip if-block "jep106id != 0x20"
[00:42:51.299]          </control>
[00:42:51.299]        </sequence>
[00:42:51.299]    </block>
[00:42:51.299]  </sequence>
[00:42:51.299]  
[00:42:51.313]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:42:51.313]  
[00:42:51.313]  <debugvars>
[00:42:51.313]    // Pre-defined
[00:42:51.314]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:51.314]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:42:51.314]    __dp=0x00000000
[00:42:51.314]    __ap=0x00000000
[00:42:51.314]    __traceout=0x00000001      (SWO Trace)
[00:42:51.314]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:51.314]    __FlashAddr=0x00000000
[00:42:51.315]    __FlashLen=0x00000000
[00:42:51.315]    __FlashArg=0x00000000
[00:42:51.315]    __FlashOp=0x00000000
[00:42:51.315]    __Result=0x00000000
[00:42:51.315]    
[00:42:51.315]    // User-defined
[00:42:51.315]    DbgMCU_CR=0x00000007
[00:42:51.315]    DbgMCU_APB1_Fz=0x00000000
[00:42:51.316]    DbgMCU_APB2_Fz=0x00000000
[00:42:51.316]    TraceClk_Pin=0x00040002
[00:42:51.316]    TraceD0_Pin=0x00040003
[00:42:51.316]    TraceD1_Pin=0x00040004
[00:42:51.316]    TraceD2_Pin=0x00040005
[00:42:51.316]    TraceD3_Pin=0x00040006
[00:42:51.316]  </debugvars>
[00:42:51.317]  
[00:42:51.317]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:42:51.317]    <block atomic="false" info="">
[00:42:51.317]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:42:51.317]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.319]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:42:51.319]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.319]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:42:51.319]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.320]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:42:51.320]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.320]    </block>
[00:42:51.320]  </sequence>
[00:42:51.320]  
[00:42:51.336]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:42:51.336]  
[00:42:51.336]  <debugvars>
[00:42:51.336]    // Pre-defined
[00:42:51.337]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:51.337]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:42:51.337]    __dp=0x00000000
[00:42:51.337]    __ap=0x00000000
[00:42:51.337]    __traceout=0x00000001      (SWO Trace)
[00:42:51.337]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:51.337]    __FlashAddr=0x00000000
[00:42:51.338]    __FlashLen=0x00000000
[00:42:51.338]    __FlashArg=0x00000000
[00:42:51.338]    __FlashOp=0x00000000
[00:42:51.338]    __Result=0x00000000
[00:42:51.338]    
[00:42:51.338]    // User-defined
[00:42:51.339]    DbgMCU_CR=0x00000007
[00:42:51.339]    DbgMCU_APB1_Fz=0x00000000
[00:42:51.339]    DbgMCU_APB2_Fz=0x00000000
[00:42:51.339]    TraceClk_Pin=0x00040002
[00:42:51.339]    TraceD0_Pin=0x00040003
[00:42:51.339]    TraceD1_Pin=0x00040004
[00:42:51.340]    TraceD2_Pin=0x00040005
[00:42:51.340]    TraceD3_Pin=0x00040006
[00:42:51.340]  </debugvars>
[00:42:51.340]  
[00:42:51.340]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:42:51.341]    <block atomic="false" info="">
[00:42:51.341]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:42:51.341]        // -> [traceSWO <= 0x00000001]
[00:42:51.341]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:42:51.341]        // -> [traceTPIU <= 0x00000000]
[00:42:51.341]    </block>
[00:42:51.342]    <control if="traceSWO" while="" timeout="0" info="">
[00:42:51.342]      // if-block "traceSWO"
[00:42:51.342]        // =>  TRUE
[00:42:51.342]      <block atomic="false" info="">
[00:42:51.342]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:42:51.342]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:42:51.343]            <block atomic="false" info="">
[00:42:51.343]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:42:51.343]                // -> [dbgmcu_val <= 0x00000000]
[00:42:51.343]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:42:51.343]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:42:51.343]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:42:51.344]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.344]                // -> [dbgmcu_val <= 0x00000007]
[00:42:51.344]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:42:51.344]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:42:51.344]              Sequence("ConfigureTraceSWOPin");
[00:42:51.345]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:42:51.345]                  <block atomic="false" info="">
[00:42:51.345]                    __var pin     = 0;
[00:42:51.345]                      // -> [pin <= 0x00000000]
[00:42:51.345]                    __var port    = 0;
[00:42:51.345]                      // -> [port <= 0x00000000]
[00:42:51.346]                    __var portAdr = 0;
[00:42:51.346]                      // -> [portAdr <= 0x00000000]
[00:42:51.346]                    __var pos     = 0;
[00:42:51.346]                      // -> [pos <= 0x00000000]
[00:42:51.346]                    __var SWO_Pin = 0x00010003;          // PB3
[00:42:51.346]                      // -> [SWO_Pin <= 0x00010003]
[00:42:51.346]                  </block>
[00:42:51.347]                  <block atomic="false" info="configure SWO">
[00:42:51.347]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:42:51.347]                      // -> [pin <= 0x00000003]
[00:42:51.347]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:42:51.347]                      // -> [port <= 0x00000001]
[00:42:51.347]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:42:51.348]                      // -> [portAdr <= 0x40020400]
[00:42:51.348]                    pos = pin * 2;
[00:42:51.348]                      // -> [pos <= 0x00000006]
[00:42:51.348]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:42:51.348]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.349]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.349]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:42:51.350]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.350]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.350]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:42:51.351]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.351]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.351]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:42:51.352]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.352]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.353]                  </block>
[00:42:51.353]                  <control if="pin <  8" while="" timeout="0" info="">
[00:42:51.353]                    // if-block "pin <  8"
[00:42:51.353]                      // =>  TRUE
[00:42:51.353]                    <block atomic="false" info="">
[00:42:51.353]                      pos = ((pin    ) & 7) * 4;
[00:42:51.353]                        // -> [pos <= 0x0000000C]
[00:42:51.353]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:42:51.354]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.354]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.354]                    </block>
[00:42:51.355]                    // end if-block "pin <  8"
[00:42:51.355]                  </control>
[00:42:51.355]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:42:51.355]                    // if-block "pin >= 8"
[00:42:51.355]                      // =>  FALSE
[00:42:51.355]                    // skip if-block "pin >= 8"
[00:42:51.355]                  </control>
[00:42:51.355]                </sequence>
[00:42:51.355]            </block>
[00:42:51.356]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:42:51.356]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:42:51.356]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.356]            </block>
[00:42:51.356]          </sequence>
[00:42:51.356]      </block>
[00:42:51.357]      // end if-block "traceSWO"
[00:42:51.357]    </control>
[00:42:51.357]    <control if="traceTPIU" while="" timeout="0" info="">
[00:42:51.357]      // if-block "traceTPIU"
[00:42:51.357]        // =>  FALSE
[00:42:51.357]      // skip if-block "traceTPIU"
[00:42:51.357]    </control>
[00:42:51.357]  </sequence>
[00:42:51.358]  
[00:42:51.361]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:42:51.361]  
[00:42:51.361]  <debugvars>
[00:42:51.362]    // Pre-defined
[00:42:51.362]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:51.362]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:42:51.362]    __dp=0x00000000
[00:42:51.362]    __ap=0x00000000
[00:42:51.363]    __traceout=0x00000001      (SWO Trace)
[00:42:51.363]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:51.363]    __FlashAddr=0x00000000
[00:42:51.363]    __FlashLen=0x00000000
[00:42:51.363]    __FlashArg=0x00000000
[00:42:51.363]    __FlashOp=0x00000000
[00:42:51.364]    __Result=0x00000000
[00:42:51.364]    
[00:42:51.364]    // User-defined
[00:42:51.364]    DbgMCU_CR=0x00000007
[00:42:51.364]    DbgMCU_APB1_Fz=0x00000000
[00:42:51.364]    DbgMCU_APB2_Fz=0x00000000
[00:42:51.365]    TraceClk_Pin=0x00040002
[00:42:51.365]    TraceD0_Pin=0x00040003
[00:42:51.365]    TraceD1_Pin=0x00040004
[00:42:51.365]    TraceD2_Pin=0x00040005
[00:42:51.365]    TraceD3_Pin=0x00040006
[00:42:51.366]  </debugvars>
[00:42:51.366]  
[00:42:51.366]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:42:51.366]    <block atomic="false" info="">
[00:42:51.366]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:42:51.366]        // -> [traceSWO <= 0x00000001]
[00:42:51.367]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:42:51.367]        // -> [traceTPIU <= 0x00000000]
[00:42:51.367]    </block>
[00:42:51.367]    <control if="traceSWO" while="" timeout="0" info="">
[00:42:51.367]      // if-block "traceSWO"
[00:42:51.367]        // =>  TRUE
[00:42:51.368]      <block atomic="false" info="">
[00:42:51.368]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:42:51.368]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:42:51.368]            <block atomic="false" info="">
[00:42:51.368]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:42:51.368]                // -> [dbgmcu_val <= 0x00000000]
[00:42:51.368]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:42:51.368]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:42:51.369]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:42:51.369]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.369]                // -> [dbgmcu_val <= 0x00000007]
[00:42:51.369]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:42:51.370]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:42:51.370]              Sequence("ConfigureTraceSWOPin");
[00:42:51.370]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:42:51.370]                  <block atomic="false" info="">
[00:42:51.370]                    __var pin     = 0;
[00:42:51.370]                      // -> [pin <= 0x00000000]
[00:42:51.370]                    __var port    = 0;
[00:42:51.371]                      // -> [port <= 0x00000000]
[00:42:51.371]                    __var portAdr = 0;
[00:42:51.371]                      // -> [portAdr <= 0x00000000]
[00:42:51.371]                    __var pos     = 0;
[00:42:51.371]                      // -> [pos <= 0x00000000]
[00:42:51.371]                    __var SWO_Pin = 0x00010003;          // PB3
[00:42:51.371]                      // -> [SWO_Pin <= 0x00010003]
[00:42:51.371]                  </block>
[00:42:51.372]                  <block atomic="false" info="configure SWO">
[00:42:51.372]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:42:51.372]                      // -> [pin <= 0x00000003]
[00:42:51.372]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:42:51.372]                      // -> [port <= 0x00000001]
[00:42:51.372]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:42:51.372]                      // -> [portAdr <= 0x40020400]
[00:42:51.372]                    pos = pin * 2;
[00:42:51.372]                      // -> [pos <= 0x00000006]
[00:42:51.373]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:42:51.373]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.373]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.374]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:42:51.374]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.374]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.375]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:42:51.375]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.376]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.376]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:42:51.376]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.377]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.377]                  </block>
[00:42:51.377]                  <control if="pin <  8" while="" timeout="0" info="">
[00:42:51.377]                    // if-block "pin <  8"
[00:42:51.377]                      // =>  TRUE
[00:42:51.377]                    <block atomic="false" info="">
[00:42:51.377]                      pos = ((pin    ) & 7) * 4;
[00:42:51.377]                        // -> [pos <= 0x0000000C]
[00:42:51.377]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:42:51.378]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.378]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.378]                    </block>
[00:42:51.378]                    // end if-block "pin <  8"
[00:42:51.379]                  </control>
[00:42:51.379]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:42:51.379]                    // if-block "pin >= 8"
[00:42:51.379]                      // =>  FALSE
[00:42:51.379]                    // skip if-block "pin >= 8"
[00:42:51.379]                  </control>
[00:42:51.379]                </sequence>
[00:42:51.379]            </block>
[00:42:51.379]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:42:51.380]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:42:51.380]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.380]            </block>
[00:42:51.380]          </sequence>
[00:42:51.380]      </block>
[00:42:51.380]      // end if-block "traceSWO"
[00:42:51.381]    </control>
[00:42:51.381]    <control if="traceTPIU" while="" timeout="0" info="">
[00:42:51.381]      // if-block "traceTPIU"
[00:42:51.381]        // =>  FALSE
[00:42:51.381]      // skip if-block "traceTPIU"
[00:42:51.381]    </control>
[00:42:51.381]  </sequence>
[00:42:51.381]  
[00:42:51.592]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:42:51.592]  
[00:42:51.592]  <debugvars>
[00:42:51.593]    // Pre-defined
[00:42:51.593]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:42:51.593]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:42:51.593]    __dp=0x00000000
[00:42:51.594]    __ap=0x00000000
[00:42:51.594]    __traceout=0x00000001      (SWO Trace)
[00:42:51.594]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:42:51.594]    __FlashAddr=0x00000000
[00:42:51.594]    __FlashLen=0x00000000
[00:42:51.595]    __FlashArg=0x00000000
[00:42:51.595]    __FlashOp=0x00000000
[00:42:51.595]    __Result=0x00000000
[00:42:51.595]    
[00:42:51.595]    // User-defined
[00:42:51.595]    DbgMCU_CR=0x00000007
[00:42:51.595]    DbgMCU_APB1_Fz=0x00000000
[00:42:51.596]    DbgMCU_APB2_Fz=0x00000000
[00:42:51.596]    TraceClk_Pin=0x00040002
[00:42:51.596]    TraceD0_Pin=0x00040003
[00:42:51.596]    TraceD1_Pin=0x00040004
[00:42:51.596]    TraceD2_Pin=0x00040005
[00:42:51.597]    TraceD3_Pin=0x00040006
[00:42:51.597]  </debugvars>
[00:42:51.597]  
[00:42:51.597]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:42:51.597]    <block atomic="false" info="">
[00:42:51.597]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:42:51.598]        // -> [traceSWO <= 0x00000001]
[00:42:51.598]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:42:51.598]        // -> [traceTPIU <= 0x00000000]
[00:42:51.598]    </block>
[00:42:51.598]    <control if="traceSWO" while="" timeout="0" info="">
[00:42:51.598]      // if-block "traceSWO"
[00:42:51.599]        // =>  TRUE
[00:42:51.599]      <block atomic="false" info="">
[00:42:51.599]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:42:51.599]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:42:51.599]            <block atomic="false" info="">
[00:42:51.600]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:42:51.600]                // -> [dbgmcu_val <= 0x00000000]
[00:42:51.600]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:42:51.600]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:42:51.600]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:42:51.601]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.601]                // -> [dbgmcu_val <= 0x00000007]
[00:42:51.601]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:42:51.601]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:42:51.601]              Sequence("ConfigureTraceSWOPin");
[00:42:51.602]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:42:51.602]                  <block atomic="false" info="">
[00:42:51.602]                    __var pin     = 0;
[00:42:51.602]                      // -> [pin <= 0x00000000]
[00:42:51.602]                    __var port    = 0;
[00:42:51.602]                      // -> [port <= 0x00000000]
[00:42:51.602]                    __var portAdr = 0;
[00:42:51.603]                      // -> [portAdr <= 0x00000000]
[00:42:51.603]                    __var pos     = 0;
[00:42:51.603]                      // -> [pos <= 0x00000000]
[00:42:51.603]                    __var SWO_Pin = 0x00010003;          // PB3
[00:42:51.603]                      // -> [SWO_Pin <= 0x00010003]
[00:42:51.603]                  </block>
[00:42:51.603]                  <block atomic="false" info="configure SWO">
[00:42:51.604]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:42:51.604]                      // -> [pin <= 0x00000003]
[00:42:51.604]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:42:51.604]                      // -> [port <= 0x00000001]
[00:42:51.604]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:42:51.604]                      // -> [portAdr <= 0x40020400]
[00:42:51.605]                    pos = pin * 2;
[00:42:51.605]                      // -> [pos <= 0x00000006]
[00:42:51.605]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:42:51.605]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.606]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.606]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:42:51.606]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.607]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.607]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:42:51.607]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.608]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.608]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:42:51.608]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.609]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.609]                  </block>
[00:42:51.609]                  <control if="pin <  8" while="" timeout="0" info="">
[00:42:51.609]                    // if-block "pin <  8"
[00:42:51.609]                      // =>  TRUE
[00:42:51.609]                    <block atomic="false" info="">
[00:42:51.610]                      pos = ((pin    ) & 7) * 4;
[00:42:51.610]                        // -> [pos <= 0x0000000C]
[00:42:51.610]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:42:51.610]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.611]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.611]                    </block>
[00:42:51.611]                    // end if-block "pin <  8"
[00:42:51.611]                  </control>
[00:42:51.611]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:42:51.611]                    // if-block "pin >= 8"
[00:42:51.611]                      // =>  FALSE
[00:42:51.612]                    // skip if-block "pin >= 8"
[00:42:51.612]                  </control>
[00:42:51.612]                </sequence>
[00:42:51.612]            </block>
[00:42:51.612]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:42:51.612]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:42:51.613]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:42:51.613]            </block>
[00:42:51.613]          </sequence>
[00:42:51.613]      </block>
[00:42:51.613]      // end if-block "traceSWO"
[00:42:51.613]    </control>
[00:42:51.613]    <control if="traceTPIU" while="" timeout="0" info="">
[00:42:51.613]      // if-block "traceTPIU"
[00:42:51.614]        // =>  FALSE
[00:42:51.614]      // skip if-block "traceTPIU"
[00:42:51.614]    </control>
[00:42:51.614]  </sequence>
[00:42:51.614]  
[00:45:29.430]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:45:29.430]  
[00:45:29.431]  <debugvars>
[00:45:29.431]    // Pre-defined
[00:45:29.431]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:45:29.431]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:45:29.432]    __dp=0x00000000
[00:45:29.432]    __ap=0x00000000
[00:45:29.432]    __traceout=0x00000001      (SWO Trace)
[00:45:29.432]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:45:29.433]    __FlashAddr=0x00000000
[00:45:29.433]    __FlashLen=0x00000000
[00:45:29.433]    __FlashArg=0x00000000
[00:45:29.433]    __FlashOp=0x00000000
[00:45:29.433]    __Result=0x00000000
[00:45:29.434]    
[00:45:29.434]    // User-defined
[00:45:29.434]    DbgMCU_CR=0x00000007
[00:45:29.434]    DbgMCU_APB1_Fz=0x00000000
[00:45:29.434]    DbgMCU_APB2_Fz=0x00000000
[00:45:29.434]    TraceClk_Pin=0x00040002
[00:45:29.435]    TraceD0_Pin=0x00040003
[00:45:29.435]    TraceD1_Pin=0x00040004
[00:45:29.435]    TraceD2_Pin=0x00040005
[00:45:29.435]    TraceD3_Pin=0x00040006
[00:45:29.435]  </debugvars>
[00:45:29.436]  
[00:45:29.436]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:45:29.436]    <block atomic="false" info="">
[00:45:29.436]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:45:29.436]        // -> [traceSWO <= 0x00000001]
[00:45:29.437]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:45:29.437]        // -> [traceTPIU <= 0x00000000]
[00:45:29.437]    </block>
[00:45:29.437]    <control if="traceSWO" while="" timeout="0" info="">
[00:45:29.437]      // if-block "traceSWO"
[00:45:29.438]        // =>  TRUE
[00:45:29.438]      <block atomic="false" info="">
[00:45:29.438]        Sequence("DisableTraceSWO");
[00:45:29.438]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:45:29.438]            <block atomic="false" info="">
[00:45:29.439]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:45:29.439]                // -> [dbgmcu_val <= 0x00000000]
[00:45:29.439]            </block>
[00:45:29.439]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:45:29.439]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:45:29.440]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:45:29.440]                // -> [dbgmcu_val <= 0x00000007]
[00:45:29.441]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[00:45:29.441]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:45:29.441]            </block>
[00:45:29.442]          </sequence>
[00:45:29.442]      </block>
[00:45:29.442]      // end if-block "traceSWO"
[00:45:29.442]    </control>
[00:45:29.442]    <control if="traceTPIU" while="" timeout="0" info="">
[00:45:29.443]      // if-block "traceTPIU"
[00:45:29.443]        // =>  FALSE
[00:45:29.443]      // skip if-block "traceTPIU"
[00:45:29.443]    </control>
[00:45:29.443]  </sequence>
[00:45:29.444]  
[00:50:02.530]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:50:02.530]  
[00:50:02.533]  <debugvars>
[00:50:02.534]    // Pre-defined
[00:50:02.534]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:02.534]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:50:02.534]    __dp=0x00000000
[00:50:02.535]    __ap=0x00000000
[00:50:02.535]    __traceout=0x00000001      (SWO Trace)
[00:50:02.535]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:02.535]    __FlashAddr=0x00000000
[00:50:02.535]    __FlashLen=0x00000000
[00:50:02.536]    __FlashArg=0x00000000
[00:50:02.536]    __FlashOp=0x00000000
[00:50:02.536]    __Result=0x00000000
[00:50:02.536]    
[00:50:02.536]    // User-defined
[00:50:02.536]    DbgMCU_CR=0x00000007
[00:50:02.537]    DbgMCU_APB1_Fz=0x00000000
[00:50:02.537]    DbgMCU_APB2_Fz=0x00000000
[00:50:02.537]    TraceClk_Pin=0x00040002
[00:50:02.537]    TraceD0_Pin=0x00040003
[00:50:02.538]    TraceD1_Pin=0x00040004
[00:50:02.538]    TraceD2_Pin=0x00040005
[00:50:02.538]    TraceD3_Pin=0x00040006
[00:50:02.538]  </debugvars>
[00:50:02.538]  
[00:50:02.539]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:50:02.539]    <block atomic="false" info="">
[00:50:02.539]      Sequence("CheckID");
[00:50:02.539]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:50:02.539]          <block atomic="false" info="">
[00:50:02.540]            __var pidr1 = 0;
[00:50:02.540]              // -> [pidr1 <= 0x00000000]
[00:50:02.540]            __var pidr2 = 0;
[00:50:02.540]              // -> [pidr2 <= 0x00000000]
[00:50:02.540]            __var jep106id = 0;
[00:50:02.541]              // -> [jep106id <= 0x00000000]
[00:50:02.541]            __var ROMTableBase = 0;
[00:50:02.541]              // -> [ROMTableBase <= 0x00000000]
[00:50:02.541]            __ap = 0;      // AHB-AP
[00:50:02.541]              // -> [__ap <= 0x00000000]
[00:50:02.542]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:50:02.542]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.542]              // -> [ROMTableBase <= 0xE00FD000]
[00:50:02.542]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:50:02.543]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.543]              // -> [pidr1 <= 0x00000004]
[00:50:02.543]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:50:02.544]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.544]              // -> [pidr2 <= 0x0000001A]
[00:50:02.544]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:50:02.545]              // -> [jep106id <= 0x00000020]
[00:50:02.545]          </block>
[00:50:02.545]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:50:02.545]            // if-block "jep106id != 0x20"
[00:50:02.545]              // =>  FALSE
[00:50:02.546]            // skip if-block "jep106id != 0x20"
[00:50:02.546]          </control>
[00:50:02.546]        </sequence>
[00:50:02.546]    </block>
[00:50:02.546]  </sequence>
[00:50:02.547]  
[00:50:02.562]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:50:02.562]  
[00:50:02.563]  <debugvars>
[00:50:02.563]    // Pre-defined
[00:50:02.563]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:02.563]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[00:50:02.563]    __dp=0x00000000
[00:50:02.563]    __ap=0x00000000
[00:50:02.564]    __traceout=0x00000001      (SWO Trace)
[00:50:02.564]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:02.564]    __FlashAddr=0x00000000
[00:50:02.564]    __FlashLen=0x00000000
[00:50:02.564]    __FlashArg=0x00000000
[00:50:02.564]    __FlashOp=0x00000000
[00:50:02.565]    __Result=0x00000000
[00:50:02.565]    
[00:50:02.565]    // User-defined
[00:50:02.565]    DbgMCU_CR=0x00000007
[00:50:02.565]    DbgMCU_APB1_Fz=0x00000000
[00:50:02.565]    DbgMCU_APB2_Fz=0x00000000
[00:50:02.565]    TraceClk_Pin=0x00040002
[00:50:02.566]    TraceD0_Pin=0x00040003
[00:50:02.566]    TraceD1_Pin=0x00040004
[00:50:02.566]    TraceD2_Pin=0x00040005
[00:50:02.566]    TraceD3_Pin=0x00040006
[00:50:02.566]  </debugvars>
[00:50:02.566]  
[00:50:02.567]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:50:02.567]    <block atomic="false" info="">
[00:50:02.567]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:50:02.568]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.568]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:50:02.568]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.568]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:50:02.569]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.569]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:50:02.570]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:02.570]    </block>
[00:50:02.570]  </sequence>
[00:50:02.570]  
[00:50:33.613]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[00:50:33.613]  
[00:50:33.613]  <debugvars>
[00:50:33.613]    // Pre-defined
[00:50:33.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:33.614]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:50:33.614]    __dp=0x00000000
[00:50:33.614]    __ap=0x00000000
[00:50:33.614]    __traceout=0x00000001      (SWO Trace)
[00:50:33.614]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:33.615]    __FlashAddr=0x00000000
[00:50:33.615]    __FlashLen=0x00000000
[00:50:33.615]    __FlashArg=0x00000000
[00:50:33.615]    __FlashOp=0x00000000
[00:50:33.615]    __Result=0x00000000
[00:50:33.615]    
[00:50:33.615]    // User-defined
[00:50:33.616]    DbgMCU_CR=0x00000007
[00:50:33.616]    DbgMCU_APB1_Fz=0x00000000
[00:50:33.616]    DbgMCU_APB2_Fz=0x00000000
[00:50:33.616]    TraceClk_Pin=0x00040002
[00:50:33.616]    TraceD0_Pin=0x00040003
[00:50:33.616]    TraceD1_Pin=0x00040004
[00:50:33.617]    TraceD2_Pin=0x00040005
[00:50:33.617]    TraceD3_Pin=0x00040006
[00:50:33.617]  </debugvars>
[00:50:33.617]  
[00:50:33.617]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[00:50:33.617]    <block atomic="false" info="">
[00:50:33.618]      Sequence("CheckID");
[00:50:33.618]        <sequence name="CheckID" Pname="" disable="false" info="">
[00:50:33.618]          <block atomic="false" info="">
[00:50:33.618]            __var pidr1 = 0;
[00:50:33.618]              // -> [pidr1 <= 0x00000000]
[00:50:33.618]            __var pidr2 = 0;
[00:50:33.619]              // -> [pidr2 <= 0x00000000]
[00:50:33.619]            __var jep106id = 0;
[00:50:33.619]              // -> [jep106id <= 0x00000000]
[00:50:33.619]            __var ROMTableBase = 0;
[00:50:33.619]              // -> [ROMTableBase <= 0x00000000]
[00:50:33.619]            __ap = 0;      // AHB-AP
[00:50:33.619]              // -> [__ap <= 0x00000000]
[00:50:33.620]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[00:50:33.620]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.620]              // -> [ROMTableBase <= 0xE00FD000]
[00:50:33.620]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[00:50:33.621]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.621]              // -> [pidr1 <= 0x00000004]
[00:50:33.621]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[00:50:33.622]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.622]              // -> [pidr2 <= 0x0000001A]
[00:50:33.622]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[00:50:33.622]              // -> [jep106id <= 0x00000020]
[00:50:33.622]          </block>
[00:50:33.622]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[00:50:33.622]            // if-block "jep106id != 0x20"
[00:50:33.623]              // =>  FALSE
[00:50:33.623]            // skip if-block "jep106id != 0x20"
[00:50:33.623]          </control>
[00:50:33.623]        </sequence>
[00:50:33.623]    </block>
[00:50:33.623]  </sequence>
[00:50:33.623]  
[00:50:33.638]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[00:50:33.638]  
[00:50:33.639]  <debugvars>
[00:50:33.639]    // Pre-defined
[00:50:33.639]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:33.639]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:50:33.639]    __dp=0x00000000
[00:50:33.640]    __ap=0x00000000
[00:50:33.640]    __traceout=0x00000001      (SWO Trace)
[00:50:33.640]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:33.640]    __FlashAddr=0x00000000
[00:50:33.640]    __FlashLen=0x00000000
[00:50:33.640]    __FlashArg=0x00000000
[00:50:33.641]    __FlashOp=0x00000000
[00:50:33.641]    __Result=0x00000000
[00:50:33.641]    
[00:50:33.641]    // User-defined
[00:50:33.641]    DbgMCU_CR=0x00000007
[00:50:33.641]    DbgMCU_APB1_Fz=0x00000000
[00:50:33.641]    DbgMCU_APB2_Fz=0x00000000
[00:50:33.642]    TraceClk_Pin=0x00040002
[00:50:33.642]    TraceD0_Pin=0x00040003
[00:50:33.642]    TraceD1_Pin=0x00040004
[00:50:33.642]    TraceD2_Pin=0x00040005
[00:50:33.642]    TraceD3_Pin=0x00040006
[00:50:33.642]  </debugvars>
[00:50:33.643]  
[00:50:33.643]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[00:50:33.643]    <block atomic="false" info="">
[00:50:33.643]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[00:50:33.644]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.644]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[00:50:33.644]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.645]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[00:50:33.645]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.645]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[00:50:33.646]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.646]    </block>
[00:50:33.646]  </sequence>
[00:50:33.646]  
[00:50:33.663]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[00:50:33.663]  
[00:50:33.663]  <debugvars>
[00:50:33.663]    // Pre-defined
[00:50:33.664]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:33.664]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:50:33.664]    __dp=0x00000000
[00:50:33.664]    __ap=0x00000000
[00:50:33.664]    __traceout=0x00000001      (SWO Trace)
[00:50:33.664]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:33.665]    __FlashAddr=0x00000000
[00:50:33.665]    __FlashLen=0x00000000
[00:50:33.665]    __FlashArg=0x00000000
[00:50:33.665]    __FlashOp=0x00000000
[00:50:33.665]    __Result=0x00000000
[00:50:33.665]    
[00:50:33.665]    // User-defined
[00:50:33.666]    DbgMCU_CR=0x00000007
[00:50:33.666]    DbgMCU_APB1_Fz=0x00000000
[00:50:33.666]    DbgMCU_APB2_Fz=0x00000000
[00:50:33.666]    TraceClk_Pin=0x00040002
[00:50:33.666]    TraceD0_Pin=0x00040003
[00:50:33.666]    TraceD1_Pin=0x00040004
[00:50:33.666]    TraceD2_Pin=0x00040005
[00:50:33.667]    TraceD3_Pin=0x00040006
[00:50:33.667]  </debugvars>
[00:50:33.667]  
[00:50:33.667]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:50:33.667]    <block atomic="false" info="">
[00:50:33.667]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:50:33.667]        // -> [traceSWO <= 0x00000001]
[00:50:33.668]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:50:33.668]        // -> [traceTPIU <= 0x00000000]
[00:50:33.668]    </block>
[00:50:33.668]    <control if="traceSWO" while="" timeout="0" info="">
[00:50:33.668]      // if-block "traceSWO"
[00:50:33.668]        // =>  TRUE
[00:50:33.669]      <block atomic="false" info="">
[00:50:33.669]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:50:33.669]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:50:33.669]            <block atomic="false" info="">
[00:50:33.669]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:50:33.669]                // -> [dbgmcu_val <= 0x00000000]
[00:50:33.669]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:50:33.670]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:50:33.670]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:50:33.670]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.670]                // -> [dbgmcu_val <= 0x00000007]
[00:50:33.670]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:50:33.670]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:50:33.671]              Sequence("ConfigureTraceSWOPin");
[00:50:33.671]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:50:33.671]                  <block atomic="false" info="">
[00:50:33.671]                    __var pin     = 0;
[00:50:33.671]                      // -> [pin <= 0x00000000]
[00:50:33.671]                    __var port    = 0;
[00:50:33.671]                      // -> [port <= 0x00000000]
[00:50:33.671]                    __var portAdr = 0;
[00:50:33.671]                      // -> [portAdr <= 0x00000000]
[00:50:33.672]                    __var pos     = 0;
[00:50:33.672]                      // -> [pos <= 0x00000000]
[00:50:33.672]                    __var SWO_Pin = 0x00010003;          // PB3
[00:50:33.672]                      // -> [SWO_Pin <= 0x00010003]
[00:50:33.672]                  </block>
[00:50:33.672]                  <block atomic="false" info="configure SWO">
[00:50:33.672]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:50:33.672]                      // -> [pin <= 0x00000003]
[00:50:33.673]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:50:33.673]                      // -> [port <= 0x00000001]
[00:50:33.673]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:50:33.673]                      // -> [portAdr <= 0x40020400]
[00:50:33.673]                    pos = pin * 2;
[00:50:33.673]                      // -> [pos <= 0x00000006]
[00:50:33.673]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:50:33.674]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.674]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.674]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:50:33.675]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.675]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.675]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:50:33.676]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.676]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.676]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:50:33.677]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.677]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.677]                  </block>
[00:50:33.677]                  <control if="pin <  8" while="" timeout="0" info="">
[00:50:33.678]                    // if-block "pin <  8"
[00:50:33.678]                      // =>  TRUE
[00:50:33.678]                    <block atomic="false" info="">
[00:50:33.678]                      pos = ((pin    ) & 7) * 4;
[00:50:33.678]                        // -> [pos <= 0x0000000C]
[00:50:33.678]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:50:33.679]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.679]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.679]                    </block>
[00:50:33.679]                    // end if-block "pin <  8"
[00:50:33.679]                  </control>
[00:50:33.680]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:50:33.680]                    // if-block "pin >= 8"
[00:50:33.680]                      // =>  FALSE
[00:50:33.680]                    // skip if-block "pin >= 8"
[00:50:33.680]                  </control>
[00:50:33.680]                </sequence>
[00:50:33.680]            </block>
[00:50:33.680]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:50:33.680]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:50:33.681]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.681]            </block>
[00:50:33.681]          </sequence>
[00:50:33.681]      </block>
[00:50:33.681]      // end if-block "traceSWO"
[00:50:33.681]    </control>
[00:50:33.682]    <control if="traceTPIU" while="" timeout="0" info="">
[00:50:33.682]      // if-block "traceTPIU"
[00:50:33.682]        // =>  FALSE
[00:50:33.682]      // skip if-block "traceTPIU"
[00:50:33.682]    </control>
[00:50:33.682]  </sequence>
[00:50:33.682]  
[00:50:33.686]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:50:33.686]  
[00:50:33.686]  <debugvars>
[00:50:33.686]    // Pre-defined
[00:50:33.686]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:33.687]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:50:33.687]    __dp=0x00000000
[00:50:33.687]    __ap=0x00000000
[00:50:33.687]    __traceout=0x00000001      (SWO Trace)
[00:50:33.688]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:33.688]    __FlashAddr=0x00000000
[00:50:33.688]    __FlashLen=0x00000000
[00:50:33.688]    __FlashArg=0x00000000
[00:50:33.688]    __FlashOp=0x00000000
[00:50:33.688]    __Result=0x00000000
[00:50:33.689]    
[00:50:33.689]    // User-defined
[00:50:33.689]    DbgMCU_CR=0x00000007
[00:50:33.689]    DbgMCU_APB1_Fz=0x00000000
[00:50:33.689]    DbgMCU_APB2_Fz=0x00000000
[00:50:33.689]    TraceClk_Pin=0x00040002
[00:50:33.690]    TraceD0_Pin=0x00040003
[00:50:33.690]    TraceD1_Pin=0x00040004
[00:50:33.690]    TraceD2_Pin=0x00040005
[00:50:33.690]    TraceD3_Pin=0x00040006
[00:50:33.690]  </debugvars>
[00:50:33.690]  
[00:50:33.691]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:50:33.691]    <block atomic="false" info="">
[00:50:33.691]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:50:33.691]        // -> [traceSWO <= 0x00000001]
[00:50:33.691]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:50:33.691]        // -> [traceTPIU <= 0x00000000]
[00:50:33.691]    </block>
[00:50:33.692]    <control if="traceSWO" while="" timeout="0" info="">
[00:50:33.692]      // if-block "traceSWO"
[00:50:33.692]        // =>  TRUE
[00:50:33.692]      <block atomic="false" info="">
[00:50:33.692]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:50:33.692]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:50:33.692]            <block atomic="false" info="">
[00:50:33.693]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:50:33.693]                // -> [dbgmcu_val <= 0x00000000]
[00:50:33.693]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:50:33.693]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:50:33.693]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:50:33.694]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.694]                // -> [dbgmcu_val <= 0x00000007]
[00:50:33.694]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:50:33.694]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:50:33.694]              Sequence("ConfigureTraceSWOPin");
[00:50:33.695]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:50:33.695]                  <block atomic="false" info="">
[00:50:33.695]                    __var pin     = 0;
[00:50:33.695]                      // -> [pin <= 0x00000000]
[00:50:33.695]                    __var port    = 0;
[00:50:33.695]                      // -> [port <= 0x00000000]
[00:50:33.695]                    __var portAdr = 0;
[00:50:33.695]                      // -> [portAdr <= 0x00000000]
[00:50:33.695]                    __var pos     = 0;
[00:50:33.696]                      // -> [pos <= 0x00000000]
[00:50:33.696]                    __var SWO_Pin = 0x00010003;          // PB3
[00:50:33.696]                      // -> [SWO_Pin <= 0x00010003]
[00:50:33.696]                  </block>
[00:50:33.696]                  <block atomic="false" info="configure SWO">
[00:50:33.696]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:50:33.696]                      // -> [pin <= 0x00000003]
[00:50:33.696]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:50:33.696]                      // -> [port <= 0x00000001]
[00:50:33.697]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:50:33.697]                      // -> [portAdr <= 0x40020400]
[00:50:33.697]                    pos = pin * 2;
[00:50:33.697]                      // -> [pos <= 0x00000006]
[00:50:33.697]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:50:33.697]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.698]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.698]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:50:33.698]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.699]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.699]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:50:33.699]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.700]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.700]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:50:33.700]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.701]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.701]                  </block>
[00:50:33.701]                  <control if="pin <  8" while="" timeout="0" info="">
[00:50:33.701]                    // if-block "pin <  8"
[00:50:33.701]                      // =>  TRUE
[00:50:33.701]                    <block atomic="false" info="">
[00:50:33.701]                      pos = ((pin    ) & 7) * 4;
[00:50:33.701]                        // -> [pos <= 0x0000000C]
[00:50:33.702]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:50:33.702]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.702]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.703]                    </block>
[00:50:33.703]                    // end if-block "pin <  8"
[00:50:33.703]                  </control>
[00:50:33.703]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:50:33.703]                    // if-block "pin >= 8"
[00:50:33.703]                      // =>  FALSE
[00:50:33.703]                    // skip if-block "pin >= 8"
[00:50:33.703]                  </control>
[00:50:33.704]                </sequence>
[00:50:33.704]            </block>
[00:50:33.704]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:50:33.704]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:50:33.704]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.704]            </block>
[00:50:33.705]          </sequence>
[00:50:33.705]      </block>
[00:50:33.705]      // end if-block "traceSWO"
[00:50:33.705]    </control>
[00:50:33.705]    <control if="traceTPIU" while="" timeout="0" info="">
[00:50:33.705]      // if-block "traceTPIU"
[00:50:33.705]        // =>  FALSE
[00:50:33.705]      // skip if-block "traceTPIU"
[00:50:33.705]    </control>
[00:50:33.706]  </sequence>
[00:50:33.706]  
[00:50:33.917]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:50:33.917]  
[00:50:33.917]  <debugvars>
[00:50:33.917]    // Pre-defined
[00:50:33.918]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:50:33.918]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:50:33.918]    __dp=0x00000000
[00:50:33.918]    __ap=0x00000000
[00:50:33.918]    __traceout=0x00000001      (SWO Trace)
[00:50:33.919]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:50:33.919]    __FlashAddr=0x00000000
[00:50:33.919]    __FlashLen=0x00000000
[00:50:33.919]    __FlashArg=0x00000000
[00:50:33.919]    __FlashOp=0x00000000
[00:50:33.919]    __Result=0x00000000
[00:50:33.920]    
[00:50:33.920]    // User-defined
[00:50:33.920]    DbgMCU_CR=0x00000007
[00:50:33.920]    DbgMCU_APB1_Fz=0x00000000
[00:50:33.920]    DbgMCU_APB2_Fz=0x00000000
[00:50:33.920]    TraceClk_Pin=0x00040002
[00:50:33.920]    TraceD0_Pin=0x00040003
[00:50:33.920]    TraceD1_Pin=0x00040004
[00:50:33.921]    TraceD2_Pin=0x00040005
[00:50:33.921]    TraceD3_Pin=0x00040006
[00:50:33.921]  </debugvars>
[00:50:33.921]  
[00:50:33.921]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:50:33.921]    <block atomic="false" info="">
[00:50:33.922]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:50:33.922]        // -> [traceSWO <= 0x00000001]
[00:50:33.922]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:50:33.922]        // -> [traceTPIU <= 0x00000000]
[00:50:33.922]    </block>
[00:50:33.922]    <control if="traceSWO" while="" timeout="0" info="">
[00:50:33.922]      // if-block "traceSWO"
[00:50:33.923]        // =>  TRUE
[00:50:33.923]      <block atomic="false" info="">
[00:50:33.923]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:50:33.923]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:50:33.923]            <block atomic="false" info="">
[00:50:33.923]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:50:33.923]                // -> [dbgmcu_val <= 0x00000000]
[00:50:33.923]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:50:33.923]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:50:33.924]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:50:33.924]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.924]                // -> [dbgmcu_val <= 0x00000007]
[00:50:33.924]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:50:33.924]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:50:33.925]              Sequence("ConfigureTraceSWOPin");
[00:50:33.925]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:50:33.925]                  <block atomic="false" info="">
[00:50:33.925]                    __var pin     = 0;
[00:50:33.925]                      // -> [pin <= 0x00000000]
[00:50:33.925]                    __var port    = 0;
[00:50:33.925]                      // -> [port <= 0x00000000]
[00:50:33.925]                    __var portAdr = 0;
[00:50:33.926]                      // -> [portAdr <= 0x00000000]
[00:50:33.926]                    __var pos     = 0;
[00:50:33.926]                      // -> [pos <= 0x00000000]
[00:50:33.926]                    __var SWO_Pin = 0x00010003;          // PB3
[00:50:33.926]                      // -> [SWO_Pin <= 0x00010003]
[00:50:33.926]                  </block>
[00:50:33.926]                  <block atomic="false" info="configure SWO">
[00:50:33.926]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:50:33.927]                      // -> [pin <= 0x00000003]
[00:50:33.927]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:50:33.927]                      // -> [port <= 0x00000001]
[00:50:33.927]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:50:33.927]                      // -> [portAdr <= 0x40020400]
[00:50:33.927]                    pos = pin * 2;
[00:50:33.927]                      // -> [pos <= 0x00000006]
[00:50:33.927]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:50:33.928]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.928]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.928]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:50:33.929]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.929]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.929]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:50:33.930]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.930]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.930]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:50:33.931]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.931]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.931]                  </block>
[00:50:33.932]                  <control if="pin <  8" while="" timeout="0" info="">
[00:50:33.932]                    // if-block "pin <  8"
[00:50:33.932]                      // =>  TRUE
[00:50:33.932]                    <block atomic="false" info="">
[00:50:33.932]                      pos = ((pin    ) & 7) * 4;
[00:50:33.932]                        // -> [pos <= 0x0000000C]
[00:50:33.932]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:50:33.933]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.933]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.933]                    </block>
[00:50:33.933]                    // end if-block "pin <  8"
[00:50:33.933]                  </control>
[00:50:33.933]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:50:33.934]                    // if-block "pin >= 8"
[00:50:33.934]                      // =>  FALSE
[00:50:33.934]                    // skip if-block "pin >= 8"
[00:50:33.934]                  </control>
[00:50:33.934]                </sequence>
[00:50:33.934]            </block>
[00:50:33.934]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:50:33.934]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:50:33.935]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:50:33.935]            </block>
[00:50:33.935]          </sequence>
[00:50:33.935]      </block>
[00:50:33.935]      // end if-block "traceSWO"
[00:50:33.935]    </control>
[00:50:33.935]    <control if="traceTPIU" while="" timeout="0" info="">
[00:50:33.936]      // if-block "traceTPIU"
[00:50:33.936]        // =>  FALSE
[00:50:33.936]      // skip if-block "traceTPIU"
[00:50:33.936]    </control>
[00:50:33.936]  </sequence>
[00:50:33.936]  
[00:51:24.502]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[00:51:24.502]  
[00:51:24.502]  <debugvars>
[00:51:24.503]    // Pre-defined
[00:51:24.503]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:51:24.503]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:51:24.503]    __dp=0x00000000
[00:51:24.503]    __ap=0x00000000
[00:51:24.503]    __traceout=0x00000001      (SWO Trace)
[00:51:24.504]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:51:24.504]    __FlashAddr=0x00000000
[00:51:24.504]    __FlashLen=0x00000000
[00:51:24.504]    __FlashArg=0x00000000
[00:51:24.504]    __FlashOp=0x00000000
[00:51:24.504]    __Result=0x00000000
[00:51:24.505]    
[00:51:24.505]    // User-defined
[00:51:24.505]    DbgMCU_CR=0x00000007
[00:51:24.505]    DbgMCU_APB1_Fz=0x00000000
[00:51:24.505]    DbgMCU_APB2_Fz=0x00000000
[00:51:24.505]    TraceClk_Pin=0x00040002
[00:51:24.505]    TraceD0_Pin=0x00040003
[00:51:24.506]    TraceD1_Pin=0x00040004
[00:51:24.506]    TraceD2_Pin=0x00040005
[00:51:24.506]    TraceD3_Pin=0x00040006
[00:51:24.506]  </debugvars>
[00:51:24.506]  
[00:51:24.506]  <sequence name="TraceStart" Pname="" disable="false" info="">
[00:51:24.507]    <block atomic="false" info="">
[00:51:24.507]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[00:51:24.507]        // -> [traceSWO <= 0x00000001]
[00:51:24.507]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[00:51:24.507]        // -> [traceTPIU <= 0x00000000]
[00:51:24.507]    </block>
[00:51:24.508]    <control if="traceSWO" while="" timeout="0" info="">
[00:51:24.508]      // if-block "traceSWO"
[00:51:24.508]        // =>  TRUE
[00:51:24.508]      <block atomic="false" info="">
[00:51:24.508]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[00:51:24.508]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[00:51:24.509]            <block atomic="false" info="">
[00:51:24.509]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:51:24.509]                // -> [dbgmcu_val <= 0x00000000]
[00:51:24.509]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[00:51:24.509]                // -> [dbgmcu_trace_val <= 0x00000000]
[00:51:24.509]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[00:51:24.510]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.510]                // -> [dbgmcu_val <= 0x00000007]
[00:51:24.510]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[00:51:24.510]                // -> [dbgmcu_trace_val <= 0x00000020]
[00:51:24.511]              Sequence("ConfigureTraceSWOPin");
[00:51:24.511]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[00:51:24.511]                  <block atomic="false" info="">
[00:51:24.511]                    __var pin     = 0;
[00:51:24.511]                      // -> [pin <= 0x00000000]
[00:51:24.511]                    __var port    = 0;
[00:51:24.511]                      // -> [port <= 0x00000000]
[00:51:24.511]                    __var portAdr = 0;
[00:51:24.512]                      // -> [portAdr <= 0x00000000]
[00:51:24.512]                    __var pos     = 0;
[00:51:24.512]                      // -> [pos <= 0x00000000]
[00:51:24.512]                    __var SWO_Pin = 0x00010003;          // PB3
[00:51:24.512]                      // -> [SWO_Pin <= 0x00010003]
[00:51:24.512]                  </block>
[00:51:24.512]                  <block atomic="false" info="configure SWO">
[00:51:24.513]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[00:51:24.513]                      // -> [pin <= 0x00000003]
[00:51:24.513]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[00:51:24.513]                      // -> [port <= 0x00000001]
[00:51:24.513]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[00:51:24.513]                      // -> [portAdr <= 0x40020400]
[00:51:24.514]                    pos = pin * 2;
[00:51:24.514]                      // -> [pos <= 0x00000006]
[00:51:24.514]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[00:51:24.514]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.515]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.515]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[00:51:24.515]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.516]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.516]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[00:51:24.516]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.517]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.517]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[00:51:24.517]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.518]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.518]                  </block>
[00:51:24.518]                  <control if="pin <  8" while="" timeout="0" info="">
[00:51:24.518]                    // if-block "pin <  8"
[00:51:24.518]                      // =>  TRUE
[00:51:24.518]                    <block atomic="false" info="">
[00:51:24.518]                      pos = ((pin    ) & 7) * 4;
[00:51:24.519]                        // -> [pos <= 0x0000000C]
[00:51:24.519]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[00:51:24.519]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.520]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.520]                    </block>
[00:51:24.520]                    // end if-block "pin <  8"
[00:51:24.520]                  </control>
[00:51:24.520]                  <control if="pin >= 8" while="" timeout="0" info="">
[00:51:24.520]                    // if-block "pin >= 8"
[00:51:24.520]                      // =>  FALSE
[00:51:24.521]                    // skip if-block "pin >= 8"
[00:51:24.521]                  </control>
[00:51:24.521]                </sequence>
[00:51:24.521]            </block>
[00:51:24.521]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[00:51:24.521]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[00:51:24.521]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:24.522]            </block>
[00:51:24.522]          </sequence>
[00:51:24.522]      </block>
[00:51:24.523]      // end if-block "traceSWO"
[00:51:24.523]    </control>
[00:51:24.523]    <control if="traceTPIU" while="" timeout="0" info="">
[00:51:24.523]      // if-block "traceTPIU"
[00:51:24.523]        // =>  FALSE
[00:51:24.523]      // skip if-block "traceTPIU"
[00:51:24.523]    </control>
[00:51:24.523]  </sequence>
[00:51:24.523]  
[00:51:27.372]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[00:51:27.372]  
[00:51:27.376]  <debugvars>
[00:51:27.376]    // Pre-defined
[00:51:27.377]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[00:51:27.377]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[00:51:27.378]    __dp=0x00000000
[00:51:27.378]    __ap=0x00000000
[00:51:27.379]    __traceout=0x00000001      (SWO Trace)
[00:51:27.380]    __errorcontrol=0x00000000  (Skip Errors="False")
[00:51:27.380]    __FlashAddr=0x00000000
[00:51:27.381]    __FlashLen=0x00000000
[00:51:27.381]    __FlashArg=0x00000000
[00:51:27.382]    __FlashOp=0x00000000
[00:51:27.382]    __Result=0x00000000
[00:51:27.383]    
[00:51:27.383]    // User-defined
[00:51:27.383]    DbgMCU_CR=0x00000007
[00:51:27.384]    DbgMCU_APB1_Fz=0x00000000
[00:51:27.384]    DbgMCU_APB2_Fz=0x00000000
[00:51:27.385]    TraceClk_Pin=0x00040002
[00:51:27.385]    TraceD0_Pin=0x00040003
[00:51:27.385]    TraceD1_Pin=0x00040004
[00:51:27.386]    TraceD2_Pin=0x00040005
[00:51:27.386]    TraceD3_Pin=0x00040006
[00:51:27.386]  </debugvars>
[00:51:27.386]  
[00:51:27.387]  <sequence name="TraceStop" Pname="" disable="false" info="">
[00:51:27.387]    <block atomic="false" info="">
[00:51:27.387]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[00:51:27.388]        // -> [traceSWO <= 0x00000001]
[00:51:27.388]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[00:51:27.388]        // -> [traceTPIU <= 0x00000000]
[00:51:27.388]    </block>
[00:51:27.388]    <control if="traceSWO" while="" timeout="0" info="">
[00:51:27.389]      // if-block "traceSWO"
[00:51:27.389]        // =>  TRUE
[00:51:27.389]      <block atomic="false" info="">
[00:51:27.389]        Sequence("DisableTraceSWO");
[00:51:27.389]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[00:51:27.390]            <block atomic="false" info="">
[00:51:27.390]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[00:51:27.390]                // -> [dbgmcu_val <= 0x00000000]
[00:51:27.390]            </block>
[00:51:27.390]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[00:51:27.390]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[00:51:27.391]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[00:51:27.391]                // -> [dbgmcu_val <= 0x00000007]
[00:51:27.391]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[00:51:27.392]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[00:51:27.392]            </block>
[00:51:27.392]          </sequence>
[00:51:27.392]      </block>
[00:51:27.392]      // end if-block "traceSWO"
[00:51:27.393]    </control>
[00:51:27.393]    <control if="traceTPIU" while="" timeout="0" info="">
[00:51:27.393]      // if-block "traceTPIU"
[00:51:27.393]        // =>  FALSE
[00:51:27.393]      // skip if-block "traceTPIU"
[00:51:27.394]    </control>
[00:51:27.394]  </sequence>
[00:51:27.394]  
[01:02:57.488]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:02:57.488]  
[01:02:57.535]  <debugvars>
[01:02:57.535]    // Pre-defined
[01:02:57.536]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:02:57.536]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:02:57.536]    __dp=0x00000000
[01:02:57.536]    __ap=0x00000000
[01:02:57.536]    __traceout=0x00000001      (SWO Trace)
[01:02:57.537]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:02:57.537]    __FlashAddr=0x00000000
[01:02:57.537]    __FlashLen=0x00000000
[01:02:57.537]    __FlashArg=0x00000000
[01:02:57.538]    __FlashOp=0x00000000
[01:02:57.538]    __Result=0x00000000
[01:02:57.538]    
[01:02:57.538]    // User-defined
[01:02:57.538]    DbgMCU_CR=0x00000007
[01:02:57.538]    DbgMCU_APB1_Fz=0x00000000
[01:02:57.539]    DbgMCU_APB2_Fz=0x00000000
[01:02:57.539]    TraceClk_Pin=0x00040002
[01:02:57.539]    TraceD0_Pin=0x00040003
[01:02:57.539]    TraceD1_Pin=0x00040004
[01:02:57.539]    TraceD2_Pin=0x00040005
[01:02:57.540]    TraceD3_Pin=0x00040006
[01:02:57.540]  </debugvars>
[01:02:57.540]  
[01:02:57.540]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:02:57.540]    <block atomic="false" info="">
[01:02:57.541]      Sequence("CheckID");
[01:02:57.541]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:02:57.541]          <block atomic="false" info="">
[01:02:57.541]            __var pidr1 = 0;
[01:02:57.541]              // -> [pidr1 <= 0x00000000]
[01:02:57.541]            __var pidr2 = 0;
[01:02:57.542]              // -> [pidr2 <= 0x00000000]
[01:02:57.542]            __var jep106id = 0;
[01:02:57.542]              // -> [jep106id <= 0x00000000]
[01:02:57.542]            __var ROMTableBase = 0;
[01:02:57.542]              // -> [ROMTableBase <= 0x00000000]
[01:02:57.542]            __ap = 0;      // AHB-AP
[01:02:57.542]              // -> [__ap <= 0x00000000]
[01:02:57.542]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:02:57.543]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.543]              // -> [ROMTableBase <= 0xE00FD000]
[01:02:57.543]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:02:57.544]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.544]              // -> [pidr1 <= 0x00000004]
[01:02:57.544]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:02:57.544]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.545]              // -> [pidr2 <= 0x0000001A]
[01:02:57.545]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:02:57.545]              // -> [jep106id <= 0x00000020]
[01:02:57.545]          </block>
[01:02:57.545]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:02:57.545]            // if-block "jep106id != 0x20"
[01:02:57.546]              // =>  FALSE
[01:02:57.546]            // skip if-block "jep106id != 0x20"
[01:02:57.546]          </control>
[01:02:57.546]        </sequence>
[01:02:57.546]    </block>
[01:02:57.546]  </sequence>
[01:02:57.546]  
[01:02:57.562]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:02:57.562]  
[01:02:57.562]  <debugvars>
[01:02:57.562]    // Pre-defined
[01:02:57.563]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:02:57.563]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:02:57.563]    __dp=0x00000000
[01:02:57.563]    __ap=0x00000000
[01:02:57.563]    __traceout=0x00000001      (SWO Trace)
[01:02:57.563]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:02:57.564]    __FlashAddr=0x00000000
[01:02:57.564]    __FlashLen=0x00000000
[01:02:57.564]    __FlashArg=0x00000000
[01:02:57.564]    __FlashOp=0x00000000
[01:02:57.564]    __Result=0x00000000
[01:02:57.564]    
[01:02:57.564]    // User-defined
[01:02:57.565]    DbgMCU_CR=0x00000007
[01:02:57.565]    DbgMCU_APB1_Fz=0x00000000
[01:02:57.565]    DbgMCU_APB2_Fz=0x00000000
[01:02:57.565]    TraceClk_Pin=0x00040002
[01:02:57.565]    TraceD0_Pin=0x00040003
[01:02:57.565]    TraceD1_Pin=0x00040004
[01:02:57.566]    TraceD2_Pin=0x00040005
[01:02:57.566]    TraceD3_Pin=0x00040006
[01:02:57.566]  </debugvars>
[01:02:57.566]  
[01:02:57.566]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:02:57.566]    <block atomic="false" info="">
[01:02:57.567]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:02:57.567]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.567]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:02:57.568]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.568]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:02:57.569]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.569]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:02:57.569]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:02:57.570]    </block>
[01:02:57.570]  </sequence>
[01:02:57.570]  
[01:03:28.522]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:03:28.522]  
[01:03:28.522]  <debugvars>
[01:03:28.522]    // Pre-defined
[01:03:28.522]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:03:28.523]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:03:28.523]    __dp=0x00000000
[01:03:28.523]    __ap=0x00000000
[01:03:28.523]    __traceout=0x00000001      (SWO Trace)
[01:03:28.523]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:03:28.524]    __FlashAddr=0x00000000
[01:03:28.524]    __FlashLen=0x00000000
[01:03:28.524]    __FlashArg=0x00000000
[01:03:28.524]    __FlashOp=0x00000000
[01:03:28.524]    __Result=0x00000000
[01:03:28.524]    
[01:03:28.524]    // User-defined
[01:03:28.525]    DbgMCU_CR=0x00000007
[01:03:28.525]    DbgMCU_APB1_Fz=0x00000000
[01:03:28.525]    DbgMCU_APB2_Fz=0x00000000
[01:03:28.525]    TraceClk_Pin=0x00040002
[01:03:28.525]    TraceD0_Pin=0x00040003
[01:03:28.525]    TraceD1_Pin=0x00040004
[01:03:28.526]    TraceD2_Pin=0x00040005
[01:03:28.526]    TraceD3_Pin=0x00040006
[01:03:28.526]  </debugvars>
[01:03:28.526]  
[01:03:28.526]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:03:28.526]    <block atomic="false" info="">
[01:03:28.527]      Sequence("CheckID");
[01:03:28.527]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:03:28.527]          <block atomic="false" info="">
[01:03:28.527]            __var pidr1 = 0;
[01:03:28.527]              // -> [pidr1 <= 0x00000000]
[01:03:28.527]            __var pidr2 = 0;
[01:03:28.528]              // -> [pidr2 <= 0x00000000]
[01:03:28.528]            __var jep106id = 0;
[01:03:28.528]              // -> [jep106id <= 0x00000000]
[01:03:28.528]            __var ROMTableBase = 0;
[01:03:28.528]              // -> [ROMTableBase <= 0x00000000]
[01:03:28.528]            __ap = 0;      // AHB-AP
[01:03:28.529]              // -> [__ap <= 0x00000000]
[01:03:28.529]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:03:28.529]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.529]              // -> [ROMTableBase <= 0xE00FD000]
[01:03:28.529]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:03:28.530]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.530]              // -> [pidr1 <= 0x00000004]
[01:03:28.530]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:03:28.531]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.531]              // -> [pidr2 <= 0x0000001A]
[01:03:28.531]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:03:28.531]              // -> [jep106id <= 0x00000020]
[01:03:28.532]          </block>
[01:03:28.532]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:03:28.532]            // if-block "jep106id != 0x20"
[01:03:28.532]              // =>  FALSE
[01:03:28.532]            // skip if-block "jep106id != 0x20"
[01:03:28.532]          </control>
[01:03:28.532]        </sequence>
[01:03:28.533]    </block>
[01:03:28.533]  </sequence>
[01:03:28.533]  
[01:03:28.548]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:03:28.548]  
[01:03:28.548]  <debugvars>
[01:03:28.548]    // Pre-defined
[01:03:28.548]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:03:28.549]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:03:28.549]    __dp=0x00000000
[01:03:28.549]    __ap=0x00000000
[01:03:28.549]    __traceout=0x00000001      (SWO Trace)
[01:03:28.549]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:03:28.550]    __FlashAddr=0x00000000
[01:03:28.550]    __FlashLen=0x00000000
[01:03:28.550]    __FlashArg=0x00000000
[01:03:28.550]    __FlashOp=0x00000000
[01:03:28.550]    __Result=0x00000000
[01:03:28.550]    
[01:03:28.550]    // User-defined
[01:03:28.550]    DbgMCU_CR=0x00000007
[01:03:28.551]    DbgMCU_APB1_Fz=0x00000000
[01:03:28.551]    DbgMCU_APB2_Fz=0x00000000
[01:03:28.551]    TraceClk_Pin=0x00040002
[01:03:28.551]    TraceD0_Pin=0x00040003
[01:03:28.551]    TraceD1_Pin=0x00040004
[01:03:28.551]    TraceD2_Pin=0x00040005
[01:03:28.552]    TraceD3_Pin=0x00040006
[01:03:28.552]  </debugvars>
[01:03:28.552]  
[01:03:28.552]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:03:28.552]    <block atomic="false" info="">
[01:03:28.552]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:03:28.553]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.553]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:03:28.554]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.554]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:03:28.554]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.554]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:03:28.555]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.555]    </block>
[01:03:28.555]  </sequence>
[01:03:28.555]  
[01:03:28.572]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[01:03:28.572]  
[01:03:28.572]  <debugvars>
[01:03:28.572]    // Pre-defined
[01:03:28.572]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:03:28.573]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:03:28.573]    __dp=0x00000000
[01:03:28.573]    __ap=0x00000000
[01:03:28.573]    __traceout=0x00000001      (SWO Trace)
[01:03:28.573]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:03:28.573]    __FlashAddr=0x00000000
[01:03:28.574]    __FlashLen=0x00000000
[01:03:28.574]    __FlashArg=0x00000000
[01:03:28.574]    __FlashOp=0x00000000
[01:03:28.574]    __Result=0x00000000
[01:03:28.574]    
[01:03:28.574]    // User-defined
[01:03:28.575]    DbgMCU_CR=0x00000007
[01:03:28.575]    DbgMCU_APB1_Fz=0x00000000
[01:03:28.575]    DbgMCU_APB2_Fz=0x00000000
[01:03:28.575]    TraceClk_Pin=0x00040002
[01:03:28.575]    TraceD0_Pin=0x00040003
[01:03:28.576]    TraceD1_Pin=0x00040004
[01:03:28.576]    TraceD2_Pin=0x00040005
[01:03:28.576]    TraceD3_Pin=0x00040006
[01:03:28.576]  </debugvars>
[01:03:28.576]  
[01:03:28.576]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:03:28.577]    <block atomic="false" info="">
[01:03:28.577]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:03:28.577]        // -> [traceSWO <= 0x00000001]
[01:03:28.577]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:03:28.577]        // -> [traceTPIU <= 0x00000000]
[01:03:28.578]    </block>
[01:03:28.578]    <control if="traceSWO" while="" timeout="0" info="">
[01:03:28.578]      // if-block "traceSWO"
[01:03:28.578]        // =>  TRUE
[01:03:28.578]      <block atomic="false" info="">
[01:03:28.578]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:03:28.578]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:03:28.579]            <block atomic="false" info="">
[01:03:28.579]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:03:28.579]                // -> [dbgmcu_val <= 0x00000000]
[01:03:28.579]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:03:28.579]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:03:28.579]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:03:28.580]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.580]                // -> [dbgmcu_val <= 0x00000007]
[01:03:28.580]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:03:28.580]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:03:28.580]              Sequence("ConfigureTraceSWOPin");
[01:03:28.580]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:03:28.581]                  <block atomic="false" info="">
[01:03:28.581]                    __var pin     = 0;
[01:03:28.581]                      // -> [pin <= 0x00000000]
[01:03:28.581]                    __var port    = 0;
[01:03:28.581]                      // -> [port <= 0x00000000]
[01:03:28.581]                    __var portAdr = 0;
[01:03:28.581]                      // -> [portAdr <= 0x00000000]
[01:03:28.582]                    __var pos     = 0;
[01:03:28.582]                      // -> [pos <= 0x00000000]
[01:03:28.582]                    __var SWO_Pin = 0x00010003;          // PB3
[01:03:28.582]                      // -> [SWO_Pin <= 0x00010003]
[01:03:28.582]                  </block>
[01:03:28.582]                  <block atomic="false" info="configure SWO">
[01:03:28.582]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:03:28.582]                      // -> [pin <= 0x00000003]
[01:03:28.583]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:03:28.583]                      // -> [port <= 0x00000001]
[01:03:28.583]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:03:28.583]                      // -> [portAdr <= 0x40020400]
[01:03:28.583]                    pos = pin * 2;
[01:03:28.583]                      // -> [pos <= 0x00000006]
[01:03:28.583]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:03:28.584]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.584]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.584]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:03:28.585]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.585]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.585]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:03:28.586]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.586]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.586]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:03:28.587]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.587]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.587]                  </block>
[01:03:28.587]                  <control if="pin <  8" while="" timeout="0" info="">
[01:03:28.588]                    // if-block "pin <  8"
[01:03:28.588]                      // =>  TRUE
[01:03:28.588]                    <block atomic="false" info="">
[01:03:28.588]                      pos = ((pin    ) & 7) * 4;
[01:03:28.588]                        // -> [pos <= 0x0000000C]
[01:03:28.588]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:03:28.589]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.589]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.589]                    </block>
[01:03:28.590]                    // end if-block "pin <  8"
[01:03:28.590]                  </control>
[01:03:28.590]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:03:28.590]                    // if-block "pin >= 8"
[01:03:28.590]                      // =>  FALSE
[01:03:28.590]                    // skip if-block "pin >= 8"
[01:03:28.590]                  </control>
[01:03:28.590]                </sequence>
[01:03:28.591]            </block>
[01:03:28.591]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:03:28.591]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:03:28.591]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.591]            </block>
[01:03:28.591]          </sequence>
[01:03:28.592]      </block>
[01:03:28.592]      // end if-block "traceSWO"
[01:03:28.592]    </control>
[01:03:28.592]    <control if="traceTPIU" while="" timeout="0" info="">
[01:03:28.592]      // if-block "traceTPIU"
[01:03:28.592]        // =>  FALSE
[01:03:28.592]      // skip if-block "traceTPIU"
[01:03:28.592]    </control>
[01:03:28.593]  </sequence>
[01:03:28.593]  
[01:03:28.596]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:03:28.596]  
[01:03:28.596]  <debugvars>
[01:03:28.597]    // Pre-defined
[01:03:28.597]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:03:28.597]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:03:28.597]    __dp=0x00000000
[01:03:28.597]    __ap=0x00000000
[01:03:28.598]    __traceout=0x00000001      (SWO Trace)
[01:03:28.598]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:03:28.598]    __FlashAddr=0x00000000
[01:03:28.598]    __FlashLen=0x00000000
[01:03:28.598]    __FlashArg=0x00000000
[01:03:28.598]    __FlashOp=0x00000000
[01:03:28.599]    __Result=0x00000000
[01:03:28.599]    
[01:03:28.599]    // User-defined
[01:03:28.599]    DbgMCU_CR=0x00000007
[01:03:28.599]    DbgMCU_APB1_Fz=0x00000000
[01:03:28.600]    DbgMCU_APB2_Fz=0x00000000
[01:03:28.600]    TraceClk_Pin=0x00040002
[01:03:28.600]    TraceD0_Pin=0x00040003
[01:03:28.600]    TraceD1_Pin=0x00040004
[01:03:28.600]    TraceD2_Pin=0x00040005
[01:03:28.601]    TraceD3_Pin=0x00040006
[01:03:28.601]  </debugvars>
[01:03:28.601]  
[01:03:28.601]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:03:28.601]    <block atomic="false" info="">
[01:03:28.601]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:03:28.602]        // -> [traceSWO <= 0x00000001]
[01:03:28.602]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:03:28.602]        // -> [traceTPIU <= 0x00000000]
[01:03:28.602]    </block>
[01:03:28.602]    <control if="traceSWO" while="" timeout="0" info="">
[01:03:28.602]      // if-block "traceSWO"
[01:03:28.603]        // =>  TRUE
[01:03:28.603]      <block atomic="false" info="">
[01:03:28.603]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:03:28.603]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:03:28.603]            <block atomic="false" info="">
[01:03:28.603]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:03:28.603]                // -> [dbgmcu_val <= 0x00000000]
[01:03:28.604]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:03:28.604]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:03:28.604]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:03:28.604]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.604]                // -> [dbgmcu_val <= 0x00000007]
[01:03:28.605]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:03:28.605]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:03:28.605]              Sequence("ConfigureTraceSWOPin");
[01:03:28.605]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:03:28.605]                  <block atomic="false" info="">
[01:03:28.605]                    __var pin     = 0;
[01:03:28.605]                      // -> [pin <= 0x00000000]
[01:03:28.605]                    __var port    = 0;
[01:03:28.605]                      // -> [port <= 0x00000000]
[01:03:28.606]                    __var portAdr = 0;
[01:03:28.606]                      // -> [portAdr <= 0x00000000]
[01:03:28.606]                    __var pos     = 0;
[01:03:28.606]                      // -> [pos <= 0x00000000]
[01:03:28.606]                    __var SWO_Pin = 0x00010003;          // PB3
[01:03:28.606]                      // -> [SWO_Pin <= 0x00010003]
[01:03:28.606]                  </block>
[01:03:28.607]                  <block atomic="false" info="configure SWO">
[01:03:28.607]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:03:28.607]                      // -> [pin <= 0x00000003]
[01:03:28.607]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:03:28.607]                      // -> [port <= 0x00000001]
[01:03:28.607]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:03:28.607]                      // -> [portAdr <= 0x40020400]
[01:03:28.607]                    pos = pin * 2;
[01:03:28.608]                      // -> [pos <= 0x00000006]
[01:03:28.608]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:03:28.608]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.609]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.609]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:03:28.609]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.609]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.610]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:03:28.610]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.610]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.611]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:03:28.611]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.611]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.612]                  </block>
[01:03:28.612]                  <control if="pin <  8" while="" timeout="0" info="">
[01:03:28.612]                    // if-block "pin <  8"
[01:03:28.612]                      // =>  TRUE
[01:03:28.612]                    <block atomic="false" info="">
[01:03:28.612]                      pos = ((pin    ) & 7) * 4;
[01:03:28.612]                        // -> [pos <= 0x0000000C]
[01:03:28.612]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:03:28.613]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.613]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.613]                    </block>
[01:03:28.614]                    // end if-block "pin <  8"
[01:03:28.614]                  </control>
[01:03:28.614]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:03:28.614]                    // if-block "pin >= 8"
[01:03:28.614]                      // =>  FALSE
[01:03:28.614]                    // skip if-block "pin >= 8"
[01:03:28.614]                  </control>
[01:03:28.614]                </sequence>
[01:03:28.614]            </block>
[01:03:28.615]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:03:28.615]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:03:28.615]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.615]            </block>
[01:03:28.616]          </sequence>
[01:03:28.616]      </block>
[01:03:28.616]      // end if-block "traceSWO"
[01:03:28.616]    </control>
[01:03:28.616]    <control if="traceTPIU" while="" timeout="0" info="">
[01:03:28.616]      // if-block "traceTPIU"
[01:03:28.616]        // =>  FALSE
[01:03:28.616]      // skip if-block "traceTPIU"
[01:03:28.616]    </control>
[01:03:28.616]  </sequence>
[01:03:28.617]  
[01:03:28.834]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:03:28.834]  
[01:03:28.834]  <debugvars>
[01:03:28.834]    // Pre-defined
[01:03:28.834]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:03:28.835]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:03:28.835]    __dp=0x00000000
[01:03:28.835]    __ap=0x00000000
[01:03:28.835]    __traceout=0x00000001      (SWO Trace)
[01:03:28.835]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:03:28.835]    __FlashAddr=0x00000000
[01:03:28.836]    __FlashLen=0x00000000
[01:03:28.836]    __FlashArg=0x00000000
[01:03:28.836]    __FlashOp=0x00000000
[01:03:28.836]    __Result=0x00000000
[01:03:28.836]    
[01:03:28.836]    // User-defined
[01:03:28.836]    DbgMCU_CR=0x00000007
[01:03:28.837]    DbgMCU_APB1_Fz=0x00000000
[01:03:28.837]    DbgMCU_APB2_Fz=0x00000000
[01:03:28.837]    TraceClk_Pin=0x00040002
[01:03:28.837]    TraceD0_Pin=0x00040003
[01:03:28.837]    TraceD1_Pin=0x00040004
[01:03:28.837]    TraceD2_Pin=0x00040005
[01:03:28.837]    TraceD3_Pin=0x00040006
[01:03:28.838]  </debugvars>
[01:03:28.838]  
[01:03:28.838]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:03:28.838]    <block atomic="false" info="">
[01:03:28.838]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:03:28.838]        // -> [traceSWO <= 0x00000001]
[01:03:28.838]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:03:28.839]        // -> [traceTPIU <= 0x00000000]
[01:03:28.839]    </block>
[01:03:28.839]    <control if="traceSWO" while="" timeout="0" info="">
[01:03:28.839]      // if-block "traceSWO"
[01:03:28.839]        // =>  TRUE
[01:03:28.839]      <block atomic="false" info="">
[01:03:28.839]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:03:28.840]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:03:28.840]            <block atomic="false" info="">
[01:03:28.840]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:03:28.840]                // -> [dbgmcu_val <= 0x00000000]
[01:03:28.840]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:03:28.840]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:03:28.840]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:03:28.841]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.841]                // -> [dbgmcu_val <= 0x00000007]
[01:03:28.841]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:03:28.841]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:03:28.841]              Sequence("ConfigureTraceSWOPin");
[01:03:28.842]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:03:28.842]                  <block atomic="false" info="">
[01:03:28.842]                    __var pin     = 0;
[01:03:28.842]                      // -> [pin <= 0x00000000]
[01:03:28.842]                    __var port    = 0;
[01:03:28.842]                      // -> [port <= 0x00000000]
[01:03:28.842]                    __var portAdr = 0;
[01:03:28.843]                      // -> [portAdr <= 0x00000000]
[01:03:28.843]                    __var pos     = 0;
[01:03:28.843]                      // -> [pos <= 0x00000000]
[01:03:28.843]                    __var SWO_Pin = 0x00010003;          // PB3
[01:03:28.843]                      // -> [SWO_Pin <= 0x00010003]
[01:03:28.843]                  </block>
[01:03:28.843]                  <block atomic="false" info="configure SWO">
[01:03:28.843]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:03:28.844]                      // -> [pin <= 0x00000003]
[01:03:28.844]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:03:28.844]                      // -> [port <= 0x00000001]
[01:03:28.844]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:03:28.844]                      // -> [portAdr <= 0x40020400]
[01:03:28.844]                    pos = pin * 2;
[01:03:28.844]                      // -> [pos <= 0x00000006]
[01:03:28.844]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:03:28.845]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.845]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.845]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:03:28.846]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.846]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.846]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:03:28.847]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.847]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.847]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:03:28.848]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.848]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.848]                  </block>
[01:03:28.849]                  <control if="pin <  8" while="" timeout="0" info="">
[01:03:28.849]                    // if-block "pin <  8"
[01:03:28.849]                      // =>  TRUE
[01:03:28.849]                    <block atomic="false" info="">
[01:03:28.849]                      pos = ((pin    ) & 7) * 4;
[01:03:28.849]                        // -> [pos <= 0x0000000C]
[01:03:28.849]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:03:28.850]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.850]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.850]                    </block>
[01:03:28.850]                    // end if-block "pin <  8"
[01:03:28.851]                  </control>
[01:03:28.851]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:03:28.851]                    // if-block "pin >= 8"
[01:03:28.851]                      // =>  FALSE
[01:03:28.851]                    // skip if-block "pin >= 8"
[01:03:28.851]                  </control>
[01:03:28.851]                </sequence>
[01:03:28.851]            </block>
[01:03:28.852]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:03:28.852]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:03:28.852]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:03:28.852]            </block>
[01:03:28.853]          </sequence>
[01:03:28.853]      </block>
[01:03:28.853]      // end if-block "traceSWO"
[01:03:28.853]    </control>
[01:03:28.853]    <control if="traceTPIU" while="" timeout="0" info="">
[01:03:28.853]      // if-block "traceTPIU"
[01:03:28.853]        // =>  FALSE
[01:03:28.853]      // skip if-block "traceTPIU"
[01:03:28.853]    </control>
[01:03:28.854]  </sequence>
[01:03:28.854]  
[01:06:25.207]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:06:25.207]  
[01:06:25.207]  <debugvars>
[01:06:25.207]    // Pre-defined
[01:06:25.207]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:06:25.207]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:06:25.208]    __dp=0x00000000
[01:06:25.208]    __ap=0x00000000
[01:06:25.208]    __traceout=0x00000001      (SWO Trace)
[01:06:25.208]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:06:25.208]    __FlashAddr=0x00000000
[01:06:25.208]    __FlashLen=0x00000000
[01:06:25.208]    __FlashArg=0x00000000
[01:06:25.208]    __FlashOp=0x00000000
[01:06:25.209]    __Result=0x00000000
[01:06:25.209]    
[01:06:25.209]    // User-defined
[01:06:25.209]    DbgMCU_CR=0x00000007
[01:06:25.209]    DbgMCU_APB1_Fz=0x00000000
[01:06:25.209]    DbgMCU_APB2_Fz=0x00000000
[01:06:25.209]    TraceClk_Pin=0x00040002
[01:06:25.209]    TraceD0_Pin=0x00040003
[01:06:25.210]    TraceD1_Pin=0x00040004
[01:06:25.210]    TraceD2_Pin=0x00040005
[01:06:25.210]    TraceD3_Pin=0x00040006
[01:06:25.210]  </debugvars>
[01:06:25.210]  
[01:06:25.210]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:06:25.210]    <block atomic="false" info="">
[01:06:25.210]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:06:25.211]        // -> [traceSWO <= 0x00000001]
[01:06:25.211]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:06:25.211]        // -> [traceTPIU <= 0x00000000]
[01:06:25.211]    </block>
[01:06:25.211]    <control if="traceSWO" while="" timeout="0" info="">
[01:06:25.211]      // if-block "traceSWO"
[01:06:25.211]        // =>  TRUE
[01:06:25.211]      <block atomic="false" info="">
[01:06:25.211]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:06:25.212]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:06:25.212]            <block atomic="false" info="">
[01:06:25.212]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:06:25.212]                // -> [dbgmcu_val <= 0x00000000]
[01:06:25.212]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:06:25.212]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:06:25.212]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:06:25.213]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.213]                // -> [dbgmcu_val <= 0x00000007]
[01:06:25.213]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:06:25.213]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:06:25.213]              Sequence("ConfigureTraceSWOPin");
[01:06:25.213]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:06:25.214]                  <block atomic="false" info="">
[01:06:25.214]                    __var pin     = 0;
[01:06:25.214]                      // -> [pin <= 0x00000000]
[01:06:25.214]                    __var port    = 0;
[01:06:25.214]                      // -> [port <= 0x00000000]
[01:06:25.214]                    __var portAdr = 0;
[01:06:25.214]                      // -> [portAdr <= 0x00000000]
[01:06:25.214]                    __var pos     = 0;
[01:06:25.215]                      // -> [pos <= 0x00000000]
[01:06:25.215]                    __var SWO_Pin = 0x00010003;          // PB3
[01:06:25.215]                      // -> [SWO_Pin <= 0x00010003]
[01:06:25.215]                  </block>
[01:06:25.215]                  <block atomic="false" info="configure SWO">
[01:06:25.215]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:06:25.215]                      // -> [pin <= 0x00000003]
[01:06:25.215]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:06:25.216]                      // -> [port <= 0x00000001]
[01:06:25.216]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:06:25.216]                      // -> [portAdr <= 0x40020400]
[01:06:25.216]                    pos = pin * 2;
[01:06:25.216]                      // -> [pos <= 0x00000006]
[01:06:25.216]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:06:25.216]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.217]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.217]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:06:25.218]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.218]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.218]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:06:25.219]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.219]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.219]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:06:25.220]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.220]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.220]                  </block>
[01:06:25.220]                  <control if="pin <  8" while="" timeout="0" info="">
[01:06:25.220]                    // if-block "pin <  8"
[01:06:25.220]                      // =>  TRUE
[01:06:25.221]                    <block atomic="false" info="">
[01:06:25.221]                      pos = ((pin    ) & 7) * 4;
[01:06:25.221]                        // -> [pos <= 0x0000000C]
[01:06:25.221]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:06:25.221]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.222]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.222]                    </block>
[01:06:25.222]                    // end if-block "pin <  8"
[01:06:25.222]                  </control>
[01:06:25.222]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:06:25.222]                    // if-block "pin >= 8"
[01:06:25.222]                      // =>  FALSE
[01:06:25.223]                    // skip if-block "pin >= 8"
[01:06:25.223]                  </control>
[01:06:25.223]                </sequence>
[01:06:25.223]            </block>
[01:06:25.223]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:06:25.223]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:06:25.224]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:06:25.224]            </block>
[01:06:25.224]          </sequence>
[01:06:25.224]      </block>
[01:06:25.224]      // end if-block "traceSWO"
[01:06:25.225]    </control>
[01:06:25.225]    <control if="traceTPIU" while="" timeout="0" info="">
[01:06:25.225]      // if-block "traceTPIU"
[01:06:25.225]        // =>  FALSE
[01:06:25.225]      // skip if-block "traceTPIU"
[01:06:25.225]    </control>
[01:06:25.225]  </sequence>
[01:06:25.225]  
[01:16:30.369]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[01:16:30.369]  
[01:16:30.373]  <debugvars>
[01:16:30.374]    // Pre-defined
[01:16:30.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:16:30.374]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:16:30.374]    __dp=0x00000000
[01:16:30.374]    __ap=0x00000000
[01:16:30.374]    __traceout=0x00000001      (SWO Trace)
[01:16:30.374]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:16:30.374]    __FlashAddr=0x00000000
[01:16:30.375]    __FlashLen=0x00000000
[01:16:30.375]    __FlashArg=0x00000000
[01:16:30.375]    __FlashOp=0x00000000
[01:16:30.375]    __Result=0x00000000
[01:16:30.375]    
[01:16:30.375]    // User-defined
[01:16:30.375]    DbgMCU_CR=0x00000007
[01:16:30.376]    DbgMCU_APB1_Fz=0x00000000
[01:16:30.376]    DbgMCU_APB2_Fz=0x00000000
[01:16:30.376]    TraceClk_Pin=0x00040002
[01:16:30.376]    TraceD0_Pin=0x00040003
[01:16:30.376]    TraceD1_Pin=0x00040004
[01:16:30.376]    TraceD2_Pin=0x00040005
[01:16:30.376]    TraceD3_Pin=0x00040006
[01:16:30.377]  </debugvars>
[01:16:30.377]  
[01:16:30.377]  <sequence name="TraceStop" Pname="" disable="false" info="">
[01:16:30.377]    <block atomic="false" info="">
[01:16:30.377]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[01:16:30.377]        // -> [traceSWO <= 0x00000001]
[01:16:30.377]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[01:16:30.377]        // -> [traceTPIU <= 0x00000000]
[01:16:30.377]    </block>
[01:16:30.378]    <control if="traceSWO" while="" timeout="0" info="">
[01:16:30.378]      // if-block "traceSWO"
[01:16:30.378]        // =>  TRUE
[01:16:30.378]      <block atomic="false" info="">
[01:16:30.378]        Sequence("DisableTraceSWO");
[01:16:30.378]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[01:16:30.378]            <block atomic="false" info="">
[01:16:30.378]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:16:30.378]                // -> [dbgmcu_val <= 0x00000000]
[01:16:30.379]            </block>
[01:16:30.379]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[01:16:30.379]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[01:16:30.379]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:16:30.379]                // -> [dbgmcu_val <= 0x00000007]
[01:16:30.380]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[01:16:30.380]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:16:30.380]            </block>
[01:16:30.380]          </sequence>
[01:16:30.380]      </block>
[01:16:30.381]      // end if-block "traceSWO"
[01:16:30.381]    </control>
[01:16:30.381]    <control if="traceTPIU" while="" timeout="0" info="">
[01:16:30.381]      // if-block "traceTPIU"
[01:16:30.381]        // =>  FALSE
[01:16:30.381]      // skip if-block "traceTPIU"
[01:16:30.381]    </control>
[01:16:30.381]  </sequence>
[01:16:30.382]  
[01:19:20.733]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:19:20.733]  
[01:19:20.734]  <debugvars>
[01:19:20.734]    // Pre-defined
[01:19:20.734]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:20.734]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:19:20.734]    __dp=0x00000000
[01:19:20.734]    __ap=0x00000000
[01:19:20.735]    __traceout=0x00000001      (SWO Trace)
[01:19:20.735]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:20.735]    __FlashAddr=0x00000000
[01:19:20.735]    __FlashLen=0x00000000
[01:19:20.735]    __FlashArg=0x00000000
[01:19:20.735]    __FlashOp=0x00000000
[01:19:20.735]    __Result=0x00000000
[01:19:20.736]    
[01:19:20.736]    // User-defined
[01:19:20.736]    DbgMCU_CR=0x00000007
[01:19:20.736]    DbgMCU_APB1_Fz=0x00000000
[01:19:20.736]    DbgMCU_APB2_Fz=0x00000000
[01:19:20.736]    TraceClk_Pin=0x00040002
[01:19:20.736]    TraceD0_Pin=0x00040003
[01:19:20.736]    TraceD1_Pin=0x00040004
[01:19:20.736]    TraceD2_Pin=0x00040005
[01:19:20.737]    TraceD3_Pin=0x00040006
[01:19:20.737]  </debugvars>
[01:19:20.737]  
[01:19:20.737]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:19:20.737]    <block atomic="false" info="">
[01:19:20.737]      Sequence("CheckID");
[01:19:20.737]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:19:20.737]          <block atomic="false" info="">
[01:19:20.737]            __var pidr1 = 0;
[01:19:20.738]              // -> [pidr1 <= 0x00000000]
[01:19:20.738]            __var pidr2 = 0;
[01:19:20.738]              // -> [pidr2 <= 0x00000000]
[01:19:20.738]            __var jep106id = 0;
[01:19:20.738]              // -> [jep106id <= 0x00000000]
[01:19:20.738]            __var ROMTableBase = 0;
[01:19:20.738]              // -> [ROMTableBase <= 0x00000000]
[01:19:20.738]            __ap = 0;      // AHB-AP
[01:19:20.738]              // -> [__ap <= 0x00000000]
[01:19:20.739]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:19:20.739]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.739]              // -> [ROMTableBase <= 0xE00FD000]
[01:19:20.739]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:19:20.740]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.740]              // -> [pidr1 <= 0x00000004]
[01:19:20.740]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:19:20.741]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.741]              // -> [pidr2 <= 0x0000001A]
[01:19:20.741]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:19:20.741]              // -> [jep106id <= 0x00000020]
[01:19:20.741]          </block>
[01:19:20.741]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:19:20.741]            // if-block "jep106id != 0x20"
[01:19:20.741]              // =>  FALSE
[01:19:20.742]            // skip if-block "jep106id != 0x20"
[01:19:20.742]          </control>
[01:19:20.742]        </sequence>
[01:19:20.742]    </block>
[01:19:20.742]  </sequence>
[01:19:20.742]  
[01:19:20.757]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:19:20.757]  
[01:19:20.757]  <debugvars>
[01:19:20.757]    // Pre-defined
[01:19:20.757]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:20.757]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:19:20.757]    __dp=0x00000000
[01:19:20.758]    __ap=0x00000000
[01:19:20.758]    __traceout=0x00000001      (SWO Trace)
[01:19:20.758]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:20.758]    __FlashAddr=0x00000000
[01:19:20.758]    __FlashLen=0x00000000
[01:19:20.758]    __FlashArg=0x00000000
[01:19:20.758]    __FlashOp=0x00000000
[01:19:20.758]    __Result=0x00000000
[01:19:20.758]    
[01:19:20.758]    // User-defined
[01:19:20.759]    DbgMCU_CR=0x00000007
[01:19:20.759]    DbgMCU_APB1_Fz=0x00000000
[01:19:20.759]    DbgMCU_APB2_Fz=0x00000000
[01:19:20.759]    TraceClk_Pin=0x00040002
[01:19:20.759]    TraceD0_Pin=0x00040003
[01:19:20.759]    TraceD1_Pin=0x00040004
[01:19:20.759]    TraceD2_Pin=0x00040005
[01:19:20.759]    TraceD3_Pin=0x00040006
[01:19:20.760]  </debugvars>
[01:19:20.760]  
[01:19:20.760]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:19:20.760]    <block atomic="false" info="">
[01:19:20.760]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:19:20.760]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.760]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:19:20.761]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.761]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:19:20.761]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.761]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:19:20.762]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:20.762]    </block>
[01:19:20.762]  </sequence>
[01:19:20.762]  
[01:19:51.641]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:19:51.641]  
[01:19:51.641]  <debugvars>
[01:19:51.641]    // Pre-defined
[01:19:51.641]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:51.642]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:19:51.642]    __dp=0x00000000
[01:19:51.642]    __ap=0x00000000
[01:19:51.642]    __traceout=0x00000001      (SWO Trace)
[01:19:51.642]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:51.643]    __FlashAddr=0x00000000
[01:19:51.643]    __FlashLen=0x00000000
[01:19:51.643]    __FlashArg=0x00000000
[01:19:51.643]    __FlashOp=0x00000000
[01:19:51.643]    __Result=0x00000000
[01:19:51.643]    
[01:19:51.643]    // User-defined
[01:19:51.644]    DbgMCU_CR=0x00000007
[01:19:51.644]    DbgMCU_APB1_Fz=0x00000000
[01:19:51.645]    DbgMCU_APB2_Fz=0x00000000
[01:19:51.645]    TraceClk_Pin=0x00040002
[01:19:51.645]    TraceD0_Pin=0x00040003
[01:19:51.645]    TraceD1_Pin=0x00040004
[01:19:51.645]    TraceD2_Pin=0x00040005
[01:19:51.645]    TraceD3_Pin=0x00040006
[01:19:51.645]  </debugvars>
[01:19:51.645]  
[01:19:51.646]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:19:51.646]    <block atomic="false" info="">
[01:19:51.646]      Sequence("CheckID");
[01:19:51.646]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:19:51.646]          <block atomic="false" info="">
[01:19:51.646]            __var pidr1 = 0;
[01:19:51.646]              // -> [pidr1 <= 0x00000000]
[01:19:51.647]            __var pidr2 = 0;
[01:19:51.647]              // -> [pidr2 <= 0x00000000]
[01:19:51.647]            __var jep106id = 0;
[01:19:51.647]              // -> [jep106id <= 0x00000000]
[01:19:51.647]            __var ROMTableBase = 0;
[01:19:51.647]              // -> [ROMTableBase <= 0x00000000]
[01:19:51.647]            __ap = 0;      // AHB-AP
[01:19:51.647]              // -> [__ap <= 0x00000000]
[01:19:51.648]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:19:51.648]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.648]              // -> [ROMTableBase <= 0xE00FD000]
[01:19:51.648]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:19:51.649]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.649]              // -> [pidr1 <= 0x00000004]
[01:19:51.649]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:19:51.649]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.650]              // -> [pidr2 <= 0x0000001A]
[01:19:51.650]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:19:51.650]              // -> [jep106id <= 0x00000020]
[01:19:51.650]          </block>
[01:19:51.650]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:19:51.650]            // if-block "jep106id != 0x20"
[01:19:51.650]              // =>  FALSE
[01:19:51.650]            // skip if-block "jep106id != 0x20"
[01:19:51.650]          </control>
[01:19:51.651]        </sequence>
[01:19:51.651]    </block>
[01:19:51.651]  </sequence>
[01:19:51.651]  
[01:19:51.665]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:19:51.665]  
[01:19:51.665]  <debugvars>
[01:19:51.666]    // Pre-defined
[01:19:51.666]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:51.666]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:19:51.666]    __dp=0x00000000
[01:19:51.666]    __ap=0x00000000
[01:19:51.666]    __traceout=0x00000001      (SWO Trace)
[01:19:51.667]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:51.667]    __FlashAddr=0x00000000
[01:19:51.667]    __FlashLen=0x00000000
[01:19:51.667]    __FlashArg=0x00000000
[01:19:51.667]    __FlashOp=0x00000000
[01:19:51.667]    __Result=0x00000000
[01:19:51.667]    
[01:19:51.667]    // User-defined
[01:19:51.668]    DbgMCU_CR=0x00000007
[01:19:51.668]    DbgMCU_APB1_Fz=0x00000000
[01:19:51.668]    DbgMCU_APB2_Fz=0x00000000
[01:19:51.668]    TraceClk_Pin=0x00040002
[01:19:51.668]    TraceD0_Pin=0x00040003
[01:19:51.668]    TraceD1_Pin=0x00040004
[01:19:51.668]    TraceD2_Pin=0x00040005
[01:19:51.669]    TraceD3_Pin=0x00040006
[01:19:51.669]  </debugvars>
[01:19:51.669]  
[01:19:51.669]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:19:51.669]    <block atomic="false" info="">
[01:19:51.669]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:19:51.670]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.670]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:19:51.671]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.671]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:19:51.671]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.671]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:19:51.672]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.672]    </block>
[01:19:51.672]  </sequence>
[01:19:51.672]  
[01:19:51.688]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[01:19:51.688]  
[01:19:51.689]  <debugvars>
[01:19:51.689]    // Pre-defined
[01:19:51.689]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:51.689]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:19:51.689]    __dp=0x00000000
[01:19:51.690]    __ap=0x00000000
[01:19:51.690]    __traceout=0x00000001      (SWO Trace)
[01:19:51.690]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:51.690]    __FlashAddr=0x00000000
[01:19:51.690]    __FlashLen=0x00000000
[01:19:51.690]    __FlashArg=0x00000000
[01:19:51.691]    __FlashOp=0x00000000
[01:19:51.691]    __Result=0x00000000
[01:19:51.691]    
[01:19:51.691]    // User-defined
[01:19:51.691]    DbgMCU_CR=0x00000007
[01:19:51.691]    DbgMCU_APB1_Fz=0x00000000
[01:19:51.692]    DbgMCU_APB2_Fz=0x00000000
[01:19:51.692]    TraceClk_Pin=0x00040002
[01:19:51.692]    TraceD0_Pin=0x00040003
[01:19:51.692]    TraceD1_Pin=0x00040004
[01:19:51.692]    TraceD2_Pin=0x00040005
[01:19:51.692]    TraceD3_Pin=0x00040006
[01:19:51.693]  </debugvars>
[01:19:51.693]  
[01:19:51.693]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:19:51.693]    <block atomic="false" info="">
[01:19:51.693]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:19:51.693]        // -> [traceSWO <= 0x00000001]
[01:19:51.693]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:19:51.694]        // -> [traceTPIU <= 0x00000000]
[01:19:51.694]    </block>
[01:19:51.694]    <control if="traceSWO" while="" timeout="0" info="">
[01:19:51.694]      // if-block "traceSWO"
[01:19:51.694]        // =>  TRUE
[01:19:51.694]      <block atomic="false" info="">
[01:19:51.694]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:19:51.695]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:19:51.695]            <block atomic="false" info="">
[01:19:51.695]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:19:51.695]                // -> [dbgmcu_val <= 0x00000000]
[01:19:51.695]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:19:51.695]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:19:51.696]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:19:51.696]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.696]                // -> [dbgmcu_val <= 0x00000007]
[01:19:51.696]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:19:51.696]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:19:51.696]              Sequence("ConfigureTraceSWOPin");
[01:19:51.697]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:19:51.697]                  <block atomic="false" info="">
[01:19:51.697]                    __var pin     = 0;
[01:19:51.697]                      // -> [pin <= 0x00000000]
[01:19:51.697]                    __var port    = 0;
[01:19:51.697]                      // -> [port <= 0x00000000]
[01:19:51.697]                    __var portAdr = 0;
[01:19:51.697]                      // -> [portAdr <= 0x00000000]
[01:19:51.698]                    __var pos     = 0;
[01:19:51.698]                      // -> [pos <= 0x00000000]
[01:19:51.698]                    __var SWO_Pin = 0x00010003;          // PB3
[01:19:51.698]                      // -> [SWO_Pin <= 0x00010003]
[01:19:51.698]                  </block>
[01:19:51.698]                  <block atomic="false" info="configure SWO">
[01:19:51.698]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:19:51.698]                      // -> [pin <= 0x00000003]
[01:19:51.698]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:19:51.699]                      // -> [port <= 0x00000001]
[01:19:51.699]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:19:51.699]                      // -> [portAdr <= 0x40020400]
[01:19:51.699]                    pos = pin * 2;
[01:19:51.699]                      // -> [pos <= 0x00000006]
[01:19:51.699]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:19:51.700]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.700]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.700]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:19:51.701]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.701]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.701]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:19:51.702]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.702]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.703]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:19:51.703]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.703]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.704]                  </block>
[01:19:51.704]                  <control if="pin <  8" while="" timeout="0" info="">
[01:19:51.704]                    // if-block "pin <  8"
[01:19:51.704]                      // =>  TRUE
[01:19:51.704]                    <block atomic="false" info="">
[01:19:51.704]                      pos = ((pin    ) & 7) * 4;
[01:19:51.704]                        // -> [pos <= 0x0000000C]
[01:19:51.704]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:19:51.705]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.705]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.706]                    </block>
[01:19:51.706]                    // end if-block "pin <  8"
[01:19:51.706]                  </control>
[01:19:51.706]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:19:51.706]                    // if-block "pin >= 8"
[01:19:51.706]                      // =>  FALSE
[01:19:51.706]                    // skip if-block "pin >= 8"
[01:19:51.707]                  </control>
[01:19:51.707]                </sequence>
[01:19:51.707]            </block>
[01:19:51.707]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:19:51.707]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:19:51.708]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.708]            </block>
[01:19:51.708]          </sequence>
[01:19:51.708]      </block>
[01:19:51.708]      // end if-block "traceSWO"
[01:19:51.708]    </control>
[01:19:51.709]    <control if="traceTPIU" while="" timeout="0" info="">
[01:19:51.709]      // if-block "traceTPIU"
[01:19:51.709]        // =>  FALSE
[01:19:51.709]      // skip if-block "traceTPIU"
[01:19:51.709]    </control>
[01:19:51.709]  </sequence>
[01:19:51.710]  
[01:19:51.714]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:19:51.714]  
[01:19:51.714]  <debugvars>
[01:19:51.714]    // Pre-defined
[01:19:51.714]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:51.714]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:19:51.714]    __dp=0x00000000
[01:19:51.715]    __ap=0x00000000
[01:19:51.715]    __traceout=0x00000001      (SWO Trace)
[01:19:51.715]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:51.715]    __FlashAddr=0x00000000
[01:19:51.715]    __FlashLen=0x00000000
[01:19:51.715]    __FlashArg=0x00000000
[01:19:51.715]    __FlashOp=0x00000000
[01:19:51.716]    __Result=0x00000000
[01:19:51.716]    
[01:19:51.716]    // User-defined
[01:19:51.716]    DbgMCU_CR=0x00000007
[01:19:51.716]    DbgMCU_APB1_Fz=0x00000000
[01:19:51.716]    DbgMCU_APB2_Fz=0x00000000
[01:19:51.716]    TraceClk_Pin=0x00040002
[01:19:51.716]    TraceD0_Pin=0x00040003
[01:19:51.717]    TraceD1_Pin=0x00040004
[01:19:51.717]    TraceD2_Pin=0x00040005
[01:19:51.717]    TraceD3_Pin=0x00040006
[01:19:51.717]  </debugvars>
[01:19:51.717]  
[01:19:51.717]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:19:51.717]    <block atomic="false" info="">
[01:19:51.718]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:19:51.718]        // -> [traceSWO <= 0x00000001]
[01:19:51.718]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:19:51.718]        // -> [traceTPIU <= 0x00000000]
[01:19:51.718]    </block>
[01:19:51.718]    <control if="traceSWO" while="" timeout="0" info="">
[01:19:51.718]      // if-block "traceSWO"
[01:19:51.719]        // =>  TRUE
[01:19:51.719]      <block atomic="false" info="">
[01:19:51.719]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:19:51.719]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:19:51.719]            <block atomic="false" info="">
[01:19:51.719]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:19:51.719]                // -> [dbgmcu_val <= 0x00000000]
[01:19:51.719]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:19:51.720]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:19:51.720]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:19:51.720]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.720]                // -> [dbgmcu_val <= 0x00000007]
[01:19:51.720]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:19:51.720]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:19:51.720]              Sequence("ConfigureTraceSWOPin");
[01:19:51.721]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:19:51.721]                  <block atomic="false" info="">
[01:19:51.721]                    __var pin     = 0;
[01:19:51.721]                      // -> [pin <= 0x00000000]
[01:19:51.721]                    __var port    = 0;
[01:19:51.721]                      // -> [port <= 0x00000000]
[01:19:51.721]                    __var portAdr = 0;
[01:19:51.721]                      // -> [portAdr <= 0x00000000]
[01:19:51.722]                    __var pos     = 0;
[01:19:51.722]                      // -> [pos <= 0x00000000]
[01:19:51.722]                    __var SWO_Pin = 0x00010003;          // PB3
[01:19:51.722]                      // -> [SWO_Pin <= 0x00010003]
[01:19:51.722]                  </block>
[01:19:51.722]                  <block atomic="false" info="configure SWO">
[01:19:51.722]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:19:51.722]                      // -> [pin <= 0x00000003]
[01:19:51.723]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:19:51.723]                      // -> [port <= 0x00000001]
[01:19:51.723]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:19:51.723]                      // -> [portAdr <= 0x40020400]
[01:19:51.723]                    pos = pin * 2;
[01:19:51.723]                      // -> [pos <= 0x00000006]
[01:19:51.723]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:19:51.724]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.724]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.724]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:19:51.725]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.725]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.725]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:19:51.725]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.726]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.726]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:19:51.726]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.727]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.727]                  </block>
[01:19:51.727]                  <control if="pin <  8" while="" timeout="0" info="">
[01:19:51.727]                    // if-block "pin <  8"
[01:19:51.727]                      // =>  TRUE
[01:19:51.727]                    <block atomic="false" info="">
[01:19:51.727]                      pos = ((pin    ) & 7) * 4;
[01:19:51.728]                        // -> [pos <= 0x0000000C]
[01:19:51.728]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:19:51.728]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.729]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.729]                    </block>
[01:19:51.729]                    // end if-block "pin <  8"
[01:19:51.729]                  </control>
[01:19:51.729]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:19:51.729]                    // if-block "pin >= 8"
[01:19:51.729]                      // =>  FALSE
[01:19:51.730]                    // skip if-block "pin >= 8"
[01:19:51.730]                  </control>
[01:19:51.730]                </sequence>
[01:19:51.730]            </block>
[01:19:51.730]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:19:51.730]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:19:51.730]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.731]            </block>
[01:19:51.731]          </sequence>
[01:19:51.731]      </block>
[01:19:51.731]      // end if-block "traceSWO"
[01:19:51.731]    </control>
[01:19:51.731]    <control if="traceTPIU" while="" timeout="0" info="">
[01:19:51.731]      // if-block "traceTPIU"
[01:19:51.731]        // =>  FALSE
[01:19:51.732]      // skip if-block "traceTPIU"
[01:19:51.732]    </control>
[01:19:51.732]  </sequence>
[01:19:51.732]  
[01:19:51.955]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:19:51.955]  
[01:19:51.956]  <debugvars>
[01:19:51.956]    // Pre-defined
[01:19:51.956]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:19:51.956]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:19:51.957]    __dp=0x00000000
[01:19:51.957]    __ap=0x00000000
[01:19:51.957]    __traceout=0x00000001      (SWO Trace)
[01:19:51.957]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:19:51.957]    __FlashAddr=0x00000000
[01:19:51.957]    __FlashLen=0x00000000
[01:19:51.958]    __FlashArg=0x00000000
[01:19:51.958]    __FlashOp=0x00000000
[01:19:51.958]    __Result=0x00000000
[01:19:51.958]    
[01:19:51.958]    // User-defined
[01:19:51.958]    DbgMCU_CR=0x00000007
[01:19:51.959]    DbgMCU_APB1_Fz=0x00000000
[01:19:51.959]    DbgMCU_APB2_Fz=0x00000000
[01:19:51.959]    TraceClk_Pin=0x00040002
[01:19:51.959]    TraceD0_Pin=0x00040003
[01:19:51.959]    TraceD1_Pin=0x00040004
[01:19:51.960]    TraceD2_Pin=0x00040005
[01:19:51.960]    TraceD3_Pin=0x00040006
[01:19:51.960]  </debugvars>
[01:19:51.960]  
[01:19:51.960]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:19:51.961]    <block atomic="false" info="">
[01:19:51.961]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:19:51.961]        // -> [traceSWO <= 0x00000001]
[01:19:51.961]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:19:51.961]        // -> [traceTPIU <= 0x00000000]
[01:19:51.961]    </block>
[01:19:51.962]    <control if="traceSWO" while="" timeout="0" info="">
[01:19:51.962]      // if-block "traceSWO"
[01:19:51.962]        // =>  TRUE
[01:19:51.962]      <block atomic="false" info="">
[01:19:51.962]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:19:51.962]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:19:51.963]            <block atomic="false" info="">
[01:19:51.963]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:19:51.963]                // -> [dbgmcu_val <= 0x00000000]
[01:19:51.963]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:19:51.963]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:19:51.963]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:19:51.964]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.964]                // -> [dbgmcu_val <= 0x00000007]
[01:19:51.964]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:19:51.964]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:19:51.965]              Sequence("ConfigureTraceSWOPin");
[01:19:51.965]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:19:51.965]                  <block atomic="false" info="">
[01:19:51.965]                    __var pin     = 0;
[01:19:51.965]                      // -> [pin <= 0x00000000]
[01:19:51.965]                    __var port    = 0;
[01:19:51.965]                      // -> [port <= 0x00000000]
[01:19:51.966]                    __var portAdr = 0;
[01:19:51.966]                      // -> [portAdr <= 0x00000000]
[01:19:51.966]                    __var pos     = 0;
[01:19:51.966]                      // -> [pos <= 0x00000000]
[01:19:51.966]                    __var SWO_Pin = 0x00010003;          // PB3
[01:19:51.966]                      // -> [SWO_Pin <= 0x00010003]
[01:19:51.967]                  </block>
[01:19:51.967]                  <block atomic="false" info="configure SWO">
[01:19:51.967]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:19:51.967]                      // -> [pin <= 0x00000003]
[01:19:51.967]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:19:51.967]                      // -> [port <= 0x00000001]
[01:19:51.968]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:19:51.968]                      // -> [portAdr <= 0x40020400]
[01:19:51.968]                    pos = pin * 2;
[01:19:51.968]                      // -> [pos <= 0x00000006]
[01:19:51.968]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:19:51.969]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.969]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.969]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:19:51.970]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.970]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.970]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:19:51.971]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.971]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.971]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:19:51.972]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.972]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.972]                  </block>
[01:19:51.972]                  <control if="pin <  8" while="" timeout="0" info="">
[01:19:51.973]                    // if-block "pin <  8"
[01:19:51.973]                      // =>  TRUE
[01:19:51.973]                    <block atomic="false" info="">
[01:19:51.973]                      pos = ((pin    ) & 7) * 4;
[01:19:51.973]                        // -> [pos <= 0x0000000C]
[01:19:51.973]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:19:51.974]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.974]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.974]                    </block>
[01:19:51.975]                    // end if-block "pin <  8"
[01:19:51.975]                  </control>
[01:19:51.975]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:19:51.975]                    // if-block "pin >= 8"
[01:19:51.975]                      // =>  FALSE
[01:19:51.975]                    // skip if-block "pin >= 8"
[01:19:51.975]                  </control>
[01:19:51.976]                </sequence>
[01:19:51.976]            </block>
[01:19:51.976]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:19:51.976]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:19:51.976]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:19:51.977]            </block>
[01:19:51.977]          </sequence>
[01:19:51.977]      </block>
[01:19:51.977]      // end if-block "traceSWO"
[01:19:51.977]    </control>
[01:19:51.977]    <control if="traceTPIU" while="" timeout="0" info="">
[01:19:51.977]      // if-block "traceTPIU"
[01:19:51.977]        // =>  FALSE
[01:19:51.978]      // skip if-block "traceTPIU"
[01:19:51.978]    </control>
[01:19:51.978]  </sequence>
[01:19:51.978]  
[01:21:32.568]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:21:32.568]  
[01:21:32.569]  <debugvars>
[01:21:32.569]    // Pre-defined
[01:21:32.569]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:21:32.569]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:21:32.569]    __dp=0x00000000
[01:21:32.570]    __ap=0x00000000
[01:21:32.570]    __traceout=0x00000001      (SWO Trace)
[01:21:32.570]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:21:32.570]    __FlashAddr=0x00000000
[01:21:32.570]    __FlashLen=0x00000000
[01:21:32.570]    __FlashArg=0x00000000
[01:21:32.571]    __FlashOp=0x00000000
[01:21:32.571]    __Result=0x00000000
[01:21:32.571]    
[01:21:32.571]    // User-defined
[01:21:32.571]    DbgMCU_CR=0x00000007
[01:21:32.571]    DbgMCU_APB1_Fz=0x00000000
[01:21:32.572]    DbgMCU_APB2_Fz=0x00000000
[01:21:32.572]    TraceClk_Pin=0x00040002
[01:21:32.572]    TraceD0_Pin=0x00040003
[01:21:32.572]    TraceD1_Pin=0x00040004
[01:21:32.572]    TraceD2_Pin=0x00040005
[01:21:32.572]    TraceD3_Pin=0x00040006
[01:21:32.572]  </debugvars>
[01:21:32.573]  
[01:21:32.573]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:21:32.573]    <block atomic="false" info="">
[01:21:32.573]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:21:32.573]        // -> [traceSWO <= 0x00000001]
[01:21:32.573]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:21:32.573]        // -> [traceTPIU <= 0x00000000]
[01:21:32.574]    </block>
[01:21:32.574]    <control if="traceSWO" while="" timeout="0" info="">
[01:21:32.574]      // if-block "traceSWO"
[01:21:32.574]        // =>  TRUE
[01:21:32.574]      <block atomic="false" info="">
[01:21:32.575]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:21:32.575]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:21:32.575]            <block atomic="false" info="">
[01:21:32.575]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:21:32.575]                // -> [dbgmcu_val <= 0x00000000]
[01:21:32.575]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:21:32.576]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:21:32.576]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:21:32.576]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.576]                // -> [dbgmcu_val <= 0x00000007]
[01:21:32.577]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:21:32.577]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:21:32.577]              Sequence("ConfigureTraceSWOPin");
[01:21:32.577]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:21:32.577]                  <block atomic="false" info="">
[01:21:32.577]                    __var pin     = 0;
[01:21:32.577]                      // -> [pin <= 0x00000000]
[01:21:32.578]                    __var port    = 0;
[01:21:32.578]                      // -> [port <= 0x00000000]
[01:21:32.578]                    __var portAdr = 0;
[01:21:32.578]                      // -> [portAdr <= 0x00000000]
[01:21:32.578]                    __var pos     = 0;
[01:21:32.578]                      // -> [pos <= 0x00000000]
[01:21:32.578]                    __var SWO_Pin = 0x00010003;          // PB3
[01:21:32.579]                      // -> [SWO_Pin <= 0x00010003]
[01:21:32.579]                  </block>
[01:21:32.579]                  <block atomic="false" info="configure SWO">
[01:21:32.579]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:21:32.579]                      // -> [pin <= 0x00000003]
[01:21:32.579]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:21:32.579]                      // -> [port <= 0x00000001]
[01:21:32.579]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:21:32.579]                      // -> [portAdr <= 0x40020400]
[01:21:32.580]                    pos = pin * 2;
[01:21:32.580]                      // -> [pos <= 0x00000006]
[01:21:32.580]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:21:32.580]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.581]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.581]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:21:32.581]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.582]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.582]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:21:32.582]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.583]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.583]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:21:32.583]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.584]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.584]                  </block>
[01:21:32.584]                  <control if="pin <  8" while="" timeout="0" info="">
[01:21:32.584]                    // if-block "pin <  8"
[01:21:32.584]                      // =>  TRUE
[01:21:32.584]                    <block atomic="false" info="">
[01:21:32.584]                      pos = ((pin    ) & 7) * 4;
[01:21:32.584]                        // -> [pos <= 0x0000000C]
[01:21:32.585]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:21:32.585]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.585]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.586]                    </block>
[01:21:32.586]                    // end if-block "pin <  8"
[01:21:32.586]                  </control>
[01:21:32.586]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:21:32.586]                    // if-block "pin >= 8"
[01:21:32.586]                      // =>  FALSE
[01:21:32.586]                    // skip if-block "pin >= 8"
[01:21:32.586]                  </control>
[01:21:32.587]                </sequence>
[01:21:32.587]            </block>
[01:21:32.587]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:21:32.587]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:21:32.587]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:21:32.588]            </block>
[01:21:32.588]          </sequence>
[01:21:32.588]      </block>
[01:21:32.588]      // end if-block "traceSWO"
[01:21:32.588]    </control>
[01:21:32.588]    <control if="traceTPIU" while="" timeout="0" info="">
[01:21:32.588]      // if-block "traceTPIU"
[01:21:32.588]        // =>  FALSE
[01:21:32.589]      // skip if-block "traceTPIU"
[01:21:32.589]    </control>
[01:21:32.589]  </sequence>
[01:21:32.589]  
[01:23:47.053]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[01:23:47.053]  
[01:23:47.053]  <debugvars>
[01:23:47.053]    // Pre-defined
[01:23:47.053]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:23:47.054]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:23:47.054]    __dp=0x00000000
[01:23:47.054]    __ap=0x00000000
[01:23:47.054]    __traceout=0x00000001      (SWO Trace)
[01:23:47.054]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:23:47.055]    __FlashAddr=0x00000000
[01:23:47.055]    __FlashLen=0x00000000
[01:23:47.055]    __FlashArg=0x00000000
[01:23:47.055]    __FlashOp=0x00000000
[01:23:47.055]    __Result=0x00000000
[01:23:47.055]    
[01:23:47.055]    // User-defined
[01:23:47.056]    DbgMCU_CR=0x00000007
[01:23:47.056]    DbgMCU_APB1_Fz=0x00000000
[01:23:47.056]    DbgMCU_APB2_Fz=0x00000000
[01:23:47.056]    TraceClk_Pin=0x00040002
[01:23:47.056]    TraceD0_Pin=0x00040003
[01:23:47.056]    TraceD1_Pin=0x00040004
[01:23:47.056]    TraceD2_Pin=0x00040005
[01:23:47.057]    TraceD3_Pin=0x00040006
[01:23:47.057]  </debugvars>
[01:23:47.057]  
[01:23:47.057]  <sequence name="TraceStart" Pname="" disable="false" info="">
[01:23:47.057]    <block atomic="false" info="">
[01:23:47.057]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[01:23:47.057]        // -> [traceSWO <= 0x00000001]
[01:23:47.058]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[01:23:47.058]        // -> [traceTPIU <= 0x00000000]
[01:23:47.058]    </block>
[01:23:47.058]    <control if="traceSWO" while="" timeout="0" info="">
[01:23:47.058]      // if-block "traceSWO"
[01:23:47.058]        // =>  TRUE
[01:23:47.058]      <block atomic="false" info="">
[01:23:47.058]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[01:23:47.059]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[01:23:47.059]            <block atomic="false" info="">
[01:23:47.059]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:23:47.059]                // -> [dbgmcu_val <= 0x00000000]
[01:23:47.059]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[01:23:47.059]                // -> [dbgmcu_trace_val <= 0x00000000]
[01:23:47.059]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[01:23:47.060]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.060]                // -> [dbgmcu_val <= 0x00000007]
[01:23:47.060]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[01:23:47.060]                // -> [dbgmcu_trace_val <= 0x00000020]
[01:23:47.060]              Sequence("ConfigureTraceSWOPin");
[01:23:47.060]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[01:23:47.060]                  <block atomic="false" info="">
[01:23:47.061]                    __var pin     = 0;
[01:23:47.061]                      // -> [pin <= 0x00000000]
[01:23:47.061]                    __var port    = 0;
[01:23:47.061]                      // -> [port <= 0x00000000]
[01:23:47.061]                    __var portAdr = 0;
[01:23:47.061]                      // -> [portAdr <= 0x00000000]
[01:23:47.061]                    __var pos     = 0;
[01:23:47.061]                      // -> [pos <= 0x00000000]
[01:23:47.062]                    __var SWO_Pin = 0x00010003;          // PB3
[01:23:47.062]                      // -> [SWO_Pin <= 0x00010003]
[01:23:47.062]                  </block>
[01:23:47.062]                  <block atomic="false" info="configure SWO">
[01:23:47.062]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[01:23:47.062]                      // -> [pin <= 0x00000003]
[01:23:47.062]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[01:23:47.062]                      // -> [port <= 0x00000001]
[01:23:47.062]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[01:23:47.063]                      // -> [portAdr <= 0x40020400]
[01:23:47.063]                    pos = pin * 2;
[01:23:47.063]                      // -> [pos <= 0x00000006]
[01:23:47.063]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[01:23:47.063]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.064]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.064]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[01:23:47.064]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.065]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.065]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[01:23:47.065]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.066]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.066]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[01:23:47.066]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.067]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.067]                  </block>
[01:23:47.067]                  <control if="pin <  8" while="" timeout="0" info="">
[01:23:47.067]                    // if-block "pin <  8"
[01:23:47.067]                      // =>  TRUE
[01:23:47.067]                    <block atomic="false" info="">
[01:23:47.068]                      pos = ((pin    ) & 7) * 4;
[01:23:47.068]                        // -> [pos <= 0x0000000C]
[01:23:47.068]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[01:23:47.068]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.069]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.069]                    </block>
[01:23:47.069]                    // end if-block "pin <  8"
[01:23:47.069]                  </control>
[01:23:47.069]                  <control if="pin >= 8" while="" timeout="0" info="">
[01:23:47.069]                    // if-block "pin >= 8"
[01:23:47.069]                      // =>  FALSE
[01:23:47.070]                    // skip if-block "pin >= 8"
[01:23:47.070]                  </control>
[01:23:47.070]                </sequence>
[01:23:47.070]            </block>
[01:23:47.070]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[01:23:47.070]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[01:23:47.071]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[01:23:47.071]            </block>
[01:23:47.071]          </sequence>
[01:23:47.071]      </block>
[01:23:47.071]      // end if-block "traceSWO"
[01:23:47.071]    </control>
[01:23:47.071]    <control if="traceTPIU" while="" timeout="0" info="">
[01:23:47.071]      // if-block "traceTPIU"
[01:23:47.071]        // =>  FALSE
[01:23:47.072]      // skip if-block "traceTPIU"
[01:23:47.072]    </control>
[01:23:47.072]  </sequence>
[01:23:47.072]  
[01:26:44.971]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[01:26:44.971]  
[01:26:44.972]  <debugvars>
[01:26:44.972]    // Pre-defined
[01:26:44.972]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:26:44.972]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[01:26:44.972]    __dp=0x00000000
[01:26:44.973]    __ap=0x00000000
[01:26:44.973]    __traceout=0x00000001      (SWO Trace)
[01:26:44.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:26:44.973]    __FlashAddr=0x00000000
[01:26:44.973]    __FlashLen=0x00000000
[01:26:44.974]    __FlashArg=0x00000000
[01:26:44.974]    __FlashOp=0x00000000
[01:26:44.974]    __Result=0x00000000
[01:26:44.974]    
[01:26:44.974]    // User-defined
[01:26:44.974]    DbgMCU_CR=0x00000007
[01:26:44.975]    DbgMCU_APB1_Fz=0x00000000
[01:26:44.975]    DbgMCU_APB2_Fz=0x00000000
[01:26:44.975]    TraceClk_Pin=0x00040002
[01:26:44.975]    TraceD0_Pin=0x00040003
[01:26:44.976]    TraceD1_Pin=0x00040004
[01:26:44.976]    TraceD2_Pin=0x00040005
[01:26:44.976]    TraceD3_Pin=0x00040006
[01:26:44.976]  </debugvars>
[01:26:44.976]  
[01:26:44.976]  <sequence name="TraceStop" Pname="" disable="false" info="">
[01:26:44.977]    <block atomic="false" info="">
[01:26:44.977]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[01:26:44.977]        // -> [traceSWO <= 0x00000001]
[01:26:44.977]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[01:26:44.977]        // -> [traceTPIU <= 0x00000000]
[01:26:44.978]    </block>
[01:26:44.978]    <control if="traceSWO" while="" timeout="0" info="">
[01:26:44.978]      // if-block "traceSWO"
[01:26:44.978]        // =>  TRUE
[01:26:44.978]      <block atomic="false" info="">
[01:26:44.978]        Sequence("DisableTraceSWO");
[01:26:44.979]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[01:26:44.979]            <block atomic="false" info="">
[01:26:44.979]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[01:26:44.979]                // -> [dbgmcu_val <= 0x00000000]
[01:26:44.979]            </block>
[01:26:44.979]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[01:26:44.979]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[01:26:44.980]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[01:26:44.980]                // -> [dbgmcu_val <= 0x00000007]
[01:26:44.980]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[01:26:44.981]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:26:44.981]            </block>
[01:26:44.981]          </sequence>
[01:26:44.981]      </block>
[01:26:44.981]      // end if-block "traceSWO"
[01:26:44.982]    </control>
[01:26:44.982]    <control if="traceTPIU" while="" timeout="0" info="">
[01:26:44.982]      // if-block "traceTPIU"
[01:26:44.982]        // =>  FALSE
[01:26:44.982]      // skip if-block "traceTPIU"
[01:26:44.982]    </control>
[01:26:44.982]  </sequence>
[01:26:44.982]  
[01:26:54.376]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:26:54.376]  
[01:26:54.376]  <debugvars>
[01:26:54.376]    // Pre-defined
[01:26:54.376]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:26:54.376]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:26:54.377]    __dp=0x00000000
[01:26:54.377]    __ap=0x00000000
[01:26:54.377]    __traceout=0x00000001      (SWO Trace)
[01:26:54.377]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:26:54.378]    __FlashAddr=0x00000000
[01:26:54.378]    __FlashLen=0x00000000
[01:26:54.378]    __FlashArg=0x00000000
[01:26:54.378]    __FlashOp=0x00000000
[01:26:54.378]    __Result=0x00000000
[01:26:54.378]    
[01:26:54.378]    // User-defined
[01:26:54.379]    DbgMCU_CR=0x00000007
[01:26:54.379]    DbgMCU_APB1_Fz=0x00000000
[01:26:54.379]    DbgMCU_APB2_Fz=0x00000000
[01:26:54.379]    TraceClk_Pin=0x00040002
[01:26:54.379]    TraceD0_Pin=0x00040003
[01:26:54.380]    TraceD1_Pin=0x00040004
[01:26:54.380]    TraceD2_Pin=0x00040005
[01:26:54.380]    TraceD3_Pin=0x00040006
[01:26:54.380]  </debugvars>
[01:26:54.380]  
[01:26:54.381]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:26:54.381]    <block atomic="false" info="">
[01:26:54.381]      Sequence("CheckID");
[01:26:54.381]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:26:54.381]          <block atomic="false" info="">
[01:26:54.381]            __var pidr1 = 0;
[01:26:54.382]              // -> [pidr1 <= 0x00000000]
[01:26:54.382]            __var pidr2 = 0;
[01:26:54.382]              // -> [pidr2 <= 0x00000000]
[01:26:54.382]            __var jep106id = 0;
[01:26:54.382]              // -> [jep106id <= 0x00000000]
[01:26:54.382]            __var ROMTableBase = 0;
[01:26:54.383]              // -> [ROMTableBase <= 0x00000000]
[01:26:54.383]            __ap = 0;      // AHB-AP
[01:26:54.383]              // -> [__ap <= 0x00000000]
[01:26:54.383]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:26:54.384]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.384]              // -> [ROMTableBase <= 0xE00FD000]
[01:26:54.384]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:26:54.385]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.385]              // -> [pidr1 <= 0x00000004]
[01:26:54.385]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:26:54.385]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.386]              // -> [pidr2 <= 0x0000001A]
[01:26:54.386]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:26:54.386]              // -> [jep106id <= 0x00000020]
[01:26:54.386]          </block>
[01:26:54.386]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:26:54.386]            // if-block "jep106id != 0x20"
[01:26:54.387]              // =>  FALSE
[01:26:54.387]            // skip if-block "jep106id != 0x20"
[01:26:54.387]          </control>
[01:26:54.387]        </sequence>
[01:26:54.387]    </block>
[01:26:54.387]  </sequence>
[01:26:54.388]  
[01:26:54.403]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:26:54.403]  
[01:26:54.403]  <debugvars>
[01:26:54.403]    // Pre-defined
[01:26:54.403]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:26:54.403]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:26:54.404]    __dp=0x00000000
[01:26:54.404]    __ap=0x00000000
[01:26:54.404]    __traceout=0x00000001      (SWO Trace)
[01:26:54.404]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:26:54.404]    __FlashAddr=0x00000000
[01:26:54.404]    __FlashLen=0x00000000
[01:26:54.404]    __FlashArg=0x00000000
[01:26:54.405]    __FlashOp=0x00000000
[01:26:54.405]    __Result=0x00000000
[01:26:54.405]    
[01:26:54.405]    // User-defined
[01:26:54.405]    DbgMCU_CR=0x00000007
[01:26:54.405]    DbgMCU_APB1_Fz=0x00000000
[01:26:54.405]    DbgMCU_APB2_Fz=0x00000000
[01:26:54.405]    TraceClk_Pin=0x00040002
[01:26:54.405]    TraceD0_Pin=0x00040003
[01:26:54.406]    TraceD1_Pin=0x00040004
[01:26:54.406]    TraceD2_Pin=0x00040005
[01:26:54.406]    TraceD3_Pin=0x00040006
[01:26:54.406]  </debugvars>
[01:26:54.406]  
[01:26:54.406]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:26:54.406]    <block atomic="false" info="">
[01:26:54.406]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:26:54.407]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.407]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:26:54.408]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.408]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:26:54.408]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.408]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:26:54.409]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:26:54.409]    </block>
[01:26:54.409]  </sequence>
[01:26:54.409]  
[01:34:33.281]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:34:33.281]  
[01:34:33.281]  <debugvars>
[01:34:33.281]    // Pre-defined
[01:34:33.281]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:33.282]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:34:33.282]    __dp=0x00000000
[01:34:33.282]    __ap=0x00000000
[01:34:33.282]    __traceout=0x00000001      (SWO Trace)
[01:34:33.282]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:33.282]    __FlashAddr=0x00000000
[01:34:33.283]    __FlashLen=0x00000000
[01:34:33.283]    __FlashArg=0x00000000
[01:34:33.283]    __FlashOp=0x00000000
[01:34:33.283]    __Result=0x00000000
[01:34:33.283]    
[01:34:33.283]    // User-defined
[01:34:33.283]    DbgMCU_CR=0x00000007
[01:34:33.284]    DbgMCU_APB1_Fz=0x00000000
[01:34:33.284]    DbgMCU_APB2_Fz=0x00000000
[01:34:33.284]    TraceClk_Pin=0x00040002
[01:34:33.284]    TraceD0_Pin=0x00040003
[01:34:33.284]    TraceD1_Pin=0x00040004
[01:34:33.284]    TraceD2_Pin=0x00040005
[01:34:33.285]    TraceD3_Pin=0x00040006
[01:34:33.285]  </debugvars>
[01:34:33.285]  
[01:34:33.285]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:34:33.285]    <block atomic="false" info="">
[01:34:33.285]      Sequence("CheckID");
[01:34:33.286]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:34:33.286]          <block atomic="false" info="">
[01:34:33.286]            __var pidr1 = 0;
[01:34:33.286]              // -> [pidr1 <= 0x00000000]
[01:34:33.286]            __var pidr2 = 0;
[01:34:33.286]              // -> [pidr2 <= 0x00000000]
[01:34:33.286]            __var jep106id = 0;
[01:34:33.287]              // -> [jep106id <= 0x00000000]
[01:34:33.287]            __var ROMTableBase = 0;
[01:34:33.287]              // -> [ROMTableBase <= 0x00000000]
[01:34:33.287]            __ap = 0;      // AHB-AP
[01:34:33.287]              // -> [__ap <= 0x00000000]
[01:34:33.287]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:34:33.288]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.288]              // -> [ROMTableBase <= 0xE00FD000]
[01:34:33.288]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:34:33.288]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.289]              // -> [pidr1 <= 0x00000004]
[01:34:33.289]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:34:33.289]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.289]              // -> [pidr2 <= 0x0000001A]
[01:34:33.290]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:34:33.290]              // -> [jep106id <= 0x00000020]
[01:34:33.290]          </block>
[01:34:33.290]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:34:33.290]            // if-block "jep106id != 0x20"
[01:34:33.290]              // =>  FALSE
[01:34:33.290]            // skip if-block "jep106id != 0x20"
[01:34:33.291]          </control>
[01:34:33.291]        </sequence>
[01:34:33.291]    </block>
[01:34:33.291]  </sequence>
[01:34:33.291]  
[01:34:33.306]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:34:33.306]  
[01:34:33.306]  <debugvars>
[01:34:33.306]    // Pre-defined
[01:34:33.306]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:34:33.307]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:34:33.307]    __dp=0x00000000
[01:34:33.307]    __ap=0x00000000
[01:34:33.307]    __traceout=0x00000001      (SWO Trace)
[01:34:33.307]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:34:33.308]    __FlashAddr=0x00000000
[01:34:33.308]    __FlashLen=0x00000000
[01:34:33.308]    __FlashArg=0x00000000
[01:34:33.308]    __FlashOp=0x00000000
[01:34:33.308]    __Result=0x00000000
[01:34:33.309]    
[01:34:33.309]    // User-defined
[01:34:33.309]    DbgMCU_CR=0x00000007
[01:34:33.309]    DbgMCU_APB1_Fz=0x00000000
[01:34:33.309]    DbgMCU_APB2_Fz=0x00000000
[01:34:33.309]    TraceClk_Pin=0x00040002
[01:34:33.310]    TraceD0_Pin=0x00040003
[01:34:33.310]    TraceD1_Pin=0x00040004
[01:34:33.310]    TraceD2_Pin=0x00040005
[01:34:33.310]    TraceD3_Pin=0x00040006
[01:34:33.310]  </debugvars>
[01:34:33.311]  
[01:34:33.311]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:34:33.311]    <block atomic="false" info="">
[01:34:33.311]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:34:33.312]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.312]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:34:33.312]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.313]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:34:33.313]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.313]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:34:33.314]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:34:33.314]    </block>
[01:34:33.314]  </sequence>
[01:34:33.315]  
[01:44:31.549]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:44:31.549]  
[01:44:31.549]  <debugvars>
[01:44:31.550]    // Pre-defined
[01:44:31.550]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:44:31.550]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:44:31.550]    __dp=0x00000000
[01:44:31.550]    __ap=0x00000000
[01:44:31.550]    __traceout=0x00000001      (SWO Trace)
[01:44:31.551]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:44:31.551]    __FlashAddr=0x00000000
[01:44:31.551]    __FlashLen=0x00000000
[01:44:31.551]    __FlashArg=0x00000000
[01:44:31.551]    __FlashOp=0x00000000
[01:44:31.551]    __Result=0x00000000
[01:44:31.552]    
[01:44:31.552]    // User-defined
[01:44:31.552]    DbgMCU_CR=0x00000007
[01:44:31.552]    DbgMCU_APB1_Fz=0x00000000
[01:44:31.552]    DbgMCU_APB2_Fz=0x00000000
[01:44:31.552]    TraceClk_Pin=0x00040002
[01:44:31.552]    TraceD0_Pin=0x00040003
[01:44:31.553]    TraceD1_Pin=0x00040004
[01:44:31.553]    TraceD2_Pin=0x00040005
[01:44:31.553]    TraceD3_Pin=0x00040006
[01:44:31.553]  </debugvars>
[01:44:31.553]  
[01:44:31.553]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:44:31.554]    <block atomic="false" info="">
[01:44:31.554]      Sequence("CheckID");
[01:44:31.554]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:44:31.554]          <block atomic="false" info="">
[01:44:31.554]            __var pidr1 = 0;
[01:44:31.554]              // -> [pidr1 <= 0x00000000]
[01:44:31.555]            __var pidr2 = 0;
[01:44:31.555]              // -> [pidr2 <= 0x00000000]
[01:44:31.555]            __var jep106id = 0;
[01:44:31.555]              // -> [jep106id <= 0x00000000]
[01:44:31.555]            __var ROMTableBase = 0;
[01:44:31.555]              // -> [ROMTableBase <= 0x00000000]
[01:44:31.555]            __ap = 0;      // AHB-AP
[01:44:31.556]              // -> [__ap <= 0x00000000]
[01:44:31.556]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:44:31.556]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.556]              // -> [ROMTableBase <= 0xE00FD000]
[01:44:31.556]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:44:31.557]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.557]              // -> [pidr1 <= 0x00000004]
[01:44:31.557]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:44:31.558]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.558]              // -> [pidr2 <= 0x0000001A]
[01:44:31.558]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:44:31.558]              // -> [jep106id <= 0x00000020]
[01:44:31.558]          </block>
[01:44:31.558]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:44:31.558]            // if-block "jep106id != 0x20"
[01:44:31.559]              // =>  FALSE
[01:44:31.559]            // skip if-block "jep106id != 0x20"
[01:44:31.559]          </control>
[01:44:31.559]        </sequence>
[01:44:31.559]    </block>
[01:44:31.559]  </sequence>
[01:44:31.559]  
[01:44:31.574]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:44:31.574]  
[01:44:31.574]  <debugvars>
[01:44:31.574]    // Pre-defined
[01:44:31.574]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:44:31.575]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:44:31.575]    __dp=0x00000000
[01:44:31.575]    __ap=0x00000000
[01:44:31.575]    __traceout=0x00000001      (SWO Trace)
[01:44:31.575]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:44:31.575]    __FlashAddr=0x00000000
[01:44:31.576]    __FlashLen=0x00000000
[01:44:31.576]    __FlashArg=0x00000000
[01:44:31.576]    __FlashOp=0x00000000
[01:44:31.576]    __Result=0x00000000
[01:44:31.576]    
[01:44:31.576]    // User-defined
[01:44:31.576]    DbgMCU_CR=0x00000007
[01:44:31.577]    DbgMCU_APB1_Fz=0x00000000
[01:44:31.577]    DbgMCU_APB2_Fz=0x00000000
[01:44:31.577]    TraceClk_Pin=0x00040002
[01:44:31.577]    TraceD0_Pin=0x00040003
[01:44:31.577]    TraceD1_Pin=0x00040004
[01:44:31.578]    TraceD2_Pin=0x00040005
[01:44:31.578]    TraceD3_Pin=0x00040006
[01:44:31.578]  </debugvars>
[01:44:31.578]  
[01:44:31.578]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:44:31.578]    <block atomic="false" info="">
[01:44:31.579]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:44:31.579]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.579]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:44:31.580]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.580]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:44:31.581]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.581]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:44:31.581]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:44:31.582]    </block>
[01:44:31.582]  </sequence>
[01:44:31.582]  
[01:50:31.747]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:50:31.747]  
[01:50:31.748]  <debugvars>
[01:50:31.748]    // Pre-defined
[01:50:31.748]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:50:31.748]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:50:31.749]    __dp=0x00000000
[01:50:31.749]    __ap=0x00000000
[01:50:31.749]    __traceout=0x00000001      (SWO Trace)
[01:50:31.749]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:50:31.750]    __FlashAddr=0x00000000
[01:50:31.750]    __FlashLen=0x00000000
[01:50:31.750]    __FlashArg=0x00000000
[01:50:31.750]    __FlashOp=0x00000000
[01:50:31.750]    __Result=0x00000000
[01:50:31.750]    
[01:50:31.750]    // User-defined
[01:50:31.751]    DbgMCU_CR=0x00000007
[01:50:31.751]    DbgMCU_APB1_Fz=0x00000000
[01:50:31.751]    DbgMCU_APB2_Fz=0x00000000
[01:50:31.751]    TraceClk_Pin=0x00040002
[01:50:31.751]    TraceD0_Pin=0x00040003
[01:50:31.752]    TraceD1_Pin=0x00040004
[01:50:31.752]    TraceD2_Pin=0x00040005
[01:50:31.752]    TraceD3_Pin=0x00040006
[01:50:31.752]  </debugvars>
[01:50:31.752]  
[01:50:31.753]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:50:31.753]    <block atomic="false" info="">
[01:50:31.753]      Sequence("CheckID");
[01:50:31.753]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:50:31.753]          <block atomic="false" info="">
[01:50:31.753]            __var pidr1 = 0;
[01:50:31.754]              // -> [pidr1 <= 0x00000000]
[01:50:31.754]            __var pidr2 = 0;
[01:50:31.754]              // -> [pidr2 <= 0x00000000]
[01:50:31.754]            __var jep106id = 0;
[01:50:31.754]              // -> [jep106id <= 0x00000000]
[01:50:31.754]            __var ROMTableBase = 0;
[01:50:31.755]              // -> [ROMTableBase <= 0x00000000]
[01:50:31.755]            __ap = 0;      // AHB-AP
[01:50:31.755]              // -> [__ap <= 0x00000000]
[01:50:31.755]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:50:31.756]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.756]              // -> [ROMTableBase <= 0xE00FD000]
[01:50:31.756]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:50:31.756]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.757]              // -> [pidr1 <= 0x00000004]
[01:50:31.757]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:50:31.757]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.757]              // -> [pidr2 <= 0x0000001A]
[01:50:31.757]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:50:31.758]              // -> [jep106id <= 0x00000020]
[01:50:31.758]          </block>
[01:50:31.758]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:50:31.758]            // if-block "jep106id != 0x20"
[01:50:31.758]              // =>  FALSE
[01:50:31.758]            // skip if-block "jep106id != 0x20"
[01:50:31.758]          </control>
[01:50:31.759]        </sequence>
[01:50:31.759]    </block>
[01:50:31.759]  </sequence>
[01:50:31.759]  
[01:50:31.774]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:50:31.774]  
[01:50:31.774]  <debugvars>
[01:50:31.774]    // Pre-defined
[01:50:31.774]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:50:31.775]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:50:31.775]    __dp=0x00000000
[01:50:31.775]    __ap=0x00000000
[01:50:31.775]    __traceout=0x00000001      (SWO Trace)
[01:50:31.775]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:50:31.775]    __FlashAddr=0x00000000
[01:50:31.776]    __FlashLen=0x00000000
[01:50:31.776]    __FlashArg=0x00000000
[01:50:31.776]    __FlashOp=0x00000000
[01:50:31.776]    __Result=0x00000000
[01:50:31.776]    
[01:50:31.776]    // User-defined
[01:50:31.777]    DbgMCU_CR=0x00000007
[01:50:31.777]    DbgMCU_APB1_Fz=0x00000000
[01:50:31.777]    DbgMCU_APB2_Fz=0x00000000
[01:50:31.777]    TraceClk_Pin=0x00040002
[01:50:31.777]    TraceD0_Pin=0x00040003
[01:50:31.777]    TraceD1_Pin=0x00040004
[01:50:31.777]    TraceD2_Pin=0x00040005
[01:50:31.778]    TraceD3_Pin=0x00040006
[01:50:31.778]  </debugvars>
[01:50:31.778]  
[01:50:31.778]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:50:31.778]    <block atomic="false" info="">
[01:50:31.778]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:50:31.779]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.779]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:50:31.780]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.780]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:50:31.780]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.781]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:50:31.781]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:50:31.781]    </block>
[01:50:31.781]  </sequence>
[01:50:31.781]  
[01:56:09.033]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[01:56:09.033]  
[01:56:09.033]  <debugvars>
[01:56:09.033]    // Pre-defined
[01:56:09.033]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:56:09.034]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:56:09.034]    __dp=0x00000000
[01:56:09.034]    __ap=0x00000000
[01:56:09.034]    __traceout=0x00000001      (SWO Trace)
[01:56:09.034]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:56:09.035]    __FlashAddr=0x00000000
[01:56:09.035]    __FlashLen=0x00000000
[01:56:09.035]    __FlashArg=0x00000000
[01:56:09.035]    __FlashOp=0x00000000
[01:56:09.035]    __Result=0x00000000
[01:56:09.036]    
[01:56:09.036]    // User-defined
[01:56:09.036]    DbgMCU_CR=0x00000007
[01:56:09.036]    DbgMCU_APB1_Fz=0x00000000
[01:56:09.036]    DbgMCU_APB2_Fz=0x00000000
[01:56:09.036]    TraceClk_Pin=0x00040002
[01:56:09.037]    TraceD0_Pin=0x00040003
[01:56:09.037]    TraceD1_Pin=0x00040004
[01:56:09.037]    TraceD2_Pin=0x00040005
[01:56:09.037]    TraceD3_Pin=0x00040006
[01:56:09.037]  </debugvars>
[01:56:09.037]  
[01:56:09.038]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[01:56:09.038]    <block atomic="false" info="">
[01:56:09.038]      Sequence("CheckID");
[01:56:09.038]        <sequence name="CheckID" Pname="" disable="false" info="">
[01:56:09.038]          <block atomic="false" info="">
[01:56:09.038]            __var pidr1 = 0;
[01:56:09.039]              // -> [pidr1 <= 0x00000000]
[01:56:09.039]            __var pidr2 = 0;
[01:56:09.039]              // -> [pidr2 <= 0x00000000]
[01:56:09.039]            __var jep106id = 0;
[01:56:09.039]              // -> [jep106id <= 0x00000000]
[01:56:09.039]            __var ROMTableBase = 0;
[01:56:09.040]              // -> [ROMTableBase <= 0x00000000]
[01:56:09.040]            __ap = 0;      // AHB-AP
[01:56:09.040]              // -> [__ap <= 0x00000000]
[01:56:09.040]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[01:56:09.040]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.041]              // -> [ROMTableBase <= 0xE00FD000]
[01:56:09.041]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[01:56:09.041]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.042]              // -> [pidr1 <= 0x00000004]
[01:56:09.042]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[01:56:09.042]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.042]              // -> [pidr2 <= 0x0000001A]
[01:56:09.043]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[01:56:09.043]              // -> [jep106id <= 0x00000020]
[01:56:09.043]          </block>
[01:56:09.043]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[01:56:09.043]            // if-block "jep106id != 0x20"
[01:56:09.043]              // =>  FALSE
[01:56:09.044]            // skip if-block "jep106id != 0x20"
[01:56:09.044]          </control>
[01:56:09.044]        </sequence>
[01:56:09.044]    </block>
[01:56:09.044]  </sequence>
[01:56:09.044]  
[01:56:09.059]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[01:56:09.059]  
[01:56:09.060]  <debugvars>
[01:56:09.060]    // Pre-defined
[01:56:09.060]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[01:56:09.060]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[01:56:09.060]    __dp=0x00000000
[01:56:09.060]    __ap=0x00000000
[01:56:09.061]    __traceout=0x00000001      (SWO Trace)
[01:56:09.061]    __errorcontrol=0x00000000  (Skip Errors="False")
[01:56:09.061]    __FlashAddr=0x00000000
[01:56:09.061]    __FlashLen=0x00000000
[01:56:09.061]    __FlashArg=0x00000000
[01:56:09.061]    __FlashOp=0x00000000
[01:56:09.062]    __Result=0x00000000
[01:56:09.062]    
[01:56:09.062]    // User-defined
[01:56:09.062]    DbgMCU_CR=0x00000007
[01:56:09.062]    DbgMCU_APB1_Fz=0x00000000
[01:56:09.062]    DbgMCU_APB2_Fz=0x00000000
[01:56:09.062]    TraceClk_Pin=0x00040002
[01:56:09.063]    TraceD0_Pin=0x00040003
[01:56:09.063]    TraceD1_Pin=0x00040004
[01:56:09.063]    TraceD2_Pin=0x00040005
[01:56:09.063]    TraceD3_Pin=0x00040006
[01:56:09.063]  </debugvars>
[01:56:09.064]  
[01:56:09.064]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[01:56:09.064]    <block atomic="false" info="">
[01:56:09.064]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[01:56:09.065]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.065]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[01:56:09.066]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.066]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[01:56:09.066]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.066]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[01:56:09.067]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[01:56:09.067]    </block>
[01:56:09.067]  </sequence>
[01:56:09.067]  
[02:02:08.663]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:02:08.663]  
[02:02:08.663]  <debugvars>
[02:02:08.663]    // Pre-defined
[02:02:08.664]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:08.664]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:02:08.664]    __dp=0x00000000
[02:02:08.664]    __ap=0x00000000
[02:02:08.664]    __traceout=0x00000001      (SWO Trace)
[02:02:08.665]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:08.665]    __FlashAddr=0x00000000
[02:02:08.665]    __FlashLen=0x00000000
[02:02:08.665]    __FlashArg=0x00000000
[02:02:08.665]    __FlashOp=0x00000000
[02:02:08.666]    __Result=0x00000000
[02:02:08.667]    
[02:02:08.667]    // User-defined
[02:02:08.667]    DbgMCU_CR=0x00000007
[02:02:08.667]    DbgMCU_APB1_Fz=0x00000000
[02:02:08.667]    DbgMCU_APB2_Fz=0x00000000
[02:02:08.667]    TraceClk_Pin=0x00040002
[02:02:08.667]    TraceD0_Pin=0x00040003
[02:02:08.667]    TraceD1_Pin=0x00040004
[02:02:08.668]    TraceD2_Pin=0x00040005
[02:02:08.668]    TraceD3_Pin=0x00040006
[02:02:08.668]  </debugvars>
[02:02:08.668]  
[02:02:08.668]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:02:08.669]    <block atomic="false" info="">
[02:02:08.669]      Sequence("CheckID");
[02:02:08.669]        <sequence name="CheckID" Pname="" disable="false" info="">
[02:02:08.669]          <block atomic="false" info="">
[02:02:08.669]            __var pidr1 = 0;
[02:02:08.669]              // -> [pidr1 <= 0x00000000]
[02:02:08.670]            __var pidr2 = 0;
[02:02:08.670]              // -> [pidr2 <= 0x00000000]
[02:02:08.670]            __var jep106id = 0;
[02:02:08.670]              // -> [jep106id <= 0x00000000]
[02:02:08.670]            __var ROMTableBase = 0;
[02:02:08.670]              // -> [ROMTableBase <= 0x00000000]
[02:02:08.671]            __ap = 0;      // AHB-AP
[02:02:08.671]              // -> [__ap <= 0x00000000]
[02:02:08.671]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[02:02:08.671]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.672]              // -> [ROMTableBase <= 0xE00FD000]
[02:02:08.672]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[02:02:08.672]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.673]              // -> [pidr1 <= 0x00000004]
[02:02:08.673]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[02:02:08.673]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.673]              // -> [pidr2 <= 0x0000001A]
[02:02:08.674]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[02:02:08.674]              // -> [jep106id <= 0x00000020]
[02:02:08.674]          </block>
[02:02:08.674]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[02:02:08.674]            // if-block "jep106id != 0x20"
[02:02:08.674]              // =>  FALSE
[02:02:08.675]            // skip if-block "jep106id != 0x20"
[02:02:08.675]          </control>
[02:02:08.675]        </sequence>
[02:02:08.675]    </block>
[02:02:08.675]  </sequence>
[02:02:08.675]  
[02:02:08.690]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[02:02:08.690]  
[02:02:08.691]  <debugvars>
[02:02:08.691]    // Pre-defined
[02:02:08.691]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:08.691]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:02:08.691]    __dp=0x00000000
[02:02:08.692]    __ap=0x00000000
[02:02:08.692]    __traceout=0x00000001      (SWO Trace)
[02:02:08.692]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:08.692]    __FlashAddr=0x00000000
[02:02:08.692]    __FlashLen=0x00000000
[02:02:08.692]    __FlashArg=0x00000000
[02:02:08.693]    __FlashOp=0x00000000
[02:02:08.693]    __Result=0x00000000
[02:02:08.693]    
[02:02:08.693]    // User-defined
[02:02:08.693]    DbgMCU_CR=0x00000007
[02:02:08.693]    DbgMCU_APB1_Fz=0x00000000
[02:02:08.693]    DbgMCU_APB2_Fz=0x00000000
[02:02:08.694]    TraceClk_Pin=0x00040002
[02:02:08.694]    TraceD0_Pin=0x00040003
[02:02:08.694]    TraceD1_Pin=0x00040004
[02:02:08.694]    TraceD2_Pin=0x00040005
[02:02:08.694]    TraceD3_Pin=0x00040006
[02:02:08.694]  </debugvars>
[02:02:08.694]  
[02:02:08.695]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[02:02:08.695]    <block atomic="false" info="">
[02:02:08.695]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[02:02:08.695]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.696]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[02:02:08.696]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.696]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[02:02:08.697]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.697]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[02:02:08.698]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:08.698]    </block>
[02:02:08.698]  </sequence>
[02:02:08.698]  
[02:02:39.612]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:02:39.612]  
[02:02:39.613]  <debugvars>
[02:02:39.613]    // Pre-defined
[02:02:39.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:39.613]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[02:02:39.613]    __dp=0x00000000
[02:02:39.613]    __ap=0x00000000
[02:02:39.614]    __traceout=0x00000001      (SWO Trace)
[02:02:39.614]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:39.614]    __FlashAddr=0x00000000
[02:02:39.614]    __FlashLen=0x00000000
[02:02:39.614]    __FlashArg=0x00000000
[02:02:39.614]    __FlashOp=0x00000000
[02:02:39.615]    __Result=0x00000000
[02:02:39.615]    
[02:02:39.615]    // User-defined
[02:02:39.615]    DbgMCU_CR=0x00000007
[02:02:39.615]    DbgMCU_APB1_Fz=0x00000000
[02:02:39.615]    DbgMCU_APB2_Fz=0x00000000
[02:02:39.616]    TraceClk_Pin=0x00040002
[02:02:39.616]    TraceD0_Pin=0x00040003
[02:02:39.616]    TraceD1_Pin=0x00040004
[02:02:39.616]    TraceD2_Pin=0x00040005
[02:02:39.616]    TraceD3_Pin=0x00040006
[02:02:39.616]  </debugvars>
[02:02:39.617]  
[02:02:39.617]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:02:39.617]    <block atomic="false" info="">
[02:02:39.617]      Sequence("CheckID");
[02:02:39.617]        <sequence name="CheckID" Pname="" disable="false" info="">
[02:02:39.617]          <block atomic="false" info="">
[02:02:39.618]            __var pidr1 = 0;
[02:02:39.618]              // -> [pidr1 <= 0x00000000]
[02:02:39.618]            __var pidr2 = 0;
[02:02:39.618]              // -> [pidr2 <= 0x00000000]
[02:02:39.618]            __var jep106id = 0;
[02:02:39.618]              // -> [jep106id <= 0x00000000]
[02:02:39.618]            __var ROMTableBase = 0;
[02:02:39.619]              // -> [ROMTableBase <= 0x00000000]
[02:02:39.619]            __ap = 0;      // AHB-AP
[02:02:39.619]              // -> [__ap <= 0x00000000]
[02:02:39.619]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[02:02:39.619]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.620]              // -> [ROMTableBase <= 0xE00FD000]
[02:02:39.620]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[02:02:39.620]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.620]              // -> [pidr1 <= 0x00000004]
[02:02:39.621]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[02:02:39.621]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.621]              // -> [pidr2 <= 0x0000001A]
[02:02:39.621]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[02:02:39.621]              // -> [jep106id <= 0x00000020]
[02:02:39.622]          </block>
[02:02:39.622]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[02:02:39.622]            // if-block "jep106id != 0x20"
[02:02:39.622]              // =>  FALSE
[02:02:39.622]            // skip if-block "jep106id != 0x20"
[02:02:39.622]          </control>
[02:02:39.622]        </sequence>
[02:02:39.622]    </block>
[02:02:39.623]  </sequence>
[02:02:39.623]  
[02:02:39.637]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[02:02:39.637]  
[02:02:39.637]  <debugvars>
[02:02:39.637]    // Pre-defined
[02:02:39.637]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:39.637]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[02:02:39.638]    __dp=0x00000000
[02:02:39.638]    __ap=0x00000000
[02:02:39.638]    __traceout=0x00000001      (SWO Trace)
[02:02:39.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:39.638]    __FlashAddr=0x00000000
[02:02:39.638]    __FlashLen=0x00000000
[02:02:39.639]    __FlashArg=0x00000000
[02:02:39.639]    __FlashOp=0x00000000
[02:02:39.639]    __Result=0x00000000
[02:02:39.639]    
[02:02:39.639]    // User-defined
[02:02:39.639]    DbgMCU_CR=0x00000007
[02:02:39.639]    DbgMCU_APB1_Fz=0x00000000
[02:02:39.640]    DbgMCU_APB2_Fz=0x00000000
[02:02:39.640]    TraceClk_Pin=0x00040002
[02:02:39.640]    TraceD0_Pin=0x00040003
[02:02:39.640]    TraceD1_Pin=0x00040004
[02:02:39.640]    TraceD2_Pin=0x00040005
[02:02:39.640]    TraceD3_Pin=0x00040006
[02:02:39.641]  </debugvars>
[02:02:39.641]  
[02:02:39.641]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[02:02:39.641]    <block atomic="false" info="">
[02:02:39.641]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[02:02:39.642]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.642]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[02:02:39.642]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.642]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[02:02:39.643]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.643]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[02:02:39.644]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.644]    </block>
[02:02:39.644]  </sequence>
[02:02:39.644]  
[02:02:39.661]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[02:02:39.661]  
[02:02:39.661]  <debugvars>
[02:02:39.661]    // Pre-defined
[02:02:39.661]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:39.661]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[02:02:39.662]    __dp=0x00000000
[02:02:39.662]    __ap=0x00000000
[02:02:39.662]    __traceout=0x00000001      (SWO Trace)
[02:02:39.662]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:39.662]    __FlashAddr=0x00000000
[02:02:39.663]    __FlashLen=0x00000000
[02:02:39.663]    __FlashArg=0x00000000
[02:02:39.663]    __FlashOp=0x00000000
[02:02:39.663]    __Result=0x00000000
[02:02:39.663]    
[02:02:39.663]    // User-defined
[02:02:39.663]    DbgMCU_CR=0x00000007
[02:02:39.664]    DbgMCU_APB1_Fz=0x00000000
[02:02:39.664]    DbgMCU_APB2_Fz=0x00000000
[02:02:39.664]    TraceClk_Pin=0x00040002
[02:02:39.664]    TraceD0_Pin=0x00040003
[02:02:39.664]    TraceD1_Pin=0x00040004
[02:02:39.665]    TraceD2_Pin=0x00040005
[02:02:39.665]    TraceD3_Pin=0x00040006
[02:02:39.665]  </debugvars>
[02:02:39.665]  
[02:02:39.665]  <sequence name="TraceStart" Pname="" disable="false" info="">
[02:02:39.666]    <block atomic="false" info="">
[02:02:39.666]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[02:02:39.666]        // -> [traceSWO <= 0x00000001]
[02:02:39.666]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[02:02:39.666]        // -> [traceTPIU <= 0x00000000]
[02:02:39.667]    </block>
[02:02:39.667]    <control if="traceSWO" while="" timeout="0" info="">
[02:02:39.667]      // if-block "traceSWO"
[02:02:39.667]        // =>  TRUE
[02:02:39.667]      <block atomic="false" info="">
[02:02:39.667]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[02:02:39.668]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[02:02:39.668]            <block atomic="false" info="">
[02:02:39.668]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[02:02:39.668]                // -> [dbgmcu_val <= 0x00000000]
[02:02:39.668]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[02:02:39.668]                // -> [dbgmcu_trace_val <= 0x00000000]
[02:02:39.669]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[02:02:39.669]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.669]                // -> [dbgmcu_val <= 0x00000007]
[02:02:39.670]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[02:02:39.670]                // -> [dbgmcu_trace_val <= 0x00000020]
[02:02:39.670]              Sequence("ConfigureTraceSWOPin");
[02:02:39.670]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[02:02:39.670]                  <block atomic="false" info="">
[02:02:39.670]                    __var pin     = 0;
[02:02:39.671]                      // -> [pin <= 0x00000000]
[02:02:39.671]                    __var port    = 0;
[02:02:39.671]                      // -> [port <= 0x00000000]
[02:02:39.671]                    __var portAdr = 0;
[02:02:39.671]                      // -> [portAdr <= 0x00000000]
[02:02:39.671]                    __var pos     = 0;
[02:02:39.671]                      // -> [pos <= 0x00000000]
[02:02:39.671]                    __var SWO_Pin = 0x00010003;          // PB3
[02:02:39.672]                      // -> [SWO_Pin <= 0x00010003]
[02:02:39.672]                  </block>
[02:02:39.672]                  <block atomic="false" info="configure SWO">
[02:02:39.672]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[02:02:39.672]                      // -> [pin <= 0x00000003]
[02:02:39.672]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[02:02:39.672]                      // -> [port <= 0x00000001]
[02:02:39.673]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[02:02:39.673]                      // -> [portAdr <= 0x40020400]
[02:02:39.673]                    pos = pin * 2;
[02:02:39.673]                      // -> [pos <= 0x00000006]
[02:02:39.673]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[02:02:39.674]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.674]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.674]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[02:02:39.674]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.675]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.675]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[02:02:39.675]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.676]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.676]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[02:02:39.676]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.677]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.677]                  </block>
[02:02:39.677]                  <control if="pin <  8" while="" timeout="0" info="">
[02:02:39.677]                    // if-block "pin <  8"
[02:02:39.677]                      // =>  TRUE
[02:02:39.678]                    <block atomic="false" info="">
[02:02:39.678]                      pos = ((pin    ) & 7) * 4;
[02:02:39.678]                        // -> [pos <= 0x0000000C]
[02:02:39.678]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[02:02:39.678]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.679]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.679]                    </block>
[02:02:39.679]                    // end if-block "pin <  8"
[02:02:39.679]                  </control>
[02:02:39.679]                  <control if="pin >= 8" while="" timeout="0" info="">
[02:02:39.679]                    // if-block "pin >= 8"
[02:02:39.680]                      // =>  FALSE
[02:02:39.680]                    // skip if-block "pin >= 8"
[02:02:39.680]                  </control>
[02:02:39.680]                </sequence>
[02:02:39.680]            </block>
[02:02:39.680]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[02:02:39.680]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[02:02:39.681]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.681]            </block>
[02:02:39.681]          </sequence>
[02:02:39.681]      </block>
[02:02:39.681]      // end if-block "traceSWO"
[02:02:39.681]    </control>
[02:02:39.681]    <control if="traceTPIU" while="" timeout="0" info="">
[02:02:39.682]      // if-block "traceTPIU"
[02:02:39.682]        // =>  FALSE
[02:02:39.682]      // skip if-block "traceTPIU"
[02:02:39.682]    </control>
[02:02:39.682]  </sequence>
[02:02:39.682]  
[02:02:39.686]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[02:02:39.686]  
[02:02:39.686]  <debugvars>
[02:02:39.686]    // Pre-defined
[02:02:39.686]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:39.686]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[02:02:39.687]    __dp=0x00000000
[02:02:39.687]    __ap=0x00000000
[02:02:39.687]    __traceout=0x00000001      (SWO Trace)
[02:02:39.687]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:39.687]    __FlashAddr=0x00000000
[02:02:39.688]    __FlashLen=0x00000000
[02:02:39.688]    __FlashArg=0x00000000
[02:02:39.688]    __FlashOp=0x00000000
[02:02:39.688]    __Result=0x00000000
[02:02:39.689]    
[02:02:39.689]    // User-defined
[02:02:39.689]    DbgMCU_CR=0x00000007
[02:02:39.689]    DbgMCU_APB1_Fz=0x00000000
[02:02:39.689]    DbgMCU_APB2_Fz=0x00000000
[02:02:39.689]    TraceClk_Pin=0x00040002
[02:02:39.690]    TraceD0_Pin=0x00040003
[02:02:39.690]    TraceD1_Pin=0x00040004
[02:02:39.690]    TraceD2_Pin=0x00040005
[02:02:39.690]    TraceD3_Pin=0x00040006
[02:02:39.690]  </debugvars>
[02:02:39.691]  
[02:02:39.691]  <sequence name="TraceStart" Pname="" disable="false" info="">
[02:02:39.691]    <block atomic="false" info="">
[02:02:39.691]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[02:02:39.691]        // -> [traceSWO <= 0x00000001]
[02:02:39.692]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[02:02:39.692]        // -> [traceTPIU <= 0x00000000]
[02:02:39.692]    </block>
[02:02:39.692]    <control if="traceSWO" while="" timeout="0" info="">
[02:02:39.692]      // if-block "traceSWO"
[02:02:39.692]        // =>  TRUE
[02:02:39.693]      <block atomic="false" info="">
[02:02:39.693]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[02:02:39.693]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[02:02:39.693]            <block atomic="false" info="">
[02:02:39.693]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[02:02:39.693]                // -> [dbgmcu_val <= 0x00000000]
[02:02:39.694]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[02:02:39.694]                // -> [dbgmcu_trace_val <= 0x00000000]
[02:02:39.694]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[02:02:39.695]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.695]                // -> [dbgmcu_val <= 0x00000007]
[02:02:39.695]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[02:02:39.695]                // -> [dbgmcu_trace_val <= 0x00000020]
[02:02:39.695]              Sequence("ConfigureTraceSWOPin");
[02:02:39.695]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[02:02:39.695]                  <block atomic="false" info="">
[02:02:39.696]                    __var pin     = 0;
[02:02:39.696]                      // -> [pin <= 0x00000000]
[02:02:39.696]                    __var port    = 0;
[02:02:39.696]                      // -> [port <= 0x00000000]
[02:02:39.696]                    __var portAdr = 0;
[02:02:39.696]                      // -> [portAdr <= 0x00000000]
[02:02:39.696]                    __var pos     = 0;
[02:02:39.696]                      // -> [pos <= 0x00000000]
[02:02:39.697]                    __var SWO_Pin = 0x00010003;          // PB3
[02:02:39.697]                      // -> [SWO_Pin <= 0x00010003]
[02:02:39.697]                  </block>
[02:02:39.697]                  <block atomic="false" info="configure SWO">
[02:02:39.697]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[02:02:39.697]                      // -> [pin <= 0x00000003]
[02:02:39.697]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[02:02:39.697]                      // -> [port <= 0x00000001]
[02:02:39.698]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[02:02:39.698]                      // -> [portAdr <= 0x40020400]
[02:02:39.698]                    pos = pin * 2;
[02:02:39.698]                      // -> [pos <= 0x00000006]
[02:02:39.698]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[02:02:39.698]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.699]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.699]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[02:02:39.699]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.700]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.700]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[02:02:39.700]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.701]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.701]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[02:02:39.701]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.702]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.702]                  </block>
[02:02:39.702]                  <control if="pin <  8" while="" timeout="0" info="">
[02:02:39.702]                    // if-block "pin <  8"
[02:02:39.702]                      // =>  TRUE
[02:02:39.702]                    <block atomic="false" info="">
[02:02:39.702]                      pos = ((pin    ) & 7) * 4;
[02:02:39.703]                        // -> [pos <= 0x0000000C]
[02:02:39.703]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[02:02:39.703]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.704]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.704]                    </block>
[02:02:39.704]                    // end if-block "pin <  8"
[02:02:39.704]                  </control>
[02:02:39.704]                  <control if="pin >= 8" while="" timeout="0" info="">
[02:02:39.704]                    // if-block "pin >= 8"
[02:02:39.704]                      // =>  FALSE
[02:02:39.704]                    // skip if-block "pin >= 8"
[02:02:39.704]                  </control>
[02:02:39.705]                </sequence>
[02:02:39.705]            </block>
[02:02:39.705]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[02:02:39.705]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[02:02:39.705]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.705]            </block>
[02:02:39.706]          </sequence>
[02:02:39.706]      </block>
[02:02:39.706]      // end if-block "traceSWO"
[02:02:39.706]    </control>
[02:02:39.706]    <control if="traceTPIU" while="" timeout="0" info="">
[02:02:39.706]      // if-block "traceTPIU"
[02:02:39.706]        // =>  FALSE
[02:02:39.706]      // skip if-block "traceTPIU"
[02:02:39.707]    </control>
[02:02:39.707]  </sequence>
[02:02:39.707]  
[02:02:39.928]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[02:02:39.928]  
[02:02:39.928]  <debugvars>
[02:02:39.929]    // Pre-defined
[02:02:39.929]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:02:39.929]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[02:02:39.929]    __dp=0x00000000
[02:02:39.929]    __ap=0x00000000
[02:02:39.930]    __traceout=0x00000001      (SWO Trace)
[02:02:39.930]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:02:39.930]    __FlashAddr=0x00000000
[02:02:39.931]    __FlashLen=0x00000000
[02:02:39.931]    __FlashArg=0x00000000
[02:02:39.931]    __FlashOp=0x00000000
[02:02:39.931]    __Result=0x00000000
[02:02:39.931]    
[02:02:39.931]    // User-defined
[02:02:39.931]    DbgMCU_CR=0x00000007
[02:02:39.932]    DbgMCU_APB1_Fz=0x00000000
[02:02:39.932]    DbgMCU_APB2_Fz=0x00000000
[02:02:39.932]    TraceClk_Pin=0x00040002
[02:02:39.932]    TraceD0_Pin=0x00040003
[02:02:39.932]    TraceD1_Pin=0x00040004
[02:02:39.932]    TraceD2_Pin=0x00040005
[02:02:39.932]    TraceD3_Pin=0x00040006
[02:02:39.933]  </debugvars>
[02:02:39.933]  
[02:02:39.933]  <sequence name="TraceStart" Pname="" disable="false" info="">
[02:02:39.933]    <block atomic="false" info="">
[02:02:39.933]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[02:02:39.933]        // -> [traceSWO <= 0x00000001]
[02:02:39.933]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[02:02:39.934]        // -> [traceTPIU <= 0x00000000]
[02:02:39.934]    </block>
[02:02:39.934]    <control if="traceSWO" while="" timeout="0" info="">
[02:02:39.934]      // if-block "traceSWO"
[02:02:39.934]        // =>  TRUE
[02:02:39.934]      <block atomic="false" info="">
[02:02:39.934]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[02:02:39.935]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[02:02:39.935]            <block atomic="false" info="">
[02:02:39.935]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[02:02:39.935]                // -> [dbgmcu_val <= 0x00000000]
[02:02:39.935]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[02:02:39.935]                // -> [dbgmcu_trace_val <= 0x00000000]
[02:02:39.935]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[02:02:39.936]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.936]                // -> [dbgmcu_val <= 0x00000007]
[02:02:39.936]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[02:02:39.936]                // -> [dbgmcu_trace_val <= 0x00000020]
[02:02:39.936]              Sequence("ConfigureTraceSWOPin");
[02:02:39.936]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[02:02:39.937]                  <block atomic="false" info="">
[02:02:39.937]                    __var pin     = 0;
[02:02:39.937]                      // -> [pin <= 0x00000000]
[02:02:39.937]                    __var port    = 0;
[02:02:39.937]                      // -> [port <= 0x00000000]
[02:02:39.937]                    __var portAdr = 0;
[02:02:39.937]                      // -> [portAdr <= 0x00000000]
[02:02:39.937]                    __var pos     = 0;
[02:02:39.938]                      // -> [pos <= 0x00000000]
[02:02:39.938]                    __var SWO_Pin = 0x00010003;          // PB3
[02:02:39.938]                      // -> [SWO_Pin <= 0x00010003]
[02:02:39.938]                  </block>
[02:02:39.938]                  <block atomic="false" info="configure SWO">
[02:02:39.938]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[02:02:39.938]                      // -> [pin <= 0x00000003]
[02:02:39.939]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[02:02:39.939]                      // -> [port <= 0x00000001]
[02:02:39.939]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[02:02:39.939]                      // -> [portAdr <= 0x40020400]
[02:02:39.939]                    pos = pin * 2;
[02:02:39.939]                      // -> [pos <= 0x00000006]
[02:02:39.939]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[02:02:39.940]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.940]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.940]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[02:02:39.941]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.941]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.941]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[02:02:39.942]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.942]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.942]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[02:02:39.943]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.943]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.943]                  </block>
[02:02:39.943]                  <control if="pin <  8" while="" timeout="0" info="">
[02:02:39.943]                    // if-block "pin <  8"
[02:02:39.944]                      // =>  TRUE
[02:02:39.944]                    <block atomic="false" info="">
[02:02:39.944]                      pos = ((pin    ) & 7) * 4;
[02:02:39.944]                        // -> [pos <= 0x0000000C]
[02:02:39.944]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[02:02:39.944]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.945]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.945]                    </block>
[02:02:39.945]                    // end if-block "pin <  8"
[02:02:39.945]                  </control>
[02:02:39.945]                  <control if="pin >= 8" while="" timeout="0" info="">
[02:02:39.945]                    // if-block "pin >= 8"
[02:02:39.946]                      // =>  FALSE
[02:02:39.946]                    // skip if-block "pin >= 8"
[02:02:39.946]                  </control>
[02:02:39.946]                </sequence>
[02:02:39.946]            </block>
[02:02:39.946]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[02:02:39.946]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[02:02:39.947]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[02:02:39.947]            </block>
[02:02:39.947]          </sequence>
[02:02:39.947]      </block>
[02:02:39.947]      // end if-block "traceSWO"
[02:02:39.947]    </control>
[02:02:39.947]    <control if="traceTPIU" while="" timeout="0" info="">
[02:02:39.947]      // if-block "traceTPIU"
[02:02:39.948]        // =>  FALSE
[02:02:39.948]      // skip if-block "traceTPIU"
[02:02:39.948]    </control>
[02:02:39.948]  </sequence>
[02:02:39.948]  
[02:10:59.767]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[02:10:59.767]  
[02:10:59.767]  <debugvars>
[02:10:59.768]    // Pre-defined
[02:10:59.768]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:10:59.768]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[02:10:59.768]    __dp=0x00000000
[02:10:59.768]    __ap=0x00000000
[02:10:59.769]    __traceout=0x00000001      (SWO Trace)
[02:10:59.769]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:10:59.769]    __FlashAddr=0x00000000
[02:10:59.769]    __FlashLen=0x00000000
[02:10:59.769]    __FlashArg=0x00000000
[02:10:59.769]    __FlashOp=0x00000000
[02:10:59.770]    __Result=0x00000000
[02:10:59.770]    
[02:10:59.770]    // User-defined
[02:10:59.770]    DbgMCU_CR=0x00000007
[02:10:59.770]    DbgMCU_APB1_Fz=0x00000000
[02:10:59.770]    DbgMCU_APB2_Fz=0x00000000
[02:10:59.771]    TraceClk_Pin=0x00040002
[02:10:59.771]    TraceD0_Pin=0x00040003
[02:10:59.771]    TraceD1_Pin=0x00040004
[02:10:59.771]    TraceD2_Pin=0x00040005
[02:10:59.771]    TraceD3_Pin=0x00040006
[02:10:59.771]  </debugvars>
[02:10:59.772]  
[02:10:59.772]  <sequence name="TraceStop" Pname="" disable="false" info="">
[02:10:59.772]    <block atomic="false" info="">
[02:10:59.772]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[02:10:59.772]        // -> [traceSWO <= 0x00000001]
[02:10:59.773]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[02:10:59.773]        // -> [traceTPIU <= 0x00000000]
[02:10:59.773]    </block>
[02:10:59.773]    <control if="traceSWO" while="" timeout="0" info="">
[02:10:59.773]      // if-block "traceSWO"
[02:10:59.774]        // =>  TRUE
[02:10:59.774]      <block atomic="false" info="">
[02:10:59.774]        Sequence("DisableTraceSWO");
[02:10:59.774]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[02:10:59.774]            <block atomic="false" info="">
[02:10:59.774]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[02:10:59.774]                // -> [dbgmcu_val <= 0x00000000]
[02:10:59.774]            </block>
[02:10:59.775]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[02:10:59.775]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[02:10:59.775]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[02:10:59.775]                // -> [dbgmcu_val <= 0x00000007]
[02:10:59.775]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[02:10:59.776]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[02:10:59.776]            </block>
[02:10:59.776]          </sequence>
[02:10:59.776]      </block>
[02:10:59.776]      // end if-block "traceSWO"
[02:10:59.776]    </control>
[02:10:59.777]    <control if="traceTPIU" while="" timeout="0" info="">
[02:10:59.777]      // if-block "traceTPIU"
[02:10:59.777]        // =>  FALSE
[02:10:59.777]      // skip if-block "traceTPIU"
[02:10:59.777]    </control>
[02:10:59.777]  </sequence>
[02:10:59.777]  
[02:11:13.319]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:11:13.319]  
[02:11:13.320]  <debugvars>
[02:11:13.320]    // Pre-defined
[02:11:13.320]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:11:13.320]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:11:13.320]    __dp=0x00000000
[02:11:13.321]    __ap=0x00000000
[02:11:13.321]    __traceout=0x00000001      (SWO Trace)
[02:11:13.321]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:11:13.321]    __FlashAddr=0x00000000
[02:11:13.321]    __FlashLen=0x00000000
[02:11:13.322]    __FlashArg=0x00000000
[02:11:13.322]    __FlashOp=0x00000000
[02:11:13.322]    __Result=0x00000000
[02:11:13.322]    
[02:11:13.322]    // User-defined
[02:11:13.322]    DbgMCU_CR=0x00000007
[02:11:13.322]    DbgMCU_APB1_Fz=0x00000000
[02:11:13.323]    DbgMCU_APB2_Fz=0x00000000
[02:11:13.323]    TraceClk_Pin=0x00040002
[02:11:13.323]    TraceD0_Pin=0x00040003
[02:11:13.323]    TraceD1_Pin=0x00040004
[02:11:13.323]    TraceD2_Pin=0x00040005
[02:11:13.324]    TraceD3_Pin=0x00040006
[02:11:13.324]  </debugvars>
[02:11:13.324]  
[02:11:13.324]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:11:13.324]    <block atomic="false" info="">
[02:11:13.324]      Sequence("CheckID");
[02:11:13.325]        <sequence name="CheckID" Pname="" disable="false" info="">
[02:11:13.325]          <block atomic="false" info="">
[02:11:13.325]            __var pidr1 = 0;
[02:11:13.325]              // -> [pidr1 <= 0x00000000]
[02:11:13.325]            __var pidr2 = 0;
[02:11:13.325]              // -> [pidr2 <= 0x00000000]
[02:11:13.326]            __var jep106id = 0;
[02:11:13.326]              // -> [jep106id <= 0x00000000]
[02:11:13.326]            __var ROMTableBase = 0;
[02:11:13.326]              // -> [ROMTableBase <= 0x00000000]
[02:11:13.326]            __ap = 0;      // AHB-AP
[02:11:13.326]              // -> [__ap <= 0x00000000]
[02:11:13.326]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[02:11:13.327]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.327]              // -> [ROMTableBase <= 0xE00FD000]
[02:11:13.327]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[02:11:13.328]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.328]              // -> [pidr1 <= 0x00000004]
[02:11:13.328]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[02:11:13.328]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.329]              // -> [pidr2 <= 0x0000001A]
[02:11:13.329]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[02:11:13.329]              // -> [jep106id <= 0x00000020]
[02:11:13.329]          </block>
[02:11:13.329]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[02:11:13.329]            // if-block "jep106id != 0x20"
[02:11:13.330]              // =>  FALSE
[02:11:13.330]            // skip if-block "jep106id != 0x20"
[02:11:13.330]          </control>
[02:11:13.330]        </sequence>
[02:11:13.330]    </block>
[02:11:13.330]  </sequence>
[02:11:13.330]  
[02:11:13.346]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[02:11:13.346]  
[02:11:13.347]  <debugvars>
[02:11:13.347]    // Pre-defined
[02:11:13.347]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:11:13.347]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:11:13.347]    __dp=0x00000000
[02:11:13.348]    __ap=0x00000000
[02:11:13.348]    __traceout=0x00000001      (SWO Trace)
[02:11:13.348]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:11:13.348]    __FlashAddr=0x00000000
[02:11:13.348]    __FlashLen=0x00000000
[02:11:13.349]    __FlashArg=0x00000000
[02:11:13.349]    __FlashOp=0x00000000
[02:11:13.349]    __Result=0x00000000
[02:11:13.349]    
[02:11:13.349]    // User-defined
[02:11:13.349]    DbgMCU_CR=0x00000007
[02:11:13.350]    DbgMCU_APB1_Fz=0x00000000
[02:11:13.350]    DbgMCU_APB2_Fz=0x00000000
[02:11:13.350]    TraceClk_Pin=0x00040002
[02:11:13.350]    TraceD0_Pin=0x00040003
[02:11:13.350]    TraceD1_Pin=0x00040004
[02:11:13.351]    TraceD2_Pin=0x00040005
[02:11:13.351]    TraceD3_Pin=0x00040006
[02:11:13.351]  </debugvars>
[02:11:13.351]  
[02:11:13.351]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[02:11:13.351]    <block atomic="false" info="">
[02:11:13.352]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[02:11:13.352]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.352]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[02:11:13.353]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.353]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[02:11:13.354]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.354]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[02:11:13.354]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:11:13.354]    </block>
[02:11:13.354]  </sequence>
[02:11:13.354]  
[02:28:21.514]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:28:21.514]  
[02:28:21.514]  <debugvars>
[02:28:21.514]    // Pre-defined
[02:28:21.514]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:28:21.514]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:28:21.515]    __dp=0x00000000
[02:28:21.515]    __ap=0x00000000
[02:28:21.515]    __traceout=0x00000001      (SWO Trace)
[02:28:21.515]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:28:21.515]    __FlashAddr=0x00000000
[02:28:21.516]    __FlashLen=0x00000000
[02:28:21.516]    __FlashArg=0x00000000
[02:28:21.516]    __FlashOp=0x00000000
[02:28:21.516]    __Result=0x00000000
[02:28:21.516]    
[02:28:21.516]    // User-defined
[02:28:21.517]    DbgMCU_CR=0x00000007
[02:28:21.517]    DbgMCU_APB1_Fz=0x00000000
[02:28:21.517]    DbgMCU_APB2_Fz=0x00000000
[02:28:21.517]    TraceClk_Pin=0x00040002
[02:28:21.517]    TraceD0_Pin=0x00040003
[02:28:21.518]    TraceD1_Pin=0x00040004
[02:28:21.518]    TraceD2_Pin=0x00040005
[02:28:21.518]    TraceD3_Pin=0x00040006
[02:28:21.518]  </debugvars>
[02:28:21.518]  
[02:28:21.519]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:28:21.519]    <block atomic="false" info="">
[02:28:21.519]      Sequence("CheckID");
[02:28:21.519]        <sequence name="CheckID" Pname="" disable="false" info="">
[02:28:21.519]          <block atomic="false" info="">
[02:28:21.519]            __var pidr1 = 0;
[02:28:21.520]              // -> [pidr1 <= 0x00000000]
[02:28:21.520]            __var pidr2 = 0;
[02:28:21.520]              // -> [pidr2 <= 0x00000000]
[02:28:21.520]            __var jep106id = 0;
[02:28:21.520]              // -> [jep106id <= 0x00000000]
[02:28:21.521]            __var ROMTableBase = 0;
[02:28:21.521]              // -> [ROMTableBase <= 0x00000000]
[02:28:21.521]            __ap = 0;      // AHB-AP
[02:28:21.521]              // -> [__ap <= 0x00000000]
[02:28:21.521]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[02:28:21.522]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.522]              // -> [ROMTableBase <= 0xE00FD000]
[02:28:21.522]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[02:28:21.523]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.523]              // -> [pidr1 <= 0x00000004]
[02:28:21.523]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[02:28:21.524]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.524]              // -> [pidr2 <= 0x0000001A]
[02:28:21.524]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[02:28:21.524]              // -> [jep106id <= 0x00000020]
[02:28:21.524]          </block>
[02:28:21.525]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[02:28:21.525]            // if-block "jep106id != 0x20"
[02:28:21.525]              // =>  FALSE
[02:28:21.525]            // skip if-block "jep106id != 0x20"
[02:28:21.525]          </control>
[02:28:21.525]        </sequence>
[02:28:21.525]    </block>
[02:28:21.526]  </sequence>
[02:28:21.526]  
[02:28:21.541]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[02:28:21.541]  
[02:28:21.542]  <debugvars>
[02:28:21.542]    // Pre-defined
[02:28:21.542]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:28:21.542]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:28:21.542]    __dp=0x00000000
[02:28:21.542]    __ap=0x00000000
[02:28:21.543]    __traceout=0x00000001      (SWO Trace)
[02:28:21.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:28:21.543]    __FlashAddr=0x00000000
[02:28:21.543]    __FlashLen=0x00000000
[02:28:21.543]    __FlashArg=0x00000000
[02:28:21.543]    __FlashOp=0x00000000
[02:28:21.544]    __Result=0x00000000
[02:28:21.544]    
[02:28:21.544]    // User-defined
[02:28:21.544]    DbgMCU_CR=0x00000007
[02:28:21.544]    DbgMCU_APB1_Fz=0x00000000
[02:28:21.544]    DbgMCU_APB2_Fz=0x00000000
[02:28:21.544]    TraceClk_Pin=0x00040002
[02:28:21.545]    TraceD0_Pin=0x00040003
[02:28:21.545]    TraceD1_Pin=0x00040004
[02:28:21.545]    TraceD2_Pin=0x00040005
[02:28:21.545]    TraceD3_Pin=0x00040006
[02:28:21.545]  </debugvars>
[02:28:21.545]  
[02:28:21.546]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[02:28:21.546]    <block atomic="false" info="">
[02:28:21.546]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[02:28:21.547]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.547]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[02:28:21.547]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.548]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[02:28:21.548]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.548]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[02:28:21.549]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:28:21.549]    </block>
[02:28:21.549]  </sequence>
[02:28:21.549]  
[02:39:47.972]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[02:39:47.972]  
[02:39:47.972]  <debugvars>
[02:39:47.972]    // Pre-defined
[02:39:47.972]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:47.973]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:39:47.973]    __dp=0x00000000
[02:39:47.973]    __ap=0x00000000
[02:39:47.973]    __traceout=0x00000001      (SWO Trace)
[02:39:47.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:47.973]    __FlashAddr=0x00000000
[02:39:47.974]    __FlashLen=0x00000000
[02:39:47.974]    __FlashArg=0x00000000
[02:39:47.974]    __FlashOp=0x00000000
[02:39:47.974]    __Result=0x00000000
[02:39:47.974]    
[02:39:47.974]    // User-defined
[02:39:47.974]    DbgMCU_CR=0x00000007
[02:39:47.975]    DbgMCU_APB1_Fz=0x00000000
[02:39:47.975]    DbgMCU_APB2_Fz=0x00000000
[02:39:47.975]    TraceClk_Pin=0x00040002
[02:39:47.975]    TraceD0_Pin=0x00040003
[02:39:47.975]    TraceD1_Pin=0x00040004
[02:39:47.975]    TraceD2_Pin=0x00040005
[02:39:47.976]    TraceD3_Pin=0x00040006
[02:39:47.976]  </debugvars>
[02:39:47.976]  
[02:39:47.976]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[02:39:47.976]    <block atomic="false" info="">
[02:39:47.976]      Sequence("CheckID");
[02:39:47.977]        <sequence name="CheckID" Pname="" disable="false" info="">
[02:39:47.977]          <block atomic="false" info="">
[02:39:47.977]            __var pidr1 = 0;
[02:39:47.977]              // -> [pidr1 <= 0x00000000]
[02:39:47.977]            __var pidr2 = 0;
[02:39:47.977]              // -> [pidr2 <= 0x00000000]
[02:39:47.978]            __var jep106id = 0;
[02:39:47.978]              // -> [jep106id <= 0x00000000]
[02:39:47.978]            __var ROMTableBase = 0;
[02:39:47.978]              // -> [ROMTableBase <= 0x00000000]
[02:39:47.978]            __ap = 0;      // AHB-AP
[02:39:47.978]              // -> [__ap <= 0x00000000]
[02:39:47.978]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[02:39:47.979]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[02:39:47.979]              // -> [ROMTableBase <= 0xE00FD000]
[02:39:47.979]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[02:39:47.980]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[02:39:47.980]              // -> [pidr1 <= 0x00000004]
[02:39:47.980]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[02:39:47.980]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[02:39:47.980]              // -> [pidr2 <= 0x0000001A]
[02:39:47.981]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[02:39:47.981]              // -> [jep106id <= 0x00000020]
[02:39:47.981]          </block>
[02:39:47.981]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[02:39:47.981]            // if-block "jep106id != 0x20"
[02:39:47.981]              // =>  FALSE
[02:39:47.981]            // skip if-block "jep106id != 0x20"
[02:39:47.982]          </control>
[02:39:47.982]        </sequence>
[02:39:47.982]    </block>
[02:39:47.982]  </sequence>
[02:39:47.982]  
[02:39:47.997]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[02:39:47.997]  
[02:39:47.998]  <debugvars>
[02:39:47.998]    // Pre-defined
[02:39:47.998]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[02:39:47.998]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[02:39:47.998]    __dp=0x00000000
[02:39:47.999]    __ap=0x00000000
[02:39:47.999]    __traceout=0x00000001      (SWO Trace)
[02:39:47.999]    __errorcontrol=0x00000000  (Skip Errors="False")
[02:39:47.999]    __FlashAddr=0x00000000
[02:39:47.999]    __FlashLen=0x00000000
[02:39:47.999]    __FlashArg=0x00000000
[02:39:48.000]    __FlashOp=0x00000000
[02:39:48.000]    __Result=0x00000000
[02:39:48.000]    
[02:39:48.000]    // User-defined
[02:39:48.000]    DbgMCU_CR=0x00000007
[02:39:48.000]    DbgMCU_APB1_Fz=0x00000000
[02:39:48.000]    DbgMCU_APB2_Fz=0x00000000
[02:39:48.001]    TraceClk_Pin=0x00040002
[02:39:48.001]    TraceD0_Pin=0x00040003
[02:39:48.001]    TraceD1_Pin=0x00040004
[02:39:48.001]    TraceD2_Pin=0x00040005
[02:39:48.001]    TraceD3_Pin=0x00040006
[02:39:48.001]  </debugvars>
[02:39:48.002]  
[02:39:48.002]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[02:39:48.002]    <block atomic="false" info="">
[02:39:48.002]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[02:39:48.003]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[02:39:48.003]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[02:39:48.003]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[02:39:48.004]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[02:39:48.004]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:39:48.004]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[02:39:48.005]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[02:39:48.005]    </block>
[02:39:48.005]  </sequence>
[02:39:48.005]  
