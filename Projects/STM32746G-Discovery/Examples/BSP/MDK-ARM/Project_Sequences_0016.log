/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\Project_Sequences_0016.log
 *  Created     : 19:57:21 (07/05/2020)
 *  Device      : STM32F746NGHx
 *  PDSC File   : C:\Users\gonza\AppData\Local\Arm\Packs\Keil\STM32F7xx_DFP\2.12.0\Keil.STM32F7xx_DFP.pdsc
 *  Config File : C:\Users\gonza\STM32Cube\Repository\STM32Cube_FW_F7_V1.14.0 modificado\Projects\STM32746G-Discovery\Examples\BSP\MDK-ARM\DebugConfig\STM32746G_DISCOVERY_STM32F746NGHx_2.0.0.dbgconf
 *
 */

[19:57:21.505]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:57:21.505]  
[19:57:21.505]  <debugvars>
[19:57:21.505]    // Pre-defined
[19:57:21.505]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:21.506]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:57:21.506]    __dp=0x00000000
[19:57:21.506]    __ap=0x00000000
[19:57:21.506]    __traceout=0x00000001      (SWO Trace)
[19:57:21.506]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:21.507]    __FlashAddr=0x00000000
[19:57:21.507]    __FlashLen=0x00000000
[19:57:21.507]    __FlashArg=0x00000000
[19:57:21.507]    __FlashOp=0x00000000
[19:57:21.507]    __Result=0x00000000
[19:57:21.508]    
[19:57:21.508]    // User-defined
[19:57:21.508]    DbgMCU_CR=0x00000007
[19:57:21.508]    DbgMCU_APB1_Fz=0x00000000
[19:57:21.508]    DbgMCU_APB2_Fz=0x00000000
[19:57:21.508]    TraceClk_Pin=0x00040002
[19:57:21.508]    TraceD0_Pin=0x00040003
[19:57:21.509]    TraceD1_Pin=0x00040004
[19:57:21.509]    TraceD2_Pin=0x00040005
[19:57:21.509]    TraceD3_Pin=0x00040006
[19:57:21.509]  </debugvars>
[19:57:21.509]  
[19:57:21.510]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:57:21.510]    <block atomic="false" info="">
[19:57:21.510]      Sequence("CheckID");
[19:57:21.510]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:57:21.510]          <block atomic="false" info="">
[19:57:21.510]            __var pidr1 = 0;
[19:57:21.511]              // -> [pidr1 <= 0x00000000]
[19:57:21.511]            __var pidr2 = 0;
[19:57:21.511]              // -> [pidr2 <= 0x00000000]
[19:57:21.511]            __var jep106id = 0;
[19:57:21.511]              // -> [jep106id <= 0x00000000]
[19:57:21.511]            __var ROMTableBase = 0;
[19:57:21.512]              // -> [ROMTableBase <= 0x00000000]
[19:57:21.512]            __ap = 0;      // AHB-AP
[19:57:21.512]              // -> [__ap <= 0x00000000]
[19:57:21.512]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:57:21.512]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.512]              // -> [ROMTableBase <= 0xE00FD000]
[19:57:21.513]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:57:21.513]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.513]              // -> [pidr1 <= 0x00000004]
[19:57:21.514]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:57:21.514]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.514]              // -> [pidr2 <= 0x0000001A]
[19:57:21.514]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:57:21.515]              // -> [jep106id <= 0x00000020]
[19:57:21.515]          </block>
[19:57:21.515]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:57:21.515]            // if-block "jep106id != 0x20"
[19:57:21.515]              // =>  FALSE
[19:57:21.515]            // skip if-block "jep106id != 0x20"
[19:57:21.515]          </control>
[19:57:21.516]        </sequence>
[19:57:21.516]    </block>
[19:57:21.516]  </sequence>
[19:57:21.516]  
[19:57:21.531]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:57:21.531]  
[19:57:21.531]  <debugvars>
[19:57:21.532]    // Pre-defined
[19:57:21.532]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:21.532]    __connection=0x00010202    (Connection Type="Flash", Reset Type="System Reset", Connection Under HW Reset)
[19:57:21.532]    __dp=0x00000000
[19:57:21.532]    __ap=0x00000000
[19:57:21.533]    __traceout=0x00000001      (SWO Trace)
[19:57:21.533]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:21.533]    __FlashAddr=0x00000000
[19:57:21.533]    __FlashLen=0x00000000
[19:57:21.533]    __FlashArg=0x00000000
[19:57:21.534]    __FlashOp=0x00000000
[19:57:21.534]    __Result=0x00000000
[19:57:21.534]    
[19:57:21.534]    // User-defined
[19:57:21.534]    DbgMCU_CR=0x00000007
[19:57:21.534]    DbgMCU_APB1_Fz=0x00000000
[19:57:21.534]    DbgMCU_APB2_Fz=0x00000000
[19:57:21.535]    TraceClk_Pin=0x00040002
[19:57:21.535]    TraceD0_Pin=0x00040003
[19:57:21.535]    TraceD1_Pin=0x00040004
[19:57:21.535]    TraceD2_Pin=0x00040005
[19:57:21.535]    TraceD3_Pin=0x00040006
[19:57:21.535]  </debugvars>
[19:57:21.536]  
[19:57:21.536]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:57:21.536]    <block atomic="false" info="">
[19:57:21.536]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:57:21.537]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.537]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:57:21.537]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.538]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:57:21.538]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.538]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:57:21.539]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:21.539]    </block>
[19:57:21.539]  </sequence>
[19:57:21.539]  
[19:57:53.091]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:57:53.092]  
[19:57:53.092]  <debugvars>
[19:57:53.092]    // Pre-defined
[19:57:53.092]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:53.092]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:53.092]    __dp=0x00000000
[19:57:53.093]    __ap=0x00000000
[19:57:53.093]    __traceout=0x00000001      (SWO Trace)
[19:57:53.093]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:53.093]    __FlashAddr=0x00000000
[19:57:53.093]    __FlashLen=0x00000000
[19:57:53.093]    __FlashArg=0x00000000
[19:57:53.094]    __FlashOp=0x00000000
[19:57:53.094]    __Result=0x00000000
[19:57:53.094]    
[19:57:53.094]    // User-defined
[19:57:53.094]    DbgMCU_CR=0x00000007
[19:57:53.094]    DbgMCU_APB1_Fz=0x00000000
[19:57:53.095]    DbgMCU_APB2_Fz=0x00000000
[19:57:53.095]    TraceClk_Pin=0x00040002
[19:57:53.095]    TraceD0_Pin=0x00040003
[19:57:53.095]    TraceD1_Pin=0x00040004
[19:57:53.095]    TraceD2_Pin=0x00040005
[19:57:53.096]    TraceD3_Pin=0x00040006
[19:57:53.096]  </debugvars>
[19:57:53.096]  
[19:57:53.096]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:57:53.096]    <block atomic="false" info="">
[19:57:53.096]      Sequence("CheckID");
[19:57:53.096]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:57:53.096]          <block atomic="false" info="">
[19:57:53.096]            __var pidr1 = 0;
[19:57:53.097]              // -> [pidr1 <= 0x00000000]
[19:57:53.097]            __var pidr2 = 0;
[19:57:53.097]              // -> [pidr2 <= 0x00000000]
[19:57:53.097]            __var jep106id = 0;
[19:57:53.097]              // -> [jep106id <= 0x00000000]
[19:57:53.097]            __var ROMTableBase = 0;
[19:57:53.097]              // -> [ROMTableBase <= 0x00000000]
[19:57:53.097]            __ap = 0;      // AHB-AP
[19:57:53.098]              // -> [__ap <= 0x00000000]
[19:57:53.098]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:57:53.098]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.098]              // -> [ROMTableBase <= 0xE00FD000]
[19:57:53.098]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:57:53.099]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.099]              // -> [pidr1 <= 0x00000004]
[19:57:53.099]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:57:53.099]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.099]              // -> [pidr2 <= 0x0000001A]
[19:57:53.100]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:57:53.100]              // -> [jep106id <= 0x00000020]
[19:57:53.100]          </block>
[19:57:53.100]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:57:53.100]            // if-block "jep106id != 0x20"
[19:57:53.100]              // =>  FALSE
[19:57:53.100]            // skip if-block "jep106id != 0x20"
[19:57:53.100]          </control>
[19:57:53.100]        </sequence>
[19:57:53.101]    </block>
[19:57:53.101]  </sequence>
[19:57:53.101]  
[19:57:53.116]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:57:53.116]  
[19:57:53.116]  <debugvars>
[19:57:53.116]    // Pre-defined
[19:57:53.117]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:53.117]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:53.117]    __dp=0x00000000
[19:57:53.117]    __ap=0x00000000
[19:57:53.117]    __traceout=0x00000001      (SWO Trace)
[19:57:53.117]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:53.117]    __FlashAddr=0x00000000
[19:57:53.118]    __FlashLen=0x00000000
[19:57:53.118]    __FlashArg=0x00000000
[19:57:53.118]    __FlashOp=0x00000000
[19:57:53.118]    __Result=0x00000000
[19:57:53.118]    
[19:57:53.118]    // User-defined
[19:57:53.118]    DbgMCU_CR=0x00000007
[19:57:53.118]    DbgMCU_APB1_Fz=0x00000000
[19:57:53.119]    DbgMCU_APB2_Fz=0x00000000
[19:57:53.119]    TraceClk_Pin=0x00040002
[19:57:53.119]    TraceD0_Pin=0x00040003
[19:57:53.119]    TraceD1_Pin=0x00040004
[19:57:53.119]    TraceD2_Pin=0x00040005
[19:57:53.119]    TraceD3_Pin=0x00040006
[19:57:53.119]  </debugvars>
[19:57:53.120]  
[19:57:53.120]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:57:53.120]    <block atomic="false" info="">
[19:57:53.120]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:57:53.120]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.121]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:57:53.121]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.121]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:57:53.122]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.122]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:57:53.122]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.123]    </block>
[19:57:53.123]  </sequence>
[19:57:53.123]  
[19:57:53.139]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:57:53.139]  
[19:57:53.139]  <debugvars>
[19:57:53.139]    // Pre-defined
[19:57:53.140]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:53.140]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:53.140]    __dp=0x00000000
[19:57:53.140]    __ap=0x00000000
[19:57:53.140]    __traceout=0x00000001      (SWO Trace)
[19:57:53.140]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:53.141]    __FlashAddr=0x00000000
[19:57:53.141]    __FlashLen=0x00000000
[19:57:53.141]    __FlashArg=0x00000000
[19:57:53.141]    __FlashOp=0x00000000
[19:57:53.141]    __Result=0x00000000
[19:57:53.142]    
[19:57:53.142]    // User-defined
[19:57:53.142]    DbgMCU_CR=0x00000007
[19:57:53.142]    DbgMCU_APB1_Fz=0x00000000
[19:57:53.142]    DbgMCU_APB2_Fz=0x00000000
[19:57:53.142]    TraceClk_Pin=0x00040002
[19:57:53.142]    TraceD0_Pin=0x00040003
[19:57:53.143]    TraceD1_Pin=0x00040004
[19:57:53.143]    TraceD2_Pin=0x00040005
[19:57:53.143]    TraceD3_Pin=0x00040006
[19:57:53.143]  </debugvars>
[19:57:53.143]  
[19:57:53.143]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:53.144]    <block atomic="false" info="">
[19:57:53.144]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:53.144]        // -> [traceSWO <= 0x00000001]
[19:57:53.144]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:53.144]        // -> [traceTPIU <= 0x00000000]
[19:57:53.144]    </block>
[19:57:53.144]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:53.145]      // if-block "traceSWO"
[19:57:53.145]        // =>  TRUE
[19:57:53.145]      <block atomic="false" info="">
[19:57:53.145]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:53.145]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:53.145]            <block atomic="false" info="">
[19:57:53.145]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:53.145]                // -> [dbgmcu_val <= 0x00000000]
[19:57:53.145]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:53.146]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:53.146]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:53.146]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.146]                // -> [dbgmcu_val <= 0x00000007]
[19:57:53.146]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:53.146]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:53.147]              Sequence("ConfigureTraceSWOPin");
[19:57:53.147]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:53.147]                  <block atomic="false" info="">
[19:57:53.147]                    __var pin     = 0;
[19:57:53.147]                      // -> [pin <= 0x00000000]
[19:57:53.147]                    __var port    = 0;
[19:57:53.147]                      // -> [port <= 0x00000000]
[19:57:53.147]                    __var portAdr = 0;
[19:57:53.148]                      // -> [portAdr <= 0x00000000]
[19:57:53.148]                    __var pos     = 0;
[19:57:53.148]                      // -> [pos <= 0x00000000]
[19:57:53.148]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:53.148]                      // -> [SWO_Pin <= 0x00010003]
[19:57:53.148]                  </block>
[19:57:53.148]                  <block atomic="false" info="configure SWO">
[19:57:53.148]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:53.148]                      // -> [pin <= 0x00000003]
[19:57:53.148]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:53.149]                      // -> [port <= 0x00000001]
[19:57:53.149]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:53.149]                      // -> [portAdr <= 0x40020400]
[19:57:53.149]                    pos = pin * 2;
[19:57:53.149]                      // -> [pos <= 0x00000006]
[19:57:53.149]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:53.150]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.150]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.150]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:53.151]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.151]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.151]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:53.152]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.152]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.152]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:53.152]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.153]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.153]                  </block>
[19:57:53.153]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:53.153]                    // if-block "pin <  8"
[19:57:53.153]                      // =>  TRUE
[19:57:53.153]                    <block atomic="false" info="">
[19:57:53.154]                      pos = ((pin    ) & 7) * 4;
[19:57:53.154]                        // -> [pos <= 0x0000000C]
[19:57:53.154]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:53.154]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.155]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.155]                    </block>
[19:57:53.155]                    // end if-block "pin <  8"
[19:57:53.155]                  </control>
[19:57:53.155]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:53.155]                    // if-block "pin >= 8"
[19:57:53.155]                      // =>  FALSE
[19:57:53.155]                    // skip if-block "pin >= 8"
[19:57:53.155]                  </control>
[19:57:53.156]                </sequence>
[19:57:53.156]            </block>
[19:57:53.156]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:53.156]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:53.156]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.156]            </block>
[19:57:53.156]          </sequence>
[19:57:53.157]      </block>
[19:57:53.157]      // end if-block "traceSWO"
[19:57:53.157]    </control>
[19:57:53.157]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:53.157]      // if-block "traceTPIU"
[19:57:53.157]        // =>  FALSE
[19:57:53.157]      // skip if-block "traceTPIU"
[19:57:53.157]    </control>
[19:57:53.157]  </sequence>
[19:57:53.158]  
[19:57:53.161]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:57:53.161]  
[19:57:53.162]  <debugvars>
[19:57:53.162]    // Pre-defined
[19:57:53.162]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:53.162]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:53.162]    __dp=0x00000000
[19:57:53.162]    __ap=0x00000000
[19:57:53.162]    __traceout=0x00000001      (SWO Trace)
[19:57:53.163]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:53.163]    __FlashAddr=0x00000000
[19:57:53.163]    __FlashLen=0x00000000
[19:57:53.163]    __FlashArg=0x00000000
[19:57:53.163]    __FlashOp=0x00000000
[19:57:53.163]    __Result=0x00000000
[19:57:53.164]    
[19:57:53.164]    // User-defined
[19:57:53.164]    DbgMCU_CR=0x00000007
[19:57:53.164]    DbgMCU_APB1_Fz=0x00000000
[19:57:53.164]    DbgMCU_APB2_Fz=0x00000000
[19:57:53.164]    TraceClk_Pin=0x00040002
[19:57:53.164]    TraceD0_Pin=0x00040003
[19:57:53.164]    TraceD1_Pin=0x00040004
[19:57:53.165]    TraceD2_Pin=0x00040005
[19:57:53.165]    TraceD3_Pin=0x00040006
[19:57:53.165]  </debugvars>
[19:57:53.165]  
[19:57:53.165]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:53.165]    <block atomic="false" info="">
[19:57:53.165]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:53.165]        // -> [traceSWO <= 0x00000001]
[19:57:53.166]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:53.166]        // -> [traceTPIU <= 0x00000000]
[19:57:53.166]    </block>
[19:57:53.166]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:53.166]      // if-block "traceSWO"
[19:57:53.166]        // =>  TRUE
[19:57:53.166]      <block atomic="false" info="">
[19:57:53.166]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:53.167]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:53.167]            <block atomic="false" info="">
[19:57:53.167]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:53.167]                // -> [dbgmcu_val <= 0x00000000]
[19:57:53.167]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:53.167]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:53.167]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:53.168]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.168]                // -> [dbgmcu_val <= 0x00000007]
[19:57:53.168]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:53.168]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:53.168]              Sequence("ConfigureTraceSWOPin");
[19:57:53.168]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:53.169]                  <block atomic="false" info="">
[19:57:53.169]                    __var pin     = 0;
[19:57:53.169]                      // -> [pin <= 0x00000000]
[19:57:53.169]                    __var port    = 0;
[19:57:53.169]                      // -> [port <= 0x00000000]
[19:57:53.169]                    __var portAdr = 0;
[19:57:53.169]                      // -> [portAdr <= 0x00000000]
[19:57:53.169]                    __var pos     = 0;
[19:57:53.169]                      // -> [pos <= 0x00000000]
[19:57:53.170]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:53.170]                      // -> [SWO_Pin <= 0x00010003]
[19:57:53.170]                  </block>
[19:57:53.170]                  <block atomic="false" info="configure SWO">
[19:57:53.170]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:53.170]                      // -> [pin <= 0x00000003]
[19:57:53.170]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:53.170]                      // -> [port <= 0x00000001]
[19:57:53.170]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:53.171]                      // -> [portAdr <= 0x40020400]
[19:57:53.171]                    pos = pin * 2;
[19:57:53.171]                      // -> [pos <= 0x00000006]
[19:57:53.171]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:53.171]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.172]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.172]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:53.172]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.173]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.173]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:53.173]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.174]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.174]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:53.174]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.175]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.175]                  </block>
[19:57:53.175]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:53.175]                    // if-block "pin <  8"
[19:57:53.175]                      // =>  TRUE
[19:57:53.175]                    <block atomic="false" info="">
[19:57:53.175]                      pos = ((pin    ) & 7) * 4;
[19:57:53.175]                        // -> [pos <= 0x0000000C]
[19:57:53.176]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:53.176]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.176]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.176]                    </block>
[19:57:53.177]                    // end if-block "pin <  8"
[19:57:53.177]                  </control>
[19:57:53.177]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:53.177]                    // if-block "pin >= 8"
[19:57:53.177]                      // =>  FALSE
[19:57:53.177]                    // skip if-block "pin >= 8"
[19:57:53.177]                  </control>
[19:57:53.178]                </sequence>
[19:57:53.178]            </block>
[19:57:53.178]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:53.178]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:53.178]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.179]            </block>
[19:57:53.179]          </sequence>
[19:57:53.179]      </block>
[19:57:53.179]      // end if-block "traceSWO"
[19:57:53.179]    </control>
[19:57:53.179]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:53.179]      // if-block "traceTPIU"
[19:57:53.179]        // =>  FALSE
[19:57:53.180]      // skip if-block "traceTPIU"
[19:57:53.180]    </control>
[19:57:53.180]  </sequence>
[19:57:53.180]  
[19:57:53.409]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:57:53.409]  
[19:57:53.409]  <debugvars>
[19:57:53.409]    // Pre-defined
[19:57:53.409]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:57:53.410]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[19:57:53.410]    __dp=0x00000000
[19:57:53.410]    __ap=0x00000000
[19:57:53.410]    __traceout=0x00000001      (SWO Trace)
[19:57:53.410]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:57:53.411]    __FlashAddr=0x00000000
[19:57:53.411]    __FlashLen=0x00000000
[19:57:53.411]    __FlashArg=0x00000000
[19:57:53.411]    __FlashOp=0x00000000
[19:57:53.411]    __Result=0x00000000
[19:57:53.412]    
[19:57:53.412]    // User-defined
[19:57:53.412]    DbgMCU_CR=0x00000007
[19:57:53.412]    DbgMCU_APB1_Fz=0x00000000
[19:57:53.412]    DbgMCU_APB2_Fz=0x00000000
[19:57:53.412]    TraceClk_Pin=0x00040002
[19:57:53.412]    TraceD0_Pin=0x00040003
[19:57:53.413]    TraceD1_Pin=0x00040004
[19:57:53.413]    TraceD2_Pin=0x00040005
[19:57:53.413]    TraceD3_Pin=0x00040006
[19:57:53.413]  </debugvars>
[19:57:53.413]  
[19:57:53.413]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:57:53.414]    <block atomic="false" info="">
[19:57:53.414]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:57:53.414]        // -> [traceSWO <= 0x00000001]
[19:57:53.414]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:57:53.414]        // -> [traceTPIU <= 0x00000000]
[19:57:53.414]    </block>
[19:57:53.415]    <control if="traceSWO" while="" timeout="0" info="">
[19:57:53.415]      // if-block "traceSWO"
[19:57:53.415]        // =>  TRUE
[19:57:53.415]      <block atomic="false" info="">
[19:57:53.415]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:57:53.415]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:57:53.415]            <block atomic="false" info="">
[19:57:53.415]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:57:53.416]                // -> [dbgmcu_val <= 0x00000000]
[19:57:53.416]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:57:53.416]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:57:53.416]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:57:53.416]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.416]                // -> [dbgmcu_val <= 0x00000007]
[19:57:53.417]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:57:53.417]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:57:53.417]              Sequence("ConfigureTraceSWOPin");
[19:57:53.417]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:57:53.417]                  <block atomic="false" info="">
[19:57:53.417]                    __var pin     = 0;
[19:57:53.417]                      // -> [pin <= 0x00000000]
[19:57:53.417]                    __var port    = 0;
[19:57:53.417]                      // -> [port <= 0x00000000]
[19:57:53.418]                    __var portAdr = 0;
[19:57:53.418]                      // -> [portAdr <= 0x00000000]
[19:57:53.418]                    __var pos     = 0;
[19:57:53.418]                      // -> [pos <= 0x00000000]
[19:57:53.418]                    __var SWO_Pin = 0x00010003;          // PB3
[19:57:53.418]                      // -> [SWO_Pin <= 0x00010003]
[19:57:53.418]                  </block>
[19:57:53.418]                  <block atomic="false" info="configure SWO">
[19:57:53.418]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:57:53.419]                      // -> [pin <= 0x00000003]
[19:57:53.419]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:57:53.419]                      // -> [port <= 0x00000001]
[19:57:53.419]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:57:53.419]                      // -> [portAdr <= 0x40020400]
[19:57:53.419]                    pos = pin * 2;
[19:57:53.419]                      // -> [pos <= 0x00000006]
[19:57:53.420]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:57:53.420]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.420]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.421]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:57:53.421]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.421]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.422]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:57:53.422]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.422]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.422]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:57:53.423]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.423]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.423]                  </block>
[19:57:53.423]                  <control if="pin <  8" while="" timeout="0" info="">
[19:57:53.424]                    // if-block "pin <  8"
[19:57:53.424]                      // =>  TRUE
[19:57:53.424]                    <block atomic="false" info="">
[19:57:53.424]                      pos = ((pin    ) & 7) * 4;
[19:57:53.424]                        // -> [pos <= 0x0000000C]
[19:57:53.424]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:57:53.425]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.425]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.425]                    </block>
[19:57:53.425]                    // end if-block "pin <  8"
[19:57:53.425]                  </control>
[19:57:53.425]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:57:53.426]                    // if-block "pin >= 8"
[19:57:53.426]                      // =>  FALSE
[19:57:53.426]                    // skip if-block "pin >= 8"
[19:57:53.426]                  </control>
[19:57:53.426]                </sequence>
[19:57:53.426]            </block>
[19:57:53.426]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:57:53.426]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:57:53.427]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:57:53.427]            </block>
[19:57:53.427]          </sequence>
[19:57:53.427]      </block>
[19:57:53.427]      // end if-block "traceSWO"
[19:57:53.427]    </control>
[19:57:53.427]    <control if="traceTPIU" while="" timeout="0" info="">
[19:57:53.427]      // if-block "traceTPIU"
[19:57:53.428]        // =>  FALSE
[19:57:53.428]      // skip if-block "traceTPIU"
[19:57:53.428]    </control>
[19:57:53.428]  </sequence>
[19:57:53.428]  
[20:09:25.875]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:09:25.875]  
[20:09:25.884]  <debugvars>
[20:09:25.887]    // Pre-defined
[20:09:25.887]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:09:25.887]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:09:25.888]    __dp=0x00000000
[20:09:25.888]    __ap=0x00000000
[20:09:25.888]    __traceout=0x00000001      (SWO Trace)
[20:09:25.888]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:09:25.888]    __FlashAddr=0x00000000
[20:09:25.889]    __FlashLen=0x00000000
[20:09:25.889]    __FlashArg=0x00000000
[20:09:25.889]    __FlashOp=0x00000000
[20:09:25.889]    __Result=0x00000000
[20:09:25.889]    
[20:09:25.889]    // User-defined
[20:09:25.890]    DbgMCU_CR=0x00000007
[20:09:25.890]    DbgMCU_APB1_Fz=0x00000000
[20:09:25.890]    DbgMCU_APB2_Fz=0x00000000
[20:09:25.890]    TraceClk_Pin=0x00040002
[20:09:25.891]    TraceD0_Pin=0x00040003
[20:09:25.891]    TraceD1_Pin=0x00040004
[20:09:25.891]    TraceD2_Pin=0x00040005
[20:09:25.891]    TraceD3_Pin=0x00040006
[20:09:25.891]  </debugvars>
[20:09:25.891]  
[20:09:25.891]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:09:25.892]    <block atomic="false" info="">
[20:09:25.892]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:09:25.892]        // -> [traceSWO <= 0x00000001]
[20:09:25.892]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:09:25.892]        // -> [traceTPIU <= 0x00000000]
[20:09:25.893]    </block>
[20:09:25.893]    <control if="traceSWO" while="" timeout="0" info="">
[20:09:25.893]      // if-block "traceSWO"
[20:09:25.893]        // =>  TRUE
[20:09:25.893]      <block atomic="false" info="">
[20:09:25.893]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:09:25.894]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:09:25.894]            <block atomic="false" info="">
[20:09:25.894]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:09:25.894]                // -> [dbgmcu_val <= 0x00000000]
[20:09:25.894]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:09:25.894]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:09:25.895]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:09:25.895]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.895]                // -> [dbgmcu_val <= 0x00000007]
[20:09:25.895]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:09:25.896]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:09:25.896]              Sequence("ConfigureTraceSWOPin");
[20:09:25.896]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:09:25.896]                  <block atomic="false" info="">
[20:09:25.896]                    __var pin     = 0;
[20:09:25.896]                      // -> [pin <= 0x00000000]
[20:09:25.896]                    __var port    = 0;
[20:09:25.897]                      // -> [port <= 0x00000000]
[20:09:25.897]                    __var portAdr = 0;
[20:09:25.897]                      // -> [portAdr <= 0x00000000]
[20:09:25.897]                    __var pos     = 0;
[20:09:25.897]                      // -> [pos <= 0x00000000]
[20:09:25.897]                    __var SWO_Pin = 0x00010003;          // PB3
[20:09:25.897]                      // -> [SWO_Pin <= 0x00010003]
[20:09:25.897]                  </block>
[20:09:25.898]                  <block atomic="false" info="configure SWO">
[20:09:25.898]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:09:25.898]                      // -> [pin <= 0x00000003]
[20:09:25.898]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:09:25.898]                      // -> [port <= 0x00000001]
[20:09:25.898]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:09:25.898]                      // -> [portAdr <= 0x40020400]
[20:09:25.898]                    pos = pin * 2;
[20:09:25.898]                      // -> [pos <= 0x00000006]
[20:09:25.899]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:09:25.899]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.900]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.900]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:09:25.900]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.901]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.901]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:09:25.901]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.902]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.902]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:09:25.902]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.903]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.903]                  </block>
[20:09:25.903]                  <control if="pin <  8" while="" timeout="0" info="">
[20:09:25.903]                    // if-block "pin <  8"
[20:09:25.903]                      // =>  TRUE
[20:09:25.903]                    <block atomic="false" info="">
[20:09:25.903]                      pos = ((pin    ) & 7) * 4;
[20:09:25.904]                        // -> [pos <= 0x0000000C]
[20:09:25.904]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:09:25.904]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.905]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.905]                    </block>
[20:09:25.905]                    // end if-block "pin <  8"
[20:09:25.905]                  </control>
[20:09:25.905]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:09:25.905]                    // if-block "pin >= 8"
[20:09:25.905]                      // =>  FALSE
[20:09:25.905]                    // skip if-block "pin >= 8"
[20:09:25.905]                  </control>
[20:09:25.906]                </sequence>
[20:09:25.906]            </block>
[20:09:25.906]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:09:25.906]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:09:25.906]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:09:25.906]            </block>
[20:09:25.907]          </sequence>
[20:09:25.907]      </block>
[20:09:25.907]      // end if-block "traceSWO"
[20:09:25.907]    </control>
[20:09:25.907]    <control if="traceTPIU" while="" timeout="0" info="">
[20:09:25.907]      // if-block "traceTPIU"
[20:09:25.907]        // =>  FALSE
[20:09:25.908]      // skip if-block "traceTPIU"
[20:09:25.908]    </control>
[20:09:25.908]  </sequence>
[20:09:25.908]  
[20:10:01.622]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:10:01.622]  
[20:10:01.622]  <debugvars>
[20:10:01.623]    // Pre-defined
[20:10:01.623]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:10:01.623]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:10:01.623]    __dp=0x00000000
[20:10:01.623]    __ap=0x00000000
[20:10:01.625]    __traceout=0x00000001      (SWO Trace)
[20:10:01.625]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:10:01.625]    __FlashAddr=0x00000000
[20:10:01.626]    __FlashLen=0x00000000
[20:10:01.626]    __FlashArg=0x00000000
[20:10:01.626]    __FlashOp=0x00000000
[20:10:01.626]    __Result=0x00000000
[20:10:01.627]    
[20:10:01.627]    // User-defined
[20:10:01.627]    DbgMCU_CR=0x00000007
[20:10:01.627]    DbgMCU_APB1_Fz=0x00000000
[20:10:01.627]    DbgMCU_APB2_Fz=0x00000000
[20:10:01.628]    TraceClk_Pin=0x00040002
[20:10:01.628]    TraceD0_Pin=0x00040003
[20:10:01.628]    TraceD1_Pin=0x00040004
[20:10:01.628]    TraceD2_Pin=0x00040005
[20:10:01.628]    TraceD3_Pin=0x00040006
[20:10:01.628]  </debugvars>
[20:10:01.629]  
[20:10:01.629]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:10:01.629]    <block atomic="false" info="">
[20:10:01.629]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:10:01.629]        // -> [traceSWO <= 0x00000001]
[20:10:01.630]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:10:01.630]        // -> [traceTPIU <= 0x00000000]
[20:10:01.630]    </block>
[20:10:01.630]    <control if="traceSWO" while="" timeout="0" info="">
[20:10:01.630]      // if-block "traceSWO"
[20:10:01.630]        // =>  TRUE
[20:10:01.630]      <block atomic="false" info="">
[20:10:01.631]        Sequence("DisableTraceSWO");
[20:10:01.631]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:10:01.631]            <block atomic="false" info="">
[20:10:01.631]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:10:01.631]                // -> [dbgmcu_val <= 0x00000000]
[20:10:01.632]            </block>
[20:10:01.632]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:10:01.632]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:10:01.632]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:10:01.632]                // -> [dbgmcu_val <= 0x00000007]
[20:10:01.633]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:10:01.633]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:01.633]            </block>
[20:10:01.633]          </sequence>
[20:10:01.634]      </block>
[20:10:01.634]      // end if-block "traceSWO"
[20:10:01.634]    </control>
[20:10:01.634]    <control if="traceTPIU" while="" timeout="0" info="">
[20:10:01.634]      // if-block "traceTPIU"
[20:10:01.635]        // =>  FALSE
[20:10:01.635]      // skip if-block "traceTPIU"
[20:10:01.635]    </control>
[20:10:01.635]  </sequence>
[20:10:01.635]  
[20:10:03.974]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:10:03.974]  
[20:10:04.350]  <debugvars>
[20:10:04.350]    // Pre-defined
[20:10:04.350]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:10:04.350]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:10:04.350]    __dp=0x00000000
[20:10:04.350]    __ap=0x00000000
[20:10:04.350]    __traceout=0x00000001      (SWO Trace)
[20:10:04.350]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:10:04.351]    __FlashAddr=0x00000000
[20:10:04.351]    __FlashLen=0x00000000
[20:10:04.351]    __FlashArg=0x00000000
[20:10:04.351]    __FlashOp=0x00000000
[20:10:04.351]    __Result=0x00000000
[20:10:04.352]    
[20:10:04.352]    // User-defined
[20:10:04.352]    DbgMCU_CR=0x00000007
[20:10:04.352]    DbgMCU_APB1_Fz=0x00000000
[20:10:04.352]    DbgMCU_APB2_Fz=0x00000000
[20:10:04.352]    TraceClk_Pin=0x00040002
[20:10:04.352]    TraceD0_Pin=0x00040003
[20:10:04.352]    TraceD1_Pin=0x00040004
[20:10:04.353]    TraceD2_Pin=0x00040005
[20:10:04.353]    TraceD3_Pin=0x00040006
[20:10:04.353]  </debugvars>
[20:10:04.353]  
[20:10:04.353]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:10:04.354]    <block atomic="false" info="">
[20:10:04.354]      Sequence("CheckID");
[20:10:04.354]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:10:04.354]          <block atomic="false" info="">
[20:10:04.354]            __var pidr1 = 0;
[20:10:04.354]              // -> [pidr1 <= 0x00000000]
[20:10:04.354]            __var pidr2 = 0;
[20:10:04.354]              // -> [pidr2 <= 0x00000000]
[20:10:04.355]            __var jep106id = 0;
[20:10:04.355]              // -> [jep106id <= 0x00000000]
[20:10:04.355]            __var ROMTableBase = 0;
[20:10:04.355]              // -> [ROMTableBase <= 0x00000000]
[20:10:04.355]            __ap = 0;      // AHB-AP
[20:10:04.355]              // -> [__ap <= 0x00000000]
[20:10:04.355]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:10:04.356]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.356]              // -> [ROMTableBase <= 0xE00FD000]
[20:10:04.356]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:10:04.357]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.357]              // -> [pidr1 <= 0x00000004]
[20:10:04.357]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:10:04.357]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.357]              // -> [pidr2 <= 0x0000001A]
[20:10:04.358]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:10:04.358]              // -> [jep106id <= 0x00000020]
[20:10:04.358]          </block>
[20:10:04.358]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:10:04.358]            // if-block "jep106id != 0x20"
[20:10:04.358]              // =>  FALSE
[20:10:04.358]            // skip if-block "jep106id != 0x20"
[20:10:04.359]          </control>
[20:10:04.359]        </sequence>
[20:10:04.359]    </block>
[20:10:04.359]  </sequence>
[20:10:04.359]  
[20:10:04.374]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:10:04.374]  
[20:10:04.374]  <debugvars>
[20:10:04.374]    // Pre-defined
[20:10:04.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:10:04.374]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:10:04.374]    __dp=0x00000000
[20:10:04.375]    __ap=0x00000000
[20:10:04.375]    __traceout=0x00000001      (SWO Trace)
[20:10:04.375]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:10:04.375]    __FlashAddr=0x00000000
[20:10:04.375]    __FlashLen=0x00000000
[20:10:04.375]    __FlashArg=0x00000000
[20:10:04.375]    __FlashOp=0x00000000
[20:10:04.375]    __Result=0x00000000
[20:10:04.376]    
[20:10:04.376]    // User-defined
[20:10:04.376]    DbgMCU_CR=0x00000007
[20:10:04.376]    DbgMCU_APB1_Fz=0x00000000
[20:10:04.376]    DbgMCU_APB2_Fz=0x00000000
[20:10:04.376]    TraceClk_Pin=0x00040002
[20:10:04.377]    TraceD0_Pin=0x00040003
[20:10:04.377]    TraceD1_Pin=0x00040004
[20:10:04.377]    TraceD2_Pin=0x00040005
[20:10:04.377]    TraceD3_Pin=0x00040006
[20:10:04.377]  </debugvars>
[20:10:04.377]  
[20:10:04.377]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:10:04.377]    <block atomic="false" info="">
[20:10:04.377]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:10:04.378]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.378]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:10:04.378]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.379]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:10:04.379]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.379]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:10:04.380]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.380]    </block>
[20:10:04.380]  </sequence>
[20:10:04.380]  
[20:10:04.395]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:10:04.395]  
[20:10:04.395]  <debugvars>
[20:10:04.396]    // Pre-defined
[20:10:04.396]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:10:04.396]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:10:04.396]    __dp=0x00000000
[20:10:04.396]    __ap=0x00000000
[20:10:04.396]    __traceout=0x00000001      (SWO Trace)
[20:10:04.396]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:10:04.397]    __FlashAddr=0x00000000
[20:10:04.397]    __FlashLen=0x00000000
[20:10:04.397]    __FlashArg=0x00000000
[20:10:04.397]    __FlashOp=0x00000000
[20:10:04.397]    __Result=0x00000000
[20:10:04.397]    
[20:10:04.397]    // User-defined
[20:10:04.397]    DbgMCU_CR=0x00000007
[20:10:04.397]    DbgMCU_APB1_Fz=0x00000000
[20:10:04.397]    DbgMCU_APB2_Fz=0x00000000
[20:10:04.398]    TraceClk_Pin=0x00040002
[20:10:04.398]    TraceD0_Pin=0x00040003
[20:10:04.398]    TraceD1_Pin=0x00040004
[20:10:04.398]    TraceD2_Pin=0x00040005
[20:10:04.398]    TraceD3_Pin=0x00040006
[20:10:04.398]  </debugvars>
[20:10:04.398]  
[20:10:04.399]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:10:04.399]    <block atomic="false" info="">
[20:10:04.399]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:10:04.399]        // -> [traceSWO <= 0x00000001]
[20:10:04.399]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:10:04.399]        // -> [traceTPIU <= 0x00000000]
[20:10:04.399]    </block>
[20:10:04.399]    <control if="traceSWO" while="" timeout="0" info="">
[20:10:04.400]      // if-block "traceSWO"
[20:10:04.400]        // =>  TRUE
[20:10:04.400]      <block atomic="false" info="">
[20:10:04.400]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:10:04.400]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:10:04.400]            <block atomic="false" info="">
[20:10:04.400]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:10:04.400]                // -> [dbgmcu_val <= 0x00000000]
[20:10:04.400]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:10:04.400]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:10:04.400]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:10:04.400]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.401]                // -> [dbgmcu_val <= 0x00000007]
[20:10:04.401]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:10:04.401]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:10:04.401]              Sequence("ConfigureTraceSWOPin");
[20:10:04.401]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:10:04.401]                  <block atomic="false" info="">
[20:10:04.401]                    __var pin     = 0;
[20:10:04.401]                      // -> [pin <= 0x00000000]
[20:10:04.402]                    __var port    = 0;
[20:10:04.402]                      // -> [port <= 0x00000000]
[20:10:04.402]                    __var portAdr = 0;
[20:10:04.402]                      // -> [portAdr <= 0x00000000]
[20:10:04.402]                    __var pos     = 0;
[20:10:04.402]                      // -> [pos <= 0x00000000]
[20:10:04.402]                    __var SWO_Pin = 0x00010003;          // PB3
[20:10:04.403]                      // -> [SWO_Pin <= 0x00010003]
[20:10:04.403]                  </block>
[20:10:04.403]                  <block atomic="false" info="configure SWO">
[20:10:04.403]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:10:04.403]                      // -> [pin <= 0x00000003]
[20:10:04.403]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:10:04.403]                      // -> [port <= 0x00000001]
[20:10:04.403]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:10:04.404]                      // -> [portAdr <= 0x40020400]
[20:10:04.404]                    pos = pin * 2;
[20:10:04.404]                      // -> [pos <= 0x00000006]
[20:10:04.404]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:10:04.405]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.405]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.405]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:10:04.406]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.406]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.406]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:10:04.407]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.407]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.407]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:10:04.408]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.408]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.408]                  </block>
[20:10:04.408]                  <control if="pin <  8" while="" timeout="0" info="">
[20:10:04.408]                    // if-block "pin <  8"
[20:10:04.409]                      // =>  TRUE
[20:10:04.409]                    <block atomic="false" info="">
[20:10:04.409]                      pos = ((pin    ) & 7) * 4;
[20:10:04.409]                        // -> [pos <= 0x0000000C]
[20:10:04.409]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:10:04.410]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.410]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.410]                    </block>
[20:10:04.410]                    // end if-block "pin <  8"
[20:10:04.410]                  </control>
[20:10:04.410]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:10:04.411]                    // if-block "pin >= 8"
[20:10:04.411]                      // =>  FALSE
[20:10:04.411]                    // skip if-block "pin >= 8"
[20:10:04.411]                  </control>
[20:10:04.411]                </sequence>
[20:10:04.411]            </block>
[20:10:04.411]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:10:04.411]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:10:04.412]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.412]            </block>
[20:10:04.412]          </sequence>
[20:10:04.412]      </block>
[20:10:04.412]      // end if-block "traceSWO"
[20:10:04.412]    </control>
[20:10:04.413]    <control if="traceTPIU" while="" timeout="0" info="">
[20:10:04.413]      // if-block "traceTPIU"
[20:10:04.413]        // =>  FALSE
[20:10:04.413]      // skip if-block "traceTPIU"
[20:10:04.413]    </control>
[20:10:04.413]  </sequence>
[20:10:04.413]  
[20:10:04.417]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:10:04.417]  
[20:10:04.418]  <debugvars>
[20:10:04.418]    // Pre-defined
[20:10:04.418]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:10:04.418]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:10:04.418]    __dp=0x00000000
[20:10:04.418]    __ap=0x00000000
[20:10:04.418]    __traceout=0x00000001      (SWO Trace)
[20:10:04.418]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:10:04.418]    __FlashAddr=0x00000000
[20:10:04.419]    __FlashLen=0x00000000
[20:10:04.419]    __FlashArg=0x00000000
[20:10:04.419]    __FlashOp=0x00000000
[20:10:04.419]    __Result=0x00000000
[20:10:04.419]    
[20:10:04.419]    // User-defined
[20:10:04.419]    DbgMCU_CR=0x00000007
[20:10:04.419]    DbgMCU_APB1_Fz=0x00000000
[20:10:04.420]    DbgMCU_APB2_Fz=0x00000000
[20:10:04.420]    TraceClk_Pin=0x00040002
[20:10:04.420]    TraceD0_Pin=0x00040003
[20:10:04.420]    TraceD1_Pin=0x00040004
[20:10:04.420]    TraceD2_Pin=0x00040005
[20:10:04.420]    TraceD3_Pin=0x00040006
[20:10:04.420]  </debugvars>
[20:10:04.420]  
[20:10:04.420]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:10:04.421]    <block atomic="false" info="">
[20:10:04.421]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:10:04.421]        // -> [traceSWO <= 0x00000001]
[20:10:04.421]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:10:04.421]        // -> [traceTPIU <= 0x00000000]
[20:10:04.421]    </block>
[20:10:04.421]    <control if="traceSWO" while="" timeout="0" info="">
[20:10:04.421]      // if-block "traceSWO"
[20:10:04.422]        // =>  TRUE
[20:10:04.422]      <block atomic="false" info="">
[20:10:04.422]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:10:04.422]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:10:04.422]            <block atomic="false" info="">
[20:10:04.422]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:10:04.422]                // -> [dbgmcu_val <= 0x00000000]
[20:10:04.422]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:10:04.422]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:10:04.423]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:10:04.423]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.423]                // -> [dbgmcu_val <= 0x00000007]
[20:10:04.424]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:10:04.424]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:10:04.424]              Sequence("ConfigureTraceSWOPin");
[20:10:04.424]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:10:04.424]                  <block atomic="false" info="">
[20:10:04.424]                    __var pin     = 0;
[20:10:04.424]                      // -> [pin <= 0x00000000]
[20:10:04.424]                    __var port    = 0;
[20:10:04.424]                      // -> [port <= 0x00000000]
[20:10:04.425]                    __var portAdr = 0;
[20:10:04.425]                      // -> [portAdr <= 0x00000000]
[20:10:04.425]                    __var pos     = 0;
[20:10:04.425]                      // -> [pos <= 0x00000000]
[20:10:04.425]                    __var SWO_Pin = 0x00010003;          // PB3
[20:10:04.425]                      // -> [SWO_Pin <= 0x00010003]
[20:10:04.426]                  </block>
[20:10:04.426]                  <block atomic="false" info="configure SWO">
[20:10:04.426]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:10:04.426]                      // -> [pin <= 0x00000003]
[20:10:04.426]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:10:04.426]                      // -> [port <= 0x00000001]
[20:10:04.426]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:10:04.426]                      // -> [portAdr <= 0x40020400]
[20:10:04.426]                    pos = pin * 2;
[20:10:04.427]                      // -> [pos <= 0x00000006]
[20:10:04.427]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:10:04.427]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.428]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.428]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:10:04.428]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.429]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.429]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:10:04.429]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.430]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.430]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:10:04.430]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.431]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.431]                  </block>
[20:10:04.431]                  <control if="pin <  8" while="" timeout="0" info="">
[20:10:04.431]                    // if-block "pin <  8"
[20:10:04.431]                      // =>  TRUE
[20:10:04.431]                    <block atomic="false" info="">
[20:10:04.431]                      pos = ((pin    ) & 7) * 4;
[20:10:04.432]                        // -> [pos <= 0x0000000C]
[20:10:04.432]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:10:04.432]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.433]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.433]                    </block>
[20:10:04.433]                    // end if-block "pin <  8"
[20:10:04.433]                  </control>
[20:10:04.433]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:10:04.433]                    // if-block "pin >= 8"
[20:10:04.434]                      // =>  FALSE
[20:10:04.434]                    // skip if-block "pin >= 8"
[20:10:04.434]                  </control>
[20:10:04.434]                </sequence>
[20:10:04.434]            </block>
[20:10:04.434]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:10:04.434]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:10:04.435]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.435]            </block>
[20:10:04.435]          </sequence>
[20:10:04.435]      </block>
[20:10:04.435]      // end if-block "traceSWO"
[20:10:04.436]    </control>
[20:10:04.436]    <control if="traceTPIU" while="" timeout="0" info="">
[20:10:04.436]      // if-block "traceTPIU"
[20:10:04.436]        // =>  FALSE
[20:10:04.436]      // skip if-block "traceTPIU"
[20:10:04.436]    </control>
[20:10:04.436]  </sequence>
[20:10:04.437]  
[20:10:04.652]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:10:04.652]  
[20:10:04.653]  <debugvars>
[20:10:04.653]    // Pre-defined
[20:10:04.653]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:10:04.653]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:10:04.653]    __dp=0x00000000
[20:10:04.653]    __ap=0x00000000
[20:10:04.653]    __traceout=0x00000001      (SWO Trace)
[20:10:04.653]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:10:04.654]    __FlashAddr=0x00000000
[20:10:04.654]    __FlashLen=0x00000000
[20:10:04.654]    __FlashArg=0x00000000
[20:10:04.654]    __FlashOp=0x00000000
[20:10:04.654]    __Result=0x00000000
[20:10:04.654]    
[20:10:04.654]    // User-defined
[20:10:04.654]    DbgMCU_CR=0x00000007
[20:10:04.654]    DbgMCU_APB1_Fz=0x00000000
[20:10:04.655]    DbgMCU_APB2_Fz=0x00000000
[20:10:04.655]    TraceClk_Pin=0x00040002
[20:10:04.655]    TraceD0_Pin=0x00040003
[20:10:04.655]    TraceD1_Pin=0x00040004
[20:10:04.655]    TraceD2_Pin=0x00040005
[20:10:04.655]    TraceD3_Pin=0x00040006
[20:10:04.655]  </debugvars>
[20:10:04.655]  
[20:10:04.655]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:10:04.656]    <block atomic="false" info="">
[20:10:04.656]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:10:04.656]        // -> [traceSWO <= 0x00000001]
[20:10:04.656]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:10:04.656]        // -> [traceTPIU <= 0x00000000]
[20:10:04.656]    </block>
[20:10:04.656]    <control if="traceSWO" while="" timeout="0" info="">
[20:10:04.657]      // if-block "traceSWO"
[20:10:04.657]        // =>  TRUE
[20:10:04.657]      <block atomic="false" info="">
[20:10:04.657]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:10:04.657]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:10:04.657]            <block atomic="false" info="">
[20:10:04.657]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:10:04.657]                // -> [dbgmcu_val <= 0x00000000]
[20:10:04.657]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:10:04.658]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:10:04.658]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:10:04.658]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.658]                // -> [dbgmcu_val <= 0x00000007]
[20:10:04.658]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:10:04.659]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:10:04.659]              Sequence("ConfigureTraceSWOPin");
[20:10:04.659]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:10:04.659]                  <block atomic="false" info="">
[20:10:04.659]                    __var pin     = 0;
[20:10:04.659]                      // -> [pin <= 0x00000000]
[20:10:04.660]                    __var port    = 0;
[20:10:04.660]                      // -> [port <= 0x00000000]
[20:10:04.660]                    __var portAdr = 0;
[20:10:04.660]                      // -> [portAdr <= 0x00000000]
[20:10:04.660]                    __var pos     = 0;
[20:10:04.660]                      // -> [pos <= 0x00000000]
[20:10:04.660]                    __var SWO_Pin = 0x00010003;          // PB3
[20:10:04.660]                      // -> [SWO_Pin <= 0x00010003]
[20:10:04.660]                  </block>
[20:10:04.661]                  <block atomic="false" info="configure SWO">
[20:10:04.661]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:10:04.661]                      // -> [pin <= 0x00000003]
[20:10:04.661]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:10:04.661]                      // -> [port <= 0x00000001]
[20:10:04.661]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:10:04.661]                      // -> [portAdr <= 0x40020400]
[20:10:04.662]                    pos = pin * 2;
[20:10:04.662]                      // -> [pos <= 0x00000006]
[20:10:04.662]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:10:04.662]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.663]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.663]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:10:04.663]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.664]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.664]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:10:04.664]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.665]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.665]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:10:04.665]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.666]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.666]                  </block>
[20:10:04.666]                  <control if="pin <  8" while="" timeout="0" info="">
[20:10:04.666]                    // if-block "pin <  8"
[20:10:04.666]                      // =>  TRUE
[20:10:04.666]                    <block atomic="false" info="">
[20:10:04.666]                      pos = ((pin    ) & 7) * 4;
[20:10:04.666]                        // -> [pos <= 0x0000000C]
[20:10:04.667]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:10:04.667]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.667]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.668]                    </block>
[20:10:04.668]                    // end if-block "pin <  8"
[20:10:04.668]                  </control>
[20:10:04.668]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:10:04.668]                    // if-block "pin >= 8"
[20:10:04.668]                      // =>  FALSE
[20:10:04.668]                    // skip if-block "pin >= 8"
[20:10:04.668]                  </control>
[20:10:04.669]                </sequence>
[20:10:04.669]            </block>
[20:10:04.669]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:10:04.669]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:10:04.669]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:10:04.669]            </block>
[20:10:04.670]          </sequence>
[20:10:04.670]      </block>
[20:10:04.670]      // end if-block "traceSWO"
[20:10:04.670]    </control>
[20:10:04.670]    <control if="traceTPIU" while="" timeout="0" info="">
[20:10:04.670]      // if-block "traceTPIU"
[20:10:04.670]        // =>  FALSE
[20:10:04.671]      // skip if-block "traceTPIU"
[20:10:04.671]    </control>
[20:10:04.671]  </sequence>
[20:10:04.671]  
[20:18:29.784]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:18:29.784]  
[20:18:29.784]  <debugvars>
[20:18:29.785]    // Pre-defined
[20:18:29.785]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:18:29.785]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:18:29.785]    __dp=0x00000000
[20:18:29.785]    __ap=0x00000000
[20:18:29.785]    __traceout=0x00000001      (SWO Trace)
[20:18:29.785]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:18:29.785]    __FlashAddr=0x00000000
[20:18:29.785]    __FlashLen=0x00000000
[20:18:29.786]    __FlashArg=0x00000000
[20:18:29.786]    __FlashOp=0x00000000
[20:18:29.786]    __Result=0x00000000
[20:18:29.786]    
[20:18:29.786]    // User-defined
[20:18:29.786]    DbgMCU_CR=0x00000007
[20:18:29.786]    DbgMCU_APB1_Fz=0x00000000
[20:18:29.786]    DbgMCU_APB2_Fz=0x00000000
[20:18:29.787]    TraceClk_Pin=0x00040002
[20:18:29.787]    TraceD0_Pin=0x00040003
[20:18:29.787]    TraceD1_Pin=0x00040004
[20:18:29.787]    TraceD2_Pin=0x00040005
[20:18:29.787]    TraceD3_Pin=0x00040006
[20:18:29.787]  </debugvars>
[20:18:29.787]  
[20:18:29.787]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:18:29.788]    <block atomic="false" info="">
[20:18:29.788]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:18:29.788]        // -> [traceSWO <= 0x00000001]
[20:18:29.788]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:18:29.788]        // -> [traceTPIU <= 0x00000000]
[20:18:29.788]    </block>
[20:18:29.788]    <control if="traceSWO" while="" timeout="0" info="">
[20:18:29.788]      // if-block "traceSWO"
[20:18:29.789]        // =>  TRUE
[20:18:29.789]      <block atomic="false" info="">
[20:18:29.789]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:18:29.789]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:18:29.789]            <block atomic="false" info="">
[20:18:29.789]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:18:29.789]                // -> [dbgmcu_val <= 0x00000000]
[20:18:29.789]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:18:29.789]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:18:29.790]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:18:29.790]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.790]                // -> [dbgmcu_val <= 0x00000007]
[20:18:29.790]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:18:29.791]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:18:29.791]              Sequence("ConfigureTraceSWOPin");
[20:18:29.791]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:18:29.791]                  <block atomic="false" info="">
[20:18:29.791]                    __var pin     = 0;
[20:18:29.791]                      // -> [pin <= 0x00000000]
[20:18:29.791]                    __var port    = 0;
[20:18:29.791]                      // -> [port <= 0x00000000]
[20:18:29.791]                    __var portAdr = 0;
[20:18:29.792]                      // -> [portAdr <= 0x00000000]
[20:18:29.792]                    __var pos     = 0;
[20:18:29.792]                      // -> [pos <= 0x00000000]
[20:18:29.792]                    __var SWO_Pin = 0x00010003;          // PB3
[20:18:29.792]                      // -> [SWO_Pin <= 0x00010003]
[20:18:29.792]                  </block>
[20:18:29.792]                  <block atomic="false" info="configure SWO">
[20:18:29.793]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:18:29.793]                      // -> [pin <= 0x00000003]
[20:18:29.793]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:18:29.793]                      // -> [port <= 0x00000001]
[20:18:29.793]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:18:29.793]                      // -> [portAdr <= 0x40020400]
[20:18:29.793]                    pos = pin * 2;
[20:18:29.793]                      // -> [pos <= 0x00000006]
[20:18:29.793]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:18:29.794]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.795]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.795]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:18:29.795]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.796]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.796]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:18:29.796]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.796]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.797]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:18:29.797]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.797]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.797]                  </block>
[20:18:29.798]                  <control if="pin <  8" while="" timeout="0" info="">
[20:18:29.798]                    // if-block "pin <  8"
[20:18:29.798]                      // =>  TRUE
[20:18:29.798]                    <block atomic="false" info="">
[20:18:29.798]                      pos = ((pin    ) & 7) * 4;
[20:18:29.798]                        // -> [pos <= 0x0000000C]
[20:18:29.798]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:18:29.799]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.799]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.799]                    </block>
[20:18:29.799]                    // end if-block "pin <  8"
[20:18:29.800]                  </control>
[20:18:29.800]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:18:29.800]                    // if-block "pin >= 8"
[20:18:29.800]                      // =>  FALSE
[20:18:29.800]                    // skip if-block "pin >= 8"
[20:18:29.800]                  </control>
[20:18:29.800]                </sequence>
[20:18:29.801]            </block>
[20:18:29.801]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:18:29.801]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:18:29.801]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:18:29.802]            </block>
[20:18:29.802]          </sequence>
[20:18:29.802]      </block>
[20:18:29.802]      // end if-block "traceSWO"
[20:18:29.802]    </control>
[20:18:29.802]    <control if="traceTPIU" while="" timeout="0" info="">
[20:18:29.802]      // if-block "traceTPIU"
[20:18:29.802]        // =>  FALSE
[20:18:29.802]      // skip if-block "traceTPIU"
[20:18:29.803]    </control>
[20:18:29.803]  </sequence>
[20:18:29.803]  
[20:19:39.215]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:19:39.215]  
[20:19:39.215]  <debugvars>
[20:19:39.215]    // Pre-defined
[20:19:39.215]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:19:39.216]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:19:39.216]    __dp=0x00000000
[20:19:39.216]    __ap=0x00000000
[20:19:39.216]    __traceout=0x00000001      (SWO Trace)
[20:19:39.216]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:19:39.216]    __FlashAddr=0x00000000
[20:19:39.216]    __FlashLen=0x00000000
[20:19:39.216]    __FlashArg=0x00000000
[20:19:39.217]    __FlashOp=0x00000000
[20:19:39.217]    __Result=0x00000000
[20:19:39.217]    
[20:19:39.217]    // User-defined
[20:19:39.217]    DbgMCU_CR=0x00000007
[20:19:39.217]    DbgMCU_APB1_Fz=0x00000000
[20:19:39.217]    DbgMCU_APB2_Fz=0x00000000
[20:19:39.218]    TraceClk_Pin=0x00040002
[20:19:39.218]    TraceD0_Pin=0x00040003
[20:19:39.218]    TraceD1_Pin=0x00040004
[20:19:39.218]    TraceD2_Pin=0x00040005
[20:19:39.218]    TraceD3_Pin=0x00040006
[20:19:39.218]  </debugvars>
[20:19:39.218]  
[20:19:39.218]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:19:39.218]    <block atomic="false" info="">
[20:19:39.219]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:19:39.219]        // -> [traceSWO <= 0x00000001]
[20:19:39.219]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:19:39.219]        // -> [traceTPIU <= 0x00000000]
[20:19:39.219]    </block>
[20:19:39.219]    <control if="traceSWO" while="" timeout="0" info="">
[20:19:39.220]      // if-block "traceSWO"
[20:19:39.220]        // =>  TRUE
[20:19:39.220]      <block atomic="false" info="">
[20:19:39.220]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:19:39.220]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:19:39.220]            <block atomic="false" info="">
[20:19:39.220]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:19:39.221]                // -> [dbgmcu_val <= 0x00000000]
[20:19:39.221]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:19:39.221]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:19:39.221]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:19:39.221]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.222]                // -> [dbgmcu_val <= 0x00000007]
[20:19:39.222]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:19:39.222]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:19:39.222]              Sequence("ConfigureTraceSWOPin");
[20:19:39.222]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:19:39.222]                  <block atomic="false" info="">
[20:19:39.222]                    __var pin     = 0;
[20:19:39.223]                      // -> [pin <= 0x00000000]
[20:19:39.223]                    __var port    = 0;
[20:19:39.223]                      // -> [port <= 0x00000000]
[20:19:39.223]                    __var portAdr = 0;
[20:19:39.223]                      // -> [portAdr <= 0x00000000]
[20:19:39.223]                    __var pos     = 0;
[20:19:39.223]                      // -> [pos <= 0x00000000]
[20:19:39.223]                    __var SWO_Pin = 0x00010003;          // PB3
[20:19:39.224]                      // -> [SWO_Pin <= 0x00010003]
[20:19:39.224]                  </block>
[20:19:39.224]                  <block atomic="false" info="configure SWO">
[20:19:39.224]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:19:39.224]                      // -> [pin <= 0x00000003]
[20:19:39.224]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:19:39.224]                      // -> [port <= 0x00000001]
[20:19:39.225]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:19:39.225]                      // -> [portAdr <= 0x40020400]
[20:19:39.225]                    pos = pin * 2;
[20:19:39.225]                      // -> [pos <= 0x00000006]
[20:19:39.225]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:19:39.226]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.226]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.226]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:19:39.226]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.227]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.227]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:19:39.227]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.228]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.228]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:19:39.228]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.229]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.229]                  </block>
[20:19:39.229]                  <control if="pin <  8" while="" timeout="0" info="">
[20:19:39.229]                    // if-block "pin <  8"
[20:19:39.229]                      // =>  TRUE
[20:19:39.230]                    <block atomic="false" info="">
[20:19:39.230]                      pos = ((pin    ) & 7) * 4;
[20:19:39.230]                        // -> [pos <= 0x0000000C]
[20:19:39.230]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:19:39.230]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.231]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.231]                    </block>
[20:19:39.231]                    // end if-block "pin <  8"
[20:19:39.231]                  </control>
[20:19:39.231]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:19:39.231]                    // if-block "pin >= 8"
[20:19:39.232]                      // =>  FALSE
[20:19:39.232]                    // skip if-block "pin >= 8"
[20:19:39.232]                  </control>
[20:19:39.232]                </sequence>
[20:19:39.232]            </block>
[20:19:39.232]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:19:39.232]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:19:39.233]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:39.233]            </block>
[20:19:39.233]          </sequence>
[20:19:39.233]      </block>
[20:19:39.233]      // end if-block "traceSWO"
[20:19:39.233]    </control>
[20:19:39.233]    <control if="traceTPIU" while="" timeout="0" info="">
[20:19:39.234]      // if-block "traceTPIU"
[20:19:39.234]        // =>  FALSE
[20:19:39.234]      // skip if-block "traceTPIU"
[20:19:39.234]    </control>
[20:19:39.234]  </sequence>
[20:19:39.234]  
[20:19:50.573]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:19:50.573]  
[20:19:50.573]  <debugvars>
[20:19:50.573]    // Pre-defined
[20:19:50.573]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:19:50.574]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:19:50.574]    __dp=0x00000000
[20:19:50.574]    __ap=0x00000000
[20:19:50.574]    __traceout=0x00000001      (SWO Trace)
[20:19:50.574]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:19:50.575]    __FlashAddr=0x00000000
[20:19:50.575]    __FlashLen=0x00000000
[20:19:50.575]    __FlashArg=0x00000000
[20:19:50.575]    __FlashOp=0x00000000
[20:19:50.575]    __Result=0x00000000
[20:19:50.576]    
[20:19:50.576]    // User-defined
[20:19:50.576]    DbgMCU_CR=0x00000007
[20:19:50.576]    DbgMCU_APB1_Fz=0x00000000
[20:19:50.576]    DbgMCU_APB2_Fz=0x00000000
[20:19:50.576]    TraceClk_Pin=0x00040002
[20:19:50.577]    TraceD0_Pin=0x00040003
[20:19:50.577]    TraceD1_Pin=0x00040004
[20:19:50.577]    TraceD2_Pin=0x00040005
[20:19:50.577]    TraceD3_Pin=0x00040006
[20:19:50.577]  </debugvars>
[20:19:50.578]  
[20:19:50.578]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:19:50.578]    <block atomic="false" info="">
[20:19:50.578]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:19:50.578]        // -> [traceSWO <= 0x00000001]
[20:19:50.578]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:19:50.578]        // -> [traceTPIU <= 0x00000000]
[20:19:50.579]    </block>
[20:19:50.579]    <control if="traceSWO" while="" timeout="0" info="">
[20:19:50.579]      // if-block "traceSWO"
[20:19:50.579]        // =>  TRUE
[20:19:50.579]      <block atomic="false" info="">
[20:19:50.579]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:19:50.579]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:19:50.580]            <block atomic="false" info="">
[20:19:50.580]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:19:50.580]                // -> [dbgmcu_val <= 0x00000000]
[20:19:50.580]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:19:50.580]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:19:50.580]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:19:50.581]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.581]                // -> [dbgmcu_val <= 0x00000007]
[20:19:50.581]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:19:50.581]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:19:50.581]              Sequence("ConfigureTraceSWOPin");
[20:19:50.581]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:19:50.582]                  <block atomic="false" info="">
[20:19:50.582]                    __var pin     = 0;
[20:19:50.582]                      // -> [pin <= 0x00000000]
[20:19:50.582]                    __var port    = 0;
[20:19:50.582]                      // -> [port <= 0x00000000]
[20:19:50.582]                    __var portAdr = 0;
[20:19:50.582]                      // -> [portAdr <= 0x00000000]
[20:19:50.582]                    __var pos     = 0;
[20:19:50.583]                      // -> [pos <= 0x00000000]
[20:19:50.583]                    __var SWO_Pin = 0x00010003;          // PB3
[20:19:50.583]                      // -> [SWO_Pin <= 0x00010003]
[20:19:50.583]                  </block>
[20:19:50.583]                  <block atomic="false" info="configure SWO">
[20:19:50.583]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:19:50.583]                      // -> [pin <= 0x00000003]
[20:19:50.584]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:19:50.584]                      // -> [port <= 0x00000001]
[20:19:50.584]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:19:50.584]                      // -> [portAdr <= 0x40020400]
[20:19:50.584]                    pos = pin * 2;
[20:19:50.584]                      // -> [pos <= 0x00000006]
[20:19:50.584]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:19:50.585]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.585]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.585]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:19:50.586]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.586]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.586]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:19:50.587]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.587]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.587]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:19:50.588]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.588]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.588]                  </block>
[20:19:50.588]                  <control if="pin <  8" while="" timeout="0" info="">
[20:19:50.589]                    // if-block "pin <  8"
[20:19:50.589]                      // =>  TRUE
[20:19:50.589]                    <block atomic="false" info="">
[20:19:50.589]                      pos = ((pin    ) & 7) * 4;
[20:19:50.589]                        // -> [pos <= 0x0000000C]
[20:19:50.589]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:19:50.590]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.590]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.590]                    </block>
[20:19:50.590]                    // end if-block "pin <  8"
[20:19:50.590]                  </control>
[20:19:50.591]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:19:50.591]                    // if-block "pin >= 8"
[20:19:50.591]                      // =>  FALSE
[20:19:50.591]                    // skip if-block "pin >= 8"
[20:19:50.591]                  </control>
[20:19:50.591]                </sequence>
[20:19:50.591]            </block>
[20:19:50.592]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:19:50.592]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:19:50.592]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:19:50.592]            </block>
[20:19:50.592]          </sequence>
[20:19:50.592]      </block>
[20:19:50.593]      // end if-block "traceSWO"
[20:19:50.593]    </control>
[20:19:50.593]    <control if="traceTPIU" while="" timeout="0" info="">
[20:19:50.593]      // if-block "traceTPIU"
[20:19:50.593]        // =>  FALSE
[20:19:50.593]      // skip if-block "traceTPIU"
[20:19:50.593]    </control>
[20:19:50.593]  </sequence>
[20:19:50.594]  
[20:22:19.922]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:22:19.922]  
[20:22:19.922]  <debugvars>
[20:22:19.922]    // Pre-defined
[20:22:19.923]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:19.923]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:22:19.923]    __dp=0x00000000
[20:22:19.923]    __ap=0x00000000
[20:22:19.924]    __traceout=0x00000001      (SWO Trace)
[20:22:19.924]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:19.924]    __FlashAddr=0x00000000
[20:22:19.924]    __FlashLen=0x00000000
[20:22:19.924]    __FlashArg=0x00000000
[20:22:19.925]    __FlashOp=0x00000000
[20:22:19.925]    __Result=0x00000000
[20:22:19.925]    
[20:22:19.925]    // User-defined
[20:22:19.925]    DbgMCU_CR=0x00000007
[20:22:19.926]    DbgMCU_APB1_Fz=0x00000000
[20:22:19.926]    DbgMCU_APB2_Fz=0x00000000
[20:22:19.926]    TraceClk_Pin=0x00040002
[20:22:19.926]    TraceD0_Pin=0x00040003
[20:22:19.926]    TraceD1_Pin=0x00040004
[20:22:19.927]    TraceD2_Pin=0x00040005
[20:22:19.927]    TraceD3_Pin=0x00040006
[20:22:19.927]  </debugvars>
[20:22:19.927]  
[20:22:19.927]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:22:19.927]    <block atomic="false" info="">
[20:22:19.928]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:22:19.928]        // -> [traceSWO <= 0x00000001]
[20:22:19.928]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:22:19.928]        // -> [traceTPIU <= 0x00000000]
[20:22:19.929]    </block>
[20:22:19.929]    <control if="traceSWO" while="" timeout="0" info="">
[20:22:19.929]      // if-block "traceSWO"
[20:22:19.929]        // =>  TRUE
[20:22:19.929]      <block atomic="false" info="">
[20:22:19.929]        Sequence("DisableTraceSWO");
[20:22:19.930]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:22:19.930]            <block atomic="false" info="">
[20:22:19.930]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:22:19.930]                // -> [dbgmcu_val <= 0x00000000]
[20:22:19.930]            </block>
[20:22:19.930]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:22:19.931]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:22:19.931]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:22:19.931]                // -> [dbgmcu_val <= 0x00000007]
[20:22:19.932]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:22:19.932]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:19.933]            </block>
[20:22:19.933]          </sequence>
[20:22:19.933]      </block>
[20:22:19.933]      // end if-block "traceSWO"
[20:22:19.933]    </control>
[20:22:19.933]    <control if="traceTPIU" while="" timeout="0" info="">
[20:22:19.933]      // if-block "traceTPIU"
[20:22:19.934]        // =>  FALSE
[20:22:19.934]      // skip if-block "traceTPIU"
[20:22:19.934]    </control>
[20:22:19.934]  </sequence>
[20:22:19.934]  
[20:22:22.286]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:22:22.286]  
[20:22:22.286]  <debugvars>
[20:22:22.286]    // Pre-defined
[20:22:22.287]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:22.287]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:22:22.287]    __dp=0x00000000
[20:22:22.287]    __ap=0x00000000
[20:22:22.287]    __traceout=0x00000001      (SWO Trace)
[20:22:22.288]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:22.288]    __FlashAddr=0x00000000
[20:22:22.288]    __FlashLen=0x00000000
[20:22:22.288]    __FlashArg=0x00000000
[20:22:22.288]    __FlashOp=0x00000000
[20:22:22.288]    __Result=0x00000000
[20:22:22.289]    
[20:22:22.289]    // User-defined
[20:22:22.289]    DbgMCU_CR=0x00000007
[20:22:22.289]    DbgMCU_APB1_Fz=0x00000000
[20:22:22.289]    DbgMCU_APB2_Fz=0x00000000
[20:22:22.289]    TraceClk_Pin=0x00040002
[20:22:22.289]    TraceD0_Pin=0x00040003
[20:22:22.290]    TraceD1_Pin=0x00040004
[20:22:22.290]    TraceD2_Pin=0x00040005
[20:22:22.290]    TraceD3_Pin=0x00040006
[20:22:22.290]  </debugvars>
[20:22:22.290]  
[20:22:22.290]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:22:22.290]    <block atomic="false" info="">
[20:22:22.291]      Sequence("CheckID");
[20:22:22.291]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:22:22.291]          <block atomic="false" info="">
[20:22:22.291]            __var pidr1 = 0;
[20:22:22.291]              // -> [pidr1 <= 0x00000000]
[20:22:22.291]            __var pidr2 = 0;
[20:22:22.291]              // -> [pidr2 <= 0x00000000]
[20:22:22.292]            __var jep106id = 0;
[20:22:22.292]              // -> [jep106id <= 0x00000000]
[20:22:22.292]            __var ROMTableBase = 0;
[20:22:22.292]              // -> [ROMTableBase <= 0x00000000]
[20:22:22.292]            __ap = 0;      // AHB-AP
[20:22:22.292]              // -> [__ap <= 0x00000000]
[20:22:22.292]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:22:22.293]              // -> [ReadAP(0x000000F8) => 0xE00FD003]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.293]              // -> [ROMTableBase <= 0xE00FD000]
[20:22:22.293]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:22:22.293]              // -> [Read32(0xE00FDFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.294]              // -> [pidr1 <= 0x00000004]
[20:22:22.294]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:22:22.294]              // -> [Read32(0xE00FDFE8) => 0x0000001A]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.294]              // -> [pidr2 <= 0x0000001A]
[20:22:22.294]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:22:22.295]              // -> [jep106id <= 0x00000020]
[20:22:22.295]          </block>
[20:22:22.295]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:22:22.295]            // if-block "jep106id != 0x20"
[20:22:22.295]              // =>  FALSE
[20:22:22.295]            // skip if-block "jep106id != 0x20"
[20:22:22.295]          </control>
[20:22:22.295]        </sequence>
[20:22:22.296]    </block>
[20:22:22.296]  </sequence>
[20:22:22.296]  
[20:22:22.311]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:22:22.311]  
[20:22:22.312]  <debugvars>
[20:22:22.312]    // Pre-defined
[20:22:22.312]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:22.312]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:22:22.312]    __dp=0x00000000
[20:22:22.312]    __ap=0x00000000
[20:22:22.312]    __traceout=0x00000001      (SWO Trace)
[20:22:22.313]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:22.313]    __FlashAddr=0x00000000
[20:22:22.313]    __FlashLen=0x00000000
[20:22:22.313]    __FlashArg=0x00000000
[20:22:22.313]    __FlashOp=0x00000000
[20:22:22.313]    __Result=0x00000000
[20:22:22.314]    
[20:22:22.314]    // User-defined
[20:22:22.314]    DbgMCU_CR=0x00000007
[20:22:22.314]    DbgMCU_APB1_Fz=0x00000000
[20:22:22.314]    DbgMCU_APB2_Fz=0x00000000
[20:22:22.314]    TraceClk_Pin=0x00040002
[20:22:22.314]    TraceD0_Pin=0x00040003
[20:22:22.315]    TraceD1_Pin=0x00040004
[20:22:22.315]    TraceD2_Pin=0x00040005
[20:22:22.315]    TraceD3_Pin=0x00040006
[20:22:22.315]  </debugvars>
[20:22:22.315]  
[20:22:22.315]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:22:22.315]    <block atomic="false" info="">
[20:22:22.315]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:22:22.316]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.316]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:22:22.316]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.317]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:22:22.317]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.317]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:22:22.318]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.318]    </block>
[20:22:22.318]  </sequence>
[20:22:22.318]  
[20:22:22.335]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:22:22.335]  
[20:22:22.335]  <debugvars>
[20:22:22.335]    // Pre-defined
[20:22:22.335]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:22.336]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:22:22.336]    __dp=0x00000000
[20:22:22.336]    __ap=0x00000000
[20:22:22.336]    __traceout=0x00000001      (SWO Trace)
[20:22:22.336]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:22.336]    __FlashAddr=0x00000000
[20:22:22.337]    __FlashLen=0x00000000
[20:22:22.337]    __FlashArg=0x00000000
[20:22:22.337]    __FlashOp=0x00000000
[20:22:22.337]    __Result=0x00000000
[20:22:22.337]    
[20:22:22.337]    // User-defined
[20:22:22.337]    DbgMCU_CR=0x00000007
[20:22:22.337]    DbgMCU_APB1_Fz=0x00000000
[20:22:22.337]    DbgMCU_APB2_Fz=0x00000000
[20:22:22.338]    TraceClk_Pin=0x00040002
[20:22:22.338]    TraceD0_Pin=0x00040003
[20:22:22.338]    TraceD1_Pin=0x00040004
[20:22:22.338]    TraceD2_Pin=0x00040005
[20:22:22.338]    TraceD3_Pin=0x00040006
[20:22:22.338]  </debugvars>
[20:22:22.338]  
[20:22:22.339]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:22:22.339]    <block atomic="false" info="">
[20:22:22.339]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:22:22.339]        // -> [traceSWO <= 0x00000001]
[20:22:22.339]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:22:22.339]        // -> [traceTPIU <= 0x00000000]
[20:22:22.339]    </block>
[20:22:22.339]    <control if="traceSWO" while="" timeout="0" info="">
[20:22:22.340]      // if-block "traceSWO"
[20:22:22.340]        // =>  TRUE
[20:22:22.340]      <block atomic="false" info="">
[20:22:22.340]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:22:22.340]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:22:22.340]            <block atomic="false" info="">
[20:22:22.340]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:22:22.341]                // -> [dbgmcu_val <= 0x00000000]
[20:22:22.341]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:22:22.341]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:22:22.341]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:22:22.341]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.342]                // -> [dbgmcu_val <= 0x00000007]
[20:22:22.342]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:22:22.342]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:22:22.342]              Sequence("ConfigureTraceSWOPin");
[20:22:22.342]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:22:22.342]                  <block atomic="false" info="">
[20:22:22.342]                    __var pin     = 0;
[20:22:22.342]                      // -> [pin <= 0x00000000]
[20:22:22.343]                    __var port    = 0;
[20:22:22.343]                      // -> [port <= 0x00000000]
[20:22:22.343]                    __var portAdr = 0;
[20:22:22.343]                      // -> [portAdr <= 0x00000000]
[20:22:22.343]                    __var pos     = 0;
[20:22:22.343]                      // -> [pos <= 0x00000000]
[20:22:22.343]                    __var SWO_Pin = 0x00010003;          // PB3
[20:22:22.344]                      // -> [SWO_Pin <= 0x00010003]
[20:22:22.344]                  </block>
[20:22:22.344]                  <block atomic="false" info="configure SWO">
[20:22:22.344]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:22:22.344]                      // -> [pin <= 0x00000003]
[20:22:22.344]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:22:22.344]                      // -> [port <= 0x00000001]
[20:22:22.344]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:22:22.345]                      // -> [portAdr <= 0x40020400]
[20:22:22.345]                    pos = pin * 2;
[20:22:22.345]                      // -> [pos <= 0x00000006]
[20:22:22.345]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:22:22.345]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.346]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.346]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:22:22.346]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.347]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.347]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:22:22.347]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.348]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.348]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:22:22.348]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.349]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.349]                  </block>
[20:22:22.349]                  <control if="pin <  8" while="" timeout="0" info="">
[20:22:22.349]                    // if-block "pin <  8"
[20:22:22.349]                      // =>  TRUE
[20:22:22.349]                    <block atomic="false" info="">
[20:22:22.350]                      pos = ((pin    ) & 7) * 4;
[20:22:22.350]                        // -> [pos <= 0x0000000C]
[20:22:22.350]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:22:22.350]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.351]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.351]                    </block>
[20:22:22.351]                    // end if-block "pin <  8"
[20:22:22.351]                  </control>
[20:22:22.351]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:22:22.351]                    // if-block "pin >= 8"
[20:22:22.352]                      // =>  FALSE
[20:22:22.352]                    // skip if-block "pin >= 8"
[20:22:22.352]                  </control>
[20:22:22.352]                </sequence>
[20:22:22.352]            </block>
[20:22:22.352]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:22:22.352]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:22:22.353]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.353]            </block>
[20:22:22.353]          </sequence>
[20:22:22.353]      </block>
[20:22:22.353]      // end if-block "traceSWO"
[20:22:22.353]    </control>
[20:22:22.353]    <control if="traceTPIU" while="" timeout="0" info="">
[20:22:22.354]      // if-block "traceTPIU"
[20:22:22.354]        // =>  FALSE
[20:22:22.354]      // skip if-block "traceTPIU"
[20:22:22.354]    </control>
[20:22:22.354]  </sequence>
[20:22:22.354]  
[20:22:22.358]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:22:22.358]  
[20:22:22.358]  <debugvars>
[20:22:22.358]    // Pre-defined
[20:22:22.358]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:22.359]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:22:22.359]    __dp=0x00000000
[20:22:22.359]    __ap=0x00000000
[20:22:22.359]    __traceout=0x00000001      (SWO Trace)
[20:22:22.359]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:22.359]    __FlashAddr=0x00000000
[20:22:22.359]    __FlashLen=0x00000000
[20:22:22.360]    __FlashArg=0x00000000
[20:22:22.360]    __FlashOp=0x00000000
[20:22:22.360]    __Result=0x00000000
[20:22:22.360]    
[20:22:22.360]    // User-defined
[20:22:22.360]    DbgMCU_CR=0x00000007
[20:22:22.360]    DbgMCU_APB1_Fz=0x00000000
[20:22:22.360]    DbgMCU_APB2_Fz=0x00000000
[20:22:22.361]    TraceClk_Pin=0x00040002
[20:22:22.361]    TraceD0_Pin=0x00040003
[20:22:22.361]    TraceD1_Pin=0x00040004
[20:22:22.361]    TraceD2_Pin=0x00040005
[20:22:22.361]    TraceD3_Pin=0x00040006
[20:22:22.361]  </debugvars>
[20:22:22.361]  
[20:22:22.361]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:22:22.362]    <block atomic="false" info="">
[20:22:22.362]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:22:22.362]        // -> [traceSWO <= 0x00000001]
[20:22:22.362]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:22:22.362]        // -> [traceTPIU <= 0x00000000]
[20:22:22.362]    </block>
[20:22:22.362]    <control if="traceSWO" while="" timeout="0" info="">
[20:22:22.363]      // if-block "traceSWO"
[20:22:22.363]        // =>  TRUE
[20:22:22.363]      <block atomic="false" info="">
[20:22:22.363]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:22:22.363]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:22:22.363]            <block atomic="false" info="">
[20:22:22.363]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:22:22.363]                // -> [dbgmcu_val <= 0x00000000]
[20:22:22.364]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:22:22.364]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:22:22.364]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:22:22.364]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.364]                // -> [dbgmcu_val <= 0x00000007]
[20:22:22.365]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:22:22.365]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:22:22.365]              Sequence("ConfigureTraceSWOPin");
[20:22:22.365]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:22:22.365]                  <block atomic="false" info="">
[20:22:22.365]                    __var pin     = 0;
[20:22:22.366]                      // -> [pin <= 0x00000000]
[20:22:22.366]                    __var port    = 0;
[20:22:22.366]                      // -> [port <= 0x00000000]
[20:22:22.366]                    __var portAdr = 0;
[20:22:22.366]                      // -> [portAdr <= 0x00000000]
[20:22:22.366]                    __var pos     = 0;
[20:22:22.366]                      // -> [pos <= 0x00000000]
[20:22:22.366]                    __var SWO_Pin = 0x00010003;          // PB3
[20:22:22.366]                      // -> [SWO_Pin <= 0x00010003]
[20:22:22.367]                  </block>
[20:22:22.367]                  <block atomic="false" info="configure SWO">
[20:22:22.367]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:22:22.367]                      // -> [pin <= 0x00000003]
[20:22:22.367]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:22:22.367]                      // -> [port <= 0x00000001]
[20:22:22.367]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:22:22.368]                      // -> [portAdr <= 0x40020400]
[20:22:22.368]                    pos = pin * 2;
[20:22:22.368]                      // -> [pos <= 0x00000006]
[20:22:22.368]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:22:22.368]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.369]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.369]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:22:22.369]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.370]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.370]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:22:22.370]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.371]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.371]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:22:22.371]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.372]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.372]                  </block>
[20:22:22.372]                  <control if="pin <  8" while="" timeout="0" info="">
[20:22:22.372]                    // if-block "pin <  8"
[20:22:22.372]                      // =>  TRUE
[20:22:22.372]                    <block atomic="false" info="">
[20:22:22.373]                      pos = ((pin    ) & 7) * 4;
[20:22:22.373]                        // -> [pos <= 0x0000000C]
[20:22:22.373]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:22:22.373]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.374]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.374]                    </block>
[20:22:22.374]                    // end if-block "pin <  8"
[20:22:22.374]                  </control>
[20:22:22.374]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:22:22.375]                    // if-block "pin >= 8"
[20:22:22.375]                      // =>  FALSE
[20:22:22.375]                    // skip if-block "pin >= 8"
[20:22:22.375]                  </control>
[20:22:22.375]                </sequence>
[20:22:22.375]            </block>
[20:22:22.375]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:22:22.375]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:22:22.376]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.376]            </block>
[20:22:22.376]          </sequence>
[20:22:22.376]      </block>
[20:22:22.376]      // end if-block "traceSWO"
[20:22:22.377]    </control>
[20:22:22.377]    <control if="traceTPIU" while="" timeout="0" info="">
[20:22:22.377]      // if-block "traceTPIU"
[20:22:22.377]        // =>  FALSE
[20:22:22.377]      // skip if-block "traceTPIU"
[20:22:22.377]    </control>
[20:22:22.377]  </sequence>
[20:22:22.377]  
[20:22:22.596]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:22:22.596]  
[20:22:22.596]  <debugvars>
[20:22:22.597]    // Pre-defined
[20:22:22.597]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:22:22.597]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:22:22.597]    __dp=0x00000000
[20:22:22.597]    __ap=0x00000000
[20:22:22.597]    __traceout=0x00000001      (SWO Trace)
[20:22:22.597]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:22:22.598]    __FlashAddr=0x00000000
[20:22:22.598]    __FlashLen=0x00000000
[20:22:22.598]    __FlashArg=0x00000000
[20:22:22.598]    __FlashOp=0x00000000
[20:22:22.598]    __Result=0x00000000
[20:22:22.598]    
[20:22:22.598]    // User-defined
[20:22:22.599]    DbgMCU_CR=0x00000007
[20:22:22.599]    DbgMCU_APB1_Fz=0x00000000
[20:22:22.599]    DbgMCU_APB2_Fz=0x00000000
[20:22:22.599]    TraceClk_Pin=0x00040002
[20:22:22.599]    TraceD0_Pin=0x00040003
[20:22:22.599]    TraceD1_Pin=0x00040004
[20:22:22.600]    TraceD2_Pin=0x00040005
[20:22:22.600]    TraceD3_Pin=0x00040006
[20:22:22.600]  </debugvars>
[20:22:22.600]  
[20:22:22.600]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:22:22.600]    <block atomic="false" info="">
[20:22:22.601]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:22:22.601]        // -> [traceSWO <= 0x00000001]
[20:22:22.601]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:22:22.601]        // -> [traceTPIU <= 0x00000000]
[20:22:22.601]    </block>
[20:22:22.601]    <control if="traceSWO" while="" timeout="0" info="">
[20:22:22.601]      // if-block "traceSWO"
[20:22:22.602]        // =>  TRUE
[20:22:22.602]      <block atomic="false" info="">
[20:22:22.602]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:22:22.602]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:22:22.602]            <block atomic="false" info="">
[20:22:22.602]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:22:22.602]                // -> [dbgmcu_val <= 0x00000000]
[20:22:22.603]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:22:22.603]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:22:22.603]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:22:22.603]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.603]                // -> [dbgmcu_val <= 0x00000007]
[20:22:22.604]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:22:22.604]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:22:22.604]              Sequence("ConfigureTraceSWOPin");
[20:22:22.604]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:22:22.604]                  <block atomic="false" info="">
[20:22:22.604]                    __var pin     = 0;
[20:22:22.605]                      // -> [pin <= 0x00000000]
[20:22:22.605]                    __var port    = 0;
[20:22:22.605]                      // -> [port <= 0x00000000]
[20:22:22.605]                    __var portAdr = 0;
[20:22:22.605]                      // -> [portAdr <= 0x00000000]
[20:22:22.605]                    __var pos     = 0;
[20:22:22.605]                      // -> [pos <= 0x00000000]
[20:22:22.606]                    __var SWO_Pin = 0x00010003;          // PB3
[20:22:22.606]                      // -> [SWO_Pin <= 0x00010003]
[20:22:22.606]                  </block>
[20:22:22.606]                  <block atomic="false" info="configure SWO">
[20:22:22.606]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:22:22.606]                      // -> [pin <= 0x00000003]
[20:22:22.606]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:22:22.606]                      // -> [port <= 0x00000001]
[20:22:22.607]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:22:22.607]                      // -> [portAdr <= 0x40020400]
[20:22:22.607]                    pos = pin * 2;
[20:22:22.607]                      // -> [pos <= 0x00000006]
[20:22:22.607]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:22:22.607]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.608]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.608]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:22:22.609]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.609]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.609]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:22:22.610]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.610]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.610]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:22:22.610]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.611]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.611]                  </block>
[20:22:22.611]                  <control if="pin <  8" while="" timeout="0" info="">
[20:22:22.611]                    // if-block "pin <  8"
[20:22:22.611]                      // =>  TRUE
[20:22:22.611]                    <block atomic="false" info="">
[20:22:22.611]                      pos = ((pin    ) & 7) * 4;
[20:22:22.612]                        // -> [pos <= 0x0000000C]
[20:22:22.612]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:22:22.612]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.613]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.613]                    </block>
[20:22:22.613]                    // end if-block "pin <  8"
[20:22:22.613]                  </control>
[20:22:22.613]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:22:22.613]                    // if-block "pin >= 8"
[20:22:22.613]                      // =>  FALSE
[20:22:22.614]                    // skip if-block "pin >= 8"
[20:22:22.614]                  </control>
[20:22:22.614]                </sequence>
[20:22:22.614]            </block>
[20:22:22.614]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:22:22.614]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:22:22.615]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:22:22.615]            </block>
[20:22:22.615]          </sequence>
[20:22:22.615]      </block>
[20:22:22.615]      // end if-block "traceSWO"
[20:22:22.615]    </control>
[20:22:22.615]    <control if="traceTPIU" while="" timeout="0" info="">
[20:22:22.615]      // if-block "traceTPIU"
[20:22:22.616]        // =>  FALSE
[20:22:22.616]      // skip if-block "traceTPIU"
[20:22:22.616]    </control>
[20:22:22.616]  </sequence>
[20:22:22.616]  
[20:24:43.077]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:24:43.077]  
[20:24:43.078]  <debugvars>
[20:24:43.078]    // Pre-defined
[20:24:43.078]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:24:43.078]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:24:43.078]    __dp=0x00000000
[20:24:43.078]    __ap=0x00000000
[20:24:43.078]    __traceout=0x00000001      (SWO Trace)
[20:24:43.079]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:24:43.079]    __FlashAddr=0x00000000
[20:24:43.079]    __FlashLen=0x00000000
[20:24:43.079]    __FlashArg=0x00000000
[20:24:43.079]    __FlashOp=0x00000000
[20:24:43.079]    __Result=0x00000000
[20:24:43.080]    
[20:24:43.080]    // User-defined
[20:24:43.080]    DbgMCU_CR=0x00000007
[20:24:43.080]    DbgMCU_APB1_Fz=0x00000000
[20:24:43.080]    DbgMCU_APB2_Fz=0x00000000
[20:24:43.080]    TraceClk_Pin=0x00040002
[20:24:43.080]    TraceD0_Pin=0x00040003
[20:24:43.081]    TraceD1_Pin=0x00040004
[20:24:43.081]    TraceD2_Pin=0x00040005
[20:24:43.081]    TraceD3_Pin=0x00040006
[20:24:43.081]  </debugvars>
[20:24:43.081]  
[20:24:43.081]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:24:43.081]    <block atomic="false" info="">
[20:24:43.082]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:24:43.082]        // -> [traceSWO <= 0x00000001]
[20:24:43.082]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:24:43.082]        // -> [traceTPIU <= 0x00000000]
[20:24:43.082]    </block>
[20:24:43.082]    <control if="traceSWO" while="" timeout="0" info="">
[20:24:43.083]      // if-block "traceSWO"
[20:24:43.083]        // =>  TRUE
[20:24:43.083]      <block atomic="false" info="">
[20:24:43.083]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:24:43.083]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:24:43.083]            <block atomic="false" info="">
[20:24:43.083]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:24:43.084]                // -> [dbgmcu_val <= 0x00000000]
[20:24:43.084]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:24:43.084]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:24:43.084]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:24:43.084]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.085]                // -> [dbgmcu_val <= 0x00000007]
[20:24:43.085]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:24:43.085]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:24:43.085]              Sequence("ConfigureTraceSWOPin");
[20:24:43.085]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:24:43.085]                  <block atomic="false" info="">
[20:24:43.085]                    __var pin     = 0;
[20:24:43.085]                      // -> [pin <= 0x00000000]
[20:24:43.086]                    __var port    = 0;
[20:24:43.086]                      // -> [port <= 0x00000000]
[20:24:43.086]                    __var portAdr = 0;
[20:24:43.086]                      // -> [portAdr <= 0x00000000]
[20:24:43.086]                    __var pos     = 0;
[20:24:43.086]                      // -> [pos <= 0x00000000]
[20:24:43.086]                    __var SWO_Pin = 0x00010003;          // PB3
[20:24:43.086]                      // -> [SWO_Pin <= 0x00010003]
[20:24:43.087]                  </block>
[20:24:43.087]                  <block atomic="false" info="configure SWO">
[20:24:43.087]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:24:43.087]                      // -> [pin <= 0x00000003]
[20:24:43.087]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:24:43.087]                      // -> [port <= 0x00000001]
[20:24:43.087]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:24:43.087]                      // -> [portAdr <= 0x40020400]
[20:24:43.088]                    pos = pin * 2;
[20:24:43.088]                      // -> [pos <= 0x00000006]
[20:24:43.088]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:24:43.088]                      // -> [Read32(0x40023830) => 0x00100000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.089]                      // -> [Write32(0x40023830, 0x00100002)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.089]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:24:43.089]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.090]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.090]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:24:43.090]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.091]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.091]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:24:43.091]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.092]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.092]                  </block>
[20:24:43.092]                  <control if="pin <  8" while="" timeout="0" info="">
[20:24:43.092]                    // if-block "pin <  8"
[20:24:43.092]                      // =>  TRUE
[20:24:43.092]                    <block atomic="false" info="">
[20:24:43.092]                      pos = ((pin    ) & 7) * 4;
[20:24:43.093]                        // -> [pos <= 0x0000000C]
[20:24:43.093]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:24:43.093]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.093]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.094]                    </block>
[20:24:43.094]                    // end if-block "pin <  8"
[20:24:43.094]                  </control>
[20:24:43.094]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:24:43.094]                    // if-block "pin >= 8"
[20:24:43.094]                      // =>  FALSE
[20:24:43.094]                    // skip if-block "pin >= 8"
[20:24:43.094]                  </control>
[20:24:43.095]                </sequence>
[20:24:43.095]            </block>
[20:24:43.095]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:24:43.095]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:24:43.095]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:24:43.095]            </block>
[20:24:43.096]          </sequence>
[20:24:43.096]      </block>
[20:24:43.096]      // end if-block "traceSWO"
[20:24:43.096]    </control>
[20:24:43.096]    <control if="traceTPIU" while="" timeout="0" info="">
[20:24:43.096]      // if-block "traceTPIU"
[20:24:43.096]        // =>  FALSE
[20:24:43.096]      // skip if-block "traceTPIU"
[20:24:43.097]    </control>
[20:24:43.097]  </sequence>
[20:24:43.097]  
[20:31:49.373]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:31:49.373]  
[20:31:49.373]  <debugvars>
[20:31:49.374]    // Pre-defined
[20:31:49.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:31:49.374]    __connection=0x00010201    (Connection Type="Debug", Reset Type="System Reset", Connection Under HW Reset)
[20:31:49.374]    __dp=0x00000000
[20:31:49.374]    __ap=0x00000000
[20:31:49.374]    __traceout=0x00000001      (SWO Trace)
[20:31:49.374]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:31:49.375]    __FlashAddr=0x00000000
[20:31:49.375]    __FlashLen=0x00000000
[20:31:49.375]    __FlashArg=0x00000000
[20:31:49.375]    __FlashOp=0x00000000
[20:31:49.375]    __Result=0x00000000
[20:31:49.375]    
[20:31:49.375]    // User-defined
[20:31:49.375]    DbgMCU_CR=0x00000007
[20:31:49.376]    DbgMCU_APB1_Fz=0x00000000
[20:31:49.376]    DbgMCU_APB2_Fz=0x00000000
[20:31:49.376]    TraceClk_Pin=0x00040002
[20:31:49.376]    TraceD0_Pin=0x00040003
[20:31:49.376]    TraceD1_Pin=0x00040004
[20:31:49.376]    TraceD2_Pin=0x00040005
[20:31:49.376]    TraceD3_Pin=0x00040006
[20:31:49.377]  </debugvars>
[20:31:49.377]  
[20:31:49.377]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:31:49.377]    <block atomic="false" info="">
[20:31:49.377]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:31:49.377]        // -> [traceSWO <= 0x00000001]
[20:31:49.377]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:31:49.377]        // -> [traceTPIU <= 0x00000000]
[20:31:49.378]    </block>
[20:31:49.378]    <control if="traceSWO" while="" timeout="0" info="">
[20:31:49.378]      // if-block "traceSWO"
[20:31:49.378]        // =>  TRUE
[20:31:49.378]      <block atomic="false" info="">
[20:31:49.378]        Sequence("DisableTraceSWO");
[20:31:49.379]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:31:49.379]            <block atomic="false" info="">
[20:31:49.379]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:31:49.379]                // -> [dbgmcu_val <= 0x00000000]
[20:31:49.379]            </block>
[20:31:49.379]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:31:49.379]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:31:49.380]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:31:49.380]                // -> [dbgmcu_val <= 0x00000007]
[20:31:49.380]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:31:49.381]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:31:49.381]            </block>
[20:31:49.381]          </sequence>
[20:31:49.381]      </block>
[20:31:49.381]      // end if-block "traceSWO"
[20:31:49.381]    </control>
[20:31:49.381]    <control if="traceTPIU" while="" timeout="0" info="">
[20:31:49.382]      // if-block "traceTPIU"
[20:31:49.382]        // =>  FALSE
[20:31:49.382]      // skip if-block "traceTPIU"
[20:31:49.382]    </control>
[20:31:49.382]  </sequence>
[20:31:49.382]  
